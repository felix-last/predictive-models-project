*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                17.33 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O22OUX38
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O22OUX38 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[237197] MAX=1 EXCEEDMAXVALUE='' )[237201] )[237195]
VALIDCHOICES=(CHOICE1='Y' )[237199] )[237483] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[237205]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[237209] )[237207] )[237203] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[237213]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[237219] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[237217] )[237215] )[237211] )[237193]
1750966    proc freq data=EMWS8.Ensmbl26_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl26_VariableSet noprint;
1750967    table ROLE*LEVEL/out=WORK.Ensmbl26META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl26META;
1750968    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL26_VARIABLESET.
NOTE: The data set WORK.ENSMBL26META has 5 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1750969    proc print data=WORK.Ensmbl26META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl26META label noobs;
1750970    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1750971    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1750971  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1750971  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1750972    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1750973    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1750974    run;
 
NOTE: There were 5 observations read from the data set WORK.ENSMBL26META.
NOTE: The PROCEDURE PRINT printed page 1130.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1750975    title10;
MPRINT(EM_DIAGRAM):   title10;
1750976    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN
EMWS8.Neural3_TRAIN EMWS8.Neural3_TRAIN EMWS8 Neural3_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural3_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1751005    data WORK.Ensmbl26_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl26_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1751006    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1751007    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1751007  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1751007  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1751008       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1751008  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1751008  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1751009    set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL3_DEPVAR_DM( where=(_TYPE_="TARGET"));
1751010    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1751011    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1751012    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1751013    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1751014    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1751015    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1751016    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1751017    end;
MPRINT(EM_DIAGRAM):   end;
1751018    output;
MPRINT(EM_DIAGRAM):   output;
1751019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL26_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1751020    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1751021    proc print data=WORK.Ensmbl26_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl26_EVENT noobs label;
1751022    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1751023    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1751024    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1751025    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL26_EVENT.
NOTE: The PROCEDURE PRINT printed page 1131.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751026    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1751027    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural3_DepVar_DM noobs label;
1751028    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1751029    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1751030    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1751030  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1751030  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1751031    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1751032    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1751033    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL3_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1132.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751034    title10;
MPRINT(EM_DIAGRAM):   title10;
1751035    %let groupid =;
1751036    %let endGroupid =;
1751037    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1751038    set EMWS8.Neural9_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_EMINFO;
1751039    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1751039  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1751040    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1751041    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1751042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL9_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751043    %let groupid =;
1751044    %let endGroupid =;
1751045    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1751046    set EMWS8.Neural3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_EMINFO;
1751047    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1751047  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1751048    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1751049    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1751050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751051    %let groupid =;
1751052    %let endGroupid =;
1751053    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1751054    set EMWS8.Neural2_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_EMINFO;
1751055    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1751055  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1751056    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1751057    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1751058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL2_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751059    data WORK.Ensmbl26;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl26;
1751060    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1751061    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1751061  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1751062    nodeid="NEURAL9";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL9";
1751063    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1751064    output;
MPRINT(EM_DIAGRAM):   output;
1751065    nodeid="NEURAL3";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL3";
1751066    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1751067    output;
MPRINT(EM_DIAGRAM):   output;
1751068    nodeid="NEURAL2";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL2";
1751069    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1751070    output;
MPRINT(EM_DIAGRAM):   output;
1751071    ;
MPRINT(EM_DIAGRAM):   ;
1751072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL26 has 3 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751073    title;
MPRINT(EM_DIAGRAM):   title;
1751074    proc print data=WORK.Ensmbl26 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl26 label noobs;
1751075    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1751076    title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Maximum";
MPRINT(EM_DIAGRAM):   run;
1751077    run;
 
NOTE: There were 3 observations read from the data set WORK.ENSMBL26.
NOTE: The PROCEDURE PRINT printed page 1133.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751078    title9;
MPRINT(EM_DIAGRAM):   title9;
1751079    title10;
MPRINT(EM_DIAGRAM):   title10;
1751080    data WORK.M04DCQ6S;
MPRINT(EM_DIAGRAM):    data WORK.M04DCQ6S;
1751081    set WORK.M04DCQ6S;
MPRINT(EM_DIAGRAM):   set WORK.M04DCQ6S;
1751082    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1751083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M04DCQ6S.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M04DCQ6S has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1751084    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1751085    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1751086    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1751087    %macro DMDBClass;
1751088        DepVar(DESC)
1751089    %mend DMDBClass;
1751090    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1751091    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1751092    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1751093    %macro DMDBVar;
1751094
1751095    %mend DMDBVar;
1751096    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751097    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1751098    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751099    proc dmdb batch data=EMWS8.Neural9_TRAIN
1751100    dmdbcat=WORK.EM_DMDB
1751101    maxlevel = 513
1751102    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural9_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1751103    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1751104    target
1751105    DepVar
1751106    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1751107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL9_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1751108    quit;
1751109    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2N1U3Y3
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2N1U3Y3 new;
MPRINT(EM_DIAGRAM):   run;
1751211    filename emflow
1751211  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring NEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751212    *------------------------------------------------------------*;
1751213    * Ensmbl26: Scoring NEURAL9_TRAIN data;
1751214    *------------------------------------------------------------*;
1751215    data EMWS8.Ensmbl26_TRAIN
1751216    / view=EMWS8.Ensmbl26_TRAIN
1751217    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_TRAIN / view=EMWS8.Ensmbl26_TRAIN ;
1751218    set EMWS8.Neural9_TRAIN
1751219    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_TRAIN ;
1751220    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas.
1751221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751222   +* Ensmbl26: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Combine model for DepVar;
1751223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751224   +* Ensmbl26: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 1 of 3;
1751225   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751227   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1751228   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1751229   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1751230   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751232   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1751233   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1751234   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1751235   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751236   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751237   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1751238   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1751239   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1751240   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751241   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751242   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1751243   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1751244   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1751245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751246   +
1751247   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1751248   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1751248  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1751249   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1751250   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1751251   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1751252   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1751253   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1751254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751255   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1751256   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1751257   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1751258   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751260   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1751261   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751262   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1751263   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1751264   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1751265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751266   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1751267   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1751268   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1751269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751271   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1751272   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1751273   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1751274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751276   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1751277   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1751278   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1751279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1751280   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1751281   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1751282   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1751283   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1751284   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1751285   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1751286   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1751287   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1751288   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1751289   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1751290   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1751291   +LENGTH _WARN_ $4
1751292   +      F_DepVar  $ 12
1751293   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1751294   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1751295   +
1751296   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1751297   +
1751298   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1751299   +
1751300   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1751301   +
1751302   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1751303   +
1751304   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1751305   +
1751306   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1751307   +
1751308   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1751309   +
1751310   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1751311   +
1751312   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1751313   +
1751314   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1751315   +
1751316   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1751317   +
1751318   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1751319   +
1751320   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1751321   +
1751322   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1751323   +
1751324   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1751325   +
1751326   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1751327   +
1751328   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1751329   +
1751330   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1751331   +
1751332   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1751333   +
1751334   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1751335   +
1751336   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1751337   +
1751338   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1751339   +
1751340   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1751341   +
1751342   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1751343   +
1751344   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1751345   +
1751346   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1751347   +
1751348   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1751349   +
1751350   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1751351   +
1751352   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1751353   +
1751354   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1751355   +
1751356   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1751357   +
1751358   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1751359   +
1751360   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1751361   +
1751362   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1751363   +
1751364   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1751365   +
1751366   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1751367   +
1751368   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1751369   +
1751370   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1751371   +
1751372   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1751373   +
1751374   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1751375   +
1751376   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1751377   +
1751378   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1751379   +
1751380   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1751381   +
1751382   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1751383   +
1751384   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1751385   +
1751386   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1751387   +
1751388   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1751389   +
1751390   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1751391   +
1751392   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1751393   +
1751394   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1751395   +
1751396   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1751397   +
1751398   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1751399   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1751400   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1751401   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1751402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751404   +end;
MPRINT(EM_DIAGRAM):   end;
1751405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1751407   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1751408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751409   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1751410   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1751411   +   end;
MPRINT(EM_DIAGRAM):   end;
1751412   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1751413   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1751414   +   end;
MPRINT(EM_DIAGRAM):   end;
1751415   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751416   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1751417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751419   +   end;
MPRINT(EM_DIAGRAM):   end;
1751420   +end;
MPRINT(EM_DIAGRAM):   end;
1751421   +
1751422   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1751423   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1751424   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1751425   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1751426   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751427   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751428   +end;
MPRINT(EM_DIAGRAM):   end;
1751429   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751430   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1751431   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1751432   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751433   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1751434   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1751435   +   end;
MPRINT(EM_DIAGRAM):   end;
1751436   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1751437   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1751438   +   end;
MPRINT(EM_DIAGRAM):   end;
1751439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751440   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1751441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751443   +   end;
MPRINT(EM_DIAGRAM):   end;
1751444   +end;
MPRINT(EM_DIAGRAM):   end;
1751445   +
1751446   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1751447   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1751448   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1751449   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1751450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751452   +end;
MPRINT(EM_DIAGRAM):   end;
1751453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1751455   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1751456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751457   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1751458   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1751459   +   end;
MPRINT(EM_DIAGRAM):   end;
1751460   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1751461   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1751462   +   end;
MPRINT(EM_DIAGRAM):   end;
1751463   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751464   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1751465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751467   +   end;
MPRINT(EM_DIAGRAM):   end;
1751468   +end;
MPRINT(EM_DIAGRAM):   end;
1751469   +
1751470   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1751471   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1751472   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1751473   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1751474   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751475   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751476   +end;
MPRINT(EM_DIAGRAM):   end;
1751477   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751478   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1751479   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1751480   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751481   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1751482   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1751483   +   end;
MPRINT(EM_DIAGRAM):   end;
1751484   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1751485   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1751486   +   end;
MPRINT(EM_DIAGRAM):   end;
1751487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751488   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1751489   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751490   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751491   +   end;
MPRINT(EM_DIAGRAM):   end;
1751492   +end;
MPRINT(EM_DIAGRAM):   end;
1751493   +
1751494   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1751495   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1751496   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1751497   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1751498   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751500   +end;
MPRINT(EM_DIAGRAM):   end;
1751501   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751502   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1751503   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1751504   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751505   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1751506   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1751507   +   end;
MPRINT(EM_DIAGRAM):   end;
1751508   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1751509   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1751510   +   end;
MPRINT(EM_DIAGRAM):   end;
1751511   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751512   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1751513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751515   +   end;
MPRINT(EM_DIAGRAM):   end;
1751516   +end;
MPRINT(EM_DIAGRAM):   end;
1751517   +
1751518   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1751519   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1751520   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1751521   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1751522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751524   +end;
MPRINT(EM_DIAGRAM):   end;
1751525   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751526   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1751527   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1751528   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751529   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1751530   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1751531   +   end;
MPRINT(EM_DIAGRAM):   end;
1751532   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1751533   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1751534   +   end;
MPRINT(EM_DIAGRAM):   end;
1751535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751536   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1751537   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751538   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751539   +   end;
MPRINT(EM_DIAGRAM):   end;
1751540   +end;
MPRINT(EM_DIAGRAM):   end;
1751541   +
1751542   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1751543   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1751544   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1751545   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1751546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751548   +end;
MPRINT(EM_DIAGRAM):   end;
1751549   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1751551   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1751552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751553   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1751554   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1751555   +   end;
MPRINT(EM_DIAGRAM):   end;
1751556   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1751557   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1751558   +   end;
MPRINT(EM_DIAGRAM):   end;
1751559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751560   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1751561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751563   +   end;
MPRINT(EM_DIAGRAM):   end;
1751564   +end;
MPRINT(EM_DIAGRAM):   end;
1751565   +
1751566   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1751567   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1751568   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1751569   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1751570   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1751571   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1751572   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1751573   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1751574   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1751575   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1751576   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1751577   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1751578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751580   +end;
MPRINT(EM_DIAGRAM):   end;
1751581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751582   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1751583   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1751584   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751585   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1751586   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1751587   +   end;
MPRINT(EM_DIAGRAM):   end;
1751588   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1751589   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1751590   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1751591   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1751592   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1751593   +   end;
MPRINT(EM_DIAGRAM):   end;
1751594   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1751595   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1751596   +   end;
MPRINT(EM_DIAGRAM):   end;
1751597   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1751598   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1751599   +   end;
MPRINT(EM_DIAGRAM):   end;
1751600   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1751601   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1751602   +   end;
MPRINT(EM_DIAGRAM):   end;
1751603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751604   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1751605   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1751606   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1751607   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1751608   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751609   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751610   +   end;
MPRINT(EM_DIAGRAM):   end;
1751611   +end;
MPRINT(EM_DIAGRAM):   end;
1751612   +
1751613   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1751614   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1751615   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1751616   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1751617   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1751618   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1751619   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1751620   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1751621   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1751622   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1751623   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1751624   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1751625   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1751626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1751627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751628   +end;
MPRINT(EM_DIAGRAM):   end;
1751629   +else do;
MPRINT(EM_DIAGRAM):   else do;
1751630   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1751631   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1751632   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1751633   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1751634   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1751635   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1751636   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1751637   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1751638   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1751639   +         end;
MPRINT(EM_DIAGRAM):   end;
1751640   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1751641   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1751642   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1751643   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1751644   +            end;
MPRINT(EM_DIAGRAM):   end;
1751645   +         end;
MPRINT(EM_DIAGRAM):   end;
1751646   +      end;
MPRINT(EM_DIAGRAM):   end;
1751647   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1751648   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1751649   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1751650   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1751651   +         end;
MPRINT(EM_DIAGRAM):   end;
1751652   +      end;
MPRINT(EM_DIAGRAM):   end;
1751653   +   end;
MPRINT(EM_DIAGRAM):   end;
1751654   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1751655   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1751656   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1751657   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1751658   +      end;
MPRINT(EM_DIAGRAM):   end;
1751659   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1751660   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1751661   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1751662   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1751663   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1751664   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1751665   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1751666   +         end;
MPRINT(EM_DIAGRAM):   end;
1751667   +      end;
MPRINT(EM_DIAGRAM):   end;
1751668   +   end;
MPRINT(EM_DIAGRAM):   end;
1751669   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1751670   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1751671   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1751672   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1751673   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1751674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1751675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751676   +   end;
MPRINT(EM_DIAGRAM):   end;
1751677   +end;
MPRINT(EM_DIAGRAM):   end;
1751678   +
1751679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751680   +*** Checking missing input Interval
1751681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1751682   +
1751683   +IF NMISS(
1751684   +   AcceptedCmpTotal ,
1751685   +   Age ,
1751686   +   Frq ,
1751687   +   Income ,
1751688   +   Kidhome ,
1751689   +   Mnt ,
1751690   +   MntFishProducts ,
1751691   +   MntFruits ,
1751692   +   MntGoldProds ,
1751693   +   MntMeatProducts ,
1751694   +   MntSweetProducts ,
1751695   +   MntWines ,
1751696   +   MonthsAsCustomer ,
1751697   +   NumCatalogPurchases ,
1751698   +   NumDealsPurchases ,
1751699   +   NumDistPurchases ,
1751700   +   NumStorePurchases ,
1751701   +   NumWebPurchases ,
1751702   +   NumWebVisitsMonth ,
1751703   +   RFMstat ,
1751704   +   RMntFrq ,
1751705   +   Recency ,
1751706   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1751707   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1751708   +
1751709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1751710   +END;
MPRINT(EM_DIAGRAM):   END;
1751711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751712   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1751713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751714   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1751715   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1751716   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1751717   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1751718   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1751719   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1751720   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1751721   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1751722   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1751723   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1751724   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1751725   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1751726   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1751727   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1751728   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1751729   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1751730   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1751731   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1751732   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1751733   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1751734   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1751735   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1751736   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1751737   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1751738   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1751739   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1751740   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1751741   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1751742   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1751743   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1751744   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1751745   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1751746   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1751747   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1751748   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1751749   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1751750   +END;
MPRINT(EM_DIAGRAM):   END;
1751751   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1751752   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1751753   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1751754   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1751755   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1751756   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1751757   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1751758   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1751759   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1751760   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1751761   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1751762   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1751763   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1751764   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1751765   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1751766   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1751767   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1751768   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1751769   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1751770   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1751771   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1751772   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1751773   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1751774   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1751775   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1751776   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1751777   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1751778   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1751779   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1751780   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1751781   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1751782   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1751783   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1751784   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1751785   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1751786   +   ELSE S_NumCatalogPurchases
1751787   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1751788   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1751789   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1751790   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1751791   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1751792   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1751793   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1751794   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1751795   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1751796   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1751797   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1751798   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1751799   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1751800   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1751801   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1751802   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1751803   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1751804   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1751805   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1751806   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1751807   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1751808   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1751809   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1751810   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1751811   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1751812   +END;
MPRINT(EM_DIAGRAM):   END;
1751813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751814   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1751815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751817   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1751818   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751820   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1751821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1751822   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1751823   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1751824   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1751825   +        S_Income  +    -0.14142658616971 * S_Kidhome
1751826   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1751827   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1751828   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1751829   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1751830   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1751831   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1751832   +          +     0.96837841774168 * S_NumDealsPurchases
1751833   +          +      0.2846105381881 * S_NumDistPurchases
1751834   +          +    -0.69514041792943 * S_NumStorePurchases
1751835   +          +    -0.96425407351749 * S_NumWebPurchases
1751836   +          +     0.79545449599683 * S_NumWebVisitsMonth
1751837   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1751838   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1751839   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1751840   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1751841   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1751842   +        S_Income  +    -0.55432195959203 * S_Kidhome
1751843   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1751844   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1751845   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1751846   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1751847   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1751848   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1751849   +          +      0.2190184330724 * S_NumDealsPurchases
1751850   +          +    -0.01682909442896 * S_NumDistPurchases
1751851   +          +    -0.70244951048552 * S_NumStorePurchases
1751852   +          +     -0.3057457659316 * S_NumWebPurchases
1751853   +          +     0.95928538762715 * S_NumWebVisitsMonth
1751854   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1751855   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1751856   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1751857   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1751858   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1751859   +        S_Income  +    -0.06354861159882 * S_Kidhome
1751860   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1751861   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1751862   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1751863   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1751864   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1751865   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1751866   +          +    -0.21394230159696 * S_NumDealsPurchases
1751867   +          +    -0.23833771124663 * S_NumDistPurchases
1751868   +          +     0.45832031017813 * S_NumStorePurchases
1751869   +          +    -0.30226952040179 * S_NumWebPurchases
1751870   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1751871   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1751872   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1751873   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1751874   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1751875   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1751876   +        S_Income  +    -0.04839586846715 * S_Kidhome
1751877   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1751878   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1751879   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1751880   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1751881   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1751882   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1751883   +          +    -0.43749647771198 * S_NumDealsPurchases
1751884   +          +     0.21263473847472 * S_NumDistPurchases
1751885   +          +     0.26102168039141 * S_NumStorePurchases
1751886   +          +     0.54921725943657 * S_NumWebPurchases
1751887   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1751888   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1751889   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1751890   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1751891   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1751892   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1751893   +        S_Income  +     0.71499527198653 * S_Kidhome
1751894   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1751895   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1751896   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1751897   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1751898   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1751899   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1751900   +          +     0.09436067776126 * S_NumDealsPurchases
1751901   +          +    -0.02824201859641 * S_NumDistPurchases
1751902   +          +    -0.06770433780564 * S_NumStorePurchases
1751903   +          +    -0.07177620319715 * S_NumWebPurchases
1751904   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1751905   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1751906   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1751907   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1751908   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1751909   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1751910   +        S_Income  +    -0.63474522042341 * S_Kidhome
1751911   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1751912   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1751913   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1751914   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1751915   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1751916   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1751917   +          +    -0.51154511343396 * S_NumDealsPurchases
1751918   +          +    -0.52422915823572 * S_NumDistPurchases
1751919   +          +     0.30305498422357 * S_NumStorePurchases
1751920   +          +     0.12197321559338 * S_NumWebPurchases
1751921   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1751922   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1751923   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1751924   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1751925   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1751926   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1751927   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1751928   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1751929   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1751930   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1751931   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1751932   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1751933   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1751934   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1751935   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1751936   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1751937   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1751938   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1751939   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1751940   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1751941   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1751942   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1751943   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1751944   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1751945   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1751946   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1751947   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1751948   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1751949   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1751950   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1751951   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1751952   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1751953   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1751954   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1751955   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1751956   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1751957   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1751958   +          +     0.10234616400375 * Marital_StatusDivorced
1751959   +          +     0.27961650739075 * Marital_StatusMarried
1751960   +          +    -0.40239488723767 * Marital_StatusSingle
1751961   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1751962   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1751963   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1751964   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1751965   +          +     0.46385792428023 * Marital_StatusDivorced
1751966   +          +    -0.62344590646391 * Marital_StatusMarried
1751967   +          +     0.61767209252062 * Marital_StatusSingle
1751968   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1751969   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1751970   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1751971   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1751972   +          +    -0.07839612590836 * Marital_StatusDivorced
1751973   +          +     0.35316864062221 * Marital_StatusMarried
1751974   +          +    -0.10730136429834 * Marital_StatusSingle
1751975   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1751976   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1751977   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1751978   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1751979   +          +    -0.09942175269886 * Marital_StatusDivorced
1751980   +          +     0.24385460865335 * Marital_StatusMarried
1751981   +          +    -0.33658955096296 * Marital_StatusSingle
1751982   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1751983   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1751984   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1751985   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1751986   +          +    -0.08047852561096 * Marital_StatusDivorced
1751987   +          +     1.16485862694561 * Marital_StatusMarried
1751988   +          +    -0.94140251178566 * Marital_StatusSingle
1751989   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1751990   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1751991   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1751992   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1751993   +          +    -0.16621963893391 * Marital_StatusDivorced
1751994   +          +    -0.44542186297324 * Marital_StatusMarried
1751995   +          +     0.42176133228308 * Marital_StatusSingle
1751996   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1751997   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1751998   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1751999   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1752000   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1752001   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1752002   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1752003   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1752004   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1752005   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1752006   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1752007   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1752008   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1752009   +END;
MPRINT(EM_DIAGRAM):   END;
1752010   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1752011   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1752012   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1752013   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1752014   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1752015   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1752016   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1752017   +END;
MPRINT(EM_DIAGRAM):   END;
1752018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752019   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1752020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752021   +
1752022   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1752023   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1752024   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1752025   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1752026   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1752027   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752028   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1752029   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1752030   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1752031   +end;
MPRINT(EM_DIAGRAM):   end;
1752032   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752033   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1752034   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1752035   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1752036   +   end;
MPRINT(EM_DIAGRAM):   end;
1752037   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1752038   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1752039   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1752040   +   end;
MPRINT(EM_DIAGRAM):   end;
1752041   +   else do;
The SAS System
 
MPRINT(EM_DIAGRAM):   else do;
1752042   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1752043   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1752044   +   end;
MPRINT(EM_DIAGRAM):   end;
1752045   +end;
MPRINT(EM_DIAGRAM):   end;
1752046   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1752047   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1752048   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1752049   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1752050   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1752051   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1752052   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1752053   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1752054   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1752055   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1752056   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1752057   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1752058   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1752059   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1752060   +END;
MPRINT(EM_DIAGRAM):   END;
1752061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1752062   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1752063   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1752064   +END;
MPRINT(EM_DIAGRAM):   END;
1752065   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1752066   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1752067   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1752068   +END;
MPRINT(EM_DIAGRAM):   END;
1752069   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1752070   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1752071   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1752072   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1752073   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1752074   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1752075   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1752076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752077   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1752078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752079   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1752080   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1752081   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1752082   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1752083   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1752084   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1752085   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1752086   +END;
MPRINT(EM_DIAGRAM):   END;
1752087   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1752088   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1752089   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1752090   +drop
1752091   +H11
1752092   +H12
1752093   +H13
1752094   +H14
1752095   +H15
1752096   +H16
1752097   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1752098   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1752099   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1752100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752101   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1752102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752103   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1752104   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1752105   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1752106   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1752107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752108   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1752109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752110   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1752111   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1752112   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1752113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752114   +* Ensmbl26: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 2 of 3;
1752115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752117   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1752118   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1752119   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1752120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752121   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1752122   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1752123   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1752124   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1752125   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1752126   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1752127   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1752128   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1752129   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1752130   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1752131   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1752132   +LENGTH _WARN_ $4
1752133   +      F_DepVar  $ 12
1752134   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1752135   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1752136   +
1752137   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1752138   +
1752139   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1752140   +
1752141   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1752142   +
1752143   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1752144   +
1752145   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1752146   +
1752147   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1752148   +
1752149   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1752150   +
1752151   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1752152   +
1752153   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1752154   +
1752155   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1752156   +
1752157   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1752158   +
1752159   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1752160   +
1752161   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1752162   +
1752163   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1752164   +
1752165   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1752166   +
1752167   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1752168   +
1752169   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1752170   +
1752171   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1752172   +
1752173   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1752174   +
1752175   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1752176   +
1752177   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1752178   +
1752179   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1752180   +
1752181   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1752182   +
1752183   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1752184   +
1752185   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1752186   +
1752187   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1752188   +
1752189   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1752190   +
1752191   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1752192   +
1752193   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1752194   +
1752195   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1752196   +
1752197   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1752198   +
1752199   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1752200   +
1752201   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1752202   +
1752203   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1752204   +
1752205   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1752206   +
1752207   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1752208   +
1752209   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1752210   +
1752211   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1752212   +
1752213   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1752214   +
1752215   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1752216   +
1752217   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1752218   +
1752219   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1752220   +
1752221   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1752222   +
1752223   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1752224   +
1752225   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1752226   +
1752227   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1752228   +
1752229   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1752230   +
1752231   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1752232   +
1752233   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1752234   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1752235   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1752236   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1752237   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752238   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752239   +end;
MPRINT(EM_DIAGRAM):   end;
1752240   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752241   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752242   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1752243   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752244   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1752245   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1752246   +   end;
MPRINT(EM_DIAGRAM):   end;
1752247   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1752248   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1752249   +   end;
MPRINT(EM_DIAGRAM):   end;
1752250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752251   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1752252   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752253   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752254   +   end;
MPRINT(EM_DIAGRAM):   end;
1752255   +end;
MPRINT(EM_DIAGRAM):   end;
1752256   +
1752257   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1752258   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1752259   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1752260   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1752261   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752263   +end;
MPRINT(EM_DIAGRAM):   end;
1752264   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752265   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752266   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1752267   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752268   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1752269   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1752270   +   end;
MPRINT(EM_DIAGRAM):   end;
1752271   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1752272   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1752273   +   end;
MPRINT(EM_DIAGRAM):   end;
1752274   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752275   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1752276   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752277   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752278   +   end;
MPRINT(EM_DIAGRAM):   end;
1752279   +end;
MPRINT(EM_DIAGRAM):   end;
1752280   +
1752281   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1752282   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1752283   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1752284   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1752285   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752286   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752287   +end;
MPRINT(EM_DIAGRAM):   end;
1752288   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752289   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752290   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1752291   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752292   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1752293   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1752294   +   end;
MPRINT(EM_DIAGRAM):   end;
1752295   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1752296   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1752297   +   end;
MPRINT(EM_DIAGRAM):   end;
1752298   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752299   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1752300   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752301   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752302   +   end;
MPRINT(EM_DIAGRAM):   end;
1752303   +end;
MPRINT(EM_DIAGRAM):   end;
1752304   +
1752305   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1752306   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1752307   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1752308   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1752309   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752310   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752311   +end;
MPRINT(EM_DIAGRAM):   end;
1752312   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752313   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752314   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1752315   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752316   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1752317   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1752318   +   end;
MPRINT(EM_DIAGRAM):   end;
1752319   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1752320   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1752321   +   end;
MPRINT(EM_DIAGRAM):   end;
1752322   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752323   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1752324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752326   +   end;
MPRINT(EM_DIAGRAM):   end;
1752327   +end;
MPRINT(EM_DIAGRAM):   end;
1752328   +
1752329   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1752330   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1752331   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1752332   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1752333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752335   +end;
MPRINT(EM_DIAGRAM):   end;
1752336   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752338   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1752339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752340   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1752341   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1752342   +   end;
MPRINT(EM_DIAGRAM):   end;
1752343   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1752344   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1752345   +   end;
MPRINT(EM_DIAGRAM):   end;
1752346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752347   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1752348   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752349   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752350   +   end;
MPRINT(EM_DIAGRAM):   end;
1752351   +end;
MPRINT(EM_DIAGRAM):   end;
1752352   +
1752353   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1752354   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1752355   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1752356   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1752357   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752358   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752359   +end;
MPRINT(EM_DIAGRAM):   end;
1752360   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752361   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752362   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1752363   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752364   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1752365   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1752366   +   end;
MPRINT(EM_DIAGRAM):   end;
1752367   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1752368   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1752369   +   end;
MPRINT(EM_DIAGRAM):   end;
1752370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752371   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1752372   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752373   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752374   +   end;
MPRINT(EM_DIAGRAM):   end;
1752375   +end;
MPRINT(EM_DIAGRAM):   end;
1752376   +
1752377   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1752378   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1752379   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1752380   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1752381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752383   +end;
MPRINT(EM_DIAGRAM):   end;
1752384   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752386   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1752387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752388   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1752389   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1752390   +   end;
MPRINT(EM_DIAGRAM):   end;
1752391   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1752392   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1752393   +   end;
MPRINT(EM_DIAGRAM):   end;
1752394   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752395   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1752396   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752397   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752398   +   end;
MPRINT(EM_DIAGRAM):   end;
1752399   +end;
MPRINT(EM_DIAGRAM):   end;
1752400   +
1752401   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1752402   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1752403   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1752404   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1752405   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1752406   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1752407   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1752408   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1752409   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1752410   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1752411   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1752412   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1752413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752415   +end;
MPRINT(EM_DIAGRAM):   end;
1752416   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752417   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1752418   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1752419   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752420   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1752421   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1752422   +   end;
MPRINT(EM_DIAGRAM):   end;
1752423   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1752424   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1752425   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1752426   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1752427   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1752428   +   end;
MPRINT(EM_DIAGRAM):   end;
1752429   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1752430   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1752431   +   end;
MPRINT(EM_DIAGRAM):   end;
1752432   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1752433   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1752434   +   end;
MPRINT(EM_DIAGRAM):   end;
1752435   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1752436   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1752437   +   end;
MPRINT(EM_DIAGRAM):   end;
1752438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752439   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1752440   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1752441   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1752442   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1752443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752445   +   end;
MPRINT(EM_DIAGRAM):   end;
1752446   +end;
MPRINT(EM_DIAGRAM):   end;
1752447   +
1752448   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1752449   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1752450   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1752451   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1752452   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1752453   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1752454   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1752455   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1752456   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1752457   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1752458   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1752459   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1752460   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1752461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752463   +end;
MPRINT(EM_DIAGRAM):   end;
1752464   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752465   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1752466   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1752467   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752468   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1752469   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1752470   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1752471   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1752472   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1752473   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1752474   +         end;
MPRINT(EM_DIAGRAM):   end;
1752475   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1752476   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1752477   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1752478   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1752479   +            end;
MPRINT(EM_DIAGRAM):   end;
1752480   +         end;
MPRINT(EM_DIAGRAM):   end;
1752481   +      end;
MPRINT(EM_DIAGRAM):   end;
1752482   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1752483   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1752484   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1752485   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1752486   +         end;
MPRINT(EM_DIAGRAM):   end;
1752487   +      end;
MPRINT(EM_DIAGRAM):   end;
1752488   +   end;
MPRINT(EM_DIAGRAM):   end;
1752489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752490   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1752491   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1752492   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1752493   +      end;
MPRINT(EM_DIAGRAM):   end;
1752494   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1752495   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1752496   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1752497   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1752498   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1752499   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1752500   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1752501   +         end;
MPRINT(EM_DIAGRAM):   end;
1752502   +      end;
MPRINT(EM_DIAGRAM):   end;
1752503   +   end;
MPRINT(EM_DIAGRAM):   end;
1752504   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1752505   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1752506   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1752507   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1752508   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1752509   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752510   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752511   +   end;
MPRINT(EM_DIAGRAM):   end;
1752512   +end;
MPRINT(EM_DIAGRAM):   end;
1752513   +
1752514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752515   +*** Checking missing input Interval
1752516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1752517   +
1752518   +IF NMISS(
1752519   +   AcceptedCmpTotal ,
1752520   +   Age ,
1752521   +   Frq ,
1752522   +   Income ,
1752523   +   Kidhome ,
1752524   +   Mnt ,
1752525   +   MntFishProducts ,
1752526   +   MntFruits ,
1752527   +   MntGoldProds ,
1752528   +   MntMeatProducts ,
1752529   +   MntSweetProducts ,
1752530   +   MntWines ,
1752531   +   MonthsAsCustomer ,
1752532   +   NumCatalogPurchases ,
1752533   +   NumDealsPurchases ,
1752534   +   NumDistPurchases ,
1752535   +   NumStorePurchases ,
1752536   +   NumWebPurchases ,
1752537   +   NumWebVisitsMonth ,
1752538   +   RFMstat ,
1752539   +   RMntFrq ,
1752540   +   Recency ,
1752541   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1752542   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1752543   +
1752544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752545   +END;
MPRINT(EM_DIAGRAM):   END;
1752546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752547   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1752548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752549   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1752550   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1752551   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1752552   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1752553   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1752554   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1752555   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1752556   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1752557   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1752558   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1752559   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1752560   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1752561   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1752562   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1752563   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1752564   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1752565   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1752566   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1752567   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1752568   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1752569   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1752570   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1752571   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1752572   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1752573   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1752574   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1752575   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1752576   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1752577   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1752578   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1752579   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1752580   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1752581   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1752582   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1752583   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1752584   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1752585   +END;
MPRINT(EM_DIAGRAM):   END;
1752586   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1752587   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1752588   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1752589   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1752590   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1752591   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1752592   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1752593   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1752594   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1752595   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1752596   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1752597   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1752598   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1752599   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1752600   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1752601   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1752602   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1752603   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1752604   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1752605   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1752606   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1752607   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1752608   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1752609   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1752610   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1752611   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1752612   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1752613   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1752614   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1752615   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1752616   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1752617   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1752618   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1752619   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1752620   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1752621   +   ELSE S_NumCatalogPurchases
1752622   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1752623   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1752624   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1752625   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1752626   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1752627   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1752628   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1752629   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1752630   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1752631   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1752632   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1752633   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1752634   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1752635   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1752636   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1752637   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1752638   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1752639   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1752640   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1752641   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1752642   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1752643   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1752644   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1752645   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1752646   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1752647   +END;
MPRINT(EM_DIAGRAM):   END;
1752648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752649   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1752650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752652   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1752653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752655   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1752656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752657   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1752658   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1752659   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1752660   +        S_Income  +     0.51123266106809 * S_Kidhome
1752661   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1752662   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1752663   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1752664   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1752665   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1752666   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1752667   +          +     1.34095732961105 * S_NumDealsPurchases
1752668   +          +     0.16605991333252 * S_NumDistPurchases
1752669   +          +    -0.61746267736536 * S_NumStorePurchases
1752670   +          +    -0.61812800689506 * S_NumWebPurchases
1752671   +          +     1.44649145055387 * S_NumWebVisitsMonth
1752672   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1752673   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1752674   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1752675   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1752676   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1752677   +        S_Income  +     0.52295323651199 * S_Kidhome
1752678   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1752679   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1752680   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1752681   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1752682   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1752683   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1752684   +          +    -0.72543332317832 * S_NumDealsPurchases
1752685   +          +    -0.05245472565117 * S_NumDistPurchases
1752686   +          +     1.00667431585298 * S_NumStorePurchases
1752687   +          +     1.02836701470962 * S_NumWebPurchases
1752688   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1752689   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1752690   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1752691   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1752692   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1752693   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1752694   +        S_Income  +     0.58025720116696 * S_Kidhome
1752695   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1752696   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1752697   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1752698   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1752699   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1752700   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1752701   +          +     0.12670438262487 * S_NumDealsPurchases
1752702   +          +    -0.46113523834333 * S_NumDistPurchases
1752703   +          +     0.07074818720567 * S_NumStorePurchases
1752704   +          +    -0.05066645783537 * S_NumWebPurchases
1752705   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1752706   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1752707   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1752708   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1752709   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1752710   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1752711   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1752712   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1752713   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1752714   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1752715   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1752716   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1752717   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1752718   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1752719   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1752720   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1752721   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1752722   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1752723   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1752724   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1752725   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1752726   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1752727   +          +     0.12692950862511 * Marital_StatusDivorced
1752728   +          +     0.10026497666167 * Marital_StatusMarried
1752729   +          +    -0.19893864592813 * Marital_StatusSingle
1752730   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1752731   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1752732   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1752733   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1752734   +          +    -0.16785192490199 * Marital_StatusDivorced
1752735   +          +     0.13153695130362 * Marital_StatusMarried
1752736   +          +    -0.50411544587104 * Marital_StatusSingle
1752737   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1752738   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1752739   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1752740   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1752741   +          +    -0.62654958087044 * Marital_StatusDivorced
1752742   +          +     1.86250132393341 * Marital_StatusMarried
1752743   +          +    -1.37067556451928 * Marital_StatusSingle
1752744   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1752745   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1752746   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1752747   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1752748   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1752749   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1752750   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1752751   +END;
MPRINT(EM_DIAGRAM):   END;
1752752   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1752753   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1752754   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1752755   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1752756   +END;
MPRINT(EM_DIAGRAM):   END;
1752757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752758   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1752759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752760   +
1752761   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1752762   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1752763   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1752764   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1752765   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1752766   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752767   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1752768   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1752769   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1752770   +end;
MPRINT(EM_DIAGRAM):   end;
1752771   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752772   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1752773   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1752774   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1752775   +   end;
MPRINT(EM_DIAGRAM):   end;
1752776   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1752777   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1752778   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1752779   +   end;
MPRINT(EM_DIAGRAM):   end;
1752780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752781   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1752782   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1752783   +   end;
MPRINT(EM_DIAGRAM):   end;
1752784   +end;
MPRINT(EM_DIAGRAM):   end;
1752785   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1752786   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1752787   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1752788   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1752789   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1752790   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1752791   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1752792   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1752793   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1752794   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1752795   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1752796   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1752797   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1752798   +END;
MPRINT(EM_DIAGRAM):   END;
1752799   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1752800   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1752801   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1752802   +END;
MPRINT(EM_DIAGRAM):   END;
1752803   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1752804   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1752805   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1752806   +END;
MPRINT(EM_DIAGRAM):   END;
1752807   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1752808   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1752809   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1752810   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1752811   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1752812   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1752813   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1752814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752815   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1752816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1752817   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1752818   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1752819   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1752820   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1752821   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1752822   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1752823   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1752824   +END;
MPRINT(EM_DIAGRAM):   END;
1752825   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1752826   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1752827   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1752828   +drop
1752829   +H11
1752830   +H12
1752831   +H13
1752832   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1752833   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1752834   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1752835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752836   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1752837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752838   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1752839   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1752840   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1752841   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1752842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752843   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1752844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752845   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1752846   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1752847   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1752848   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752849   +* Ensmbl26: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 3 of 3;
1752850   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752852   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1752853   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1752854   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1752855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1752856   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1752857   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1752858   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1752859   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1752860   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1752861   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1752862   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1752863   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1752864   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1752865   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1752866   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1752867   +LENGTH _WARN_ $4
1752868   +      F_DepVar  $ 12
1752869   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1752870   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1752871   +
1752872   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1752873   +
1752874   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1752875   +
1752876   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1752877   +
1752878   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1752879   +
1752880   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1752881   +
1752882   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1752883   +
1752884   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1752885   +
1752886   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1752887   +
1752888   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1752889   +
1752890   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1752891   +
1752892   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1752893   +
1752894   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1752895   +
1752896   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1752897   +
1752898   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1752899   +
1752900   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1752901   +
1752902   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1752903   +
1752904   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1752905   +
1752906   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1752907   +
1752908   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1752909   +
1752910   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1752911   +
1752912   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1752913   +
1752914   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1752915   +
1752916   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1752917   +
1752918   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1752919   +
1752920   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1752921   +
1752922   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1752923   +
1752924   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1752925   +
1752926   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1752927   +
1752928   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1752929   +
1752930   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1752931   +
1752932   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1752933   +
1752934   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1752935   +
1752936   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1752937   +
1752938   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1752939   +
1752940   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1752941   +
1752942   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1752943   +
1752944   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1752945   +
1752946   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1752947   +
1752948   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1752949   +
1752950   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1752951   +
1752952   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1752953   +
1752954   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1752955   +
1752956   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1752957   +
1752958   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1752959   +
1752960   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1752961   +
1752962   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1752963   +
1752964   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1752965   +
1752966   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1752967   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1752968   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1752969   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1752970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752972   +end;
MPRINT(EM_DIAGRAM):   end;
1752973   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752974   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752975   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1752976   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1752977   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1752978   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1752979   +   end;
MPRINT(EM_DIAGRAM):   end;
1752980   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1752981   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1752982   +   end;
MPRINT(EM_DIAGRAM):   end;
1752983   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1752984   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1752985   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1752986   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752987   +   end;
MPRINT(EM_DIAGRAM):   end;
1752988   +end;
MPRINT(EM_DIAGRAM):   end;
1752989   +
1752990   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1752991   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1752992   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1752993   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1752994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1752995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1752996   +end;
MPRINT(EM_DIAGRAM):   end;
1752997   +else do;
MPRINT(EM_DIAGRAM):   else do;
1752998   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1752999   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1753000   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753001   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753002   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1753003   +   end;
MPRINT(EM_DIAGRAM):   end;
1753004   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753005   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1753006   +   end;
MPRINT(EM_DIAGRAM):   end;
1753007   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753008   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1753009   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753010   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753011   +   end;
MPRINT(EM_DIAGRAM):   end;
1753012   +end;
MPRINT(EM_DIAGRAM):   end;
1753013   +
1753014   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1753015   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1753016   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1753017   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1753018   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753019   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753020   +end;
MPRINT(EM_DIAGRAM):   end;
1753021   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753022   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753023   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1753024   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753025   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753026   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1753027   +   end;
MPRINT(EM_DIAGRAM):   end;
1753028   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753029   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1753030   +   end;
MPRINT(EM_DIAGRAM):   end;
1753031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753032   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1753033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753035   +   end;
MPRINT(EM_DIAGRAM):   end;
1753036   +end;
MPRINT(EM_DIAGRAM):   end;
1753037   +
1753038   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1753039   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1753040   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1753041   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1753042   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753043   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753044   +end;
MPRINT(EM_DIAGRAM):   end;
1753045   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753046   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753047   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1753048   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753049   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753050   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1753051   +   end;
MPRINT(EM_DIAGRAM):   end;
1753052   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753053   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1753054   +   end;
MPRINT(EM_DIAGRAM):   end;
1753055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753056   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1753057   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753058   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753059   +   end;
MPRINT(EM_DIAGRAM):   end;
1753060   +end;
MPRINT(EM_DIAGRAM):   end;
1753061   +
1753062   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1753063   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1753064   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1753065   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1753066   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753067   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753068   +end;
MPRINT(EM_DIAGRAM):   end;
1753069   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753070   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753071   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1753072   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753073   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753074   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1753075   +   end;
MPRINT(EM_DIAGRAM):   end;
1753076   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753077   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1753078   +   end;
MPRINT(EM_DIAGRAM):   end;
1753079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753080   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1753081   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753082   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753083   +   end;
MPRINT(EM_DIAGRAM):   end;
1753084   +end;
MPRINT(EM_DIAGRAM):   end;
1753085   +
1753086   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1753087   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1753088   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1753089   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1753090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753092   +end;
MPRINT(EM_DIAGRAM):   end;
1753093   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753095   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1753096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753097   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753098   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1753099   +   end;
MPRINT(EM_DIAGRAM):   end;
1753100   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753101   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1753102   +   end;
MPRINT(EM_DIAGRAM):   end;
1753103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753104   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1753105   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753106   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753107   +   end;
MPRINT(EM_DIAGRAM):   end;
1753108   +end;
MPRINT(EM_DIAGRAM):   end;
1753109   +
1753110   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1753111   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1753112   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1753113   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1753114   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753115   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753116   +end;
MPRINT(EM_DIAGRAM):   end;
1753117   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753118   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753119   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1753120   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753121   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1753122   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1753123   +   end;
MPRINT(EM_DIAGRAM):   end;
1753124   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1753125   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1753126   +   end;
MPRINT(EM_DIAGRAM):   end;
1753127   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753128   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1753129   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753130   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753131   +   end;
MPRINT(EM_DIAGRAM):   end;
1753132   +end;
MPRINT(EM_DIAGRAM):   end;
1753133   +
1753134   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1753135   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1753136   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1753137   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1753138   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1753139   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1753140   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1753141   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1753142   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1753143   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1753144   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1753145   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1753146   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753147   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753148   +end;
MPRINT(EM_DIAGRAM):   end;
1753149   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753150   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1753151   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1753152   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753153   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1753154   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1753155   +   end;
MPRINT(EM_DIAGRAM):   end;
1753156   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1753157   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1753158   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1753159   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1753160   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1753161   +   end;
MPRINT(EM_DIAGRAM):   end;
1753162   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1753163   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1753164   +   end;
MPRINT(EM_DIAGRAM):   end;
1753165   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1753166   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1753167   +   end;
MPRINT(EM_DIAGRAM):   end;
1753168   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1753169   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1753170   +   end;
MPRINT(EM_DIAGRAM):   end;
1753171   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753172   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1753173   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1753174   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1753175   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1753176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753178   +   end;
MPRINT(EM_DIAGRAM):   end;
1753179   +end;
MPRINT(EM_DIAGRAM):   end;
1753180   +
1753181   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1753182   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1753183   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1753184   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1753185   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1753186   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1753187   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1753188   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1753189   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1753190   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1753191   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1753192   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1753193   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1753194   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753195   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753196   +end;
MPRINT(EM_DIAGRAM):   end;
1753197   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753198   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1753199   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1753200   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753201   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1753202   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1753203   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1753204   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1753205   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1753206   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1753207   +         end;
MPRINT(EM_DIAGRAM):   end;
1753208   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1753209   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1753210   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1753211   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1753212   +            end;
MPRINT(EM_DIAGRAM):   end;
1753213   +         end;
MPRINT(EM_DIAGRAM):   end;
1753214   +      end;
MPRINT(EM_DIAGRAM):   end;
1753215   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1753216   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1753217   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1753218   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1753219   +         end;
MPRINT(EM_DIAGRAM):   end;
1753220   +      end;
MPRINT(EM_DIAGRAM):   end;
1753221   +   end;
MPRINT(EM_DIAGRAM):   end;
1753222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753223   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1753224   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1753225   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1753226   +      end;
MPRINT(EM_DIAGRAM):   end;
1753227   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1753228   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1753229   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1753230   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1753231   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1753232   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1753233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1753234   +         end;
MPRINT(EM_DIAGRAM):   end;
1753235   +      end;
MPRINT(EM_DIAGRAM):   end;
1753236   +   end;
MPRINT(EM_DIAGRAM):   end;
1753237   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1753238   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1753239   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1753240   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1753241   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1753242   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753243   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753244   +   end;
MPRINT(EM_DIAGRAM):   end;
1753245   +end;
MPRINT(EM_DIAGRAM):   end;
1753246   +
1753247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753248   +*** Checking missing input Interval
1753249   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1753250   +
1753251   +IF NMISS(
1753252   +   AcceptedCmpTotal ,
1753253   +   Age ,
1753254   +   Frq ,
1753255   +   Income ,
1753256   +   Kidhome ,
1753257   +   Mnt ,
1753258   +   MntFishProducts ,
1753259   +   MntFruits ,
1753260   +   MntGoldProds ,
1753261   +   MntMeatProducts ,
1753262   +   MntSweetProducts ,
1753263   +   MntWines ,
1753264   +   MonthsAsCustomer ,
1753265   +   NumCatalogPurchases ,
1753266   +   NumDealsPurchases ,
1753267   +   NumDistPurchases ,
1753268   +   NumStorePurchases ,
1753269   +   NumWebPurchases ,
1753270   +   NumWebVisitsMonth ,
1753271   +   RFMstat ,
1753272   +   RMntFrq ,
1753273   +   Recency ,
1753274   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1753275   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1753276   +
1753277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753278   +END;
MPRINT(EM_DIAGRAM):   END;
1753279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753280   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1753281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753282   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1753283   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1753284   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1753285   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1753286   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1753287   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1753288   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1753289   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1753290   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1753291   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1753292   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1753293   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1753294   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1753295   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1753296   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1753297   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1753298   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1753299   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1753300   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1753301   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1753302   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1753303   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1753304   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1753305   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1753306   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1753307   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1753308   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1753309   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1753310   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1753311   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1753312   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1753313   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1753314   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1753315   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1753316   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1753317   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1753318   +END;
MPRINT(EM_DIAGRAM):   END;
1753319   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1753320   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1753321   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1753322   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1753323   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1753324   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1753325   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1753326   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1753327   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1753328   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1753329   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1753330   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1753331   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1753332   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1753333   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1753334   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1753335   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1753336   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1753337   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1753338   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1753339   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1753340   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1753341   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1753342   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1753343   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1753344   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1753345   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1753346   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1753347   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1753348   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1753349   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1753350   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1753351   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1753352   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1753353   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1753354   +   ELSE S_NumCatalogPurchases
1753355   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1753356   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1753357   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1753358   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1753359   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1753360   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1753361   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1753362   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1753363   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1753364   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1753365   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1753366   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1753367   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1753368   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1753369   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1753370   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1753371   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1753372   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1753373   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1753374   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1753375   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1753376   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1753377   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1753378   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1753379   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1753380   +END;
MPRINT(EM_DIAGRAM):   END;
1753381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753382   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1753383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753385   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1753386   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753388   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1753389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753390   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1753391   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1753392   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1753393   +        S_Income  +    -1.07615700855274 * S_Kidhome
1753394   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1753395   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1753396   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1753397   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1753398   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1753399   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1753400   +          +      0.3429043319369 * S_NumDealsPurchases
1753401   +          +     0.71313309767469 * S_NumDistPurchases
1753402   +          +     0.06017757740083 * S_NumStorePurchases
1753403   +          +    -0.19817724925068 * S_NumWebPurchases
1753404   +          +     1.34164122205952 * S_NumWebVisitsMonth
1753405   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1753406   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1753407   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1753408   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1753409   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1753410   +        S_Income  +     -0.0027232441092 * S_Kidhome
1753411   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1753412   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1753413   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1753414   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1753415   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1753416   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1753417   +          +      0.4576973746858 * S_NumDealsPurchases
1753418   +          +     0.15590877272659 * S_NumDistPurchases
1753419   +          +    -0.33414539713736 * S_NumStorePurchases
1753420   +          +    -0.39370244666257 * S_NumWebPurchases
1753421   +          +     0.52596714886704 * S_NumWebVisitsMonth
1753422   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1753423   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1753424   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1753425   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1753426   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1753427   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1753428   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1753429   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1753430   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1753431   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1753432   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1753433   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1753434   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1753435   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1753436   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1753437   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1753438   +          +      0.4663802937397 * Marital_StatusDivorced
1753439   +          +    -1.27401898796099 * Marital_StatusMarried
1753440   +          +      1.3125969368079 * Marital_StatusSingle
1753441   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1753442   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1753443   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1753444   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1753445   +          +     0.07419179522004 * Marital_StatusDivorced
1753446   +          +     0.00234615813337 * Marital_StatusMarried
1753447   +          +    -0.00725460458412 * Marital_StatusSingle
1753448   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1753449   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1753450   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1753451   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1753452   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1753453   +END;
MPRINT(EM_DIAGRAM):   END;
1753454   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1753455   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1753456   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1753457   +END;
MPRINT(EM_DIAGRAM):   END;
1753458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753459   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1753460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753461   +
1753462   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1753463   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1753464   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1753465   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1753466   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1753467   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753468   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1753469   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1753470   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1753471   +end;
MPRINT(EM_DIAGRAM):   end;
1753472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753473   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1753474   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1753475   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1753476   +   end;
MPRINT(EM_DIAGRAM):   end;
1753477   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1753478   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1753479   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1753480   +   end;
MPRINT(EM_DIAGRAM):   end;
1753481   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753482   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1753483   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1753484   +   end;
MPRINT(EM_DIAGRAM):   end;
1753485   +end;
MPRINT(EM_DIAGRAM):   end;
1753486   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1753487   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1753488   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1753489   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1753490   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1753491   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1753492   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1753493   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1753494   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1753495   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1753496   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1753497   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1753498   +END;
MPRINT(EM_DIAGRAM):   END;
1753499   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1753500   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1753501   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1753502   +END;
MPRINT(EM_DIAGRAM):   END;
1753503   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1753504   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1753505   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1753506   +END;
MPRINT(EM_DIAGRAM):   END;
1753507   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1753508   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1753509   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1753510   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1753511   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1753512   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1753513   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1753514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753515   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1753516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1753517   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1753518   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1753519   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1753520   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1753521   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1753522   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1753523   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1753524   +END;
MPRINT(EM_DIAGRAM):   END;
1753525   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1753526   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1753527   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1753528   +drop
1753529   +H11
1753530   +H12
1753531   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1753532   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1753533   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1753534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753535   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1753536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753537   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1753538   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1753539   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1753540   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1753541   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753542   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1753543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753544   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1753545   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1753546   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1753547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753548   +* Ensmbl26: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Maximum Posteriors of 3 models;
1753549   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753550   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1753551   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1753552   +P_DepVar1 = max(
1753553   +Neural9_P_DepVar1 ,
1753554   +Neural3_P_DepVar1 ,
1753555   +Neural2_P_DepVar1
1753556   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural9_P_DepVar1 , Neural3_P_DepVar1 ,
Neural2_P_DepVar1 );
1753557   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1753558   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1753559   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1753560   +end;
MPRINT(EM_DIAGRAM):   end;
1753561   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1753562   +P_DepVar0 = max(
1753563   +Neural9_P_DepVar0 ,
1753564   +Neural3_P_DepVar0 ,
1753565   +Neural2_P_DepVar0
1753566   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural9_P_DepVar0 , Neural3_P_DepVar0 ,
Neural2_P_DepVar0 );
1753567   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1753568   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1753569   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1753570   +end;
MPRINT(EM_DIAGRAM):   end;
1753571   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1753572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753573   +* Ensmbl26: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Classification Vars;
1753574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753575   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1753576   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1753577   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1753578   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1753579   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1753580   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1753581   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1753582   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1753583   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1753584   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1753585   +end;
MPRINT(EM_DIAGRAM):   end;
1753586   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1753587   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1753588   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1753589   +end;
MPRINT(EM_DIAGRAM):   end;
1753590   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1753591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753592   +* Ensmbl26: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Producing Unformatted variable;
1753593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753594   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1753595   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1753596   +else
1753597   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1753598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753599   +* Ensmbl26: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing _WARN_ Variable;
1753600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753601   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1753602   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1753603   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1753604   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1753605   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1753606   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1753607   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1753608   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1753609   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1753610   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1753611   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1753612   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1753613   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1753614   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1753615   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1753616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753617   +* Ensmbl26: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Residual Vars;
1753618   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753619   +if
1753620   +F_DepVar NE '1'
1753621   +AND F_DepVar NE '0'
1753622   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1753623   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1753624   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1753625   +end;
MPRINT(EM_DIAGRAM):   end;
1753626   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753627   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1753628   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1753629   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1753630   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1753631   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1753632   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1753633   +END;
MPRINT(EM_DIAGRAM):   END;
1753634   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1753635    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL26_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1753636    quit;
1753637    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1753638    filename emflow
1753638  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring NEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753639    *------------------------------------------------------------*;
1753640    * Ensmbl26: Scoring NEURAL9_VALIDATE data;
1753641    *------------------------------------------------------------*;
1753642    data EMWS8.Ensmbl26_VALIDATE
1753643    / view=EMWS8.Ensmbl26_VALIDATE
1753644    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_VALIDATE / view=EMWS8.Ensmbl26_VALIDATE ;
1753645    set EMWS8.Neural9_VALIDATE
1753646    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural9_VALIDATE ;
1753647    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas.
1753648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753649   +* Ensmbl26: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Combine model for DepVar;
1753650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753651   +* Ensmbl26: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 1 of 3;
1753652   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753654   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1753655   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1753656   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1753657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753659   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1753660   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1753661   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1753662   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753664   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1753665   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1753666   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1753667   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753669   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1753670   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1753671   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1753672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753673   +
1753674   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1753675   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1753675  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1753676   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1753677   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1753678   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1753679   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1753680   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1753681   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753682   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1753683   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1753684   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1753685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753687   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1753688   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753689   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1753690   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1753691   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1753692   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753693   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1753694   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1753695   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1753696   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753697   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753698   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1753699   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1753700   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1753701   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753703   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1753704   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1753705   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1753706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1753707   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1753708   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1753709   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1753710   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1753711   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1753712   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1753713   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1753714   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1753715   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1753716   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1753717   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1753718   +LENGTH _WARN_ $4
1753719   +      F_DepVar  $ 12
1753720   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1753721   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1753722   +
1753723   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1753724   +
1753725   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1753726   +
1753727   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1753728   +
1753729   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1753730   +
1753731   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1753732   +
1753733   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1753734   +
1753735   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1753736   +
1753737   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1753738   +
1753739   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1753740   +
1753741   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1753742   +
1753743   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1753744   +
1753745   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1753746   +
1753747   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1753748   +
1753749   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1753750   +
1753751   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1753752   +
1753753   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1753754   +
1753755   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1753756   +
1753757   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1753758   +
1753759   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1753760   +
1753761   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1753762   +
1753763   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1753764   +
1753765   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1753766   +
1753767   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1753768   +
1753769   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1753770   +
1753771   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1753772   +
1753773   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1753774   +
1753775   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1753776   +
1753777   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1753778   +
1753779   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1753780   +
1753781   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1753782   +
1753783   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1753784   +
1753785   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1753786   +
1753787   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1753788   +
1753789   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1753790   +
1753791   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1753792   +
1753793   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1753794   +
1753795   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1753796   +
1753797   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1753798   +
1753799   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1753800   +
1753801   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1753802   +
1753803   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1753804   +
1753805   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1753806   +
1753807   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1753808   +
1753809   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1753810   +
1753811   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1753812   +
1753813   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1753814   +
1753815   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1753816   +
1753817   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1753818   +
1753819   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1753820   +
1753821   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1753822   +
1753823   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1753824   +
1753825   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1753826   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1753827   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1753828   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1753829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753831   +end;
MPRINT(EM_DIAGRAM):   end;
1753832   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753834   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1753835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753836   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753837   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1753838   +   end;
MPRINT(EM_DIAGRAM):   end;
1753839   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753840   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1753841   +   end;
MPRINT(EM_DIAGRAM):   end;
1753842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753843   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1753844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753846   +   end;
MPRINT(EM_DIAGRAM):   end;
1753847   +end;
MPRINT(EM_DIAGRAM):   end;
1753848   +
1753849   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1753850   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1753851   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1753852   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1753853   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753854   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753855   +end;
MPRINT(EM_DIAGRAM):   end;
1753856   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753857   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753858   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1753859   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753860   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753861   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1753862   +   end;
MPRINT(EM_DIAGRAM):   end;
1753863   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753864   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1753865   +   end;
MPRINT(EM_DIAGRAM):   end;
1753866   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753867   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1753868   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753869   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753870   +   end;
MPRINT(EM_DIAGRAM):   end;
1753871   +end;
MPRINT(EM_DIAGRAM):   end;
1753872   +
1753873   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1753874   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1753875   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1753876   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1753877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753879   +end;
MPRINT(EM_DIAGRAM):   end;
1753880   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753881   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753882   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1753883   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753884   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753885   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1753886   +   end;
MPRINT(EM_DIAGRAM):   end;
1753887   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753888   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1753889   +   end;
MPRINT(EM_DIAGRAM):   end;
1753890   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753891   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1753892   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753893   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753894   +   end;
MPRINT(EM_DIAGRAM):   end;
1753895   +end;
MPRINT(EM_DIAGRAM):   end;
1753896   +
1753897   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1753898   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1753899   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1753900   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1753901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753903   +end;
MPRINT(EM_DIAGRAM):   end;
1753904   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753906   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1753907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753908   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753909   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1753910   +   end;
MPRINT(EM_DIAGRAM):   end;
1753911   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753912   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1753913   +   end;
MPRINT(EM_DIAGRAM):   end;
1753914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753915   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1753916   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753917   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753918   +   end;
MPRINT(EM_DIAGRAM):   end;
1753919   +end;
MPRINT(EM_DIAGRAM):   end;
1753920   +
1753921   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1753922   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1753923   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1753924   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1753925   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753927   +end;
MPRINT(EM_DIAGRAM):   end;
1753928   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753929   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753930   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1753931   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753932   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753933   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1753934   +   end;
MPRINT(EM_DIAGRAM):   end;
1753935   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753936   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1753937   +   end;
MPRINT(EM_DIAGRAM):   end;
1753938   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753939   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1753940   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753941   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753942   +   end;
MPRINT(EM_DIAGRAM):   end;
1753943   +end;
MPRINT(EM_DIAGRAM):   end;
1753944   +
1753945   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1753946   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1753947   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1753948   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1753949   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753950   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753951   +end;
MPRINT(EM_DIAGRAM):   end;
1753952   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753953   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753954   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1753955   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753956   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1753957   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1753958   +   end;
MPRINT(EM_DIAGRAM):   end;
1753959   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1753960   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1753961   +   end;
MPRINT(EM_DIAGRAM):   end;
1753962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753963   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1753964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753966   +   end;
MPRINT(EM_DIAGRAM):   end;
1753967   +end;
MPRINT(EM_DIAGRAM):   end;
1753968   +
1753969   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1753970   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1753971   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1753972   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1753973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1753974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753975   +end;
MPRINT(EM_DIAGRAM):   end;
1753976   +else do;
MPRINT(EM_DIAGRAM):   else do;
1753977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1753978   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1753979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1753980   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1753981   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1753982   +   end;
MPRINT(EM_DIAGRAM):   end;
1753983   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1753984   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1753985   +   end;
MPRINT(EM_DIAGRAM):   end;
1753986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1753987   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1753988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1753989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1753990   +   end;
MPRINT(EM_DIAGRAM):   end;
1753991   +end;
MPRINT(EM_DIAGRAM):   end;
1753992   +
1753993   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1753994   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1753995   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1753996   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1753997   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1753998   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1753999   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1754000   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1754001   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1754002   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1754003   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1754004   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1754005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754007   +end;
MPRINT(EM_DIAGRAM):   end;
1754008   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754009   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1754010   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1754011   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754012   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1754013   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1754014   +   end;
MPRINT(EM_DIAGRAM):   end;
1754015   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1754016   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1754017   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1754018   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1754019   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1754020   +   end;
MPRINT(EM_DIAGRAM):   end;
1754021   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1754022   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1754023   +   end;
MPRINT(EM_DIAGRAM):   end;
1754024   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1754025   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1754026   +   end;
MPRINT(EM_DIAGRAM):   end;
1754027   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1754028   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1754029   +   end;
MPRINT(EM_DIAGRAM):   end;
1754030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754031   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1754032   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1754033   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1754034   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1754035   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754036   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754037   +   end;
MPRINT(EM_DIAGRAM):   end;
1754038   +end;
MPRINT(EM_DIAGRAM):   end;
1754039   +
1754040   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1754041   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1754042   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1754043   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1754044   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1754045   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1754046   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1754047   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1754048   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1754049   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1754050   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1754051   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1754052   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1754053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754055   +end;
MPRINT(EM_DIAGRAM):   end;
1754056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754057   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1754058   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1754059   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754060   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1754061   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1754062   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1754063   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1754064   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1754065   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754066   +         end;
MPRINT(EM_DIAGRAM):   end;
1754067   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1754068   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1754069   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1754070   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754071   +            end;
MPRINT(EM_DIAGRAM):   end;
1754072   +         end;
MPRINT(EM_DIAGRAM):   end;
1754073   +      end;
MPRINT(EM_DIAGRAM):   end;
1754074   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1754075   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1754076   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1754077   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754078   +         end;
MPRINT(EM_DIAGRAM):   end;
1754079   +      end;
MPRINT(EM_DIAGRAM):   end;
1754080   +   end;
MPRINT(EM_DIAGRAM):   end;
1754081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754082   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1754083   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1754084   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754085   +      end;
MPRINT(EM_DIAGRAM):   end;
1754086   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1754087   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1754088   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1754089   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1754090   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1754091   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1754092   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754093   +         end;
MPRINT(EM_DIAGRAM):   end;
1754094   +      end;
MPRINT(EM_DIAGRAM):   end;
1754095   +   end;
MPRINT(EM_DIAGRAM):   end;
1754096   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1754097   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1754098   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1754099   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1754100   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1754101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754103   +   end;
MPRINT(EM_DIAGRAM):   end;
1754104   +end;
MPRINT(EM_DIAGRAM):   end;
1754105   +
1754106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754107   +*** Checking missing input Interval
1754108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1754109   +
1754110   +IF NMISS(
1754111   +   AcceptedCmpTotal ,
1754112   +   Age ,
1754113   +   Frq ,
1754114   +   Income ,
1754115   +   Kidhome ,
1754116   +   Mnt ,
1754117   +   MntFishProducts ,
1754118   +   MntFruits ,
1754119   +   MntGoldProds ,
1754120   +   MntMeatProducts ,
1754121   +   MntSweetProducts ,
1754122   +   MntWines ,
1754123   +   MonthsAsCustomer ,
1754124   +   NumCatalogPurchases ,
1754125   +   NumDealsPurchases ,
1754126   +   NumDistPurchases ,
1754127   +   NumStorePurchases ,
1754128   +   NumWebPurchases ,
1754129   +   NumWebVisitsMonth ,
1754130   +   RFMstat ,
1754131   +   RMntFrq ,
1754132   +   Recency ,
1754133   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1754134   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1754135   +
1754136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754137   +END;
MPRINT(EM_DIAGRAM):   END;
1754138   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754139   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1754140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754141   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1754142   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1754143   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1754144   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1754145   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1754146   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1754147   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1754148   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1754149   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1754150   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1754151   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1754152   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1754153   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1754154   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1754155   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1754156   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1754157   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1754158   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1754159   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1754160   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1754161   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1754162   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1754163   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1754164   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1754165   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1754166   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1754167   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1754168   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1754169   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1754170   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1754171   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1754172   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1754173   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1754174   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1754175   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1754176   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1754177   +END;
MPRINT(EM_DIAGRAM):   END;
1754178   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1754179   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1754180   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1754181   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1754182   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1754183   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1754184   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1754185   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1754186   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1754187   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1754188   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1754189   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1754190   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1754191   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1754192   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1754193   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1754194   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1754195   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1754196   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1754197   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1754198   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1754199   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1754200   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1754201   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1754202   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1754203   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1754204   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1754205   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1754206   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1754207   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1754208   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1754209   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1754210   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1754211   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1754212   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1754213   +   ELSE S_NumCatalogPurchases
1754214   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1754215   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1754216   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1754217   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1754218   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1754219   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1754220   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1754221   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1754222   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1754223   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1754224   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1754225   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1754226   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1754227   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1754228   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1754229   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1754230   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1754231   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1754232   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1754233   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1754234   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1754235   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1754236   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1754237   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1754238   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1754239   +END;
MPRINT(EM_DIAGRAM):   END;
1754240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754241   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1754242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754244   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1754245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754247   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1754248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754249   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1754250   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1754251   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1754252   +        S_Income  +    -0.14142658616971 * S_Kidhome
1754253   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1754254   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1754255   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1754256   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1754257   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1754258   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1754259   +          +     0.96837841774168 * S_NumDealsPurchases
1754260   +          +      0.2846105381881 * S_NumDistPurchases
1754261   +          +    -0.69514041792943 * S_NumStorePurchases
1754262   +          +    -0.96425407351749 * S_NumWebPurchases
1754263   +          +     0.79545449599683 * S_NumWebVisitsMonth
1754264   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1754265   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1754266   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1754267   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1754268   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1754269   +        S_Income  +    -0.55432195959203 * S_Kidhome
1754270   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1754271   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1754272   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1754273   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1754274   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1754275   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1754276   +          +      0.2190184330724 * S_NumDealsPurchases
1754277   +          +    -0.01682909442896 * S_NumDistPurchases
1754278   +          +    -0.70244951048552 * S_NumStorePurchases
1754279   +          +     -0.3057457659316 * S_NumWebPurchases
1754280   +          +     0.95928538762715 * S_NumWebVisitsMonth
1754281   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1754282   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1754283   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1754284   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1754285   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1754286   +        S_Income  +    -0.06354861159882 * S_Kidhome
1754287   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1754288   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1754289   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1754290   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1754291   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1754292   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1754293   +          +    -0.21394230159696 * S_NumDealsPurchases
1754294   +          +    -0.23833771124663 * S_NumDistPurchases
1754295   +          +     0.45832031017813 * S_NumStorePurchases
1754296   +          +    -0.30226952040179 * S_NumWebPurchases
1754297   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1754298   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1754299   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1754300   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1754301   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1754302   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1754303   +        S_Income  +    -0.04839586846715 * S_Kidhome
1754304   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1754305   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1754306   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1754307   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1754308   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1754309   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1754310   +          +    -0.43749647771198 * S_NumDealsPurchases
1754311   +          +     0.21263473847472 * S_NumDistPurchases
1754312   +          +     0.26102168039141 * S_NumStorePurchases
1754313   +          +     0.54921725943657 * S_NumWebPurchases
1754314   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1754315   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1754316   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1754317   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1754318   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1754319   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1754320   +        S_Income  +     0.71499527198653 * S_Kidhome
1754321   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1754322   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1754323   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1754324   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1754325   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1754326   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1754327   +          +     0.09436067776126 * S_NumDealsPurchases
1754328   +          +    -0.02824201859641 * S_NumDistPurchases
1754329   +          +    -0.06770433780564 * S_NumStorePurchases
1754330   +          +    -0.07177620319715 * S_NumWebPurchases
1754331   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1754332   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1754333   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1754334   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1754335   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1754336   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1754337   +        S_Income  +    -0.63474522042341 * S_Kidhome
1754338   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1754339   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1754340   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1754341   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1754342   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1754343   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1754344   +          +    -0.51154511343396 * S_NumDealsPurchases
1754345   +          +    -0.52422915823572 * S_NumDistPurchases
1754346   +          +     0.30305498422357 * S_NumStorePurchases
1754347   +          +     0.12197321559338 * S_NumWebPurchases
1754348   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1754349   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1754350   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1754351   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1754352   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1754353   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1754354   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1754355   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1754356   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1754357   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1754358   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1754359   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1754360   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1754361   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1754362   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1754363   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1754364   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1754365   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1754366   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1754367   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1754368   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1754369   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1754370   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1754371   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1754372   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1754373   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1754374   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1754375   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1754376   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1754377   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1754378   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1754379   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1754380   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1754381   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1754382   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1754383   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1754384   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1754385   +          +     0.10234616400375 * Marital_StatusDivorced
1754386   +          +     0.27961650739075 * Marital_StatusMarried
1754387   +          +    -0.40239488723767 * Marital_StatusSingle
1754388   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1754389   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1754390   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1754391   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1754392   +          +     0.46385792428023 * Marital_StatusDivorced
1754393   +          +    -0.62344590646391 * Marital_StatusMarried
1754394   +          +     0.61767209252062 * Marital_StatusSingle
1754395   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1754396   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1754397   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1754398   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1754399   +          +    -0.07839612590836 * Marital_StatusDivorced
1754400   +          +     0.35316864062221 * Marital_StatusMarried
1754401   +          +    -0.10730136429834 * Marital_StatusSingle
1754402   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1754403   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1754404   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1754405   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1754406   +          +    -0.09942175269886 * Marital_StatusDivorced
1754407   +          +     0.24385460865335 * Marital_StatusMarried
1754408   +          +    -0.33658955096296 * Marital_StatusSingle
1754409   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1754410   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1754411   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1754412   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1754413   +          +    -0.08047852561096 * Marital_StatusDivorced
1754414   +          +     1.16485862694561 * Marital_StatusMarried
1754415   +          +    -0.94140251178566 * Marital_StatusSingle
1754416   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1754417   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1754418   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1754419   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1754420   +          +    -0.16621963893391 * Marital_StatusDivorced
1754421   +          +    -0.44542186297324 * Marital_StatusMarried
1754422   +          +     0.42176133228308 * Marital_StatusSingle
1754423   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1754424   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1754425   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1754426   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1754427   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1754428   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1754429   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1754430   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1754431   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1754432   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1754433   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1754434   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1754435   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1754436   +END;
MPRINT(EM_DIAGRAM):   END;
1754437   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1754438   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1754439   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1754440   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1754441   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1754442   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1754443   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1754444   +END;
MPRINT(EM_DIAGRAM):   END;
1754445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754446   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1754447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754448   +
1754449   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1754450   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1754451   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1754452   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1754453   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1754454   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754455   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1754456   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1754457   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1754458   +end;
MPRINT(EM_DIAGRAM):   end;
1754459   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754460   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1754461   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1754462   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1754463   +   end;
MPRINT(EM_DIAGRAM):   end;
1754464   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1754465   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1754466   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1754467   +   end;
MPRINT(EM_DIAGRAM):   end;
1754468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754469   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1754470   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1754471   +   end;
MPRINT(EM_DIAGRAM):   end;
1754472   +end;
MPRINT(EM_DIAGRAM):   end;
1754473   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1754474   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1754475   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1754476   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1754477   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1754478   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1754479   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1754480   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1754481   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1754482   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1754483   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1754484   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1754485   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1754486   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1754487   +END;
MPRINT(EM_DIAGRAM):   END;
1754488   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1754489   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1754490   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1754491   +END;
MPRINT(EM_DIAGRAM):   END;
1754492   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1754493   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1754494   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1754495   +END;
MPRINT(EM_DIAGRAM):   END;
1754496   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1754497   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1754498   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1754499   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1754500   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1754501   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1754502   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1754503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754504   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1754505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754506   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1754507   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1754508   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1754509   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1754510   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1754511   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1754512   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1754513   +END;
MPRINT(EM_DIAGRAM):   END;
1754514   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1754515   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1754516   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1754517   +drop
1754518   +H11
1754519   +H12
1754520   +H13
1754521   +H14
1754522   +H15
1754523   +H16
1754524   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1754525   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1754526   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1754527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754528   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1754529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754530   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1754531   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1754532   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1754533   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1754534   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754535   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1754536   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754537   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1754538   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1754539   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1754540   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754541   +* Ensmbl26: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 2 of 3;
1754542   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754543   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754544   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1754545   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1754546   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1754547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1754548   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1754549   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1754550   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1754551   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1754552   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1754553   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1754554   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1754555   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1754556   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1754557   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1754558   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1754559   +LENGTH _WARN_ $4
1754560   +      F_DepVar  $ 12
1754561   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1754562   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1754563   +
1754564   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1754565   +
1754566   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1754567   +
1754568   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1754569   +
1754570   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1754571   +
1754572   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1754573   +
1754574   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1754575   +
1754576   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1754577   +
1754578   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1754579   +
1754580   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1754581   +
1754582   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1754583   +
1754584   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1754585   +
1754586   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1754587   +
1754588   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1754589   +
1754590   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1754591   +
1754592   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1754593   +
1754594   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1754595   +
1754596   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1754597   +
1754598   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1754599   +
1754600   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1754601   +
1754602   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1754603   +
1754604   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1754605   +
1754606   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1754607   +
1754608   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1754609   +
1754610   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1754611   +
1754612   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1754613   +
1754614   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1754615   +
1754616   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1754617   +
1754618   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1754619   +
1754620   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1754621   +
1754622   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1754623   +
1754624   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1754625   +
1754626   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1754627   +
1754628   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1754629   +
1754630   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1754631   +
1754632   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1754633   +
1754634   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1754635   +
1754636   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1754637   +
1754638   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1754639   +
1754640   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1754641   +
1754642   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1754643   +
1754644   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1754645   +
1754646   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1754647   +
1754648   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1754649   +
1754650   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1754651   +
1754652   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1754653   +
1754654   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1754655   +
1754656   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1754657   +
1754658   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1754659   +
1754660   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1754661   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1754662   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1754663   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1754664   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754666   +end;
MPRINT(EM_DIAGRAM):   end;
1754667   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754668   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1754669   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1754670   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754671   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1754672   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1754673   +   end;
MPRINT(EM_DIAGRAM):   end;
1754674   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1754675   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1754676   +   end;
MPRINT(EM_DIAGRAM):   end;
1754677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754678   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1754679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754681   +   end;
MPRINT(EM_DIAGRAM):   end;
1754682   +end;
MPRINT(EM_DIAGRAM):   end;
1754683   +
1754684   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1754685   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1754686   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1754687   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1754688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754690   +end;
MPRINT(EM_DIAGRAM):   end;
1754691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1754693   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1754694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754695   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1754696   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1754697   +   end;
MPRINT(EM_DIAGRAM):   end;
1754698   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1754699   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1754700   +   end;
MPRINT(EM_DIAGRAM):   end;
1754701   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754702   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1754703   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754704   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754705   +   end;
MPRINT(EM_DIAGRAM):   end;
1754706   +end;
MPRINT(EM_DIAGRAM):   end;
1754707   +
1754708   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1754709   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1754710   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1754711   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1754712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754714   +end;
MPRINT(EM_DIAGRAM):   end;
1754715   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754716   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1754717   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1754718   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754719   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1754720   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1754721   +   end;
MPRINT(EM_DIAGRAM):   end;
1754722   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1754723   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1754724   +   end;
MPRINT(EM_DIAGRAM):   end;
1754725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754726   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1754727   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754728   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754729   +   end;
MPRINT(EM_DIAGRAM):   end;
1754730   +end;
MPRINT(EM_DIAGRAM):   end;
1754731   +
1754732   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1754733   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1754734   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1754735   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1754736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754738   +end;
MPRINT(EM_DIAGRAM):   end;
1754739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1754741   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1754742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754743   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1754744   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1754745   +   end;
MPRINT(EM_DIAGRAM):   end;
1754746   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1754747   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1754748   +   end;
MPRINT(EM_DIAGRAM):   end;
1754749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754750   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1754751   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754752   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754753   +   end;
MPRINT(EM_DIAGRAM):   end;
1754754   +end;
MPRINT(EM_DIAGRAM):   end;
1754755   +
1754756   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1754757   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1754758   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1754759   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1754760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754762   +end;
MPRINT(EM_DIAGRAM):   end;
1754763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1754765   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1754766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754767   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1754768   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1754769   +   end;
MPRINT(EM_DIAGRAM):   end;
1754770   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1754771   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1754772   +   end;
MPRINT(EM_DIAGRAM):   end;
1754773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754774   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1754775   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754776   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754777   +   end;
MPRINT(EM_DIAGRAM):   end;
1754778   +end;
MPRINT(EM_DIAGRAM):   end;
1754779   +
1754780   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1754781   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1754782   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1754783   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1754784   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754786   +end;
MPRINT(EM_DIAGRAM):   end;
1754787   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754788   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1754789   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1754790   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754791   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1754792   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1754793   +   end;
MPRINT(EM_DIAGRAM):   end;
1754794   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1754795   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1754796   +   end;
MPRINT(EM_DIAGRAM):   end;
1754797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754798   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1754799   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754800   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754801   +   end;
MPRINT(EM_DIAGRAM):   end;
1754802   +end;
MPRINT(EM_DIAGRAM):   end;
1754803   +
1754804   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1754805   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1754806   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1754807   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1754808   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754809   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754810   +end;
MPRINT(EM_DIAGRAM):   end;
1754811   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754812   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1754813   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1754814   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754815   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1754816   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1754817   +   end;
MPRINT(EM_DIAGRAM):   end;
1754818   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1754819   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1754820   +   end;
MPRINT(EM_DIAGRAM):   end;
1754821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754822   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1754823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754825   +   end;
MPRINT(EM_DIAGRAM):   end;
1754826   +end;
MPRINT(EM_DIAGRAM):   end;
1754827   +
1754828   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1754829   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1754830   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1754831   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1754832   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1754833   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1754834   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1754835   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1754836   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1754837   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1754838   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1754839   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1754840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754842   +end;
MPRINT(EM_DIAGRAM):   end;
1754843   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754844   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1754845   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1754846   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754847   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1754848   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1754849   +   end;
MPRINT(EM_DIAGRAM):   end;
1754850   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1754851   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1754852   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1754853   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1754854   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1754855   +   end;
MPRINT(EM_DIAGRAM):   end;
1754856   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1754857   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1754858   +   end;
MPRINT(EM_DIAGRAM):   end;
1754859   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1754860   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1754861   +   end;
MPRINT(EM_DIAGRAM):   end;
1754862   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1754863   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1754864   +   end;
MPRINT(EM_DIAGRAM):   end;
1754865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754866   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1754867   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1754868   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1754869   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1754870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754872   +   end;
MPRINT(EM_DIAGRAM):   end;
1754873   +end;
MPRINT(EM_DIAGRAM):   end;
1754874   +
1754875   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1754876   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1754877   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1754878   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1754879   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1754880   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1754881   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1754882   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1754883   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1754884   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1754885   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1754886   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1754887   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1754888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1754889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754890   +end;
MPRINT(EM_DIAGRAM):   end;
1754891   +else do;
MPRINT(EM_DIAGRAM):   else do;
1754892   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1754893   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1754894   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1754895   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1754896   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1754897   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1754898   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1754899   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1754900   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754901   +         end;
MPRINT(EM_DIAGRAM):   end;
1754902   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1754903   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1754904   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1754905   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754906   +            end;
MPRINT(EM_DIAGRAM):   end;
1754907   +         end;
MPRINT(EM_DIAGRAM):   end;
1754908   +      end;
MPRINT(EM_DIAGRAM):   end;
1754909   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1754910   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1754911   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1754912   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754913   +         end;
MPRINT(EM_DIAGRAM):   end;
1754914   +      end;
MPRINT(EM_DIAGRAM):   end;
1754915   +   end;
MPRINT(EM_DIAGRAM):   end;
1754916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1754917   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1754918   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1754919   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754920   +      end;
MPRINT(EM_DIAGRAM):   end;
1754921   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1754922   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1754923   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1754924   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1754925   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1754926   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1754927   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1754928   +         end;
MPRINT(EM_DIAGRAM):   end;
1754929   +      end;
MPRINT(EM_DIAGRAM):   end;
1754930   +   end;
MPRINT(EM_DIAGRAM):   end;
1754931   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1754932   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1754933   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1754934   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1754935   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1754936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1754937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754938   +   end;
MPRINT(EM_DIAGRAM):   end;
1754939   +end;
MPRINT(EM_DIAGRAM):   end;
1754940   +
1754941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754942   +*** Checking missing input Interval
1754943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1754944   +
1754945   +IF NMISS(
1754946   +   AcceptedCmpTotal ,
1754947   +   Age ,
1754948   +   Frq ,
1754949   +   Income ,
1754950   +   Kidhome ,
1754951   +   Mnt ,
1754952   +   MntFishProducts ,
1754953   +   MntFruits ,
1754954   +   MntGoldProds ,
1754955   +   MntMeatProducts ,
1754956   +   MntSweetProducts ,
1754957   +   MntWines ,
1754958   +   MonthsAsCustomer ,
1754959   +   NumCatalogPurchases ,
1754960   +   NumDealsPurchases ,
1754961   +   NumDistPurchases ,
1754962   +   NumStorePurchases ,
1754963   +   NumWebPurchases ,
1754964   +   NumWebVisitsMonth ,
1754965   +   RFMstat ,
1754966   +   RMntFrq ,
1754967   +   Recency ,
1754968   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1754969   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1754970   +
1754971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1754972   +END;
MPRINT(EM_DIAGRAM):   END;
1754973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754974   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1754975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1754976   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1754977   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1754978   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1754979   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1754980   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1754981   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1754982   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1754983   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1754984   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1754985   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1754986   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1754987   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1754988   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1754989   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1754990   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1754991   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1754992   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1754993   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1754994   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1754995   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1754996   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1754997   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1754998   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1754999   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1755000   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1755001   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1755002   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1755003   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1755004   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1755005   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1755006   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1755007   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1755008   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1755009   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1755010   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1755011   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1755012   +END;
MPRINT(EM_DIAGRAM):   END;
1755013   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1755014   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1755015   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1755016   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1755017   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1755018   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1755019   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1755020   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1755021   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1755022   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1755023   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1755024   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1755025   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1755026   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1755027   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1755028   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1755029   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1755030   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1755031   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1755032   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1755033   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1755034   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1755035   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1755036   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1755037   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1755038   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1755039   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1755040   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1755041   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1755042   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1755043   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1755044   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1755045   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1755046   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1755047   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1755048   +   ELSE S_NumCatalogPurchases
1755049   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1755050   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1755051   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1755052   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1755053   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1755054   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1755055   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1755056   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1755057   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1755058   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1755059   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1755060   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1755061   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1755062   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1755063   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1755064   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1755065   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1755066   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1755067   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1755068   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1755069   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1755070   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1755071   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1755072   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1755073   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1755074   +END;
MPRINT(EM_DIAGRAM):   END;
1755075   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755076   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1755077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755079   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1755080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755082   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1755083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755084   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1755085   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1755086   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1755087   +        S_Income  +     0.51123266106809 * S_Kidhome
1755088   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1755089   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1755090   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1755091   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1755092   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1755093   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1755094   +          +     1.34095732961105 * S_NumDealsPurchases
1755095   +          +     0.16605991333252 * S_NumDistPurchases
1755096   +          +    -0.61746267736536 * S_NumStorePurchases
1755097   +          +    -0.61812800689506 * S_NumWebPurchases
1755098   +          +     1.44649145055387 * S_NumWebVisitsMonth
1755099   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1755100   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1755101   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1755102   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1755103   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1755104   +        S_Income  +     0.52295323651199 * S_Kidhome
1755105   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1755106   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1755107   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1755108   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1755109   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1755110   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1755111   +          +    -0.72543332317832 * S_NumDealsPurchases
1755112   +          +    -0.05245472565117 * S_NumDistPurchases
1755113   +          +     1.00667431585298 * S_NumStorePurchases
1755114   +          +     1.02836701470962 * S_NumWebPurchases
1755115   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1755116   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1755117   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1755118   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1755119   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1755120   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1755121   +        S_Income  +     0.58025720116696 * S_Kidhome
1755122   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1755123   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1755124   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1755125   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1755126   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1755127   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1755128   +          +     0.12670438262487 * S_NumDealsPurchases
1755129   +          +    -0.46113523834333 * S_NumDistPurchases
1755130   +          +     0.07074818720567 * S_NumStorePurchases
1755131   +          +    -0.05066645783537 * S_NumWebPurchases
1755132   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1755133   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1755134   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1755135   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1755136   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1755137   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1755138   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1755139   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1755140   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1755141   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1755142   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1755143   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1755144   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1755145   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1755146   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1755147   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1755148   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1755149   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1755150   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1755151   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1755152   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1755153   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1755154   +          +     0.12692950862511 * Marital_StatusDivorced
1755155   +          +     0.10026497666167 * Marital_StatusMarried
1755156   +          +    -0.19893864592813 * Marital_StatusSingle
1755157   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1755158   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1755159   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1755160   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1755161   +          +    -0.16785192490199 * Marital_StatusDivorced
1755162   +          +     0.13153695130362 * Marital_StatusMarried
1755163   +          +    -0.50411544587104 * Marital_StatusSingle
1755164   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1755165   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1755166   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1755167   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1755168   +          +    -0.62654958087044 * Marital_StatusDivorced
1755169   +          +     1.86250132393341 * Marital_StatusMarried
1755170   +          +    -1.37067556451928 * Marital_StatusSingle
1755171   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1755172   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1755173   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1755174   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1755175   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1755176   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1755177   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1755178   +END;
MPRINT(EM_DIAGRAM):   END;
1755179   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1755180   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1755181   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1755182   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1755183   +END;
MPRINT(EM_DIAGRAM):   END;
1755184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755185   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1755186   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755187   +
1755188   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1755189   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1755190   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1755191   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1755192   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1755193   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755194   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1755195   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1755196   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1755197   +end;
MPRINT(EM_DIAGRAM):   end;
1755198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755199   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1755200   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1755201   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1755202   +   end;
MPRINT(EM_DIAGRAM):   end;
1755203   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1755204   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1755205   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1755206   +   end;
MPRINT(EM_DIAGRAM):   end;
1755207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755208   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1755209   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1755210   +   end;
MPRINT(EM_DIAGRAM):   end;
1755211   +end;
MPRINT(EM_DIAGRAM):   end;
1755212   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1755213   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1755214   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1755215   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1755216   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1755217   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1755218   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1755219   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1755220   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1755221   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1755222   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1755223   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1755224   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1755225   +END;
MPRINT(EM_DIAGRAM):   END;
1755226   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1755227   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1755228   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1755229   +END;
MPRINT(EM_DIAGRAM):   END;
1755230   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1755231   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1755232   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1755233   +END;
MPRINT(EM_DIAGRAM):   END;
1755234   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1755235   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1755236   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1755237   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1755238   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1755239   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1755240   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1755241   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755242   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1755243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755244   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1755245   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1755246   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1755247   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1755248   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1755249   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1755250   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1755251   +END;
MPRINT(EM_DIAGRAM):   END;
1755252   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1755253   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1755254   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1755255   +drop
1755256   +H11
1755257   +H12
1755258   +H13
1755259   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1755260   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1755261   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1755262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755263   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1755264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755265   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1755266   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1755267   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1755268   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1755269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755270   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1755271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755272   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1755273   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1755274   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1755275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755276   +* Ensmbl26: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 3 of 3;
1755277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755278   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755279   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1755280   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1755281   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1755282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755283   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1755284   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1755285   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1755286   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1755287   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1755288   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1755289   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1755290   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1755291   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1755292   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1755293   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1755294   +LENGTH _WARN_ $4
1755295   +      F_DepVar  $ 12
1755296   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1755297   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1755298   +
1755299   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1755300   +
1755301   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1755302   +
1755303   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1755304   +
1755305   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1755306   +
1755307   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1755308   +
1755309   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1755310   +
1755311   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1755312   +
1755313   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1755314   +
1755315   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1755316   +
1755317   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1755318   +
1755319   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1755320   +
1755321   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1755322   +
1755323   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1755324   +
1755325   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1755326   +
1755327   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1755328   +
1755329   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1755330   +
1755331   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1755332   +
1755333   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1755334   +
1755335   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1755336   +
1755337   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1755338   +
1755339   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1755340   +
1755341   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1755342   +
1755343   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1755344   +
1755345   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1755346   +
1755347   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1755348   +
1755349   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1755350   +
1755351   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1755352   +
1755353   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1755354   +
1755355   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1755356   +
1755357   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1755358   +
1755359   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1755360   +
1755361   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1755362   +
1755363   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1755364   +
1755365   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1755366   +
1755367   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1755368   +
1755369   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1755370   +
1755371   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1755372   +
1755373   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1755374   +
1755375   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1755376   +
1755377   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1755378   +
1755379   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1755380   +
1755381   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1755382   +
1755383   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1755384   +
1755385   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1755386   +
1755387   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1755388   +
1755389   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1755390   +
1755391   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1755392   +
1755393   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1755394   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1755395   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1755396   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1755397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755399   +end;
MPRINT(EM_DIAGRAM):   end;
1755400   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755401   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1755402   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1755403   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755404   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1755405   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1755406   +   end;
MPRINT(EM_DIAGRAM):   end;
1755407   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1755408   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1755409   +   end;
MPRINT(EM_DIAGRAM):   end;
1755410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755411   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1755412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755414   +   end;
MPRINT(EM_DIAGRAM):   end;
1755415   +end;
MPRINT(EM_DIAGRAM):   end;
1755416   +
1755417   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1755418   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1755419   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1755420   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1755421   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755422   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755423   +end;
MPRINT(EM_DIAGRAM):   end;
1755424   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755425   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1755426   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1755427   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755428   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1755429   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1755430   +   end;
MPRINT(EM_DIAGRAM):   end;
1755431   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1755432   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1755433   +   end;
MPRINT(EM_DIAGRAM):   end;
1755434   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755435   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1755436   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755437   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755438   +   end;
MPRINT(EM_DIAGRAM):   end;
1755439   +end;
MPRINT(EM_DIAGRAM):   end;
1755440   +
1755441   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1755442   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1755443   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1755444   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1755445   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755447   +end;
MPRINT(EM_DIAGRAM):   end;
1755448   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755449   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1755450   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1755451   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755452   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1755453   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1755454   +   end;
MPRINT(EM_DIAGRAM):   end;
1755455   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1755456   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1755457   +   end;
MPRINT(EM_DIAGRAM):   end;
1755458   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755459   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1755460   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755461   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755462   +   end;
MPRINT(EM_DIAGRAM):   end;
1755463   +end;
MPRINT(EM_DIAGRAM):   end;
1755464   +
1755465   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1755466   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1755467   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1755468   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1755469   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755470   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755471   +end;
MPRINT(EM_DIAGRAM):   end;
1755472   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755473   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1755474   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1755475   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755476   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1755477   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1755478   +   end;
MPRINT(EM_DIAGRAM):   end;
1755479   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1755480   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1755481   +   end;
MPRINT(EM_DIAGRAM):   end;
1755482   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755483   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1755484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755486   +   end;
MPRINT(EM_DIAGRAM):   end;
1755487   +end;
MPRINT(EM_DIAGRAM):   end;
1755488   +
1755489   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1755490   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1755491   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1755492   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1755493   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755494   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755495   +end;
MPRINT(EM_DIAGRAM):   end;
1755496   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755497   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1755498   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1755499   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755500   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1755501   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1755502   +   end;
MPRINT(EM_DIAGRAM):   end;
1755503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1755504   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1755505   +   end;
MPRINT(EM_DIAGRAM):   end;
1755506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755507   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1755508   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755509   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755510   +   end;
MPRINT(EM_DIAGRAM):   end;
1755511   +end;
MPRINT(EM_DIAGRAM):   end;
1755512   +
1755513   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1755514   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1755515   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1755516   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1755517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755519   +end;
MPRINT(EM_DIAGRAM):   end;
1755520   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755521   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1755522   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1755523   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755524   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1755525   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1755526   +   end;
MPRINT(EM_DIAGRAM):   end;
1755527   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1755528   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1755529   +   end;
MPRINT(EM_DIAGRAM):   end;
1755530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755531   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1755532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755534   +   end;
MPRINT(EM_DIAGRAM):   end;
1755535   +end;
MPRINT(EM_DIAGRAM):   end;
1755536   +
1755537   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1755538   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1755539   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1755540   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1755541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755543   +end;
MPRINT(EM_DIAGRAM):   end;
1755544   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755545   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1755546   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1755547   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755548   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1755549   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1755550   +   end;
MPRINT(EM_DIAGRAM):   end;
1755551   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1755552   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1755553   +   end;
MPRINT(EM_DIAGRAM):   end;
1755554   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755555   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1755556   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755557   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755558   +   end;
MPRINT(EM_DIAGRAM):   end;
1755559   +end;
MPRINT(EM_DIAGRAM):   end;
1755560   +
1755561   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1755562   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1755563   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1755564   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1755565   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1755566   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1755567   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1755568   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1755569   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1755570   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1755571   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1755572   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1755573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755575   +end;
MPRINT(EM_DIAGRAM):   end;
1755576   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755577   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1755578   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1755579   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755580   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1755581   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1755582   +   end;
MPRINT(EM_DIAGRAM):   end;
1755583   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1755584   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1755585   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1755586   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1755587   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1755588   +   end;
MPRINT(EM_DIAGRAM):   end;
1755589   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1755590   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1755591   +   end;
MPRINT(EM_DIAGRAM):   end;
1755592   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1755593   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1755594   +   end;
MPRINT(EM_DIAGRAM):   end;
1755595   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1755596   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1755597   +   end;
MPRINT(EM_DIAGRAM):   end;
1755598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755599   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1755600   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1755601   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1755602   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1755603   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755604   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755605   +   end;
MPRINT(EM_DIAGRAM):   end;
1755606   +end;
MPRINT(EM_DIAGRAM):   end;
1755607   +
1755608   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1755609   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1755610   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1755611   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1755612   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1755613   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1755614   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1755615   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1755616   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1755617   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1755618   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1755619   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1755620   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1755621   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1755622   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755623   +end;
MPRINT(EM_DIAGRAM):   end;
1755624   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755625   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1755626   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1755627   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755628   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1755629   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1755630   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1755631   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1755632   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1755633   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1755634   +         end;
MPRINT(EM_DIAGRAM):   end;
1755635   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1755636   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1755637   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1755638   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1755639   +            end;
MPRINT(EM_DIAGRAM):   end;
1755640   +         end;
MPRINT(EM_DIAGRAM):   end;
1755641   +      end;
MPRINT(EM_DIAGRAM):   end;
1755642   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1755643   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1755644   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1755645   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1755646   +         end;
MPRINT(EM_DIAGRAM):   end;
1755647   +      end;
MPRINT(EM_DIAGRAM):   end;
1755648   +   end;
MPRINT(EM_DIAGRAM):   end;
1755649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755650   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1755651   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1755652   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1755653   +      end;
MPRINT(EM_DIAGRAM):   end;
1755654   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1755655   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1755656   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1755657   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1755658   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1755659   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1755660   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1755661   +         end;
MPRINT(EM_DIAGRAM):   end;
1755662   +      end;
MPRINT(EM_DIAGRAM):   end;
1755663   +   end;
MPRINT(EM_DIAGRAM):   end;
1755664   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1755665   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1755666   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1755667   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1755668   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1755669   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1755670   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755671   +   end;
MPRINT(EM_DIAGRAM):   end;
1755672   +end;
MPRINT(EM_DIAGRAM):   end;
1755673   +
1755674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755675   +*** Checking missing input Interval
1755676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1755677   +
1755678   +IF NMISS(
1755679   +   AcceptedCmpTotal ,
1755680   +   Age ,
1755681   +   Frq ,
1755682   +   Income ,
1755683   +   Kidhome ,
1755684   +   Mnt ,
1755685   +   MntFishProducts ,
1755686   +   MntFruits ,
1755687   +   MntGoldProds ,
1755688   +   MntMeatProducts ,
1755689   +   MntSweetProducts ,
1755690   +   MntWines ,
1755691   +   MonthsAsCustomer ,
1755692   +   NumCatalogPurchases ,
1755693   +   NumDealsPurchases ,
1755694   +   NumDistPurchases ,
1755695   +   NumStorePurchases ,
1755696   +   NumWebPurchases ,
1755697   +   NumWebVisitsMonth ,
1755698   +   RFMstat ,
1755699   +   RMntFrq ,
1755700   +   Recency ,
1755701   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1755702   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1755703   +
1755704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1755705   +END;
MPRINT(EM_DIAGRAM):   END;
1755706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755707   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1755708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755709   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1755710   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1755711   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1755712   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1755713   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1755714   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1755715   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1755716   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1755717   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1755718   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1755719   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1755720   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1755721   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1755722   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1755723   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1755724   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1755725   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1755726   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1755727   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1755728   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1755729   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1755730   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1755731   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1755732   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1755733   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1755734   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1755735   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1755736   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1755737   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1755738   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1755739   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1755740   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1755741   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1755742   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1755743   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1755744   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1755745   +END;
MPRINT(EM_DIAGRAM):   END;
1755746   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1755747   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1755748   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1755749   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1755750   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1755751   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1755752   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1755753   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1755754   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1755755   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1755756   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1755757   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1755758   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1755759   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1755760   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1755761   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1755762   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1755763   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1755764   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1755765   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1755766   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1755767   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1755768   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1755769   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1755770   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1755771   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1755772   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1755773   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1755774   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1755775   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1755776   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1755777   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1755778   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1755779   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1755780   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1755781   +   ELSE S_NumCatalogPurchases
1755782   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1755783   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1755784   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1755785   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1755786   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1755787   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1755788   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1755789   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1755790   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1755791   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1755792   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1755793   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1755794   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1755795   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1755796   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1755797   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1755798   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1755799   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1755800   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1755801   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1755802   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1755803   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1755804   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1755805   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1755806   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1755807   +END;
MPRINT(EM_DIAGRAM):   END;
1755808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755809   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1755810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755812   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1755813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755815   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1755816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755817   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1755818   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1755819   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1755820   +        S_Income  +    -1.07615700855274 * S_Kidhome
1755821   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1755822   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1755823   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1755824   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1755825   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1755826   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1755827   +          +      0.3429043319369 * S_NumDealsPurchases
1755828   +          +     0.71313309767469 * S_NumDistPurchases
1755829   +          +     0.06017757740083 * S_NumStorePurchases
1755830   +          +    -0.19817724925068 * S_NumWebPurchases
1755831   +          +     1.34164122205952 * S_NumWebVisitsMonth
1755832   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1755833   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1755834   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1755835   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1755836   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1755837   +        S_Income  +     -0.0027232441092 * S_Kidhome
1755838   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1755839   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1755840   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1755841   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1755842   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1755843   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1755844   +          +      0.4576973746858 * S_NumDealsPurchases
1755845   +          +     0.15590877272659 * S_NumDistPurchases
1755846   +          +    -0.33414539713736 * S_NumStorePurchases
1755847   +          +    -0.39370244666257 * S_NumWebPurchases
1755848   +          +     0.52596714886704 * S_NumWebVisitsMonth
1755849   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1755850   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1755851   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1755852   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1755853   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1755854   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1755855   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1755856   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1755857   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1755858   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1755859   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1755860   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1755861   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1755862   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1755863   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1755864   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1755865   +          +      0.4663802937397 * Marital_StatusDivorced
1755866   +          +    -1.27401898796099 * Marital_StatusMarried
1755867   +          +      1.3125969368079 * Marital_StatusSingle
1755868   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1755869   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1755870   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1755871   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1755872   +          +     0.07419179522004 * Marital_StatusDivorced
1755873   +          +     0.00234615813337 * Marital_StatusMarried
1755874   +          +    -0.00725460458412 * Marital_StatusSingle
1755875   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1755876   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1755877   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1755878   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1755879   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1755880   +END;
MPRINT(EM_DIAGRAM):   END;
1755881   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1755882   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1755883   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1755884   +END;
MPRINT(EM_DIAGRAM):   END;
1755885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755886   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1755887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755888   +
1755889   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1755890   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1755891   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1755892   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1755893   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1755894   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1755895   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1755896   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1755897   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1755898   +end;
MPRINT(EM_DIAGRAM):   end;
1755899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1755900   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1755901   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1755902   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1755903   +   end;
MPRINT(EM_DIAGRAM):   end;
1755904   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1755905   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1755906   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1755907   +   end;
MPRINT(EM_DIAGRAM):   end;
1755908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1755909   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1755910   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1755911   +   end;
MPRINT(EM_DIAGRAM):   end;
1755912   +end;
MPRINT(EM_DIAGRAM):   end;
1755913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1755914   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1755915   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1755916   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1755917   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1755918   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1755919   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1755920   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1755921   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1755922   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1755923   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1755924   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1755925   +END;
MPRINT(EM_DIAGRAM):   END;
1755926   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1755927   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1755928   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1755929   +END;
MPRINT(EM_DIAGRAM):   END;
1755930   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1755931   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1755932   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1755933   +END;
MPRINT(EM_DIAGRAM):   END;
1755934   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1755935   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1755936   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1755937   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1755938   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1755939   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1755940   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1755941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755942   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1755943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1755944   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1755945   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1755946   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1755947   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1755948   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1755949   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1755950   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1755951   +END;
MPRINT(EM_DIAGRAM):   END;
1755952   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1755953   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1755954   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1755955   +drop
1755956   +H11
1755957   +H12
1755958   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1755959   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1755960   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1755961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755962   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1755963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755964   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1755965   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1755966   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1755967   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1755968   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755969   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1755970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755971   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1755972   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1755973   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1755974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755975   +* Ensmbl26: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Maximum Posteriors of 3 models;
1755976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1755977   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1755978   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1755979   +P_DepVar1 = max(
1755980   +Neural9_P_DepVar1 ,
1755981   +Neural3_P_DepVar1 ,
1755982   +Neural2_P_DepVar1
1755983   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural9_P_DepVar1 , Neural3_P_DepVar1 ,
Neural2_P_DepVar1 );
1755984   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1755985   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1755986   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1755987   +end;
MPRINT(EM_DIAGRAM):   end;
1755988   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1755989   +P_DepVar0 = max(
1755990   +Neural9_P_DepVar0 ,
1755991   +Neural3_P_DepVar0 ,
1755992   +Neural2_P_DepVar0
1755993   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural9_P_DepVar0 , Neural3_P_DepVar0 ,
Neural2_P_DepVar0 );
1755994   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1755995   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1755996   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1755997   +end;
MPRINT(EM_DIAGRAM):   end;
1755998   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1755999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756000   +* Ensmbl26: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Classification Vars;
1756001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756002   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1756003   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1756004   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1756005   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1756006   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1756007   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1756008   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1756009   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1756010   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1756011   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1756012   +end;
MPRINT(EM_DIAGRAM):   end;
1756013   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1756014   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1756015   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1756016   +end;
MPRINT(EM_DIAGRAM):   end;
1756017   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1756018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756019   +* Ensmbl26: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Producing Unformatted variable;
1756020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756021   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1756022   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1756023   +else
1756024   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1756025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756026   +* Ensmbl26: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing _WARN_ Variable;
1756027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756028   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1756029   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1756030   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1756031   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1756032   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1756033   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1756034   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1756035   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1756036   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1756037   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1756038   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1756039   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1756040   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1756041   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1756042   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1756043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756044   +* Ensmbl26: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Residual Vars;
1756045   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756046   +if
1756047   +F_DepVar NE '1'
1756048   +AND F_DepVar NE '0'
1756049   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1756050   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1756051   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1756052   +end;
MPRINT(EM_DIAGRAM):   end;
1756053   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756054   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1756055   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1756056   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1756057   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1756058   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1756059   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1756060   +END;
MPRINT(EM_DIAGRAM):   END;
1756061   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1756062    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL26_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1756063    quit;
1756064    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl26_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl26_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl26_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1756124    filename _pref
1756124  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1756125    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1756126    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1756127   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1756128   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1756129   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1756130   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1756131   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1756132   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1756133   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1756134   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1756135   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1756136   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1756137   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1756138   +LENGTH _WARN_ $4
1756139   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1756140   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1756141   +
1756142   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1756143   +
1756144   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1756145   +
1756146   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1756147   +
1756148   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1756149   +
1756150   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1756151   +
1756152   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1756153   +
1756154   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1756155   +
1756156   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1756157   +
1756158   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1756159   +
1756160   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1756161   +
1756162   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1756163   +
1756164   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1756165   +
1756166   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1756167   +
1756168   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1756169   +
1756170   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1756171   +
1756172   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1756173   +
1756174   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1756175   +
1756176   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1756177   +
1756178   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1756179   +
1756180   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1756181   +
1756182   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1756183   +
1756184   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1756185   +
1756186   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1756187   +
1756188   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1756189   +
1756190   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1756191   +
1756192   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1756193   +
1756194   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1756195   +
1756196   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1756197   +
1756198   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1756199   +
1756200   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1756201   +
1756202   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1756203   +
1756204   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1756205   +
1756206   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1756207   +
1756208   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1756209   +
1756210   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1756211   +
1756212   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1756213   +
1756214   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1756215   +
1756216   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1756217   +
1756218   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1756219   +
1756220   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1756221   +
1756222   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1756223   +
1756224   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1756225   +
1756226   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1756227   +
1756228   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1756229   +
1756230   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1756231   +
1756232   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1756233   +
1756234   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1756235   +
1756236   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1756237   +
1756238   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1756239   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1756240   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1756241   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1756242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756244   +end;
MPRINT(EM_DIAGRAM):   end;
1756245   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1756247   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1756248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756249   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1756250   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1756251   +   end;
MPRINT(EM_DIAGRAM):   end;
1756252   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1756253   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1756254   +   end;
MPRINT(EM_DIAGRAM):   end;
1756255   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756256   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1756257   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756258   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756259   +   end;
MPRINT(EM_DIAGRAM):   end;
1756260   +end;
MPRINT(EM_DIAGRAM):   end;
1756261   +
1756262   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1756263   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1756264   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1756265   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1756266   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756267   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756268   +end;
MPRINT(EM_DIAGRAM):   end;
1756269   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756270   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1756271   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1756272   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756273   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1756274   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1756275   +   end;
MPRINT(EM_DIAGRAM):   end;
1756276   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1756277   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1756278   +   end;
MPRINT(EM_DIAGRAM):   end;
1756279   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756280   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1756281   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756282   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756283   +   end;
MPRINT(EM_DIAGRAM):   end;
1756284   +end;
MPRINT(EM_DIAGRAM):   end;
1756285   +
1756286   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1756287   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1756288   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1756289   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1756290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756292   +end;
MPRINT(EM_DIAGRAM):   end;
1756293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1756295   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1756296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756297   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1756298   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1756299   +   end;
MPRINT(EM_DIAGRAM):   end;
1756300   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1756301   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1756302   +   end;
MPRINT(EM_DIAGRAM):   end;
1756303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756304   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1756305   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756306   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756307   +   end;
MPRINT(EM_DIAGRAM):   end;
1756308   +end;
MPRINT(EM_DIAGRAM):   end;
1756309   +
1756310   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1756311   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1756312   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1756313   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1756314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756316   +end;
MPRINT(EM_DIAGRAM):   end;
1756317   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756318   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1756319   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1756320   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756321   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1756322   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1756323   +   end;
MPRINT(EM_DIAGRAM):   end;
1756324   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1756325   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1756326   +   end;
MPRINT(EM_DIAGRAM):   end;
1756327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756328   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1756329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756331   +   end;
MPRINT(EM_DIAGRAM):   end;
1756332   +end;
MPRINT(EM_DIAGRAM):   end;
1756333   +
1756334   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1756335   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1756336   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1756337   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1756338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756340   +end;
MPRINT(EM_DIAGRAM):   end;
1756341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1756343   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1756344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756345   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1756346   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1756347   +   end;
MPRINT(EM_DIAGRAM):   end;
1756348   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1756349   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1756350   +   end;
MPRINT(EM_DIAGRAM):   end;
1756351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756352   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1756353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756355   +   end;
MPRINT(EM_DIAGRAM):   end;
1756356   +end;
MPRINT(EM_DIAGRAM):   end;
1756357   +
1756358   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1756359   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1756360   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1756361   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1756362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756364   +end;
MPRINT(EM_DIAGRAM):   end;
1756365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1756367   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1756368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756369   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1756370   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1756371   +   end;
MPRINT(EM_DIAGRAM):   end;
1756372   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1756373   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1756374   +   end;
MPRINT(EM_DIAGRAM):   end;
1756375   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756376   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1756377   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756378   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756379   +   end;
MPRINT(EM_DIAGRAM):   end;
1756380   +end;
MPRINT(EM_DIAGRAM):   end;
1756381   +
1756382   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1756383   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1756384   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1756385   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1756386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756388   +end;
MPRINT(EM_DIAGRAM):   end;
1756389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1756391   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1756392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756393   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1756394   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1756395   +   end;
MPRINT(EM_DIAGRAM):   end;
1756396   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1756397   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1756398   +   end;
MPRINT(EM_DIAGRAM):   end;
1756399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756400   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1756401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756403   +   end;
MPRINT(EM_DIAGRAM):   end;
1756404   +end;
MPRINT(EM_DIAGRAM):   end;
1756405   +
1756406   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1756407   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1756408   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1756409   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1756410   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1756411   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1756412   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1756413   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1756414   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1756415   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1756416   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1756417   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1756418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756420   +end;
MPRINT(EM_DIAGRAM):   end;
1756421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756422   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1756423   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1756424   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756425   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1756426   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1756427   +   end;
MPRINT(EM_DIAGRAM):   end;
1756428   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1756429   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1756430   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1756431   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1756432   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1756433   +   end;
MPRINT(EM_DIAGRAM):   end;
1756434   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1756435   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1756436   +   end;
MPRINT(EM_DIAGRAM):   end;
1756437   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1756438   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1756439   +   end;
MPRINT(EM_DIAGRAM):   end;
1756440   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1756441   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1756442   +   end;
MPRINT(EM_DIAGRAM):   end;
1756443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756444   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1756445   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1756446   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1756447   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1756448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756450   +   end;
MPRINT(EM_DIAGRAM):   end;
1756451   +end;
MPRINT(EM_DIAGRAM):   end;
1756452   +
1756453   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1756454   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1756455   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1756456   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1756457   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1756458   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1756459   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1756460   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1756461   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1756462   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1756463   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1756464   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1756465   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1756466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1756467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756468   +end;
MPRINT(EM_DIAGRAM):   end;
1756469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1756470   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1756471   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1756472   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1756473   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1756474   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1756475   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1756476   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1756477   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1756478   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1756479   +         end;
MPRINT(EM_DIAGRAM):   end;
1756480   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1756481   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1756482   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1756483   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1756484   +            end;
MPRINT(EM_DIAGRAM):   end;
1756485   +         end;
MPRINT(EM_DIAGRAM):   end;
1756486   +      end;
MPRINT(EM_DIAGRAM):   end;
1756487   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1756488   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1756489   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1756490   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1756491   +         end;
MPRINT(EM_DIAGRAM):   end;
1756492   +      end;
MPRINT(EM_DIAGRAM):   end;
1756493   +   end;
MPRINT(EM_DIAGRAM):   end;
1756494   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1756495   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1756496   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1756497   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1756498   +      end;
MPRINT(EM_DIAGRAM):   end;
1756499   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1756500   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1756501   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1756502   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1756503   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1756504   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1756505   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1756506   +         end;
MPRINT(EM_DIAGRAM):   end;
1756507   +      end;
MPRINT(EM_DIAGRAM):   end;
1756508   +   end;
MPRINT(EM_DIAGRAM):   end;
1756509   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1756510   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1756511   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1756512   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1756513   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1756514   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1756515   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756516   +   end;
MPRINT(EM_DIAGRAM):   end;
1756517   +end;
MPRINT(EM_DIAGRAM):   end;
1756518   +
1756519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756520   +*** Checking missing input Interval
1756521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1756522   +
1756523   +IF NMISS(
1756524   +   AcceptedCmpTotal ,
1756525   +   Age ,
1756526   +   Frq ,
1756527   +   Income ,
1756528   +   Kidhome ,
1756529   +   Mnt ,
1756530   +   MntFishProducts ,
1756531   +   MntFruits ,
1756532   +   MntGoldProds ,
1756533   +   MntMeatProducts ,
1756534   +   MntSweetProducts ,
1756535   +   MntWines ,
1756536   +   MonthsAsCustomer ,
1756537   +   NumCatalogPurchases ,
1756538   +   NumDealsPurchases ,
1756539   +   NumDistPurchases ,
1756540   +   NumStorePurchases ,
1756541   +   NumWebPurchases ,
1756542   +   NumWebVisitsMonth ,
1756543   +   RFMstat ,
1756544   +   RMntFrq ,
1756545   +   Recency ,
1756546   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1756547   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1756548   +
1756549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1756550   +END;
MPRINT(EM_DIAGRAM):   END;
1756551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756552   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1756553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756554   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1756555   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1756556   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1756557   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1756558   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1756559   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1756560   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1756561   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1756562   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1756563   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1756564   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1756565   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1756566   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1756567   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1756568   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1756569   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1756570   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1756571   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1756572   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1756573   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1756574   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1756575   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1756576   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1756577   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1756578   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1756579   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1756580   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1756581   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1756582   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1756583   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1756584   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1756585   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1756586   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1756587   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1756588   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1756589   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1756590   +END;
MPRINT(EM_DIAGRAM):   END;
1756591   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1756592   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1756593   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1756594   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1756595   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1756596   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1756597   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1756598   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1756599   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1756600   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1756601   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1756602   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1756603   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1756604   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1756605   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1756606   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1756607   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1756608   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1756609   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1756610   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1756611   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1756612   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1756613   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1756614   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1756615   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1756616   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1756617   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1756618   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1756619   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1756620   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1756621   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1756622   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1756623   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1756624   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1756625   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1756626   +   ELSE S_NumCatalogPurchases
1756627   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1756628   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1756629   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1756630   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1756631   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1756632   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1756633   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1756634   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1756635   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1756636   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1756637   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1756638   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1756639   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1756640   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1756641   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1756642   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1756643   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1756644   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1756645   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1756646   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1756647   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1756648   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1756649   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1756650   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1756651   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1756652   +END;
MPRINT(EM_DIAGRAM):   END;
1756653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756654   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1756655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756657   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1756658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756659   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756660   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1756661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756662   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1756663   +   H11  =     0.13561897368917 * S_AcceptedCmpTotal  +    -0.32772545836794 *
1756664   +        S_Age  +    -0.38398034861903 * S_Frq  +    -0.26977539373888 *
1756665   +        S_Income  +    -0.14142658616971 * S_Kidhome
1756666   +          +      0.0989055198532 * S_Mnt  +    -0.02522005306968 *
1756667   +        S_MntFishProducts  +    -0.12344455762016 * S_MntFruits
1756668   +          +     0.06422500584481 * S_MntGoldProds  +     1.06758158504307 *
1756669   +        S_MntMeatProducts  +    -0.23902734890811 * S_MntSweetProducts
1756670   +          +    -0.30623759563522 * S_MntWines  +    -0.00016362973479 *
1756671   +        S_MonthsAsCustomer  +     0.55545319032721 * S_NumCatalogPurchases
1756672   +          +     0.96837841774168 * S_NumDealsPurchases
1756673   +          +      0.2846105381881 * S_NumDistPurchases
1756674   +          +    -0.69514041792943 * S_NumStorePurchases
1756675   +          +    -0.96425407351749 * S_NumWebPurchases
1756676   +          +     0.79545449599683 * S_NumWebVisitsMonth
1756677   +          +     0.49367889229155 * S_RFMstat  +     -0.0709743399293 *
1756678   +        S_RMntFrq  +    -0.86057075960565 * S_Recency
1756679   +          +     0.14939396415431 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.13561897368917 * S_AcceptedCmpTotal + -0.32772545836794 * S_Age
+ -0.38398034861903 * S_Frq + -0.26977539373888 * S_Income + -0.14142658616971 * S_Kidhome +
0.0989055198532 * S_Mnt + -0.02522005306968 * S_MntFishProducts + -0.12344455762016 *
S_MntFruits + 0.06422500584481 * S_MntGoldProds + 1.06758158504307 * S_MntMeatProducts +
-0.23902734890811 * S_MntSweetProducts + -0.30623759563522 * S_MntWines + -0.00016362973479 *
S_MonthsAsCustomer + 0.55545319032721 * S_NumCatalogPurchases + 0.96837841774168 *
S_NumDealsPurchases + 0.2846105381881 * S_NumDistPurchases + -0.69514041792943 *
S_NumStorePurchases + -0.96425407351749 * S_NumWebPurchases + 0.79545449599683 *
S_NumWebVisitsMonth + 0.49367889229155 * S_RFMstat + -0.0709743399293 * S_RMntFrq +
-0.86057075960565 * S_Recency + 0.14939396415431 * S_Teenhome ;
1756680   +   H12  =     0.62153817830372 * S_AcceptedCmpTotal  +     0.11000838320023 *
1756681   +        S_Age  +    -0.43905714814627 * S_Frq  +      0.4627921513743 *
1756682   +        S_Income  +    -0.55432195959203 * S_Kidhome
1756683   +          +    -0.20868947702573 * S_Mnt  +    -0.04791610917449 *
1756684   +        S_MntFishProducts  +    -0.18250759820717 * S_MntFruits
1756685   +          +    -0.04325930692478 * S_MntGoldProds  +     0.58323535101492 *
1756686   +        S_MntMeatProducts  +     0.04921270742083 * S_MntSweetProducts
1756687   +          +    -0.39974265327363 * S_MntWines  +    -0.05607601548004 *
1756688   +        S_MonthsAsCustomer  +      0.3012811961076 * S_NumCatalogPurchases
1756689   +          +      0.2190184330724 * S_NumDealsPurchases
1756690   +          +    -0.01682909442896 * S_NumDistPurchases
1756691   +          +    -0.70244951048552 * S_NumStorePurchases
1756692   +          +     -0.3057457659316 * S_NumWebPurchases
1756693   +          +     0.95928538762715 * S_NumWebVisitsMonth
1756694   +          +     0.05894343416718 * S_RFMstat  +    -0.10056410044429 *
1756695   +        S_RMntFrq  +     -0.8406665241206 * S_Recency
1756696   +          +    -0.35297412201687 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.62153817830372 * S_AcceptedCmpTotal + 0.11000838320023 * S_Age +
-0.43905714814627 * S_Frq + 0.4627921513743 * S_Income + -0.55432195959203 * S_Kidhome +
-0.20868947702573 * S_Mnt + -0.04791610917449 * S_MntFishProducts + -0.18250759820717 *
S_MntFruits + -0.04325930692478 * S_MntGoldProds + 0.58323535101492 * S_MntMeatProducts +
0.04921270742083 * S_MntSweetProducts + -0.39974265327363 * S_MntWines + -0.05607601548004 *
S_MonthsAsCustomer + 0.3012811961076 * S_NumCatalogPurchases + 0.2190184330724 *
S_NumDealsPurchases + -0.01682909442896 * S_NumDistPurchases + -0.70244951048552 *
S_NumStorePurchases + -0.3057457659316 * S_NumWebPurchases + 0.95928538762715 *
S_NumWebVisitsMonth + 0.05894343416718 * S_RFMstat + -0.10056410044429 * S_RMntFrq +
-0.8406665241206 * S_Recency + -0.35297412201687 * S_Teenhome ;
1756697   +   H13  =     0.06733651290741 * S_AcceptedCmpTotal  +    -0.40242244330352 *
1756698   +        S_Age  +     0.00779419067769 * S_Frq  +    -0.39275723422465 *
1756699   +        S_Income  +    -0.06354861159882 * S_Kidhome
1756700   +          +     -0.0526962194301 * S_Mnt  +     0.22795791930382 *
1756701   +        S_MntFishProducts  +       0.155952558453 * S_MntFruits
1756702   +          +    -0.05338294725533 * S_MntGoldProds  +     0.27696958404211 *
1756703   +        S_MntMeatProducts  +     0.45382327602276 * S_MntSweetProducts
1756704   +          +     0.08944669240843 * S_MntWines  +     0.05073400334181 *
1756705   +        S_MonthsAsCustomer  +    -0.21502812614453 * S_NumCatalogPurchases
1756706   +          +    -0.21394230159696 * S_NumDealsPurchases
1756707   +          +    -0.23833771124663 * S_NumDistPurchases
1756708   +          +     0.45832031017813 * S_NumStorePurchases
1756709   +          +    -0.30226952040179 * S_NumWebPurchases
1756710   +          +    -0.29796387184481 * S_NumWebVisitsMonth
1756711   +          +    -0.47457772771567 * S_RFMstat  +     0.02623437469504 *
1756712   +        S_RMntFrq  +     0.87067423045258 * S_Recency
1756713   +          +    -0.04579179879137 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.06733651290741 * S_AcceptedCmpTotal + -0.40242244330352 * S_Age
+ 0.00779419067769 * S_Frq + -0.39275723422465 * S_Income + -0.06354861159882 * S_Kidhome +
-0.0526962194301 * S_Mnt + 0.22795791930382 * S_MntFishProducts + 0.155952558453 * S_MntFruits
+ -0.05338294725533 * S_MntGoldProds + 0.27696958404211 * S_MntMeatProducts + 0.45382327602276
* S_MntSweetProducts + 0.08944669240843 * S_MntWines + 0.05073400334181 * S_MonthsAsCustomer +
-0.21502812614453 * S_NumCatalogPurchases + -0.21394230159696 * S_NumDealsPurchases +
-0.23833771124663 * S_NumDistPurchases + 0.45832031017813 * S_NumStorePurchases +
-0.30226952040179 * S_NumWebPurchases + -0.29796387184481 * S_NumWebVisitsMonth +
-0.47457772771567 * S_RFMstat + 0.02623437469504 * S_RMntFrq + 0.87067423045258 * S_Recency +
-0.04579179879137 * S_Teenhome ;
1756714   +   H14  =      0.0100821240579 * S_AcceptedCmpTotal  +     0.06650171037949 *
1756715   +        S_Age  +     0.07437437345976 * S_Frq  +    -0.60858783914323 *
1756716   +        S_Income  +    -0.04839586846715 * S_Kidhome
1756717   +          +      0.0498689835853 * S_Mnt  +    -0.19232042751963 *
1756718   +        S_MntFishProducts  +     -0.0934621532732 * S_MntFruits
1756719   +          +    -0.23123184317801 * S_MntGoldProds  +    -0.73001093719713 *
1756720   +        S_MntMeatProducts  +    -0.00941386350496 * S_MntSweetProducts
1756721   +          +     0.53093647457485 * S_MntWines  +     0.25999444904416 *
1756722   +        S_MonthsAsCustomer  +    -0.64356932247243 * S_NumCatalogPurchases
1756723   +          +    -0.43749647771198 * S_NumDealsPurchases
1756724   +          +     0.21263473847472 * S_NumDistPurchases
1756725   +          +     0.26102168039141 * S_NumStorePurchases
1756726   +          +     0.54921725943657 * S_NumWebPurchases
1756727   +          +    -0.75685843498122 * S_NumWebVisitsMonth
1756728   +          +     0.27936321897064 * S_RFMstat  +    -0.02993148267083 *
1756729   +        S_RMntFrq  +     0.80536256822347 * S_Recency
1756730   +          +     0.29599728227233 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.0100821240579 * S_AcceptedCmpTotal + 0.06650171037949 * S_Age +
0.07437437345976 * S_Frq + -0.60858783914323 * S_Income + -0.04839586846715 * S_Kidhome +
0.0498689835853 * S_Mnt + -0.19232042751963 * S_MntFishProducts + -0.0934621532732 *
S_MntFruits + -0.23123184317801 * S_MntGoldProds + -0.73001093719713 * S_MntMeatProducts +
-0.00941386350496 * S_MntSweetProducts + 0.53093647457485 * S_MntWines + 0.25999444904416 *
S_MonthsAsCustomer + -0.64356932247243 * S_NumCatalogPurchases + -0.43749647771198 *
S_NumDealsPurchases + 0.21263473847472 * S_NumDistPurchases + 0.26102168039141 *
S_NumStorePurchases + 0.54921725943657 * S_NumWebPurchases + -0.75685843498122 *
S_NumWebVisitsMonth + 0.27936321897064 * S_RFMstat + -0.02993148267083 * S_RMntFrq +
0.80536256822347 * S_Recency + 0.29599728227233 * S_Teenhome ;
1756731   +   H15  =    -0.08671490381299 * S_AcceptedCmpTotal  +     0.06582961248691 *
1756732   +        S_Age  +    -0.31028674605164 * S_Frq  +    -0.75498700429145 *
1756733   +        S_Income  +     0.71499527198653 * S_Kidhome
1756734   +          +    -0.09511483339215 * S_Mnt  +     0.12995766208562 *
1756735   +        S_MntFishProducts  +     0.03365861966415 * S_MntFruits
1756736   +          +     0.10989750322838 * S_MntGoldProds  +     -0.5915075857888 *
1756737   +        S_MntMeatProducts  +     0.06560450377445 * S_MntSweetProducts
1756738   +          +     0.21362770075701 * S_MntWines  +    -0.09939364366816 *
1756739   +        S_MonthsAsCustomer  +    -0.61410179474601 * S_NumCatalogPurchases
1756740   +          +     0.09436067776126 * S_NumDealsPurchases
1756741   +          +    -0.02824201859641 * S_NumDistPurchases
1756742   +          +    -0.06770433780564 * S_NumStorePurchases
1756743   +          +    -0.07177620319715 * S_NumWebPurchases
1756744   +          +    -0.75589979685266 * S_NumWebVisitsMonth
1756745   +          +    -0.03604464190626 * S_RFMstat  +     0.17925089667944 *
1756746   +        S_RMntFrq  +     0.94408788011429 * S_Recency
1756747   +          +     0.41530214227619 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.08671490381299 * S_AcceptedCmpTotal + 0.06582961248691 * S_Age
+ -0.31028674605164 * S_Frq + -0.75498700429145 * S_Income + 0.71499527198653 * S_Kidhome +
-0.09511483339215 * S_Mnt + 0.12995766208562 * S_MntFishProducts + 0.03365861966415 *
S_MntFruits + 0.10989750322838 * S_MntGoldProds + -0.5915075857888 * S_MntMeatProducts +
0.06560450377445 * S_MntSweetProducts + 0.21362770075701 * S_MntWines + -0.09939364366816 *
S_MonthsAsCustomer + -0.61410179474601 * S_NumCatalogPurchases + 0.09436067776126 *
S_NumDealsPurchases + -0.02824201859641 * S_NumDistPurchases + -0.06770433780564 *
S_NumStorePurchases + -0.07177620319715 * S_NumWebPurchases + -0.75589979685266 *
S_NumWebVisitsMonth + -0.03604464190626 * S_RFMstat + 0.17925089667944 * S_RMntFrq +
0.94408788011429 * S_Recency + 0.41530214227619 * S_Teenhome ;
1756748   +   H16  =    -0.39917411634723 * S_AcceptedCmpTotal  +     0.03925725158826 *
1756749   +        S_Age  +    -0.41370994963942 * S_Frq  +    -0.42480967809347 *
1756750   +        S_Income  +    -0.63474522042341 * S_Kidhome
1756751   +          +    -0.26213982180471 * S_Mnt  +     0.18685818695791 *
1756752   +        S_MntFishProducts  +     0.04605858526078 * S_MntFruits
1756753   +          +    -0.16330204827669 * S_MntGoldProds  +    -0.29864450244187 *
1756754   +        S_MntMeatProducts  +     -0.1818801035467 * S_MntSweetProducts
1756755   +          +    -0.01848203970119 * S_MntWines  +    -0.38039400989409 *
1756756   +        S_MonthsAsCustomer  +     -0.7050267965821 * S_NumCatalogPurchases
1756757   +          +    -0.51154511343396 * S_NumDealsPurchases
1756758   +          +    -0.52422915823572 * S_NumDistPurchases
1756759   +          +     0.30305498422357 * S_NumStorePurchases
1756760   +          +     0.12197321559338 * S_NumWebPurchases
1756761   +          +    -0.10520335422769 * S_NumWebVisitsMonth
1756762   +          +    -0.08455403770298 * S_RFMstat  +     -0.0746666450533 *
1756763   +        S_RMntFrq  +    -0.01666787115039 * S_Recency
1756764   +          +     -0.0878584797536 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.39917411634723 * S_AcceptedCmpTotal + 0.03925725158826 * S_Age
+ -0.41370994963942 * S_Frq + -0.42480967809347 * S_Income + -0.63474522042341 * S_Kidhome +
-0.26213982180471 * S_Mnt + 0.18685818695791 * S_MntFishProducts + 0.04605858526078 *
S_MntFruits + -0.16330204827669 * S_MntGoldProds + -0.29864450244187 * S_MntMeatProducts +
-0.1818801035467 * S_MntSweetProducts + -0.01848203970119 * S_MntWines + -0.38039400989409 *
S_MonthsAsCustomer + -0.7050267965821 * S_NumCatalogPurchases + -0.51154511343396 *
S_NumDealsPurchases + -0.52422915823572 * S_NumDistPurchases + 0.30305498422357 *
S_NumStorePurchases + 0.12197321559338 * S_NumWebPurchases + -0.10520335422769 *
S_NumWebVisitsMonth + -0.08455403770298 * S_RFMstat + -0.0746666450533 * S_RMntFrq +
-0.01666787115039 * S_Recency + -0.0878584797536 * S_Teenhome ;
1756765   +   H11  = H11  +    -0.90961987146896 * AcceptedCmp10
1756766   +          +    -0.43883226747411 * AcceptedCmp20  +    -0.33111359726838 *
1756767   +        AcceptedCmp30  +    -0.56836514169806 * AcceptedCmp40
1756768   +          +    -0.35293284248651 * AcceptedCmp50  +    -0.21637194677498 *
1756769   +        Complain0  +     0.04763871212094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.90961987146896 * AcceptedCmp10 + -0.43883226747411 *
AcceptedCmp20 + -0.33111359726838 * AcceptedCmp30 + -0.56836514169806 * AcceptedCmp40 +
-0.35293284248651 * AcceptedCmp50 + -0.21637194677498 * Complain0 + 0.04763871212094 *
HigherEducationBinary0 ;
1756770   +   H12  = H12  +     -0.1030990687939 * AcceptedCmp10
1756771   +          +     0.00122242086508 * AcceptedCmp20  +    -0.20164062706951 *
1756772   +        AcceptedCmp30  +    -0.18080173131042 * AcceptedCmp40
1756773   +          +    -0.29605640354834 * AcceptedCmp50  +     0.05316734050672 *
1756774   +        Complain0  +     0.03310322649598 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1030990687939 * AcceptedCmp10 + 0.00122242086508 *
AcceptedCmp20 + -0.20164062706951 * AcceptedCmp30 + -0.18080173131042 * AcceptedCmp40 +
-0.29605640354834 * AcceptedCmp50 + 0.05316734050672 * Complain0 + 0.03310322649598 *
HigherEducationBinary0 ;
1756775   +   H13  = H13  +     0.19903845466874 * AcceptedCmp10
1756776   +          +     0.05770332479555 * AcceptedCmp20  +     0.18259425424285 *
1756777   +        AcceptedCmp30  +     -0.1972581314722 * AcceptedCmp40
1756778   +          +     0.07810166818705 * AcceptedCmp50  +      0.0588314244014 *
1756779   +        Complain0  +     0.52386444165611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.19903845466874 * AcceptedCmp10 + 0.05770332479555 *
AcceptedCmp20 + 0.18259425424285 * AcceptedCmp30 + -0.1972581314722 * AcceptedCmp40 +
0.07810166818705 * AcceptedCmp50 + 0.0588314244014 * Complain0 + 0.52386444165611 *
HigherEducationBinary0 ;
1756780   +   H14  = H14  +    -0.25712989150916 * AcceptedCmp10
1756781   +          +     0.10002773433896 * AcceptedCmp20  +     0.22713279091354 *
1756782   +        AcceptedCmp30  +     -0.3908577443881 * AcceptedCmp40
1756783   +          +     0.26942267903717 * AcceptedCmp50  +    -0.06022694623669 *
1756784   +        Complain0  +     0.05521579061999 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.25712989150916 * AcceptedCmp10 + 0.10002773433896 *
AcceptedCmp20 + 0.22713279091354 * AcceptedCmp30 + -0.3908577443881 * AcceptedCmp40 +
0.26942267903717 * AcceptedCmp50 + -0.06022694623669 * Complain0 + 0.05521579061999 *
HigherEducationBinary0 ;
1756785   +   H15  = H15  +     0.38919159206493 * AcceptedCmp10
1756786   +          +     0.58837620734384 * AcceptedCmp20  +     0.43219005719576 *
1756787   +        AcceptedCmp30  +     0.44013713415724 * AcceptedCmp40
1756788   +          +     0.21616210575893 * AcceptedCmp50  +     0.22563135687374 *
1756789   +        Complain0  +    -0.26680262675523 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.38919159206493 * AcceptedCmp10 + 0.58837620734384 *
AcceptedCmp20 + 0.43219005719576 * AcceptedCmp30 + 0.44013713415724 * AcceptedCmp40 +
0.21616210575893 * AcceptedCmp50 + 0.22563135687374 * Complain0 + -0.26680262675523 *
HigherEducationBinary0 ;
1756790   +   H16  = H16  +     0.20851064493691 * AcceptedCmp10
1756791   +          +     0.04947084224566 * AcceptedCmp20  +     0.13383157945653 *
1756792   +        AcceptedCmp30  +    -0.04649385360034 * AcceptedCmp40
1756793   +          +     0.22456192437835 * AcceptedCmp50  +     0.09861465204268 *
1756794   +        Complain0  +     0.52759393238257 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.20851064493691 * AcceptedCmp10 + 0.04947084224566 *
AcceptedCmp20 + 0.13383157945653 * AcceptedCmp30 + -0.04649385360034 * AcceptedCmp40 +
0.22456192437835 * AcceptedCmp50 + 0.09861465204268 * Complain0 + 0.52759393238257 *
HigherEducationBinary0 ;
1756795   +   H11  = H11  +    -0.17149044990916 * Education2n_Cycle
1756796   +          +    -0.10901150601282 * EducationBasic  +     0.08956382506778 *
1756797   +        EducationGraduation  +    -0.02263887301789 * EducationMaster
1756798   +          +     0.10234616400375 * Marital_StatusDivorced
1756799   +          +     0.27961650739075 * Marital_StatusMarried
1756800   +          +    -0.40239488723767 * Marital_StatusSingle
1756801   +          +     0.08313574864343 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.17149044990916 * Education2n_Cycle + -0.10901150601282 *
EducationBasic + 0.08956382506778 * EducationGraduation + -0.02263887301789 * EducationMaster
+ 0.10234616400375 * Marital_StatusDivorced + 0.27961650739075 * Marital_StatusMarried +
-0.40239488723767 * Marital_StatusSingle + 0.08313574864343 * Marital_StatusTogether ;
1756802   +   H12  = H12  +     0.05425155386264 * Education2n_Cycle
1756803   +          +    -0.29410781678759 * EducationBasic  +     0.23986214400803 *
1756804   +        EducationGraduation  +    -0.14831422332134 * EducationMaster
1756805   +          +     0.46385792428023 * Marital_StatusDivorced
1756806   +          +    -0.62344590646391 * Marital_StatusMarried
1756807   +          +     0.61767209252062 * Marital_StatusSingle
1756808   +          +    -0.48335726597768 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.05425155386264 * Education2n_Cycle + -0.29410781678759 *
EducationBasic + 0.23986214400803 * EducationGraduation + -0.14831422332134 * EducationMaster
+ 0.46385792428023 * Marital_StatusDivorced + -0.62344590646391 * Marital_StatusMarried +
0.61767209252062 * Marital_StatusSingle + -0.48335726597768 * Marital_StatusTogether ;
1756809   +   H13  = H13  +     0.02436261022421 * Education2n_Cycle
1756810   +          +     0.25859718044561 * EducationBasic  +    -0.27291277319608 *
1756811   +        EducationGraduation  +    -0.08922741430112 * EducationMaster
1756812   +          +    -0.07839612590836 * Marital_StatusDivorced
1756813   +          +     0.35316864062221 * Marital_StatusMarried
1756814   +          +    -0.10730136429834 * Marital_StatusSingle
1756815   +          +     0.17593603209099 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02436261022421 * Education2n_Cycle + 0.25859718044561 *
EducationBasic + -0.27291277319608 * EducationGraduation + -0.08922741430112 * EducationMaster
+ -0.07839612590836 * Marital_StatusDivorced + 0.35316864062221 * Marital_StatusMarried +
-0.10730136429834 * Marital_StatusSingle + 0.17593603209099 * Marital_StatusTogether ;
1756816   +   H14  = H14  +    -0.24964520343799 * Education2n_Cycle
1756817   +          +    -0.01893498177516 * EducationBasic  +     0.15063494078927 *
1756818   +        EducationGraduation  +     -0.0741586921665 * EducationMaster
1756819   +          +    -0.09942175269886 * Marital_StatusDivorced
1756820   +          +     0.24385460865335 * Marital_StatusMarried
1756821   +          +    -0.33658955096296 * Marital_StatusSingle
1756822   +          +     0.56050963700382 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.24964520343799 * Education2n_Cycle + -0.01893498177516 *
EducationBasic + 0.15063494078927 * EducationGraduation + -0.0741586921665 * EducationMaster +
-0.09942175269886 * Marital_StatusDivorced + 0.24385460865335 * Marital_StatusMarried +
-0.33658955096296 * Marital_StatusSingle + 0.56050963700382 * Marital_StatusTogether ;
1756823   +   H15  = H15  +     0.01382474147934 * Education2n_Cycle
1756824   +          +    -0.45490268571245 * EducationBasic  +     0.16592751946825 *
1756825   +        EducationGraduation  +     0.37352174719748 * EducationMaster
1756826   +          +    -0.08047852561096 * Marital_StatusDivorced
1756827   +          +     1.16485862694561 * Marital_StatusMarried
1756828   +          +    -0.94140251178566 * Marital_StatusSingle
1756829   +          +     0.70332254595446 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.01382474147934 * Education2n_Cycle + -0.45490268571245 *
EducationBasic + 0.16592751946825 * EducationGraduation + 0.37352174719748 * EducationMaster +
-0.08047852561096 * Marital_StatusDivorced + 1.16485862694561 * Marital_StatusMarried +
-0.94140251178566 * Marital_StatusSingle + 0.70332254595446 * Marital_StatusTogether ;
1756830   +   H16  = H16  +    -0.23552122269934 * Education2n_Cycle
1756831   +          +    -0.24160689278663 * EducationBasic  +    -0.15570122212206 *
1756832   +        EducationGraduation  +    -0.17067956037934 * EducationMaster
1756833   +          +    -0.16621963893391 * Marital_StatusDivorced
1756834   +          +    -0.44542186297324 * Marital_StatusMarried
1756835   +          +     0.42176133228308 * Marital_StatusSingle
1756836   +          +     -0.3191529098756 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.23552122269934 * Education2n_Cycle + -0.24160689278663 *
EducationBasic + -0.15570122212206 * EducationGraduation + -0.17067956037934 * EducationMaster
+ -0.16621963893391 * Marital_StatusDivorced + -0.44542186297324 * Marital_StatusMarried +
0.42176133228308 * Marital_StatusSingle + -0.3191529098756 * Marital_StatusTogether ;
1756837   +   H11  =    -0.08072695414295 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.08072695414295 + H11 ;
1756838   +   H12  =     0.35226882164117 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.35226882164117 + H12 ;
1756839   +   H13  =    -1.39195207519632 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.39195207519632 + H13 ;
1756840   +   H14  =     1.37641938752783 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.37641938752783 + H14 ;
1756841   +   H15  =     0.91842694601067 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.91842694601067 + H15 ;
1756842   +   H16  =     -2.0930022603803 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.0930022603803 + H16 ;
1756843   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1756844   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1756845   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1756846   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1756847   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1756848   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1756849   +END;
MPRINT(EM_DIAGRAM):   END;
1756850   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1756851   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1756852   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1756853   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1756854   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1756855   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1756856   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1756857   +END;
MPRINT(EM_DIAGRAM):   END;
1756858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756859   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1756860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1756862   +   P_DepVar1  =     2.03370101048476 * H11  +     2.66531855617884 * H12
1756863   +          +    -1.85942573260565 * H13  +    -1.90574749832357 * H14
1756864   +          +    -3.11388767967909 * H15  +    -2.20829136620638 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.03370101048476 * H11 + 2.66531855617884 * H12 +
-1.85942573260565 * H13 + -1.90574749832357 * H14 + -3.11388767967909 * H15 +
-2.20829136620638 * H16 ;
1756865   +   P_DepVar1  =    -2.07329738382548 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07329738382548 + P_DepVar1 ;
1756866   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1756867   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1756868   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1756869   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1756870   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1756871   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1756872   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1756873   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1756874   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1756875   +END;
MPRINT(EM_DIAGRAM):   END;
1756876   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1756877   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1756878   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1756879   +END;
MPRINT(EM_DIAGRAM):   END;
1756880   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1756881   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1756882   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1756883   +END;
MPRINT(EM_DIAGRAM):   END;
1756884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756885   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1756886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1756887   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1756888   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1756889   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1756890   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1756891   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1756892   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1756893   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1756894   +END;
MPRINT(EM_DIAGRAM):   END;
1756895   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1756896   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1756897   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1756898   +drop
1756899   +H11
1756900   +H12
1756901   +H13
1756902   +H14
1756903   +H15
1756904   +H16
1756905   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1756906   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1756907    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1756908    quit;
1756909    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1756910    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1756911    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1756912    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1756913    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1756914    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756915    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1756916    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756917    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1756918    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1756919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756920    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756921    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1756922    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1756923    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1756924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756925    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1756926    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1756927    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1756928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756929    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756930    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1756931    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1756932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756933    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1756934    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1756935    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1756935  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.
 
1756936    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756937    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1756938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756939    filename _pref
1756939  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1756940    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1756941    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1756942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756943   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1756944   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1756945   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1756946   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1756947   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1756948    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1756949    quit;
1756950    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1756951    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1756952    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1756953    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1756954    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1756955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1756956    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1756957    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756959    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1756960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756962    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1756963    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1756964    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1756965    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756966    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1756967    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1756968    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1756969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756971    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1756972    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1756973    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1756974    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756975    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1756976    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1756976  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1756977    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1756978    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1756979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756980    filename _pref
1756980  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1756981    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1756982    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1756983   +
1756984   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1756985   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1756985  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1756986   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1756987   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1756988   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1756989   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1756990   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1756991    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1756992    quit;
1756993    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1756994    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1756995    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1756996    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1756997    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1756998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1756999    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1757000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1757002    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1757003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757004    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757005    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1757006    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1757007    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1757008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757009    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1757010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757011    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1757012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757013    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757014    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1757015    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1757016    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757017    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1757018    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1757019    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1757019  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1757020    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757021    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1757022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757023    filename _pref
1757023  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1757024    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1757025    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1757026   +
1757027   +
1757028   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1757029   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1757030   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1757031   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1757032   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1757033   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757034   +
1757035   +
1757036   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1757037   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1757038   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1757039   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1757040   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1757041   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757042   +
1757043   +
1757044   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1757045   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1757046   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1757047   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1757048   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1757049   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757050   +
1757051   +
1757052   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1757053   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1757054   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1757055   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1757056   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1757057   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757058   +
1757059   +
1757060   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1757061   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1757062   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1757063   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1757064   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1757065   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757066   +
1757067   +
1757068   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1757069   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1757070   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1757071   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1757072   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1757073   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757074   +
1757075   +
1757076   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1757077   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1757078   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1757079   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1757080   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1757081   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757082   +
1757083   +
1757084   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1757085   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1757086   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1757087   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1757088   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1757089   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1757090   +if
1757091   +_FILTERNORM1 not in ( '.')
1757092   + and
1757093   +_FILTERNORM2 not in ( '.')
1757094   + and
1757095   +_FILTERNORM3 not in ( '.')
1757096   + and
1757097   +_FILTERNORM4 not in ( '.')
1757098   + and
1757099   +_FILTERNORM5 not in ( '.')
1757100   + and
1757101   +_FILTERNORM6 not in ( '.')
1757102   + and
1757103   +_FILTERNORM7 not in ( ' ')
1757104   + and
1757105   +_FILTERNORM8 not in ( ' ')
1757106   +and
1757107   +( Dt_Customer ne .)
1757108   +and ( Income ne . and (Income<=107000))
1757109   +and ( Kidhome ne .)
1757110   +and ( MntFishProducts ne .)
1757111   +and ( MntFruits ne .)
1757112   +and ( MntGoldProds ne .)
1757113   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1757114   +and ( MntSweetProducts ne .)
1757115   +and ( MntWines ne .)
1757116   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1757117   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1757118   +and ( NumStorePurchases ne .)
1757119   +and ( NumWebPurchases ne .)
1757120   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1757121   +and ( Recency ne .)
1757122   +and ( Teenhome ne .)
1757123   +and ( Year_Birth ne .)
1757124   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1757125   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1757126   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1757127   +end;
MPRINT(EM_DIAGRAM):   end;
1757128   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1757129   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1757130    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1757131    quit;
1757132    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1757133    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1757134    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1757135    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1757136    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1757137    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757138    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1757139    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757140    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1757141    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1757142    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757143    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757144    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1757145    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1757146    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1757147    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757148    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1757149    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1757150    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1757151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1757153    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1757154    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1757155    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757156    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757157    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1757158    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1757158  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1757159    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757160    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1757161    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
The SAS System
 
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1757162    %macro varDept(fcmpdata=,id=);
1757163    %global nobs&id scoreFlag&id;
1757164    %let scoreFlag&id = 0;
1757165    %if &id=1 or ^&fcmpStart %then %do;
1757166    proc sort data=&fcmpdata out=_temp&id nodupkey;
1757167    by NAME;
1757168    where id=&id and LHS in( %let j=1;
1757169    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1757170    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1757171    "&var" %let j = %eval(&j+1);
1757172    %end;
1757173    );
1757174    run;
1757175    %let dsid = %sysfunc(open(_temp&id));
1757176    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1757177    %let dsid = %sysfunc(close(&dsid));
1757178    %if &&nobs&id %then %do;
1757179    %let scoreFlag&id = 1;
1757180    %let fcmpStart = 1;
1757181    %end;
1757182    %else %let fcmpStart = 0;
1757183    %end;
1757184    %else %do;
1757185    proc sort data=&fcmpdata out=_tempid;
1757186    where id=&id;
1757187    by LHS;
1757188    run;
1757189    %let dsid = %sysfunc(open(_tempid));
1757190    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1757191    %let dsid = %sysfunc(close(&dsid));
1757192    %if ^&&nobs&id %then %do;
1757193    proc datasets lib=work nolist;
1757194    delete _tempid;
1757195    run;
1757196    quit;
1757197    %end;
1757198    %else %do;
1757199    data _tempAll;
1757200    set %let j=%eval(&id-1);
1757201    %do x=1 %to &j;
1757202    %if &&nobs&x %then %do;
1757203    _temp&x %end;
1757204    %end;
1757205    ;
1757206    run;
1757207    proc sql;
1757208    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1757208  ! work._tempid p2 where p.name=p2.lhs;
1757209    quit;
1757210    data _temp&id;
1757211    set _temp&id;
1757212    where LHS ne '' and NAME ne '' and Node ne '';
1757213    run;
1757214    proc datasets lib=work nolist;
1757215    delete _tempAll;
1757216    run;
1757217    %let dsid = %sysfunc(open(_temp&id));
1757218    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1757219    %let dsid = %sysfunc(close(&dsid));
1757220    %if ^&&nobs&id %then %do;
1757221    proc datasets lib=work nolist;
1757222    delete _temp&id;
1757223    run;
1757224    quit;
1757225    %end;
1757226    %else %do;
1757227    %let scoreFlag&id = 1;
1757228    data _temp&id;
1757229    set _temp&id;
1757230    where LHS ne NAME and node ne '';
1757231    run;
1757232    %let dsid = %sysfunc(open(_temp&id));
1757233    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1757234    %let dsid = %sysfunc(close(&dsid));
1757235    %if ^&&nobs&id %then %do;
1757236    proc datasets lib=work nolist;
1757237    delete _temp&id;
1757238    run;
1757239    quit;
1757240    %end;
1757241    %else %do;
1757242    proc sort data=_temp&id nodupkey;
1757243    by LHS NAME;
1757244    run;
1757245    %end;
1757246    %end;
1757247    %end;
1757248    %end;
1757249    %mend varDept;
1757250    %macro optCode(outdata=fcmpdata);
1757251    %global fcmpStart;
1757252    %let fcmpStart = 0;
1757253    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1757254    %let NumNodes=9;
1757255    %do k=1 %to &NumNodes;
1757256    %vardept(fcmpdata=&outdata, id=&k);
1757257    %end;
1757258    %mend optCode;
1757259    %optcode(outData=EMWS8.Ensmbl26_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1757260    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1757261    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1757262    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1757263    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757264    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1757265    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1757266    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1757267    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757268    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1757269    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1757269  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1757270    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757271    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1757272    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1757273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757274    filename _pref
1757274  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1757275    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1757276    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1757277   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1757278   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1757279   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1757280   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1757281   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1757282   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1757283   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1757284   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1757285   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1757286   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1757287   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1757288   +LENGTH _WARN_ $4
1757289   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1757290   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1757291   +
1757292   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1757293   +
1757294   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1757295   +
1757296   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1757297   +
1757298   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1757299   +
1757300   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1757301   +
1757302   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1757303   +
1757304   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1757305   +
1757306   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1757307   +
1757308   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1757309   +
1757310   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1757311   +
1757312   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1757313   +
1757314   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1757315   +
1757316   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1757317   +
1757318   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1757319   +
1757320   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1757321   +
1757322   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1757323   +
1757324   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1757325   +
1757326   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1757327   +
1757328   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1757329   +
1757330   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1757331   +
1757332   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1757333   +
1757334   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1757335   +
1757336   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1757337   +
1757338   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1757339   +
1757340   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1757341   +
1757342   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1757343   +
1757344   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1757345   +
1757346   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1757347   +
1757348   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1757349   +
1757350   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1757351   +
1757352   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1757353   +
1757354   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1757355   +
1757356   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1757357   +
1757358   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1757359   +
1757360   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1757361   +
1757362   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1757363   +
1757364   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1757365   +
1757366   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1757367   +
1757368   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1757369   +
1757370   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1757371   +
1757372   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1757373   +
1757374   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1757375   +
1757376   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1757377   +
1757378   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1757379   +
1757380   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1757381   +
1757382   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1757383   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1757384   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1757385   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1757386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757388   +end;
MPRINT(EM_DIAGRAM):   end;
1757389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1757391   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1757392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757393   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1757394   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1757395   +   end;
MPRINT(EM_DIAGRAM):   end;
1757396   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1757397   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1757398   +   end;
MPRINT(EM_DIAGRAM):   end;
1757399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757400   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1757401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757403   +   end;
MPRINT(EM_DIAGRAM):   end;
1757404   +end;
MPRINT(EM_DIAGRAM):   end;
1757405   +
1757406   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1757407   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1757408   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1757409   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1757410   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757411   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757412   +end;
MPRINT(EM_DIAGRAM):   end;
1757413   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757414   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1757415   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1757416   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757417   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1757418   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1757419   +   end;
MPRINT(EM_DIAGRAM):   end;
1757420   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1757421   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1757422   +   end;
MPRINT(EM_DIAGRAM):   end;
1757423   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757424   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1757425   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757426   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757427   +   end;
MPRINT(EM_DIAGRAM):   end;
1757428   +end;
MPRINT(EM_DIAGRAM):   end;
1757429   +
1757430   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1757431   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1757432   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1757433   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1757434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757436   +end;
MPRINT(EM_DIAGRAM):   end;
1757437   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757438   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1757439   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1757440   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757441   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1757442   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1757443   +   end;
MPRINT(EM_DIAGRAM):   end;
1757444   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1757445   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1757446   +   end;
MPRINT(EM_DIAGRAM):   end;
1757447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757448   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1757449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757451   +   end;
MPRINT(EM_DIAGRAM):   end;
1757452   +end;
MPRINT(EM_DIAGRAM):   end;
1757453   +
1757454   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1757455   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1757456   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1757457   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1757458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757460   +end;
MPRINT(EM_DIAGRAM):   end;
1757461   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1757463   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1757464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757465   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1757466   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1757467   +   end;
MPRINT(EM_DIAGRAM):   end;
1757468   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1757469   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1757470   +   end;
MPRINT(EM_DIAGRAM):   end;
1757471   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757472   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1757473   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757474   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757475   +   end;
MPRINT(EM_DIAGRAM):   end;
1757476   +end;
MPRINT(EM_DIAGRAM):   end;
1757477   +
1757478   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1757479   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1757480   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1757481   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1757482   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757483   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757484   +end;
MPRINT(EM_DIAGRAM):   end;
1757485   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757486   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1757487   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1757488   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757489   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1757490   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1757491   +   end;
MPRINT(EM_DIAGRAM):   end;
1757492   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1757493   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1757494   +   end;
MPRINT(EM_DIAGRAM):   end;
1757495   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757496   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1757497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757499   +   end;
MPRINT(EM_DIAGRAM):   end;
1757500   +end;
MPRINT(EM_DIAGRAM):   end;
1757501   +
1757502   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1757503   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1757504   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1757505   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1757506   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757508   +end;
MPRINT(EM_DIAGRAM):   end;
1757509   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757510   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1757511   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1757512   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757513   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1757514   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1757515   +   end;
MPRINT(EM_DIAGRAM):   end;
1757516   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1757517   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1757518   +   end;
MPRINT(EM_DIAGRAM):   end;
1757519   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757520   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1757521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757523   +   end;
MPRINT(EM_DIAGRAM):   end;
1757524   +end;
MPRINT(EM_DIAGRAM):   end;
1757525   +
1757526   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1757527   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1757528   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1757529   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1757530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757532   +end;
MPRINT(EM_DIAGRAM):   end;
1757533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757534   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1757535   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1757536   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757537   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1757538   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1757539   +   end;
MPRINT(EM_DIAGRAM):   end;
1757540   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1757541   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1757542   +   end;
MPRINT(EM_DIAGRAM):   end;
1757543   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757544   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1757545   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757546   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757547   +   end;
MPRINT(EM_DIAGRAM):   end;
1757548   +end;
MPRINT(EM_DIAGRAM):   end;
1757549   +
1757550   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1757551   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1757552   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1757553   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1757554   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1757555   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1757556   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1757557   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1757558   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1757559   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1757560   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1757561   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1757562   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757563   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757564   +end;
MPRINT(EM_DIAGRAM):   end;
1757565   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757566   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1757567   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1757568   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757569   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1757570   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1757571   +   end;
MPRINT(EM_DIAGRAM):   end;
1757572   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1757573   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1757574   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1757575   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1757576   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1757577   +   end;
MPRINT(EM_DIAGRAM):   end;
1757578   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1757579   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1757580   +   end;
MPRINT(EM_DIAGRAM):   end;
1757581   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1757582   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1757583   +   end;
MPRINT(EM_DIAGRAM):   end;
1757584   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1757585   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1757586   +   end;
MPRINT(EM_DIAGRAM):   end;
1757587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757588   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1757589   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1757590   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1757591   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1757592   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757593   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757594   +   end;
MPRINT(EM_DIAGRAM):   end;
1757595   +end;
MPRINT(EM_DIAGRAM):   end;
1757596   +
1757597   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1757598   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1757599   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1757600   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1757601   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1757602   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1757603   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1757604   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1757605   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1757606   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1757607   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1757608   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1757609   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1757610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1757611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757612   +end;
MPRINT(EM_DIAGRAM):   end;
1757613   +else do;
MPRINT(EM_DIAGRAM):   else do;
1757614   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1757615   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1757616   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1757617   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1757618   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1757619   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1757620   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1757621   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1757622   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1757623   +         end;
MPRINT(EM_DIAGRAM):   end;
1757624   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1757625   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1757626   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1757627   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1757628   +            end;
MPRINT(EM_DIAGRAM):   end;
1757629   +         end;
MPRINT(EM_DIAGRAM):   end;
1757630   +      end;
MPRINT(EM_DIAGRAM):   end;
1757631   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1757632   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1757633   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1757634   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1757635   +         end;
MPRINT(EM_DIAGRAM):   end;
1757636   +      end;
MPRINT(EM_DIAGRAM):   end;
1757637   +   end;
MPRINT(EM_DIAGRAM):   end;
1757638   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1757639   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1757640   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1757641   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1757642   +      end;
MPRINT(EM_DIAGRAM):   end;
1757643   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1757644   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1757645   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1757646   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1757647   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1757648   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1757649   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1757650   +         end;
MPRINT(EM_DIAGRAM):   end;
1757651   +      end;
MPRINT(EM_DIAGRAM):   end;
1757652   +   end;
MPRINT(EM_DIAGRAM):   end;
1757653   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1757654   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1757655   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1757656   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1757657   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1757658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1757659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757660   +   end;
MPRINT(EM_DIAGRAM):   end;
1757661   +end;
MPRINT(EM_DIAGRAM):   end;
1757662   +
1757663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757664   +*** Checking missing input Interval
1757665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1757666   +
1757667   +IF NMISS(
1757668   +   AcceptedCmpTotal ,
1757669   +   Age ,
1757670   +   Frq ,
1757671   +   Income ,
1757672   +   Kidhome ,
1757673   +   Mnt ,
1757674   +   MntFishProducts ,
1757675   +   MntFruits ,
1757676   +   MntGoldProds ,
1757677   +   MntMeatProducts ,
1757678   +   MntSweetProducts ,
1757679   +   MntWines ,
1757680   +   MonthsAsCustomer ,
1757681   +   NumCatalogPurchases ,
1757682   +   NumDealsPurchases ,
1757683   +   NumDistPurchases ,
1757684   +   NumStorePurchases ,
1757685   +   NumWebPurchases ,
1757686   +   NumWebVisitsMonth ,
1757687   +   RFMstat ,
1757688   +   RMntFrq ,
1757689   +   Recency ,
1757690   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1757691   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1757692   +
1757693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1757694   +END;
MPRINT(EM_DIAGRAM):   END;
1757695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757696   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1757697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757698   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1757699   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1757700   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1757701   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1757702   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1757703   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1757704   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1757705   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1757706   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1757707   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1757708   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1757709   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1757710   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1757711   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1757712   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1757713   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1757714   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1757715   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1757716   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1757717   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1757718   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1757719   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1757720   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1757721   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1757722   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1757723   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1757724   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1757725   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1757726   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1757727   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1757728   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1757729   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1757730   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1757731   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1757732   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1757733   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1757734   +END;
MPRINT(EM_DIAGRAM):   END;
1757735   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1757736   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1757737   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1757738   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1757739   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1757740   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1757741   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1757742   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1757743   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1757744   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1757745   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1757746   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1757747   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1757748   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1757749   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1757750   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1757751   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1757752   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1757753   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1757754   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1757755   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1757756   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1757757   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1757758   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1757759   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1757760   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1757761   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1757762   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1757763   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1757764   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1757765   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1757766   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1757767   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1757768   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1757769   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1757770   +   ELSE S_NumCatalogPurchases
1757771   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1757772   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1757773   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1757774   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1757775   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1757776   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1757777   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1757778   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1757779   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1757780   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1757781   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1757782   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1757783   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1757784   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1757785   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1757786   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1757787   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1757788   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1757789   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1757790   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1757791   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1757792   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1757793   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1757794   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1757795   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1757796   +END;
MPRINT(EM_DIAGRAM):   END;
1757797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757798   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1757799   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757801   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1757802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757804   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1757805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757806   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1757807   +   H11  =     0.83781385787802 * S_AcceptedCmpTotal  +    -0.24139142678243 *
1757808   +        S_Age  +     0.06099821217041 * S_Frq  +     0.40208633787615 *
1757809   +        S_Income  +     0.51123266106809 * S_Kidhome
1757810   +          +    -0.16199331018171 * S_Mnt  +     0.01907816065296 *
1757811   +        S_MntFishProducts  +     -0.3821919957066 * S_MntFruits
1757812   +          +    -0.03370551533515 * S_MntGoldProds  +     1.07281355981991 *
1757813   +        S_MntMeatProducts  +    -0.13640457355292 * S_MntSweetProducts
1757814   +          +    -1.07230822345452 * S_MntWines  +      0.1487724512445 *
1757815   +        S_MonthsAsCustomer  +     1.00223132386414 * S_NumCatalogPurchases
1757816   +          +     1.34095732961105 * S_NumDealsPurchases
1757817   +          +     0.16605991333252 * S_NumDistPurchases
1757818   +          +    -0.61746267736536 * S_NumStorePurchases
1757819   +          +    -0.61812800689506 * S_NumWebPurchases
1757820   +          +     1.44649145055387 * S_NumWebVisitsMonth
1757821   +          +     0.71065354084884 * S_RFMstat  +     0.16160177747086 *
1757822   +        S_RMntFrq  +     -0.9427457293884 * S_Recency
1757823   +          +     0.02731657981524 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.83781385787802 * S_AcceptedCmpTotal + -0.24139142678243 * S_Age
+ 0.06099821217041 * S_Frq + 0.40208633787615 * S_Income + 0.51123266106809 * S_Kidhome +
-0.16199331018171 * S_Mnt + 0.01907816065296 * S_MntFishProducts + -0.3821919957066 *
S_MntFruits + -0.03370551533515 * S_MntGoldProds + 1.07281355981991 * S_MntMeatProducts +
-0.13640457355292 * S_MntSweetProducts + -1.07230822345452 * S_MntWines + 0.1487724512445 *
S_MonthsAsCustomer + 1.00223132386414 * S_NumCatalogPurchases + 1.34095732961105 *
S_NumDealsPurchases + 0.16605991333252 * S_NumDistPurchases + -0.61746267736536 *
S_NumStorePurchases + -0.61812800689506 * S_NumWebPurchases + 1.44649145055387 *
S_NumWebVisitsMonth + 0.71065354084884 * S_RFMstat + 0.16160177747086 * S_RMntFrq +
-0.9427457293884 * S_Recency + 0.02731657981524 * S_Teenhome ;
1757824   +   H12  =    -0.90907441149587 * S_AcceptedCmpTotal  +     -0.0457783940034 *
1757825   +        S_Age  +     0.27413524344715 * S_Frq  +    -0.43786159455637 *
1757826   +        S_Income  +     0.52295323651199 * S_Kidhome
1757827   +          +     0.16720640871174 * S_Mnt  +     0.90930001391122 *
1757828   +        S_MntFishProducts  +    -0.05099919369902 * S_MntFruits
1757829   +          +    -0.17081601037694 * S_MntGoldProds  +    -1.57312364500957 *
1757830   +        S_MntMeatProducts  +     -0.5081100411323 * S_MntSweetProducts
1757831   +          +     0.59764239237778 * S_MntWines  +     0.21825258246439 *
1757832   +        S_MonthsAsCustomer  +    -0.86944690807188 * S_NumCatalogPurchases
1757833   +          +    -0.72543332317832 * S_NumDealsPurchases
1757834   +          +    -0.05245472565117 * S_NumDistPurchases
1757835   +          +     1.00667431585298 * S_NumStorePurchases
1757836   +          +     1.02836701470962 * S_NumWebPurchases
1757837   +          +    -1.25666606219201 * S_NumWebVisitsMonth
1757838   +          +    -0.21335681545447 * S_RFMstat  +     0.10575177006447 *
1757839   +        S_RMntFrq  +     1.50910531484632 * S_Recency
1757840   +          +     0.35192762580497 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.90907441149587 * S_AcceptedCmpTotal + -0.0457783940034 * S_Age
+ 0.27413524344715 * S_Frq + -0.43786159455637 * S_Income + 0.52295323651199 * S_Kidhome +
0.16720640871174 * S_Mnt + 0.90930001391122 * S_MntFishProducts + -0.05099919369902 *
S_MntFruits + -0.17081601037694 * S_MntGoldProds + -1.57312364500957 * S_MntMeatProducts +
-0.5081100411323 * S_MntSweetProducts + 0.59764239237778 * S_MntWines + 0.21825258246439 *
S_MonthsAsCustomer + -0.86944690807188 * S_NumCatalogPurchases + -0.72543332317832 *
S_NumDealsPurchases + -0.05245472565117 * S_NumDistPurchases + 1.00667431585298 *
S_NumStorePurchases + 1.02836701470962 * S_NumWebPurchases + -1.25666606219201 *
S_NumWebVisitsMonth + -0.21335681545447 * S_RFMstat + 0.10575177006447 * S_RMntFrq +
1.50910531484632 * S_Recency + 0.35192762580497 * S_Teenhome ;
1757841   +   H13  =    -0.15164592837535 * S_AcceptedCmpTotal  +    -0.19703351726774 *
1757842   +        S_Age  +    -0.22367876273414 * S_Frq  +    -1.11408247891182 *
1757843   +        S_Income  +     0.58025720116696 * S_Kidhome
1757844   +          +     0.21614555339512 * S_Mnt  +    -0.15414755742285 *
1757845   +        S_MntFishProducts  +     0.16818356186813 * S_MntFruits
1757846   +          +     0.07314186249038 * S_MntGoldProds  +    -0.33939177015316 *
1757847   +        S_MntMeatProducts  +     0.29581112739013 * S_MntSweetProducts
1757848   +          +     0.30701920735867 * S_MntWines  +    -0.24397557348757 *
1757849   +        S_MonthsAsCustomer  +    -0.58962094283699 * S_NumCatalogPurchases
1757850   +          +     0.12670438262487 * S_NumDealsPurchases
1757851   +          +    -0.46113523834333 * S_NumDistPurchases
1757852   +          +     0.07074818720567 * S_NumStorePurchases
1757853   +          +    -0.05066645783537 * S_NumWebPurchases
1757854   +          +    -0.65729410185804 * S_NumWebVisitsMonth
1757855   +          +     0.08702511028701 * S_RFMstat  +    -0.39946503838688 *
1757856   +        S_RMntFrq  +      1.4337242246086 * S_Recency
1757857   +          +     0.88397808030072 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15164592837535 * S_AcceptedCmpTotal + -0.19703351726774 * S_Age
+ -0.22367876273414 * S_Frq + -1.11408247891182 * S_Income + 0.58025720116696 * S_Kidhome +
0.21614555339512 * S_Mnt + -0.15414755742285 * S_MntFishProducts + 0.16818356186813 *
S_MntFruits + 0.07314186249038 * S_MntGoldProds + -0.33939177015316 * S_MntMeatProducts +
0.29581112739013 * S_MntSweetProducts + 0.30701920735867 * S_MntWines + -0.24397557348757 *
S_MonthsAsCustomer + -0.58962094283699 * S_NumCatalogPurchases + 0.12670438262487 *
S_NumDealsPurchases + -0.46113523834333 * S_NumDistPurchases + 0.07074818720567 *
S_NumStorePurchases + -0.05066645783537 * S_NumWebPurchases + -0.65729410185804 *
S_NumWebVisitsMonth + 0.08702511028701 * S_RFMstat + -0.39946503838688 * S_RMntFrq +
1.4337242246086 * S_Recency + 0.88397808030072 * S_Teenhome ;
1757858   +   H11  = H11  +    -0.63147559208792 * AcceptedCmp10
1757859   +          +    -0.00204416332102 * AcceptedCmp20  +    -0.91272822301777 *
1757860   +        AcceptedCmp30  +    -0.24133711406692 * AcceptedCmp40
1757861   +          +    -0.11641744847547 * AcceptedCmp50  +     0.08815921371043 *
1757862   +        Complain0  +    -0.53095204316646 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.63147559208792 * AcceptedCmp10 + -0.00204416332102 *
AcceptedCmp20 + -0.91272822301777 * AcceptedCmp30 + -0.24133711406692 * AcceptedCmp40 +
-0.11641744847547 * AcceptedCmp50 + 0.08815921371043 * Complain0 + -0.53095204316646 *
HigherEducationBinary0 ;
1757863   +   H12  = H12  +     0.22426256838634 * AcceptedCmp10
1757864   +          +      0.0373678700446 * AcceptedCmp20  +    -0.34019580311077 *
1757865   +        AcceptedCmp30  +    -0.06657561018437 * AcceptedCmp40
1757866   +          +      1.1187666411593 * AcceptedCmp50  +     -0.0005124915346 *
1757867   +        Complain0  +    -0.07802187100635 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22426256838634 * AcceptedCmp10 + 0.0373678700446 *
AcceptedCmp20 + -0.34019580311077 * AcceptedCmp30 + -0.06657561018437 * AcceptedCmp40 +
1.1187666411593 * AcceptedCmp50 + -0.0005124915346 * Complain0 + -0.07802187100635 *
HigherEducationBinary0 ;
1757868   +   H13  = H13  +     0.22922205033785 * AcceptedCmp10
1757869   +          +     0.61911667740136 * AcceptedCmp20  +      0.4334892671273 *
1757870   +        AcceptedCmp30  +     0.47499802255895 * AcceptedCmp40
1757871   +          +     0.09778924431294 * AcceptedCmp50  +     0.28935042910164 *
1757872   +        Complain0  +    -0.29804210825456 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.22922205033785 * AcceptedCmp10 + 0.61911667740136 *
AcceptedCmp20 + 0.4334892671273 * AcceptedCmp30 + 0.47499802255895 * AcceptedCmp40 +
0.09778924431294 * AcceptedCmp50 + 0.28935042910164 * Complain0 + -0.29804210825456 *
HigherEducationBinary0 ;
1757873   +   H11  = H11  +      0.0161257464845 * Education2n_Cycle
1757874   +          +     0.12153645157245 * EducationBasic  +     0.31018543557792 *
1757875   +        EducationGraduation  +    -0.04429611151736 * EducationMaster
1757876   +          +     0.12692950862511 * Marital_StatusDivorced
1757877   +          +     0.10026497666167 * Marital_StatusMarried
1757878   +          +    -0.19893864592813 * Marital_StatusSingle
1757879   +          +    -0.04062003397514 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0161257464845 * Education2n_Cycle + 0.12153645157245 *
EducationBasic + 0.31018543557792 * EducationGraduation + -0.04429611151736 * EducationMaster
+ 0.12692950862511 * Marital_StatusDivorced + 0.10026497666167 * Marital_StatusMarried +
-0.19893864592813 * Marital_StatusSingle + -0.04062003397514 * Marital_StatusTogether ;
1757880   +   H12  = H12  +    -0.21839182894884 * Education2n_Cycle
1757881   +          +     0.31940013998474 * EducationBasic  +    -0.02690553782252 *
1757882   +        EducationGraduation  +     0.05580498138108 * EducationMaster
1757883   +          +    -0.16785192490199 * Marital_StatusDivorced
1757884   +          +     0.13153695130362 * Marital_StatusMarried
1757885   +          +    -0.50411544587104 * Marital_StatusSingle
1757886   +          +     0.13370566790692 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.21839182894884 * Education2n_Cycle + 0.31940013998474 *
EducationBasic + -0.02690553782252 * EducationGraduation + 0.05580498138108 * EducationMaster
+ -0.16785192490199 * Marital_StatusDivorced + 0.13153695130362 * Marital_StatusMarried +
-0.50411544587104 * Marital_StatusSingle + 0.13370566790692 * Marital_StatusTogether ;
1757887   +   H13  = H13  +     0.07130553159229 * Education2n_Cycle
1757888   +          +    -0.14879818143238 * EducationBasic  +     0.17822087456028 *
1757889   +        EducationGraduation  +     0.21882736952662 * EducationMaster
1757890   +          +    -0.62654958087044 * Marital_StatusDivorced
1757891   +          +     1.86250132393341 * Marital_StatusMarried
1757892   +          +    -1.37067556451928 * Marital_StatusSingle
1757893   +          +     1.14727921038174 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07130553159229 * Education2n_Cycle + -0.14879818143238 *
EducationBasic + 0.17822087456028 * EducationGraduation + 0.21882736952662 * EducationMaster +
-0.62654958087044 * Marital_StatusDivorced + 1.86250132393341 * Marital_StatusMarried +
-1.37067556451928 * Marital_StatusSingle + 1.14727921038174 * Marital_StatusTogether ;
1757894   +   H11  =     -1.1990622461103 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.1990622461103 + H11 ;
1757895   +   H12  =       0.393123481714 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.393123481714 + H12 ;
1757896   +   H13  =     1.85498361608276 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.85498361608276 + H13 ;
1757897   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1757898   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1757899   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1757900   +END;
MPRINT(EM_DIAGRAM):   END;
1757901   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1757902   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1757903   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1757904   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1757905   +END;
MPRINT(EM_DIAGRAM):   END;
1757906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757907   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1757908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757909   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1757910   +   P_DepVar1  =     2.52409534738218 * H11  +    -2.96034283825043 * H12
1757911   +          +    -3.36424404783147 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.52409534738218 * H11 + -2.96034283825043 * H12 +
-3.36424404783147 * H13 ;
1757912   +   P_DepVar1  =    -0.20096847833731 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.20096847833731 + P_DepVar1 ;
1757913   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1757914   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1757915   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1757916   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1757917   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1757918   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1757919   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1757920   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1757921   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1757922   +END;
MPRINT(EM_DIAGRAM):   END;
1757923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1757924   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1757925   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1757926   +END;
MPRINT(EM_DIAGRAM):   END;
1757927   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1757928   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1757929   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1757930   +END;
MPRINT(EM_DIAGRAM):   END;
1757931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757932   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1757933   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1757934   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1757935   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1757936   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1757937   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1757938   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1757939   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1757940   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1757941   +END;
MPRINT(EM_DIAGRAM):   END;
1757942   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1757943   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1757944   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1757945   +drop
1757946   +H11
1757947   +H12
1757948   +H13
1757949   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1757950   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1757951    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1757952    quit;
1757953    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1757954    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1757955    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1757956    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1757957    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1757958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757959    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1757960    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757961    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757962    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1757963    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757965    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1757966    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1757967    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1757968    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757969    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1757970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1757971    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1757972    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757973    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757974    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1757975    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1757976    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1757977    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757978    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1757979    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1757979  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.
 
1757980    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.20 seconds
      cpu time            0.03 seconds
 
 
1757981    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1757982    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1757983    filename _pref
1757983  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1757984    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1757985    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1757986   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1757987   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1757988   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1757989   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1757990   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1757991   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1757992    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1757993    quit;
1757994    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1757995    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1757996    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1757997    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1757998    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1757999    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758000    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1758001    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758002    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1758003    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1758004    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758005    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758006    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758007    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1758008    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1758009    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758010    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1758011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1758012    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1758013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758015    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758016    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1758017    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758018    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1758019    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1758020    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1758020  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1758021    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758022    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1758023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758024    filename _pref
1758024  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1758025    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1758026    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1758027   +
1758028   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1758029   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1758029  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1758030   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1758031   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1758032   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1758033   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1758034   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1758035    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1758036    quit;
1758037    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1758038    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1758039    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1758040    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1758041    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1758042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758043    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1758044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758046    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1758047    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758049    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758050    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1758051    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1758052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758053    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1758054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1758055    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1758056    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758057    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758058    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758059    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1758060    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758061    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758062    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1758063    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1758063  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1758064    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1758065    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1758066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758067    filename _pref
1758067  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1758068    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1758069    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1758070   +
1758071   +
1758072   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1758073   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1758074   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1758075   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1758076   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1758077   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758078   +
1758079   +
1758080   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1758081   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1758082   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1758083   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1758084   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1758085   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758086   +
1758087   +
1758088   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1758089   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1758090   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1758091   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1758092   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1758093   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758094   +
1758095   +
1758096   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1758097   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1758098   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1758099   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1758100   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1758101   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758102   +
1758103   +
1758104   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1758105   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1758106   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1758107   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1758108   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1758109   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758110   +
1758111   +
1758112   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1758113   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1758114   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1758115   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1758116   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1758117   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758118   +
1758119   +
1758120   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1758121   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1758122   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1758123   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1758124   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1758125   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758126   +
1758127   +
1758128   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1758129   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1758130   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1758131   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1758132   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1758133   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1758134   +if
1758135   +_FILTERNORM1 not in ( '.')
1758136   + and
1758137   +_FILTERNORM2 not in ( '.')
1758138   + and
1758139   +_FILTERNORM3 not in ( '.')
1758140   + and
1758141   +_FILTERNORM4 not in ( '.')
1758142   + and
1758143   +_FILTERNORM5 not in ( '.')
1758144   + and
1758145   +_FILTERNORM6 not in ( '.')
1758146   + and
1758147   +_FILTERNORM7 not in ( ' ')
1758148   + and
1758149   +_FILTERNORM8 not in ( ' ')
1758150   +and
1758151   +( Dt_Customer ne .)
1758152   +and ( Income ne . and (Income<=107000))
1758153   +and ( Kidhome ne .)
1758154   +and ( MntFishProducts ne .)
1758155   +and ( MntFruits ne .)
1758156   +and ( MntGoldProds ne .)
1758157   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1758158   +and ( MntSweetProducts ne .)
1758159   +and ( MntWines ne .)
1758160   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1758161   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1758162   +and ( NumStorePurchases ne .)
1758163   +and ( NumWebPurchases ne .)
1758164   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1758165   +and ( Recency ne .)
1758166   +and ( Teenhome ne .)
1758167   +and ( Year_Birth ne .)
1758168   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1758169   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1758170   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1758171   +end;
MPRINT(EM_DIAGRAM):   end;
1758172   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1758173   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1758174    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1758175    quit;
1758176    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1758177    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1758178    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1758179    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1758180    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1758181    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758182    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1758183    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758184    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758185    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1758186    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758187    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758188    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758189    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1758190    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1758191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758192    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1758193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1758194    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1758195    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758197    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758198    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1758199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758200    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758201    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1758202    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1758202  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1758203    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758204    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1758205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758206    %macro varDept(fcmpdata=,id=);
1758207    %global nobs&id scoreFlag&id;
1758208    %let scoreFlag&id = 0;
1758209    %if &id=1 or ^&fcmpStart %then %do;
1758210    proc sort data=&fcmpdata out=_temp&id nodupkey;
1758211    by NAME;
1758212    where id=&id and LHS in( %let j=1;
1758213    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1758214    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1758215    "&var" %let j = %eval(&j+1);
1758216    %end;
1758217    );
1758218    run;
1758219    %let dsid = %sysfunc(open(_temp&id));
1758220    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1758221    %let dsid = %sysfunc(close(&dsid));
1758222    %if &&nobs&id %then %do;
1758223    %let scoreFlag&id = 1;
1758224    %let fcmpStart = 1;
1758225    %end;
1758226    %else %let fcmpStart = 0;
1758227    %end;
1758228    %else %do;
1758229    proc sort data=&fcmpdata out=_tempid;
1758230    where id=&id;
1758231    by LHS;
1758232    run;
1758233    %let dsid = %sysfunc(open(_tempid));
1758234    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1758235    %let dsid = %sysfunc(close(&dsid));
1758236    %if ^&&nobs&id %then %do;
1758237    proc datasets lib=work nolist;
1758238    delete _tempid;
1758239    run;
1758240    quit;
1758241    %end;
1758242    %else %do;
1758243    data _tempAll;
1758244    set %let j=%eval(&id-1);
1758245    %do x=1 %to &j;
1758246    %if &&nobs&x %then %do;
1758247    _temp&x %end;
1758248    %end;
1758249    ;
1758250    run;
1758251    proc sql;
1758252    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1758252  ! work._tempid p2 where p.name=p2.lhs;
1758253    quit;
1758254    data _temp&id;
1758255    set _temp&id;
1758256    where LHS ne '' and NAME ne '' and Node ne '';
1758257    run;
1758258    proc datasets lib=work nolist;
1758259    delete _tempAll;
1758260    run;
1758261    %let dsid = %sysfunc(open(_temp&id));
1758262    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1758263    %let dsid = %sysfunc(close(&dsid));
1758264    %if ^&&nobs&id %then %do;
1758265    proc datasets lib=work nolist;
1758266    delete _temp&id;
1758267    run;
1758268    quit;
1758269    %end;
1758270    %else %do;
1758271    %let scoreFlag&id = 1;
1758272    data _temp&id;
1758273    set _temp&id;
1758274    where LHS ne NAME and node ne '';
1758275    run;
1758276    %let dsid = %sysfunc(open(_temp&id));
1758277    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1758278    %let dsid = %sysfunc(close(&dsid));
1758279    %if ^&&nobs&id %then %do;
1758280    proc datasets lib=work nolist;
1758281    delete _temp&id;
1758282    run;
1758283    quit;
1758284    %end;
1758285    %else %do;
1758286    proc sort data=_temp&id nodupkey;
1758287    by LHS NAME;
1758288    run;
1758289    %end;
1758290    %end;
1758291    %end;
1758292    %end;
1758293    %mend varDept;
1758294    %macro optCode(outdata=fcmpdata);
1758295    %global fcmpStart;
1758296    %let fcmpStart = 0;
1758297    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1758298    %let NumNodes=9;
1758299    %do k=1 %to &NumNodes;
1758300    %vardept(fcmpdata=&outdata, id=&k);
1758301    %end;
1758302    %mend optCode;
1758303    %optcode(outData=EMWS8.Ensmbl26_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1758304    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1758305    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1758306    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1758307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758308    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1758309    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1758310    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1758311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758312    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1758313    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1758313  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1758314    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1758315    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1758316    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1758317    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758318    filename _pref
1758318  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1758319    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1758320    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1758321   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1758322   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1758323   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1758324   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1758325   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1758326   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1758327   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1758328   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1758329   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1758330   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1758331   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1758332   +LENGTH _WARN_ $4
1758333   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1758334   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1758335   +
1758336   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1758337   +
1758338   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1758339   +
1758340   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1758341   +
1758342   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1758343   +
1758344   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1758345   +
1758346   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1758347   +
1758348   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1758349   +
1758350   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1758351   +
1758352   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1758353   +
1758354   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1758355   +
1758356   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1758357   +
1758358   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1758359   +
1758360   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1758361   +
1758362   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1758363   +
1758364   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1758365   +
1758366   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1758367   +
1758368   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1758369   +
1758370   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1758371   +
1758372   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1758373   +
1758374   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1758375   +
1758376   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1758377   +
1758378   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1758379   +
1758380   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1758381   +
1758382   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1758383   +
1758384   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1758385   +
1758386   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1758387   +
1758388   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1758389   +
1758390   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1758391   +
1758392   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1758393   +
1758394   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1758395   +
1758396   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1758397   +
1758398   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1758399   +
1758400   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1758401   +
1758402   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1758403   +
1758404   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1758405   +
1758406   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1758407   +
1758408   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1758409   +
1758410   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1758411   +
1758412   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1758413   +
1758414   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1758415   +
1758416   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1758417   +
1758418   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1758419   +
1758420   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1758421   +
1758422   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1758423   +
1758424   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1758425   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1758426   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1758427   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1758428   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758429   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758430   +end;
MPRINT(EM_DIAGRAM):   end;
1758431   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758432   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1758433   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1758434   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758435   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1758436   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1758437   +   end;
MPRINT(EM_DIAGRAM):   end;
1758438   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1758439   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1758440   +   end;
MPRINT(EM_DIAGRAM):   end;
1758441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758442   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1758443   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758444   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758445   +   end;
MPRINT(EM_DIAGRAM):   end;
1758446   +end;
MPRINT(EM_DIAGRAM):   end;
1758447   +
1758448   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1758449   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1758450   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1758451   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1758452   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758453   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758454   +end;
MPRINT(EM_DIAGRAM):   end;
1758455   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758456   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1758457   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1758458   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758459   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1758460   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1758461   +   end;
MPRINT(EM_DIAGRAM):   end;
1758462   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1758463   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1758464   +   end;
MPRINT(EM_DIAGRAM):   end;
1758465   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758466   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1758467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758469   +   end;
MPRINT(EM_DIAGRAM):   end;
1758470   +end;
MPRINT(EM_DIAGRAM):   end;
1758471   +
1758472   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1758473   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1758474   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1758475   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1758476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758478   +end;
MPRINT(EM_DIAGRAM):   end;
1758479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1758481   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1758482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758483   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1758484   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1758485   +   end;
MPRINT(EM_DIAGRAM):   end;
1758486   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1758487   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1758488   +   end;
MPRINT(EM_DIAGRAM):   end;
1758489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758490   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1758491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758493   +   end;
MPRINT(EM_DIAGRAM):   end;
1758494   +end;
MPRINT(EM_DIAGRAM):   end;
1758495   +
1758496   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1758497   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1758498   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1758499   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1758500   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758501   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758502   +end;
MPRINT(EM_DIAGRAM):   end;
1758503   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758504   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1758505   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1758506   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758507   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1758508   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1758509   +   end;
MPRINT(EM_DIAGRAM):   end;
1758510   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1758511   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1758512   +   end;
MPRINT(EM_DIAGRAM):   end;
1758513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758514   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1758515   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758516   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758517   +   end;
MPRINT(EM_DIAGRAM):   end;
1758518   +end;
MPRINT(EM_DIAGRAM):   end;
1758519   +
1758520   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1758521   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1758522   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1758523   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1758524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758526   +end;
MPRINT(EM_DIAGRAM):   end;
1758527   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1758529   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1758530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758531   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1758532   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1758533   +   end;
MPRINT(EM_DIAGRAM):   end;
1758534   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1758535   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1758536   +   end;
MPRINT(EM_DIAGRAM):   end;
1758537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758538   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1758539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758541   +   end;
MPRINT(EM_DIAGRAM):   end;
1758542   +end;
MPRINT(EM_DIAGRAM):   end;
1758543   +
1758544   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1758545   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1758546   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1758547   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1758548   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758550   +end;
MPRINT(EM_DIAGRAM):   end;
1758551   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758552   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1758553   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1758554   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758555   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1758556   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1758557   +   end;
MPRINT(EM_DIAGRAM):   end;
1758558   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1758559   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1758560   +   end;
MPRINT(EM_DIAGRAM):   end;
1758561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758562   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1758563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758565   +   end;
MPRINT(EM_DIAGRAM):   end;
1758566   +end;
MPRINT(EM_DIAGRAM):   end;
1758567   +
1758568   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1758569   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1758570   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1758571   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1758572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758574   +end;
MPRINT(EM_DIAGRAM):   end;
1758575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1758577   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1758578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758579   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1758580   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1758581   +   end;
MPRINT(EM_DIAGRAM):   end;
1758582   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1758583   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1758584   +   end;
MPRINT(EM_DIAGRAM):   end;
1758585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758586   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1758587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758589   +   end;
MPRINT(EM_DIAGRAM):   end;
1758590   +end;
MPRINT(EM_DIAGRAM):   end;
1758591   +
1758592   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1758593   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation
EducationMaster ;
1758594   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1758595   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1758596   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1758597   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1758598   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1758599   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1758600   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1758601   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1758602   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1758603   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1758604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758606   +end;
MPRINT(EM_DIAGRAM):   end;
1758607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758608   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1758609   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1758610   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758611   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1758612   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1758613   +   end;
MPRINT(EM_DIAGRAM):   end;
1758614   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1758615   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1758616   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1758617   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1758618   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1758619   +   end;
MPRINT(EM_DIAGRAM):   end;
1758620   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1758621   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1758622   +   end;
MPRINT(EM_DIAGRAM):   end;
1758623   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1758624   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1758625   +   end;
MPRINT(EM_DIAGRAM):   end;
1758626   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1758627   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1758628   +   end;
MPRINT(EM_DIAGRAM):   end;
1758629   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758630   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1758631   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1758632   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1758633   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1758634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758636   +   end;
MPRINT(EM_DIAGRAM):   end;
1758637   +end;
MPRINT(EM_DIAGRAM):   end;
1758638   +
1758639   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1758640   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1758641   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
Marital_StatusTogether ;
1758642   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1758643   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1758644   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1758645   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1758646   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1758647   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1758648   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1758649   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1758650   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1758651   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1758652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1758653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758654   +end;
MPRINT(EM_DIAGRAM):   end;
1758655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1758656   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1758657   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1758658   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1758659   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1758660   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1758661   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1758662   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1758663   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1758664   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1758665   +         end;
MPRINT(EM_DIAGRAM):   end;
1758666   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1758667   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1758668   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1758669   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1758670   +            end;
MPRINT(EM_DIAGRAM):   end;
1758671   +         end;
MPRINT(EM_DIAGRAM):   end;
1758672   +      end;
MPRINT(EM_DIAGRAM):   end;
1758673   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1758674   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1758675   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1758676   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1758677   +         end;
MPRINT(EM_DIAGRAM):   end;
1758678   +      end;
MPRINT(EM_DIAGRAM):   end;
1758679   +   end;
MPRINT(EM_DIAGRAM):   end;
1758680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1758681   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1758682   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1758683   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1758684   +      end;
MPRINT(EM_DIAGRAM):   end;
1758685   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1758686   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1758687   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1758688   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1758689   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1758690   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1758691   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1758692   +         end;
MPRINT(EM_DIAGRAM):   end;
1758693   +      end;
MPRINT(EM_DIAGRAM):   end;
1758694   +   end;
MPRINT(EM_DIAGRAM):   end;
1758695   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1758696   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1758697   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1758698   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1758699   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1758700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1758701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758702   +   end;
MPRINT(EM_DIAGRAM):   end;
1758703   +end;
MPRINT(EM_DIAGRAM):   end;
1758704   +
1758705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758706   +*** Checking missing input Interval
1758707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1758708   +
1758709   +IF NMISS(
1758710   +   AcceptedCmpTotal ,
1758711   +   Age ,
1758712   +   Frq ,
1758713   +   Income ,
1758714   +   Kidhome ,
1758715   +   Mnt ,
1758716   +   MntFishProducts ,
1758717   +   MntFruits ,
1758718   +   MntGoldProds ,
1758719   +   MntMeatProducts ,
1758720   +   MntSweetProducts ,
1758721   +   MntWines ,
1758722   +   MonthsAsCustomer ,
1758723   +   NumCatalogPurchases ,
1758724   +   NumDealsPurchases ,
1758725   +   NumDistPurchases ,
1758726   +   NumStorePurchases ,
1758727   +   NumWebPurchases ,
1758728   +   NumWebVisitsMonth ,
1758729   +   RFMstat ,
1758730   +   RMntFrq ,
1758731   +   Recency ,
1758732   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt ,
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines ,
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases ,
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency ,
Teenhome ) THEN DO;
1758733   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1758734   +
1758735   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1758736   +END;
MPRINT(EM_DIAGRAM):   END;
1758737   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758738   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1758739   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758740   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1758741   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1758742   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1758743   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1758744   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1758745   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1758746   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1758747   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1758748   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1758749   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1758750   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1758751   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1758752   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1758753   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1758754   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1758755   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1758756   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1758757   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1758758   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1758759   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1758760   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1758761   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1758762   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1758763   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1758764   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1758765   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1758766   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1758767   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1758768   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1758769   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1758770   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1758771   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1758772   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1758773   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1758774   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1758775   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1758776   +END;
MPRINT(EM_DIAGRAM):   END;
1758777   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1758778   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1758779   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1758780   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1758781   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1758782   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1758783   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1758784   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1758785   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1758786   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1758787   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1758788   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1758789   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1758790   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1758791   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1758792   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1758793   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 *
MntFishProducts ;
1758794   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1758795   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1758796   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1758797   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1758798   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1758799   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1758800   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1758801   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1758802   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1758803   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1758804   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1758805   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1758806   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1758807   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1758808   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1758809   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1758810   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 *
MonthsAsCustomer ;
1758811   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1758812   +   ELSE S_NumCatalogPurchases
1758813   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1758814   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1758815   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1758816   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1758817   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 *
NumDealsPurchases ;
1758818   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1758819   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1758820   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1758821   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1758822   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1758823   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 *
NumStorePurchases ;
1758824   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1758825   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1758826   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1758827   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1758828   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1758829   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 *
NumWebVisitsMonth ;
1758830   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1758831   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1758832   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1758833   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1758834   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1758835   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1758836   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1758837   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1758838   +END;
MPRINT(EM_DIAGRAM):   END;
1758839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758840   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1758841   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758843   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1758844   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758846   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1758847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758848   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1758849   +   H11  =     0.29832012449804 * S_AcceptedCmpTotal  +     0.15692046705022 *
1758850   +        S_Age  +      0.2349092670043 * S_Frq  +     1.19016389982628 *
1758851   +        S_Income  +    -1.07615700855274 * S_Kidhome
1758852   +          +    -0.33525941199741 * S_Mnt  +    -0.11896237449995 *
1758853   +        S_MntFishProducts  +    -0.05881189485031 * S_MntFruits
1758854   +          +    -0.04848284440297 * S_MntGoldProds  +     0.36672196891436 *
1758855   +        S_MntMeatProducts  +    -0.21996224739852 * S_MntSweetProducts
1758856   +          +    -0.60947028245288 * S_MntWines  +    -0.00068050663419 *
1758857   +        S_MonthsAsCustomer  +     0.54450402479339 * S_NumCatalogPurchases
1758858   +          +      0.3429043319369 * S_NumDealsPurchases
1758859   +          +     0.71313309767469 * S_NumDistPurchases
1758860   +          +     0.06017757740083 * S_NumStorePurchases
1758861   +          +    -0.19817724925068 * S_NumWebPurchases
1758862   +          +     1.34164122205952 * S_NumWebVisitsMonth
1758863   +          +    -0.01000866410417 * S_RFMstat  +      1.1678492086198 *
1758864   +        S_RMntFrq  +     -1.5774263784376 * S_Recency
1758865   +          +    -0.86503713663798 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29832012449804 * S_AcceptedCmpTotal + 0.15692046705022 * S_Age +
0.2349092670043 * S_Frq + 1.19016389982628 * S_Income + -1.07615700855274 * S_Kidhome +
-0.33525941199741 * S_Mnt + -0.11896237449995 * S_MntFishProducts + -0.05881189485031 *
S_MntFruits + -0.04848284440297 * S_MntGoldProds + 0.36672196891436 * S_MntMeatProducts +
-0.21996224739852 * S_MntSweetProducts + -0.60947028245288 * S_MntWines + -0.00068050663419 *
S_MonthsAsCustomer + 0.54450402479339 * S_NumCatalogPurchases + 0.3429043319369 *
S_NumDealsPurchases + 0.71313309767469 * S_NumDistPurchases + 0.06017757740083 *
S_NumStorePurchases + -0.19817724925068 * S_NumWebPurchases + 1.34164122205952 *
S_NumWebVisitsMonth + -0.01000866410417 * S_RFMstat + 1.1678492086198 * S_RMntFrq +
-1.5774263784376 * S_Recency + -0.86503713663798 * S_Teenhome ;
1758866   +   H12  =     0.31490280577029 * S_AcceptedCmpTotal  +    -0.09111153110919 *
1758867   +        S_Age  +    -0.16055597693761 * S_Frq  +     0.10319479451271 *
1758868   +        S_Income  +     -0.0027232441092 * S_Kidhome
1758869   +          +    -0.62384470029952 * S_Mnt  +    -0.04454372411008 *
1758870   +        S_MntFishProducts  +    -0.24996025343988 * S_MntFruits
1758871   +          +    -0.01365003759591 * S_MntGoldProds  +     0.62835016670964 *
1758872   +        S_MntMeatProducts  +     -0.1052005092038 * S_MntSweetProducts
1758873   +          +    -1.14216465806662 * S_MntWines  +    -0.05060158666038 *
1758874   +        S_MonthsAsCustomer  +     0.67098319001245 * S_NumCatalogPurchases
1758875   +          +      0.4576973746858 * S_NumDealsPurchases
1758876   +          +     0.15590877272659 * S_NumDistPurchases
1758877   +          +    -0.33414539713736 * S_NumStorePurchases
1758878   +          +    -0.39370244666257 * S_NumWebPurchases
1758879   +          +     0.52596714886704 * S_NumWebVisitsMonth
1758880   +          +     0.20790882491682 * S_RFMstat  +     0.70718304112796 *
1758881   +        S_RMntFrq  +    -0.55973256565759 * S_Recency
1758882   +          +    -0.02572672808252 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31490280577029 * S_AcceptedCmpTotal + -0.09111153110919 * S_Age
+ -0.16055597693761 * S_Frq + 0.10319479451271 * S_Income + -0.0027232441092 * S_Kidhome +
-0.62384470029952 * S_Mnt + -0.04454372411008 * S_MntFishProducts + -0.24996025343988 *
S_MntFruits + -0.01365003759591 * S_MntGoldProds + 0.62835016670964 * S_MntMeatProducts +
-0.1052005092038 * S_MntSweetProducts + -1.14216465806662 * S_MntWines + -0.05060158666038 *
S_MonthsAsCustomer + 0.67098319001245 * S_NumCatalogPurchases + 0.4576973746858 *
S_NumDealsPurchases + 0.15590877272659 * S_NumDistPurchases + -0.33414539713736 *
S_NumStorePurchases + -0.39370244666257 * S_NumWebPurchases + 0.52596714886704 *
S_NumWebVisitsMonth + 0.20790882491682 * S_RFMstat + 0.70718304112796 * S_RMntFrq +
-0.55973256565759 * S_Recency + -0.02572672808252 * S_Teenhome ;
1758883   +   H11  = H11  +    -0.25877430314813 * AcceptedCmp10
1758884   +          +     -0.6949843667221 * AcceptedCmp20  +    -0.57934320804112 *
1758885   +        AcceptedCmp30  +    -0.51703039002497 * AcceptedCmp40
1758886   +          +    -0.28854562528092 * AcceptedCmp50  +    -0.24441198875632 *
1758887   +        Complain0  +     0.22905299573529 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25877430314813 * AcceptedCmp10 + -0.6949843667221 *
AcceptedCmp20 + -0.57934320804112 * AcceptedCmp30 + -0.51703039002497 * AcceptedCmp40 +
-0.28854562528092 * AcceptedCmp50 + -0.24441198875632 * Complain0 + 0.22905299573529 *
HigherEducationBinary0 ;
1758888   +   H12  = H12  +    -0.36418677755527 * AcceptedCmp10
1758889   +          +    -0.33815290545566 * AcceptedCmp20  +    -0.02820722241017 *
1758890   +        AcceptedCmp30  +      0.0020982855306 * AcceptedCmp40
1758891   +          +    -0.12224106432236 * AcceptedCmp50  +    -0.06102493109146 *
1758892   +        Complain0  +    -0.17583153481867 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.36418677755527 * AcceptedCmp10 + -0.33815290545566 *
AcceptedCmp20 + -0.02820722241017 * AcceptedCmp30 + 0.0020982855306 * AcceptedCmp40 +
-0.12224106432236 * AcceptedCmp50 + -0.06102493109146 * Complain0 + -0.17583153481867 *
HigherEducationBinary0 ;
1758893   +   H11  = H11  +     0.04231863714836 * Education2n_Cycle
1758894   +          +     0.10274571656153 * EducationBasic  +    -0.09649867506574 *
1758895   +        EducationGraduation  +      -0.333138438339 * EducationMaster
1758896   +          +      0.4663802937397 * Marital_StatusDivorced
1758897   +          +    -1.27401898796099 * Marital_StatusMarried
1758898   +          +      1.3125969368079 * Marital_StatusSingle
1758899   +          +     -0.9460069950427 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04231863714836 * Education2n_Cycle + 0.10274571656153 *
EducationBasic + -0.09649867506574 * EducationGraduation + -0.333138438339 * EducationMaster +
0.4663802937397 * Marital_StatusDivorced + -1.27401898796099 * Marital_StatusMarried +
1.3125969368079 * Marital_StatusSingle + -0.9460069950427 * Marital_StatusTogether ;
1758900   +   H12  = H12  +     0.04207507898653 * Education2n_Cycle
1758901   +          +    -0.00061313728148 * EducationBasic  +     0.02179374448207 *
1758902   +        EducationGraduation  +     0.00771527138053 * EducationMaster
1758903   +          +     0.07419179522004 * Marital_StatusDivorced
1758904   +          +     0.00234615813337 * Marital_StatusMarried
1758905   +          +    -0.00725460458412 * Marital_StatusSingle
1758906   +          +    -0.02397482300018 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04207507898653 * Education2n_Cycle + -0.00061313728148 *
EducationBasic + 0.02179374448207 * EducationGraduation + 0.00771527138053 * EducationMaster +
0.07419179522004 * Marital_StatusDivorced + 0.00234615813337 * Marital_StatusMarried +
-0.00725460458412 * Marital_StatusSingle + -0.02397482300018 * Marital_StatusTogether ;
1758907   +   H11  =    -2.08419455884264 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08419455884264 + H11 ;
1758908   +   H12  =    -0.67124132448844 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67124132448844 + H12 ;
1758909   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1758910   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1758911   +END;
MPRINT(EM_DIAGRAM):   END;
1758912   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1758913   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1758914   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1758915   +END;
MPRINT(EM_DIAGRAM):   END;
1758916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758917   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1758918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758919   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1758920   +   P_DepVar1  =     5.63543253335428 * H11  +     6.13213445041394 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63543253335428 * H11 + 6.13213445041394 * H12 ;
1758921   +   P_DepVar1  =     3.20970411510782 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20970411510782 + P_DepVar1 ;
1758922   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1758923   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1758924   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1758925   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1758926   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1758927   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1758928   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1758929   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1758930   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1758931   +END;
MPRINT(EM_DIAGRAM):   END;
1758932   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1758933   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1758934   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1758935   +END;
MPRINT(EM_DIAGRAM):   END;
1758936   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1758937   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1758938   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1758939   +END;
MPRINT(EM_DIAGRAM):   END;
1758940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758941   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1758942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1758943   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1758944   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1758945   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1758946   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1758947   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1758948   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1758949   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1758950   +END;
MPRINT(EM_DIAGRAM):   END;
1758951   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1758952   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1758953   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1758954   +drop
1758955   +H11
1758956   +H12
1758957   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1758958   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1758959    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1758960    quit;
1758961    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1758962    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1758963    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1758964    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1758965    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1758966    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758967    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1758968    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758969    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758970    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1758971    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758972    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758973    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758974    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1758975    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1758976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1758977    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1758978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1758979    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1758980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758981    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1758982    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1758983    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1758984    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1758985    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758986    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1758987    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1758987  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.
 
1758988    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1758989    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1758990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1758991    filename _pref
1758991  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1758992    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1758993    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1758994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1758995   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1758996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1758997   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1758998   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1758999   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1759000    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1759001    quit;
1759002    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1759003    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1759004    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1759005    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1759006    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1759007    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759008    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1759009    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759011    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1759012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759013    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759014    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1759015    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1759016    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1759017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759018    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1759019    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759020    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1759021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759023    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1759024    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1759025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759026    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759027    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1759028    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1759028  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1759029    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759030    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1759031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759032    filename _pref
1759032  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1759033    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1759034    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1759035   +
1759036   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1759037   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1759037  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1759038   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1759039   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1759040   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1759041   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1759042   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1759043    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1759044    quit;
1759045    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1759046    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1759047    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1759048    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1759049    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1759050    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759051    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1759052    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759053    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759054    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1759055    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759057    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1759058    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1759059    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1759060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759061    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1759062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759063    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1759064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759065    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759066    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1759067    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1759068    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759069    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759070    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1759071    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1759071  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1759072    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759073    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1759074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759075    filename _pref
1759075  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1759076    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1759077    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1759078   +
1759079   +
1759080   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1759081   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1759082   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1759083   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1759084   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1759085   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759086   +
1759087   +
1759088   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1759089   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1759090   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1759091   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1759092   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1759093   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759094   +
1759095   +
1759096   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1759097   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1759098   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1759099   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1759100   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1759101   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759102   +
1759103   +
1759104   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1759105   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1759106   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1759107   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1759108   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1759109   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759110   +
1759111   +
1759112   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1759113   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1759114   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1759115   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1759116   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1759117   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759118   +
1759119   +
1759120   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1759121   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1759122   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1759123   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1759124   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1759125   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759126   +
1759127   +
1759128   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1759129   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1759130   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1759131   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1759132   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1759133   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759134   +
1759135   +
1759136   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1759137   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1759138   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1759139   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1759140   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1759141   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1759142   +if
1759143   +_FILTERNORM1 not in ( '.')
1759144   + and
1759145   +_FILTERNORM2 not in ( '.')
1759146   + and
1759147   +_FILTERNORM3 not in ( '.')
1759148   + and
1759149   +_FILTERNORM4 not in ( '.')
1759150   + and
1759151   +_FILTERNORM5 not in ( '.')
1759152   + and
1759153   +_FILTERNORM6 not in ( '.')
1759154   + and
1759155   +_FILTERNORM7 not in ( ' ')
1759156   + and
1759157   +_FILTERNORM8 not in ( ' ')
1759158   +and
1759159   +( Dt_Customer ne .)
1759160   +and ( Income ne . and (Income<=107000))
1759161   +and ( Kidhome ne .)
1759162   +and ( MntFishProducts ne .)
1759163   +and ( MntFruits ne .)
1759164   +and ( MntGoldProds ne .)
1759165   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1759166   +and ( MntSweetProducts ne .)
1759167   +and ( MntWines ne .)
1759168   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1759169   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1759170   +and ( NumStorePurchases ne .)
1759171   +and ( NumWebPurchases ne .)
1759172   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1759173   +and ( Recency ne .)
1759174   +and ( Teenhome ne .)
1759175   +and ( Year_Birth ne .)
1759176   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1759177   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1759178   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1759179   +end;
MPRINT(EM_DIAGRAM):   end;
1759180   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1759181   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1759182    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1759183    quit;
1759184    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1759185    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1759186    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1759187    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1759188    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1759189    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759190    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1759191    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759192    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759193    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1759194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759195    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759196    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1759197    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1759198    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1759199    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759200    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1759201    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1759202    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1759203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759204    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759205    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1759206    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1759207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759208    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759209    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1759210    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1759210  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1759211    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759212    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1759213    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759214    %macro varDept(fcmpdata=,id=);
1759215    %global nobs&id scoreFlag&id;
1759216    %let scoreFlag&id = 0;
1759217    %if &id=1 or ^&fcmpStart %then %do;
1759218    proc sort data=&fcmpdata out=_temp&id nodupkey;
1759219    by NAME;
1759220    where id=&id and LHS in( %let j=1;
1759221    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1759222    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1759223    "&var" %let j = %eval(&j+1);
1759224    %end;
1759225    );
1759226    run;
1759227    %let dsid = %sysfunc(open(_temp&id));
1759228    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1759229    %let dsid = %sysfunc(close(&dsid));
1759230    %if &&nobs&id %then %do;
1759231    %let scoreFlag&id = 1;
1759232    %let fcmpStart = 1;
1759233    %end;
1759234    %else %let fcmpStart = 0;
1759235    %end;
1759236    %else %do;
1759237    proc sort data=&fcmpdata out=_tempid;
1759238    where id=&id;
1759239    by LHS;
1759240    run;
1759241    %let dsid = %sysfunc(open(_tempid));
1759242    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1759243    %let dsid = %sysfunc(close(&dsid));
1759244    %if ^&&nobs&id %then %do;
1759245    proc datasets lib=work nolist;
1759246    delete _tempid;
1759247    run;
1759248    quit;
1759249    %end;
1759250    %else %do;
1759251    data _tempAll;
1759252    set %let j=%eval(&id-1);
1759253    %do x=1 %to &j;
1759254    %if &&nobs&x %then %do;
1759255    _temp&x %end;
1759256    %end;
1759257    ;
1759258    run;
1759259    proc sql;
1759260    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1759260  ! work._tempid p2 where p.name=p2.lhs;
1759261    quit;
1759262    data _temp&id;
1759263    set _temp&id;
1759264    where LHS ne '' and NAME ne '' and Node ne '';
1759265    run;
1759266    proc datasets lib=work nolist;
1759267    delete _tempAll;
1759268    run;
1759269    %let dsid = %sysfunc(open(_temp&id));
1759270    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1759271    %let dsid = %sysfunc(close(&dsid));
1759272    %if ^&&nobs&id %then %do;
1759273    proc datasets lib=work nolist;
1759274    delete _temp&id;
1759275    run;
1759276    quit;
1759277    %end;
1759278    %else %do;
1759279    %let scoreFlag&id = 1;
1759280    data _temp&id;
1759281    set _temp&id;
1759282    where LHS ne NAME and node ne '';
1759283    run;
1759284    %let dsid = %sysfunc(open(_temp&id));
1759285    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1759286    %let dsid = %sysfunc(close(&dsid));
1759287    %if ^&&nobs&id %then %do;
1759288    proc datasets lib=work nolist;
1759289    delete _temp&id;
1759290    run;
1759291    quit;
1759292    %end;
1759293    %else %do;
1759294    proc sort data=_temp&id nodupkey;
1759295    by LHS NAME;
1759296    run;
1759297    %end;
1759298    %end;
1759299    %end;
1759300    %end;
1759301    %mend varDept;
1759302    %macro optCode(outdata=fcmpdata);
1759303    %global fcmpStart;
1759304    %let fcmpStart = 0;
1759305    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1759306    %let NumNodes=9;
1759307    %do k=1 %to &NumNodes;
1759308    %vardept(fcmpdata=&outdata, id=&k);
1759309    %end;
1759310    %mend optCode;
1759311    %optcode(outData=EMWS8.Ensmbl26_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 134 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1759312    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1759313    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1759314    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1759315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1759316    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1759317    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1759318    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1759319    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759320    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1759321    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1759321  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.
 
1759322    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759323    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1759324    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1759325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759326    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1759327    * Ensmbl26: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing metadata for TRAIN data;
1759328    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL26_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl26_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl26_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl26_TRAIN out=WORK.M2PT306H noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2PT306H;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PT306H(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2PT306H;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2PT306H;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0EG763T NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EG763T;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EG763T;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3UY2DCF(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EG763T;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EG763T;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EG763T;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0EG763T;
MPRINT(EMADVISECOLUMNS):   set WORK.M0EG763T;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl26";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl26";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1759648    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1759649    set EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMINFO;
1759650    where DATA='Ensmbl26' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl26' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1759651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_EMINFO.
      WHERE (DATA='Ensmbl26') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759652    data EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl26_EMINFO;
1759653    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1759654    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1759655    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1759659    run;
1759660    data EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMINFO;
1759661    set EMWS8.Ensmbl26_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMINFO WORK.MODELTEMP_INFO;
1759662    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL26_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1759663    proc sort data = EMWS8.Ensmbl26_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl26_EMINFO NOTHREADS;
1759664    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1759665    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL26_EMINFO.
NOTE: The data set EMWS8.ENSMBL26_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759666    proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1759667    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1759668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759669    proc sort data = EMWS8.Ensmbl26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1759670    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1759671    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL26_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759672    data EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMINFO;
1759673    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1759674    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1759675    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL26_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759676    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1759677    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1759678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1759679    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL26_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL26_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2EQX12S
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2EQX12S new;
MPRINT(EM_DIAGRAM):   run;
1759703    data EMWS8.Ensmbl26_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl26_EMOUTFIT;
1759704    set EMWS8.Ensmbl26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMOUTFIT;
1759705    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1759706    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1759706  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1759707    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1759708    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL26_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL26_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759709    proc sort data=EMWS8.Ensmbl26_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl26_EMREPORTFIT nothreads;
1759710    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1759711    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL26_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL26_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759712    %let _EMwarndup = 0;
1759713    %let _EMtargetdup =;
1759714    %let _EMASEtargetdup =;
1759715    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1759716    set EMWS8.Ensmbl26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMOUTFIT;
1759717    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1759718    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1759719    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1759720    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1759721    end;
MPRINT(EM_DIAGRAM):   end;
1759722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL26_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1759723    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural3_CMeta_TRAIN out=WORK.SUBSETINMETA;
1759724    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759725    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.NEURAL3_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 44 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759726    proc sort data=EMWS8.Ensmbl26_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl26_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1759727    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.ENSMBL26_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759729    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1759730    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1759731    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1759732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 34 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 44 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759733    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1759734    set EMWS8.Ensmbl26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_CMeta_TRAIN;
1759735    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1759735  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1759736    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL26_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1759737    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1759738    set EMWS8.Ensmbl26_TRAIN(keep=
1759739    F_DepVar
1759740    I_DepVar
1759741    P_DepVar0
1759742    P_DepVar1
1759743    R_DepVar0
1759744    R_DepVar1
1759745    U_DepVar
1759746    _WARN_
1759747    DepVar
1759748    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1759749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.META_TRAIN.
NOTE: View EMWS8.ENSMBL26_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL9_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL26_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl26_3FX3GYB nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl26_3FX3GYB;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl26_3FX3GYB(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl26_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl26_3FX3GYB;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl26_3FX3GYB;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001920216 OVLMAX 0.9999996863 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1764015    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1764016    set EMWS8.Ensmbl26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_CMeta_TRAIN;
1764017    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1764017  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1764018    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL26_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1764019    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1764020    set EMWS8.Ensmbl26_VALIDATE(keep=
1764021    F_DepVar
1764022    I_DepVar
1764023    P_DepVar0
1764024    P_DepVar1
1764025    R_DepVar0
1764026    R_DepVar1
1764027    U_DepVar
1764028    _WARN_
1764029    DepVar
1764030    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1764031    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.META_VALIDATE.
NOTE: View EMWS8.ENSMBL26_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL9_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL26_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl26_3H3ZTXO nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl26_3H3ZTXO;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl26_3H3ZTXO(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl26_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMCLASSIFICATION WORK.Ensmbl26_3H3ZTXO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl26_3H3ZTXO;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural3_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0001920106 OVLMAX 0.9999996827 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1768306    %let _cn = %sysfunc(getoption(CENTER));
1768307    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1768308    proc print data=EMWS8.Ensmbl26_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl26_EMREPORTFIT noobs label;
1768309    var STAT LABEL TRAIN
1768310    VALIDATE
1768311    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1768312    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1768313    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1768314    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1768315    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL26_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1134.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1768316    title10;
MPRINT(EM_DIAGRAM):   title10;
1768317    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1768318    proc sort data=EMWS8.Ensmbl26_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl26_EMCLASSIFICATION nothreads;
1768319    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1768320    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL26_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL26_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1768321    %let _cn = %sysfunc(getoption(CENTER));
1768322    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1768323    proc print data=EMWS8.Ensmbl26_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl26_EMCLASSIFICATION noobs label;
1768324    var from into pct_row pct_col count percent
1768325    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1768326    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1768327    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1768328    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1768329    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1768330    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1768331    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1768332    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1768333    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1768334    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1768335    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1768336    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL26_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1135.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1768337    title9;
MPRINT(EM_DIAGRAM):   title9;
1768338    title10;
MPRINT(EM_DIAGRAM):   title10;
1768339    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1768340    %let _cn = %sysfunc(getoption(CENTER));
1768341    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1768342    data EMWS8.Ensmbl26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMEVENTREPORT;
1768343    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1768343  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1768344    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1768344  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1768344  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1768344  ! FALSEEVENT
1768345    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1768345  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1768345  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1768346       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1768347    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1768348    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1768349    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1768350    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1768351    set EMWS8.Ensmbl26_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMEVENTREPORT;
1768352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL26_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL26_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1768353    proc print data=EMWS8.Ensmbl26_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl26_EMEVENTREPORT noobs label;
1768354    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1768355    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1768356    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1768357    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL26_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1136.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1768358    title10;
MPRINT(EM_DIAGRAM):   title10;
1768359    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1768360    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1768361    modify Ensmbl26_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl26_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1768362    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1768363    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1768363  ! ;
MPRINT(EM_DIAGRAM):   run;
1768364    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL26_EMRANK.DATA.
1768365    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
1768366    %let _cn = %sysfunc(getoption(CENTER));
1768367    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1768368    proc print data=EMWS8.Ensmbl26_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl26_EMRANK label noobs;
1768369    var
1768370    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1768371    by
1768372    notsorted DATAROLE
1768373    notsorted TARGET
1768374    notsorted TARGETLABEL
1768375    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1768376    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1768377    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1768378    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL26_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1137.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1768379    title10;
MPRINT(EM_DIAGRAM):   title10;
1768380    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1768381    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1768382    modify Ensmbl26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl26_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1768383    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1768383  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1768384    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1768384  ! ;
MPRINT(EM_DIAGRAM):   run;
1768385    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL26_EMSCOREDIST.DATA.
1768386    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl26_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
