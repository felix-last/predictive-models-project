MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.56 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.56 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2D49XC0 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2D49XC0 new;
MPRINT(EM_DIAGRAM):   run;
1275552    filename emflow
1275552  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring NEURAL2_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275553    *------------------------------------------------------------*;
1275554    * Ensmbl26: Scoring NEURAL2_TRAIN data;
1275555    *------------------------------------------------------------*;
1275556    data EMWS8.Ensmbl26_TRAIN
1275557    / view=EMWS8.Ensmbl26_TRAIN
1275558    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_TRAIN / view=EMWS8.Ensmbl26_TRAIN ;
1275559    set EMWS8.Neural2_TRAIN
1275560    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_TRAIN ;
1275561    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas.
1275562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275563   +* Ensmbl26: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Combine model for DepVar;
1275564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275565   +* Ensmbl26: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 1 of 3;
1275566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275568   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1275569   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1275570   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1275571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275572   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275573   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1275574   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1275575   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1275576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275578   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1275579   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1275580   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1275581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275582   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275583   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1275584   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1275585   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1275586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275587   +
1275588   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1275589   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1275589  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1275590   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1275591   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1275592   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1275593   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1275594   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1275595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275596   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1275597   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1275598   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1275599   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275601   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1275602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275603   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1275604   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1275605   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1275606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275607   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1275608   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1275609   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1275610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275612   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1275613   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1275614   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1275615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275617   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1275618   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1275619   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1275620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275621   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1275622   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1275623   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1275624   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1275625   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1275626   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1275627   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1275628   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1275629   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1275630   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1275631   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1275632   +LENGTH _WARN_ $4
1275633   +      F_DepVar  $ 12
1275634   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1275635   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1275636   +
1275637   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1275638   +
1275639   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1275640   +
1275641   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1275642   +
1275643   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1275644   +
1275645   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1275646   +
1275647   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1275648   +
1275649   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1275650   +
1275651   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1275652   +
1275653   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1275654   +
1275655   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1275656   +
1275657   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1275658   +
1275659   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1275660   +
1275661   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1275662   +
1275663   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1275664   +
1275665   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1275666   +
1275667   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1275668   +
1275669   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1275670   +
1275671   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1275672   +
1275673   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1275674   +
1275675   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1275676   +
1275677   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1275678   +
1275679   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1275680   +
1275681   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1275682   +
1275683   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1275684   +
1275685   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1275686   +
1275687   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1275688   +
1275689   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1275690   +
1275691   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1275692   +
1275693   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1275694   +
1275695   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1275696   +
1275697   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1275698   +
1275699   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1275700   +
1275701   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1275702   +
1275703   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1275704   +
1275705   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1275706   +
1275707   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1275708   +
1275709   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1275710   +
1275711   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1275712   +
1275713   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1275714   +
1275715   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1275716   +
1275717   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1275718   +
1275719   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1275720   +
1275721   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1275722   +
1275723   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1275724   +
1275725   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1275726   +
1275727   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1275728   +
1275729   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1275730   +
1275731   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1275732   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1275733   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1275734   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1275735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275737   +end;
MPRINT(EM_DIAGRAM):   end;
1275738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275739   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275740   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1275741   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275742   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275743   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1275744   +   end;
MPRINT(EM_DIAGRAM):   end;
1275745   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275746   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1275747   +   end;
MPRINT(EM_DIAGRAM):   end;
1275748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275749   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1275750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275752   +   end;
MPRINT(EM_DIAGRAM):   end;
1275753   +end;
MPRINT(EM_DIAGRAM):   end;
1275754   +
1275755   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1275756   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1275757   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1275758   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1275759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275761   +end;
MPRINT(EM_DIAGRAM):   end;
1275762   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275764   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1275765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275766   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275767   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1275768   +   end;
MPRINT(EM_DIAGRAM):   end;
1275769   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275770   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1275771   +   end;
MPRINT(EM_DIAGRAM):   end;
1275772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275773   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1275774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275776   +   end;
MPRINT(EM_DIAGRAM):   end;
1275777   +end;
MPRINT(EM_DIAGRAM):   end;
1275778   +
1275779   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1275780   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1275781   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1275782   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1275783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275785   +end;
MPRINT(EM_DIAGRAM):   end;
1275786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275788   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1275789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275790   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275791   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1275792   +   end;
MPRINT(EM_DIAGRAM):   end;
1275793   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275794   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1275795   +   end;
MPRINT(EM_DIAGRAM):   end;
1275796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275797   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1275798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275800   +   end;
MPRINT(EM_DIAGRAM):   end;
1275801   +end;
MPRINT(EM_DIAGRAM):   end;
1275802   +
1275803   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1275804   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1275805   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1275806   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1275807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275809   +end;
MPRINT(EM_DIAGRAM):   end;
1275810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275812   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1275813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275814   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275815   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1275816   +   end;
MPRINT(EM_DIAGRAM):   end;
1275817   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275818   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1275819   +   end;
MPRINT(EM_DIAGRAM):   end;
1275820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275821   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1275822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275824   +   end;
MPRINT(EM_DIAGRAM):   end;
1275825   +end;
MPRINT(EM_DIAGRAM):   end;
1275826   +
1275827   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1275828   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1275829   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1275830   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1275831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275833   +end;
MPRINT(EM_DIAGRAM):   end;
1275834   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275836   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1275837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275838   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275839   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1275840   +   end;
MPRINT(EM_DIAGRAM):   end;
1275841   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275842   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1275843   +   end;
MPRINT(EM_DIAGRAM):   end;
1275844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275845   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1275846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275848   +   end;
MPRINT(EM_DIAGRAM):   end;
1275849   +end;
MPRINT(EM_DIAGRAM):   end;
1275850   +
1275851   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1275852   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1275853   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1275854   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1275855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275857   +end;
MPRINT(EM_DIAGRAM):   end;
1275858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275860   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1275861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275863   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1275864   +   end;
MPRINT(EM_DIAGRAM):   end;
1275865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275866   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1275867   +   end;
MPRINT(EM_DIAGRAM):   end;
1275868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275869   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1275870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275872   +   end;
MPRINT(EM_DIAGRAM):   end;
1275873   +end;
MPRINT(EM_DIAGRAM):   end;
1275874   +
1275875   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1275876   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1275877   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1275878   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1275879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275881   +end;
MPRINT(EM_DIAGRAM):   end;
1275882   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275884   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1275885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275886   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1275887   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1275888   +   end;
MPRINT(EM_DIAGRAM):   end;
1275889   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1275890   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1275891   +   end;
MPRINT(EM_DIAGRAM):   end;
1275892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275893   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1275894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275896   +   end;
MPRINT(EM_DIAGRAM):   end;
1275897   +end;
MPRINT(EM_DIAGRAM):   end;
1275898   +
1275899   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1275900   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1275901   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1275902   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1275903   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1275904   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1275905   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1275906   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1275907   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1275908   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1275909   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1275910   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1275911   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275913   +end;
MPRINT(EM_DIAGRAM):   end;
1275914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275915   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1275916   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1275917   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275918   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1275919   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1275920   +   end;
MPRINT(EM_DIAGRAM):   end;
1275921   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1275922   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1275923   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1275924   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1275925   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1275926   +   end;
MPRINT(EM_DIAGRAM):   end;
1275927   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1275928   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1275929   +   end;
MPRINT(EM_DIAGRAM):   end;
1275930   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1275931   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1275932   +   end;
MPRINT(EM_DIAGRAM):   end;
1275933   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1275934   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1275935   +   end;
MPRINT(EM_DIAGRAM):   end;
1275936   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275937   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1275938   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1275939   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1275940   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1275941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275943   +   end;
MPRINT(EM_DIAGRAM):   end;
1275944   +end;
MPRINT(EM_DIAGRAM):   end;
1275945   +
1275946   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1275947   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1275948   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1275949   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1275950   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1275951   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1275952   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1275953   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1275954   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1275955   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1275956   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1275957   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1275958   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1275959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275961   +end;
MPRINT(EM_DIAGRAM):   end;
1275962   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275963   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1275964   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1275965   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275966   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1275967   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1275968   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1275969   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1275970   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1275971   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275972   +         end;
MPRINT(EM_DIAGRAM):   end;
1275973   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1275974   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1275975   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1275976   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275977   +            end;
MPRINT(EM_DIAGRAM):   end;
1275978   +         end;
MPRINT(EM_DIAGRAM):   end;
1275979   +      end;
MPRINT(EM_DIAGRAM):   end;
1275980   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1275981   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1275982   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1275983   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275984   +         end;
MPRINT(EM_DIAGRAM):   end;
1275985   +      end;
MPRINT(EM_DIAGRAM):   end;
1275986   +   end;
MPRINT(EM_DIAGRAM):   end;
1275987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275988   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1275989   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1275990   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275991   +      end;
MPRINT(EM_DIAGRAM):   end;
1275992   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1275993   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1275994   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1275995   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1275996   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1275997   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1275998   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275999   +         end;
MPRINT(EM_DIAGRAM):   end;
1276000   +      end;
MPRINT(EM_DIAGRAM):   end;
1276001   +   end;
MPRINT(EM_DIAGRAM):   end;
1276002   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1276003   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1276004   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1276005   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1276006   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1276007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276009   +   end;
MPRINT(EM_DIAGRAM):   end;
1276010   +end;
MPRINT(EM_DIAGRAM):   end;
1276011   +
1276012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276013   +*** Checking missing input Interval
1276014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1276015   +
1276016   +IF NMISS(
1276017   +   AcceptedCmpTotal ,
1276018   +   Age ,
1276019   +   Frq ,
1276020   +   Income ,
1276021   +   Kidhome ,
1276022   +   Mnt ,
1276023   +   MntFishProducts ,
1276024   +   MntFruits ,
1276025   +   MntGoldProds ,
1276026   +   MntMeatProducts ,
1276027   +   MntSweetProducts ,
1276028   +   MntWines ,
1276029   +   MonthsAsCustomer ,
1276030   +   NumCatalogPurchases ,
1276031   +   NumDealsPurchases ,
1276032   +   NumDistPurchases ,
1276033   +   NumStorePurchases ,
1276034   +   NumWebPurchases ,
1276035   +   NumWebVisitsMonth ,
1276036   +   RFMstat ,
1276037   +   RMntFrq ,
1276038   +   Recency ,
1276039   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1276040   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1276041   +
1276042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276043   +END;
MPRINT(EM_DIAGRAM):   END;
1276044   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276045   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1276046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276047   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276048   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276049   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276050   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276051   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276052   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276053   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276054   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276055   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276056   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276057   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276058   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276059   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1276060   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276061   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276062   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276063   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276064   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276065   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1276066   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1276067   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1276068   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276069   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276070   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276071   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276072   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276073   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276074   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276075   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276076   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276077   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276078   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276079   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276080   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276081   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276082   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276083   +END;
MPRINT(EM_DIAGRAM):   END;
1276084   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276085   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1276086   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276087   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276088   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1276089   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276090   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1276091   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276092   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1276093   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276094   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1276095   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276096   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1276097   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276098   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1276099   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276100   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276101   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1276102   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1276103   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276104   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1276105   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276106   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1276107   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1276108   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276109   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276110   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1276111   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276112   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276113   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1276114   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276115   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1276116   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1276117   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1276118   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1276119   +   ELSE S_NumCatalogPurchases
1276120   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1276121   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276122   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1276123   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276124   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276125   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1276126   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276127   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276128   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1276129   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276130   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276131   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1276132   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276133   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276134   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1276135   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276136   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276137   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1276138   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276139   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1276140   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276141   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1276142   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276143   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1276144   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276145   +END;
MPRINT(EM_DIAGRAM):   END;
1276146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276147   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1276148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276150   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1276151   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276153   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1276154   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276155   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276156   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1276157   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1276158   +        S_Income  +    -1.07652572934003 * S_Kidhome
1276159   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1276160   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1276161   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1276162   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1276163   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1276164   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1276165   +          +     0.34217069579861 * S_NumDealsPurchases
1276166   +          +      0.7126550962469 * S_NumDistPurchases
1276167   +          +     0.05810128676346 * S_NumStorePurchases
1276168   +          +     -0.1974592461824 * S_NumWebPurchases
1276169   +          +     1.33855646568468 * S_NumWebVisitsMonth
1276170   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1276171   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1276172   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1276173   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1276174   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1276175   +        S_Income  +    -0.00280376715329 * S_Kidhome
1276176   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1276177   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1276178   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1276179   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1276180   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1276181   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1276182   +          +     0.45694604326279 * S_NumDealsPurchases
1276183   +          +      0.1555582457419 * S_NumDistPurchases
1276184   +          +     -0.3340268446813 * S_NumStorePurchases
1276185   +          +    -0.39316217683753 * S_NumWebPurchases
1276186   +          +     0.52431656748667 * S_NumWebVisitsMonth
1276187   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1276188   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1276189   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1276190   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1276191   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1276192   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1276193   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1276194   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1276195   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1276196   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1276197   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1276198   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1276199   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1276200   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1276201   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1276202   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1276203   +          +     0.46676686502466 * Marital_StatusDivorced
1276204   +          +    -1.27760562209616 * Marital_StatusMarried
1276205   +          +     1.31419230639567 * Marital_StatusSingle
1276206   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1276207   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1276208   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1276209   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1276210   +          +     0.07434297903639 * Marital_StatusDivorced
1276211   +          +     0.00294493836325 * Marital_StatusMarried
1276212   +          +    -0.00745595849422 * Marital_StatusSingle
1276213   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1276214   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1276215   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1276216   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1276217   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1276218   +END;
MPRINT(EM_DIAGRAM):   END;
1276219   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276220   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1276221   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1276222   +END;
MPRINT(EM_DIAGRAM):   END;
1276223   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276224   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1276225   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276226   +
1276227   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1276228   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1276229   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1276230   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1276231   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1276232   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276233   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1276234   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1276235   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1276236   +end;
MPRINT(EM_DIAGRAM):   end;
1276237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276238   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1276239   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1276240   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1276241   +   end;
MPRINT(EM_DIAGRAM):   end;
1276242   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1276243   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1276244   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1276245   +   end;
MPRINT(EM_DIAGRAM):   end;
1276246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276247   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1276248   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1276249   +   end;
MPRINT(EM_DIAGRAM):   end;
1276250   +end;
MPRINT(EM_DIAGRAM):   end;
1276251   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276252   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1276253   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1276254   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1276255   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1276256   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1276257   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1276258   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1276259   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1276260   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1276261   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1276262   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1276263   +END;
MPRINT(EM_DIAGRAM):   END;
1276264   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276265   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1276266   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1276267   +END;
MPRINT(EM_DIAGRAM):   END;
1276268   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1276269   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1276270   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1276271   +END;
MPRINT(EM_DIAGRAM):   END;
1276272   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1276273   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1276274   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1276275   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1276276   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1276277   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1276278   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1276279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276280   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1276281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276282   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1276283   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1276284   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1276285   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1276286   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1276287   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1276288   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1276289   +END;
MPRINT(EM_DIAGRAM):   END;
1276290   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1276291   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1276292   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1276293   +drop
1276294   +H11
1276295   +H12
1276296   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1276297   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1276298   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1276299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276300   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1276301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276302   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1276303   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1276304   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1276305   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1276306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276307   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1276308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276309   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1276310   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1276311   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1276312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276313   +* Ensmbl26: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 2 of 3;
1276314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276316   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1276317   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1276318   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1276319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276320   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1276321   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1276322   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1276323   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1276324   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1276325   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1276326   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1276327   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1276328   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1276329   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1276330   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1276331   +LENGTH _WARN_ $4
1276332   +      F_DepVar  $ 12
1276333   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1276334   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1276335   +
1276336   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1276337   +
1276338   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1276339   +
1276340   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1276341   +
1276342   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1276343   +
1276344   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1276345   +
1276346   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1276347   +
1276348   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1276349   +
1276350   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1276351   +
1276352   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1276353   +
1276354   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1276355   +
1276356   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1276357   +
1276358   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1276359   +
1276360   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1276361   +
1276362   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1276363   +
1276364   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1276365   +
1276366   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1276367   +
1276368   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1276369   +
1276370   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1276371   +
1276372   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1276373   +
1276374   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1276375   +
1276376   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1276377   +
1276378   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1276379   +
1276380   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1276381   +
1276382   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1276383   +
1276384   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1276385   +
1276386   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1276387   +
1276388   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1276389   +
1276390   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1276391   +
1276392   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1276393   +
1276394   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1276395   +
1276396   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1276397   +
1276398   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1276399   +
1276400   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1276401   +
1276402   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1276403   +
1276404   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1276405   +
1276406   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1276407   +
1276408   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1276409   +
1276410   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1276411   +
1276412   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1276413   +
1276414   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1276415   +
1276416   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1276417   +
1276418   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1276419   +
1276420   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1276421   +
1276422   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1276423   +
1276424   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1276425   +
1276426   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1276427   +
1276428   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1276429   +
1276430   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1276431   +
1276432   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1276433   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1276434   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1276435   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1276436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276438   +end;
MPRINT(EM_DIAGRAM):   end;
1276439   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276440   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276441   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1276442   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276443   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276444   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1276445   +   end;
MPRINT(EM_DIAGRAM):   end;
1276446   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276447   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1276448   +   end;
MPRINT(EM_DIAGRAM):   end;
1276449   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276450   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1276451   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276452   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276453   +   end;
MPRINT(EM_DIAGRAM):   end;
1276454   +end;
MPRINT(EM_DIAGRAM):   end;
1276455   +
1276456   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1276457   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1276458   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1276459   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1276460   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276461   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276462   +end;
MPRINT(EM_DIAGRAM):   end;
1276463   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276464   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276465   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1276466   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276467   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276468   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1276469   +   end;
MPRINT(EM_DIAGRAM):   end;
1276470   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276471   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1276472   +   end;
MPRINT(EM_DIAGRAM):   end;
1276473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276474   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1276475   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276476   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276477   +   end;
MPRINT(EM_DIAGRAM):   end;
1276478   +end;
MPRINT(EM_DIAGRAM):   end;
1276479   +
1276480   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1276481   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1276482   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1276483   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1276484   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276486   +end;
MPRINT(EM_DIAGRAM):   end;
1276487   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276488   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276489   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1276490   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276491   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276492   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1276493   +   end;
MPRINT(EM_DIAGRAM):   end;
1276494   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276495   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1276496   +   end;
MPRINT(EM_DIAGRAM):   end;
1276497   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276498   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1276499   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276500   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276501   +   end;
MPRINT(EM_DIAGRAM):   end;
1276502   +end;
MPRINT(EM_DIAGRAM):   end;
1276503   +
1276504   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1276505   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1276506   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1276507   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1276508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276510   +end;
MPRINT(EM_DIAGRAM):   end;
1276511   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276513   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1276514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276515   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276516   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1276517   +   end;
MPRINT(EM_DIAGRAM):   end;
1276518   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276519   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1276520   +   end;
MPRINT(EM_DIAGRAM):   end;
1276521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276522   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1276523   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276524   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276525   +   end;
MPRINT(EM_DIAGRAM):   end;
1276526   +end;
MPRINT(EM_DIAGRAM):   end;
1276527   +
1276528   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1276529   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1276530   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1276531   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1276532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276534   +end;
MPRINT(EM_DIAGRAM):   end;
1276535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276537   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1276538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276539   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276540   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1276541   +   end;
MPRINT(EM_DIAGRAM):   end;
1276542   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276543   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1276544   +   end;
MPRINT(EM_DIAGRAM):   end;
1276545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276546   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1276547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276549   +   end;
MPRINT(EM_DIAGRAM):   end;
1276550   +end;
MPRINT(EM_DIAGRAM):   end;
1276551   +
1276552   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1276553   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1276554   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1276555   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1276556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276558   +end;
MPRINT(EM_DIAGRAM):   end;
1276559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276561   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1276562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276563   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276564   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1276565   +   end;
MPRINT(EM_DIAGRAM):   end;
1276566   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276567   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1276568   +   end;
MPRINT(EM_DIAGRAM):   end;
1276569   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276570   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1276571   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276572   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276573   +   end;
MPRINT(EM_DIAGRAM):   end;
1276574   +end;
MPRINT(EM_DIAGRAM):   end;
1276575   +
1276576   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1276577   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1276578   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1276579   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1276580   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276581   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276582   +end;
MPRINT(EM_DIAGRAM):   end;
1276583   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276584   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276585   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1276586   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276587   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1276588   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1276589   +   end;
MPRINT(EM_DIAGRAM):   end;
1276590   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1276591   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1276592   +   end;
MPRINT(EM_DIAGRAM):   end;
1276593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276594   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1276595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276597   +   end;
MPRINT(EM_DIAGRAM):   end;
1276598   +end;
MPRINT(EM_DIAGRAM):   end;
1276599   +
1276600   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1276601   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1276602   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1276603   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1276604   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1276605   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1276606   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1276607   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1276608   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1276609   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1276610   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1276611   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1276612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276614   +end;
MPRINT(EM_DIAGRAM):   end;
1276615   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276616   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1276617   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1276618   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276619   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1276620   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1276621   +   end;
MPRINT(EM_DIAGRAM):   end;
1276622   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1276623   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1276624   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1276625   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1276626   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1276627   +   end;
MPRINT(EM_DIAGRAM):   end;
1276628   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1276629   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1276630   +   end;
MPRINT(EM_DIAGRAM):   end;
1276631   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1276632   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1276633   +   end;
MPRINT(EM_DIAGRAM):   end;
1276634   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1276635   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1276636   +   end;
MPRINT(EM_DIAGRAM):   end;
1276637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276638   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1276639   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1276640   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1276641   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1276642   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276643   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276644   +   end;
MPRINT(EM_DIAGRAM):   end;
1276645   +end;
MPRINT(EM_DIAGRAM):   end;
1276646   +
1276647   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1276648   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1276649   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1276650   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1276651   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1276652   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1276653   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1276654   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1276655   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1276656   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1276657   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1276658   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1276659   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1276660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276662   +end;
MPRINT(EM_DIAGRAM):   end;
1276663   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276664   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1276665   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1276666   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276667   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1276668   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1276669   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1276670   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1276671   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1276672   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276673   +         end;
MPRINT(EM_DIAGRAM):   end;
1276674   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1276675   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1276676   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1276677   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276678   +            end;
MPRINT(EM_DIAGRAM):   end;
1276679   +         end;
MPRINT(EM_DIAGRAM):   end;
1276680   +      end;
MPRINT(EM_DIAGRAM):   end;
1276681   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1276682   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1276683   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1276684   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276685   +         end;
MPRINT(EM_DIAGRAM):   end;
1276686   +      end;
MPRINT(EM_DIAGRAM):   end;
1276687   +   end;
MPRINT(EM_DIAGRAM):   end;
1276688   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276689   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1276690   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1276691   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276692   +      end;
MPRINT(EM_DIAGRAM):   end;
1276693   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1276694   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1276695   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1276696   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1276697   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1276698   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1276699   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276700   +         end;
MPRINT(EM_DIAGRAM):   end;
1276701   +      end;
MPRINT(EM_DIAGRAM):   end;
1276702   +   end;
MPRINT(EM_DIAGRAM):   end;
1276703   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1276704   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1276705   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1276706   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1276707   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1276708   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276709   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276710   +   end;
MPRINT(EM_DIAGRAM):   end;
1276711   +end;
MPRINT(EM_DIAGRAM):   end;
1276712   +
1276713   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276714   +*** Checking missing input Interval
1276715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1276716   +
1276717   +IF NMISS(
1276718   +   AcceptedCmpTotal ,
1276719   +   Age ,
1276720   +   Frq ,
1276721   +   Income ,
1276722   +   Kidhome ,
1276723   +   Mnt ,
1276724   +   MntFishProducts ,
1276725   +   MntFruits ,
1276726   +   MntGoldProds ,
1276727   +   MntMeatProducts ,
1276728   +   MntSweetProducts ,
1276729   +   MntWines ,
1276730   +   MonthsAsCustomer ,
1276731   +   NumCatalogPurchases ,
1276732   +   NumDealsPurchases ,
1276733   +   NumDistPurchases ,
1276734   +   NumStorePurchases ,
1276735   +   NumWebPurchases ,
1276736   +   NumWebVisitsMonth ,
1276737   +   RFMstat ,
1276738   +   RMntFrq ,
1276739   +   Recency ,
1276740   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1276741   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1276742   +
1276743   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276744   +END;
MPRINT(EM_DIAGRAM):   END;
1276745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276746   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1276747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276748   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276749   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276750   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276751   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276752   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276753   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276754   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276755   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276756   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276757   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276758   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276759   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276760   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1276761   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276762   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276763   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276764   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276765   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276766   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1276767   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1276768   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1276769   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276770   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276771   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276772   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276773   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276774   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276775   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276776   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276777   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276778   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276779   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276780   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276781   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276782   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276783   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276784   +END;
MPRINT(EM_DIAGRAM):   END;
1276785   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276786   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1276787   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276788   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276789   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1276790   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276791   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1276792   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276793   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1276794   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276795   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1276796   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276797   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1276798   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276799   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1276800   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276801   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276802   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1276803   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1276804   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276805   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1276806   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276807   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1276808   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1276809   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276810   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276811   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1276812   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276813   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276814   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1276815   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276816   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1276817   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1276818   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1276819   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1276820   +   ELSE S_NumCatalogPurchases
1276821   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1276822   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276823   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1276824   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276825   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276826   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1276827   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276828   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276829   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1276830   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276831   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276832   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1276833   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276834   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276835   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1276836   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276837   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276838   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1276839   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276840   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1276841   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276842   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1276843   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276844   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1276845   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276846   +END;
MPRINT(EM_DIAGRAM):   END;
1276847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276848   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1276849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276851   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1276852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276854   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1276855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276856   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276857   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1276858   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1276859   +        S_Income  +     0.48614351216065 * S_Kidhome
1276860   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1276861   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1276862   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1276863   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1276864   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1276865   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1276866   +          +     1.38069708066212 * S_NumDealsPurchases
1276867   +          +     0.18758966496994 * S_NumDistPurchases
1276868   +          +    -0.65306017966122 * S_NumStorePurchases
1276869   +          +    -0.65780154318734 * S_NumWebPurchases
1276870   +          +     1.42347048260615 * S_NumWebVisitsMonth
1276871   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1276872   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1276873   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1276874   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1276875   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1276876   +        S_Income  +     0.50072567449363 * S_Kidhome
1276877   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1276878   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1276879   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1276880   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1276881   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1276882   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1276883   +          +    -0.75291043162386 * S_NumDealsPurchases
1276884   +          +    -0.06780631818187 * S_NumDistPurchases
1276885   +          +     1.03453599373919 * S_NumStorePurchases
1276886   +          +     1.02348906006707 * S_NumWebPurchases
1276887   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1276888   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1276889   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1276890   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1276891   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1276892   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1276893   +        S_Income  +     0.57496607656903 * S_Kidhome
1276894   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1276895   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1276896   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1276897   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1276898   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1276899   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1276900   +          +     0.13431497076806 * S_NumDealsPurchases
1276901   +          +     -0.4516722514278 * S_NumDistPurchases
1276902   +          +     0.08636745161008 * S_NumStorePurchases
1276903   +          +    -0.01091843489919 * S_NumWebPurchases
1276904   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1276905   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1276906   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1276907   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1276908   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1276909   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1276910   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1276911   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1276912   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1276913   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1276914   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1276915   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1276916   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1276917   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1276918   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1276919   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1276920   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1276921   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1276922   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1276923   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1276924   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1276925   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1276926   +          +     0.09616912826117 * Marital_StatusDivorced
1276927   +          +     0.15377557778014 * Marital_StatusMarried
1276928   +          +    -0.20686296055741 * Marital_StatusSingle
1276929   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1276930   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1276931   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1276932   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1276933   +          +    -0.18362421441913 * Marital_StatusDivorced
1276934   +          +     0.14861660317702 * Marital_StatusMarried
1276935   +          +    -0.51051982152027 * Marital_StatusSingle
1276936   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1276937   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1276938   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1276939   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1276940   +          +    -0.65088528624708 * Marital_StatusDivorced
1276941   +          +     1.85383531288095 * Marital_StatusMarried
1276942   +          +    -1.45031245605509 * Marital_StatusSingle
1276943   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1276944   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1276945   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1276946   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1276947   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1276948   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1276949   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1276950   +END;
MPRINT(EM_DIAGRAM):   END;
1276951   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276952   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1276953   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1276954   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1276955   +END;
MPRINT(EM_DIAGRAM):   END;
1276956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276957   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1276958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276959   +
1276960   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1276961   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1276962   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1276963   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1276964   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1276965   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276966   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1276967   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1276968   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1276969   +end;
MPRINT(EM_DIAGRAM):   end;
1276970   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276971   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1276972   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1276973   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1276974   +   end;
MPRINT(EM_DIAGRAM):   end;
1276975   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1276976   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1276977   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1276978   +   end;
MPRINT(EM_DIAGRAM):   end;
1276979   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276980   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1276981   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1276982   +   end;
MPRINT(EM_DIAGRAM):   end;
1276983   +end;
MPRINT(EM_DIAGRAM):   end;
1276984   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276985   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1276986   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1276987   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1276988   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1276989   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1276990   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1276991   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1276992   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1276993   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1276994   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1276995   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1276996   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1276997   +END;
MPRINT(EM_DIAGRAM):   END;
1276998   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276999   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1277000   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1277001   +END;
MPRINT(EM_DIAGRAM):   END;
1277002   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1277003   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1277004   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1277005   +END;
MPRINT(EM_DIAGRAM):   END;
1277006   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1277007   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1277008   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1277009   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1277010   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1277011   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1277012   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1277013   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277014   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1277015   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277016   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1277017   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1277018   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1277019   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1277020   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1277021   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1277022   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1277023   +END;
MPRINT(EM_DIAGRAM):   END;
1277024   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1277025   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1277026   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1277027   +drop
1277028   +H11
1277029   +H12
1277030   +H13
1277031   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1277032   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1277033   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1277034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277035   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1277036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277037   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1277038   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1277039   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1277040   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1277041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277042   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1277043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277044   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1277045   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1277046   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1277047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277048   +* Ensmbl26: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 3 of 3;
1277049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277051   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1277052   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1277053   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1277054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277055   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1277056   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1277057   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1277058   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1277059   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1277060   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1277061   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1277062   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1277063   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1277064   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1277065   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1277066   +LENGTH _WARN_ $4
1277067   +      F_DepVar  $ 12
1277068   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1277069   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1277070   +
1277071   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1277072   +
1277073   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1277074   +
1277075   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1277076   +
1277077   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1277078   +
1277079   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1277080   +
1277081   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1277082   +
1277083   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1277084   +
1277085   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1277086   +
1277087   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1277088   +
1277089   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1277090   +
1277091   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1277092   +
1277093   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1277094   +
1277095   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1277096   +
1277097   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1277098   +
1277099   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1277100   +
1277101   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1277102   +
1277103   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1277104   +
1277105   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1277106   +
1277107   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1277108   +
1277109   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1277110   +
1277111   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1277112   +
1277113   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1277114   +
1277115   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1277116   +
1277117   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1277118   +
1277119   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1277120   +
1277121   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1277122   +
1277123   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1277124   +
1277125   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1277126   +
1277127   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1277128   +
1277129   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1277130   +
1277131   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1277132   +
1277133   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1277134   +
1277135   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1277136   +
1277137   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1277138   +
1277139   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1277140   +
1277141   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1277142   +
1277143   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1277144   +
1277145   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1277146   +
1277147   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1277148   +
1277149   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1277150   +
1277151   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1277152   +
1277153   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1277154   +
1277155   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1277156   +
1277157   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1277158   +
1277159   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1277160   +
1277161   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1277162   +
1277163   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1277164   +
1277165   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1277166   +
1277167   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1277168   +
1277169   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1277170   +
1277171   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1277172   +
1277173   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1277174   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1277175   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1277176   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1277177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277179   +end;
MPRINT(EM_DIAGRAM):   end;
1277180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277181   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277182   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1277183   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277184   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277185   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1277186   +   end;
MPRINT(EM_DIAGRAM):   end;
1277187   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277188   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1277189   +   end;
MPRINT(EM_DIAGRAM):   end;
1277190   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277191   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1277192   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277193   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277194   +   end;
MPRINT(EM_DIAGRAM):   end;
1277195   +end;
MPRINT(EM_DIAGRAM):   end;
1277196   +
1277197   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1277198   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1277199   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1277200   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1277201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277203   +end;
MPRINT(EM_DIAGRAM):   end;
1277204   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277205   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277206   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1277207   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277208   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277209   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1277210   +   end;
MPRINT(EM_DIAGRAM):   end;
1277211   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277212   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1277213   +   end;
MPRINT(EM_DIAGRAM):   end;
1277214   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277215   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1277216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277218   +   end;
MPRINT(EM_DIAGRAM):   end;
1277219   +end;
MPRINT(EM_DIAGRAM):   end;
1277220   +
1277221   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1277222   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1277223   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1277224   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1277225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277227   +end;
MPRINT(EM_DIAGRAM):   end;
1277228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277229   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277230   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1277231   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277232   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277233   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1277234   +   end;
MPRINT(EM_DIAGRAM):   end;
1277235   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277236   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1277237   +   end;
MPRINT(EM_DIAGRAM):   end;
1277238   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277239   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1277240   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277241   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277242   +   end;
MPRINT(EM_DIAGRAM):   end;
1277243   +end;
MPRINT(EM_DIAGRAM):   end;
1277244   +
1277245   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1277246   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1277247   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1277248   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1277249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277251   +end;
MPRINT(EM_DIAGRAM):   end;
1277252   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277254   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1277255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277256   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277257   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1277258   +   end;
MPRINT(EM_DIAGRAM):   end;
1277259   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277260   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1277261   +   end;
MPRINT(EM_DIAGRAM):   end;
1277262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277263   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1277264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277266   +   end;
MPRINT(EM_DIAGRAM):   end;
1277267   +end;
MPRINT(EM_DIAGRAM):   end;
1277268   +
1277269   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1277270   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1277271   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1277272   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1277273   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277275   +end;
MPRINT(EM_DIAGRAM):   end;
1277276   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277277   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277278   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1277279   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277280   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277281   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1277282   +   end;
MPRINT(EM_DIAGRAM):   end;
1277283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277284   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1277285   +   end;
MPRINT(EM_DIAGRAM):   end;
1277286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277287   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1277288   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277289   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277290   +   end;
MPRINT(EM_DIAGRAM):   end;
1277291   +end;
MPRINT(EM_DIAGRAM):   end;
1277292   +
1277293   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1277294   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1277295   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1277296   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1277297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277299   +end;
MPRINT(EM_DIAGRAM):   end;
1277300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277302   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1277303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277304   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277305   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1277306   +   end;
MPRINT(EM_DIAGRAM):   end;
1277307   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277308   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1277309   +   end;
MPRINT(EM_DIAGRAM):   end;
1277310   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277311   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1277312   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277313   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277314   +   end;
MPRINT(EM_DIAGRAM):   end;
1277315   +end;
MPRINT(EM_DIAGRAM):   end;
1277316   +
1277317   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1277318   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1277319   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1277320   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1277321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277323   +end;
MPRINT(EM_DIAGRAM):   end;
1277324   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277325   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277326   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1277327   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277328   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1277329   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1277330   +   end;
MPRINT(EM_DIAGRAM):   end;
1277331   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1277332   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1277333   +   end;
MPRINT(EM_DIAGRAM):   end;
1277334   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277335   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1277336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277338   +   end;
MPRINT(EM_DIAGRAM):   end;
1277339   +end;
MPRINT(EM_DIAGRAM):   end;
1277340   +
1277341   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1277342   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1277343   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1277344   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1277345   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1277346   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1277347   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1277348   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1277349   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1277350   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1277351   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1277352   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1277353   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277355   +end;
MPRINT(EM_DIAGRAM):   end;
1277356   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277357   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1277358   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1277359   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277360   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1277361   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1277362   +   end;
MPRINT(EM_DIAGRAM):   end;
1277363   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1277364   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1277365   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1277366   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1277367   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1277368   +   end;
MPRINT(EM_DIAGRAM):   end;
1277369   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1277370   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1277371   +   end;
MPRINT(EM_DIAGRAM):   end;
1277372   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1277373   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1277374   +   end;
MPRINT(EM_DIAGRAM):   end;
1277375   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1277376   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1277377   +   end;
MPRINT(EM_DIAGRAM):   end;
1277378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277379   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1277380   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1277381   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1277382   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1277383   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277384   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277385   +   end;
MPRINT(EM_DIAGRAM):   end;
1277386   +end;
MPRINT(EM_DIAGRAM):   end;
1277387   +
1277388   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1277389   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1277390   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1277391   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1277392   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1277393   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1277394   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1277395   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1277396   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1277397   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1277398   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1277399   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1277400   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1277401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277403   +end;
MPRINT(EM_DIAGRAM):   end;
1277404   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277405   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1277406   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1277407   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277408   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1277409   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1277410   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1277411   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1277412   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1277413   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277414   +         end;
MPRINT(EM_DIAGRAM):   end;
1277415   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1277416   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1277417   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1277418   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277419   +            end;
MPRINT(EM_DIAGRAM):   end;
1277420   +         end;
MPRINT(EM_DIAGRAM):   end;
1277421   +      end;
MPRINT(EM_DIAGRAM):   end;
1277422   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1277423   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1277424   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1277425   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277426   +         end;
MPRINT(EM_DIAGRAM):   end;
1277427   +      end;
MPRINT(EM_DIAGRAM):   end;
1277428   +   end;
MPRINT(EM_DIAGRAM):   end;
1277429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277430   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1277431   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1277432   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277433   +      end;
MPRINT(EM_DIAGRAM):   end;
1277434   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1277435   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1277436   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1277437   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1277438   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1277439   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1277440   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277441   +         end;
MPRINT(EM_DIAGRAM):   end;
1277442   +      end;
MPRINT(EM_DIAGRAM):   end;
1277443   +   end;
MPRINT(EM_DIAGRAM):   end;
1277444   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1277445   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1277446   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1277447   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1277448   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1277449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277451   +   end;
MPRINT(EM_DIAGRAM):   end;
1277452   +end;
MPRINT(EM_DIAGRAM):   end;
1277453   +
1277454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277455   +*** Checking missing input Interval
1277456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1277457   +
1277458   +IF NMISS(
1277459   +   AcceptedCmpTotal ,
1277460   +   Age ,
1277461   +   Frq ,
1277462   +   Income ,
1277463   +   Kidhome ,
1277464   +   Mnt ,
1277465   +   MntFishProducts ,
1277466   +   MntFruits ,
1277467   +   MntGoldProds ,
1277468   +   MntMeatProducts ,
1277469   +   MntSweetProducts ,
1277470   +   MntWines ,
1277471   +   MonthsAsCustomer ,
1277472   +   NumCatalogPurchases ,
1277473   +   NumDealsPurchases ,
1277474   +   NumDistPurchases ,
1277475   +   NumStorePurchases ,
1277476   +   NumWebPurchases ,
1277477   +   NumWebVisitsMonth ,
1277478   +   RFMstat ,
1277479   +   RMntFrq ,
1277480   +   Recency ,
1277481   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1277482   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1277483   +
1277484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277485   +END;
MPRINT(EM_DIAGRAM):   END;
1277486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277487   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1277488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277489   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1277490   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1277491   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1277492   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1277493   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1277494   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1277495   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1277496   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1277497   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1277498   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1277499   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1277500   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1277501   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1277502   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1277503   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1277504   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1277505   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1277506   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1277507   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1277508   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1277509   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1277510   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1277511   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1277512   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1277513   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1277514   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1277515   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1277516   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1277517   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1277518   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1277519   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1277520   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1277521   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1277522   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1277523   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1277524   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1277525   +END;
MPRINT(EM_DIAGRAM):   END;
1277526   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1277527   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1277528   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1277529   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1277530   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1277531   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1277532   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1277533   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1277534   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1277535   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1277536   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1277537   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1277538   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1277539   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1277540   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1277541   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1277542   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1277543   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1277544   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1277545   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1277546   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1277547   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1277548   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1277549   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1277550   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1277551   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1277552   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1277553   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1277554   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1277555   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1277556   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1277557   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1277558   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1277559   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1277560   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1277561   +   ELSE S_NumCatalogPurchases
1277562   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1277563   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1277564   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1277565   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1277566   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1277567   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1277568   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1277569   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1277570   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1277571   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1277572   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1277573   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1277574   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1277575   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1277576   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1277577   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1277578   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1277579   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1277580   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1277581   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1277582   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1277583   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1277584   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1277585   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1277586   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1277587   +END;
MPRINT(EM_DIAGRAM):   END;
1277588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277589   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1277590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277592   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1277593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277595   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1277596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277597   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1277598   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1277599   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1277600   +        S_Income  +     -0.0761121347886 * S_Kidhome
1277601   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1277602   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1277603   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1277604   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1277605   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1277606   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1277607   +          +     0.83893684194413 * S_NumDealsPurchases
1277608   +          +     0.23391006875291 * S_NumDistPurchases
1277609   +          +    -0.63370705462074 * S_NumStorePurchases
1277610   +          +     -0.9137408014067 * S_NumWebPurchases
1277611   +          +     0.89109351479441 * S_NumWebVisitsMonth
1277612   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1277613   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1277614   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1277615   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1277616   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1277617   +        S_Income  +    -0.43909782819329 * S_Kidhome
1277618   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1277619   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1277620   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1277621   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1277622   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1277623   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1277624   +          +      0.2218973353638 * S_NumDealsPurchases
1277625   +          +      0.0062360950528 * S_NumDistPurchases
1277626   +          +    -0.57621747951002 * S_NumStorePurchases
1277627   +          +    -0.33564890905657 * S_NumWebPurchases
1277628   +          +     0.82482365540301 * S_NumWebVisitsMonth
1277629   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1277630   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1277631   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1277632   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1277633   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1277634   +        S_Income  +    -0.03572236011846 * S_Kidhome
1277635   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1277636   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1277637   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1277638   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1277639   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1277640   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1277641   +          +      -0.174147250062 * S_NumDealsPurchases
1277642   +          +    -0.22921682388864 * S_NumDistPurchases
1277643   +          +     0.41526854684299 * S_NumStorePurchases
1277644   +          +    -0.27675565493519 * S_NumWebPurchases
1277645   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1277646   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1277647   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1277648   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1277649   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1277650   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1277651   +        S_Income  +    -0.04788369327547 * S_Kidhome
1277652   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1277653   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1277654   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1277655   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1277656   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1277657   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1277658   +          +    -0.46022430102423 * S_NumDealsPurchases
1277659   +          +     0.15831339342044 * S_NumDistPurchases
1277660   +          +     0.22480465173719 * S_NumStorePurchases
1277661   +          +     0.44798923484609 * S_NumWebPurchases
1277662   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1277663   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1277664   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1277665   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1277666   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1277667   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1277668   +        S_Income  +     0.53994304261534 * S_Kidhome
1277669   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1277670   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1277671   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1277672   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1277673   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1277674   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1277675   +          +     0.03650267472167 * S_NumDealsPurchases
1277676   +          +    -0.03322709524939 * S_NumDistPurchases
1277677   +          +     -0.0022226424472 * S_NumStorePurchases
1277678   +          +    -0.10131236740674 * S_NumWebPurchases
1277679   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1277680   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1277681   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1277682   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1277683   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1277684   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1277685   +        S_Income  +    -0.52576099429582 * S_Kidhome
1277686   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1277687   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1277688   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1277689   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1277690   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1277691   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1277692   +          +    -0.50209914729324 * S_NumDealsPurchases
1277693   +          +    -0.46217244513696 * S_NumDistPurchases
1277694   +          +      0.1832648560248 * S_NumStorePurchases
1277695   +          +     0.02866153257072 * S_NumWebPurchases
1277696   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1277697   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1277698   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1277699   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1277700   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1277701   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1277702   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1277703   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1277704   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1277705   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1277706   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1277707   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1277708   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1277709   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1277710   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1277711   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1277712   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1277713   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1277714   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1277715   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1277716   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1277717   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1277718   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1277719   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1277720   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1277721   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1277722   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1277723   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1277724   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1277725   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1277726   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1277727   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1277728   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1277729   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1277730   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1277731   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1277732   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1277733   +          +     0.13815069071511 * Marital_StatusDivorced
1277734   +          +      0.0732913060929 * Marital_StatusMarried
1277735   +          +    -0.22858418468746 * Marital_StatusSingle
1277736   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1277737   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1277738   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1277739   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1277740   +          +     0.32909808396509 * Marital_StatusDivorced
1277741   +          +    -0.50160173579004 * Marital_StatusMarried
1277742   +          +     0.57207102211224 * Marital_StatusSingle
1277743   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1277744   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1277745   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1277746   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1277747   +          +    -0.07154493730107 * Marital_StatusDivorced
1277748   +          +     0.29126100051603 * Marital_StatusMarried
1277749   +          +    -0.06936325857004 * Marital_StatusSingle
1277750   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1277751   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1277752   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1277753   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1277754   +          +    -0.05004640872388 * Marital_StatusDivorced
1277755   +          +     0.22197974032974 * Marital_StatusMarried
1277756   +          +    -0.33931504637453 * Marital_StatusSingle
1277757   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1277758   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1277759   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1277760   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1277761   +          +    -0.07748874669478 * Marital_StatusDivorced
1277762   +          +     1.05442281159109 * Marital_StatusMarried
1277763   +          +    -0.67190984038867 * Marital_StatusSingle
1277764   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1277765   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1277766   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1277767   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1277768   +          +    -0.20478208715114 * Marital_StatusDivorced
1277769   +          +    -0.40186383707642 * Marital_StatusMarried
1277770   +          +     0.43474841662774 * Marital_StatusSingle
1277771   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1277772   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1277773   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1277774   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1277775   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1277776   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1277777   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1277778   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1277779   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1277780   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1277781   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1277782   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1277783   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1277784   +END;
MPRINT(EM_DIAGRAM):   END;
1277785   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1277786   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1277787   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1277788   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1277789   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1277790   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1277791   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1277792   +END;
MPRINT(EM_DIAGRAM):   END;
1277793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277794   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1277795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277796   +
1277797   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1277798   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1277799   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1277800   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1277801   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1277802   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277803   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1277804   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1277805   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1277806   +end;
MPRINT(EM_DIAGRAM):   end;
1277807   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277808   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1277809   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1277810   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1277811   +   end;
MPRINT(EM_DIAGRAM):   end;
1277812   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1277813   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1277814   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1277815   +   end;
MPRINT(EM_DIAGRAM):   end;
1277816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277817   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1277818   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1277819   +   end;
MPRINT(EM_DIAGRAM):   end;
1277820   +end;
MPRINT(EM_DIAGRAM):   end;
1277821   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1277822   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1277823   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1277824   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1277825   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1277826   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1277827   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1277828   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1277829   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1277830   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1277831   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1277832   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1277833   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1277834   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1277835   +END;
MPRINT(EM_DIAGRAM):   END;
1277836   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1277837   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1277838   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1277839   +END;
MPRINT(EM_DIAGRAM):   END;
1277840   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1277841   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1277842   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1277843   +END;
MPRINT(EM_DIAGRAM):   END;
1277844   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1277845   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1277846   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1277847   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1277848   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1277849   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1277850   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1277851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277852   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1277853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277854   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1277855   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1277856   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1277857   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1277858   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1277859   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1277860   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1277861   +END;
MPRINT(EM_DIAGRAM):   END;
1277862   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1277863   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1277864   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1277865   +drop
1277866   +H11
1277867   +H12
1277868   +H13
1277869   +H14
1277870   +H15
1277871   +H16
1277872   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1277873   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1277874   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1277875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277876   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1277877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277878   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1277879   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1277880   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1277881   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1277882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277883   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1277884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277885   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1277886   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1277887   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1277888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277889   +* Ensmbl26: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Maximum Posteriors of 3 models;
1277890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277891   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1277892   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1277893   +P_DepVar1 = max(
1277894   +Neural2_P_DepVar1 ,
1277895   +Neural3_P_DepVar1 ,
1277896   +Neural9_P_DepVar1
1277897   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural2_P_DepVar1 , Neural3_P_DepVar1 , 
Neural9_P_DepVar1 );
1277898   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1277899   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1277900   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1277901   +end;
MPRINT(EM_DIAGRAM):   end;
1277902   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1277903   +P_DepVar0 = max(
1277904   +Neural2_P_DepVar0 ,
1277905   +Neural3_P_DepVar0 ,
1277906   +Neural9_P_DepVar0
1277907   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural2_P_DepVar0 , Neural3_P_DepVar0 , 
Neural9_P_DepVar0 );
1277908   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1277909   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1277910   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1277911   +end;
MPRINT(EM_DIAGRAM):   end;
1277912   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1277913   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277914   +* Ensmbl26: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Classification Vars;
1277915   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277916   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1277917   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1277918   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1277919   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1277920   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1277921   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1277922   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1277923   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1277924   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1277925   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1277926   +end;
MPRINT(EM_DIAGRAM):   end;
1277927   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1277928   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1277929   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1277930   +end;
MPRINT(EM_DIAGRAM):   end;
1277931   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1277932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277933   +* Ensmbl26: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Producing Unformatted variable;
1277934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277935   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1277936   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1277937   +else
1277938   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1277939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277940   +* Ensmbl26: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing _WARN_ Variable;
1277941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277942   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1277943   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1277944   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1277945   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1277946   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1277947   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1277948   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1277949   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1277950   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1277951   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1277952   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1277953   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1277954   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1277955   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1277956   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1277957   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277958   +* Ensmbl26: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Residual Vars;
1277959   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277960   +if
1277961   +F_DepVar NE '1'
1277962   +AND F_DepVar NE '0'
1277963   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1277964   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1277965   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1277966   +end;
MPRINT(EM_DIAGRAM):   end;
1277967   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277968   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1277969   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1277970   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1277971   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1277972   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1277973   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1277974   +END;
MPRINT(EM_DIAGRAM):   END;
1277975   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1277976    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL26_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL2_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1277977    quit;
1277978    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1277979    filename emflow
1277979  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring NEURAL2_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277980    *------------------------------------------------------------*;
1277981    * Ensmbl26: Scoring NEURAL2_VALIDATE data;
1277982    *------------------------------------------------------------*;
1277983    data EMWS8.Ensmbl26_VALIDATE
1277984    / view=EMWS8.Ensmbl26_VALIDATE
1277985    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_VALIDATE / view=EMWS8.Ensmbl26_VALIDATE ;
1277986    set EMWS8.Neural2_VALIDATE
1277987    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural2_VALIDATE ;
1277988    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\EMFLOWSCORE.sas.
1277989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277990   +* Ensmbl26: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Combine model for DepVar;
1277991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277992   +* Ensmbl26: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 1 of 3;
1277993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277994   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277995   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1277996   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1277997   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1277998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278000   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1278001   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1278002   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1278003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278005   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1278006   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1278007   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1278008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278010   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1278011   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1278012   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1278013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278014   +
1278015   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1278016   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1278016  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1278017   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1278018   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1278019   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1278020   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1278021   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1278022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278023   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1278024   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1278025   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1278026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278028   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1278029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278030   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1278031   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1278032   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1278033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278034   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1278035   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1278036   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1278037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278039   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1278040   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1278041   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1278042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278044   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1278045   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1278046   +* NODE: Neural2;
MPRINT(EM_DIAGRAM):   * NODE: Neural2;
1278047   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278048   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1278049   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1278050   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1278051   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1278052   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1278053   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1278054   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1278055   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1278056   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1278057   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1278058   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1278059   +LENGTH _WARN_ $4
1278060   +      F_DepVar  $ 12
1278061   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1278062   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1278063   +
1278064   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1278065   +
1278066   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1278067   +
1278068   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1278069   +
1278070   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1278071   +
1278072   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1278073   +
1278074   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1278075   +
1278076   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1278077   +
1278078   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1278079   +
1278080   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1278081   +
1278082   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1278083   +
1278084   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1278085   +
1278086   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1278087   +
1278088   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1278089   +
1278090   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1278091   +
1278092   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1278093   +
1278094   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1278095   +
1278096   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1278097   +
1278098   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1278099   +
1278100   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1278101   +
1278102   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1278103   +
1278104   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1278105   +
1278106   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1278107   +
1278108   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1278109   +
1278110   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1278111   +
1278112   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1278113   +
1278114   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1278115   +
1278116   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1278117   +
1278118   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1278119   +
1278120   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1278121   +
1278122   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1278123   +
1278124   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1278125   +
1278126   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1278127   +
1278128   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1278129   +
1278130   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1278131   +
1278132   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1278133   +
1278134   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1278135   +
1278136   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1278137   +
1278138   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1278139   +
1278140   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1278141   +
1278142   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1278143   +
1278144   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1278145   +
1278146   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1278147   +
1278148   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1278149   +
1278150   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1278151   +
1278152   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1278153   +
1278154   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1278155   +
1278156   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1278157   +
1278158   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1278159   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1278160   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1278161   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1278162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278164   +end;
MPRINT(EM_DIAGRAM):   end;
1278165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278167   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1278168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278170   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1278171   +   end;
MPRINT(EM_DIAGRAM):   end;
1278172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278173   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1278174   +   end;
MPRINT(EM_DIAGRAM):   end;
1278175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278176   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1278177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278179   +   end;
MPRINT(EM_DIAGRAM):   end;
1278180   +end;
MPRINT(EM_DIAGRAM):   end;
1278181   +
1278182   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1278183   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1278184   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1278185   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1278186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278188   +end;
MPRINT(EM_DIAGRAM):   end;
1278189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278191   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1278192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278194   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1278195   +   end;
MPRINT(EM_DIAGRAM):   end;
1278196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278197   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1278198   +   end;
MPRINT(EM_DIAGRAM):   end;
1278199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278200   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1278201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278203   +   end;
MPRINT(EM_DIAGRAM):   end;
1278204   +end;
MPRINT(EM_DIAGRAM):   end;
1278205   +
1278206   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1278207   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1278208   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1278209   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1278210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278212   +end;
MPRINT(EM_DIAGRAM):   end;
1278213   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278215   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1278216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278218   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1278219   +   end;
MPRINT(EM_DIAGRAM):   end;
1278220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278221   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1278222   +   end;
MPRINT(EM_DIAGRAM):   end;
1278223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278224   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1278225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278227   +   end;
MPRINT(EM_DIAGRAM):   end;
1278228   +end;
MPRINT(EM_DIAGRAM):   end;
1278229   +
1278230   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1278231   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1278232   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1278233   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1278234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278236   +end;
MPRINT(EM_DIAGRAM):   end;
1278237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278239   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1278240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278242   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1278243   +   end;
MPRINT(EM_DIAGRAM):   end;
1278244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278245   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1278246   +   end;
MPRINT(EM_DIAGRAM):   end;
1278247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278248   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1278249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278251   +   end;
MPRINT(EM_DIAGRAM):   end;
1278252   +end;
MPRINT(EM_DIAGRAM):   end;
1278253   +
1278254   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1278255   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1278256   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1278257   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1278258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278260   +end;
MPRINT(EM_DIAGRAM):   end;
1278261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278263   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1278264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278266   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1278267   +   end;
MPRINT(EM_DIAGRAM):   end;
1278268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278269   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1278270   +   end;
MPRINT(EM_DIAGRAM):   end;
1278271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278272   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1278273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278275   +   end;
MPRINT(EM_DIAGRAM):   end;
1278276   +end;
MPRINT(EM_DIAGRAM):   end;
1278277   +
1278278   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1278279   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1278280   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1278281   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1278282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278284   +end;
MPRINT(EM_DIAGRAM):   end;
1278285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278287   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1278288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278290   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1278291   +   end;
MPRINT(EM_DIAGRAM):   end;
1278292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278293   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1278294   +   end;
MPRINT(EM_DIAGRAM):   end;
1278295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278296   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1278297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278299   +   end;
MPRINT(EM_DIAGRAM):   end;
1278300   +end;
MPRINT(EM_DIAGRAM):   end;
1278301   +
1278302   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1278303   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1278304   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1278305   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1278306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278308   +end;
MPRINT(EM_DIAGRAM):   end;
1278309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278311   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1278312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278313   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1278314   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1278315   +   end;
MPRINT(EM_DIAGRAM):   end;
1278316   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1278317   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1278318   +   end;
MPRINT(EM_DIAGRAM):   end;
1278319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278320   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1278321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278323   +   end;
MPRINT(EM_DIAGRAM):   end;
1278324   +end;
MPRINT(EM_DIAGRAM):   end;
1278325   +
1278326   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1278327   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1278328   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1278329   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1278330   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1278331   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1278332   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1278333   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1278334   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1278335   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1278336   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1278337   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1278338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278340   +end;
MPRINT(EM_DIAGRAM):   end;
1278341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278342   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1278343   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1278344   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278345   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1278346   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1278347   +   end;
MPRINT(EM_DIAGRAM):   end;
1278348   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1278349   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1278350   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1278351   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1278352   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1278353   +   end;
MPRINT(EM_DIAGRAM):   end;
1278354   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1278355   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1278356   +   end;
MPRINT(EM_DIAGRAM):   end;
1278357   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1278358   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1278359   +   end;
MPRINT(EM_DIAGRAM):   end;
1278360   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1278361   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1278362   +   end;
MPRINT(EM_DIAGRAM):   end;
1278363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278364   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1278365   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1278366   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1278367   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1278368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278370   +   end;
MPRINT(EM_DIAGRAM):   end;
1278371   +end;
MPRINT(EM_DIAGRAM):   end;
1278372   +
1278373   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1278374   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1278375   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1278376   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1278377   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1278378   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1278379   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1278380   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1278381   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1278382   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1278383   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1278384   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1278385   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1278386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278388   +end;
MPRINT(EM_DIAGRAM):   end;
1278389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278390   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1278391   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1278392   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278393   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1278394   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1278395   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1278396   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1278397   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1278398   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278399   +         end;
MPRINT(EM_DIAGRAM):   end;
1278400   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1278401   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1278402   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1278403   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278404   +            end;
MPRINT(EM_DIAGRAM):   end;
1278405   +         end;
MPRINT(EM_DIAGRAM):   end;
1278406   +      end;
MPRINT(EM_DIAGRAM):   end;
1278407   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1278408   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1278409   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1278410   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278411   +         end;
MPRINT(EM_DIAGRAM):   end;
1278412   +      end;
MPRINT(EM_DIAGRAM):   end;
1278413   +   end;
MPRINT(EM_DIAGRAM):   end;
1278414   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278415   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1278416   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1278417   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278418   +      end;
MPRINT(EM_DIAGRAM):   end;
1278419   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1278420   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1278421   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1278422   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1278423   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1278424   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1278425   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278426   +         end;
MPRINT(EM_DIAGRAM):   end;
1278427   +      end;
MPRINT(EM_DIAGRAM):   end;
1278428   +   end;
MPRINT(EM_DIAGRAM):   end;
1278429   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1278430   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1278431   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1278432   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1278433   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1278434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278436   +   end;
MPRINT(EM_DIAGRAM):   end;
1278437   +end;
MPRINT(EM_DIAGRAM):   end;
1278438   +
1278439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278440   +*** Checking missing input Interval
1278441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1278442   +
1278443   +IF NMISS(
1278444   +   AcceptedCmpTotal ,
1278445   +   Age ,
1278446   +   Frq ,
1278447   +   Income ,
1278448   +   Kidhome ,
1278449   +   Mnt ,
1278450   +   MntFishProducts ,
1278451   +   MntFruits ,
1278452   +   MntGoldProds ,
1278453   +   MntMeatProducts ,
1278454   +   MntSweetProducts ,
1278455   +   MntWines ,
1278456   +   MonthsAsCustomer ,
1278457   +   NumCatalogPurchases ,
1278458   +   NumDealsPurchases ,
1278459   +   NumDistPurchases ,
1278460   +   NumStorePurchases ,
1278461   +   NumWebPurchases ,
1278462   +   NumWebVisitsMonth ,
1278463   +   RFMstat ,
1278464   +   RMntFrq ,
1278465   +   Recency ,
1278466   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1278467   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1278468   +
1278469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278470   +END;
MPRINT(EM_DIAGRAM):   END;
1278471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278472   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1278473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278474   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1278475   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1278476   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1278477   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1278478   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1278479   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1278480   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1278481   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1278482   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1278483   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1278484   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1278485   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1278486   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1278487   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1278488   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1278489   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1278490   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1278491   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1278492   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1278493   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1278494   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1278495   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1278496   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1278497   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1278498   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1278499   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1278500   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1278501   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1278502   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1278503   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1278504   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1278505   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1278506   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1278507   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1278508   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1278509   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1278510   +END;
MPRINT(EM_DIAGRAM):   END;
1278511   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278512   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1278513   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1278514   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1278515   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1278516   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1278517   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1278518   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1278519   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1278520   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1278521   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1278522   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1278523   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1278524   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1278525   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1278526   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1278527   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1278528   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1278529   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1278530   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1278531   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1278532   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1278533   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1278534   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1278535   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1278536   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1278537   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1278538   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1278539   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1278540   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1278541   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1278542   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1278543   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1278544   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1278545   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1278546   +   ELSE S_NumCatalogPurchases
1278547   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1278548   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1278549   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1278550   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1278551   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1278552   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1278553   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1278554   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1278555   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1278556   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1278557   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1278558   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1278559   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1278560   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1278561   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1278562   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1278563   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1278564   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1278565   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1278566   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1278567   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1278568   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1278569   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1278570   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1278571   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1278572   +END;
MPRINT(EM_DIAGRAM):   END;
1278573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278574   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1278575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278577   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1278578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278580   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1278581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278582   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1278583   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1278584   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1278585   +        S_Income  +    -1.07652572934003 * S_Kidhome
1278586   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1278587   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1278588   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1278589   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1278590   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1278591   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1278592   +          +     0.34217069579861 * S_NumDealsPurchases
1278593   +          +      0.7126550962469 * S_NumDistPurchases
1278594   +          +     0.05810128676346 * S_NumStorePurchases
1278595   +          +     -0.1974592461824 * S_NumWebPurchases
1278596   +          +     1.33855646568468 * S_NumWebVisitsMonth
1278597   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1278598   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1278599   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1278600   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1278601   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1278602   +        S_Income  +    -0.00280376715329 * S_Kidhome
1278603   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1278604   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1278605   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1278606   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1278607   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1278608   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1278609   +          +     0.45694604326279 * S_NumDealsPurchases
1278610   +          +      0.1555582457419 * S_NumDistPurchases
1278611   +          +     -0.3340268446813 * S_NumStorePurchases
1278612   +          +    -0.39316217683753 * S_NumWebPurchases
1278613   +          +     0.52431656748667 * S_NumWebVisitsMonth
1278614   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1278615   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1278616   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1278617   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1278618   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1278619   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1278620   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1278621   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1278622   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1278623   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1278624   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1278625   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1278626   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1278627   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1278628   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1278629   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1278630   +          +     0.46676686502466 * Marital_StatusDivorced
1278631   +          +    -1.27760562209616 * Marital_StatusMarried
1278632   +          +     1.31419230639567 * Marital_StatusSingle
1278633   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1278634   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1278635   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1278636   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1278637   +          +     0.07434297903639 * Marital_StatusDivorced
1278638   +          +     0.00294493836325 * Marital_StatusMarried
1278639   +          +    -0.00745595849422 * Marital_StatusSingle
1278640   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1278641   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1278642   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1278643   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1278644   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1278645   +END;
MPRINT(EM_DIAGRAM):   END;
1278646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278647   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1278648   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1278649   +END;
MPRINT(EM_DIAGRAM):   END;
1278650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278651   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1278652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278653   +
1278654   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1278655   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1278656   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1278657   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1278658   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1278659   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278660   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1278661   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1278662   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1278663   +end;
MPRINT(EM_DIAGRAM):   end;
1278664   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278665   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1278666   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1278667   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1278668   +   end;
MPRINT(EM_DIAGRAM):   end;
1278669   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1278670   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1278671   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1278672   +   end;
MPRINT(EM_DIAGRAM):   end;
1278673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278674   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1278675   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1278676   +   end;
MPRINT(EM_DIAGRAM):   end;
1278677   +end;
MPRINT(EM_DIAGRAM):   end;
1278678   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1278679   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1278680   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1278681   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1278682   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1278683   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1278684   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1278685   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1278686   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1278687   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1278688   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1278689   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1278690   +END;
MPRINT(EM_DIAGRAM):   END;
1278691   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278692   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1278693   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1278694   +END;
MPRINT(EM_DIAGRAM):   END;
1278695   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1278696   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1278697   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1278698   +END;
MPRINT(EM_DIAGRAM):   END;
1278699   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1278700   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1278701   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1278702   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1278703   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1278704   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1278705   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1278706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278707   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1278708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278709   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1278710   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1278711   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1278712   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1278713   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1278714   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1278715   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1278716   +END;
MPRINT(EM_DIAGRAM):   END;
1278717   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1278718   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1278719   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1278720   +drop
1278721   +H11
1278722   +H12
1278723   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1278724   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1278725   +* Renaming variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural2;
1278726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278727   +* Renaming Posterior variables for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural2;
1278728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278729   +drop Neural2_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar1;
1278730   +Neural2_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar1 = P_DepVar1;
1278731   +drop Neural2_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural2_P_DepVar0;
1278732   +Neural2_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural2_P_DepVar0 = P_DepVar0;
1278733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278734   +* Renaming _WARN_ variable for Neural2;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural2;
1278735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278736   +length Neural2_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural2_WARN_ $4;
1278737   +drop Neural2_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural2_WARN_;
1278738   +Neural2_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural2_WARN_ = _WARN_;
1278739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278740   +* Ensmbl26: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 2 of 3;
1278741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278743   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1278744   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1278745   +* NODE: Neural3;
MPRINT(EM_DIAGRAM):   * NODE: Neural3;
1278746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278747   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1278748   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1278749   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1278750   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1278751   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1278752   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1278753   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1278754   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1278755   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1278756   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1278757   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1278758   +LENGTH _WARN_ $4
1278759   +      F_DepVar  $ 12
1278760   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1278761   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1278762   +
1278763   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1278764   +
1278765   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1278766   +
1278767   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1278768   +
1278769   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1278770   +
1278771   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1278772   +
1278773   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1278774   +
1278775   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1278776   +
1278777   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1278778   +
1278779   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1278780   +
1278781   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1278782   +
1278783   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1278784   +
1278785   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1278786   +
1278787   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1278788   +
1278789   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1278790   +
1278791   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1278792   +
1278793   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1278794   +
1278795   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1278796   +
1278797   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1278798   +
1278799   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1278800   +
1278801   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1278802   +
1278803   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1278804   +
1278805   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1278806   +
1278807   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1278808   +
1278809   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1278810   +
1278811   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1278812   +
1278813   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1278814   +
1278815   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1278816   +
1278817   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1278818   +
1278819   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1278820   +
1278821   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1278822   +
1278823   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1278824   +
1278825   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1278826   +
1278827   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1278828   +
1278829   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1278830   +
1278831   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1278832   +
1278833   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1278834   +
1278835   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1278836   +
1278837   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1278838   +
1278839   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1278840   +
1278841   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1278842   +
1278843   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1278844   +
1278845   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1278846   +
1278847   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1278848   +
1278849   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1278850   +
1278851   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1278852   +
1278853   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1278854   +
1278855   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1278856   +
1278857   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1278858   +
1278859   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1278860   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1278861   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1278862   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1278863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278865   +end;
MPRINT(EM_DIAGRAM):   end;
1278866   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278867   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278868   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1278869   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278870   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278871   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1278872   +   end;
MPRINT(EM_DIAGRAM):   end;
1278873   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278874   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1278875   +   end;
MPRINT(EM_DIAGRAM):   end;
1278876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278877   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1278878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278880   +   end;
MPRINT(EM_DIAGRAM):   end;
1278881   +end;
MPRINT(EM_DIAGRAM):   end;
1278882   +
1278883   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1278884   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1278885   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1278886   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1278887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278889   +end;
MPRINT(EM_DIAGRAM):   end;
1278890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278891   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278892   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1278893   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278894   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278895   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1278896   +   end;
MPRINT(EM_DIAGRAM):   end;
1278897   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278898   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1278899   +   end;
MPRINT(EM_DIAGRAM):   end;
1278900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278901   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1278902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278904   +   end;
MPRINT(EM_DIAGRAM):   end;
1278905   +end;
MPRINT(EM_DIAGRAM):   end;
1278906   +
1278907   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1278908   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1278909   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1278910   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1278911   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278913   +end;
MPRINT(EM_DIAGRAM):   end;
1278914   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278915   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278916   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1278917   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278918   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278919   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1278920   +   end;
MPRINT(EM_DIAGRAM):   end;
1278921   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278922   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1278923   +   end;
MPRINT(EM_DIAGRAM):   end;
1278924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278925   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1278926   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278927   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278928   +   end;
MPRINT(EM_DIAGRAM):   end;
1278929   +end;
MPRINT(EM_DIAGRAM):   end;
1278930   +
1278931   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1278932   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1278933   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1278934   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1278935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278937   +end;
MPRINT(EM_DIAGRAM):   end;
1278938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278940   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1278941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278942   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278943   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1278944   +   end;
MPRINT(EM_DIAGRAM):   end;
1278945   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278946   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1278947   +   end;
MPRINT(EM_DIAGRAM):   end;
1278948   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278949   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1278950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278952   +   end;
MPRINT(EM_DIAGRAM):   end;
1278953   +end;
MPRINT(EM_DIAGRAM):   end;
1278954   +
1278955   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1278956   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1278957   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1278958   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1278959   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278960   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278961   +end;
MPRINT(EM_DIAGRAM):   end;
1278962   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278963   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278964   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1278965   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278966   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278967   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1278968   +   end;
MPRINT(EM_DIAGRAM):   end;
1278969   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278970   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1278971   +   end;
MPRINT(EM_DIAGRAM):   end;
1278972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278973   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1278974   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278975   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278976   +   end;
MPRINT(EM_DIAGRAM):   end;
1278977   +end;
MPRINT(EM_DIAGRAM):   end;
1278978   +
1278979   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1278980   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1278981   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1278982   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1278983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278985   +end;
MPRINT(EM_DIAGRAM):   end;
1278986   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278987   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278988   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1278989   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278990   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278991   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1278992   +   end;
MPRINT(EM_DIAGRAM):   end;
1278993   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278994   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1278995   +   end;
MPRINT(EM_DIAGRAM):   end;
1278996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278997   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1278998   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278999   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279000   +   end;
MPRINT(EM_DIAGRAM):   end;
1279001   +end;
MPRINT(EM_DIAGRAM):   end;
1279002   +
1279003   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1279004   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1279005   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1279006   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1279007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279009   +end;
MPRINT(EM_DIAGRAM):   end;
1279010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279011   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279012   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1279013   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279014   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1279015   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1279016   +   end;
MPRINT(EM_DIAGRAM):   end;
1279017   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1279018   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
The SAS System

1279019   +   end;
MPRINT(EM_DIAGRAM):   end;
1279020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279021   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1279022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279024   +   end;
MPRINT(EM_DIAGRAM):   end;
1279025   +end;
MPRINT(EM_DIAGRAM):   end;
1279026   +
1279027   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1279028   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1279029   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1279030   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1279031   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1279032   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1279033   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1279034   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1279035   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1279036   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1279037   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1279038   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1279039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279041   +end;
MPRINT(EM_DIAGRAM):   end;
1279042   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279043   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1279044   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1279045   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279046   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1279047   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1279048   +   end;
MPRINT(EM_DIAGRAM):   end;
1279049   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1279050   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1279051   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1279052   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1279053   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1279054   +   end;
MPRINT(EM_DIAGRAM):   end;
1279055   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1279056   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1279057   +   end;
MPRINT(EM_DIAGRAM):   end;
1279058   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1279059   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1279060   +   end;
MPRINT(EM_DIAGRAM):   end;
1279061   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1279062   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1279063   +   end;
MPRINT(EM_DIAGRAM):   end;
1279064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279065   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1279066   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1279067   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1279068   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1279069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279071   +   end;
MPRINT(EM_DIAGRAM):   end;
1279072   +end;
MPRINT(EM_DIAGRAM):   end;
1279073   +
1279074   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1279075   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1279076   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1279077   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1279078   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1279079   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1279080   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1279081   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1279082   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1279083   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1279084   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1279085   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1279086   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1279087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279089   +end;
MPRINT(EM_DIAGRAM):   end;
1279090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279091   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1279092   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1279093   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279094   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1279095   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1279096   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1279097   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1279098   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1279099   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279100   +         end;
MPRINT(EM_DIAGRAM):   end;
1279101   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1279102   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1279103   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1279104   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279105   +            end;
MPRINT(EM_DIAGRAM):   end;
1279106   +         end;
MPRINT(EM_DIAGRAM):   end;
1279107   +      end;
MPRINT(EM_DIAGRAM):   end;
1279108   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1279109   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1279110   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1279111   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279112   +         end;
MPRINT(EM_DIAGRAM):   end;
1279113   +      end;
MPRINT(EM_DIAGRAM):   end;
1279114   +   end;
MPRINT(EM_DIAGRAM):   end;
1279115   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279116   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1279117   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1279118   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279119   +      end;
MPRINT(EM_DIAGRAM):   end;
1279120   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1279121   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1279122   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1279123   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1279124   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1279125   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1279126   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279127   +         end;
MPRINT(EM_DIAGRAM):   end;
1279128   +      end;
MPRINT(EM_DIAGRAM):   end;
1279129   +   end;
MPRINT(EM_DIAGRAM):   end;
1279130   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1279131   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1279132   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1279133   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1279134   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1279135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279137   +   end;
MPRINT(EM_DIAGRAM):   end;
1279138   +end;
MPRINT(EM_DIAGRAM):   end;
1279139   +
1279140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279141   +*** Checking missing input Interval
1279142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1279143   +
1279144   +IF NMISS(
1279145   +   AcceptedCmpTotal ,
1279146   +   Age ,
1279147   +   Frq ,
1279148   +   Income ,
1279149   +   Kidhome ,
1279150   +   Mnt ,
1279151   +   MntFishProducts ,
1279152   +   MntFruits ,
1279153   +   MntGoldProds ,
1279154   +   MntMeatProducts ,
1279155   +   MntSweetProducts ,
1279156   +   MntWines ,
1279157   +   MonthsAsCustomer ,
1279158   +   NumCatalogPurchases ,
1279159   +   NumDealsPurchases ,
1279160   +   NumDistPurchases ,
1279161   +   NumStorePurchases ,
1279162   +   NumWebPurchases ,
1279163   +   NumWebVisitsMonth ,
1279164   +   RFMstat ,
1279165   +   RMntFrq ,
1279166   +   Recency ,
1279167   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1279168   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1279169   +
1279170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279171   +END;
MPRINT(EM_DIAGRAM):   END;
1279172   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279173   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1279174   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279175   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279176   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1279177   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1279178   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1279179   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1279180   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1279181   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1279182   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1279183   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1279184   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1279185   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1279186   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1279187   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1279188   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1279189   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1279190   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1279191   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1279192   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1279193   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1279194   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1279195   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1279196   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1279197   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1279198   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1279199   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1279200   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1279201   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1279202   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1279203   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1279204   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1279205   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1279206   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1279207   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1279208   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1279209   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1279210   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1279211   +END;
MPRINT(EM_DIAGRAM):   END;
1279212   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1279213   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1279214   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1279215   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1279216   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1279217   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1279218   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1279219   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1279220   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1279221   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1279222   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1279223   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1279224   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1279225   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1279226   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1279227   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1279228   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1279229   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1279230   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1279231   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1279232   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1279233   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1279234   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1279235   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1279236   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1279237   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1279238   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1279239   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1279240   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1279241   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1279242   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1279243   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1279244   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1279245   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1279246   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1279247   +   ELSE S_NumCatalogPurchases
1279248   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1279249   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1279250   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1279251   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1279252   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1279253   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1279254   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1279255   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1279256   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1279257   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1279258   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1279259   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1279260   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1279261   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1279262   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1279263   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1279264   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1279265   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1279266   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1279267   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1279268   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1279269   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1279270   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1279271   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1279272   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1279273   +END;
MPRINT(EM_DIAGRAM):   END;
1279274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279275   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1279276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279278   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1279279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279281   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1279282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279283   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279284   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1279285   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1279286   +        S_Income  +     0.48614351216065 * S_Kidhome
1279287   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1279288   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1279289   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1279290   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1279291   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1279292   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1279293   +          +     1.38069708066212 * S_NumDealsPurchases
1279294   +          +     0.18758966496994 * S_NumDistPurchases
1279295   +          +    -0.65306017966122 * S_NumStorePurchases
1279296   +          +    -0.65780154318734 * S_NumWebPurchases
1279297   +          +     1.42347048260615 * S_NumWebVisitsMonth
1279298   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1279299   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1279300   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1279301   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1279302   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1279303   +        S_Income  +     0.50072567449363 * S_Kidhome
1279304   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1279305   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1279306   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1279307   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1279308   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1279309   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1279310   +          +    -0.75291043162386 * S_NumDealsPurchases
1279311   +          +    -0.06780631818187 * S_NumDistPurchases
1279312   +          +     1.03453599373919 * S_NumStorePurchases
1279313   +          +     1.02348906006707 * S_NumWebPurchases
1279314   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1279315   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1279316   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1279317   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1279318   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1279319   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1279320   +        S_Income  +     0.57496607656903 * S_Kidhome
1279321   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1279322   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1279323   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1279324   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1279325   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1279326   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1279327   +          +     0.13431497076806 * S_NumDealsPurchases
1279328   +          +     -0.4516722514278 * S_NumDistPurchases
1279329   +          +     0.08636745161008 * S_NumStorePurchases
1279330   +          +    -0.01091843489919 * S_NumWebPurchases
1279331   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1279332   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1279333   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1279334   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1279335   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1279336   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1279337   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1279338   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1279339   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1279340   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1279341   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1279342   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1279343   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1279344   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1279345   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1279346   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1279347   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1279348   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1279349   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1279350   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1279351   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1279352   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1279353   +          +     0.09616912826117 * Marital_StatusDivorced
1279354   +          +     0.15377557778014 * Marital_StatusMarried
1279355   +          +    -0.20686296055741 * Marital_StatusSingle
1279356   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1279357   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1279358   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1279359   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1279360   +          +    -0.18362421441913 * Marital_StatusDivorced
1279361   +          +     0.14861660317702 * Marital_StatusMarried
1279362   +          +    -0.51051982152027 * Marital_StatusSingle
1279363   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1279364   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1279365   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1279366   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1279367   +          +    -0.65088528624708 * Marital_StatusDivorced
1279368   +          +     1.85383531288095 * Marital_StatusMarried
1279369   +          +    -1.45031245605509 * Marital_StatusSingle
1279370   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1279371   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1279372   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1279373   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1279374   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1279375   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1279376   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1279377   +END;
MPRINT(EM_DIAGRAM):   END;
1279378   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1279379   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1279380   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1279381   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1279382   +END;
MPRINT(EM_DIAGRAM):   END;
1279383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279384   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1279385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279386   +
1279387   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1279388   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1279389   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1279390   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1279391   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1279392   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279393   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1279394   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1279395   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1279396   +end;
MPRINT(EM_DIAGRAM):   end;
1279397   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279398   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1279399   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1279400   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1279401   +   end;
MPRINT(EM_DIAGRAM):   end;
1279402   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1279403   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1279404   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1279405   +   end;
MPRINT(EM_DIAGRAM):   end;
1279406   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279407   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1279408   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1279409   +   end;
MPRINT(EM_DIAGRAM):   end;
1279410   +end;
MPRINT(EM_DIAGRAM):   end;
1279411   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279412   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1279413   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1279414   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1279415   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1279416   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1279417   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1279418   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1279419   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1279420   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1279421   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1279422   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1279423   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1279424   +END;
MPRINT(EM_DIAGRAM):   END;
1279425   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1279426   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1279427   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1279428   +END;
MPRINT(EM_DIAGRAM):   END;
1279429   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1279430   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1279431   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1279432   +END;
MPRINT(EM_DIAGRAM):   END;
1279433   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1279434   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1279435   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1279436   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1279437   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1279438   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1279439   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1279440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279441   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1279442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279443   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1279444   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1279445   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1279446   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1279447   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1279448   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1279449   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1279450   +END;
MPRINT(EM_DIAGRAM):   END;
1279451   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1279452   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1279453   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1279454   +drop
1279455   +H11
1279456   +H12
1279457   +H13
1279458   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1279459   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1279460   +* Renaming variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural3;
1279461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279462   +* Renaming Posterior variables for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural3;
1279463   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279464   +drop Neural3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar1;
1279465   +Neural3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar1 = P_DepVar1;
1279466   +drop Neural3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural3_P_DepVar0;
1279467   +Neural3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural3_P_DepVar0 = P_DepVar0;
1279468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279469   +* Renaming _WARN_ variable for Neural3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural3;
1279470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279471   +length Neural3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural3_WARN_ $4;
1279472   +drop Neural3_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural3_WARN_;
1279473   +Neural3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural3_WARN_ = _WARN_;
1279474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279475   +* Ensmbl26: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Scoring Code of model 3 of 3;
1279476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279477   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279478   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1279479   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1279480   +* NODE: Neural9;
MPRINT(EM_DIAGRAM):   * NODE: Neural9;
1279481   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279482   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1279483   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1279484   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1279485   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1279486   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1279487   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1279488   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1279489   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1279490   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1279491   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1279492   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1279493   +LENGTH _WARN_ $4
1279494   +      F_DepVar  $ 12
1279495   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1279496   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1279497   +
1279498   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1279499   +
1279500   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1279501   +
1279502   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1279503   +
1279504   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1279505   +
1279506   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1279507   +
1279508   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1279509   +
1279510   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1279511   +
1279512   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1279513   +
1279514   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1279515   +
1279516   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1279517   +
1279518   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1279519   +
1279520   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1279521   +
1279522   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1279523   +
1279524   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1279525   +
1279526   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1279527   +
1279528   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1279529   +
1279530   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1279531   +
1279532   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1279533   +
1279534   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1279535   +
1279536   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1279537   +
1279538   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1279539   +
1279540   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1279541   +
1279542   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1279543   +
1279544   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1279545   +
1279546   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1279547   +
1279548   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1279549   +
1279550   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1279551   +
1279552   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1279553   +
1279554   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1279555   +
1279556   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1279557   +
1279558   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1279559   +
1279560   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1279561   +
1279562   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1279563   +
1279564   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1279565   +
1279566   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1279567   +
1279568   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1279569   +
1279570   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1279571   +
1279572   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1279573   +
1279574   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1279575   +
1279576   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1279577   +
1279578   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1279579   +
1279580   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1279581   +
1279582   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1279583   +
1279584   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1279585   +
1279586   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1279587   +
1279588   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1279589   +
1279590   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1279591   +
1279592   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1279593   +
1279594   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1279595   +
1279596   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1279597   +
1279598   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1279599   +
1279600   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1279601   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1279602   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1279603   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1279604   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279606   +end;
MPRINT(EM_DIAGRAM):   end;
1279607   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279608   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279609   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1279610   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279611   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279612   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1279613   +   end;
MPRINT(EM_DIAGRAM):   end;
1279614   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279615   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1279616   +   end;
MPRINT(EM_DIAGRAM):   end;
1279617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279618   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1279619   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279620   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279621   +   end;
MPRINT(EM_DIAGRAM):   end;
1279622   +end;
MPRINT(EM_DIAGRAM):   end;
1279623   +
1279624   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1279625   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1279626   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1279627   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1279628   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279629   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279630   +end;
MPRINT(EM_DIAGRAM):   end;
1279631   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279632   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279633   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1279634   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279635   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279636   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1279637   +   end;
MPRINT(EM_DIAGRAM):   end;
1279638   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279639   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1279640   +   end;
MPRINT(EM_DIAGRAM):   end;
1279641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279642   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1279643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279645   +   end;
MPRINT(EM_DIAGRAM):   end;
1279646   +end;
MPRINT(EM_DIAGRAM):   end;
1279647   +
1279648   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1279649   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1279650   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1279651   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1279652   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279653   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279654   +end;
MPRINT(EM_DIAGRAM):   end;
1279655   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279656   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279657   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1279658   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279659   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279660   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1279661   +   end;
MPRINT(EM_DIAGRAM):   end;
1279662   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279663   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1279664   +   end;
MPRINT(EM_DIAGRAM):   end;
1279665   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279666   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1279667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279669   +   end;
MPRINT(EM_DIAGRAM):   end;
1279670   +end;
MPRINT(EM_DIAGRAM):   end;
1279671   +
1279672   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1279673   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1279674   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1279675   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1279676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279678   +end;
MPRINT(EM_DIAGRAM):   end;
1279679   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279681   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1279682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279683   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279684   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1279685   +   end;
MPRINT(EM_DIAGRAM):   end;
1279686   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279687   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1279688   +   end;
MPRINT(EM_DIAGRAM):   end;
1279689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279690   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1279691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279693   +   end;
MPRINT(EM_DIAGRAM):   end;
1279694   +end;
MPRINT(EM_DIAGRAM):   end;
1279695   +
1279696   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1279697   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1279698   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1279699   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1279700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279702   +end;
MPRINT(EM_DIAGRAM):   end;
1279703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279704   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279705   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1279706   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279707   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279708   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1279709   +   end;
MPRINT(EM_DIAGRAM):   end;
1279710   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279711   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1279712   +   end;
MPRINT(EM_DIAGRAM):   end;
1279713   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279714   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1279715   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279716   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279717   +   end;
MPRINT(EM_DIAGRAM):   end;
1279718   +end;
MPRINT(EM_DIAGRAM):   end;
1279719   +
1279720   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1279721   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1279722   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1279723   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1279724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279726   +end;
MPRINT(EM_DIAGRAM):   end;
1279727   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279728   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279729   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1279730   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279731   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279732   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1279733   +   end;
MPRINT(EM_DIAGRAM):   end;
1279734   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279735   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1279736   +   end;
MPRINT(EM_DIAGRAM):   end;
1279737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279738   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1279739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279741   +   end;
MPRINT(EM_DIAGRAM):   end;
1279742   +end;
MPRINT(EM_DIAGRAM):   end;
1279743   +
1279744   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1279745   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1279746   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1279747   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1279748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279750   +end;
MPRINT(EM_DIAGRAM):   end;
1279751   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279752   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279753   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1279754   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279755   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1279756   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1279757   +   end;
MPRINT(EM_DIAGRAM):   end;
1279758   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1279759   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1279760   +   end;
MPRINT(EM_DIAGRAM):   end;
1279761   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279762   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1279763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279765   +   end;
MPRINT(EM_DIAGRAM):   end;
1279766   +end;
MPRINT(EM_DIAGRAM):   end;
1279767   +
1279768   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1279769   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1279770   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1279771   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1279772   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1279773   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1279774   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1279775   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1279776   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1279777   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1279778   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1279779   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1279780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279782   +end;
MPRINT(EM_DIAGRAM):   end;
1279783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279784   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1279785   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1279786   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279787   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1279788   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1279789   +   end;
MPRINT(EM_DIAGRAM):   end;
1279790   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1279791   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1279792   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1279793   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1279794   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1279795   +   end;
MPRINT(EM_DIAGRAM):   end;
1279796   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1279797   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1279798   +   end;
MPRINT(EM_DIAGRAM):   end;
1279799   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1279800   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1279801   +   end;
MPRINT(EM_DIAGRAM):   end;
1279802   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1279803   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1279804   +   end;
MPRINT(EM_DIAGRAM):   end;
1279805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279806   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1279807   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1279808   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1279809   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1279810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279812   +   end;
MPRINT(EM_DIAGRAM):   end;
1279813   +end;
MPRINT(EM_DIAGRAM):   end;
1279814   +
1279815   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1279816   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1279817   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1279818   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1279819   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1279820   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1279821   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1279822   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1279823   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1279824   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1279825   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1279826   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1279827   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1279828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279830   +end;
MPRINT(EM_DIAGRAM):   end;
1279831   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279832   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1279833   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1279834   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279835   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1279836   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1279837   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1279838   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1279839   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1279840   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279841   +         end;
MPRINT(EM_DIAGRAM):   end;
1279842   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1279843   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1279844   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1279845   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279846   +            end;
MPRINT(EM_DIAGRAM):   end;
1279847   +         end;
MPRINT(EM_DIAGRAM):   end;
1279848   +      end;
MPRINT(EM_DIAGRAM):   end;
1279849   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1279850   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1279851   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1279852   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279853   +         end;
MPRINT(EM_DIAGRAM):   end;
1279854   +      end;
MPRINT(EM_DIAGRAM):   end;
1279855   +   end;
MPRINT(EM_DIAGRAM):   end;
1279856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279857   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1279858   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1279859   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279860   +      end;
MPRINT(EM_DIAGRAM):   end;
1279861   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1279862   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1279863   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1279864   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1279865   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1279866   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1279867   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279868   +         end;
MPRINT(EM_DIAGRAM):   end;
1279869   +      end;
MPRINT(EM_DIAGRAM):   end;
1279870   +   end;
MPRINT(EM_DIAGRAM):   end;
1279871   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1279872   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1279873   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1279874   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1279875   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1279876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279878   +   end;
MPRINT(EM_DIAGRAM):   end;
1279879   +end;
MPRINT(EM_DIAGRAM):   end;
1279880   +
1279881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279882   +*** Checking missing input Interval
1279883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1279884   +
1279885   +IF NMISS(
1279886   +   AcceptedCmpTotal ,
1279887   +   Age ,
1279888   +   Frq ,
1279889   +   Income ,
1279890   +   Kidhome ,
1279891   +   Mnt ,
1279892   +   MntFishProducts ,
1279893   +   MntFruits ,
1279894   +   MntGoldProds ,
1279895   +   MntMeatProducts ,
1279896   +   MntSweetProducts ,
1279897   +   MntWines ,
1279898   +   MonthsAsCustomer ,
1279899   +   NumCatalogPurchases ,
1279900   +   NumDealsPurchases ,
1279901   +   NumDistPurchases ,
1279902   +   NumStorePurchases ,
1279903   +   NumWebPurchases ,
1279904   +   NumWebVisitsMonth ,
1279905   +   RFMstat ,
1279906   +   RMntFrq ,
1279907   +   Recency ,
1279908   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1279909   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1279910   +
1279911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279912   +END;
MPRINT(EM_DIAGRAM):   END;
1279913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279914   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1279915   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279916   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279917   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1279918   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1279919   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1279920   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1279921   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1279922   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1279923   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1279924   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1279925   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1279926   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1279927   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1279928   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1279929   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1279930   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1279931   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1279932   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1279933   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1279934   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1279935   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1279936   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1279937   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1279938   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1279939   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1279940   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1279941   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1279942   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1279943   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1279944   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1279945   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1279946   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1279947   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1279948   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1279949   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1279950   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1279951   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1279952   +END;
MPRINT(EM_DIAGRAM):   END;
1279953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1279954   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1279955   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1279956   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1279957   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1279958   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1279959   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1279960   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1279961   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1279962   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1279963   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1279964   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1279965   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1279966   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1279967   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1279968   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1279969   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1279970   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1279971   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1279972   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1279973   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1279974   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1279975   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1279976   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1279977   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1279978   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1279979   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1279980   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1279981   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1279982   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1279983   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1279984   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1279985   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1279986   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1279987   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1279988   +   ELSE S_NumCatalogPurchases
1279989   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1279990   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1279991   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1279992   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1279993   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1279994   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1279995   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1279996   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1279997   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1279998   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1279999   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1280000   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1280001   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1280002   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1280003   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1280004   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1280005   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1280006   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1280007   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1280008   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1280009   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1280010   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1280011   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1280012   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1280013   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1280014   +END;
MPRINT(EM_DIAGRAM):   END;
1280015   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280016   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1280017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280019   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1280020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280022   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1280023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280024   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280025   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1280026   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1280027   +        S_Income  +     -0.0761121347886 * S_Kidhome
1280028   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1280029   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1280030   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1280031   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1280032   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1280033   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1280034   +          +     0.83893684194413 * S_NumDealsPurchases
1280035   +          +     0.23391006875291 * S_NumDistPurchases
1280036   +          +    -0.63370705462074 * S_NumStorePurchases
1280037   +          +     -0.9137408014067 * S_NumWebPurchases
1280038   +          +     0.89109351479441 * S_NumWebVisitsMonth
1280039   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1280040   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1280041   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1280042   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1280043   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1280044   +        S_Income  +    -0.43909782819329 * S_Kidhome
1280045   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1280046   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1280047   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1280048   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1280049   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1280050   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1280051   +          +      0.2218973353638 * S_NumDealsPurchases
1280052   +          +      0.0062360950528 * S_NumDistPurchases
1280053   +          +    -0.57621747951002 * S_NumStorePurchases
1280054   +          +    -0.33564890905657 * S_NumWebPurchases
1280055   +          +     0.82482365540301 * S_NumWebVisitsMonth
1280056   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1280057   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1280058   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1280059   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1280060   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1280061   +        S_Income  +    -0.03572236011846 * S_Kidhome
1280062   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1280063   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1280064   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1280065   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1280066   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1280067   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1280068   +          +      -0.174147250062 * S_NumDealsPurchases
1280069   +          +    -0.22921682388864 * S_NumDistPurchases
1280070   +          +     0.41526854684299 * S_NumStorePurchases
1280071   +          +    -0.27675565493519 * S_NumWebPurchases
1280072   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1280073   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1280074   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1280075   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1280076   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1280077   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1280078   +        S_Income  +    -0.04788369327547 * S_Kidhome
1280079   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1280080   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1280081   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1280082   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1280083   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1280084   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1280085   +          +    -0.46022430102423 * S_NumDealsPurchases
1280086   +          +     0.15831339342044 * S_NumDistPurchases
1280087   +          +     0.22480465173719 * S_NumStorePurchases
1280088   +          +     0.44798923484609 * S_NumWebPurchases
1280089   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1280090   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1280091   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1280092   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1280093   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1280094   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1280095   +        S_Income  +     0.53994304261534 * S_Kidhome
1280096   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1280097   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1280098   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1280099   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1280100   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1280101   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1280102   +          +     0.03650267472167 * S_NumDealsPurchases
1280103   +          +    -0.03322709524939 * S_NumDistPurchases
1280104   +          +     -0.0022226424472 * S_NumStorePurchases
1280105   +          +    -0.10131236740674 * S_NumWebPurchases
1280106   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1280107   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1280108   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1280109   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1280110   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1280111   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1280112   +        S_Income  +    -0.52576099429582 * S_Kidhome
1280113   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1280114   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1280115   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1280116   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1280117   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1280118   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1280119   +          +    -0.50209914729324 * S_NumDealsPurchases
1280120   +          +    -0.46217244513696 * S_NumDistPurchases
1280121   +          +      0.1832648560248 * S_NumStorePurchases
1280122   +          +     0.02866153257072 * S_NumWebPurchases
1280123   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1280124   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1280125   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1280126   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1280127   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1280128   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1280129   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1280130   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1280131   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1280132   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1280133   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1280134   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1280135   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1280136   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1280137   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1280138   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1280139   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1280140   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1280141   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1280142   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1280143   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1280144   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1280145   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1280146   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1280147   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1280148   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1280149   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1280150   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1280151   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1280152   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1280153   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1280154   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1280155   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1280156   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1280157   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1280158   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1280159   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1280160   +          +     0.13815069071511 * Marital_StatusDivorced
1280161   +          +      0.0732913060929 * Marital_StatusMarried
1280162   +          +    -0.22858418468746 * Marital_StatusSingle
1280163   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1280164   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1280165   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1280166   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1280167   +          +     0.32909808396509 * Marital_StatusDivorced
1280168   +          +    -0.50160173579004 * Marital_StatusMarried
1280169   +          +     0.57207102211224 * Marital_StatusSingle
1280170   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1280171   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1280172   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1280173   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1280174   +          +    -0.07154493730107 * Marital_StatusDivorced
1280175   +          +     0.29126100051603 * Marital_StatusMarried
1280176   +          +    -0.06936325857004 * Marital_StatusSingle
1280177   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1280178   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1280179   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1280180   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1280181   +          +    -0.05004640872388 * Marital_StatusDivorced
1280182   +          +     0.22197974032974 * Marital_StatusMarried
1280183   +          +    -0.33931504637453 * Marital_StatusSingle
1280184   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1280185   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1280186   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1280187   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1280188   +          +    -0.07748874669478 * Marital_StatusDivorced
1280189   +          +     1.05442281159109 * Marital_StatusMarried
1280190   +          +    -0.67190984038867 * Marital_StatusSingle
1280191   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1280192   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1280193   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1280194   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1280195   +          +    -0.20478208715114 * Marital_StatusDivorced
1280196   +          +    -0.40186383707642 * Marital_StatusMarried
1280197   +          +     0.43474841662774 * Marital_StatusSingle
1280198   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1280199   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1280200   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1280201   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1280202   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1280203   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1280204   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1280205   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1280206   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1280207   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1280208   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1280209   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1280210   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1280211   +END;
MPRINT(EM_DIAGRAM):   END;
1280212   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280213   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1280214   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1280215   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1280216   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1280217   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1280218   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1280219   +END;
MPRINT(EM_DIAGRAM):   END;
1280220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280221   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1280222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280223   +
1280224   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1280225   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1280226   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1280227   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1280228   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1280229   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280230   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1280231   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1280232   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1280233   +end;
MPRINT(EM_DIAGRAM):   end;
1280234   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280235   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1280236   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1280237   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1280238   +   end;
MPRINT(EM_DIAGRAM):   end;
1280239   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1280240   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1280241   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1280242   +   end;
MPRINT(EM_DIAGRAM):   end;
1280243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280244   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1280245   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1280246   +   end;
MPRINT(EM_DIAGRAM):   end;
1280247   +end;
MPRINT(EM_DIAGRAM):   end;
1280248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280249   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1280250   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1280251   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1280252   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1280253   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1280254   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1280255   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1280256   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1280257   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1280258   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1280259   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1280260   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1280261   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1280262   +END;
MPRINT(EM_DIAGRAM):   END;
1280263   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280264   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1280265   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1280266   +END;
MPRINT(EM_DIAGRAM):   END;
1280267   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1280268   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1280269   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1280270   +END;
MPRINT(EM_DIAGRAM):   END;
1280271   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1280272   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1280273   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1280274   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1280275   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1280276   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1280277   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1280278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280279   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1280280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280281   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1280282   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1280283   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1280284   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1280285   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1280286   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1280287   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1280288   +END;
MPRINT(EM_DIAGRAM):   END;
1280289   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1280290   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1280291   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1280292   +drop
1280293   +H11
1280294   +H12
1280295   +H13
1280296   +H14
1280297   +H15
1280298   +H16
1280299   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1280300   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1280301   +* Renaming variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural9;
1280302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280303   +* Renaming Posterior variables for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural9;
1280304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280305   +drop Neural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar1;
1280306   +Neural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar1 = P_DepVar1;
1280307   +drop Neural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural9_P_DepVar0;
1280308   +Neural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural9_P_DepVar0 = P_DepVar0;
1280309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280310   +* Renaming _WARN_ variable for Neural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural9;
1280311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280312   +length Neural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural9_WARN_ $4;
1280313   +drop Neural9_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural9_WARN_;
1280314   +Neural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural9_WARN_ = _WARN_;
1280315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280316   +* Ensmbl26: Maximum Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Maximum Posteriors of 3 models;
1280317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280318   +_psum = 0;
MPRINT(EM_DIAGRAM):   _psum = 0;
1280319   +drop _psum _premainder;
MPRINT(EM_DIAGRAM):   drop _psum _premainder;
1280320   +P_DepVar1 = max(
1280321   +Neural2_P_DepVar1 ,
1280322   +Neural3_P_DepVar1 ,
1280323   +Neural9_P_DepVar1
1280324   +);
MPRINT(EM_DIAGRAM):   P_DepVar1 = max( Neural2_P_DepVar1 , Neural3_P_DepVar1 , 
Neural9_P_DepVar1 );
1280325   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1280326   +if P_DepVar1 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _premainder then do;
1280327   +P_DepVar1 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _premainder;
1280328   +end;
MPRINT(EM_DIAGRAM):   end;
1280329   +_psum + P_DepVar1;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar1;
1280330   +P_DepVar0 = max(
1280331   +Neural2_P_DepVar0 ,
1280332   +Neural3_P_DepVar0 ,
1280333   +Neural9_P_DepVar0
1280334   +);
MPRINT(EM_DIAGRAM):   P_DepVar0 = max( Neural2_P_DepVar0 , Neural3_P_DepVar0 , 
Neural9_P_DepVar0 );
1280335   +_premainder =1 - _psum;
MPRINT(EM_DIAGRAM):   _premainder =1 - _psum;
1280336   +if P_DepVar0 > _premainder then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _premainder then do;
1280337   +P_DepVar0 = _premainder;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _premainder;
1280338   +end;
MPRINT(EM_DIAGRAM):   end;
1280339   +_psum + P_DepVar0;
MPRINT(EM_DIAGRAM):   _psum + P_DepVar0;
1280340   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280341   +* Ensmbl26: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Classification Vars;
1280342   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280343   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1280344   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1280345   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1280346   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1280347   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1280348   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1280349   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1280350   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1280351   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1280352   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1280353   +end;
MPRINT(EM_DIAGRAM):   end;
1280354   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1280355   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1280356   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1280357   +end;
MPRINT(EM_DIAGRAM):   end;
1280358   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1280359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280360   +* Ensmbl26: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Producing Unformatted variable;
1280361   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280362   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1280363   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1280364   +else
1280365   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1280366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280367   +* Ensmbl26: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing _WARN_ Variable;
1280368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280369   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1280370   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1280371   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1280372   +if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1280373   +if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1280374   +if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1280375   +if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL2_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1280376   +if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1280377   +if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1280378   +if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1280379   +if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1280380   +if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1280381   +if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1280382   +if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1280383   +if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1280384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280385   +* Ensmbl26: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing Residual Vars;
1280386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280387   +if
1280388   +F_DepVar NE '1'
1280389   +AND F_DepVar NE '0'
1280390   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1280391   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1280392   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1280393   +end;
MPRINT(EM_DIAGRAM):   end;
1280394   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280395   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1280396   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1280397   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1280398   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1280399   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1280400   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1280401   +END;
MPRINT(EM_DIAGRAM):   END;
1280402   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1280403    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL26_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL2_VALIDATE.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1280404    quit;
1280405    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl26_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl26_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl26_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1280465    filename _pref
1280465  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas";
1280466    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1280467    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural2\EMPUBLISHSCORE.sas.
1280468   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1280469   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1280470   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1280471   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1280472   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1280473   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1280474   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1280475   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1280476   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1280477   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1280478   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1280479   +LENGTH _WARN_ $4
1280480   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1280481   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1280482   +
1280483   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1280484   +
1280485   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1280486   +
1280487   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1280488   +
1280489   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1280490   +
1280491   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1280492   +
1280493   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1280494   +
1280495   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1280496   +
1280497   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1280498   +
1280499   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1280500   +
1280501   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1280502   +
1280503   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1280504   +
1280505   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1280506   +
1280507   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1280508   +
1280509   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1280510   +
1280511   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1280512   +
1280513   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1280514   +
1280515   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1280516   +
1280517   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1280518   +
1280519   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1280520   +
1280521   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1280522   +
1280523   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1280524   +
1280525   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1280526   +
1280527   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1280528   +
1280529   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1280530   +
1280531   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1280532   +
1280533   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1280534   +
1280535   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1280536   +
1280537   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1280538   +
1280539   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1280540   +
1280541   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1280542   +
1280543   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1280544   +
1280545   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1280546   +
1280547   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1280548   +
1280549   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1280550   +
1280551   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1280552   +
1280553   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1280554   +
1280555   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1280556   +
1280557   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1280558   +
1280559   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1280560   +
1280561   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1280562   +
1280563   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1280564   +
1280565   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1280566   +
1280567   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1280568   +
1280569   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1280570   +
1280571   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1280572   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1280573   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1280574   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1280575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280577   +end;
MPRINT(EM_DIAGRAM):   end;
1280578   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1280580   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1280581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280582   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1280583   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1280584   +   end;
MPRINT(EM_DIAGRAM):   end;
1280585   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1280586   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1280587   +   end;
MPRINT(EM_DIAGRAM):   end;
1280588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280589   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1280590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280592   +   end;
MPRINT(EM_DIAGRAM):   end;
1280593   +end;
MPRINT(EM_DIAGRAM):   end;
1280594   +
1280595   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1280596   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1280597   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1280598   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1280599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280601   +end;
MPRINT(EM_DIAGRAM):   end;
1280602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280603   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1280604   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1280605   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280606   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1280607   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1280608   +   end;
MPRINT(EM_DIAGRAM):   end;
1280609   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1280610   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1280611   +   end;
MPRINT(EM_DIAGRAM):   end;
1280612   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280613   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1280614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280616   +   end;
MPRINT(EM_DIAGRAM):   end;
1280617   +end;
MPRINT(EM_DIAGRAM):   end;
1280618   +
1280619   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1280620   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1280621   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1280622   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1280623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280625   +end;
MPRINT(EM_DIAGRAM):   end;
1280626   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1280628   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1280629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280630   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1280631   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1280632   +   end;
MPRINT(EM_DIAGRAM):   end;
1280633   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1280634   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1280635   +   end;
MPRINT(EM_DIAGRAM):   end;
1280636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280637   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1280638   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280639   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280640   +   end;
MPRINT(EM_DIAGRAM):   end;
1280641   +end;
MPRINT(EM_DIAGRAM):   end;
1280642   +
1280643   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1280644   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1280645   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1280646   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1280647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280649   +end;
MPRINT(EM_DIAGRAM):   end;
1280650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280651   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1280652   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1280653   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280654   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1280655   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1280656   +   end;
MPRINT(EM_DIAGRAM):   end;
1280657   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1280658   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1280659   +   end;
MPRINT(EM_DIAGRAM):   end;
1280660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280661   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1280662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280664   +   end;
MPRINT(EM_DIAGRAM):   end;
1280665   +end;
MPRINT(EM_DIAGRAM):   end;
1280666   +
1280667   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1280668   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1280669   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1280670   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1280671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280673   +end;
MPRINT(EM_DIAGRAM):   end;
1280674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1280676   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1280677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280678   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1280679   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1280680   +   end;
MPRINT(EM_DIAGRAM):   end;
1280681   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1280682   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1280683   +   end;
MPRINT(EM_DIAGRAM):   end;
1280684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280685   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1280686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280688   +   end;
MPRINT(EM_DIAGRAM):   end;
1280689   +end;
MPRINT(EM_DIAGRAM):   end;
1280690   +
1280691   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1280692   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1280693   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1280694   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1280695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280697   +end;
MPRINT(EM_DIAGRAM):   end;
1280698   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1280700   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1280701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280702   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1280703   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1280704   +   end;
MPRINT(EM_DIAGRAM):   end;
1280705   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1280706   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1280707   +   end;
MPRINT(EM_DIAGRAM):   end;
1280708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280709   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1280710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280712   +   end;
MPRINT(EM_DIAGRAM):   end;
1280713   +end;
MPRINT(EM_DIAGRAM):   end;
1280714   +
1280715   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1280716   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1280717   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1280718   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1280719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280721   +end;
MPRINT(EM_DIAGRAM):   end;
1280722   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1280724   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1280725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280726   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1280727   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1280728   +   end;
MPRINT(EM_DIAGRAM):   end;
1280729   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1280730   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1280731   +   end;
MPRINT(EM_DIAGRAM):   end;
1280732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280733   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1280734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280736   +   end;
MPRINT(EM_DIAGRAM):   end;
1280737   +end;
MPRINT(EM_DIAGRAM):   end;
1280738   +
1280739   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1280740   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1280741   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1280742   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1280743   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1280744   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1280745   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1280746   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1280747   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1280748   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1280749   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1280750   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1280751   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280753   +end;
MPRINT(EM_DIAGRAM):   end;
1280754   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280755   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1280756   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1280757   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280758   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1280759   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1280760   +   end;
MPRINT(EM_DIAGRAM):   end;
1280761   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1280762   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1280763   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1280764   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1280765   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1280766   +   end;
MPRINT(EM_DIAGRAM):   end;
1280767   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1280768   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1280769   +   end;
MPRINT(EM_DIAGRAM):   end;
1280770   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1280771   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1280772   +   end;
MPRINT(EM_DIAGRAM):   end;
1280773   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1280774   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1280775   +   end;
MPRINT(EM_DIAGRAM):   end;
1280776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280777   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1280778   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1280779   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1280780   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1280781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280783   +   end;
MPRINT(EM_DIAGRAM):   end;
1280784   +end;
MPRINT(EM_DIAGRAM):   end;
1280785   +
1280786   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1280787   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1280788   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1280789   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1280790   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1280791   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1280792   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1280793   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1280794   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1280795   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1280796   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1280797   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1280798   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1280799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1280800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280801   +end;
MPRINT(EM_DIAGRAM):   end;
1280802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280803   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1280804   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1280805   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280806   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1280807   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1280808   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1280809   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1280810   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1280811   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1280812   +         end;
MPRINT(EM_DIAGRAM):   end;
1280813   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1280814   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1280815   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1280816   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1280817   +            end;
MPRINT(EM_DIAGRAM):   end;
1280818   +         end;
MPRINT(EM_DIAGRAM):   end;
1280819   +      end;
MPRINT(EM_DIAGRAM):   end;
1280820   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1280821   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1280822   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1280823   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1280824   +         end;
MPRINT(EM_DIAGRAM):   end;
1280825   +      end;
MPRINT(EM_DIAGRAM):   end;
1280826   +   end;
MPRINT(EM_DIAGRAM):   end;
1280827   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280828   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1280829   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1280830   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1280831   +      end;
MPRINT(EM_DIAGRAM):   end;
1280832   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1280833   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1280834   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1280835   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1280836   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1280837   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1280838   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1280839   +         end;
MPRINT(EM_DIAGRAM):   end;
1280840   +      end;
MPRINT(EM_DIAGRAM):   end;
1280841   +   end;
MPRINT(EM_DIAGRAM):   end;
1280842   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1280843   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1280844   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1280845   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1280846   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1280847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1280848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280849   +   end;
MPRINT(EM_DIAGRAM):   end;
1280850   +end;
MPRINT(EM_DIAGRAM):   end;
1280851   +
1280852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280853   +*** Checking missing input Interval
1280854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1280855   +
1280856   +IF NMISS(
1280857   +   AcceptedCmpTotal ,
1280858   +   Age ,
1280859   +   Frq ,
1280860   +   Income ,
1280861   +   Kidhome ,
1280862   +   Mnt ,
1280863   +   MntFishProducts ,
1280864   +   MntFruits ,
1280865   +   MntGoldProds ,
1280866   +   MntMeatProducts ,
1280867   +   MntSweetProducts ,
1280868   +   MntWines ,
1280869   +   MonthsAsCustomer ,
1280870   +   NumCatalogPurchases ,
1280871   +   NumDealsPurchases ,
1280872   +   NumDistPurchases ,
1280873   +   NumStorePurchases ,
1280874   +   NumWebPurchases ,
1280875   +   NumWebVisitsMonth ,
1280876   +   RFMstat ,
1280877   +   RMntFrq ,
1280878   +   Recency ,
1280879   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1280880   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1280881   +
1280882   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1280883   +END;
MPRINT(EM_DIAGRAM):   END;
1280884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280885   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1280886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280888   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1280889   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1280890   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1280891   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1280892   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1280893   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1280894   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1280895   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1280896   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1280897   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1280898   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1280899   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1280900   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1280901   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1280902   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1280903   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1280904   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1280905   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1280906   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1280907   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1280908   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1280909   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1280910   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1280911   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1280912   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1280913   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1280914   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1280915   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1280916   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1280917   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1280918   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1280919   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1280920   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1280921   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1280922   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1280923   +END;
MPRINT(EM_DIAGRAM):   END;
1280924   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280925   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1280926   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1280927   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1280928   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1280929   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1280930   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1280931   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1280932   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1280933   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1280934   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1280935   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1280936   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1280937   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1280938   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1280939   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1280940   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1280941   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1280942   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1280943   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1280944   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1280945   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1280946   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1280947   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1280948   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1280949   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1280950   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1280951   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1280952   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1280953   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1280954   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1280955   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1280956   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1280957   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1280958   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1280959   +   ELSE S_NumCatalogPurchases
1280960   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1280961   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1280962   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1280963   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1280964   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1280965   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1280966   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1280967   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1280968   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1280969   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1280970   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1280971   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1280972   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1280973   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1280974   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1280975   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1280976   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1280977   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1280978   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1280979   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1280980   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1280981   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1280982   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1280983   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1280984   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1280985   +END;
MPRINT(EM_DIAGRAM):   END;
1280986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280987   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1280988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280990   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1280991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280993   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1280994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280995   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280996   +   H11  =     0.29712286997834 * S_AcceptedCmpTotal  +     0.15682927566787 *
1280997   +        S_Age  +     0.23365791685845 * S_Frq  +     1.19070222818862 *
1280998   +        S_Income  +    -1.07652572934003 * S_Kidhome
1280999   +          +    -0.33332653884544 * S_Mnt  +     -0.1196291817134 *
1281000   +        S_MntFishProducts  +    -0.05693834390907 * S_MntFruits
1281001   +          +    -0.04894091348569 * S_MntGoldProds  +     0.36709988209272 *
1281002   +        S_MntMeatProducts  +    -0.21921869790385 * S_MntSweetProducts
1281003   +          +    -0.60642239904043 * S_MntWines  +     0.00269864537349 *
1281004   +        S_MonthsAsCustomer  +     0.54303346499176 * S_NumCatalogPurchases
1281005   +          +     0.34217069579861 * S_NumDealsPurchases
1281006   +          +      0.7126550962469 * S_NumDistPurchases
1281007   +          +     0.05810128676346 * S_NumStorePurchases
1281008   +          +     -0.1974592461824 * S_NumWebPurchases
1281009   +          +     1.33855646568468 * S_NumWebVisitsMonth
1281010   +          +    -0.00867312774072 * S_RFMstat  +     1.16131106250766 *
1281011   +        S_RMntFrq  +      -1.575765175986 * S_Recency
1281012   +          +    -0.86597551041595 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.29712286997834 * S_AcceptedCmpTotal + 0.15682927566787 * S_Age + 
0.23365791685845 * S_Frq + 1.19070222818862 * S_Income + -1.07652572934003 * S_Kidhome + 
-0.33332653884544 * S_Mnt + -0.1196291817134 * S_MntFishProducts + -0.05693834390907 * 
S_MntFruits + -0.04894091348569 * S_MntGoldProds + 0.36709988209272 * S_MntMeatProducts + 
-0.21921869790385 * S_MntSweetProducts + -0.60642239904043 * S_MntWines + 0.00269864537349 * 
S_MonthsAsCustomer + 0.54303346499176 * S_NumCatalogPurchases + 0.34217069579861 * 
S_NumDealsPurchases + 0.7126550962469 * S_NumDistPurchases + 0.05810128676346 * 
S_NumStorePurchases + -0.1974592461824 * S_NumWebPurchases + 1.33855646568468 * 
S_NumWebVisitsMonth + -0.00867312774072 * S_RFMstat + 1.16131106250766 * S_RMntFrq + 
-1.575765175986 * S_Recency + -0.86597551041595 * S_Teenhome ;
1281013   +   H12  =     0.31665243267047 * S_AcceptedCmpTotal  +    -0.09124940821631 *
1281014   +        S_Age  +    -0.16072737746014 * S_Frq  +      0.1038384650026 *
1281015   +        S_Income  +    -0.00280376715329 * S_Kidhome
1281016   +          +    -0.62213528239612 * S_Mnt  +    -0.04305309942503 *
1281017   +        S_MntFishProducts  +    -0.24959132224402 * S_MntFruits
1281018   +          +    -0.01371148610726 * S_MntGoldProds  +     0.62558247205775 *
1281019   +        S_MntMeatProducts  +    -0.10439524833374 * S_MntSweetProducts
1281020   +          +     -1.1377432724423 * S_MntWines  +    -0.04956864038898 *
1281021   +        S_MonthsAsCustomer  +     0.66989184148268 * S_NumCatalogPurchases
1281022   +          +     0.45694604326279 * S_NumDealsPurchases
1281023   +          +      0.1555582457419 * S_NumDistPurchases
1281024   +          +     -0.3340268446813 * S_NumStorePurchases
1281025   +          +    -0.39316217683753 * S_NumWebPurchases
1281026   +          +     0.52431656748667 * S_NumWebVisitsMonth
1281027   +          +     0.20727402314383 * S_RFMstat  +     0.70433803286711 *
1281028   +        S_RMntFrq  +    -0.55909695066219 * S_Recency
1281029   +          +    -0.02589465113799 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.31665243267047 * S_AcceptedCmpTotal + -0.09124940821631 * S_Age 
+ -0.16072737746014 * S_Frq + 0.1038384650026 * S_Income + -0.00280376715329 * S_Kidhome + 
-0.62213528239612 * S_Mnt + -0.04305309942503 * S_MntFishProducts + -0.24959132224402 * 
S_MntFruits + -0.01371148610726 * S_MntGoldProds + 0.62558247205775 * S_MntMeatProducts + 
-0.10439524833374 * S_MntSweetProducts + -1.1377432724423 * S_MntWines + -0.04956864038898 * 
S_MonthsAsCustomer + 0.66989184148268 * S_NumCatalogPurchases + 0.45694604326279 * 
S_NumDealsPurchases + 0.1555582457419 * S_NumDistPurchases + -0.3340268446813 * 
S_NumStorePurchases + -0.39316217683753 * S_NumWebPurchases + 0.52431656748667 * 
S_NumWebVisitsMonth + 0.20727402314383 * S_RFMstat + 0.70433803286711 * S_RMntFrq + 
-0.55909695066219 * S_Recency + -0.02589465113799 * S_Teenhome ;
1281030   +   H11  = H11  +     -0.2601649080458 * AcceptedCmp10
1281031   +          +    -0.69535266799466 * AcceptedCmp20  +    -0.58039838698106 *
1281032   +        AcceptedCmp30  +    -0.51789867388634 * AcceptedCmp40
1281033   +          +    -0.28577801943332 * AcceptedCmp50  +    -0.24224458808871 *
1281034   +        Complain0  +     0.22760495991556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.2601649080458 * AcceptedCmp10 + -0.69535266799466 * 
AcceptedCmp20 + -0.58039838698106 * AcceptedCmp30 + -0.51789867388634 * AcceptedCmp40 + 
-0.28577801943332 * AcceptedCmp50 + -0.24224458808871 * Complain0 + 0.22760495991556 * 
HigherEducationBinary0 ;
1281035   +   H12  = H12  +     -0.3622176384122 * AcceptedCmp10
1281036   +          +    -0.33944386002412 * AcceptedCmp20  +    -0.02687563797332 *
1281037   +        AcceptedCmp30  +     0.00421902079715 * AcceptedCmp40
1281038   +          +    -0.12328105393668 * AcceptedCmp50  +    -0.06053338147955 *
1281039   +        Complain0  +    -0.17559776257445 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3622176384122 * AcceptedCmp10 + -0.33944386002412 * 
AcceptedCmp20 + -0.02687563797332 * AcceptedCmp30 + 0.00421902079715 * AcceptedCmp40 + 
-0.12328105393668 * AcceptedCmp50 + -0.06053338147955 * Complain0 + -0.17559776257445 * 
HigherEducationBinary0 ;
1281040   +   H11  = H11  +     0.04102597460729 * Education2n_Cycle
1281041   +          +     0.10315751459359 * EducationBasic  +    -0.09694950452171 *
1281042   +        EducationGraduation  +    -0.33205513178262 * EducationMaster
1281043   +          +     0.46676686502466 * Marital_StatusDivorced
1281044   +          +    -1.27760562209616 * Marital_StatusMarried
1281045   +          +     1.31419230639567 * Marital_StatusSingle
1281046   +          +    -0.94615367007608 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04102597460729 * Education2n_Cycle + 0.10315751459359 * 
EducationBasic + -0.09694950452171 * EducationGraduation + -0.33205513178262 * EducationMaster 
+ 0.46676686502466 * Marital_StatusDivorced + -1.27760562209616 * Marital_StatusMarried + 
1.31419230639567 * Marital_StatusSingle + -0.94615367007608 * Marital_StatusTogether ;
1281047   +   H12  = H12  +     0.04140711456188 * Education2n_Cycle
1281048   +          +     0.00023669301751 * EducationBasic  +      0.0217486986892 *
1281049   +        EducationGraduation  +     0.00743064542151 * EducationMaster
1281050   +          +     0.07434297903639 * Marital_StatusDivorced
1281051   +          +     0.00294493836325 * Marital_StatusMarried
1281052   +          +    -0.00745595849422 * Marital_StatusSingle
1281053   +          +    -0.02426182934399 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04140711456188 * Education2n_Cycle + 0.00023669301751 * 
EducationBasic + 0.0217486986892 * EducationGraduation + 0.00743064542151 * EducationMaster + 
0.07434297903639 * Marital_StatusDivorced + 0.00294493836325 * Marital_StatusMarried + 
-0.00745595849422 * Marital_StatusSingle + -0.02426182934399 * Marital_StatusTogether ;
1281054   +   H11  =    -2.08476947519933 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.08476947519933 + H11 ;
1281055   +   H12  =    -0.67000030345457 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.67000030345457 + H12 ;
1281056   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1281057   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1281058   +END;
MPRINT(EM_DIAGRAM):   END;
1281059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1281060   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1281061   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1281062   +END;
MPRINT(EM_DIAGRAM):   END;
1281063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281064   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1281065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281066   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1281067   +   P_DepVar1  =     5.63200889678434 * H11  +     6.13502549580323 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.63200889678434 * H11 + 6.13502549580323 * H12 ;
1281068   +   P_DepVar1  =     3.20850695873198 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.20850695873198 + P_DepVar1 ;
1281069   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1281070   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1281071   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1281072   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1281073   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1281074   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1281075   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1281076   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1281077   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1281078   +END;
MPRINT(EM_DIAGRAM):   END;
1281079   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1281080   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1281081   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1281082   +END;
MPRINT(EM_DIAGRAM):   END;
1281083   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1281084   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1281085   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1281086   +END;
MPRINT(EM_DIAGRAM):   END;
1281087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281088   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1281089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281090   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1281091   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1281092   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1281093   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1281094   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1281095   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1281096   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1281097   +END;
MPRINT(EM_DIAGRAM):   END;
1281098   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1281099   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1281100   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1281101   +drop
1281102   +H11
1281103   +H12
1281104   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1281105   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1281106    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1281107    quit;
1281108    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1281109    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1281110    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1281111    retain ID 2 Node "Neural2";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural2";
1281112    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1281113    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281114    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1281115    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281117    proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_variableset out=_temp2(keep=NAME CREATOR);
1281118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL2_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281120    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281121    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1281122    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1281123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281124    proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_train out=_meta(keep=NAME) noprint;
1281125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1281126    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1281127    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281128    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281129    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281130    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1281131    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281132    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281133    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1281134    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1281134  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1335 rows and 5 columns.

1281135    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281136    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1281137    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1335 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1335 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281138    filename _pref
1281138  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1281139    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1281140    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1281141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281142   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1281143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281144   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1281145   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1281146   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1281147    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1281148    quit;
1281149    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1281150    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1281151    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1281152    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1281153    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1281154    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281155    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1281156    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281158    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1281159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281161    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281162    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1281163    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1281164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281165    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1281166    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1281167    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1281168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281169    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281170    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281171    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1281172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281173    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281174    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1281175    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1281175  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1281176    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281177    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1281178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281179    filename _pref
1281179  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1281180    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1281181    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1281182   +
1281183   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1281184   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1281184  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1281185   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1281186   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1281187   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1281188   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1281189   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1281190    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1281191    quit;
1281192    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1281193    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1281194    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1281195    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1281196    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1281197    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281198    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1281199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281201    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1281202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281203    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281204    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281205    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1281206    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1281207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281208    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1281209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281210    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1281211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281212    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281213    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281214    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1281215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281216    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281217    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1281218    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1281218  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1281219    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281220    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1281221    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281222    filename _pref
1281222  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1281223    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1281224    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1281225   +
1281226   +
1281227   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1281228   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1281229   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1281230   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1281231   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1281232   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281233   +
1281234   +
1281235   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1281236   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1281237   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1281238   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1281239   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1281240   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281241   +
1281242   +
1281243   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1281244   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1281245   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1281246   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1281247   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1281248   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281249   +
1281250   +
1281251   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1281252   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1281253   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1281254   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1281255   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1281256   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281257   +
1281258   +
1281259   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1281260   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1281261   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1281262   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1281263   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1281264   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281265   +
1281266   +
1281267   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1281268   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1281269   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1281270   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1281271   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1281272   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281273   +
1281274   +
1281275   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1281276   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1281277   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1281278   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1281279   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1281280   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281281   +
1281282   +
1281283   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1281284   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1281285   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1281286   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1281287   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1281288   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1281289   +if
1281290   +_FILTERNORM1 not in ( '.')
1281291   + and
1281292   +_FILTERNORM2 not in ( '.')
1281293   + and
1281294   +_FILTERNORM3 not in ( '.')
1281295   + and
1281296   +_FILTERNORM4 not in ( '.')
1281297   + and
1281298   +_FILTERNORM5 not in ( '.')
1281299   + and
1281300   +_FILTERNORM6 not in ( '.')
1281301   + and
1281302   +_FILTERNORM7 not in ( ' ')
1281303   + and
1281304   +_FILTERNORM8 not in ( ' ')
1281305   +and
1281306   +( Dt_Customer ne .)
1281307   +and ( Income ne . and (Income<=107000))
1281308   +and ( Kidhome ne .)
1281309   +and ( MntFishProducts ne .)
1281310   +and ( MntFruits ne .)
1281311   +and ( MntGoldProds ne .)
1281312   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1281313   +and ( MntSweetProducts ne .)
1281314   +and ( MntWines ne .)
1281315   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1281316   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1281317   +and ( NumStorePurchases ne .)
1281318   +and ( NumWebPurchases ne .)
1281319   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1281320   +and ( Recency ne .)
1281321   +and ( Teenhome ne .)
1281322   +and ( Year_Birth ne .)
1281323   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1281324   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1281325   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1281326   +end;
MPRINT(EM_DIAGRAM):   end;
1281327   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1281328   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1281329    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1281330    quit;
1281331    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1281332    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1281333    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1281334    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1281335    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1281336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281337    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1281338    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281340    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1281341    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281342    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281343    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281344    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1281345    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1281346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281347    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1281348    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1281349    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1281350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281351    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281352    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1281353    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1281354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1281355    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281356    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1281357    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1281357  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1281358    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281359    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1281360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1444 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281361    %macro varDept(fcmpdata=,id=);
1281362    %global nobs&id scoreFlag&id;
1281363    %let scoreFlag&id = 0;
1281364    %if &id=1 or ^&fcmpStart %then %do;
1281365    proc sort data=&fcmpdata out=_temp&id nodupkey;
1281366    by NAME;
1281367    where id=&id and LHS in( %let j=1;
1281368    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1281369    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1281370    "&var" %let j = %eval(&j+1);
1281371    %end;
1281372    );
1281373    run;
1281374    %let dsid = %sysfunc(open(_temp&id));
1281375    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1281376    %let dsid = %sysfunc(close(&dsid));
1281377    %if &&nobs&id %then %do;
1281378    %let scoreFlag&id = 1;
1281379    %let fcmpStart = 1;
1281380    %end;
1281381    %else %let fcmpStart = 0;
1281382    %end;
1281383    %else %do;
1281384    proc sort data=&fcmpdata out=_tempid;
1281385    where id=&id;
1281386    by LHS;
1281387    run;
1281388    %let dsid = %sysfunc(open(_tempid));
1281389    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1281390    %let dsid = %sysfunc(close(&dsid));
1281391    %if ^&&nobs&id %then %do;
1281392    proc datasets lib=work nolist;
1281393    delete _tempid;
1281394    run;
1281395    quit;
1281396    %end;
1281397    %else %do;
1281398    data _tempAll;
1281399    set %let j=%eval(&id-1);
1281400    %do x=1 %to &j;
1281401    %if &&nobs&x %then %do;
1281402    _temp&x %end;
1281403    %end;
1281404    ;
1281405    run;
1281406    proc sql;
1281407    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1281407  ! work._tempid p2 where p.name=p2.lhs;
1281408    quit;
1281409    data _temp&id;
1281410    set _temp&id;
1281411    where LHS ne '' and NAME ne '' and Node ne '';
1281412    run;
1281413    proc datasets lib=work nolist;
1281414    delete _tempAll;
1281415    run;
1281416    %let dsid = %sysfunc(open(_temp&id));
1281417    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1281418    %let dsid = %sysfunc(close(&dsid));
1281419    %if ^&&nobs&id %then %do;
1281420    proc datasets lib=work nolist;
1281421    delete _temp&id;
1281422    run;
1281423    quit;
1281424    %end;
1281425    %else %do;
1281426    %let scoreFlag&id = 1;
1281427    data _temp&id;
1281428    set _temp&id;
1281429    where LHS ne NAME and node ne '';
1281430    run;
1281431    %let dsid = %sysfunc(open(_temp&id));
1281432    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1281433    %let dsid = %sysfunc(close(&dsid));
1281434    %if ^&&nobs&id %then %do;
1281435    proc datasets lib=work nolist;
1281436    delete _temp&id;
1281437    run;
1281438    quit;
1281439    %end;
1281440    %else %do;
1281441    proc sort data=_temp&id nodupkey;
1281442    by LHS NAME;
1281443    run;
1281444    %end;
1281445    %end;
1281446    %end;
1281447    %end;
1281448    %mend varDept;
1281449    %macro optCode(outdata=fcmpdata);
1281450    %global fcmpStart;
1281451    %let fcmpStart = 0;
1281452    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1281453    %let NumNodes=9;
1281454    %do k=1 %to &NumNodes;
1281455    %vardept(fcmpdata=&outdata, id=&k);
1281456    %end;
1281457    %mend optCode;
1281458    %optcode(outData=EMWS8.Ensmbl26_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1281459    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1281460    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1281461    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1281462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281463    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1281464    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1281465    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1281466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1281467    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1281468    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1281468  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1281469    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1281470    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1281471    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1281472    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1281473    filename _pref
1281473  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas";
1281474    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1281475    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural3\EMPUBLISHSCORE.sas.
1281476   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1281477   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1281478   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1281479   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1281480   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1281481   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1281482   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1281483   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1281484   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1281485   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1281486   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1281487   +LENGTH _WARN_ $4
1281488   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1281489   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1281490   +
1281491   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1281492   +
1281493   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1281494   +
1281495   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1281496   +
1281497   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1281498   +
1281499   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1281500   +
1281501   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1281502   +
1281503   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1281504   +
1281505   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1281506   +
1281507   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1281508   +
1281509   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1281510   +
1281511   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1281512   +
1281513   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1281514   +
1281515   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1281516   +
1281517   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1281518   +
1281519   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1281520   +
1281521   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1281522   +
1281523   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1281524   +
1281525   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1281526   +
1281527   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1281528   +
1281529   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1281530   +
1281531   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1281532   +
1281533   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1281534   +
1281535   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1281536   +
1281537   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1281538   +
1281539   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1281540   +
1281541   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1281542   +
1281543   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1281544   +
1281545   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1281546   +
1281547   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1281548   +
1281549   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1281550   +
1281551   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1281552   +
1281553   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1281554   +
1281555   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1281556   +
1281557   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1281558   +
1281559   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1281560   +
1281561   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1281562   +
1281563   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1281564   +
1281565   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1281566   +
1281567   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1281568   +
1281569   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1281570   +
1281571   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1281572   +
1281573   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1281574   +
1281575   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1281576   +
1281577   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1281578   +
1281579   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1281580   +
1281581   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1281582   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1281583   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1281584   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1281585   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281587   +end;
MPRINT(EM_DIAGRAM):   end;
1281588   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281589   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281590   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1281591   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281592   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281593   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1281594   +   end;
MPRINT(EM_DIAGRAM):   end;
1281595   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281596   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1281597   +   end;
MPRINT(EM_DIAGRAM):   end;
1281598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281599   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1281600   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281601   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281602   +   end;
MPRINT(EM_DIAGRAM):   end;
1281603   +end;
MPRINT(EM_DIAGRAM):   end;
1281604   +
1281605   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1281606   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1281607   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1281608   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1281609   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281610   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281611   +end;
MPRINT(EM_DIAGRAM):   end;
1281612   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281613   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281614   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1281615   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281616   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281617   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1281618   +   end;
MPRINT(EM_DIAGRAM):   end;
1281619   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281620   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1281621   +   end;
MPRINT(EM_DIAGRAM):   end;
1281622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281623   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1281624   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281625   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281626   +   end;
MPRINT(EM_DIAGRAM):   end;
1281627   +end;
MPRINT(EM_DIAGRAM):   end;
1281628   +
1281629   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1281630   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1281631   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1281632   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1281633   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281634   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281635   +end;
MPRINT(EM_DIAGRAM):   end;
1281636   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281637   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281638   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1281639   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281640   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281641   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1281642   +   end;
MPRINT(EM_DIAGRAM):   end;
1281643   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281644   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1281645   +   end;
MPRINT(EM_DIAGRAM):   end;
1281646   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281647   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1281648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281650   +   end;
MPRINT(EM_DIAGRAM):   end;
1281651   +end;
MPRINT(EM_DIAGRAM):   end;
1281652   +
1281653   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1281654   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1281655   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1281656   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1281657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281659   +end;
MPRINT(EM_DIAGRAM):   end;
1281660   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281662   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1281663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281664   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281665   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1281666   +   end;
MPRINT(EM_DIAGRAM):   end;
1281667   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281668   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1281669   +   end;
MPRINT(EM_DIAGRAM):   end;
1281670   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281671   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1281672   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281673   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281674   +   end;
MPRINT(EM_DIAGRAM):   end;
1281675   +end;
MPRINT(EM_DIAGRAM):   end;
1281676   +
1281677   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1281678   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1281679   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1281680   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1281681   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281682   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281683   +end;
MPRINT(EM_DIAGRAM):   end;
1281684   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281685   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281686   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1281687   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281688   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281689   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1281690   +   end;
MPRINT(EM_DIAGRAM):   end;
1281691   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281692   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1281693   +   end;
MPRINT(EM_DIAGRAM):   end;
1281694   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281695   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1281696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281698   +   end;
MPRINT(EM_DIAGRAM):   end;
1281699   +end;
MPRINT(EM_DIAGRAM):   end;
1281700   +
1281701   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1281702   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1281703   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1281704   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1281705   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281706   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281707   +end;
MPRINT(EM_DIAGRAM):   end;
1281708   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281709   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281710   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1281711   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281712   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281713   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1281714   +   end;
MPRINT(EM_DIAGRAM):   end;
1281715   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281716   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1281717   +   end;
MPRINT(EM_DIAGRAM):   end;
1281718   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281719   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1281720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281722   +   end;
MPRINT(EM_DIAGRAM):   end;
1281723   +end;
MPRINT(EM_DIAGRAM):   end;
1281724   +
1281725   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1281726   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1281727   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1281728   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1281729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281731   +end;
MPRINT(EM_DIAGRAM):   end;
1281732   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281734   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1281735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281736   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1281737   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1281738   +   end;
MPRINT(EM_DIAGRAM):   end;
1281739   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1281740   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1281741   +   end;
MPRINT(EM_DIAGRAM):   end;
1281742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281743   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1281744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281746   +   end;
MPRINT(EM_DIAGRAM):   end;
1281747   +end;
MPRINT(EM_DIAGRAM):   end;
1281748   +
1281749   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1281750   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1281751   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1281752   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1281753   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1281754   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1281755   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1281756   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1281757   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1281758   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1281759   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1281760   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1281761   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281762   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281763   +end;
MPRINT(EM_DIAGRAM):   end;
1281764   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281765   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1281766   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1281767   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281768   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1281769   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1281770   +   end;
MPRINT(EM_DIAGRAM):   end;
1281771   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1281772   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1281773   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1281774   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1281775   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1281776   +   end;
MPRINT(EM_DIAGRAM):   end;
1281777   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1281778   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1281779   +   end;
MPRINT(EM_DIAGRAM):   end;
1281780   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1281781   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1281782   +   end;
MPRINT(EM_DIAGRAM):   end;
1281783   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1281784   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1281785   +   end;
MPRINT(EM_DIAGRAM):   end;
1281786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281787   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1281788   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1281789   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1281790   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1281791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281793   +   end;
MPRINT(EM_DIAGRAM):   end;
1281794   +end;
MPRINT(EM_DIAGRAM):   end;
1281795   +
1281796   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1281797   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1281798   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1281799   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1281800   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1281801   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1281802   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1281803   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1281804   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1281805   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1281806   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1281807   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1281808   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1281809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281811   +end;
MPRINT(EM_DIAGRAM):   end;
1281812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281813   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1281814   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1281815   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281816   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1281817   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1281818   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1281819   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1281820   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1281821   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281822   +         end;
MPRINT(EM_DIAGRAM):   end;
1281823   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1281824   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1281825   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1281826   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281827   +            end;
MPRINT(EM_DIAGRAM):   end;
1281828   +         end;
MPRINT(EM_DIAGRAM):   end;
1281829   +      end;
MPRINT(EM_DIAGRAM):   end;
1281830   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1281831   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1281832   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1281833   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281834   +         end;
MPRINT(EM_DIAGRAM):   end;
1281835   +      end;
MPRINT(EM_DIAGRAM):   end;
1281836   +   end;
MPRINT(EM_DIAGRAM):   end;
1281837   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281838   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1281839   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1281840   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281841   +      end;
MPRINT(EM_DIAGRAM):   end;
1281842   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1281843   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1281844   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1281845   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1281846   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1281847   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1281848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281849   +         end;
MPRINT(EM_DIAGRAM):   end;
1281850   +      end;
MPRINT(EM_DIAGRAM):   end;
1281851   +   end;
MPRINT(EM_DIAGRAM):   end;
1281852   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1281853   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1281854   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1281855   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1281856   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1281857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281859   +   end;
MPRINT(EM_DIAGRAM):   end;
1281860   +end;
MPRINT(EM_DIAGRAM):   end;
1281861   +
1281862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281863   +*** Checking missing input Interval
1281864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1281865   +
1281866   +IF NMISS(
1281867   +   AcceptedCmpTotal ,
1281868   +   Age ,
1281869   +   Frq ,
1281870   +   Income ,
1281871   +   Kidhome ,
1281872   +   Mnt ,
1281873   +   MntFishProducts ,
1281874   +   MntFruits ,
1281875   +   MntGoldProds ,
1281876   +   MntMeatProducts ,
1281877   +   MntSweetProducts ,
1281878   +   MntWines ,
1281879   +   MonthsAsCustomer ,
1281880   +   NumCatalogPurchases ,
1281881   +   NumDealsPurchases ,
1281882   +   NumDistPurchases ,
1281883   +   NumStorePurchases ,
1281884   +   NumWebPurchases ,
1281885   +   NumWebVisitsMonth ,
1281886   +   RFMstat ,
1281887   +   RMntFrq ,
1281888   +   Recency ,
1281889   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1281890   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1281891   +
1281892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281893   +END;
MPRINT(EM_DIAGRAM):   END;
1281894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281895   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1281896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281897   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1281898   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1281899   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1281900   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1281901   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1281902   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1281903   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1281904   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1281905   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1281906   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1281907   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1281908   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1281909   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1281910   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1281911   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1281912   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1281913   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1281914   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1281915   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1281916   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1281917   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1281918   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1281919   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1281920   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1281921   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1281922   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1281923   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1281924   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1281925   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1281926   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1281927   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1281928   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1281929   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1281930   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1281931   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1281932   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1281933   +END;
MPRINT(EM_DIAGRAM):   END;
1281934   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1281935   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1281936   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1281937   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1281938   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1281939   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1281940   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1281941   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1281942   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1281943   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1281944   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1281945   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1281946   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1281947   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1281948   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1281949   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1281950   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1281951   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1281952   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1281953   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1281954   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1281955   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1281956   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1281957   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1281958   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1281959   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1281960   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1281961   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1281962   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1281963   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1281964   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1281965   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1281966   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1281967   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1281968   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1281969   +   ELSE S_NumCatalogPurchases
1281970   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1281971   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1281972   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1281973   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1281974   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1281975   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1281976   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1281977   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1281978   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1281979   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1281980   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1281981   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1281982   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1281983   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1281984   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1281985   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1281986   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1281987   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1281988   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1281989   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1281990   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1281991   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1281992   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1281993   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1281994   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1281995   +END;
MPRINT(EM_DIAGRAM):   END;
1281996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281997   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1281998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282000   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1282001   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282003   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1282004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282005   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282006   +   H11  =     0.80580599758828 * S_AcceptedCmpTotal  +    -0.20439898580437 *
1282007   +        S_Age  +     0.05865035632173 * S_Frq  +     0.35752372652995 *
1282008   +        S_Income  +     0.48614351216065 * S_Kidhome
1282009   +          +     -0.1747641480344 * S_Mnt  +     0.01575775403439 *
1282010   +        S_MntFishProducts  +    -0.38201490870585 * S_MntFruits
1282011   +          +    -0.05580975774246 * S_MntGoldProds  +     1.09721567184869 *
1282012   +        S_MntMeatProducts  +    -0.13227791819319 * S_MntSweetProducts
1282013   +          +    -1.10701810096598 * S_MntWines  +     0.20854938667936 *
1282014   +        S_MonthsAsCustomer  +     1.07538229088114 * S_NumCatalogPurchases
1282015   +          +     1.38069708066212 * S_NumDealsPurchases
1282016   +          +     0.18758966496994 * S_NumDistPurchases
1282017   +          +    -0.65306017966122 * S_NumStorePurchases
1282018   +          +    -0.65780154318734 * S_NumWebPurchases
1282019   +          +     1.42347048260615 * S_NumWebVisitsMonth
1282020   +          +      0.7433518928188 * S_RFMstat  +     0.14860840574393 *
1282021   +        S_RMntFrq  +    -0.94596110554056 * S_Recency
1282022   +          +     0.06338271932444 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.80580599758828 * S_AcceptedCmpTotal + -0.20439898580437 * S_Age 
+ 0.05865035632173 * S_Frq + 0.35752372652995 * S_Income + 0.48614351216065 * S_Kidhome + 
-0.1747641480344 * S_Mnt + 0.01575775403439 * S_MntFishProducts + -0.38201490870585 * 
S_MntFruits + -0.05580975774246 * S_MntGoldProds + 1.09721567184869 * S_MntMeatProducts + 
-0.13227791819319 * S_MntSweetProducts + -1.10701810096598 * S_MntWines + 0.20854938667936 * 
S_MonthsAsCustomer + 1.07538229088114 * S_NumCatalogPurchases + 1.38069708066212 * 
S_NumDealsPurchases + 0.18758966496994 * S_NumDistPurchases + -0.65306017966122 * 
S_NumStorePurchases + -0.65780154318734 * S_NumWebPurchases + 1.42347048260615 * 
S_NumWebVisitsMonth + 0.7433518928188 * S_RFMstat + 0.14860840574393 * S_RMntFrq + 
-0.94596110554056 * S_Recency + 0.06338271932444 * S_Teenhome ;
1282023   +   H12  =    -0.95250648389067 * S_AcceptedCmpTotal  +     0.00781145364918 *
1282024   +        S_Age  +     0.27693667522426 * S_Frq  +    -0.44422940279858 *
1282025   +        S_Income  +     0.50072567449363 * S_Kidhome
1282026   +          +     0.16426609438465 * S_Mnt  +     0.90735360020692 *
1282027   +        S_MntFishProducts  +    -0.10280436633296 * S_MntFruits
1282028   +          +      -0.172427737402 * S_MntGoldProds  +    -1.57830143431967 *
1282029   +        S_MntMeatProducts  +    -0.49111039017578 * S_MntSweetProducts
1282030   +          +     0.60032626047049 * S_MntWines  +      0.2471946896739 *
1282031   +        S_MonthsAsCustomer  +    -0.89033290398106 * S_NumCatalogPurchases
1282032   +          +    -0.75291043162386 * S_NumDealsPurchases
1282033   +          +    -0.06780631818187 * S_NumDistPurchases
1282034   +          +     1.03453599373919 * S_NumStorePurchases
1282035   +          +     1.02348906006707 * S_NumWebPurchases
1282036   +          +    -1.28963718583136 * S_NumWebVisitsMonth
1282037   +          +    -0.28437040883974 * S_RFMstat  +     0.13305006522815 *
1282038   +        S_RMntFrq  +     1.57678875777412 * S_Recency
1282039   +          +     0.37259077233644 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.95250648389067 * S_AcceptedCmpTotal + 0.00781145364918 * S_Age 
+ 0.27693667522426 * S_Frq + -0.44422940279858 * S_Income + 0.50072567449363 * S_Kidhome + 
0.16426609438465 * S_Mnt + 0.90735360020692 * S_MntFishProducts + -0.10280436633296 * 
S_MntFruits + -0.172427737402 * S_MntGoldProds + -1.57830143431967 * S_MntMeatProducts + 
-0.49111039017578 * S_MntSweetProducts + 0.60032626047049 * S_MntWines + 0.2471946896739 * 
S_MonthsAsCustomer + -0.89033290398106 * S_NumCatalogPurchases + -0.75291043162386 * 
S_NumDealsPurchases + -0.06780631818187 * S_NumDistPurchases + 1.03453599373919 * 
S_NumStorePurchases + 1.02348906006707 * S_NumWebPurchases + -1.28963718583136 * 
S_NumWebVisitsMonth + -0.28437040883974 * S_RFMstat + 0.13305006522815 * S_RMntFrq + 
1.57678875777412 * S_Recency + 0.37259077233644 * S_Teenhome ;
1282040   +   H13  =    -0.15934537040899 * S_AcceptedCmpTotal  +    -0.18908743508071 *
1282041   +        S_Age  +    -0.21049405570619 * S_Frq  +    -1.13478522535816 *
1282042   +        S_Income  +     0.57496607656903 * S_Kidhome
1282043   +          +     0.24039633053683 * S_Mnt  +    -0.12111845985793 *
1282044   +        S_MntFishProducts  +     0.18932758935406 * S_MntFruits
1282045   +          +      0.0282001773792 * S_MntGoldProds  +    -0.34135136526975 *
1282046   +        S_MntMeatProducts  +      0.3048511351264 * S_MntSweetProducts
1282047   +          +     0.34934932685263 * S_MntWines  +     -0.2282334455458 *
1282048   +        S_MonthsAsCustomer  +    -0.61139042080723 * S_NumCatalogPurchases
1282049   +          +     0.13431497076806 * S_NumDealsPurchases
1282050   +          +     -0.4516722514278 * S_NumDistPurchases
1282051   +          +     0.08636745161008 * S_NumStorePurchases
1282052   +          +    -0.01091843489919 * S_NumWebPurchases
1282053   +          +    -0.67680105332226 * S_NumWebVisitsMonth
1282054   +          +     0.06960881208574 * S_RFMstat  +    -0.40844599827715 *
1282055   +        S_RMntFrq  +     1.43664973786717 * S_Recency
1282056   +          +     0.89586482279711 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.15934537040899 * S_AcceptedCmpTotal + -0.18908743508071 * S_Age 
+ -0.21049405570619 * S_Frq + -1.13478522535816 * S_Income + 0.57496607656903 * S_Kidhome + 
0.24039633053683 * S_Mnt + -0.12111845985793 * S_MntFishProducts + 0.18932758935406 * 
S_MntFruits + 0.0282001773792 * S_MntGoldProds + -0.34135136526975 * S_MntMeatProducts + 
0.3048511351264 * S_MntSweetProducts + 0.34934932685263 * S_MntWines + -0.2282334455458 * 
S_MonthsAsCustomer + -0.61139042080723 * S_NumCatalogPurchases + 0.13431497076806 * 
S_NumDealsPurchases + -0.4516722514278 * S_NumDistPurchases + 0.08636745161008 * 
S_NumStorePurchases + -0.01091843489919 * S_NumWebPurchases + -0.67680105332226 * 
S_NumWebVisitsMonth + 0.06960881208574 * S_RFMstat + -0.40844599827715 * S_RMntFrq + 
1.43664973786717 * S_Recency + 0.89586482279711 * S_Teenhome ;
1282057   +   H11  = H11  +     -0.6416671004655 * AcceptedCmp10
1282058   +          +     0.01492041108634 * AcceptedCmp20  +    -0.91114347887192 *
1282059   +        AcceptedCmp30  +    -0.20710365118058 * AcceptedCmp40
1282060   +          +    -0.11794134499267 * AcceptedCmp50  +     0.09288714621262 *
1282061   +        Complain0  +    -0.52243814822483 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.6416671004655 * AcceptedCmp10 + 0.01492041108634 * 
AcceptedCmp20 + -0.91114347887192 * AcceptedCmp30 + -0.20710365118058 * AcceptedCmp40 + 
-0.11794134499267 * AcceptedCmp50 + 0.09288714621262 * Complain0 + -0.52243814822483 * 
HigherEducationBinary0 ;
1282062   +   H12  = H12  +     0.24751093651686 * AcceptedCmp10
1282063   +          +     0.07782559575868 * AcceptedCmp20  +    -0.31714859220477 *
1282064   +        AcceptedCmp30  +    -0.04651262852266 * AcceptedCmp40
1282065   +          +     1.12079204972473 * AcceptedCmp50  +     0.01995812214945 *
1282066   +        Complain0  +    -0.10554781512031 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.24751093651686 * AcceptedCmp10 + 0.07782559575868 * 
AcceptedCmp20 + -0.31714859220477 * AcceptedCmp30 + -0.04651262852266 * AcceptedCmp40 + 
1.12079204972473 * AcceptedCmp50 + 0.01995812214945 * Complain0 + -0.10554781512031 * 
HigherEducationBinary0 ;
1282067   +   H13  = H13  +     0.24429915728404 * AcceptedCmp10
1282068   +          +     0.61295080768552 * AcceptedCmp20  +     0.44102169319186 *
1282069   +        AcceptedCmp30  +     0.47980251068529 * AcceptedCmp40
1282070   +          +     0.10988021992419 * AcceptedCmp50  +     0.28313602324535 *
1282071   +        Complain0  +    -0.23261190302425 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.24429915728404 * AcceptedCmp10 + 0.61295080768552 * 
AcceptedCmp20 + 0.44102169319186 * AcceptedCmp30 + 0.47980251068529 * AcceptedCmp40 + 
0.10988021992419 * AcceptedCmp50 + 0.28313602324535 * Complain0 + -0.23261190302425 * 
HigherEducationBinary0 ;
1282072   +   H11  = H11  +     0.01626472365517 * Education2n_Cycle
1282073   +          +     0.14365936599314 * EducationBasic  +      0.3318092181003 *
1282074   +        EducationGraduation  +    -0.04307117865412 * EducationMaster
1282075   +          +     0.09616912826117 * Marital_StatusDivorced
1282076   +          +     0.15377557778014 * Marital_StatusMarried
1282077   +          +    -0.20686296055741 * Marital_StatusSingle
1282078   +          +    -0.02512911479575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01626472365517 * Education2n_Cycle + 0.14365936599314 * 
EducationBasic + 0.3318092181003 * EducationGraduation + -0.04307117865412 * EducationMaster + 
0.09616912826117 * Marital_StatusDivorced + 0.15377557778014 * Marital_StatusMarried + 
-0.20686296055741 * Marital_StatusSingle + -0.02512911479575 * Marital_StatusTogether ;
1282079   +   H12  = H12  +    -0.23609122137422 * Education2n_Cycle
1282080   +          +     0.32804834977485 * EducationBasic  +    -0.02696870760206 *
1282081   +        EducationGraduation  +     0.07379681316678 * EducationMaster
1282082   +          +    -0.18362421441913 * Marital_StatusDivorced
1282083   +          +     0.14861660317702 * Marital_StatusMarried
1282084   +          +    -0.51051982152027 * Marital_StatusSingle
1282085   +          +     0.13742493760562 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.23609122137422 * Education2n_Cycle + 0.32804834977485 * 
EducationBasic + -0.02696870760206 * EducationGraduation + 0.07379681316678 * EducationMaster 
+ -0.18362421441913 * Marital_StatusDivorced + 0.14861660317702 * Marital_StatusMarried + 
-0.51051982152027 * Marital_StatusSingle + 0.13742493760562 * Marital_StatusTogether ;
1282086   +   H13  = H13  +     0.13227832845665 * Education2n_Cycle
1282087   +          +     -0.1369481832857 * EducationBasic  +      0.1472139603427 *
1282088   +        EducationGraduation  +     0.27596372441804 * EducationMaster
1282089   +          +    -0.65088528624708 * Marital_StatusDivorced
1282090   +          +     1.85383531288095 * Marital_StatusMarried
1282091   +          +    -1.45031245605509 * Marital_StatusSingle
1282092   +          +     1.19623402360662 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.13227832845665 * Education2n_Cycle + -0.1369481832857 * 
EducationBasic + 0.1472139603427 * EducationGraduation + 0.27596372441804 * EducationMaster + 
-0.65088528624708 * Marital_StatusDivorced + 1.85383531288095 * Marital_StatusMarried + 
-1.45031245605509 * Marital_StatusSingle + 1.19623402360662 * Marital_StatusTogether ;
1282093   +   H11  =    -1.19945523281267 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.19945523281267 + H11 ;
1282094   +   H12  =     0.40473145844756 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.40473145844756 + H12 ;
1282095   +   H13  =     1.86025159730213 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86025159730213 + H13 ;
1282096   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1282097   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1282098   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1282099   +END;
MPRINT(EM_DIAGRAM):   END;
1282100   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282101   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1282102   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1282103   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1282104   +END;
MPRINT(EM_DIAGRAM):   END;
1282105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282106   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1282107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282108   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282109   +   P_DepVar1  =     2.59495030782086 * H11  +    -2.95318868021515 * H12
1282110   +          +    -3.46108195946376 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.59495030782086 * H11 + -2.95318868021515 * H12 + 
-3.46108195946376 * H13 ;
1282111   +   P_DepVar1  =    -0.18846734589192 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.18846734589192 + P_DepVar1 ;
1282112   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1282113   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1282114   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1282115   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1282116   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1282117   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1282118   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1282119   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1282120   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1282121   +END;
MPRINT(EM_DIAGRAM):   END;
1282122   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282123   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1282124   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1282125   +END;
MPRINT(EM_DIAGRAM):   END;
1282126   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1282127   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1282128   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1282129   +END;
MPRINT(EM_DIAGRAM):   END;
1282130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282131   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1282132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282133   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1282134   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1282135   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1282136   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1282137   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1282138   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1282139   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1282140   +END;
MPRINT(EM_DIAGRAM):   END;
1282141   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1282142   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1282143   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1282144   +drop
1282145   +H11
1282146   +H12
1282147   +H13
1282148   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1282149   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1282150    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1282151    quit;
1282152    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1282153    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1282154    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1282155    retain ID 2 Node "Neural3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural3";
1282156    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1282157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282158    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1282159    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2354 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2354 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282161    proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural3_variableset out=_temp2(keep=NAME CREATOR);
1282162    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282164    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282165    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1282166    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1282167    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282168    proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural3_train out=_meta(keep=NAME) noprint;
1282169    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1282170    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1282171    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282172    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282173    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282174    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1282175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282176    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282177    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1282178    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1282178  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1399 rows and 5 columns.

1282179    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282180    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1282181    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1399 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1399 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282182    filename _pref
1282182  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1282183    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1282184    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1282185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282186   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1282187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282188   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1282189   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1282190   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1282191    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1282192    quit;
1282193    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1282194    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1282195    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1282196    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1282197    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1282198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282199    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1282200    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282202    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1282203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282205    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282206    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1282207    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1282208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282209    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1282210    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1282211    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1282212    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282214    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282215    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1282216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282217    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282218    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1282219    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1282219  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1282220    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282221    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1282222    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1403 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282223    filename _pref
1282223  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1282224    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1282225    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1282226   +
1282227   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1282228   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1282228  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1282229   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1282230   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1282231   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1282232   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1282233   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1282234    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1282235    quit;
1282236    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1282237    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1282238    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1282239    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1282240    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1282241    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282242    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1282243    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282244    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282245    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1282246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282247    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282248    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282249    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1282250    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1282251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282252    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1282253    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282254    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1282255    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282256    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282257    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282258    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1282259    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282260    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282261    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1282262    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1282262  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1282263    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282264    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1282265    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1442 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282266    filename _pref
1282266  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1282267    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1282268    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1282269   +
1282270   +
1282271   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1282272   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1282273   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1282274   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1282275   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1282276   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282277   +
1282278   +
1282279   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1282280   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1282281   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1282282   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1282283   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1282284   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282285   +
1282286   +
1282287   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1282288   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1282289   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1282290   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1282291   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1282292   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282293   +
1282294   +
1282295   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1282296   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1282297   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1282298   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1282299   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1282300   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282301   +
1282302   +
1282303   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1282304   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1282305   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1282306   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1282307   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1282308   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282309   +
1282310   +
1282311   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1282312   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1282313   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1282314   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1282315   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1282316   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282317   +
1282318   +
1282319   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1282320   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1282321   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1282322   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1282323   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1282324   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282325   +
1282326   +
1282327   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1282328   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1282329   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1282330   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1282331   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1282332   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1282333   +if
1282334   +_FILTERNORM1 not in ( '.')
1282335   + and
1282336   +_FILTERNORM2 not in ( '.')
1282337   + and
1282338   +_FILTERNORM3 not in ( '.')
1282339   + and
1282340   +_FILTERNORM4 not in ( '.')
1282341   + and
1282342   +_FILTERNORM5 not in ( '.')
1282343   + and
1282344   +_FILTERNORM6 not in ( '.')
1282345   + and
1282346   +_FILTERNORM7 not in ( ' ')
1282347   + and
1282348   +_FILTERNORM8 not in ( ' ')
1282349   +and
1282350   +( Dt_Customer ne .)
1282351   +and ( Income ne . and (Income<=107000))
1282352   +and ( Kidhome ne .)
1282353   +and ( MntFishProducts ne .)
1282354   +and ( MntFruits ne .)
1282355   +and ( MntGoldProds ne .)
1282356   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1282357   +and ( MntSweetProducts ne .)
1282358   +and ( MntWines ne .)
1282359   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1282360   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1282361   +and ( NumStorePurchases ne .)
1282362   +and ( NumWebPurchases ne .)
1282363   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1282364   +and ( Recency ne .)
1282365   +and ( Teenhome ne .)
1282366   +and ( Year_Birth ne .)
1282367   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1282368   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1282369   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1282370   +end;
MPRINT(EM_DIAGRAM):   end;
1282371   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1282372   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1282373    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1282374    quit;
1282375    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1282376    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1282377    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1282378    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1282379    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1282380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282381    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1282382    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282383    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282384    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1282385    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282386    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282387    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282388    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1282389    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1282390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282391    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1282392    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1282393    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1282394    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282396    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1282397    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1282398    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1282399    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282400    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1282401    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1282401  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1282402    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282403    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1282404    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1508 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282405    %macro varDept(fcmpdata=,id=);
1282406    %global nobs&id scoreFlag&id;
1282407    %let scoreFlag&id = 0;
1282408    %if &id=1 or ^&fcmpStart %then %do;
1282409    proc sort data=&fcmpdata out=_temp&id nodupkey;
1282410    by NAME;
1282411    where id=&id and LHS in( %let j=1;
1282412    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1282413    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1282414    "&var" %let j = %eval(&j+1);
1282415    %end;
1282416    );
1282417    run;
1282418    %let dsid = %sysfunc(open(_temp&id));
1282419    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1282420    %let dsid = %sysfunc(close(&dsid));
1282421    %if &&nobs&id %then %do;
1282422    %let scoreFlag&id = 1;
1282423    %let fcmpStart = 1;
1282424    %end;
1282425    %else %let fcmpStart = 0;
1282426    %end;
1282427    %else %do;
1282428    proc sort data=&fcmpdata out=_tempid;
1282429    where id=&id;
1282430    by LHS;
1282431    run;
1282432    %let dsid = %sysfunc(open(_tempid));
1282433    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1282434    %let dsid = %sysfunc(close(&dsid));
1282435    %if ^&&nobs&id %then %do;
1282436    proc datasets lib=work nolist;
1282437    delete _tempid;
1282438    run;
1282439    quit;
1282440    %end;
1282441    %else %do;
1282442    data _tempAll;
1282443    set %let j=%eval(&id-1);
1282444    %do x=1 %to &j;
1282445    %if &&nobs&x %then %do;
1282446    _temp&x %end;
1282447    %end;
1282448    ;
1282449    run;
1282450    proc sql;
1282451    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1282451  ! work._tempid p2 where p.name=p2.lhs;
1282452    quit;
1282453    data _temp&id;
1282454    set _temp&id;
1282455    where LHS ne '' and NAME ne '' and Node ne '';
1282456    run;
1282457    proc datasets lib=work nolist;
1282458    delete _tempAll;
1282459    run;
1282460    %let dsid = %sysfunc(open(_temp&id));
1282461    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1282462    %let dsid = %sysfunc(close(&dsid));
1282463    %if ^&&nobs&id %then %do;
1282464    proc datasets lib=work nolist;
1282465    delete _temp&id;
1282466    run;
1282467    quit;
1282468    %end;
1282469    %else %do;
1282470    %let scoreFlag&id = 1;
1282471    data _temp&id;
1282472    set _temp&id;
1282473    where LHS ne NAME and node ne '';
1282474    run;
1282475    %let dsid = %sysfunc(open(_temp&id));
1282476    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1282477    %let dsid = %sysfunc(close(&dsid));
1282478    %if ^&&nobs&id %then %do;
1282479    proc datasets lib=work nolist;
1282480    delete _temp&id;
1282481    run;
1282482    quit;
1282483    %end;
1282484    %else %do;
1282485    proc sort data=_temp&id nodupkey;
1282486    by LHS NAME;
1282487    run;
1282488    %end;
1282489    %end;
1282490    %end;
1282491    %end;
1282492    %mend varDept;
1282493    %macro optCode(outdata=fcmpdata);
1282494    %global fcmpStart;
1282495    %let fcmpStart = 0;
1282496    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1282497    %let NumNodes=9;
1282498    %do k=1 %to &NumNodes;
1282499    %vardept(fcmpdata=&outdata, id=&k);
1282500    %end;
1282501    %mend optCode;
1282502    %optcode(outData=EMWS8.Ensmbl26_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1282503    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1282504    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1282505    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1282506    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282507    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1282508    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1282509    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1282510    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282511    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1282512    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1282512  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1282513    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1282514    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1282515    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1282516    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1282517    filename _pref
1282517  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas";
1282518    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1282519    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural9\EMPUBLISHSCORE.sas.
1282520   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1282521   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1282522   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1282523   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1282524   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1282525   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1282526   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1282527   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1282528   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1282529   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1282530   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1282531   +LENGTH _WARN_ $4
1282532   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1282533   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1282534   +
1282535   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1282536   +
1282537   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1282538   +
1282539   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1282540   +
1282541   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1282542   +
1282543   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1282544   +
1282545   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1282546   +
1282547   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1282548   +
1282549   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1282550   +
1282551   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1282552   +
1282553   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1282554   +
1282555   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1282556   +
1282557   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1282558   +
1282559   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1282560   +
1282561   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1282562   +
1282563   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1282564   +
1282565   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1282566   +
1282567   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1282568   +
1282569   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1282570   +
1282571   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1282572   +
1282573   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1282574   +
1282575   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1282576   +
1282577   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1282578   +
1282579   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1282580   +
1282581   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1282582   +
1282583   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1282584   +
1282585   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1282586   +
1282587   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1282588   +
1282589   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1282590   +
1282591   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1282592   +
1282593   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1282594   +
1282595   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1282596   +
1282597   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1282598   +
1282599   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1282600   +
1282601   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1282602   +
1282603   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1282604   +
1282605   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1282606   +
1282607   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1282608   +
1282609   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1282610   +
1282611   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1282612   +
1282613   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1282614   +
1282615   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1282616   +
1282617   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1282618   +
1282619   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1282620   +
1282621   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1282622   +
1282623   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1282624   +
1282625   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1282626   +
1282627   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1282628   +
1282629   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1282630   +
1282631   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1282632   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1282633   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1282634   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1282635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282637   +end;
MPRINT(EM_DIAGRAM):   end;
1282638   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282639   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282640   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1282641   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282642   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282643   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1282644   +   end;
MPRINT(EM_DIAGRAM):   end;
1282645   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282646   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1282647   +   end;
MPRINT(EM_DIAGRAM):   end;
1282648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282649   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1282650   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282651   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282652   +   end;
MPRINT(EM_DIAGRAM):   end;
1282653   +end;
MPRINT(EM_DIAGRAM):   end;
1282654   +
1282655   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1282656   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1282657   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1282658   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1282659   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282660   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282661   +end;
MPRINT(EM_DIAGRAM):   end;
1282662   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282663   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282664   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1282665   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282666   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282667   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1282668   +   end;
MPRINT(EM_DIAGRAM):   end;
1282669   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282670   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1282671   +   end;
MPRINT(EM_DIAGRAM):   end;
1282672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282673   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1282674   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282675   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282676   +   end;
MPRINT(EM_DIAGRAM):   end;
1282677   +end;
MPRINT(EM_DIAGRAM):   end;
1282678   +
1282679   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1282680   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1282681   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1282682   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1282683   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282684   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282685   +end;
MPRINT(EM_DIAGRAM):   end;
1282686   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282687   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282688   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1282689   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282690   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282691   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1282692   +   end;
MPRINT(EM_DIAGRAM):   end;
1282693   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282694   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1282695   +   end;
MPRINT(EM_DIAGRAM):   end;
1282696   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282697   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1282698   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282699   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282700   +   end;
MPRINT(EM_DIAGRAM):   end;
1282701   +end;
MPRINT(EM_DIAGRAM):   end;
1282702   +
1282703   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1282704   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1282705   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1282706   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1282707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282709   +end;
MPRINT(EM_DIAGRAM):   end;
1282710   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282712   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1282713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282714   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282715   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1282716   +   end;
MPRINT(EM_DIAGRAM):   end;
1282717   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282718   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1282719   +   end;
MPRINT(EM_DIAGRAM):   end;
1282720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282721   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1282722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282724   +   end;
MPRINT(EM_DIAGRAM):   end;
1282725   +end;
MPRINT(EM_DIAGRAM):   end;
1282726   +
1282727   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1282728   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1282729   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1282730   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1282731   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282733   +end;
MPRINT(EM_DIAGRAM):   end;
1282734   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282735   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282736   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1282737   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282738   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282739   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1282740   +   end;
MPRINT(EM_DIAGRAM):   end;
1282741   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282742   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1282743   +   end;
MPRINT(EM_DIAGRAM):   end;
1282744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282745   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1282746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282748   +   end;
MPRINT(EM_DIAGRAM):   end;
1282749   +end;
MPRINT(EM_DIAGRAM):   end;
1282750   +
1282751   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1282752   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1282753   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1282754   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1282755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282757   +end;
MPRINT(EM_DIAGRAM):   end;
1282758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282759   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282760   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1282761   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282762   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282763   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1282764   +   end;
MPRINT(EM_DIAGRAM):   end;
1282765   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282766   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1282767   +   end;
MPRINT(EM_DIAGRAM):   end;
1282768   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282769   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1282770   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282771   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282772   +   end;
MPRINT(EM_DIAGRAM):   end;
1282773   +end;
MPRINT(EM_DIAGRAM):   end;
1282774   +
1282775   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1282776   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1282777   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1282778   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1282779   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282781   +end;
MPRINT(EM_DIAGRAM):   end;
1282782   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282783   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282784   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1282785   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282786   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1282787   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1282788   +   end;
MPRINT(EM_DIAGRAM):   end;
1282789   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1282790   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1282791   +   end;
MPRINT(EM_DIAGRAM):   end;
1282792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282793   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1282794   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282795   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282796   +   end;
MPRINT(EM_DIAGRAM):   end;
1282797   +end;
MPRINT(EM_DIAGRAM):   end;
1282798   +
1282799   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1282800   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1282801   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1282802   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1282803   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1282804   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1282805   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1282806   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1282807   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1282808   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1282809   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1282810   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1282811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282813   +end;
MPRINT(EM_DIAGRAM):   end;
1282814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282815   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1282816   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1282817   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282818   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1282819   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1282820   +   end;
MPRINT(EM_DIAGRAM):   end;
1282821   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1282822   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1282823   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1282824   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1282825   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1282826   +   end;
MPRINT(EM_DIAGRAM):   end;
1282827   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1282828   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1282829   +   end;
MPRINT(EM_DIAGRAM):   end;
1282830   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1282831   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1282832   +   end;
MPRINT(EM_DIAGRAM):   end;
1282833   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1282834   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1282835   +   end;
MPRINT(EM_DIAGRAM):   end;
1282836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282837   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1282838   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1282839   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1282840   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1282841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282843   +   end;
MPRINT(EM_DIAGRAM):   end;
1282844   +end;
MPRINT(EM_DIAGRAM):   end;
1282845   +
1282846   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1282847   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1282848   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1282849   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1282850   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1282851   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1282852   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1282853   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1282854   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1282855   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1282856   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1282857   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1282858   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1282859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282861   +end;
MPRINT(EM_DIAGRAM):   end;
1282862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282863   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1282864   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1282865   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282866   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1282867   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1282868   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1282869   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1282870   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1282871   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1282872   +         end;
MPRINT(EM_DIAGRAM):   end;
1282873   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1282874   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1282875   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1282876   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1282877   +            end;
MPRINT(EM_DIAGRAM):   end;
1282878   +         end;
MPRINT(EM_DIAGRAM):   end;
1282879   +      end;
MPRINT(EM_DIAGRAM):   end;
1282880   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1282881   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1282882   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1282883   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1282884   +         end;
MPRINT(EM_DIAGRAM):   end;
1282885   +      end;
MPRINT(EM_DIAGRAM):   end;
1282886   +   end;
MPRINT(EM_DIAGRAM):   end;
1282887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282888   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1282889   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1282890   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1282891   +      end;
MPRINT(EM_DIAGRAM):   end;
1282892   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1282893   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1282894   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1282895   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1282896   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1282897   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1282898   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1282899   +         end;
MPRINT(EM_DIAGRAM):   end;
1282900   +      end;
MPRINT(EM_DIAGRAM):   end;
1282901   +   end;
MPRINT(EM_DIAGRAM):   end;
1282902   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1282903   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1282904   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1282905   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1282906   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1282907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282909   +   end;
MPRINT(EM_DIAGRAM):   end;
1282910   +end;
MPRINT(EM_DIAGRAM):   end;
1282911   +
1282912   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282913   +*** Checking missing input Interval
1282914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1282915   +
1282916   +IF NMISS(
1282917   +   AcceptedCmpTotal ,
1282918   +   Age ,
1282919   +   Frq ,
1282920   +   Income ,
1282921   +   Kidhome ,
1282922   +   Mnt ,
1282923   +   MntFishProducts ,
1282924   +   MntFruits ,
1282925   +   MntGoldProds ,
1282926   +   MntMeatProducts ,
1282927   +   MntSweetProducts ,
1282928   +   MntWines ,
1282929   +   MonthsAsCustomer ,
1282930   +   NumCatalogPurchases ,
1282931   +   NumDealsPurchases ,
1282932   +   NumDistPurchases ,
1282933   +   NumStorePurchases ,
1282934   +   NumWebPurchases ,
1282935   +   NumWebVisitsMonth ,
1282936   +   RFMstat ,
1282937   +   RMntFrq ,
1282938   +   Recency ,
1282939   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1282940   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1282941   +
1282942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282943   +END;
MPRINT(EM_DIAGRAM):   END;
1282944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282945   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1282946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282947   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282948   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1282949   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1282950   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1282951   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1282952   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1282953   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1282954   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1282955   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1282956   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1282957   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1282958   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1282959   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1282960   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1282961   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1282962   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1282963   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1282964   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1282965   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1282966   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1282967   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1282968   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1282969   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1282970   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1282971   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1282972   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1282973   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1282974   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1282975   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1282976   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1282977   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1282978   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1282979   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1282980   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1282981   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1282982   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1282983   +END;
MPRINT(EM_DIAGRAM):   END;
1282984   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282985   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1282986   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1282987   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1282988   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1282989   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1282990   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1282991   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1282992   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1282993   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1282994   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1282995   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1282996   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1282997   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1282998   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1282999   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1283000   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1283001   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1283002   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1283003   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1283004   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1283005   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1283006   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1283007   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1283008   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1283009   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1283010   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1283011   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1283012   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1283013   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1283014   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1283015   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1283016   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
1283017   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
1283018   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1283019   +   ELSE S_NumCatalogPurchases
1283020   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1283021   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1283022   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1283023   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1283024   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1283025   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1283026   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1283027   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1283028   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1283029   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1283030   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1283031   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1283032   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1283033   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1283034   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1283035   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1283036   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1283037   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1283038   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1283039   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1283040   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1283041   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1283042   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1283043   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1283044   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1283045   +END;
MPRINT(EM_DIAGRAM):   END;
1283046   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283047   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1283048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283049   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283050   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1283051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283053   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1283054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283055   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1283056   +   H11  =     0.19960473225933 * S_AcceptedCmpTotal  +     -0.3891753208081 *
1283057   +        S_Age  +    -0.38863469907463 * S_Frq  +      -0.218282547936 *
1283058   +        S_Income  +     -0.0761121347886 * S_Kidhome
1283059   +          +     0.13231844745195 * S_Mnt  +     0.03847734904026 *
1283060   +        S_MntFishProducts  +    -0.08557040854782 * S_MntFruits
1283061   +          +     0.05679165614645 * S_MntGoldProds  +     0.98985461955462 *
1283062   +        S_MntMeatProducts  +    -0.25089034197541 * S_MntSweetProducts
1283063   +          +    -0.20961106315243 * S_MntWines  +     0.00877322606769 *
1283064   +        S_MonthsAsCustomer  +     0.42365427657146 * S_NumCatalogPurchases
1283065   +          +     0.83893684194413 * S_NumDealsPurchases
1283066   +          +     0.23391006875291 * S_NumDistPurchases
1283067   +          +    -0.63370705462074 * S_NumStorePurchases
1283068   +          +     -0.9137408014067 * S_NumWebPurchases
1283069   +          +     0.89109351479441 * S_NumWebVisitsMonth
1283070   +          +     0.40379703973869 * S_RFMstat  +     0.02992612739892 *
1283071   +        S_RMntFrq  +    -0.85349828740223 * S_Recency
1283072   +          +     0.17501150943585 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.19960473225933 * S_AcceptedCmpTotal + -0.3891753208081 * S_Age + 
-0.38863469907463 * S_Frq + -0.218282547936 * S_Income + -0.0761121347886 * S_Kidhome + 
0.13231844745195 * S_Mnt + 0.03847734904026 * S_MntFishProducts + -0.08557040854782 * 
S_MntFruits + 0.05679165614645 * S_MntGoldProds + 0.98985461955462 * S_MntMeatProducts + 
-0.25089034197541 * S_MntSweetProducts + -0.20961106315243 * S_MntWines + 0.00877322606769 * 
S_MonthsAsCustomer + 0.42365427657146 * S_NumCatalogPurchases + 0.83893684194413 * 
S_NumDealsPurchases + 0.23391006875291 * S_NumDistPurchases + -0.63370705462074 * 
S_NumStorePurchases + -0.9137408014067 * S_NumWebPurchases + 0.89109351479441 * 
S_NumWebVisitsMonth + 0.40379703973869 * S_RFMstat + 0.02992612739892 * S_RMntFrq + 
-0.85349828740223 * S_Recency + 0.17501150943585 * S_Teenhome ;
1283073   +   H12  =     0.57191299319193 * S_AcceptedCmpTotal  +     0.06554370511829 *
1283074   +        S_Age  +    -0.36683285440702 * S_Frq  +     0.38867787826981 *
1283075   +        S_Income  +    -0.43909782819329 * S_Kidhome
1283076   +          +    -0.20015496934973 * S_Mnt  +    -0.12914218014786 *
1283077   +        S_MntFishProducts  +    -0.15398661741952 * S_MntFruits
1283078   +          +    -0.05274722398466 * S_MntGoldProds  +     0.56013165499725 *
1283079   +        S_MntMeatProducts  +     0.05414820118553 * S_MntSweetProducts
1283080   +          +     -0.3600749061383 * S_MntWines  +    -0.10603301590721 *
1283081   +        S_MonthsAsCustomer  +     0.36776848192468 * S_NumCatalogPurchases
1283082   +          +      0.2218973353638 * S_NumDealsPurchases
1283083   +          +      0.0062360950528 * S_NumDistPurchases
1283084   +          +    -0.57621747951002 * S_NumStorePurchases
1283085   +          +    -0.33564890905657 * S_NumWebPurchases
1283086   +          +     0.82482365540301 * S_NumWebVisitsMonth
1283087   +          +     0.00853485340844 * S_RFMstat  +    -0.08358062109702 *
1283088   +        S_RMntFrq  +    -0.77306663228806 * S_Recency
1283089   +          +    -0.36028078495757 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.57191299319193 * S_AcceptedCmpTotal + 0.06554370511829 * S_Age + 
-0.36683285440702 * S_Frq + 0.38867787826981 * S_Income + -0.43909782819329 * S_Kidhome + 
-0.20015496934973 * S_Mnt + -0.12914218014786 * S_MntFishProducts + -0.15398661741952 * 
S_MntFruits + -0.05274722398466 * S_MntGoldProds + 0.56013165499725 * S_MntMeatProducts + 
0.05414820118553 * S_MntSweetProducts + -0.3600749061383 * S_MntWines + -0.10603301590721 * 
S_MonthsAsCustomer + 0.36776848192468 * S_NumCatalogPurchases + 0.2218973353638 * 
S_NumDealsPurchases + 0.0062360950528 * S_NumDistPurchases + -0.57621747951002 * 
S_NumStorePurchases + -0.33564890905657 * S_NumWebPurchases + 0.82482365540301 * 
S_NumWebVisitsMonth + 0.00853485340844 * S_RFMstat + -0.08358062109702 * S_RMntFrq + 
-0.77306663228806 * S_Recency + -0.36028078495757 * S_Teenhome ;
1283090   +   H13  =     0.04958757890989 * S_AcceptedCmpTotal  +    -0.35438992757247 *
1283091   +        S_Age  +    -0.00591919176562 * S_Frq  +    -0.27415788425743 *
1283092   +        S_Income  +    -0.03572236011846 * S_Kidhome
1283093   +          +    -0.13070406034722 * S_Mnt  +     0.18129697551902 *
1283094   +        S_MntFishProducts  +     0.12543390103308 * S_MntFruits
1283095   +          +    -0.03846216245953 * S_MntGoldProds  +      0.1535321444723 *
1283096   +        S_MntMeatProducts  +     0.43228964267878 * S_MntSweetProducts
1283097   +          +     0.04044476981059 * S_MntWines  +     0.05282237039086 *
1283098   +        S_MonthsAsCustomer  +    -0.22394386505524 * S_NumCatalogPurchases
1283099   +          +      -0.174147250062 * S_NumDealsPurchases
1283100   +          +    -0.22921682388864 * S_NumDistPurchases
1283101   +          +     0.41526854684299 * S_NumStorePurchases
1283102   +          +    -0.27675565493519 * S_NumWebPurchases
1283103   +          +    -0.31519058220182 * S_NumWebVisitsMonth
1283104   +          +    -0.46583825032896 * S_RFMstat  +    -0.00324569060855 *
1283105   +        S_RMntFrq  +     0.80762508263239 * S_Recency
1283106   +          +    -0.05609675878255 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.04958757890989 * S_AcceptedCmpTotal + -0.35438992757247 * S_Age 
+ -0.00591919176562 * S_Frq + -0.27415788425743 * S_Income + -0.03572236011846 * S_Kidhome + 
-0.13070406034722 * S_Mnt + 0.18129697551902 * S_MntFishProducts + 0.12543390103308 * 
S_MntFruits + -0.03846216245953 * S_MntGoldProds + 0.1535321444723 * S_MntMeatProducts + 
0.43228964267878 * S_MntSweetProducts + 0.04044476981059 * S_MntWines + 0.05282237039086 * 
S_MonthsAsCustomer + -0.22394386505524 * S_NumCatalogPurchases + -0.174147250062 * 
S_NumDealsPurchases + -0.22921682388864 * S_NumDistPurchases + 0.41526854684299 * 
S_NumStorePurchases + -0.27675565493519 * S_NumWebPurchases + -0.31519058220182 * 
S_NumWebVisitsMonth + -0.46583825032896 * S_RFMstat + -0.00324569060855 * S_RMntFrq + 
0.80762508263239 * S_Recency + -0.05609675878255 * S_Teenhome ;
1283107   +   H14  =     0.02595189997947 * S_AcceptedCmpTotal  +     0.06072450724422 *
1283108   +        S_Age  +     0.02299020571692 * S_Frq  +     -0.4565780535519 *
1283109   +        S_Income  +    -0.04788369327547 * S_Kidhome
1283110   +          +     0.02007551763294 * S_Mnt  +    -0.18053103558393 *
1283111   +        S_MntFishProducts  +    -0.09855244687933 * S_MntFruits
1283112   +          +    -0.15322502970206 * S_MntGoldProds  +    -0.66766356766896 *
1283113   +        S_MntMeatProducts  +     0.07957560397307 * S_MntSweetProducts
1283114   +          +     0.41567167308223 * S_MntWines  +     0.28903949823868 *
1283115   +        S_MonthsAsCustomer  +    -0.63829948878415 * S_NumCatalogPurchases
1283116   +          +    -0.46022430102423 * S_NumDealsPurchases
1283117   +          +     0.15831339342044 * S_NumDistPurchases
1283118   +          +     0.22480465173719 * S_NumStorePurchases
1283119   +          +     0.44798923484609 * S_NumWebPurchases
1283120   +          +    -0.71094702920004 * S_NumWebVisitsMonth
1283121   +          +     0.20620433566947 * S_RFMstat  +     -0.0106779556039 *
1283122   +        S_RMntFrq  +     0.79879111927102 * S_Recency
1283123   +          +      0.3056416743951 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.02595189997947 * S_AcceptedCmpTotal + 0.06072450724422 * S_Age + 
0.02299020571692 * S_Frq + -0.4565780535519 * S_Income + -0.04788369327547 * S_Kidhome + 
0.02007551763294 * S_Mnt + -0.18053103558393 * S_MntFishProducts + -0.09855244687933 * 
S_MntFruits + -0.15322502970206 * S_MntGoldProds + -0.66766356766896 * S_MntMeatProducts + 
0.07957560397307 * S_MntSweetProducts + 0.41567167308223 * S_MntWines + 0.28903949823868 * 
S_MonthsAsCustomer + -0.63829948878415 * S_NumCatalogPurchases + -0.46022430102423 * 
S_NumDealsPurchases + 0.15831339342044 * S_NumDistPurchases + 0.22480465173719 * 
S_NumStorePurchases + 0.44798923484609 * S_NumWebPurchases + -0.71094702920004 * 
S_NumWebVisitsMonth + 0.20620433566947 * S_RFMstat + -0.0106779556039 * S_RMntFrq + 
0.79879111927102 * S_Recency + 0.3056416743951 * S_Teenhome ;
1283124   +   H15  =    -0.13742649287176 * S_AcceptedCmpTotal  +     0.10145150511644 *
1283125   +        S_Age  +     -0.2837159248953 * S_Frq  +    -0.64706237411697 *
1283126   +        S_Income  +     0.53994304261534 * S_Kidhome
1283127   +          +    -0.09131017926694 * S_Mnt  +     0.02887823775959 *
1283128   +        S_MntFishProducts  +     0.08381294541966 * S_MntFruits
1283129   +          +     0.04873881168004 * S_MntGoldProds  +    -0.54973576310335 *
1283130   +        S_MntMeatProducts  +     0.05878621089895 * S_MntSweetProducts
1283131   +          +     0.21348875371185 * S_MntWines  +    -0.12051903605528 *
1283132   +        S_MonthsAsCustomer  +     -0.5945274016061 * S_NumCatalogPurchases
1283133   +          +     0.03650267472167 * S_NumDealsPurchases
1283134   +          +    -0.03322709524939 * S_NumDistPurchases
1283135   +          +     -0.0022226424472 * S_NumStorePurchases
1283136   +          +    -0.10131236740674 * S_NumWebPurchases
1283137   +          +    -0.69846819287714 * S_NumWebVisitsMonth
1283138   +          +    -0.13757300915933 * S_RFMstat  +     0.22262647555954 *
1283139   +        S_RMntFrq  +     0.92766392256433 * S_Recency
1283140   +          +      0.3625724229994 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.13742649287176 * S_AcceptedCmpTotal + 0.10145150511644 * S_Age 
+ -0.2837159248953 * S_Frq + -0.64706237411697 * S_Income + 0.53994304261534 * S_Kidhome + 
-0.09131017926694 * S_Mnt + 0.02887823775959 * S_MntFishProducts + 0.08381294541966 * 
S_MntFruits + 0.04873881168004 * S_MntGoldProds + -0.54973576310335 * S_MntMeatProducts + 
0.05878621089895 * S_MntSweetProducts + 0.21348875371185 * S_MntWines + -0.12051903605528 * 
S_MonthsAsCustomer + -0.5945274016061 * S_NumCatalogPurchases + 0.03650267472167 * 
S_NumDealsPurchases + -0.03322709524939 * S_NumDistPurchases + -0.0022226424472 * 
S_NumStorePurchases + -0.10131236740674 * S_NumWebPurchases + -0.69846819287714 * 
S_NumWebVisitsMonth + -0.13757300915933 * S_RFMstat + 0.22262647555954 * S_RMntFrq + 
0.92766392256433 * S_Recency + 0.3625724229994 * S_Teenhome ;
1283141   +   H16  =     -0.3666088571096 * S_AcceptedCmpTotal  +     0.07935193188365 *
1283142   +        S_Age  +    -0.42829147771921 * S_Frq  +    -0.42276511188403 *
1283143   +        S_Income  +    -0.52576099429582 * S_Kidhome
1283144   +          +    -0.25780820577456 * S_Mnt  +     0.15053849421837 *
1283145   +        S_MntFishProducts  +      0.0508038259278 * S_MntFruits
1283146   +          +    -0.20778953304026 * S_MntGoldProds  +    -0.19733433417367 *
1283147   +        S_MntMeatProducts  +    -0.19779369509324 * S_MntSweetProducts
1283148   +          +     -0.0614254708905 * S_MntWines  +    -0.24324114549599 *
1283149   +        S_MonthsAsCustomer  +    -0.51401967366294 * S_NumCatalogPurchases
1283150   +          +    -0.50209914729324 * S_NumDealsPurchases
1283151   +          +    -0.46217244513696 * S_NumDistPurchases
1283152   +          +      0.1832648560248 * S_NumStorePurchases
1283153   +          +     0.02866153257072 * S_NumWebPurchases
1283154   +          +    -0.21659886944483 * S_NumWebVisitsMonth
1283155   +          +    -0.05645651757643 * S_RFMstat  +    -0.09976672213368 *
1283156   +        S_RMntFrq  +      0.0483484608321 * S_Recency
1283157   +          +    -0.11406727037802 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.3666088571096 * S_AcceptedCmpTotal + 0.07935193188365 * S_Age + 
-0.42829147771921 * S_Frq + -0.42276511188403 * S_Income + -0.52576099429582 * S_Kidhome + 
-0.25780820577456 * S_Mnt + 0.15053849421837 * S_MntFishProducts + 0.0508038259278 * 
S_MntFruits + -0.20778953304026 * S_MntGoldProds + -0.19733433417367 * S_MntMeatProducts + 
-0.19779369509324 * S_MntSweetProducts + -0.0614254708905 * S_MntWines + -0.24324114549599 * 
S_MonthsAsCustomer + -0.51401967366294 * S_NumCatalogPurchases + -0.50209914729324 * 
S_NumDealsPurchases + -0.46217244513696 * S_NumDistPurchases + 0.1832648560248 * 
S_NumStorePurchases + 0.02866153257072 * S_NumWebPurchases + -0.21659886944483 * 
S_NumWebVisitsMonth + -0.05645651757643 * S_RFMstat + -0.09976672213368 * S_RMntFrq + 
0.0483484608321 * S_Recency + -0.11406727037802 * S_Teenhome ;
1283158   +   H11  = H11  +     -0.7601248031008 * AcceptedCmp10
1283159   +          +    -0.35671966174677 * AcceptedCmp20  +     -0.3945561586942 *
1283160   +        AcceptedCmp30  +    -0.54583010778346 * AcceptedCmp40
1283161   +          +    -0.38674738859251 * AcceptedCmp50  +    -0.14831343728217 *
1283162   +        Complain0  +     0.13245455648369 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.7601248031008 * AcceptedCmp10 + -0.35671966174677 * 
AcceptedCmp20 + -0.3945561586942 * AcceptedCmp30 + -0.54583010778346 * AcceptedCmp40 + 
-0.38674738859251 * AcceptedCmp50 + -0.14831343728217 * Complain0 + 0.13245455648369 * 
HigherEducationBinary0 ;
1283163   +   H12  = H12  +    -0.03783139750322 * AcceptedCmp10
1283164   +          +      0.0569762433011 * AcceptedCmp20  +    -0.21834950194396 *
1283165   +        AcceptedCmp30  +    -0.14978730026923 * AcceptedCmp40
1283166   +          +    -0.27826227141524 * AcceptedCmp50  +     0.05227448052769 *
1283167   +        Complain0  +     0.00441210978534 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.03783139750322 * AcceptedCmp10 + 0.0569762433011 * 
AcceptedCmp20 + -0.21834950194396 * AcceptedCmp30 + -0.14978730026923 * AcceptedCmp40 + 
-0.27826227141524 * AcceptedCmp50 + 0.05227448052769 * Complain0 + 0.00441210978534 * 
HigherEducationBinary0 ;
1283168   +   H13  = H13  +     0.20786972077091 * AcceptedCmp10
1283169   +          +     0.06123497721778 * AcceptedCmp20  +     0.21326165753825 *
1283170   +        AcceptedCmp30  +    -0.17148613450886 * AcceptedCmp40
1283171   +          +     0.05564403918936 * AcceptedCmp50  +     0.07876117708017 *
1283172   +        Complain0  +     0.40703714529737 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.20786972077091 * AcceptedCmp10 + 0.06123497721778 * 
AcceptedCmp20 + 0.21326165753825 * AcceptedCmp30 + -0.17148613450886 * AcceptedCmp40 + 
0.05564403918936 * AcceptedCmp50 + 0.07876117708017 * Complain0 + 0.40703714529737 * 
HigherEducationBinary0 ;
1283173   +   H14  = H14  +    -0.22288812741222 * AcceptedCmp10
1283174   +          +     0.09082443183915 * AcceptedCmp20  +     0.22381340075277 *
1283175   +        AcceptedCmp30  +    -0.33987044425695 * AcceptedCmp40
1283176   +          +     0.23335102436732 * AcceptedCmp50  +    -0.04181636989839 *
1283177   +        Complain0  +     0.07120379166339 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.22288812741222 * AcceptedCmp10 + 0.09082443183915 * 
AcceptedCmp20 + 0.22381340075277 * AcceptedCmp30 + -0.33987044425695 * AcceptedCmp40 + 
0.23335102436732 * AcceptedCmp50 + -0.04181636989839 * Complain0 + 0.07120379166339 * 
HigherEducationBinary0 ;
1283178   +   H15  = H15  +     0.42056230102758 * AcceptedCmp10
1283179   +          +     0.53764215961118 * AcceptedCmp20  +     0.37023411618924 *
1283180   +        AcceptedCmp30  +     0.42138560084911 * AcceptedCmp40
1283181   +          +      0.3085748174994 * AcceptedCmp50  +     0.22539323627952 *
1283182   +        Complain0  +    -0.21244663243009 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.42056230102758 * AcceptedCmp10 + 0.53764215961118 * 
AcceptedCmp20 + 0.37023411618924 * AcceptedCmp30 + 0.42138560084911 * AcceptedCmp40 + 
0.3085748174994 * AcceptedCmp50 + 0.22539323627952 * Complain0 + -0.21244663243009 * 
HigherEducationBinary0 ;
1283183   +   H16  = H16  +     0.18963464867682 * AcceptedCmp10
1283184   +          +     0.03787019267792 * AcceptedCmp20  +     0.08009211858272 *
1283185   +        AcceptedCmp30  +    -0.04360170073177 * AcceptedCmp40
1283186   +          +     0.21168040934214 * AcceptedCmp50  +     0.10568727450323 *
1283187   +        Complain0  +     0.53148657263966 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.18963464867682 * AcceptedCmp10 + 0.03787019267792 * 
AcceptedCmp20 + 0.08009211858272 * AcceptedCmp30 + -0.04360170073177 * AcceptedCmp40 + 
0.21168040934214 * AcceptedCmp50 + 0.10568727450323 * Complain0 + 0.53148657263966 * 
HigherEducationBinary0 ;
1283188   +   H11  = H11  +    -0.11496374901156 * Education2n_Cycle
1283189   +          +    -0.06656230963069 * EducationBasic  +     0.07997148658457 *
1283190   +        EducationGraduation  +     0.01554466662723 * EducationMaster
1283191   +          +     0.13815069071511 * Marital_StatusDivorced
1283192   +          +      0.0732913060929 * Marital_StatusMarried
1283193   +          +    -0.22858418468746 * Marital_StatusSingle
1283194   +          +     0.01116332924316 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.11496374901156 * Education2n_Cycle + -0.06656230963069 * 
EducationBasic + 0.07997148658457 * EducationGraduation + 0.01554466662723 * EducationMaster + 
0.13815069071511 * Marital_StatusDivorced + 0.0732913060929 * Marital_StatusMarried + 
-0.22858418468746 * Marital_StatusSingle + 0.01116332924316 * Marital_StatusTogether ;
1283195   +   H12  = H12  +     0.03901959784889 * Education2n_Cycle
1283196   +          +    -0.26280012394443 * EducationBasic  +     0.21504809933489 *
1283197   +        EducationGraduation  +    -0.06848191068145 * EducationMaster
1283198   +          +     0.32909808396509 * Marital_StatusDivorced
1283199   +          +    -0.50160173579004 * Marital_StatusMarried
1283200   +          +     0.57207102211224 * Marital_StatusSingle
1283201   +          +    -0.44360345973922 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.03901959784889 * Education2n_Cycle + -0.26280012394443 * 
EducationBasic + 0.21504809933489 * EducationGraduation + -0.06848191068145 * EducationMaster 
+ 0.32909808396509 * Marital_StatusDivorced + -0.50160173579004 * Marital_StatusMarried + 
0.57207102211224 * Marital_StatusSingle + -0.44360345973922 * Marital_StatusTogether ;
1283202   +   H13  = H13  +     0.01150876366725 * Education2n_Cycle
1283203   +          +     0.23107711255032 * EducationBasic  +    -0.21134640338561 *
1283204   +        EducationGraduation  +    -0.06661306485324 * EducationMaster
1283205   +          +    -0.07154493730107 * Marital_StatusDivorced
1283206   +          +     0.29126100051603 * Marital_StatusMarried
1283207   +          +    -0.06936325857004 * Marital_StatusSingle
1283208   +          +     0.16456919209683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.01150876366725 * Education2n_Cycle + 0.23107711255032 * 
EducationBasic + -0.21134640338561 * EducationGraduation + -0.06661306485324 * EducationMaster 
+ -0.07154493730107 * Marital_StatusDivorced + 0.29126100051603 * Marital_StatusMarried + 
-0.06936325857004 * Marital_StatusSingle + 0.16456919209683 * Marital_StatusTogether ;
1283209   +   H14  = H14  +    -0.19946033710291 * Education2n_Cycle
1283210   +          +    -0.01034120145864 * EducationBasic  +     0.13668197947218 *
1283211   +        EducationGraduation  +     0.00467151758983 * EducationMaster
1283212   +          +    -0.05004640872388 * Marital_StatusDivorced
1283213   +          +     0.22197974032974 * Marital_StatusMarried
1283214   +          +    -0.33931504637453 * Marital_StatusSingle
1283215   +          +     0.52390006042597 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.19946033710291 * Education2n_Cycle + -0.01034120145864 * 
EducationBasic + 0.13668197947218 * EducationGraduation + 0.00467151758983 * EducationMaster + 
-0.05004640872388 * Marital_StatusDivorced + 0.22197974032974 * Marital_StatusMarried + 
-0.33931504637453 * Marital_StatusSingle + 0.52390006042597 * Marital_StatusTogether ;
1283216   +   H15  = H15  +      0.0257657569906 * Education2n_Cycle
1283217   +          +    -0.41272017245298 * EducationBasic  +     0.19220220110183 *
1283218   +        EducationGraduation  +     0.36479872943723 * EducationMaster
1283219   +          +    -0.07748874669478 * Marital_StatusDivorced
1283220   +          +     1.05442281159109 * Marital_StatusMarried
1283221   +          +    -0.67190984038867 * Marital_StatusSingle
1283222   +          +     0.60757498745412 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.0257657569906 * Education2n_Cycle + -0.41272017245298 * 
EducationBasic + 0.19220220110183 * EducationGraduation + 0.36479872943723 * EducationMaster + 
-0.07748874669478 * Marital_StatusDivorced + 1.05442281159109 * Marital_StatusMarried + 
-0.67190984038867 * Marital_StatusSingle + 0.60757498745412 * Marital_StatusTogether ;
1283223   +   H16  = H16  +    -0.17850020716849 * Education2n_Cycle
1283224   +          +    -0.22658689327697 * EducationBasic  +    -0.12677992318537 *
1283225   +        EducationGraduation  +    -0.09350942672909 * EducationMaster
1283226   +          +    -0.20478208715114 * Marital_StatusDivorced
1283227   +          +    -0.40186383707642 * Marital_StatusMarried
1283228   +          +     0.43474841662774 * Marital_StatusSingle
1283229   +          +    -0.24048672237031 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.17850020716849 * Education2n_Cycle + -0.22658689327697 * 
EducationBasic + -0.12677992318537 * EducationGraduation + -0.09350942672909 * EducationMaster 
+ -0.20478208715114 * Marital_StatusDivorced + -0.40186383707642 * Marital_StatusMarried + 
0.43474841662774 * Marital_StatusSingle + -0.24048672237031 * Marital_StatusTogether ;
1283230   +   H11  =    -0.02531559692589 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02531559692589 + H11 ;
1283231   +   H12  =     0.37210575430377 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.37210575430377 + H12 ;
1283232   +   H13  =    -1.38678195714945 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.38678195714945 + H13 ;
1283233   +   H14  =      1.3896422684634 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.3896422684634 + H14 ;
1283234   +   H15  =     0.90118149151601 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.90118149151601 + H15 ;
1283235   +   H16  =    -2.10458510177045 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -2.10458510177045 + H16 ;
1283236   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1283237   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1283238   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1283239   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1283240   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1283241   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1283242   +END;
MPRINT(EM_DIAGRAM):   END;
1283243   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1283244   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1283245   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1283246   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1283247   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1283248   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1283249   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1283250   +END;
MPRINT(EM_DIAGRAM):   END;
1283251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283252   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1283253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1283255   +   P_DepVar1  =     1.87884051128714 * H11  +     2.50729999746925 * H12
1283256   +          +    -1.75107820321125 * H13  +    -1.79455762110025 * H14
1283257   +          +    -2.94929305100625 * H15  +    -2.02736184847322 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.87884051128714 * H11 + 2.50729999746925 * H12 + 
-1.75107820321125 * H13 + -1.79455762110025 * H14 + -2.94929305100625 * H15 + 
-2.02736184847322 * H16 ;
1283258   +   P_DepVar1  =    -2.13374807262205 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.13374807262205 + P_DepVar1 ;
1283259   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1283260   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1283261   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1283262   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1283263   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1283264   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1283265   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1283266   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1283267   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1283268   +END;
MPRINT(EM_DIAGRAM):   END;
1283269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1283270   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1283271   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1283272   +END;
MPRINT(EM_DIAGRAM):   END;
1283273   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1283274   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1283275   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1283276   +END;
MPRINT(EM_DIAGRAM):   END;
1283277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283278   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1283279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283280   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1283281   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1283282   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1283283   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1283284   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1283285   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1283286   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1283287   +END;
MPRINT(EM_DIAGRAM):   END;
1283288   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1283289   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1283290   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1283291   +drop
1283292   +H11
1283293   +H12
1283294   +H13
1283295   +H14
1283296   +H15
1283297   +H16
1283298   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1283299   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1283300    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1283301    quit;
1283302    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1283303    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1283304    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1283305    retain ID 2 Node "Neural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural9";
1283306    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1283307    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283308    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1283309    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283310    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2876 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2876 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283311    proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural9_variableset out=_temp2(keep=NAME CREATOR);
1283312    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283313    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283314    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283315    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1283316    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1283317    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283318    proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural9_train out=_meta(keep=NAME) noprint;
1283319    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

1283320    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1283321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283323    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283324    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1283325    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283326    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283327    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1283328    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1283328  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1591 rows and 5 columns.

1283329    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283330    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1283331    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1591 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1591 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283332    filename _pref
1283332  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1283333    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1283334    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1283335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283336   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1283337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283338   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1283339   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1283340   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1283341    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1283342    quit;
1283343    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1283344    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1283345    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1283346    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1283347    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1283348    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283349    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1283350    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283351    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283352    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1283353    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283354    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283355    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283356    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1283357    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1283358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283359    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1283360    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1283361    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1283362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283363    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283364    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283365    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1283366    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283367    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283368    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1283369    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1283369  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1283370    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283371    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1283372    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1595 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283373    filename _pref
1283373  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1283374    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1283375    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1283376   +
1283377   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1283378   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1283378  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1283379   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1283380   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1283381   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1283382   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1283383   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1283384    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1283385    quit;
1283386    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1283387    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1283388    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1283389    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1283390    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1283391    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283392    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1283393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283394    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283395    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1283396    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283397    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283398    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283399    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1283400    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1283401    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283402    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1283403    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283404    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1283405    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283406    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283407    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283408    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1283409    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283410    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283411    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1283412    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1283412  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1283413    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283414    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1283415    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1634 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283416    filename _pref
1283416  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1283417    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1283418    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1283419   +
1283420   +
1283421   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1283422   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1283423   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1283424   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1283425   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1283426   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283427   +
1283428   +
1283429   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1283430   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1283431   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1283432   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1283433   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1283434   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283435   +
1283436   +
1283437   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1283438   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1283439   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1283440   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1283441   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1283442   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283443   +
1283444   +
1283445   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1283446   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1283447   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1283448   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1283449   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1283450   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
The SAS System

MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283451   +
1283452   +
1283453   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1283454   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1283455   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1283456   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1283457   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1283458   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283459   +
1283460   +
1283461   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1283462   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1283463   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1283464   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1283465   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1283466   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283467   +
1283468   +
1283469   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1283470   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1283471   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1283472   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1283473   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1283474   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283475   +
1283476   +
1283477   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1283478   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1283479   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1283480   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1283481   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1283482   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1283483   +if
1283484   +_FILTERNORM1 not in ( '.')
1283485   + and
1283486   +_FILTERNORM2 not in ( '.')
1283487   + and
1283488   +_FILTERNORM3 not in ( '.')
1283489   + and
1283490   +_FILTERNORM4 not in ( '.')
1283491   + and
1283492   +_FILTERNORM5 not in ( '.')
1283493   + and
1283494   +_FILTERNORM6 not in ( '.')
1283495   + and
1283496   +_FILTERNORM7 not in ( ' ')
1283497   + and
1283498   +_FILTERNORM8 not in ( ' ')
1283499   +and
1283500   +( Dt_Customer ne .)
1283501   +and ( Income ne . and (Income<=107000))
1283502   +and ( Kidhome ne .)
1283503   +and ( MntFishProducts ne .)
1283504   +and ( MntFruits ne .)
1283505   +and ( MntGoldProds ne .)
1283506   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1283507   +and ( MntSweetProducts ne .)
1283508   +and ( MntWines ne .)
1283509   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1283510   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1283511   +and ( NumStorePurchases ne .)
1283512   +and ( NumWebPurchases ne .)
1283513   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1283514   +and ( Recency ne .)
1283515   +and ( Teenhome ne .)
1283516   +and ( Year_Birth ne .)
1283517   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1283518   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1283519   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1283520   +end;
MPRINT(EM_DIAGRAM):   end;
1283521   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1283522   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1283523    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1283524    quit;
1283525    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1283526    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1283527    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1283528    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1283529    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1283530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283531    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1283532    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283533    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283534    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1283535    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283536    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283537    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283538    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1283539    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1283540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283541    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1283542    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1283543    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1283544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283546    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1283547    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1283548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1283549    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283550    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1283551    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1283551  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1283552    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283553    proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl26_FCMP data=_tempx;
1283554    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL26_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL26_FCMP has 1700 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283555    %macro varDept(fcmpdata=,id=);
1283556    %global nobs&id scoreFlag&id;
1283557    %let scoreFlag&id = 0;
1283558    %if &id=1 or ^&fcmpStart %then %do;
1283559    proc sort data=&fcmpdata out=_temp&id nodupkey;
1283560    by NAME;
1283561    where id=&id and LHS in( %let j=1;
1283562    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1283563    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1283564    "&var" %let j = %eval(&j+1);
1283565    %end;
1283566    );
1283567    run;
1283568    %let dsid = %sysfunc(open(_temp&id));
1283569    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1283570    %let dsid = %sysfunc(close(&dsid));
1283571    %if &&nobs&id %then %do;
1283572    %let scoreFlag&id = 1;
1283573    %let fcmpStart = 1;
1283574    %end;
1283575    %else %let fcmpStart = 0;
1283576    %end;
1283577    %else %do;
1283578    proc sort data=&fcmpdata out=_tempid;
1283579    where id=&id;
1283580    by LHS;
1283581    run;
1283582    %let dsid = %sysfunc(open(_tempid));
1283583    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1283584    %let dsid = %sysfunc(close(&dsid));
1283585    %if ^&&nobs&id %then %do;
1283586    proc datasets lib=work nolist;
1283587    delete _tempid;
1283588    run;
1283589    quit;
1283590    %end;
1283591    %else %do;
1283592    data _tempAll;
1283593    set %let j=%eval(&id-1);
1283594    %do x=1 %to &j;
1283595    %if &&nobs&x %then %do;
1283596    _temp&x %end;
1283597    %end;
1283598    ;
1283599    run;
1283600    proc sql;
1283601    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1283601  ! work._tempid p2 where p.name=p2.lhs;
1283602    quit;
1283603    data _temp&id;
1283604    set _temp&id;
1283605    where LHS ne '' and NAME ne '' and Node ne '';
1283606    run;
1283607    proc datasets lib=work nolist;
1283608    delete _tempAll;
1283609    run;
1283610    %let dsid = %sysfunc(open(_temp&id));
1283611    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1283612    %let dsid = %sysfunc(close(&dsid));
1283613    %if ^&&nobs&id %then %do;
1283614    proc datasets lib=work nolist;
1283615    delete _temp&id;
1283616    run;
1283617    quit;
1283618    %end;
1283619    %else %do;
1283620    %let scoreFlag&id = 1;
1283621    data _temp&id;
1283622    set _temp&id;
1283623    where LHS ne NAME and node ne '';
1283624    run;
1283625    %let dsid = %sysfunc(open(_temp&id));
1283626    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1283627    %let dsid = %sysfunc(close(&dsid));
1283628    %if ^&&nobs&id %then %do;
1283629    proc datasets lib=work nolist;
1283630    delete _temp&id;
1283631    run;
1283632    quit;
1283633    %end;
1283634    %else %do;
1283635    proc sort data=_temp&id nodupkey;
1283636    by LHS NAME;
1283637    run;
1283638    %end;
1283639    %end;
1283640    %end;
1283641    %end;
1283642    %mend varDept;
1283643    %macro optCode(outdata=fcmpdata);
1283644    %global fcmpStart;
1283645    %let fcmpStart = 0;
1283646    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1283647    %let NumNodes=9;
1283648    %do k=1 %to &NumNodes;
1283649    %vardept(fcmpdata=&outdata, id=&k);
1283650    %end;
1283651    %mend optCode;
1283652    %optcode(outData=EMWS8.Ensmbl26_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl26_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1283653    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1283654    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1283655    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1283656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283657    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1283658    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1283659    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1283660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283661    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1283662    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1283662  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1283663    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1283664    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1283665    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1283666    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1283667    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1283668    * Ensmbl26: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Computing metadata for TRAIN data;
1283669    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL26_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl26\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl26_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl26_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl26_TRAIN out=WORK.M33IHWOU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M33IHWOU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M33IHWOU(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M33IHWOU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M33IHWOU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2SCGV77 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2SCGV77;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2SCGV77;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WDXLUC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2SCGV77;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2SCGV77;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2SCGV77;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2SCGV77;
MPRINT(EMADVISECOLUMNS):   set WORK.M2SCGV77;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl26";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl26";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl26: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl26";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1283989    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1283990    set EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMINFO;
1283991    where DATA='Ensmbl26' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl26' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1283992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL26_EMINFO.
      WHERE (DATA='Ensmbl26') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1283993    data EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl26_EMINFO;
1283994    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1283995    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1283996    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1284000    run;
1284001    data EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMINFO;
1284002    set EMWS8.Ensmbl26_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl26_EMINFO WORK.MODELTEMP_INFO;
1284003    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL26_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1284004    proc sort data = EMWS8.Ensmbl26_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl26_EMINFO NOTHREADS;
1284005    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1284006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL26_EMINFO.
NOTE: The data set EMWS8.ENSMBL26_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1284007    proc sort data = EMWS8.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural2_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1284008    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1284009    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL2_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1284010    proc sort data = EMWS8.Ensmbl26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1284011    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1284012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL26_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1284013    data EMWS8.Ensmbl26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl26_EMINFO;
1284014    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1284015    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1284016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL26_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1284017    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1284018    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1284019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1284020    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL26_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL26_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
