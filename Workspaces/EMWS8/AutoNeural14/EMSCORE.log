MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.48 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.48 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3JE1QSX 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3JE1QSX new;
MPRINT(EM_DIAGRAM):   run;
1725597    filename emflow
1725597  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural14: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1725598    *------------------------------------------------------------*;
1725599    * AutoNeural14: Scoring DATA data;
1725600    *------------------------------------------------------------*;
1725601    data EMWS8.AutoNeural14_TRAIN
1725602    / view=EMWS8.AutoNeural14_TRAIN
1725603    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural14_TRAIN / view=EMWS8.AutoNeural14_TRAIN ;
1725604    set EMWS8.PRINCOMP_TRAIN
1725605    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
1725606    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\EMFLOWSCORE.sas.
1725607   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1725608   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1725609   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1725610   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1725611   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1725612   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1725613   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1725614   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1725615   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1725616   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1725617   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1725618   +LENGTH _WARN_ $4
1725619   +      F_DepVar  $ 12
1725620   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1725621   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1725622   +
1725623   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1725624   +
1725625   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1725626   +
1725627   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1725628   +
1725629   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1725630   +
1725631   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1725632   +
1725633   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1725634   +
1725635   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1725636   +
1725637   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1725638   +
1725639   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1725640   +
1725641   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1725642   +
1725643   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1725644   +
1725645   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1725646   +
1725647   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1725648   +
1725649   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1725650   +
1725651   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1725652   +
1725653   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1725654   +
1725655   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1725656   +
1725657   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1725658   +
1725659   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1725660   +
1725661   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1725662   +
1725663   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1725664   +
1725665   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1725666   +
1725667   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1725668   +
1725669   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1725670   +
1725671   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1725672   +
1725673   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1725674   +
1725675   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1725676   +
1725677   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1725678   +
1725679   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1725680   +
1725681   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1725682   +
1725683   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1725684   +
1725685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725686   +*** Checking missing input Interval
1725687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1725688   +
1725689   +IF NMISS(
1725690   +   PC_1 ,
1725691   +   PC_10 ,
1725692   +   PC_11 ,
1725693   +   PC_12 ,
1725694   +   PC_13 ,
1725695   +   PC_14 ,
1725696   +   PC_15 ,
1725697   +   PC_16 ,
1725698   +   PC_17 ,
1725699   +   PC_2 ,
1725700   +   PC_3 ,
1725701   +   PC_4 ,
1725702   +   PC_5 ,
1725703   +   PC_6 ,
1725704   +   PC_7 ,
1725705   +   PC_8 ,
1725706   +   PC_9 ,
1725707   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1725708   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1725709   +
1725710   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1725711   +END;
MPRINT(EM_DIAGRAM):   END;
1725712   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725713   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1725714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725715   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1725716   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1725717   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1725718   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1725719   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1725720   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1725721   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1725722   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1725723   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1725724   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1725725   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1725726   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1725727   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1725728   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1725729   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1725730   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1725731   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1725732   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1725733   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1725734   +END;
MPRINT(EM_DIAGRAM):   END;
1725735   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1725736   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1725737   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1725738   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1725739   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1725740   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1725741   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1725742   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1725743   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1725744   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1725745   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1725746   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1725747   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1725748   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1725749   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1725750   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1725751   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1725752   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1725753   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1725754   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1725755   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1725756   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1725757   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1725758   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1725759   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1725760   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1725761   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1725762   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1725763   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1725764   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1725765   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1725766   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1725767   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1725768   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1725769   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1725770   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1725771   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1725772   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1725773   +END;
MPRINT(EM_DIAGRAM):   END;
1725774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725775   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1725776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1725778   +   H1x1_1  =    -0.10164757372038 * S_PC_1  +     0.23564366900821 * S_PC_10
1725779   +          +     0.03218545477975 * S_PC_11  +    -0.20105633481452 * S_PC_12
1725780   +          +     0.46218918894091 * S_PC_13  +    -0.29807808914991 * S_PC_14
1725781   +          +     0.17583796979491 * S_PC_15  +     0.03033544353418 * S_PC_16
1725782   +          +     0.25021734275353 * S_PC_17  +    -0.24021688140508 * S_PC_2
1725783   +          +     -0.1102916075826 * S_PC_3  +    -0.00240745238609 * S_PC_4
1725784   +          +     -0.0274131852155 * S_PC_5  +    -0.19254616122832 * S_PC_6
1725785   +          +     0.11532321939184 * S_PC_7  +     -0.6677111259933 * S_PC_8
1725786   +          +    -0.25753224620538 * S_PC_9  +    -0.30186388169486 *
1725787   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10164757372038 * S_PC_1 + 0.23564366900821 * S_PC_10 + 
0.03218545477975 * S_PC_11 + -0.20105633481452 * S_PC_12 + 0.46218918894091 * S_PC_13 + 
-0.29807808914991 * S_PC_14 + 0.17583796979491 * S_PC_15 + 0.03033544353418 * S_PC_16 + 
0.25021734275353 * S_PC_17 + -0.24021688140508 * S_PC_2 + -0.1102916075826 * S_PC_3 + 
-0.00240745238609 * S_PC_4 + -0.0274131852155 * S_PC_5 + -0.19254616122832 * S_PC_6 + 
0.11532321939184 * S_PC_7 + -0.6677111259933 * S_PC_8 + -0.25753224620538 * S_PC_9 + 
-0.30186388169486 * S_Year_Birth ;
1725788   +   H1x1_2  =     0.69328570966752 * S_PC_1  +    -0.35284925856721 * S_PC_10
1725789   +          +     0.02290654324776 * S_PC_11  +     0.00970894937381 * S_PC_12
1725790   +          +    -0.04741179982085 * S_PC_13  +    -0.20302788277292 * S_PC_14
1725791   +          +    -0.05864666074321 * S_PC_15  +     0.05995123856812 * S_PC_16
1725792   +          +     0.23138477322273 * S_PC_17  +    -0.34252755127761 * S_PC_2
1725793   +          +     0.17382271435334 * S_PC_3  +    -0.01868728319481 * S_PC_4
1725794   +          +    -0.40174697156367 * S_PC_5  +    -0.06272489483222 * S_PC_6
1725795   +          +     0.02659607049312 * S_PC_7  +    -0.10881698069286 * S_PC_8
1725796   +          +     0.15346273425449 * S_PC_9  +    -0.34879716236226 *
1725797   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69328570966752 * S_PC_1 + -0.35284925856721 * S_PC_10 + 
0.02290654324776 * S_PC_11 + 0.00970894937381 * S_PC_12 + -0.04741179982085 * S_PC_13 + 
-0.20302788277292 * S_PC_14 + -0.05864666074321 * S_PC_15 + 0.05995123856812 * S_PC_16 + 
0.23138477322273 * S_PC_17 + -0.34252755127761 * S_PC_2 + 0.17382271435334 * S_PC_3 + 
-0.01868728319481 * S_PC_4 + -0.40174697156367 * S_PC_5 + -0.06272489483222 * S_PC_6 + 
0.02659607049312 * S_PC_7 + -0.10881698069286 * S_PC_8 + 0.15346273425449 * S_PC_9 + 
-0.34879716236226 * S_Year_Birth ;
1725798   +   H1x1_3  =     0.93991744730684 * S_PC_1  +     0.21004088081659 * S_PC_10
1725799   +          +     0.04043531851461 * S_PC_11  +     0.38076091002631 * S_PC_12
1725800   +          +     0.34034977799818 * S_PC_13  +    -0.04437127519769 * S_PC_14
1725801   +          +    -0.32171755712003 * S_PC_15  +     -0.2933258304452 * S_PC_16
1725802   +          +    -0.23861752489561 * S_PC_17  +     0.46352713116162 * S_PC_2
1725803   +          +    -0.09577439848272 * S_PC_3  +     0.22567854138108 * S_PC_4
1725804   +          +     0.33161087629213 * S_PC_5  +    -0.34451188357259 * S_PC_6
1725805   +          +     0.09767167948587 * S_PC_7  +    -0.04416656932503 * S_PC_8
1725806   +          +    -0.19126765564439 * S_PC_9  +     0.01696566154262 *
1725807   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.93991744730684 * S_PC_1 + 0.21004088081659 * S_PC_10 + 
0.04043531851461 * S_PC_11 + 0.38076091002631 * S_PC_12 + 0.34034977799818 * S_PC_13 + 
-0.04437127519769 * S_PC_14 + -0.32171755712003 * S_PC_15 + -0.2933258304452 * S_PC_16 + 
-0.23861752489561 * S_PC_17 + 0.46352713116162 * S_PC_2 + -0.09577439848272 * S_PC_3 + 
0.22567854138108 * S_PC_4 + 0.33161087629213 * S_PC_5 + -0.34451188357259 * S_PC_6 + 
0.09767167948587 * S_PC_7 + -0.04416656932503 * S_PC_8 + -0.19126765564439 * S_PC_9 + 
0.01696566154262 * S_Year_Birth ;
1725808   +   H1x1_4  =    -0.49573102444764 * S_PC_1  +     0.22232925363327 * S_PC_10
1725809   +          +    -0.35780218268518 * S_PC_11  +    -0.41209217464771 * S_PC_12
1725810   +          +      0.1179498443288 * S_PC_13  +     0.17628378505051 * S_PC_14
1725811   +          +     0.21318677923196 * S_PC_15  +     0.07202379004462 * S_PC_16
1725812   +          +    -0.08037138282193 * S_PC_17  +     0.65976091792431 * S_PC_2
1725813   +          +    -0.27807281453857 * S_PC_3  +    -0.08689369989391 * S_PC_4
1725814   +          +     1.00856784829836 * S_PC_5  +    -0.21706066016492 * S_PC_6
1725815   +          +     0.23716358945002 * S_PC_7  +    -0.09140093918751 * S_PC_8
1725816   +          +      0.0211162515675 * S_PC_9  +      0.6353422873589 *
1725817   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49573102444764 * S_PC_1 + 0.22232925363327 * S_PC_10 + 
-0.35780218268518 * S_PC_11 + -0.41209217464771 * S_PC_12 + 0.1179498443288 * S_PC_13 + 
0.17628378505051 * S_PC_14 + 0.21318677923196 * S_PC_15 + 0.07202379004462 * S_PC_16 + 
-0.08037138282193 * S_PC_17 + 0.65976091792431 * S_PC_2 + -0.27807281453857 * S_PC_3 + 
-0.08689369989391 * S_PC_4 + 1.00856784829836 * S_PC_5 + -0.21706066016492 * S_PC_6 + 
0.23716358945002 * S_PC_7 + -0.09140093918751 * S_PC_8 + 0.0211162515675 * S_PC_9 + 
0.6353422873589 * S_Year_Birth ;
1725818   +   H1x1_5  =     0.02040134912024 * S_PC_1  +     0.05075007592975 * S_PC_10
1725819   +          +    -0.15645990555913 * S_PC_11  +    -0.01709812234954 * S_PC_12
1725820   +          +     0.40054996592819 * S_PC_13  +    -0.18950040503056 * S_PC_14
1725821   +          +     0.06047523781982 * S_PC_15  +    -0.17743373575604 * S_PC_16
1725822   +          +    -0.19467350400571 * S_PC_17  +     0.89927735899217 * S_PC_2
1725823   +          +     0.44521412231525 * S_PC_3  +    -0.33298102090281 * S_PC_4
1725824   +          +     0.05363089428662 * S_PC_5  +     0.03881454959471 * S_PC_6
1725825   +          +    -0.22983843245132 * S_PC_7  +     0.26424334847901 * S_PC_8
1725826   +          +    -0.05271169502035 * S_PC_9  +     0.00379146974401 *
1725827   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.02040134912024 * S_PC_1 + 0.05075007592975 * S_PC_10 + 
-0.15645990555913 * S_PC_11 + -0.01709812234954 * S_PC_12 + 0.40054996592819 * S_PC_13 + 
-0.18950040503056 * S_PC_14 + 0.06047523781982 * S_PC_15 + -0.17743373575604 * S_PC_16 + 
-0.19467350400571 * S_PC_17 + 0.89927735899217 * S_PC_2 + 0.44521412231525 * S_PC_3 + 
-0.33298102090281 * S_PC_4 + 0.05363089428662 * S_PC_5 + 0.03881454959471 * S_PC_6 + 
-0.22983843245132 * S_PC_7 + 0.26424334847901 * S_PC_8 + -0.05271169502035 * S_PC_9 + 
0.00379146974401 * S_Year_Birth ;
1725828   +   H1x1_6  =    -0.33275570391765 * S_PC_1  +     -0.2596575581091 * S_PC_10
1725829   +          +      0.4888454490764 * S_PC_11  +     0.22831374108122 * S_PC_12
1725830   +          +    -0.04376514466691 * S_PC_13  +    -0.13785898130709 * S_PC_14
1725831   +          +    -0.11680863449762 * S_PC_15  +    -0.07518218015133 * S_PC_16
1725832   +          +    -0.28918738454724 * S_PC_17  +     0.22007508424835 * S_PC_2
1725833   +          +      0.4220725647584 * S_PC_3  +    -0.29485122266251 * S_PC_4
1725834   +          +     0.30806088125759 * S_PC_5  +    -0.68630199360769 * S_PC_6
1725835   +          +    -0.09428563446862 * S_PC_7  +    -0.54659793803024 * S_PC_8
1725836   +          +    -0.41839207546201 * S_PC_9  +    -0.26675361273026 *
1725837   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.33275570391765 * S_PC_1 + -0.2596575581091 * S_PC_10 + 
0.4888454490764 * S_PC_11 + 0.22831374108122 * S_PC_12 + -0.04376514466691 * S_PC_13 + 
-0.13785898130709 * S_PC_14 + -0.11680863449762 * S_PC_15 + -0.07518218015133 * S_PC_16 + 
-0.28918738454724 * S_PC_17 + 0.22007508424835 * S_PC_2 + 0.4220725647584 * S_PC_3 + 
-0.29485122266251 * S_PC_4 + 0.30806088125759 * S_PC_5 + -0.68630199360769 * S_PC_6 + 
-0.09428563446862 * S_PC_7 + -0.54659793803024 * S_PC_8 + -0.41839207546201 * S_PC_9 + 
-0.26675361273026 * S_Year_Birth ;
1725838   +   H1x1_1  =     0.22559498123533 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22559498123533 + H1x1_1 ;
1725839   +   H1x1_2  =    -1.29065161913632 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.29065161913632 + H1x1_2 ;
1725840   +   H1x1_3  =    -0.93756126423055 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93756126423055 + H1x1_3 ;
1725841   +   H1x1_4  =    -0.33996906467692 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.33996906467692 + H1x1_4 ;
1725842   +   H1x1_5  =     1.34348361378973 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.34348361378973 + H1x1_5 ;
1725843   +   H1x1_6  =     -0.7957714824619 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.7957714824619 + H1x1_6 ;
1725844   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1725845   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1725846   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1725847   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1725848   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1725849   +   H1x1_6  = SIN(H1x1_6 );
MPRINT(EM_DIAGRAM):   H1x1_6 = SIN(H1x1_6 );
1725850   +END;
MPRINT(EM_DIAGRAM):   END;
1725851   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1725852   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1725853   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1725854   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1725855   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1725856   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1725857   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1725858   +END;
MPRINT(EM_DIAGRAM):   END;
1725859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725860   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1725861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725862   +
1725863   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1725864   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1725865   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1725866   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1725867   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1725868   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1725869   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1725870   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1725871   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1725872   +end;
MPRINT(EM_DIAGRAM):   end;
1725873   +else do;
MPRINT(EM_DIAGRAM):   else do;
1725874   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1725875   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1725876   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1725877   +   end;
MPRINT(EM_DIAGRAM):   end;
1725878   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1725879   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1725880   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1725881   +   end;
MPRINT(EM_DIAGRAM):   end;
1725882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1725883   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1725884   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1725885   +   end;
MPRINT(EM_DIAGRAM):   end;
1725886   +end;
MPRINT(EM_DIAGRAM):   end;
1725887   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1725888   +   P_DepVar1  =    -3.58923066796587 * H1x1_1  +     2.69392081819043 * H1x1_2
1725889   +          +    -1.71083444372434 * H1x1_3  +    -2.20995560146016 * H1x1_4
1725890   +          +    -2.80104378083098 * H1x1_5  +    -2.08178136334122 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.58923066796587 * H1x1_1 + 2.69392081819043 * H1x1_2 + 
-1.71083444372434 * H1x1_3 + -2.20995560146016 * H1x1_4 + -2.80104378083098 * H1x1_5 + 
-2.08178136334122 * H1x1_6 ;
1725891   +   P_DepVar1  =    -0.72100321751756 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.72100321751756 + P_DepVar1 ;
1725892   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1725893   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1725894   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1725895   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1725896   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1725897   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1725898   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1725899   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1725900   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1725901   +END;
MPRINT(EM_DIAGRAM):   END;
1725902   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1725903   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1725904   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1725905   +END;
MPRINT(EM_DIAGRAM):   END;
1725906   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1725907   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1725908   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1725909   +END;
MPRINT(EM_DIAGRAM):   END;
1725910   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1725911   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1725912   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1725913   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1725914   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1725915   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1725916   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1725917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725918   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1725919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1725920   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1725921   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1725922   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1725923   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1725924   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1725925   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1725926   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1725927   +END;
MPRINT(EM_DIAGRAM):   END;
1725928   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1725929   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1725930   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1725931   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1725932    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL14_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1725933    quit;
1725934    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1725935    filename emflow
1725935  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural14: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1725936    *------------------------------------------------------------*;
1725937    * AutoNeural14: Scoring VALIDATE data;
1725938    *------------------------------------------------------------*;
1725939    data EMWS8.AutoNeural14_VALIDATE
1725940    / view=EMWS8.AutoNeural14_VALIDATE
1725941    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural14_VALIDATE / view=EMWS8.AutoNeural14_VALIDATE ;
1725942    set EMWS8.PRINCOMP_VALIDATE
1725943    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
1725944    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\EMFLOWSCORE.sas.
1725945   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1725946   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1725947   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1725948   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1725949   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1725950   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1725951   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1725952   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1725953   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1725954   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1725955   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1725956   +LENGTH _WARN_ $4
1725957   +      F_DepVar  $ 12
1725958   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1725959   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1725960   +
1725961   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1725962   +
1725963   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1725964   +
1725965   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1725966   +
1725967   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1725968   +
1725969   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1725970   +
1725971   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1725972   +
1725973   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1725974   +
1725975   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1725976   +
1725977   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1725978   +
1725979   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1725980   +
1725981   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1725982   +
1725983   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1725984   +
1725985   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1725986   +
1725987   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1725988   +
1725989   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1725990   +
1725991   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1725992   +
1725993   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1725994   +
1725995   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1725996   +
1725997   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1725998   +
1725999   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1726000   +
1726001   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1726002   +
1726003   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1726004   +
1726005   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1726006   +
1726007   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1726008   +
1726009   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1726010   +
1726011   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1726012   +
1726013   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1726014   +
1726015   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1726016   +
1726017   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1726018   +
1726019   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1726020   +
1726021   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1726022   +
1726023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726024   +*** Checking missing input Interval
1726025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1726026   +
1726027   +IF NMISS(
1726028   +   PC_1 ,
1726029   +   PC_10 ,
1726030   +   PC_11 ,
1726031   +   PC_12 ,
1726032   +   PC_13 ,
1726033   +   PC_14 ,
1726034   +   PC_15 ,
1726035   +   PC_16 ,
1726036   +   PC_17 ,
1726037   +   PC_2 ,
1726038   +   PC_3 ,
1726039   +   PC_4 ,
1726040   +   PC_5 ,
1726041   +   PC_6 ,
1726042   +   PC_7 ,
1726043   +   PC_8 ,
1726044   +   PC_9 ,
1726045   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1726046   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1726047   +
1726048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1726049   +END;
MPRINT(EM_DIAGRAM):   END;
1726050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726051   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1726052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726053   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1726054   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1726055   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1726056   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1726057   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1726058   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1726059   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1726060   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1726061   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1726062   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1726063   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1726064   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1726065   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1726066   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1726067   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1726068   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1726069   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1726070   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1726071   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1726072   +END;
MPRINT(EM_DIAGRAM):   END;
1726073   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1726074   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1726075   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1726076   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1726077   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1726078   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1726079   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1726080   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1726081   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1726082   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1726083   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1726084   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1726085   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1726086   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1726087   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1726088   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1726089   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1726090   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1726091   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1726092   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1726093   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1726094   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1726095   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1726096   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1726097   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1726098   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1726099   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1726100   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1726101   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1726102   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1726103   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1726104   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1726105   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1726106   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1726107   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1726108   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1726109   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1726110   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1726111   +END;
MPRINT(EM_DIAGRAM):   END;
1726112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726113   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1726114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726115   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1726116   +   H1x1_1  =    -0.10164757372038 * S_PC_1  +     0.23564366900821 * S_PC_10
1726117   +          +     0.03218545477975 * S_PC_11  +    -0.20105633481452 * S_PC_12
1726118   +          +     0.46218918894091 * S_PC_13  +    -0.29807808914991 * S_PC_14
1726119   +          +     0.17583796979491 * S_PC_15  +     0.03033544353418 * S_PC_16
1726120   +          +     0.25021734275353 * S_PC_17  +    -0.24021688140508 * S_PC_2
1726121   +          +     -0.1102916075826 * S_PC_3  +    -0.00240745238609 * S_PC_4
1726122   +          +     -0.0274131852155 * S_PC_5  +    -0.19254616122832 * S_PC_6
1726123   +          +     0.11532321939184 * S_PC_7  +     -0.6677111259933 * S_PC_8
1726124   +          +    -0.25753224620538 * S_PC_9  +    -0.30186388169486 *
1726125   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.10164757372038 * S_PC_1 + 0.23564366900821 * S_PC_10 + 
0.03218545477975 * S_PC_11 + -0.20105633481452 * S_PC_12 + 0.46218918894091 * S_PC_13 + 
-0.29807808914991 * S_PC_14 + 0.17583796979491 * S_PC_15 + 0.03033544353418 * S_PC_16 + 
0.25021734275353 * S_PC_17 + -0.24021688140508 * S_PC_2 + -0.1102916075826 * S_PC_3 + 
-0.00240745238609 * S_PC_4 + -0.0274131852155 * S_PC_5 + -0.19254616122832 * S_PC_6 + 
0.11532321939184 * S_PC_7 + -0.6677111259933 * S_PC_8 + -0.25753224620538 * S_PC_9 + 
-0.30186388169486 * S_Year_Birth ;
1726126   +   H1x1_2  =     0.69328570966752 * S_PC_1  +    -0.35284925856721 * S_PC_10
1726127   +          +     0.02290654324776 * S_PC_11  +     0.00970894937381 * S_PC_12
1726128   +          +    -0.04741179982085 * S_PC_13  +    -0.20302788277292 * S_PC_14
1726129   +          +    -0.05864666074321 * S_PC_15  +     0.05995123856812 * S_PC_16
1726130   +          +     0.23138477322273 * S_PC_17  +    -0.34252755127761 * S_PC_2
1726131   +          +     0.17382271435334 * S_PC_3  +    -0.01868728319481 * S_PC_4
1726132   +          +    -0.40174697156367 * S_PC_5  +    -0.06272489483222 * S_PC_6
1726133   +          +     0.02659607049312 * S_PC_7  +    -0.10881698069286 * S_PC_8
1726134   +          +     0.15346273425449 * S_PC_9  +    -0.34879716236226 *
1726135   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69328570966752 * S_PC_1 + -0.35284925856721 * S_PC_10 + 
0.02290654324776 * S_PC_11 + 0.00970894937381 * S_PC_12 + -0.04741179982085 * S_PC_13 + 
-0.20302788277292 * S_PC_14 + -0.05864666074321 * S_PC_15 + 0.05995123856812 * S_PC_16 + 
0.23138477322273 * S_PC_17 + -0.34252755127761 * S_PC_2 + 0.17382271435334 * S_PC_3 + 
-0.01868728319481 * S_PC_4 + -0.40174697156367 * S_PC_5 + -0.06272489483222 * S_PC_6 + 
0.02659607049312 * S_PC_7 + -0.10881698069286 * S_PC_8 + 0.15346273425449 * S_PC_9 + 
-0.34879716236226 * S_Year_Birth ;
1726136   +   H1x1_3  =     0.93991744730684 * S_PC_1  +     0.21004088081659 * S_PC_10
1726137   +          +     0.04043531851461 * S_PC_11  +     0.38076091002631 * S_PC_12
1726138   +          +     0.34034977799818 * S_PC_13  +    -0.04437127519769 * S_PC_14
1726139   +          +    -0.32171755712003 * S_PC_15  +     -0.2933258304452 * S_PC_16
1726140   +          +    -0.23861752489561 * S_PC_17  +     0.46352713116162 * S_PC_2
1726141   +          +    -0.09577439848272 * S_PC_3  +     0.22567854138108 * S_PC_4
1726142   +          +     0.33161087629213 * S_PC_5  +    -0.34451188357259 * S_PC_6
1726143   +          +     0.09767167948587 * S_PC_7  +    -0.04416656932503 * S_PC_8
1726144   +          +    -0.19126765564439 * S_PC_9  +     0.01696566154262 *
1726145   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.93991744730684 * S_PC_1 + 0.21004088081659 * S_PC_10 + 
0.04043531851461 * S_PC_11 + 0.38076091002631 * S_PC_12 + 0.34034977799818 * S_PC_13 + 
-0.04437127519769 * S_PC_14 + -0.32171755712003 * S_PC_15 + -0.2933258304452 * S_PC_16 + 
-0.23861752489561 * S_PC_17 + 0.46352713116162 * S_PC_2 + -0.09577439848272 * S_PC_3 + 
0.22567854138108 * S_PC_4 + 0.33161087629213 * S_PC_5 + -0.34451188357259 * S_PC_6 + 
0.09767167948587 * S_PC_7 + -0.04416656932503 * S_PC_8 + -0.19126765564439 * S_PC_9 + 
0.01696566154262 * S_Year_Birth ;
1726146   +   H1x1_4  =    -0.49573102444764 * S_PC_1  +     0.22232925363327 * S_PC_10
1726147   +          +    -0.35780218268518 * S_PC_11  +    -0.41209217464771 * S_PC_12
1726148   +          +      0.1179498443288 * S_PC_13  +     0.17628378505051 * S_PC_14
1726149   +          +     0.21318677923196 * S_PC_15  +     0.07202379004462 * S_PC_16
1726150   +          +    -0.08037138282193 * S_PC_17  +     0.65976091792431 * S_PC_2
1726151   +          +    -0.27807281453857 * S_PC_3  +    -0.08689369989391 * S_PC_4
1726152   +          +     1.00856784829836 * S_PC_5  +    -0.21706066016492 * S_PC_6
1726153   +          +     0.23716358945002 * S_PC_7  +    -0.09140093918751 * S_PC_8
1726154   +          +      0.0211162515675 * S_PC_9  +      0.6353422873589 *
1726155   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.49573102444764 * S_PC_1 + 0.22232925363327 * S_PC_10 + 
-0.35780218268518 * S_PC_11 + -0.41209217464771 * S_PC_12 + 0.1179498443288 * S_PC_13 + 
0.17628378505051 * S_PC_14 + 0.21318677923196 * S_PC_15 + 0.07202379004462 * S_PC_16 + 
-0.08037138282193 * S_PC_17 + 0.65976091792431 * S_PC_2 + -0.27807281453857 * S_PC_3 + 
-0.08689369989391 * S_PC_4 + 1.00856784829836 * S_PC_5 + -0.21706066016492 * S_PC_6 + 
0.23716358945002 * S_PC_7 + -0.09140093918751 * S_PC_8 + 0.0211162515675 * S_PC_9 + 
0.6353422873589 * S_Year_Birth ;
1726156   +   H1x1_5  =     0.02040134912024 * S_PC_1  +     0.05075007592975 * S_PC_10
1726157   +          +    -0.15645990555913 * S_PC_11  +    -0.01709812234954 * S_PC_12
1726158   +          +     0.40054996592819 * S_PC_13  +    -0.18950040503056 * S_PC_14
1726159   +          +     0.06047523781982 * S_PC_15  +    -0.17743373575604 * S_PC_16
1726160   +          +    -0.19467350400571 * S_PC_17  +     0.89927735899217 * S_PC_2
1726161   +          +     0.44521412231525 * S_PC_3  +    -0.33298102090281 * S_PC_4
1726162   +          +     0.05363089428662 * S_PC_5  +     0.03881454959471 * S_PC_6
1726163   +          +    -0.22983843245132 * S_PC_7  +     0.26424334847901 * S_PC_8
1726164   +          +    -0.05271169502035 * S_PC_9  +     0.00379146974401 *
1726165   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.02040134912024 * S_PC_1 + 0.05075007592975 * S_PC_10 + 
-0.15645990555913 * S_PC_11 + -0.01709812234954 * S_PC_12 + 0.40054996592819 * S_PC_13 + 
-0.18950040503056 * S_PC_14 + 0.06047523781982 * S_PC_15 + -0.17743373575604 * S_PC_16 + 
-0.19467350400571 * S_PC_17 + 0.89927735899217 * S_PC_2 + 0.44521412231525 * S_PC_3 + 
-0.33298102090281 * S_PC_4 + 0.05363089428662 * S_PC_5 + 0.03881454959471 * S_PC_6 + 
-0.22983843245132 * S_PC_7 + 0.26424334847901 * S_PC_8 + -0.05271169502035 * S_PC_9 + 
0.00379146974401 * S_Year_Birth ;
1726166   +   H1x1_6  =    -0.33275570391765 * S_PC_1  +     -0.2596575581091 * S_PC_10
1726167   +          +      0.4888454490764 * S_PC_11  +     0.22831374108122 * S_PC_12
1726168   +          +    -0.04376514466691 * S_PC_13  +    -0.13785898130709 * S_PC_14
1726169   +          +    -0.11680863449762 * S_PC_15  +    -0.07518218015133 * S_PC_16
1726170   +          +    -0.28918738454724 * S_PC_17  +     0.22007508424835 * S_PC_2
1726171   +          +      0.4220725647584 * S_PC_3  +    -0.29485122266251 * S_PC_4
1726172   +          +     0.30806088125759 * S_PC_5  +    -0.68630199360769 * S_PC_6
1726173   +          +    -0.09428563446862 * S_PC_7  +    -0.54659793803024 * S_PC_8
1726174   +          +    -0.41839207546201 * S_PC_9  +    -0.26675361273026 *
1726175   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.33275570391765 * S_PC_1 + -0.2596575581091 * S_PC_10 + 
0.4888454490764 * S_PC_11 + 0.22831374108122 * S_PC_12 + -0.04376514466691 * S_PC_13 + 
-0.13785898130709 * S_PC_14 + -0.11680863449762 * S_PC_15 + -0.07518218015133 * S_PC_16 + 
-0.28918738454724 * S_PC_17 + 0.22007508424835 * S_PC_2 + 0.4220725647584 * S_PC_3 + 
-0.29485122266251 * S_PC_4 + 0.30806088125759 * S_PC_5 + -0.68630199360769 * S_PC_6 + 
-0.09428563446862 * S_PC_7 + -0.54659793803024 * S_PC_8 + -0.41839207546201 * S_PC_9 + 
-0.26675361273026 * S_Year_Birth ;
1726176   +   H1x1_1  =     0.22559498123533 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.22559498123533 + H1x1_1 ;
1726177   +   H1x1_2  =    -1.29065161913632 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.29065161913632 + H1x1_2 ;
1726178   +   H1x1_3  =    -0.93756126423055 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.93756126423055 + H1x1_3 ;
1726179   +   H1x1_4  =    -0.33996906467692 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.33996906467692 + H1x1_4 ;
1726180   +   H1x1_5  =     1.34348361378973 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.34348361378973 + H1x1_5 ;
1726181   +   H1x1_6  =     -0.7957714824619 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.7957714824619 + H1x1_6 ;
1726182   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1726183   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1726184   +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
1726185   +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
1726186   +   H1x1_5  = SIN(H1x1_5 );
MPRINT(EM_DIAGRAM):   H1x1_5 = SIN(H1x1_5 );
1726187   +   H1x1_6  = SIN(H1x1_6 );
MPRINT(EM_DIAGRAM):   H1x1_6 = SIN(H1x1_6 );
1726188   +END;
MPRINT(EM_DIAGRAM):   END;
1726189   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1726190   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1726191   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1726192   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1726193   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1726194   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1726195   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1726196   +END;
MPRINT(EM_DIAGRAM):   END;
1726197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726198   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1726199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726200   +
1726201   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1726202   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1726203   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1726204   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1726205   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1726206   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1726207   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1726208   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1726209   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1726210   +end;
MPRINT(EM_DIAGRAM):   end;
1726211   +else do;
MPRINT(EM_DIAGRAM):   else do;
1726212   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1726213   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1726214   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1726215   +   end;
MPRINT(EM_DIAGRAM):   end;
1726216   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1726217   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1726218   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1726219   +   end;
MPRINT(EM_DIAGRAM):   end;
1726220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1726221   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1726222   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1726223   +   end;
MPRINT(EM_DIAGRAM):   end;
1726224   +end;
MPRINT(EM_DIAGRAM):   end;
1726225   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1726226   +   P_DepVar1  =    -3.58923066796587 * H1x1_1  +     2.69392081819043 * H1x1_2
1726227   +          +    -1.71083444372434 * H1x1_3  +    -2.20995560146016 * H1x1_4
1726228   +          +    -2.80104378083098 * H1x1_5  +    -2.08178136334122 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.58923066796587 * H1x1_1 + 2.69392081819043 * H1x1_2 + 
-1.71083444372434 * H1x1_3 + -2.20995560146016 * H1x1_4 + -2.80104378083098 * H1x1_5 + 
-2.08178136334122 * H1x1_6 ;
1726229   +   P_DepVar1  =    -0.72100321751756 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.72100321751756 + P_DepVar1 ;
1726230   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1726231   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1726232   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1726233   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1726234   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1726235   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1726236   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1726237   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1726238   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1726239   +END;
MPRINT(EM_DIAGRAM):   END;
1726240   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1726241   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1726242   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1726243   +END;
MPRINT(EM_DIAGRAM):   END;
1726244   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1726245   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1726246   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1726247   +END;
MPRINT(EM_DIAGRAM):   END;
1726248   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1726249   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1726250   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1726251   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1726252   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1726253   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1726254   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1726255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726256   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1726257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1726258   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1726259   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1726260   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1726261   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1726262   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1726263   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1726264   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1726265   +END;
MPRINT(EM_DIAGRAM):   END;
1726266   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1726267   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1726268   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1726269   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1726270    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL14_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1726271    quit;
1726272    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1726273    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1726274    * AutoNeural14: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural14: Computing metadata for TRAIN data;
1726275    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL14_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural14\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural14_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural14_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural14_TRAIN out=WORK.M08OFBOU 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08OFBOU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M08OFBOU(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M08OFBOU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M08OFBOU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M20VUMHE NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20VUMHE;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M20VUMHE;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YHN_LT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M20VUMHE;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20VUMHE;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M20VUMHE;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20VUMHE;
MPRINT(EMADVISECOLUMNS):   set WORK.M20VUMHE;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural14_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural14";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural14";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural14: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1726587    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1726588    set EMWS8.AutoNeural14_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural14_EMINFO;
1726589    where DATA='AutoNeural14' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural14' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
1726590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL14_EMINFO.
      WHERE (DATA='AutoNeural14') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1726591    data EMWS8.AutoNeural14_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural14_EMINFO;
1726592    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1726593    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1726594    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1726598    run;
1726599    data EMWS8.AutoNeural14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural14_EMINFO;
1726600    set EMWS8.AutoNeural14_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural14_EMINFO WORK.MODELTEMP_INFO;
1726601    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL14_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1726602    proc sort data = EMWS8.AutoNeural14_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural14_EMINFO NOTHREADS;
1726603    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1726604    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL14_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL14_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1726605    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1726606    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1726607    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1726608    proc sort data = EMWS8.AutoNeural14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural14_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1726609    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1726610    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL14_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1726611    data EMWS8.AutoNeural14_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural14_EMINFO;
1726612    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1726613    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1726614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL14_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1726615    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1726616    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1726617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1726618    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.AUTONEURAL14_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL14_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
