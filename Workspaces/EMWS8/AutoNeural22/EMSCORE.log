MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "10.24 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                10.24 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0E0DAKL 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0E0DAKL new;
MPRINT(EM_DIAGRAM):   run;
2319034    filename emflow
2319034  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural22: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2319035    *------------------------------------------------------------*;
2319036    * AutoNeural22: Scoring DATA data;
2319037    *------------------------------------------------------------*;
2319038    data EMWS8.AutoNeural22_TRAIN
2319039    / view=EMWS8.AutoNeural22_TRAIN
2319040    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural22_TRAIN / view=EMWS8.AutoNeural22_TRAIN ;
2319041    set EMWS8.BINNING_TRAIN
2319042    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
2319043    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMFLOWSCORE.sas.
2319044   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2319045   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2319046   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2319047   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2319048   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2319049   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2319050   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2319051   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2319052   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2319053   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2319054   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2319055   +LENGTH _WARN_ $4
2319056   +      F_DepVar  $ 12
2319057   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2319058   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
2319059   +
2319060   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
2319061   +
2319062   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
2319063   +
2319064   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
2319065   +
2319066   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
2319067   +
2319068   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
2319069   +
2319070   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
2319071   +
2319072   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
2319073   +
2319074   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
2319075   +
2319076   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
2319077   +
2319078   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
2319079   +
2319080   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
2319081   +
2319082   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
2319083   +
2319084   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
2319085   +
2319086   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
2319087   +
2319088   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
2319089   +
2319090   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
2319091   +
2319092   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
2319093   +
2319094   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
2319095   +
2319096   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
2319097   +
2319098   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
2319099   +
2319100   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
2319101   +
2319102   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
2319103   +
2319104   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
2319105   +
2319106   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
2319107   +
2319108   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
2319109   +
2319110   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
2319111   +
2319112   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
2319113   +
2319114   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
2319115   +
2319116   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
2319117   +
2319118   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
2319119   +
2319120   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
2319121   +
2319122   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
2319123   +
2319124   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
2319125   +
2319126   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
2319127   +
2319128   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
2319129   +
2319130   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
2319131   +
2319132   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
2319133   +
2319134   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
2319135   +
2319136   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
2319137   +
2319138   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2319139   +
2319140   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2319141   +
2319142   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2319143   +
2319144   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2319145   +
2319146   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2319147   +
2319148   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2319149   +
2319150   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2319151   +
2319152   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2319153   +
2319154   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2319155   +
2319156   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2319157   +
2319158   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2319159   +
2319160   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2319161   +
2319162   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2319163   +
2319164   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2319165   +
2319166   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2319167   +
2319168   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
2319169   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
2319170   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
2319171   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2319172   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319173   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319174   +end;
MPRINT(EM_DIAGRAM):   end;
2319175   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319176   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319177   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
2319178   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319179   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
2319180   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
2319181   +   end;
MPRINT(EM_DIAGRAM):   end;
2319182   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2319183   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
2319184   +   end;
MPRINT(EM_DIAGRAM):   end;
2319185   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319186   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2319187   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319188   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319189   +   end;
MPRINT(EM_DIAGRAM):   end;
2319190   +end;
MPRINT(EM_DIAGRAM):   end;
2319191   +
2319192   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
2319193   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
2319194   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
2319195   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2319196   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2319197   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2319198   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319199   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319200   +end;
MPRINT(EM_DIAGRAM):   end;
2319201   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319202   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319203   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
2319204   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319205   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2319206   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
2319207   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
2319208   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
2319209   +   end;
MPRINT(EM_DIAGRAM):   end;
2319210   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2319211   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2319212   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
2319213   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2319214   +   end;
MPRINT(EM_DIAGRAM):   end;
2319215   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319216   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2319217   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2319218   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
2319219   +   end;
MPRINT(EM_DIAGRAM):   end;
2319220   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319221   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
2319222   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2319223   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2319224   +   end;
MPRINT(EM_DIAGRAM):   end;
2319225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319226   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2319227   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2319228   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2319229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319231   +   end;
MPRINT(EM_DIAGRAM):   end;
2319232   +end;
MPRINT(EM_DIAGRAM):   end;
2319233   +
2319234   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
2319235   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
2319236   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
2319237   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2319238   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2319239   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2319240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319242   +end;
MPRINT(EM_DIAGRAM):   end;
2319243   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319245   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
2319246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319247   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2319248   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
2319249   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
2319250   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
2319251   +   end;
MPRINT(EM_DIAGRAM):   end;
2319252   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319253   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2319254   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2319255   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
2319256   +   end;
MPRINT(EM_DIAGRAM):   end;
2319257   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2319258   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2319259   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
2319260   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2319261   +   end;
MPRINT(EM_DIAGRAM):   end;
2319262   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319263   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
2319264   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2319265   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2319266   +   end;
MPRINT(EM_DIAGRAM):   end;
2319267   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319268   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2319269   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2319270   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2319271   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319272   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319273   +   end;
MPRINT(EM_DIAGRAM):   end;
2319274   +end;
MPRINT(EM_DIAGRAM):   end;
2319275   +
2319276   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
2319277   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
2319278   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
2319279   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2319280   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2319281   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2319282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319284   +end;
MPRINT(EM_DIAGRAM):   end;
2319285   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319287   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
2319288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319289   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319290   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2319291   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
2319292   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2319293   +   end;
MPRINT(EM_DIAGRAM):   end;
2319294   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319295   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
2319296   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
2319297   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
2319298   +   end;
MPRINT(EM_DIAGRAM):   end;
2319299   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319300   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2319301   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2319302   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
2319303   +   end;
MPRINT(EM_DIAGRAM):   end;
2319304   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319305   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
2319306   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2319307   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2319308   +   end;
MPRINT(EM_DIAGRAM):   end;
2319309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319310   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2319311   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2319312   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2319313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319315   +   end;
MPRINT(EM_DIAGRAM):   end;
2319316   +end;
MPRINT(EM_DIAGRAM):   end;
2319317   +
2319318   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
2319319   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
2319320   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
2319321   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2319322   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2319323   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2319324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319326   +end;
MPRINT(EM_DIAGRAM):   end;
2319327   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319328   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319329   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
2319330   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319331   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319332   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2319333   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
2319334   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2319335   +   end;
MPRINT(EM_DIAGRAM):   end;
2319336   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319337   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
2319338   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
2319339   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
2319340   +   end;
MPRINT(EM_DIAGRAM):   end;
2319341   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319342   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2319343   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2319344   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
2319345   +   end;
MPRINT(EM_DIAGRAM):   end;
2319346   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319347   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
2319348   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2319349   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2319350   +   end;
MPRINT(EM_DIAGRAM):   end;
2319351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319352   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2319353   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2319354   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2319355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319357   +   end;
MPRINT(EM_DIAGRAM):   end;
2319358   +end;
MPRINT(EM_DIAGRAM):   end;
2319359   +
2319360   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
2319361   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
2319362   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
2319363   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2319364   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2319365   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2319366   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319367   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319368   +end;
MPRINT(EM_DIAGRAM):   end;
2319369   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319370   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319371   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
2319372   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319373   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319374   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2319375   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
2319376   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2319377   +   end;
MPRINT(EM_DIAGRAM):   end;
2319378   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319379   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2319380   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2319381   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
2319382   +   end;
MPRINT(EM_DIAGRAM):   end;
2319383   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319384   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
2319385   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
2319386   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
2319387   +   end;
MPRINT(EM_DIAGRAM):   end;
2319388   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319389   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
2319390   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2319391   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2319392   +   end;
MPRINT(EM_DIAGRAM):   end;
2319393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319394   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2319395   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2319396   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2319397   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319398   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319399   +   end;
MPRINT(EM_DIAGRAM):   end;
2319400   +end;
MPRINT(EM_DIAGRAM):   end;
2319401   +
2319402   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
2319403   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
2319404   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
2319405   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2319406   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2319407   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2319408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319410   +end;
MPRINT(EM_DIAGRAM):   end;
2319411   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319412   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319413   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
2319414   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319415   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319416   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2319417   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
2319418   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2319419   +   end;
MPRINT(EM_DIAGRAM):   end;
2319420   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319421   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2319422   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2319423   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
2319424   +   end;
MPRINT(EM_DIAGRAM):   end;
2319425   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319426   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
2319427   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
2319428   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
2319429   +   end;
MPRINT(EM_DIAGRAM):   end;
2319430   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319431   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
2319432   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2319433   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2319434   +   end;
MPRINT(EM_DIAGRAM):   end;
2319435   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319436   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2319437   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2319438   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2319439   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319440   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319441   +   end;
MPRINT(EM_DIAGRAM):   end;
2319442   +end;
MPRINT(EM_DIAGRAM):   end;
2319443   +
2319444   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
2319445   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
2319446   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
2319447   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2319448   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2319449   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2319450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319452   +end;
MPRINT(EM_DIAGRAM):   end;
2319453   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319455   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
2319456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319457   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319458   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2319459   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
2319460   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2319461   +   end;
MPRINT(EM_DIAGRAM):   end;
2319462   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319463   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
2319464   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
2319465   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
2319466   +   end;
MPRINT(EM_DIAGRAM):   end;
2319467   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319468   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2319469   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2319470   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
2319471   +   end;
MPRINT(EM_DIAGRAM):   end;
2319472   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319473   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
2319474   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2319475   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2319476   +   end;
MPRINT(EM_DIAGRAM):   end;
2319477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319478   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2319479   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2319480   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2319481   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319482   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319483   +   end;
MPRINT(EM_DIAGRAM):   end;
2319484   +end;
MPRINT(EM_DIAGRAM):   end;
2319485   +
2319486   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
2319487   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
2319488   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
2319489   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2319490   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2319491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319493   +end;
MPRINT(EM_DIAGRAM):   end;
2319494   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319496   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
2319497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319498   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319499   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
2319500   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
2319501   +   end;
MPRINT(EM_DIAGRAM):   end;
2319502   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319503   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
2319504   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
2319505   +   end;
MPRINT(EM_DIAGRAM):   end;
2319506   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319507   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
2319508   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
2319509   +   end;
MPRINT(EM_DIAGRAM):   end;
2319510   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319511   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2319512   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2319513   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319514   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319515   +   end;
MPRINT(EM_DIAGRAM):   end;
2319516   +end;
MPRINT(EM_DIAGRAM):   end;
2319517   +
2319518   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
2319519   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
2319520   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
2319521   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2319522   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2319523   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2319524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319526   +end;
MPRINT(EM_DIAGRAM):   end;
2319527   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319529   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
2319530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319531   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2319532   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
2319533   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
2319534   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
2319535   +   end;
MPRINT(EM_DIAGRAM):   end;
2319536   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319537   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2319538   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2319539   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
2319540   +   end;
MPRINT(EM_DIAGRAM):   end;
2319541   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319542   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
2319543   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2319544   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2319545   +   end;
MPRINT(EM_DIAGRAM):   end;
2319546   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2319547   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2319548   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
2319549   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2319550   +   end;
MPRINT(EM_DIAGRAM):   end;
2319551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319552   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2319553   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2319554   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2319555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319557   +   end;
MPRINT(EM_DIAGRAM):   end;
2319558   +end;
MPRINT(EM_DIAGRAM):   end;
2319559   +
2319560   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
2319561   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
2319562   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
2319563   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2319564   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2319565   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2319566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319568   +end;
MPRINT(EM_DIAGRAM):   end;
2319569   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319570   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319571   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
2319572   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319573   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319574   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2319575   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
2319576   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2319577   +   end;
MPRINT(EM_DIAGRAM):   end;
2319578   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319579   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
2319580   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
2319581   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
2319582   +   end;
MPRINT(EM_DIAGRAM):   end;
2319583   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319584   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2319585   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2319586   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
2319587   +   end;
MPRINT(EM_DIAGRAM):   end;
2319588   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319589   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
2319590   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2319591   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2319592   +   end;
MPRINT(EM_DIAGRAM):   end;
2319593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319594   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2319595   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2319596   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2319597   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319598   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319599   +   end;
MPRINT(EM_DIAGRAM):   end;
2319600   +end;
MPRINT(EM_DIAGRAM):   end;
2319601   +
2319602   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
2319603   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
2319604   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
2319605   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2319606   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2319607   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2319608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319610   +end;
MPRINT(EM_DIAGRAM):   end;
2319611   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319613   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
2319614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319615   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
2319616   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2319617   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2319618   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
2319619   +   end;
MPRINT(EM_DIAGRAM):   end;
2319620   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2319621   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2319622   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
2319623   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2319624   +   end;
MPRINT(EM_DIAGRAM):   end;
2319625   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319626   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
2319627   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
2319628   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
2319629   +   end;
MPRINT(EM_DIAGRAM):   end;
2319630   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319631   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
2319632   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2319633   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2319634   +   end;
MPRINT(EM_DIAGRAM):   end;
2319635   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319636   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2319637   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2319638   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2319639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319641   +   end;
MPRINT(EM_DIAGRAM):   end;
2319642   +end;
MPRINT(EM_DIAGRAM):   end;
2319643   +
2319644   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
2319645   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
2319646   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
2319647   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2319648   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2319649   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2319650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319652   +end;
MPRINT(EM_DIAGRAM):   end;
2319653   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319655   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
2319656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319657   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2319658   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2319659   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
2319660   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2319661   +   end;
MPRINT(EM_DIAGRAM):   end;
2319662   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2319663   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
2319664   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
2319665   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
2319666   +   end;
MPRINT(EM_DIAGRAM):   end;
2319667   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319668   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2319669   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2319670   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
2319671   +   end;
MPRINT(EM_DIAGRAM):   end;
2319672   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319673   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
2319674   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2319675   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2319676   +   end;
MPRINT(EM_DIAGRAM):   end;
2319677   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319678   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2319679   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2319680   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2319681   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319682   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319683   +   end;
MPRINT(EM_DIAGRAM):   end;
2319684   +end;
MPRINT(EM_DIAGRAM):   end;
2319685   +
2319686   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
2319687   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
2319688   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
2319689   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2319690   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2319691   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2319692   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2319693   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319694   +end;
MPRINT(EM_DIAGRAM):   end;
2319695   +else do;
MPRINT(EM_DIAGRAM):   else do;
2319696   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2319697   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
2319698   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2319699   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2319700   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
2319701   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
2319702   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
2319703   +   end;
MPRINT(EM_DIAGRAM):   end;
2319704   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2319705   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2319706   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2319707   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
2319708   +   end;
MPRINT(EM_DIAGRAM):   end;
2319709   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2319710   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2319711   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
2319712   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2319713   +   end;
MPRINT(EM_DIAGRAM):   end;
2319714   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2319715   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
2319716   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2319717   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2319718   +   end;
MPRINT(EM_DIAGRAM):   end;
2319719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2319720   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2319721   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2319722   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2319723   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2319724   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319725   +   end;
MPRINT(EM_DIAGRAM):   end;
2319726   +end;
MPRINT(EM_DIAGRAM):   end;
2319727   +
2319728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319729   +*** Checking missing input Interval
2319730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2319731   +
2319732   +IF NMISS(
2319733   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
2319734   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2319735   +
2319736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2319737   +END;
MPRINT(EM_DIAGRAM):   END;
2319738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319739   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2319740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319741   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2319742   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2319743   +END;
MPRINT(EM_DIAGRAM):   END;
2319744   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2319745   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
2319746   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
2319747   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2319748   +END;
MPRINT(EM_DIAGRAM):   END;
2319749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319750   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2319751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319753   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2319754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2319755   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2319756   +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
2319757   +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
2319758   +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
2319759   +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
2319760   +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
2319761   +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
2319762   +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
2319763   +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
2319764   +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
2319765   +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
2319766   +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
2319767   +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
2319768   +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
2319769   +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
2319770   +          +    -2.14876852259668 * GRP_MntFishProducts3
2319771   +          +     1.83260002021024 * GRP_MntFishProducts4
2319772   +          +     0.51096990118592 * GRP_MntGoldProds2
2319773   +          +     0.50696068122006 * GRP_MntGoldProds3
2319774   +          +     0.74230349643824 * GRP_MntGoldProds4
2319775   +          +     1.49045716090612 * GRP_MntMeatProducts2
2319776   +          +    -0.61254307122158 * GRP_MntMeatProducts3
2319777   +          +     1.56999187930143 * GRP_MntMeatProducts4
2319778   +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
2319779   +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
2319780   +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
2319781   +          +     1.58785113957128 * GRP_NumCatalogPurchases4
2319782   +          +    -0.62454988809727 * GRP_NumDistPurchases2
2319783   +          +     1.37295312356584 * GRP_NumDistPurchases3
2319784   +          +      1.5440119795954 * GRP_NumDistPurchases4
2319785   +          +    -0.26547715068585 * GRP_NumWebPurchases2
2319786   +          +     2.62305554684179 * GRP_NumWebPurchases3
2319787   +          +     0.91247524672275 * GRP_NumWebPurchases4
2319788   +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
2319789   +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
2319790   +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
2319791   +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
2319792   +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
2319793   +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
2319794   +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
2319795   +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
2319796   +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
2319797   +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
2319798   +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
2319799   +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
2319800   +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
2319801   +          +    -1.03235983303498 * GRP_MntFishProducts3
2319802   +          +     1.43737242782063 * GRP_MntFishProducts4
2319803   +          +    -0.10286834037331 * GRP_MntGoldProds2
2319804   +          +     0.74054061895326 * GRP_MntGoldProds3
2319805   +          +     0.27916388015938 * GRP_MntGoldProds4
2319806   +          +     0.12775665160956 * GRP_MntMeatProducts2
2319807   +          +     1.94239791535409 * GRP_MntMeatProducts3
2319808   +          +      2.8604089986372 * GRP_MntMeatProducts4
2319809   +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
2319810   +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
2319811   +          +     0.80335076525252 * GRP_NumCatalogPurchases3
2319812   +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
2319813   +          +    -0.87650147959772 * GRP_NumDistPurchases2
2319814   +          +     1.12706069993787 * GRP_NumDistPurchases3
2319815   +          +    -1.96498929641584 * GRP_NumDistPurchases4
2319816   +          +     1.06875251220076 * GRP_NumWebPurchases2
2319817   +          +     1.19584362733739 * GRP_NumWebPurchases3
2319818   +          +    -0.75462993535725 * GRP_NumWebPurchases4
2319819   +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
2319820   +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
2319821   +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
2319822   +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
2319823   +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
2319824   +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
2319825   +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
2319826   +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
2319827   +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
2319828   +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
2319829   +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
2319830   +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
2319831   +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
2319832   +          +    -0.11485741469493 * GRP_MntFishProducts3
2319833   +          +     1.45721315298108 * GRP_MntFishProducts4
2319834   +          +     0.26086838482974 * GRP_MntGoldProds2
2319835   +          +    -0.13326700912822 * GRP_MntGoldProds3
2319836   +          +    -0.31998514458297 * GRP_MntGoldProds4
2319837   +          +     0.87003612251325 * GRP_MntMeatProducts2
2319838   +          +    -0.25985022264915 * GRP_MntMeatProducts3
2319839   +          +    -0.87011310494619 * GRP_MntMeatProducts4
2319840   +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
2319841   +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
2319842   +          +     1.20111821881337 * GRP_NumCatalogPurchases3
2319843   +          +     1.02378241927709 * GRP_NumCatalogPurchases4
2319844   +          +      1.0835984835482 * GRP_NumDistPurchases2
2319845   +          +     1.45339482543591 * GRP_NumDistPurchases3
2319846   +          +     0.28792255375632 * GRP_NumDistPurchases4
2319847   +          +     1.88871344284328 * GRP_NumWebPurchases2
2319848   +          +     1.61086784930132 * GRP_NumWebPurchases3
2319849   +          +     0.49767560191528 * GRP_NumWebPurchases4
2319850   +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
2319851   +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
2319852   +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
2319853   +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
2319854   +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
2319855   +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
2319856   +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
2319857   +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
2319858   +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
2319859   +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
2319860   +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
2319861   +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
2319862   +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
2319863   +          +    -0.00259407262353 * GRP_MntFishProducts3
2319864   +          +     0.26637234051452 * GRP_MntFishProducts4
2319865   +          +     1.23072457246487 * GRP_MntGoldProds2
2319866   +          +     0.27789879553199 * GRP_MntGoldProds3
2319867   +          +    -1.84318316043809 * GRP_MntGoldProds4
2319868   +          +    -0.37980618439099 * GRP_MntMeatProducts2
2319869   +          +    -0.29547725841338 * GRP_MntMeatProducts3
2319870   +          +      1.3351420752995 * GRP_MntMeatProducts4
2319871   +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
2319872   +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
2319873   +          +     1.64715242240489 * GRP_NumCatalogPurchases3
2319874   +          +     0.01013329918753 * GRP_NumCatalogPurchases4
2319875   +          +      0.0553124072484 * GRP_NumDistPurchases2
2319876   +          +     0.76354979572241 * GRP_NumDistPurchases3
2319877   +          +     0.88878742575161 * GRP_NumDistPurchases4
2319878   +          +    -0.02629928898859 * GRP_NumWebPurchases2
2319879   +          +     1.58583162640849 * GRP_NumWebPurchases3
2319880   +          +    -0.90266287490405 * GRP_NumWebPurchases4
2319881   +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
2319882   +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
2319883   +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
2319884   +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
2319885   +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
2319886   +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
2319887   +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
2319888   +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
2319889   +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
2319890   +        GRP_Income2  +     2.20143802199151 * GRP_Income3
2319891   +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
2319892   +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
2319893   +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
2319894   +          +    -1.66553508839843 * GRP_MntFishProducts3
2319895   +          +     3.34099127472134 * GRP_MntFishProducts4
2319896   +          +    -3.77620930649926 * GRP_MntGoldProds2
2319897   +          +     2.75980592823208 * GRP_MntGoldProds3
2319898   +          +    -0.90664928399655 * GRP_MntGoldProds4
2319899   +          +    -1.27778215433985 * GRP_MntMeatProducts2
2319900   +          +    -0.38584098789626 * GRP_MntMeatProducts3
2319901   +          +      0.8642940393434 * GRP_MntMeatProducts4
2319902   +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
2319903   +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
2319904   +          +     0.54374663319998 * GRP_NumCatalogPurchases3
2319905   +          +     0.84217480467185 * GRP_NumCatalogPurchases4
2319906   +          +    -0.04373645189331 * GRP_NumDistPurchases2
2319907   +          +    -3.26167594790936 * GRP_NumDistPurchases3
2319908   +          +    -1.17302893253955 * GRP_NumDistPurchases4
2319909   +          +     1.08907656354379 * GRP_NumWebPurchases2
2319910   +          +    -1.23512651413063 * GRP_NumWebPurchases3
2319911   +          +     1.21540059785356 * GRP_NumWebPurchases4
2319912   +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
2319913   +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
2319914   +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
2319915   +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
2319916   +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
2319917   +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
2319918   +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
2319919   +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
2319920   +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
2319921   +        GRP_Income2  +     2.31528209254516 * GRP_Income3
2319922   +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
2319923   +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
2319924   +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
2319925   +          +    -2.67281939906452 * GRP_MntFishProducts3
2319926   +          +     0.40242786465667 * GRP_MntFishProducts4
2319927   +          +     1.21530608953831 * GRP_MntGoldProds2
2319928   +          +      1.3503878333604 * GRP_MntGoldProds3
2319929   +          +    -0.90580344196397 * GRP_MntGoldProds4
2319930   +          +    -1.45763540546851 * GRP_MntMeatProducts2
2319931   +          +     -1.1437696213546 * GRP_MntMeatProducts3
2319932   +          +    -0.95836970043212 * GRP_MntMeatProducts4
2319933   +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
2319934   +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
2319935   +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
2319936   +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
2319937   +          +     0.41629563300233 * GRP_NumDistPurchases2
2319938   +          +     2.64707563295858 * GRP_NumDistPurchases3
2319939   +          +    -2.61014123917694 * GRP_NumDistPurchases4
2319940   +          +     1.31436489534812 * GRP_NumWebPurchases2
2319941   +          +    -0.44152222308186 * GRP_NumWebPurchases3
2319942   +          +     1.72168992115176 * GRP_NumWebPurchases4
2319943   +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
2319944   +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
2319945   +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
2319946   +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
2319947   +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
2319948   +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
2319949   +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
2319950   +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
2319951   +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
2319952   +        GRP_Income2  +     1.14246001493098 * GRP_Income3
2319953   +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
2319954   +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
2319955   +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
2319956   +          +      -0.152562533802 * GRP_MntFishProducts3
2319957   +          +     0.16800852501402 * GRP_MntFishProducts4
2319958   +          +    -0.43436913890783 * GRP_MntGoldProds2
2319959   +          +    -0.36427695823088 * GRP_MntGoldProds3
2319960   +          +    -0.70562605444874 * GRP_MntGoldProds4
2319961   +          +      1.1896868399991 * GRP_MntMeatProducts2
2319962   +          +    -3.25683109762258 * GRP_MntMeatProducts3
2319963   +          +     1.07082922763777 * GRP_MntMeatProducts4
2319964   +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
2319965   +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
2319966   +          +     2.86401269707592 * GRP_NumCatalogPurchases3
2319967   +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
2319968   +          +     1.70072621341351 * GRP_NumDistPurchases2
2319969   +          +    -0.01744947613595 * GRP_NumDistPurchases3
2319970   +          +    -2.08742260039568 * GRP_NumDistPurchases4
2319971   +          +    -1.04444309037822 * GRP_NumWebPurchases2
2319972   +          +    -3.12746125340209 * GRP_NumWebPurchases3
2319973   +          +    -0.71369198142362 * GRP_NumWebPurchases4
2319974   +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
2319975   +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
2319976   +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
2319977   +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
2319978   +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
2319979   +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
2319980   +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
2319981   +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
2319982   +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
2319983   +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
2319984   +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
2319985   +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
2319986   +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
2319987   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2319988   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2319989   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2319990   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2319991   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2319992   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2319993   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2319994   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
2319995   +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
2319996   +END;
MPRINT(EM_DIAGRAM):   END;
2319997   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2319998   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2319999   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2320000   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2320001   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2320002   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2320003   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2320004   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2320005   +END;
MPRINT(EM_DIAGRAM):   END;
2320006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320007   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2320008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320009   +
2320010   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2320011   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2320012   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2320013   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2320014   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2320015   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320016   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2320017   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2320018   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2320019   +end;
MPRINT(EM_DIAGRAM):   end;
2320020   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320021   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2320022   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2320023   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2320024   +   end;
MPRINT(EM_DIAGRAM):   end;
2320025   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2320026   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2320027   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2320028   +   end;
MPRINT(EM_DIAGRAM):   end;
2320029   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320030   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2320031   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2320032   +   end;
MPRINT(EM_DIAGRAM):   end;
2320033   +end;
MPRINT(EM_DIAGRAM):   end;
2320034   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320035   +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
2320036   +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
2320037   +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
2320038   +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
2320039   +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
2320040   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2320041   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2320042   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2320043   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2320044   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2320045   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2320046   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2320047   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2320048   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2320049   +END;
MPRINT(EM_DIAGRAM):   END;
2320050   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320051   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2320052   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2320053   +END;
MPRINT(EM_DIAGRAM):   END;
2320054   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2320055   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2320056   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2320057   +END;
MPRINT(EM_DIAGRAM):   END;
2320058   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2320059   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2320060   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2320061   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2320062   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2320063   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2320064   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2320065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320066   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2320067   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320068   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2320069   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2320070   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2320071   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2320072   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2320073   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2320074   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2320075   +END;
MPRINT(EM_DIAGRAM):   END;
2320076   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2320077   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2320078   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2320079   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2320080    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL22_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2320081    quit;
2320082    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2320083    filename emflow
2320083  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural22: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2320084    *------------------------------------------------------------*;
2320085    * AutoNeural22: Scoring VALIDATE data;
2320086    *------------------------------------------------------------*;
2320087    data EMWS8.AutoNeural22_VALIDATE
2320088    / view=EMWS8.AutoNeural22_VALIDATE
2320089    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural22_VALIDATE / view=EMWS8.AutoNeural22_VALIDATE ;
2320090    set EMWS8.BINNING_VALIDATE
2320091    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
2320092    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\EMFLOWSCORE.sas.
2320093   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320094   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2320095   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2320096   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2320097   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2320098   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2320099   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2320100   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2320101   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2320102   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2320103   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2320104   +LENGTH _WARN_ $4
2320105   +      F_DepVar  $ 12
2320106   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2320107   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
2320108   +
2320109   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
2320110   +
2320111   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
2320112   +
2320113   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
2320114   +
2320115   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
2320116   +
2320117   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
2320118   +
2320119   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
2320120   +
2320121   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
2320122   +
2320123   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
2320124   +
2320125   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
2320126   +
2320127   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
2320128   +
2320129   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
2320130   +
2320131   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
2320132   +
2320133   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
2320134   +
2320135   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
2320136   +
2320137   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
2320138   +
2320139   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
2320140   +
2320141   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
2320142   +
2320143   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
2320144   +
2320145   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
2320146   +
2320147   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
2320148   +
2320149   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
2320150   +
2320151   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
2320152   +
2320153   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
2320154   +
2320155   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
2320156   +
2320157   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
2320158   +
2320159   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
2320160   +
2320161   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
2320162   +
2320163   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
2320164   +
2320165   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
2320166   +
2320167   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
2320168   +
2320169   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
2320170   +
2320171   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
2320172   +
2320173   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
2320174   +
2320175   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
2320176   +
2320177   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
2320178   +
2320179   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
2320180   +
2320181   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
2320182   +
2320183   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
2320184   +
2320185   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
2320186   +
2320187   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2320188   +
2320189   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2320190   +
2320191   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2320192   +
2320193   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2320194   +
2320195   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2320196   +
2320197   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2320198   +
2320199   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2320200   +
2320201   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2320202   +
2320203   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2320204   +
2320205   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2320206   +
2320207   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2320208   +
2320209   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2320210   +
2320211   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2320212   +
2320213   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2320214   +
2320215   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2320216   +
2320217   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
2320218   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
2320219   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
2320220   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2320221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320223   +end;
MPRINT(EM_DIAGRAM):   end;
2320224   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320226   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
2320227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320228   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
2320229   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
2320230   +   end;
MPRINT(EM_DIAGRAM):   end;
2320231   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2320232   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
2320233   +   end;
MPRINT(EM_DIAGRAM):   end;
2320234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320235   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
2320236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320238   +   end;
MPRINT(EM_DIAGRAM):   end;
2320239   +end;
MPRINT(EM_DIAGRAM):   end;
2320240   +
2320241   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
2320242   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
2320243   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
2320244   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2320245   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2320246   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2320247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320249   +end;
MPRINT(EM_DIAGRAM):   end;
2320250   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320251   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320252   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
2320253   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320254   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2320255   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
2320256   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
2320257   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
2320258   +   end;
MPRINT(EM_DIAGRAM):   end;
2320259   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2320260   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2320261   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
2320262   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2320263   +   end;
MPRINT(EM_DIAGRAM):   end;
2320264   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320265   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
2320266   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2320267   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
2320268   +   end;
MPRINT(EM_DIAGRAM):   end;
2320269   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320270   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
2320271   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
2320272   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
2320273   +   end;
MPRINT(EM_DIAGRAM):   end;
2320274   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320275   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
2320276   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
2320277   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
2320278   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320279   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320280   +   end;
MPRINT(EM_DIAGRAM):   end;
2320281   +end;
MPRINT(EM_DIAGRAM):   end;
2320282   +
2320283   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
2320284   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
2320285   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
2320286   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2320287   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2320288   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2320289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320291   +end;
MPRINT(EM_DIAGRAM):   end;
2320292   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320293   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320294   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
2320295   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320296   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2320297   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
2320298   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
2320299   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
2320300   +   end;
MPRINT(EM_DIAGRAM):   end;
2320301   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320302   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2320303   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2320304   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
2320305   +   end;
MPRINT(EM_DIAGRAM):   end;
2320306   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2320307   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
2320308   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
2320309   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2320310   +   end;
MPRINT(EM_DIAGRAM):   end;
2320311   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320312   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
2320313   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
2320314   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
2320315   +   end;
MPRINT(EM_DIAGRAM):   end;
2320316   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320317   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
2320318   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
2320319   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
2320320   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320321   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320322   +   end;
MPRINT(EM_DIAGRAM):   end;
2320323   +end;
MPRINT(EM_DIAGRAM):   end;
2320324   +
2320325   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
2320326   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
2320327   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
2320328   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2320329   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2320330   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2320331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320333   +end;
MPRINT(EM_DIAGRAM):   end;
2320334   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320336   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
2320337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320338   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320339   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2320340   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
2320341   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2320342   +   end;
MPRINT(EM_DIAGRAM):   end;
2320343   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320344   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
2320345   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
2320346   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
2320347   +   end;
MPRINT(EM_DIAGRAM):   end;
2320348   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320349   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
2320350   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2320351   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
2320352   +   end;
MPRINT(EM_DIAGRAM):   end;
2320353   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320354   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
2320355   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
2320356   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
2320357   +   end;
MPRINT(EM_DIAGRAM):   end;
2320358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320359   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
2320360   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
2320361   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
2320362   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320363   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320364   +   end;
MPRINT(EM_DIAGRAM):   end;
2320365   +end;
MPRINT(EM_DIAGRAM):   end;
2320366   +
2320367   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
2320368   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
2320369   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
2320370   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2320371   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2320372   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2320373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320375   +end;
MPRINT(EM_DIAGRAM):   end;
2320376   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320377   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320378   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
2320379   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320380   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320381   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2320382   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
2320383   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2320384   +   end;
MPRINT(EM_DIAGRAM):   end;
2320385   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320386   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
2320387   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
2320388   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
2320389   +   end;
MPRINT(EM_DIAGRAM):   end;
2320390   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320391   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
2320392   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2320393   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
2320394   +   end;
MPRINT(EM_DIAGRAM):   end;
2320395   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320396   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
2320397   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
2320398   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
2320399   +   end;
MPRINT(EM_DIAGRAM):   end;
2320400   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320401   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
2320402   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
2320403   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
2320404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320406   +   end;
MPRINT(EM_DIAGRAM):   end;
2320407   +end;
MPRINT(EM_DIAGRAM):   end;
2320408   +
2320409   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
2320410   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
2320411   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
2320412   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2320413   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2320414   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2320415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320417   +end;
MPRINT(EM_DIAGRAM):   end;
2320418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320420   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
2320421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320422   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320423   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2320424   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
2320425   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2320426   +   end;
MPRINT(EM_DIAGRAM):   end;
2320427   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320428   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
2320429   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2320430   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
2320431   +   end;
MPRINT(EM_DIAGRAM):   end;
2320432   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320433   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
2320434   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
2320435   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
2320436   +   end;
MPRINT(EM_DIAGRAM):   end;
2320437   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320438   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
2320439   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
2320440   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
2320441   +   end;
MPRINT(EM_DIAGRAM):   end;
2320442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320443   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
2320444   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
2320445   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
2320446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320448   +   end;
MPRINT(EM_DIAGRAM):   end;
2320449   +end;
MPRINT(EM_DIAGRAM):   end;
2320450   +
2320451   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
2320452   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
2320453   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
2320454   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2320455   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2320456   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2320457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320459   +end;
MPRINT(EM_DIAGRAM):   end;
2320460   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320461   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320462   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
2320463   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320464   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320465   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2320466   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
2320467   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2320468   +   end;
MPRINT(EM_DIAGRAM):   end;
2320469   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320470   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
2320471   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2320472   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
2320473   +   end;
MPRINT(EM_DIAGRAM):   end;
2320474   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320475   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
2320476   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
2320477   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
2320478   +   end;
MPRINT(EM_DIAGRAM):   end;
2320479   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320480   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
2320481   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
2320482   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
2320483   +   end;
MPRINT(EM_DIAGRAM):   end;
2320484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320485   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
2320486   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
2320487   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
2320488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320490   +   end;
MPRINT(EM_DIAGRAM):   end;
2320491   +end;
MPRINT(EM_DIAGRAM):   end;
2320492   +
2320493   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
2320494   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
2320495   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
2320496   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2320497   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2320498   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2320499   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320500   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320501   +end;
MPRINT(EM_DIAGRAM):   end;
2320502   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320503   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320504   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
2320505   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320506   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320507   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2320508   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
2320509   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2320510   +   end;
MPRINT(EM_DIAGRAM):   end;
2320511   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320512   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
2320513   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
2320514   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
2320515   +   end;
MPRINT(EM_DIAGRAM):   end;
2320516   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320517   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
2320518   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2320519   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
2320520   +   end;
MPRINT(EM_DIAGRAM):   end;
2320521   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320522   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
2320523   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
2320524   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
2320525   +   end;
MPRINT(EM_DIAGRAM):   end;
2320526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320527   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
2320528   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
2320529   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
2320530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320532   +   end;
MPRINT(EM_DIAGRAM):   end;
2320533   +end;
MPRINT(EM_DIAGRAM):   end;
2320534   +
2320535   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
2320536   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
2320537   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
2320538   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2320539   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2320540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320542   +end;
MPRINT(EM_DIAGRAM):   end;
2320543   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320544   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320545   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
2320546   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320547   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320548   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
2320549   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
2320550   +   end;
MPRINT(EM_DIAGRAM):   end;
2320551   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320552   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
2320553   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
2320554   +   end;
MPRINT(EM_DIAGRAM):   end;
2320555   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320556   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
2320557   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
2320558   +   end;
MPRINT(EM_DIAGRAM):   end;
2320559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320560   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
2320561   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
2320562   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320563   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320564   +   end;
MPRINT(EM_DIAGRAM):   end;
2320565   +end;
MPRINT(EM_DIAGRAM):   end;
2320566   +
2320567   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
2320568   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
2320569   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
2320570   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2320571   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2320572   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2320573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320575   +end;
MPRINT(EM_DIAGRAM):   end;
2320576   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320578   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
2320579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320580   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2320581   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
2320582   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
2320583   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
2320584   +   end;
MPRINT(EM_DIAGRAM):   end;
2320585   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320586   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2320587   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2320588   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
2320589   +   end;
MPRINT(EM_DIAGRAM):   end;
2320590   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320591   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
2320592   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
2320593   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2320594   +   end;
MPRINT(EM_DIAGRAM):   end;
2320595   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2320596   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
2320597   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
2320598   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
2320599   +   end;
MPRINT(EM_DIAGRAM):   end;
2320600   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320601   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
2320602   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
2320603   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
2320604   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320605   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320606   +   end;
MPRINT(EM_DIAGRAM):   end;
2320607   +end;
MPRINT(EM_DIAGRAM):   end;
2320608   +
2320609   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
2320610   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
2320611   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
2320612   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2320613   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2320614   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2320615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320617   +end;
MPRINT(EM_DIAGRAM):   end;
2320618   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320620   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
2320621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320622   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320623   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2320624   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
2320625   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2320626   +   end;
MPRINT(EM_DIAGRAM):   end;
2320627   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320628   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
2320629   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
2320630   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
2320631   +   end;
MPRINT(EM_DIAGRAM):   end;
2320632   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320633   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
2320634   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2320635   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
2320636   +   end;
MPRINT(EM_DIAGRAM):   end;
2320637   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320638   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
2320639   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
2320640   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
2320641   +   end;
MPRINT(EM_DIAGRAM):   end;
2320642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320643   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
2320644   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
2320645   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
2320646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320648   +   end;
MPRINT(EM_DIAGRAM):   end;
2320649   +end;
MPRINT(EM_DIAGRAM):   end;
2320650   +
2320651   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
2320652   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
2320653   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
2320654   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2320655   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2320656   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2320657   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320658   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320659   +end;
MPRINT(EM_DIAGRAM):   end;
2320660   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320661   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320662   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
2320663   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320664   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
2320665   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2320666   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2320667   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
2320668   +   end;
MPRINT(EM_DIAGRAM):   end;
2320669   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2320670   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
2320671   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
2320672   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2320673   +   end;
MPRINT(EM_DIAGRAM):   end;
2320674   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320675   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
2320676   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
2320677   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
2320678   +   end;
MPRINT(EM_DIAGRAM):   end;
2320679   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320680   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
2320681   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
2320682   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
2320683   +   end;
MPRINT(EM_DIAGRAM):   end;
2320684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320685   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
2320686   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
2320687   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
2320688   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320689   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320690   +   end;
MPRINT(EM_DIAGRAM):   end;
2320691   +end;
MPRINT(EM_DIAGRAM):   end;
2320692   +
2320693   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
2320694   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
2320695   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
2320696   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2320697   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2320698   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2320699   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320700   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320701   +end;
MPRINT(EM_DIAGRAM):   end;
2320702   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320703   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320704   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
2320705   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320706   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
2320707   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2320708   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
2320709   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2320710   +   end;
MPRINT(EM_DIAGRAM):   end;
2320711   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
2320712   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
2320713   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
2320714   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
2320715   +   end;
MPRINT(EM_DIAGRAM):   end;
2320716   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320717   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
2320718   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2320719   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
2320720   +   end;
MPRINT(EM_DIAGRAM):   end;
2320721   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320722   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
2320723   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
2320724   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
2320725   +   end;
MPRINT(EM_DIAGRAM):   end;
2320726   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320727   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
2320728   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
2320729   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
2320730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320732   +   end;
MPRINT(EM_DIAGRAM):   end;
2320733   +end;
MPRINT(EM_DIAGRAM):   end;
2320734   +
2320735   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
2320736   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
2320737   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
2320738   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2320739   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2320740   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2320741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2320742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320743   +end;
MPRINT(EM_DIAGRAM):   end;
2320744   +else do;
MPRINT(EM_DIAGRAM):   else do;
2320745   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2320746   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
2320747   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2320748   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
2320749   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
2320750   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
2320751   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
2320752   +   end;
MPRINT(EM_DIAGRAM):   end;
2320753   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
2320754   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2320755   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2320756   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
2320757   +   end;
MPRINT(EM_DIAGRAM):   end;
2320758   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
2320759   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
2320760   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
2320761   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2320762   +   end;
MPRINT(EM_DIAGRAM):   end;
2320763   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
2320764   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
2320765   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
2320766   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
2320767   +   end;
MPRINT(EM_DIAGRAM):   end;
2320768   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2320769   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
2320770   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
2320771   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
2320772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2320773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320774   +   end;
MPRINT(EM_DIAGRAM):   end;
2320775   +end;
MPRINT(EM_DIAGRAM):   end;
2320776   +
2320777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320778   +*** Checking missing input Interval
2320779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2320780   +
2320781   +IF NMISS(
2320782   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
2320783   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2320784   +
2320785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2320786   +END;
MPRINT(EM_DIAGRAM):   END;
2320787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320788   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2320789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320790   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320791   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2320792   +END;
MPRINT(EM_DIAGRAM):   END;
2320793   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2320794   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
2320795   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
2320796   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
2320797   +END;
MPRINT(EM_DIAGRAM):   END;
2320798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320799   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2320800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320802   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2320803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2320804   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2320805   +   H1x1_1  =     2.97734663226499 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.97734663226499 * S_Year_Birth ;
2320806   +   H1x1_2  =    -0.02332673614472 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02332673614472 * S_Year_Birth ;
2320807   +   H1x1_3  =    -0.21203760038885 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.21203760038885 * S_Year_Birth ;
2320808   +   H1x1_4  =    -0.93232920235603 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.93232920235603 * S_Year_Birth ;
2320809   +   H1x1_5  =     0.52440348943963 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.52440348943963 * S_Year_Birth ;
2320810   +   H1x1_6  =    -2.87318917513282 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -2.87318917513282 * S_Year_Birth ;
2320811   +   H1x1_7  =     1.25367568490371 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.25367568490371 * S_Year_Birth ;
2320812   +   H1x1_1  = H1x1_1  +     2.80677271834446 * GRP_AcceptedCmp52
2320813   +          +    -2.32565230752453 * GRP_Frq2  +     2.22037590877354 * GRP_Frq3
2320814   +          +    -3.68499358333843 * GRP_Frq4  +    -2.13081454889876 *
2320815   +        GRP_Income2  +    -0.38485085997351 * GRP_Income3
2320816   +          +     0.43520727568519 * GRP_Income4  +    -1.67383365803521 *
2320817   +        GRP_Mnt2  +    -2.27881933900388 * GRP_Mnt3  +    -0.69213755321586 *
2320818   +        GRP_Mnt4  +    -0.04079006532289 * GRP_MntFishProducts2
2320819   +          +    -2.14876852259668 * GRP_MntFishProducts3
2320820   +          +     1.83260002021024 * GRP_MntFishProducts4
2320821   +          +     0.51096990118592 * GRP_MntGoldProds2
2320822   +          +     0.50696068122006 * GRP_MntGoldProds3
2320823   +          +     0.74230349643824 * GRP_MntGoldProds4
2320824   +          +     1.49045716090612 * GRP_MntMeatProducts2
2320825   +          +    -0.61254307122158 * GRP_MntMeatProducts3
2320826   +          +     1.56999187930143 * GRP_MntMeatProducts4
2320827   +          +    -0.31632843892516 * GRP_MntWines2  +    -1.05626215752058 *
2320828   +        GRP_MntWines3  +    -0.15924458576467 * GRP_MntWines4
2320829   +          +    -1.09346439824911 * GRP_NumCatalogPurchases3
2320830   +          +     1.58785113957128 * GRP_NumCatalogPurchases4
2320831   +          +    -0.62454988809727 * GRP_NumDistPurchases2
2320832   +          +     1.37295312356584 * GRP_NumDistPurchases3
2320833   +          +      1.5440119795954 * GRP_NumDistPurchases4
2320834   +          +    -0.26547715068585 * GRP_NumWebPurchases2
2320835   +          +     2.62305554684179 * GRP_NumWebPurchases3
2320836   +          +     0.91247524672275 * GRP_NumWebPurchases4
2320837   +          +     0.71467719190546 * GRP_RFMstat2  +     0.44245796416885 *
2320838   +        GRP_RFMstat3  +      0.0238006357066 * GRP_RFMstat4
2320839   +          +    -2.17145575258416 * GRP_RMntFrq2  +    -3.29596121756931 *
2320840   +        GRP_RMntFrq3  +    -0.63464596926142 * GRP_RMntFrq4
2320841   +          +      0.2862685045527 * GRP_Recency2  +    -0.77133964406228 *
2320842   +        GRP_Recency3  +     0.83634712420156 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 2.80677271834446 * GRP_AcceptedCmp52 + 
-2.32565230752453 * GRP_Frq2 + 2.22037590877354 * GRP_Frq3 + -3.68499358333843 * GRP_Frq4 + 
-2.13081454889876 * GRP_Income2 + -0.38485085997351 * GRP_Income3 + 0.43520727568519 * 
GRP_Income4 + -1.67383365803521 * GRP_Mnt2 + -2.27881933900388 * GRP_Mnt3 + -0.69213755321586 
* GRP_Mnt4 + -0.04079006532289 * GRP_MntFishProducts2 + -2.14876852259668 * 
GRP_MntFishProducts3 + 1.83260002021024 * GRP_MntFishProducts4 + 0.51096990118592 * 
GRP_MntGoldProds2 + 0.50696068122006 * GRP_MntGoldProds3 + 0.74230349643824 * 
GRP_MntGoldProds4 + 1.49045716090612 * GRP_MntMeatProducts2 + -0.61254307122158 * 
GRP_MntMeatProducts3 + 1.56999187930143 * GRP_MntMeatProducts4 + -0.31632843892516 * 
GRP_MntWines2 + -1.05626215752058 * GRP_MntWines3 + -0.15924458576467 * GRP_MntWines4 + 
-1.09346439824911 * GRP_NumCatalogPurchases3 + 1.58785113957128 * GRP_NumCatalogPurchases4 + 
-0.62454988809727 * GRP_NumDistPurchases2 + 1.37295312356584 * GRP_NumDistPurchases3 + 
1.5440119795954 * GRP_NumDistPurchases4 + -0.26547715068585 * GRP_NumWebPurchases2 + 
2.62305554684179 * GRP_NumWebPurchases3 + 0.91247524672275 * GRP_NumWebPurchases4 + 
0.71467719190546 * GRP_RFMstat2 + 0.44245796416885 * GRP_RFMstat3 + 0.0238006357066 * 
GRP_RFMstat4 + -2.17145575258416 * GRP_RMntFrq2 + -3.29596121756931 * GRP_RMntFrq3 + 
-0.63464596926142 * GRP_RMntFrq4 + 0.2862685045527 * GRP_Recency2 + -0.77133964406228 * 
GRP_Recency3 + 0.83634712420156 * GRP_Recency4 ;
2320843   +   H1x1_2  = H1x1_2  +    -2.21554077433203 * GRP_AcceptedCmp52
2320844   +          +     -1.3297040775516 * GRP_Frq2  +     -1.2691861008704 * GRP_Frq3
2320845   +          +    -0.83350069121519 * GRP_Frq4  +    -0.45956269964658 *
2320846   +        GRP_Income2  +    -0.23636051304973 * GRP_Income3
2320847   +          +    -0.09369458285141 * GRP_Income4  +     0.28408485738252 *
2320848   +        GRP_Mnt2  +    -1.43976442737366 * GRP_Mnt3  +    -0.47811534578751 *
2320849   +        GRP_Mnt4  +     1.33306738423502 * GRP_MntFishProducts2
2320850   +          +    -1.03235983303498 * GRP_MntFishProducts3
2320851   +          +     1.43737242782063 * GRP_MntFishProducts4
2320852   +          +    -0.10286834037331 * GRP_MntGoldProds2
2320853   +          +     0.74054061895326 * GRP_MntGoldProds3
2320854   +          +     0.27916388015938 * GRP_MntGoldProds4
2320855   +          +     0.12775665160956 * GRP_MntMeatProducts2
2320856   +          +     1.94239791535409 * GRP_MntMeatProducts3
2320857   +          +      2.8604089986372 * GRP_MntMeatProducts4
2320858   +          +     0.18466046439888 * GRP_MntWines2  +     1.56362849954362 *
2320859   +        GRP_MntWines3  +    -0.74058839441389 * GRP_MntWines4
2320860   +          +     0.80335076525252 * GRP_NumCatalogPurchases3
2320861   +          +     -2.1633226572249 * GRP_NumCatalogPurchases4
2320862   +          +    -0.87650147959772 * GRP_NumDistPurchases2
2320863   +          +     1.12706069993787 * GRP_NumDistPurchases3
2320864   +          +    -1.96498929641584 * GRP_NumDistPurchases4
2320865   +          +     1.06875251220076 * GRP_NumWebPurchases2
2320866   +          +     1.19584362733739 * GRP_NumWebPurchases3
2320867   +          +    -0.75462993535725 * GRP_NumWebPurchases4
2320868   +          +     0.34313165289913 * GRP_RFMstat2  +    -3.07377616469396 *
2320869   +        GRP_RFMstat3  +    -0.30628532882149 * GRP_RFMstat4
2320870   +          +     0.90422181954504 * GRP_RMntFrq2  +    -0.82179895308246 *
2320871   +        GRP_RMntFrq3  +    -0.01336870072701 * GRP_RMntFrq4
2320872   +          +     0.78962138115092 * GRP_Recency2  +     0.35738352585872 *
2320873   +        GRP_Recency3  +    -0.83190183219938 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -2.21554077433203 * GRP_AcceptedCmp52 + 
-1.3297040775516 * GRP_Frq2 + -1.2691861008704 * GRP_Frq3 + -0.83350069121519 * GRP_Frq4 + 
-0.45956269964658 * GRP_Income2 + -0.23636051304973 * GRP_Income3 + -0.09369458285141 * 
GRP_Income4 + 0.28408485738252 * GRP_Mnt2 + -1.43976442737366 * GRP_Mnt3 + -0.47811534578751 * 
GRP_Mnt4 + 1.33306738423502 * GRP_MntFishProducts2 + -1.03235983303498 * GRP_MntFishProducts3 
+ 1.43737242782063 * GRP_MntFishProducts4 + -0.10286834037331 * GRP_MntGoldProds2 + 
0.74054061895326 * GRP_MntGoldProds3 + 0.27916388015938 * GRP_MntGoldProds4 + 0.12775665160956 
* GRP_MntMeatProducts2 + 1.94239791535409 * GRP_MntMeatProducts3 + 2.8604089986372 * 
GRP_MntMeatProducts4 + 0.18466046439888 * GRP_MntWines2 + 1.56362849954362 * GRP_MntWines3 + 
-0.74058839441389 * GRP_MntWines4 + 0.80335076525252 * GRP_NumCatalogPurchases3 + 
-2.1633226572249 * GRP_NumCatalogPurchases4 + -0.87650147959772 * GRP_NumDistPurchases2 + 
1.12706069993787 * GRP_NumDistPurchases3 + -1.96498929641584 * GRP_NumDistPurchases4 + 
1.06875251220076 * GRP_NumWebPurchases2 + 1.19584362733739 * GRP_NumWebPurchases3 + 
-0.75462993535725 * GRP_NumWebPurchases4 + 0.34313165289913 * GRP_RFMstat2 + -3.07377616469396 
* GRP_RFMstat3 + -0.30628532882149 * GRP_RFMstat4 + 0.90422181954504 * GRP_RMntFrq2 + 
-0.82179895308246 * GRP_RMntFrq3 + -0.01336870072701 * GRP_RMntFrq4 + 0.78962138115092 * 
GRP_Recency2 + 0.35738352585872 * GRP_Recency3 + -0.83190183219938 * GRP_Recency4 ;
2320874   +   H1x1_3  = H1x1_3  +     -0.1278687821469 * GRP_AcceptedCmp52
2320875   +          +     1.77838881912744 * GRP_Frq2  +    -0.95209160545855 * GRP_Frq3
2320876   +          +     2.40141754421545 * GRP_Frq4  +     0.60378783958273 *
2320877   +        GRP_Income2  +    -2.18346600414349 * GRP_Income3
2320878   +          +     0.80627498676781 * GRP_Income4  +     0.81141725300118 *
2320879   +        GRP_Mnt2  +    -0.20395009454155 * GRP_Mnt3  +     -0.3358053338153 *
2320880   +        GRP_Mnt4  +    -0.16819978312641 * GRP_MntFishProducts2
2320881   +          +    -0.11485741469493 * GRP_MntFishProducts3
2320882   +          +     1.45721315298108 * GRP_MntFishProducts4
2320883   +          +     0.26086838482974 * GRP_MntGoldProds2
2320884   +          +    -0.13326700912822 * GRP_MntGoldProds3
2320885   +          +    -0.31998514458297 * GRP_MntGoldProds4
2320886   +          +     0.87003612251325 * GRP_MntMeatProducts2
2320887   +          +    -0.25985022264915 * GRP_MntMeatProducts3
2320888   +          +    -0.87011310494619 * GRP_MntMeatProducts4
2320889   +          +     0.18840026647696 * GRP_MntWines2  +    -0.82430822747103 *
2320890   +        GRP_MntWines3  +     -0.1293341794059 * GRP_MntWines4
2320891   +          +     1.20111821881337 * GRP_NumCatalogPurchases3
2320892   +          +     1.02378241927709 * GRP_NumCatalogPurchases4
2320893   +          +      1.0835984835482 * GRP_NumDistPurchases2
2320894   +          +     1.45339482543591 * GRP_NumDistPurchases3
2320895   +          +     0.28792255375632 * GRP_NumDistPurchases4
2320896   +          +     1.88871344284328 * GRP_NumWebPurchases2
2320897   +          +     1.61086784930132 * GRP_NumWebPurchases3
2320898   +          +     0.49767560191528 * GRP_NumWebPurchases4
2320899   +          +    -2.78411910257351 * GRP_RFMstat2  +     0.84118867927224 *
2320900   +        GRP_RFMstat3  +    -0.16102328336547 * GRP_RFMstat4
2320901   +          +     0.27000998599161 * GRP_RMntFrq2  +     0.90131491180658 *
2320902   +        GRP_RMntFrq3  +    -0.16432121563449 * GRP_RMntFrq4
2320903   +          +     0.75599465145487 * GRP_Recency2  +     1.38233564862138 *
2320904   +        GRP_Recency3  +      0.0905871640358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.1278687821469 * GRP_AcceptedCmp52 + 
1.77838881912744 * GRP_Frq2 + -0.95209160545855 * GRP_Frq3 + 2.40141754421545 * GRP_Frq4 + 
0.60378783958273 * GRP_Income2 + -2.18346600414349 * GRP_Income3 + 0.80627498676781 * 
GRP_Income4 + 0.81141725300118 * GRP_Mnt2 + -0.20395009454155 * GRP_Mnt3 + -0.3358053338153 * 
GRP_Mnt4 + -0.16819978312641 * GRP_MntFishProducts2 + -0.11485741469493 * GRP_MntFishProducts3 
+ 1.45721315298108 * GRP_MntFishProducts4 + 0.26086838482974 * GRP_MntGoldProds2 + 
-0.13326700912822 * GRP_MntGoldProds3 + -0.31998514458297 * GRP_MntGoldProds4 + 
0.87003612251325 * GRP_MntMeatProducts2 + -0.25985022264915 * GRP_MntMeatProducts3 + 
-0.87011310494619 * GRP_MntMeatProducts4 + 0.18840026647696 * GRP_MntWines2 + 
-0.82430822747103 * GRP_MntWines3 + -0.1293341794059 * GRP_MntWines4 + 1.20111821881337 * 
GRP_NumCatalogPurchases3 + 1.02378241927709 * GRP_NumCatalogPurchases4 + 1.0835984835482 * 
GRP_NumDistPurchases2 + 1.45339482543591 * GRP_NumDistPurchases3 + 0.28792255375632 * 
GRP_NumDistPurchases4 + 1.88871344284328 * GRP_NumWebPurchases2 + 1.61086784930132 * 
GRP_NumWebPurchases3 + 0.49767560191528 * GRP_NumWebPurchases4 + -2.78411910257351 * 
GRP_RFMstat2 + 0.84118867927224 * GRP_RFMstat3 + -0.16102328336547 * GRP_RFMstat4 + 
0.27000998599161 * GRP_RMntFrq2 + 0.90131491180658 * GRP_RMntFrq3 + -0.16432121563449 * 
GRP_RMntFrq4 + 0.75599465145487 * GRP_Recency2 + 1.38233564862138 * GRP_Recency3 + 
0.0905871640358 * GRP_Recency4 ;
2320905   +   H1x1_4  = H1x1_4  +     0.63304456551117 * GRP_AcceptedCmp52
2320906   +          +    -0.14901142536344 * GRP_Frq2  +    -1.08381199299565 * GRP_Frq3
2320907   +          +    -0.85011511275423 * GRP_Frq4  +    -0.08287353061518 *
2320908   +        GRP_Income2  +    -0.58867333501692 * GRP_Income3
2320909   +          +      2.7097455309793 * GRP_Income4  +    -0.69224144793047 *
2320910   +        GRP_Mnt2  +    -0.68026366312168 * GRP_Mnt3  +     1.66551851821907 *
2320911   +        GRP_Mnt4  +    -1.22509209613269 * GRP_MntFishProducts2
2320912   +          +    -0.00259407262353 * GRP_MntFishProducts3
2320913   +          +     0.26637234051452 * GRP_MntFishProducts4
2320914   +          +     1.23072457246487 * GRP_MntGoldProds2
2320915   +          +     0.27789879553199 * GRP_MntGoldProds3
2320916   +          +    -1.84318316043809 * GRP_MntGoldProds4
2320917   +          +    -0.37980618439099 * GRP_MntMeatProducts2
2320918   +          +    -0.29547725841338 * GRP_MntMeatProducts3
2320919   +          +      1.3351420752995 * GRP_MntMeatProducts4
2320920   +          +    -0.69084339698082 * GRP_MntWines2  +    -2.20092193594928 *
2320921   +        GRP_MntWines3  +     1.01263725926364 * GRP_MntWines4
2320922   +          +     1.64715242240489 * GRP_NumCatalogPurchases3
2320923   +          +     0.01013329918753 * GRP_NumCatalogPurchases4
2320924   +          +      0.0553124072484 * GRP_NumDistPurchases2
2320925   +          +     0.76354979572241 * GRP_NumDistPurchases3
2320926   +          +     0.88878742575161 * GRP_NumDistPurchases4
2320927   +          +    -0.02629928898859 * GRP_NumWebPurchases2
2320928   +          +     1.58583162640849 * GRP_NumWebPurchases3
2320929   +          +    -0.90266287490405 * GRP_NumWebPurchases4
2320930   +          +    -1.30674857203711 * GRP_RFMstat2  +    -1.17342096545194 *
2320931   +        GRP_RFMstat3  +    -0.30126794428155 * GRP_RFMstat4
2320932   +          +     -0.8659792150521 * GRP_RMntFrq2  +    -1.44590383236006 *
2320933   +        GRP_RMntFrq3  +    -0.80966415705314 * GRP_RMntFrq4
2320934   +          +     0.87489420639261 * GRP_Recency2  +    -1.40960165096221 *
2320935   +        GRP_Recency3  +    -0.53680151949787 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.63304456551117 * GRP_AcceptedCmp52 + 
-0.14901142536344 * GRP_Frq2 + -1.08381199299565 * GRP_Frq3 + -0.85011511275423 * GRP_Frq4 + 
-0.08287353061518 * GRP_Income2 + -0.58867333501692 * GRP_Income3 + 2.7097455309793 * 
GRP_Income4 + -0.69224144793047 * GRP_Mnt2 + -0.68026366312168 * GRP_Mnt3 + 1.66551851821907 * 
GRP_Mnt4 + -1.22509209613269 * GRP_MntFishProducts2 + -0.00259407262353 * GRP_MntFishProducts3 
+ 0.26637234051452 * GRP_MntFishProducts4 + 1.23072457246487 * GRP_MntGoldProds2 + 
0.27789879553199 * GRP_MntGoldProds3 + -1.84318316043809 * GRP_MntGoldProds4 + 
-0.37980618439099 * GRP_MntMeatProducts2 + -0.29547725841338 * GRP_MntMeatProducts3 + 
1.3351420752995 * GRP_MntMeatProducts4 + -0.69084339698082 * GRP_MntWines2 + -2.20092193594928 
* GRP_MntWines3 + 1.01263725926364 * GRP_MntWines4 + 1.64715242240489 * 
GRP_NumCatalogPurchases3 + 0.01013329918753 * GRP_NumCatalogPurchases4 + 0.0553124072484 * 
GRP_NumDistPurchases2 + 0.76354979572241 * GRP_NumDistPurchases3 + 0.88878742575161 * 
GRP_NumDistPurchases4 + -0.02629928898859 * GRP_NumWebPurchases2 + 1.58583162640849 * 
GRP_NumWebPurchases3 + -0.90266287490405 * GRP_NumWebPurchases4 + -1.30674857203711 * 
GRP_RFMstat2 + -1.17342096545194 * GRP_RFMstat3 + -0.30126794428155 * GRP_RFMstat4 + 
-0.8659792150521 * GRP_RMntFrq2 + -1.44590383236006 * GRP_RMntFrq3 + -0.80966415705314 * 
GRP_RMntFrq4 + 0.87489420639261 * GRP_Recency2 + -1.40960165096221 * GRP_Recency3 + 
-0.53680151949787 * GRP_Recency4 ;
2320936   +   H1x1_5  = H1x1_5  +    -0.21941115903739 * GRP_AcceptedCmp52
2320937   +          +     0.45333751914711 * GRP_Frq2  +     -3.0539111804593 * GRP_Frq3
2320938   +          +     0.04419455266766 * GRP_Frq4  +     0.43424963383962 *
2320939   +        GRP_Income2  +     2.20143802199151 * GRP_Income3
2320940   +          +    -0.28702964858037 * GRP_Income4  +    -1.13156956520544 *
2320941   +        GRP_Mnt2  +     1.50720291442363 * GRP_Mnt3  +    -1.22848161283033 *
2320942   +        GRP_Mnt4  +     -0.7725131971727 * GRP_MntFishProducts2
2320943   +          +    -1.66553508839843 * GRP_MntFishProducts3
2320944   +          +     3.34099127472134 * GRP_MntFishProducts4
2320945   +          +    -3.77620930649926 * GRP_MntGoldProds2
2320946   +          +     2.75980592823208 * GRP_MntGoldProds3
2320947   +          +    -0.90664928399655 * GRP_MntGoldProds4
2320948   +          +    -1.27778215433985 * GRP_MntMeatProducts2
2320949   +          +    -0.38584098789626 * GRP_MntMeatProducts3
2320950   +          +      0.8642940393434 * GRP_MntMeatProducts4
2320951   +          +     -1.9800576470315 * GRP_MntWines2  +    -0.84678624865719 *
2320952   +        GRP_MntWines3  +    -0.71867792060605 * GRP_MntWines4
2320953   +          +     0.54374663319998 * GRP_NumCatalogPurchases3
2320954   +          +     0.84217480467185 * GRP_NumCatalogPurchases4
2320955   +          +    -0.04373645189331 * GRP_NumDistPurchases2
2320956   +          +    -3.26167594790936 * GRP_NumDistPurchases3
2320957   +          +    -1.17302893253955 * GRP_NumDistPurchases4
2320958   +          +     1.08907656354379 * GRP_NumWebPurchases2
2320959   +          +    -1.23512651413063 * GRP_NumWebPurchases3
2320960   +          +     1.21540059785356 * GRP_NumWebPurchases4
2320961   +          +     1.38488146196728 * GRP_RFMstat2  +     0.90046251067185 *
2320962   +        GRP_RFMstat3  +     1.44622088949053 * GRP_RFMstat4
2320963   +          +     0.24358390082829 * GRP_RMntFrq2  +    -1.52588683776436 *
2320964   +        GRP_RMntFrq3  +    -1.28643658389964 * GRP_RMntFrq4
2320965   +          +    -0.57567006875063 * GRP_Recency2  +    -1.38736001754893 *
2320966   +        GRP_Recency3  +    -0.14702610320846 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.21941115903739 * GRP_AcceptedCmp52 + 
0.45333751914711 * GRP_Frq2 + -3.0539111804593 * GRP_Frq3 + 0.04419455266766 * GRP_Frq4 + 
0.43424963383962 * GRP_Income2 + 2.20143802199151 * GRP_Income3 + -0.28702964858037 * 
GRP_Income4 + -1.13156956520544 * GRP_Mnt2 + 1.50720291442363 * GRP_Mnt3 + -1.22848161283033 * 
GRP_Mnt4 + -0.7725131971727 * GRP_MntFishProducts2 + -1.66553508839843 * GRP_MntFishProducts3 
+ 3.34099127472134 * GRP_MntFishProducts4 + -3.77620930649926 * GRP_MntGoldProds2 + 
2.75980592823208 * GRP_MntGoldProds3 + -0.90664928399655 * GRP_MntGoldProds4 + 
-1.27778215433985 * GRP_MntMeatProducts2 + -0.38584098789626 * GRP_MntMeatProducts3 + 
0.8642940393434 * GRP_MntMeatProducts4 + -1.9800576470315 * GRP_MntWines2 + -0.84678624865719 
* GRP_MntWines3 + -0.71867792060605 * GRP_MntWines4 + 0.54374663319998 * 
GRP_NumCatalogPurchases3 + 0.84217480467185 * GRP_NumCatalogPurchases4 + -0.04373645189331 * 
GRP_NumDistPurchases2 + -3.26167594790936 * GRP_NumDistPurchases3 + -1.17302893253955 * 
GRP_NumDistPurchases4 + 1.08907656354379 * GRP_NumWebPurchases2 + -1.23512651413063 * 
GRP_NumWebPurchases3 + 1.21540059785356 * GRP_NumWebPurchases4 + 1.38488146196728 * 
GRP_RFMstat2 + 0.90046251067185 * GRP_RFMstat3 + 1.44622088949053 * GRP_RFMstat4 + 
0.24358390082829 * GRP_RMntFrq2 + -1.52588683776436 * GRP_RMntFrq3 + -1.28643658389964 * 
GRP_RMntFrq4 + -0.57567006875063 * GRP_Recency2 + -1.38736001754893 * GRP_Recency3 + 
-0.14702610320846 * GRP_Recency4 ;
2320967   +   H1x1_6  = H1x1_6  +     0.08036802334337 * GRP_AcceptedCmp52
2320968   +          +    -2.51458257290705 * GRP_Frq2  +     0.74528046172987 * GRP_Frq3
2320969   +          +    -0.77535820763324 * GRP_Frq4  +    -2.00398370232748 *
2320970   +        GRP_Income2  +     2.31528209254516 * GRP_Income3
2320971   +          +     0.31630780664757 * GRP_Income4  +    -0.52394275421685 *
2320972   +        GRP_Mnt2  +    -0.11778857296632 * GRP_Mnt3  +     0.54634621990664 *
2320973   +        GRP_Mnt4  +    -1.83414469533751 * GRP_MntFishProducts2
2320974   +          +    -2.67281939906452 * GRP_MntFishProducts3
2320975   +          +     0.40242786465667 * GRP_MntFishProducts4
2320976   +          +     1.21530608953831 * GRP_MntGoldProds2
2320977   +          +      1.3503878333604 * GRP_MntGoldProds3
2320978   +          +    -0.90580344196397 * GRP_MntGoldProds4
2320979   +          +    -1.45763540546851 * GRP_MntMeatProducts2
2320980   +          +     -1.1437696213546 * GRP_MntMeatProducts3
2320981   +          +    -0.95836970043212 * GRP_MntMeatProducts4
2320982   +          +     0.05665970127644 * GRP_MntWines2  +     0.73760441066896 *
2320983   +        GRP_MntWines3  +    -0.66251833030334 * GRP_MntWines4
2320984   +          +    -0.66756860309452 * GRP_NumCatalogPurchases3
2320985   +          +    -1.77302756421253 * GRP_NumCatalogPurchases4
2320986   +          +     0.41629563300233 * GRP_NumDistPurchases2
2320987   +          +     2.64707563295858 * GRP_NumDistPurchases3
2320988   +          +    -2.61014123917694 * GRP_NumDistPurchases4
2320989   +          +     1.31436489534812 * GRP_NumWebPurchases2
2320990   +          +    -0.44152222308186 * GRP_NumWebPurchases3
2320991   +          +     1.72168992115176 * GRP_NumWebPurchases4
2320992   +          +    -0.60634873547541 * GRP_RFMstat2  +      0.5143401306027 *
2320993   +        GRP_RFMstat3  +      0.4037230104052 * GRP_RFMstat4
2320994   +          +     1.85795667721847 * GRP_RMntFrq2  +    -1.13313695958964 *
2320995   +        GRP_RMntFrq3  +     1.21816928983774 * GRP_RMntFrq4
2320996   +          +     0.28142803075343 * GRP_Recency2  +    -0.43031870131445 *
2320997   +        GRP_Recency3  +    -0.98956301213704 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08036802334337 * GRP_AcceptedCmp52 + 
-2.51458257290705 * GRP_Frq2 + 0.74528046172987 * GRP_Frq3 + -0.77535820763324 * GRP_Frq4 + 
-2.00398370232748 * GRP_Income2 + 2.31528209254516 * GRP_Income3 + 0.31630780664757 * 
GRP_Income4 + -0.52394275421685 * GRP_Mnt2 + -0.11778857296632 * GRP_Mnt3 + 0.54634621990664 * 
GRP_Mnt4 + -1.83414469533751 * GRP_MntFishProducts2 + -2.67281939906452 * GRP_MntFishProducts3 
+ 0.40242786465667 * GRP_MntFishProducts4 + 1.21530608953831 * GRP_MntGoldProds2 + 
1.3503878333604 * GRP_MntGoldProds3 + -0.90580344196397 * GRP_MntGoldProds4 + 
-1.45763540546851 * GRP_MntMeatProducts2 + -1.1437696213546 * GRP_MntMeatProducts3 + 
-0.95836970043212 * GRP_MntMeatProducts4 + 0.05665970127644 * GRP_MntWines2 + 0.73760441066896 
* GRP_MntWines3 + -0.66251833030334 * GRP_MntWines4 + -0.66756860309452 * 
GRP_NumCatalogPurchases3 + -1.77302756421253 * GRP_NumCatalogPurchases4 + 0.41629563300233 * 
GRP_NumDistPurchases2 + 2.64707563295858 * GRP_NumDistPurchases3 + -2.61014123917694 * 
GRP_NumDistPurchases4 + 1.31436489534812 * GRP_NumWebPurchases2 + -0.44152222308186 * 
GRP_NumWebPurchases3 + 1.72168992115176 * GRP_NumWebPurchases4 + -0.60634873547541 * 
GRP_RFMstat2 + 0.5143401306027 * GRP_RFMstat3 + 0.4037230104052 * GRP_RFMstat4 + 
1.85795667721847 * GRP_RMntFrq2 + -1.13313695958964 * GRP_RMntFrq3 + 1.21816928983774 * 
GRP_RMntFrq4 + 0.28142803075343 * GRP_Recency2 + -0.43031870131445 * GRP_Recency3 + 
-0.98956301213704 * GRP_Recency4 ;
2320998   +   H1x1_7  = H1x1_7  +     0.68410670134149 * GRP_AcceptedCmp52
2320999   +          +     0.10121806405455 * GRP_Frq2  +     -1.8375798445876 * GRP_Frq3
2321000   +          +     -2.3304704350487 * GRP_Frq4  +     -0.4064720818222 *
2321001   +        GRP_Income2  +     1.14246001493098 * GRP_Income3
2321002   +          +     0.30563934221376 * GRP_Income4  +    -1.03456782830408 *
2321003   +        GRP_Mnt2  +     0.68732316665899 * GRP_Mnt3  +     0.12193839917197 *
2321004   +        GRP_Mnt4  +     1.78947230945337 * GRP_MntFishProducts2
2321005   +          +      -0.152562533802 * GRP_MntFishProducts3
2321006   +          +     0.16800852501402 * GRP_MntFishProducts4
2321007   +          +    -0.43436913890783 * GRP_MntGoldProds2
2321008   +          +    -0.36427695823088 * GRP_MntGoldProds3
2321009   +          +    -0.70562605444874 * GRP_MntGoldProds4
2321010   +          +      1.1896868399991 * GRP_MntMeatProducts2
2321011   +          +    -3.25683109762258 * GRP_MntMeatProducts3
2321012   +          +     1.07082922763777 * GRP_MntMeatProducts4
2321013   +          +     0.20781058114233 * GRP_MntWines2  +     0.58933954589501 *
2321014   +        GRP_MntWines3  +    -0.47329387352048 * GRP_MntWines4
2321015   +          +     2.86401269707592 * GRP_NumCatalogPurchases3
2321016   +          +    -0.42660183421871 * GRP_NumCatalogPurchases4
2321017   +          +     1.70072621341351 * GRP_NumDistPurchases2
2321018   +          +    -0.01744947613595 * GRP_NumDistPurchases3
2321019   +          +    -2.08742260039568 * GRP_NumDistPurchases4
2321020   +          +    -1.04444309037822 * GRP_NumWebPurchases2
2321021   +          +    -3.12746125340209 * GRP_NumWebPurchases3
2321022   +          +    -0.71369198142362 * GRP_NumWebPurchases4
2321023   +          +    -0.49060046002682 * GRP_RFMstat2  +     0.31117459893753 *
2321024   +        GRP_RFMstat3  +     1.58479219562748 * GRP_RFMstat4
2321025   +          +     0.16070553135537 * GRP_RMntFrq2  +    -1.17007677743781 *
2321026   +        GRP_RMntFrq3  +    -0.89420472751582 * GRP_RMntFrq4
2321027   +          +    -0.18368088096716 * GRP_Recency2  +    -0.51910607139607 *
2321028   +        GRP_Recency3  +     0.01857782231504 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.68410670134149 * GRP_AcceptedCmp52 + 
0.10121806405455 * GRP_Frq2 + -1.8375798445876 * GRP_Frq3 + -2.3304704350487 * GRP_Frq4 + 
-0.4064720818222 * GRP_Income2 + 1.14246001493098 * GRP_Income3 + 0.30563934221376 * 
GRP_Income4 + -1.03456782830408 * GRP_Mnt2 + 0.68732316665899 * GRP_Mnt3 + 0.12193839917197 * 
GRP_Mnt4 + 1.78947230945337 * GRP_MntFishProducts2 + -0.152562533802 * GRP_MntFishProducts3 + 
0.16800852501402 * GRP_MntFishProducts4 + -0.43436913890783 * GRP_MntGoldProds2 + 
-0.36427695823088 * GRP_MntGoldProds3 + -0.70562605444874 * GRP_MntGoldProds4 + 
1.1896868399991 * GRP_MntMeatProducts2 + -3.25683109762258 * GRP_MntMeatProducts3 + 
1.07082922763777 * GRP_MntMeatProducts4 + 0.20781058114233 * GRP_MntWines2 + 0.58933954589501 
* GRP_MntWines3 + -0.47329387352048 * GRP_MntWines4 + 2.86401269707592 * 
GRP_NumCatalogPurchases3 + -0.42660183421871 * GRP_NumCatalogPurchases4 + 1.70072621341351 * 
GRP_NumDistPurchases2 + -0.01744947613595 * GRP_NumDistPurchases3 + -2.08742260039568 * 
GRP_NumDistPurchases4 + -1.04444309037822 * GRP_NumWebPurchases2 + -3.12746125340209 * 
GRP_NumWebPurchases3 + -0.71369198142362 * GRP_NumWebPurchases4 + -0.49060046002682 * 
GRP_RFMstat2 + 0.31117459893753 * GRP_RFMstat3 + 1.58479219562748 * GRP_RFMstat4 + 
0.16070553135537 * GRP_RMntFrq2 + -1.17007677743781 * GRP_RMntFrq3 + -0.89420472751582 * 
GRP_RMntFrq4 + -0.18368088096716 * GRP_Recency2 + -0.51910607139607 * GRP_Recency3 + 
0.01857782231504 * GRP_Recency4 ;
2321029   +   H1x1_1  =     1.05791912072896 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.05791912072896 + H1x1_1 ;
2321030   +   H1x1_2  =    -3.78026109193218 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -3.78026109193218 + H1x1_2 ;
2321031   +   H1x1_3  =    -0.67855740578745 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.67855740578745 + H1x1_3 ;
2321032   +   H1x1_4  =     1.43165665437202 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.43165665437202 + H1x1_4 ;
2321033   +   H1x1_5  =     0.38366959591805 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.38366959591805 + H1x1_5 ;
2321034   +   H1x1_6  =     3.31752226761072 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 3.31752226761072 + H1x1_6 ;
2321035   +   H1x1_7  =    -0.85163584413854 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.85163584413854 + H1x1_7 ;
2321036   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2321037   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2321038   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2321039   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2321040   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2321041   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2321042   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2321043   +   H1x1_6  = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_6 = 1.0 / (1.0 + EXP(MIN( - H1x1_6 , _EXP_BAR)));
2321044   +   H1x1_7  = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.0 / (1.0 + EXP(MIN( - H1x1_7 , _EXP_BAR)));
2321045   +END;
MPRINT(EM_DIAGRAM):   END;
2321046   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321047   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2321048   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2321049   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2321050   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2321051   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2321052   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2321053   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2321054   +END;
MPRINT(EM_DIAGRAM):   END;
2321055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321056   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2321057   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321058   +
2321059   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2321060   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2321061   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2321062   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2321063   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2321064   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2321065   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2321066   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2321067   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2321068   +end;
MPRINT(EM_DIAGRAM):   end;
2321069   +else do;
MPRINT(EM_DIAGRAM):   else do;
2321070   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2321071   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2321072   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2321073   +   end;
MPRINT(EM_DIAGRAM):   end;
2321074   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2321075   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2321076   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2321077   +   end;
MPRINT(EM_DIAGRAM):   end;
2321078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2321079   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2321080   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2321081   +   end;
MPRINT(EM_DIAGRAM):   end;
2321082   +end;
MPRINT(EM_DIAGRAM):   end;
2321083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2321084   +   P_DepVar1  =    -4.35435611850415 * H1x1_1  +     3.06316051292344 * H1x1_2
2321085   +          +     1.44284980602333 * H1x1_3  +    -3.32913686535523 * H1x1_4
2321086   +          +     4.44336056081802 * H1x1_5  +    -4.57997435146105 * H1x1_6
2321087   +          +      3.7324549254653 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.35435611850415 * H1x1_1 + 3.06316051292344 * H1x1_2 + 
1.44284980602333 * H1x1_3 + -3.32913686535523 * H1x1_4 + 4.44336056081802 * H1x1_5 + 
-4.57997435146105 * H1x1_6 + 3.7324549254653 * H1x1_7 ;
2321088   +   P_DepVar1  =    -0.50604500485068 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.50604500485068 + P_DepVar1 ;
2321089   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2321090   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2321091   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2321092   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2321093   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2321094   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2321095   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2321096   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2321097   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2321098   +END;
MPRINT(EM_DIAGRAM):   END;
2321099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2321100   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2321101   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2321102   +END;
MPRINT(EM_DIAGRAM):   END;
2321103   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2321104   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2321105   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2321106   +END;
MPRINT(EM_DIAGRAM):   END;
2321107   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2321108   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2321109   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2321110   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2321111   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2321112   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2321113   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2321114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321115   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2321116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2321117   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2321118   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2321119   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2321120   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2321121   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2321122   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2321123   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2321124   +END;
MPRINT(EM_DIAGRAM):   END;
2321125   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2321126   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2321127   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2321128   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2321129    run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL22_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2321130    quit;
2321131    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2321132    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2321133    * AutoNeural22: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural22: Computing metadata for TRAIN data;
2321134    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural22\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural22_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural22_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural22_TRAIN out=WORK.M12GNJJV 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12GNJJV;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M12GNJJV(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12GNJJV;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M12GNJJV;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0QQRU8B NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QQRU8B;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQRU8B;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M25H8F_Z(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQRU8B;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QQRU8B;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQRU8B;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0QQRU8B;
MPRINT(EMADVISECOLUMNS):   set WORK.M0QQRU8B;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural22";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural22";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural22: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2321446    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2321447    set EMWS8.AutoNeural22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural22_EMINFO;
2321448    where DATA='AutoNeural22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural22' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
2321449    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL22_EMINFO.
      WHERE (DATA='AutoNeural22') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321450    data EMWS8.AutoNeural22_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural22_EMINFO;
2321451    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2321452    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2321453    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2321457    run;
2321458    data EMWS8.AutoNeural22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural22_EMINFO;
2321459    set EMWS8.AutoNeural22_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural22_EMINFO WORK.MODELTEMP_INFO;
2321460    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL22_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321461    proc sort data = EMWS8.AutoNeural22_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural22_EMINFO NOTHREADS;
2321462    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2321463    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL22_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321464    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
2321465    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2321466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321467    proc sort data = EMWS8.AutoNeural22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2321468    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2321469    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL22_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321470    data EMWS8.AutoNeural22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural22_EMINFO;
2321471    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2321472    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2321473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL22_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2321474    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2321475    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2321476    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2321477    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.AUTONEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL22_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
