MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2N6U26X 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2N6U26X new;
MPRINT(EM_DIAGRAM):   run;
206802     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
206803     set EMWS8.Neural10_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_OUTKEY;
206804     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
206805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL10_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

206806     filename emflow
206806   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206807     *------------------------------------------------------------*;
206808     * Neural10: Scoring DATA data;
206809     *------------------------------------------------------------*;
206810     data EMWS8.Neural10_TRAIN
206811     / view=EMWS8.Neural10_TRAIN
206812     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_TRAIN / view=EMWS8.Neural10_TRAIN ;
206813     set EMWS8.Meta_TRAIN
206814     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
206815     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas.
206816    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
206817    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
206818    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
206819    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
206820    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
206821    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
206822    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
206823    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
206824    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
206825    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
206826    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
206827    +LENGTH _WARN_ $4
206828    +      F_DepVar  $ 12
206829    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
206830    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
206831    +
206832    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
206833    +
206834    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
206835    +
206836    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
206837    +
206838    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
206839    +
206840    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
206841    +
206842    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
206843    +
206844    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
206845    +
206846    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
206847    +
206848    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
206849    +
206850    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
206851    +
206852    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
206853    +
206854    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
206855    +
206856    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
206857    +
206858    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
206859    +
206860    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
206861    +
206862    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
206863    +
206864    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
206865    +
206866    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
206867    +
206868    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
206869    +
206870    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
206871    +
206872    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
206873    +
206874    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
206875    +
206876    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
206877    +
206878    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
206879    +
206880    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
206881    +
206882    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
206883    +
206884    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
206885    +
206886    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
206887    +
206888    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
206889    +
206890    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
206891    +
206892    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
206893    +
206894    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
206895    +
206896    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
206897    +
206898    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
206899    +
206900    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
206901    +
206902    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
206903    +
206904    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
206905    +
206906    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
206907    +
206908    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
206909    +
206910    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
206911    +
206912    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
206913    +
206914    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
206915    +
206916    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
206917    +
206918    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
206919    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
206920    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
206921    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
206922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206924    +end;
MPRINT(EM_DIAGRAM):   end;
206925    +else do;
MPRINT(EM_DIAGRAM):   else do;
206926    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206927    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
206928    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206929    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206930    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
206931    +   end;
MPRINT(EM_DIAGRAM):   end;
206932    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206933    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
206934    +   end;
MPRINT(EM_DIAGRAM):   end;
206935    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206936    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
206937    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206938    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206939    +   end;
MPRINT(EM_DIAGRAM):   end;
206940    +end;
MPRINT(EM_DIAGRAM):   end;
206941    +
206942    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
206943    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
206944    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
206945    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
206946    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206947    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206948    +end;
MPRINT(EM_DIAGRAM):   end;
206949    +else do;
MPRINT(EM_DIAGRAM):   else do;
206950    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206951    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
206952    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206953    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206954    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
206955    +   end;
MPRINT(EM_DIAGRAM):   end;
206956    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206957    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
206958    +   end;
MPRINT(EM_DIAGRAM):   end;
206959    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206960    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
206961    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206962    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206963    +   end;
MPRINT(EM_DIAGRAM):   end;
206964    +end;
MPRINT(EM_DIAGRAM):   end;
206965    +
206966    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
206967    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
206968    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
206969    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
206970    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206971    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206972    +end;
MPRINT(EM_DIAGRAM):   end;
206973    +else do;
MPRINT(EM_DIAGRAM):   else do;
206974    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206975    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
206976    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206977    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
206978    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
206979    +   end;
MPRINT(EM_DIAGRAM):   end;
206980    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
206981    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
206982    +   end;
MPRINT(EM_DIAGRAM):   end;
206983    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206984    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
206985    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206986    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206987    +   end;
MPRINT(EM_DIAGRAM):   end;
206988    +end;
MPRINT(EM_DIAGRAM):   end;
206989    +
206990    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
206991    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
206992    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
206993    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
206994    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206995    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206996    +end;
MPRINT(EM_DIAGRAM):   end;
206997    +else do;
MPRINT(EM_DIAGRAM):   else do;
206998    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206999    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
207000    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207001    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207002    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
207003    +   end;
MPRINT(EM_DIAGRAM):   end;
207004    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207005    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
207006    +   end;
MPRINT(EM_DIAGRAM):   end;
207007    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207008    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
207009    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207010    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207011    +   end;
MPRINT(EM_DIAGRAM):   end;
207012    +end;
MPRINT(EM_DIAGRAM):   end;
207013    +
207014    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
207015    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
207016    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
207017    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
207018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207020    +end;
MPRINT(EM_DIAGRAM):   end;
207021    +else do;
MPRINT(EM_DIAGRAM):   else do;
207022    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207023    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
207024    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207025    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207026    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
207027    +   end;
MPRINT(EM_DIAGRAM):   end;
207028    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207029    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
207030    +   end;
MPRINT(EM_DIAGRAM):   end;
207031    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207032    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
207033    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207034    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207035    +   end;
MPRINT(EM_DIAGRAM):   end;
207036    +end;
MPRINT(EM_DIAGRAM):   end;
207037    +
207038    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
207039    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
207040    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
207041    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
207042    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207043    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207044    +end;
MPRINT(EM_DIAGRAM):   end;
207045    +else do;
MPRINT(EM_DIAGRAM):   else do;
207046    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207047    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
207048    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207049    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207050    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
207051    +   end;
MPRINT(EM_DIAGRAM):   end;
207052    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207053    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
207054    +   end;
MPRINT(EM_DIAGRAM):   end;
207055    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207056    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
207057    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207058    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207059    +   end;
MPRINT(EM_DIAGRAM):   end;
207060    +end;
MPRINT(EM_DIAGRAM):   end;
207061    +
207062    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
207063    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
207064    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
207065    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
207066    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207067    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207068    +end;
MPRINT(EM_DIAGRAM):   end;
207069    +else do;
MPRINT(EM_DIAGRAM):   else do;
207070    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207071    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
207072    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207073    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
207074    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
207075    +   end;
MPRINT(EM_DIAGRAM):   end;
207076    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
207077    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
207078    +   end;
MPRINT(EM_DIAGRAM):   end;
207079    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207080    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
207081    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207082    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207083    +   end;
MPRINT(EM_DIAGRAM):   end;
207084    +end;
MPRINT(EM_DIAGRAM):   end;
207085    +
207086    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
207087    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
207088    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
207089    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
207090    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
207091    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
207092    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
207093    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
207094    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
207095    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
207096    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
207097    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
207098    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
207099    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207100    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207101    +end;
MPRINT(EM_DIAGRAM):   end;
207102    +else do;
MPRINT(EM_DIAGRAM):   else do;
207103    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
207104    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
207105    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207106    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
207107    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
207108    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
207109    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
207110    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
207111    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207112    +         end;
MPRINT(EM_DIAGRAM):   end;
207113    +         else do;
MPRINT(EM_DIAGRAM):   else do;
207114    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
207115    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
207116    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207117    +            end;
MPRINT(EM_DIAGRAM):   end;
207118    +         end;
MPRINT(EM_DIAGRAM):   end;
207119    +      end;
MPRINT(EM_DIAGRAM):   end;
207120    +      else do;
MPRINT(EM_DIAGRAM):   else do;
207121    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
207122    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
207123    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207124    +         end;
MPRINT(EM_DIAGRAM):   end;
207125    +      end;
MPRINT(EM_DIAGRAM):   end;
207126    +   end;
MPRINT(EM_DIAGRAM):   end;
207127    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207128    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
207129    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
207130    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207131    +      end;
MPRINT(EM_DIAGRAM):   end;
207132    +      else do;
MPRINT(EM_DIAGRAM):   else do;
207133    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
207134    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
207135    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
207136    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
207137    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
207138    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207139    +         end;
MPRINT(EM_DIAGRAM):   end;
207140    +      end;
MPRINT(EM_DIAGRAM):   end;
207141    +   end;
MPRINT(EM_DIAGRAM):   end;
207142    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
207143    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
207144    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
207145    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
207146    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
207147    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207148    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207149    +   end;
MPRINT(EM_DIAGRAM):   end;
207150    +end;
MPRINT(EM_DIAGRAM):   end;
207151    +
207152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207153    +*** Checking missing input Interval
207154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
207155    +
207156    +IF NMISS(
207157    +   AcceptedCmpTotal ,
207158    +   Kidhome ,
207159    +   Mnt ,
207160    +   MntFishProducts ,
207161    +   MntFruits ,
207162    +   MntGoldProds ,
207163    +   MntMeatProducts ,
207164    +   MntSweetProducts ,
207165    +   MntWines ,
207166    +   NumCatalogPurchases ,
207167    +   NumDealsPurchases ,
207168    +   NumDistPurchases ,
207169    +   NumStorePurchases ,
207170    +   NumWebPurchases ,
207171    +   NumWebVisitsMonth ,
207172    +   RFMstat ,
207173    +   Recency ,
207174    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
207175    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
207176    +
207177    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207178    +END;
MPRINT(EM_DIAGRAM):   END;
207179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207180    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
207181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207182    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207183    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
207184    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
207185    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
207186    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
207187    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
207188    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
207189    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
207190    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
207191    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
207192    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
207193    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
207194    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
207195    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
207196    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
207197    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
207198    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
207199    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
207200    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
207201    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
207202    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
207203    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
207204    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
207205    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
207206    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
207207    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
207208    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
207209    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
207210    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
207211    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
207212    +END;
MPRINT(EM_DIAGRAM):   END;
207213    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207214    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
207215    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
207216    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
207217    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
207218    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
207219    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
207220    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
207221    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
207222    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
207223    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
207224    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
207225    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
207226    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
207227    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
207228    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
207229    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
207230    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
207231    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
207232    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
207233    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
207234    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
207235    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
207236    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
207237    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
207238    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
207239    +   ELSE S_NumCatalogPurchases
207240    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
207241    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
207242    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
207243    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
207244    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
207245    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
207246    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
207247    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
207248    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
207249    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
207250    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
207251    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
207252    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
207253    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
207254    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
207255    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
207256    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
207257    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
207258    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
207259    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
207260    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
207261    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
207262    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
207263    +END;
MPRINT(EM_DIAGRAM):   END;
207264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207265    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
207266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207268    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
207269    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207270    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207271    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
207272    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207273    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207274    +   H11  =    -0.05593591984236 * S_AcceptedCmpTotal  +    -0.15222591404968 *
207275    +        S_Kidhome  +    -0.14333543557998 * S_Mnt  +    -0.15248110960637 *
207276    +        S_MntFishProducts  +     0.21423389210826 * S_MntFruits
207277    +          +     0.27583997827488 * S_MntGoldProds  +     0.33906941857334 *
207278    +        S_MntMeatProducts  +    -0.18189684051157 * S_MntSweetProducts
207279    +          +    -0.14699487046336 * S_MntWines  +     0.12279108001012 *
207280    +        S_NumCatalogPurchases  +    -0.13784967978035 * S_NumDealsPurchases
207281    +          +     0.31907604696327 * S_NumDistPurchases
207282    +          +    -0.02337643350225 * S_NumStorePurchases
207283    +          +    -0.03710870748613 * S_NumWebPurchases
207284    +          +    -0.09050794174833 * S_NumWebVisitsMonth
207285    +          +    -0.03038236905639 * S_RFMstat  +     -0.1425750250249 *
207286    +        S_Recency  +     0.28728724059371 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05593591984236 * S_AcceptedCmpTotal + -0.15222591404968 * 
S_Kidhome + -0.14333543557998 * S_Mnt + -0.15248110960637 * S_MntFishProducts + 
0.21423389210826 * S_MntFruits + 0.27583997827488 * S_MntGoldProds + 0.33906941857334 * 
S_MntMeatProducts + -0.18189684051157 * S_MntSweetProducts + -0.14699487046336 * S_MntWines + 
0.12279108001012 * S_NumCatalogPurchases + -0.13784967978035 * S_NumDealsPurchases + 
0.31907604696327 * S_NumDistPurchases + -0.02337643350225 * S_NumStorePurchases + 
-0.03710870748613 * S_NumWebPurchases + -0.09050794174833 * S_NumWebVisitsMonth + 
-0.03038236905639 * S_RFMstat + -0.1425750250249 * S_Recency + 0.28728724059371 * S_Teenhome ;
207287    +   H12  =     0.02658934126333 * S_AcceptedCmpTotal  +     0.00729222523123 *
207288    +        S_Kidhome  +    -0.16054040072952 * S_Mnt  +     0.21368744829668 *
207289    +        S_MntFishProducts  +    -0.38567748679786 * S_MntFruits
207290    +          +     0.01538770837896 * S_MntGoldProds  +     0.26799837156516 *
207291    +        S_MntMeatProducts  +    -0.03227992228949 * S_MntSweetProducts
207292    +          +    -0.05332837299227 * S_MntWines  +    -0.59456078768767 *
207293    +        S_NumCatalogPurchases  +    -0.30459286527334 * S_NumDealsPurchases
207294    +          +     0.09101667200647 * S_NumDistPurchases
207295    +          +     0.15756950151025 * S_NumStorePurchases
207296    +          +    -0.25413468685639 * S_NumWebPurchases
207297    +          +     0.05860616268336 * S_NumWebVisitsMonth
207298    +          +     0.15733068754241 * S_RFMstat  +    -0.45821943962804 *
207299    +        S_Recency  +    -0.27642512764036 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.02658934126333 * S_AcceptedCmpTotal + 0.00729222523123 * 
S_Kidhome + -0.16054040072952 * S_Mnt + 0.21368744829668 * S_MntFishProducts + 
-0.38567748679786 * S_MntFruits + 0.01538770837896 * S_MntGoldProds + 0.26799837156516 * 
S_MntMeatProducts + -0.03227992228949 * S_MntSweetProducts + -0.05332837299227 * S_MntWines + 
-0.59456078768767 * S_NumCatalogPurchases + -0.30459286527334 * S_NumDealsPurchases + 
0.09101667200647 * S_NumDistPurchases + 0.15756950151025 * S_NumStorePurchases + 
-0.25413468685639 * S_NumWebPurchases + 0.05860616268336 * S_NumWebVisitsMonth + 
0.15733068754241 * S_RFMstat + -0.45821943962804 * S_Recency + -0.27642512764036 * S_Teenhome ;
207300    +   H13  =     0.16918999382902 * S_AcceptedCmpTotal  +     -0.4012305600884 *
207301    +        S_Kidhome  +     0.26493497259127 * S_Mnt  +     0.04728975645729 *
207302    +        S_MntFishProducts  +      0.0315247200365 * S_MntFruits
207303    +          +    -0.04096342555085 * S_MntGoldProds  +     0.56434077264537 *
207304    +        S_MntMeatProducts  +    -0.09161669649727 * S_MntSweetProducts
207305    +          +    -0.39043511079678 * S_MntWines  +     0.54393711558115 *
207306    +        S_NumCatalogPurchases  +    -0.01184328299667 * S_NumDealsPurchases
207307    +          +      0.3986742546267 * S_NumDistPurchases
207308    +          +     0.01771277995324 * S_NumStorePurchases
207309    +          +    -0.01959916713409 * S_NumWebPurchases
207310    +          +     0.60679036120713 * S_NumWebVisitsMonth
207311    +          +     0.08435948584344 * S_RFMstat  +    -0.95524595397707 *
207312    +        S_Recency  +    -0.25065878895323 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.16918999382902 * S_AcceptedCmpTotal + -0.4012305600884 * 
S_Kidhome + 0.26493497259127 * S_Mnt + 0.04728975645729 * S_MntFishProducts + 0.0315247200365 
* S_MntFruits + -0.04096342555085 * S_MntGoldProds + 0.56434077264537 * S_MntMeatProducts + 
-0.09161669649727 * S_MntSweetProducts + -0.39043511079678 * S_MntWines + 0.54393711558115 * 
S_NumCatalogPurchases + -0.01184328299667 * S_NumDealsPurchases + 0.3986742546267 * 
S_NumDistPurchases + 0.01771277995324 * S_NumStorePurchases + -0.01959916713409 * 
S_NumWebPurchases + 0.60679036120713 * S_NumWebVisitsMonth + 0.08435948584344 * S_RFMstat + 
-0.95524595397707 * S_Recency + -0.25065878895323 * S_Teenhome ;
207313    +   H14  =    -0.16659499847061 * S_AcceptedCmpTotal  +     0.02357084658349 *
207314    +        S_Kidhome  +     0.05388140126658 * S_Mnt  +    -0.05810927736046 *
207315    +        S_MntFishProducts  +    -0.15826458235953 * S_MntFruits
207316    +          +    -0.41850090574896 * S_MntGoldProds  +    -0.26401541533988 *
207317    +        S_MntMeatProducts  +     0.04480310739087 * S_MntSweetProducts
207318    +          +      0.1225741493226 * S_MntWines  +    -0.56748657856846 *
207319    +        S_NumCatalogPurchases  +    -0.69394311075706 * S_NumDealsPurchases
207320    +          +    -0.56367315288861 * S_NumDistPurchases
207321    +          +     0.22181323985263 * S_NumStorePurchases
207322    +          +    -0.06232830057869 * S_NumWebPurchases
207323    +          +    -0.16027390604517 * S_NumWebVisitsMonth
207324    +          +    -0.09981217676274 * S_RFMstat  +    -0.04262244153265 *
207325    +        S_Recency  +    -0.17321366891816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.16659499847061 * S_AcceptedCmpTotal + 0.02357084658349 * 
S_Kidhome + 0.05388140126658 * S_Mnt + -0.05810927736046 * S_MntFishProducts + 
-0.15826458235953 * S_MntFruits + -0.41850090574896 * S_MntGoldProds + -0.26401541533988 * 
S_MntMeatProducts + 0.04480310739087 * S_MntSweetProducts + 0.1225741493226 * S_MntWines + 
-0.56748657856846 * S_NumCatalogPurchases + -0.69394311075706 * S_NumDealsPurchases + 
-0.56367315288861 * S_NumDistPurchases + 0.22181323985263 * S_NumStorePurchases + 
-0.06232830057869 * S_NumWebPurchases + -0.16027390604517 * S_NumWebVisitsMonth + 
-0.09981217676274 * S_RFMstat + -0.04262244153265 * S_Recency + -0.17321366891816 * S_Teenhome 
;
207326    +   H15  =    -0.03881766208476 * S_AcceptedCmpTotal  +      0.3555777614453 *
207327    +        S_Kidhome  +     0.15023474562078 * S_Mnt  +    -0.28470673338867 *
207328    +        S_MntFishProducts  +    -0.16436807986852 * S_MntFruits
207329    +          +     0.15942617624256 * S_MntGoldProds  +     1.26624544782503 *
207330    +        S_MntMeatProducts  +      0.0500748594942 * S_MntSweetProducts
207331    +          +      0.1213695191802 * S_MntWines  +     1.23017810696609 *
207332    +        S_NumCatalogPurchases  +     0.26589246063072 * S_NumDealsPurchases
207333    +          +      0.2955712939881 * S_NumDistPurchases
207334    +          +     -0.5433445349483 * S_NumStorePurchases
207335    +          +    -0.59265227511161 * S_NumWebPurchases
207336    +          +     0.00366326444932 * S_NumWebVisitsMonth
207337    +          +     0.25124432206112 * S_RFMstat  +    -0.08596429987285 *
207338    +        S_Recency  +    -0.19264562465751 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.03881766208476 * S_AcceptedCmpTotal + 0.3555777614453 * 
S_Kidhome + 0.15023474562078 * S_Mnt + -0.28470673338867 * S_MntFishProducts + 
-0.16436807986852 * S_MntFruits + 0.15942617624256 * S_MntGoldProds + 1.26624544782503 * 
S_MntMeatProducts + 0.0500748594942 * S_MntSweetProducts + 0.1213695191802 * S_MntWines + 
1.23017810696609 * S_NumCatalogPurchases + 0.26589246063072 * S_NumDealsPurchases + 
0.2955712939881 * S_NumDistPurchases + -0.5433445349483 * S_NumStorePurchases + 
-0.59265227511161 * S_NumWebPurchases + 0.00366326444932 * S_NumWebVisitsMonth + 
0.25124432206112 * S_RFMstat + -0.08596429987285 * S_Recency + -0.19264562465751 * S_Teenhome ;
207339    +   H16  =      0.4256391916459 * S_AcceptedCmpTotal  +    -0.14933442450857 *
207340    +        S_Kidhome  +     0.11321190053106 * S_Mnt  +    -0.08228540664731 *
207341    +        S_MntFishProducts  +    -0.44605772880289 * S_MntFruits
207342    +          +     0.02398042304084 * S_MntGoldProds  +     1.02247698844519 *
207343    +        S_MntMeatProducts  +    -0.29299854989186 * S_MntSweetProducts
207344    +          +    -0.55069644292933 * S_MntWines  +      0.6692377268179 *
207345    +        S_NumCatalogPurchases  +     0.70282032902203 * S_NumDealsPurchases
207346    +          +    -0.42166207183939 * S_NumDistPurchases
207347    +          +    -0.74339843972857 * S_NumStorePurchases
207348    +          +    -0.61598427613968 * S_NumWebPurchases
207349    +          +     0.88769400454452 * S_NumWebVisitsMonth
207350    +          +     0.45864975080775 * S_RFMstat  +    -1.00498331113421 *
207351    +        S_Recency  +    -0.06157944188263 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.4256391916459 * S_AcceptedCmpTotal + -0.14933442450857 * 
S_Kidhome + 0.11321190053106 * S_Mnt + -0.08228540664731 * S_MntFishProducts + 
-0.44605772880289 * S_MntFruits + 0.02398042304084 * S_MntGoldProds + 1.02247698844519 * 
S_MntMeatProducts + -0.29299854989186 * S_MntSweetProducts + -0.55069644292933 * S_MntWines + 
0.6692377268179 * S_NumCatalogPurchases + 0.70282032902203 * S_NumDealsPurchases + 
-0.42166207183939 * S_NumDistPurchases + -0.74339843972857 * S_NumStorePurchases + 
-0.61598427613968 * S_NumWebPurchases + 0.88769400454452 * S_NumWebVisitsMonth + 
0.45864975080775 * S_RFMstat + -1.00498331113421 * S_Recency + -0.06157944188263 * S_Teenhome ;
207352    +   H17  =     0.63900672999082 * S_AcceptedCmpTotal  +    -0.30964832179168 *
207353    +        S_Kidhome  +    -0.32513653413684 * S_Mnt  +    -0.24581000667509 *
207354    +        S_MntFishProducts  +     0.02617694172605 * S_MntFruits
207355    +          +     0.00781760579393 * S_MntGoldProds  +     0.29104948109042 *
207356    +        S_MntMeatProducts  +    -0.02316001924491 * S_MntSweetProducts
207357    +          +    -0.36691071804931 * S_MntWines  +     0.32387184925622 *
207358    +        S_NumCatalogPurchases  +    -0.02259558698489 * S_NumDealsPurchases
207359    +          +    -0.05302323558282 * S_NumDistPurchases
207360    +          +    -0.61057201236183 * S_NumStorePurchases
207361    +          +    -0.43675839485699 * S_NumWebPurchases
207362    +          +      0.9068485509802 * S_NumWebVisitsMonth
207363    +          +    -0.10589439992168 * S_RFMstat  +    -1.04488846978483 *
207364    +        S_Recency  +    -0.22850227275517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.63900672999082 * S_AcceptedCmpTotal + -0.30964832179168 * 
S_Kidhome + -0.32513653413684 * S_Mnt + -0.24581000667509 * S_MntFishProducts + 
0.02617694172605 * S_MntFruits + 0.00781760579393 * S_MntGoldProds + 0.29104948109042 * 
S_MntMeatProducts + -0.02316001924491 * S_MntSweetProducts + -0.36691071804931 * S_MntWines + 
0.32387184925622 * S_NumCatalogPurchases + -0.02259558698489 * S_NumDealsPurchases + 
-0.05302323558282 * S_NumDistPurchases + -0.61057201236183 * S_NumStorePurchases + 
-0.43675839485699 * S_NumWebPurchases + 0.9068485509802 * S_NumWebVisitsMonth + 
-0.10589439992168 * S_RFMstat + -1.04488846978483 * S_Recency + -0.22850227275517 * S_Teenhome 
;
207365    +   H11  = H11  +     0.18111603256896 * AcceptedCmp10
207366    +          +     0.22509521803356 * AcceptedCmp20  +    -0.04654046313147 *
207367    +        AcceptedCmp30  +      0.3384111516657 * AcceptedCmp40
207368    +          +     0.32627827523963 * AcceptedCmp50  +    -0.01568279175973 *
207369    +        Complain0  +    -0.55252517176272 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.18111603256896 * AcceptedCmp10 + 0.22509521803356 * 
AcceptedCmp20 + -0.04654046313147 * AcceptedCmp30 + 0.3384111516657 * AcceptedCmp40 + 
0.32627827523963 * AcceptedCmp50 + -0.01568279175973 * Complain0 + -0.55252517176272 * 
HigherEducationBinary0 ;
207370    +   H12  = H12  +     0.11443639158645 * AcceptedCmp10
207371    +          +    -0.07848565251064 * AcceptedCmp20  +     0.12149050142183 *
207372    +        AcceptedCmp30  +     0.16124218246786 * AcceptedCmp40
207373    +          +     0.08002037216673 * AcceptedCmp50  +     0.19507760774174 *
207374    +        Complain0  +     0.11914737027935 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.11443639158645 * AcceptedCmp10 + -0.07848565251064 * 
AcceptedCmp20 + 0.12149050142183 * AcceptedCmp30 + 0.16124218246786 * AcceptedCmp40 + 
0.08002037216673 * AcceptedCmp50 + 0.19507760774174 * Complain0 + 0.11914737027935 * 
HigherEducationBinary0 ;
207375    +   H13  = H13  +    -0.10931311385786 * AcceptedCmp10
207376    +          +    -0.35789040073328 * AcceptedCmp20  +    -0.38944306116716 *
207377    +        AcceptedCmp30  +    -0.40889901167624 * AcceptedCmp40
207378    +          +    -0.24329354019242 * AcceptedCmp50  +    -0.35456353492115 *
207379    +        Complain0  +     0.13555715311919 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10931311385786 * AcceptedCmp10 + -0.35789040073328 * 
AcceptedCmp20 + -0.38944306116716 * AcceptedCmp30 + -0.40889901167624 * AcceptedCmp40 + 
-0.24329354019242 * AcceptedCmp50 + -0.35456353492115 * Complain0 + 0.13555715311919 * 
HigherEducationBinary0 ;
207380    +   H14  = H14  +      0.2188684433023 * AcceptedCmp10
207381    +          +    -0.29615454952167 * AcceptedCmp20  +    -0.22271127437354 *
207382    +        AcceptedCmp30  +     0.20823945988265 * AcceptedCmp40
207383    +          +    -0.21625430481282 * AcceptedCmp50  +    -0.18295367581943 *
207384    +        Complain0  +     0.46325732026927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.2188684433023 * AcceptedCmp10 + -0.29615454952167 * 
AcceptedCmp20 + -0.22271127437354 * AcceptedCmp30 + 0.20823945988265 * AcceptedCmp40 + 
-0.21625430481282 * AcceptedCmp50 + -0.18295367581943 * Complain0 + 0.46325732026927 * 
HigherEducationBinary0 ;
207385    +   H15  = H15  +     0.30998447993837 * AcceptedCmp10
207386    +          +     0.12767836835052 * AcceptedCmp20  +    -0.06080337916302 *
207387    +        AcceptedCmp30  +     0.01251586968598 * AcceptedCmp40
207388    +          +    -0.23770263910732 * AcceptedCmp50  +     0.25109546472381 *
207389    +        Complain0  +    -0.02175844243112 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30998447993837 * AcceptedCmp10 + 0.12767836835052 * 
AcceptedCmp20 + -0.06080337916302 * AcceptedCmp30 + 0.01251586968598 * AcceptedCmp40 + 
-0.23770263910732 * AcceptedCmp50 + 0.25109546472381 * Complain0 + -0.02175844243112 * 
HigherEducationBinary0 ;
207390    +   H16  = H16  +    -0.62091932539163 * AcceptedCmp10
207391    +          +    -0.51271562673252 * AcceptedCmp20  +    -0.11342469632318 *
207392    +        AcceptedCmp30  +    -0.16507397007692 * AcceptedCmp40
207393    +          +    -0.30784693811801 * AcceptedCmp50  +    -0.25537137844726 *
207394    +        Complain0  +    -0.10971155214877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.62091932539163 * AcceptedCmp10 + -0.51271562673252 * 
AcceptedCmp20 + -0.11342469632318 * AcceptedCmp30 + -0.16507397007692 * AcceptedCmp40 + 
-0.30784693811801 * AcceptedCmp50 + -0.25537137844726 * Complain0 + -0.10971155214877 * 
HigherEducationBinary0 ;
207395    +   H17  = H17  +    -0.05412380892781 * AcceptedCmp10
207396    +          +    -0.01109263229825 * AcceptedCmp20  +     -0.2110615452485 *
207397    +        AcceptedCmp30  +     0.00965424319008 * AcceptedCmp40
207398    +          +     -0.4258810591025 * AcceptedCmp50  +     0.27308424287361 *
207399    +        Complain0  +      0.0268240614027 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.05412380892781 * AcceptedCmp10 + -0.01109263229825 * 
AcceptedCmp20 + -0.2110615452485 * AcceptedCmp30 + 0.00965424319008 * AcceptedCmp40 + 
-0.4258810591025 * AcceptedCmp50 + 0.27308424287361 * Complain0 + 0.0268240614027 * 
HigherEducationBinary0 ;
207400    +   H11  = H11  +    -0.33757847459033 * Marital_StatusDivorced
207401    +          +     0.00302217414126 * Marital_StatusMarried
207402    +          +      0.2152123397616 * Marital_StatusSingle
207403    +          +    -0.13520964902373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.33757847459033 * Marital_StatusDivorced + 
0.00302217414126 * Marital_StatusMarried + 0.2152123397616 * Marital_StatusSingle + 
-0.13520964902373 * Marital_StatusTogether ;
207404    +   H12  = H12  +     0.00194872690496 * Marital_StatusDivorced
207405    +          +     0.03439335682344 * Marital_StatusMarried
207406    +          +     0.05021548127829 * Marital_StatusSingle
207407    +          +    -0.21404927960644 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00194872690496 * Marital_StatusDivorced + 0.03439335682344 
* Marital_StatusMarried + 0.05021548127829 * Marital_StatusSingle + -0.21404927960644 * 
Marital_StatusTogether ;
207408    +   H13  = H13  +     0.48013325378484 * Marital_StatusDivorced
207409    +          +    -0.98905242808423 * Marital_StatusMarried
207410    +          +     0.71786420090726 * Marital_StatusSingle
207411    +          +    -0.99548524974998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.48013325378484 * Marital_StatusDivorced + 
-0.98905242808423 * Marital_StatusMarried + 0.71786420090726 * Marital_StatusSingle + 
-0.99548524974998 * Marital_StatusTogether ;
207412    +   H14  = H14  +    -0.10242951736314 * Marital_StatusDivorced
207413    +          +       0.050581701391 * Marital_StatusMarried
207414    +          +     0.02970444912382 * Marital_StatusSingle
207415    +          +    -0.31932441367684 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.10242951736314 * Marital_StatusDivorced + 0.050581701391 
* Marital_StatusMarried + 0.02970444912382 * Marital_StatusSingle + -0.31932441367684 * 
Marital_StatusTogether ;
207416    +   H15  = H15  +    -0.15638584915255 * Marital_StatusDivorced
207417    +          +     0.24057441973108 * Marital_StatusMarried
207418    +          +    -0.25555699216503 * Marital_StatusSingle
207419    +          +     0.42413452422729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.15638584915255 * Marital_StatusDivorced + 
0.24057441973108 * Marital_StatusMarried + -0.25555699216503 * Marital_StatusSingle + 
0.42413452422729 * Marital_StatusTogether ;
207420    +   H16  = H16  +     0.21905536295614 * Marital_StatusDivorced
207421    +          +     0.05764012832482 * Marital_StatusMarried
207422    +          +     0.09900502198755 * Marital_StatusSingle
207423    +          +    -0.29296987558734 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.21905536295614 * Marital_StatusDivorced + 0.05764012832482 
* Marital_StatusMarried + 0.09900502198755 * Marital_StatusSingle + -0.29296987558734 * 
Marital_StatusTogether ;
207424    +   H17  = H17  +    -0.10338488336034 * Marital_StatusDivorced
207425    +          +    -0.91005475926987 * Marital_StatusMarried
207426    +          +     0.69014529167411 * Marital_StatusSingle
207427    +          +    -0.54713111008177 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.10338488336034 * Marital_StatusDivorced + 
-0.91005475926987 * Marital_StatusMarried + 0.69014529167411 * Marital_StatusSingle + 
-0.54713111008177 * Marital_StatusTogether ;
207428    +   H11  =     0.41764308857177 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.41764308857177 + H11 ;
207429    +   H12  =     0.52419261709948 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.52419261709948 + H12 ;
207430    +   H13  =    -0.81831247743605 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.81831247743605 + H13 ;
207431    +   H14  =    -0.81516752423378 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.81516752423378 + H14 ;
207432    +   H15  =     0.07454870495209 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.07454870495209 + H15 ;
207433    +   H16  =    -0.59819903707625 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.59819903707625 + H16 ;
207434    +   H17  =     0.67503972430369 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.67503972430369 + H17 ;
207435    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
207436    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
207437    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
207438    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
207439    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
207440    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
207441    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
207442    +END;
MPRINT(EM_DIAGRAM):   END;
207443    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207444    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
207445    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
207446    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
207447    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
207448    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
207449    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
207450    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
207451    +END;
MPRINT(EM_DIAGRAM):   END;
207452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207453    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
207454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207455    +
207456    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
207457    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
207458    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
207459    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
207460    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
207461    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207462    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
207463    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
207464    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
207465    +end;
MPRINT(EM_DIAGRAM):   end;
207466    +else do;
MPRINT(EM_DIAGRAM):   else do;
207467    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
207468    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
207469    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
207470    +   end;
MPRINT(EM_DIAGRAM):   end;
207471    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
207472    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
207473    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
207474    +   end;
MPRINT(EM_DIAGRAM):   end;
207475    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207476    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
207477    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
207478    +   end;
MPRINT(EM_DIAGRAM):   end;
207479    +end;
MPRINT(EM_DIAGRAM):   end;
207480    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207481    +   P_DepVar1  =    -0.00227674838385 * H11  +     0.58155599175904 * H12
207482    +          +     2.88143779402566 * H13  +    -1.63691423838644 * H14
207483    +          +     2.39141643331858 * H15  +     3.17879887277365 * H16
207484    +          +     2.23901808700024 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.00227674838385 * H11 + 0.58155599175904 * H12 + 
2.88143779402566 * H13 + -1.63691423838644 * H14 + 2.39141643331858 * H15 + 3.17879887277365 * 
H16 + 2.23901808700024 * H17 ;
207485    +   P_DepVar1  =     -1.5295367762329 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5295367762329 + P_DepVar1 ;
207486    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
207487    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
207488    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
207489    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
207490    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
207491    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
207492    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
207493    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
207494    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
207495    +END;
MPRINT(EM_DIAGRAM):   END;
207496    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207497    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
207498    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
207499    +END;
MPRINT(EM_DIAGRAM):   END;
207500    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
207501    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
207502    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
207503    +END;
MPRINT(EM_DIAGRAM):   END;
207504    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
207505    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
207506    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
207507    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
207508    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
207509    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
207510    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
207511    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207512    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
207513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207514    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
207515    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
207516    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
207517    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
207518    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
207519    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
207520    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
207521    +END;
MPRINT(EM_DIAGRAM):   END;
207522    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
207523    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
207524    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
207525    +drop
207526    +H11
207527    +H12
207528    +H13
207529    +H14
207530    +H15
207531    +H16
207532    +H17
207533    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
207534    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
207535     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
207536     quit;
207537     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
207538     filename emflow
207538   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural10: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207539     *------------------------------------------------------------*;
207540     * Neural10: Scoring VALIDATE data;
207541     *------------------------------------------------------------*;
207542     data EMWS8.Neural10_VALIDATE
207543     / view=EMWS8.Neural10_VALIDATE
207544     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_VALIDATE / view=EMWS8.Neural10_VALIDATE ;
207545     set EMWS8.Meta_VALIDATE
207546     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
207547     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas.
207548    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
207549    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
207550    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
207551    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
207552    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
207553    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
207554    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
207555    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
207556    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
207557    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
207558    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
207559    +LENGTH _WARN_ $4
207560    +      F_DepVar  $ 12
207561    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
207562    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
207563    +
207564    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
207565    +
207566    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
207567    +
207568    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
207569    +
207570    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
207571    +
207572    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
207573    +
207574    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
207575    +
207576    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
207577    +
207578    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
207579    +
207580    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
207581    +
207582    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
207583    +
207584    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
207585    +
207586    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
207587    +
207588    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
207589    +
207590    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
207591    +
207592    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
207593    +
207594    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
207595    +
207596    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
207597    +
207598    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
207599    +
207600    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
207601    +
207602    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
207603    +
207604    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
207605    +
207606    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
207607    +
207608    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
207609    +
207610    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
207611    +
207612    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
207613    +
207614    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
207615    +
207616    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
207617    +
207618    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
207619    +
207620    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
207621    +
207622    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
207623    +
207624    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
207625    +
207626    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
207627    +
207628    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
207629    +
207630    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
207631    +
207632    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
207633    +
207634    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
207635    +
207636    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
207637    +
207638    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
207639    +
207640    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
207641    +
207642    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
207643    +
207644    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
207645    +
207646    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
207647    +
207648    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
207649    +
207650    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
207651    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
207652    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
207653    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
207654    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207655    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207656    +end;
MPRINT(EM_DIAGRAM):   end;
207657    +else do;
MPRINT(EM_DIAGRAM):   else do;
207658    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207659    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
207660    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207661    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207662    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
207663    +   end;
MPRINT(EM_DIAGRAM):   end;
207664    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207665    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
207666    +   end;
MPRINT(EM_DIAGRAM):   end;
207667    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207668    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
207669    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207670    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207671    +   end;
MPRINT(EM_DIAGRAM):   end;
207672    +end;
MPRINT(EM_DIAGRAM):   end;
207673    +
207674    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
207675    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
207676    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
207677    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
207678    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207679    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207680    +end;
MPRINT(EM_DIAGRAM):   end;
207681    +else do;
MPRINT(EM_DIAGRAM):   else do;
207682    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207683    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
207684    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207685    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207686    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
207687    +   end;
MPRINT(EM_DIAGRAM):   end;
207688    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207689    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
207690    +   end;
MPRINT(EM_DIAGRAM):   end;
207691    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207692    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
207693    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207694    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207695    +   end;
MPRINT(EM_DIAGRAM):   end;
207696    +end;
MPRINT(EM_DIAGRAM):   end;
207697    +
207698    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
207699    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
207700    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
207701    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
207702    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207703    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207704    +end;
MPRINT(EM_DIAGRAM):   end;
207705    +else do;
MPRINT(EM_DIAGRAM):   else do;
207706    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207707    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
207708    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207709    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207710    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
207711    +   end;
MPRINT(EM_DIAGRAM):   end;
207712    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207713    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
207714    +   end;
MPRINT(EM_DIAGRAM):   end;
207715    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207716    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
207717    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207718    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207719    +   end;
MPRINT(EM_DIAGRAM):   end;
207720    +end;
MPRINT(EM_DIAGRAM):   end;
207721    +
207722    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
207723    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
207724    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
207725    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
207726    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207727    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207728    +end;
MPRINT(EM_DIAGRAM):   end;
207729    +else do;
MPRINT(EM_DIAGRAM):   else do;
207730    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207731    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
207732    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207733    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207734    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
207735    +   end;
MPRINT(EM_DIAGRAM):   end;
207736    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207737    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
207738    +   end;
MPRINT(EM_DIAGRAM):   end;
207739    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207740    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
207741    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207742    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207743    +   end;
MPRINT(EM_DIAGRAM):   end;
207744    +end;
MPRINT(EM_DIAGRAM):   end;
207745    +
207746    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
207747    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
207748    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
207749    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
207750    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207751    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207752    +end;
MPRINT(EM_DIAGRAM):   end;
207753    +else do;
MPRINT(EM_DIAGRAM):   else do;
207754    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207755    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
207756    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207757    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207758    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
207759    +   end;
MPRINT(EM_DIAGRAM):   end;
207760    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207761    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
207762    +   end;
MPRINT(EM_DIAGRAM):   end;
207763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207764    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
207765    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207766    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207767    +   end;
MPRINT(EM_DIAGRAM):   end;
207768    +end;
MPRINT(EM_DIAGRAM):   end;
207769    +
207770    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
207771    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
207772    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
207773    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
207774    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207775    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207776    +end;
MPRINT(EM_DIAGRAM):   end;
207777    +else do;
MPRINT(EM_DIAGRAM):   else do;
207778    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207779    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
207780    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207781    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
207782    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
207783    +   end;
MPRINT(EM_DIAGRAM):   end;
207784    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
207785    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
207786    +   end;
MPRINT(EM_DIAGRAM):   end;
207787    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207788    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
207789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207791    +   end;
MPRINT(EM_DIAGRAM):   end;
207792    +end;
MPRINT(EM_DIAGRAM):   end;
207793    +
207794    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
207795    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
207796    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
207797    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
207798    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207799    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207800    +end;
MPRINT(EM_DIAGRAM):   end;
207801    +else do;
MPRINT(EM_DIAGRAM):   else do;
207802    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207803    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
207804    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207805    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
207806    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
207807    +   end;
MPRINT(EM_DIAGRAM):   end;
207808    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
207809    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
207810    +   end;
MPRINT(EM_DIAGRAM):   end;
207811    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207812    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
207813    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207814    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207815    +   end;
MPRINT(EM_DIAGRAM):   end;
207816    +end;
MPRINT(EM_DIAGRAM):   end;
207817    +
207818    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
207819    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
207820    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
207821    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
207822    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
207823    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
207824    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
207825    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
207826    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
207827    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
207828    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
207829    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
207830    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
207831    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207832    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207833    +end;
MPRINT(EM_DIAGRAM):   end;
207834    +else do;
MPRINT(EM_DIAGRAM):   else do;
207835    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
207836    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
207837    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207838    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
207839    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
207840    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
207841    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
207842    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
207843    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207844    +         end;
MPRINT(EM_DIAGRAM):   end;
207845    +         else do;
MPRINT(EM_DIAGRAM):   else do;
207846    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
207847    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
207848    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207849    +            end;
MPRINT(EM_DIAGRAM):   end;
207850    +         end;
MPRINT(EM_DIAGRAM):   end;
207851    +      end;
MPRINT(EM_DIAGRAM):   end;
207852    +      else do;
MPRINT(EM_DIAGRAM):   else do;
207853    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
207854    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
207855    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207856    +         end;
MPRINT(EM_DIAGRAM):   end;
207857    +      end;
MPRINT(EM_DIAGRAM):   end;
207858    +   end;
MPRINT(EM_DIAGRAM):   end;
207859    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207860    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
207861    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
207862    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207863    +      end;
MPRINT(EM_DIAGRAM):   end;
207864    +      else do;
MPRINT(EM_DIAGRAM):   else do;
207865    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
207866    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
207867    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
207868    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
207869    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
207870    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
207871    +         end;
MPRINT(EM_DIAGRAM):   end;
207872    +      end;
MPRINT(EM_DIAGRAM):   end;
207873    +   end;
MPRINT(EM_DIAGRAM):   end;
207874    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
207875    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
207876    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
207877    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
207878    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
207879    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207880    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207881    +   end;
MPRINT(EM_DIAGRAM):   end;
207882    +end;
MPRINT(EM_DIAGRAM):   end;
207883    +
207884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207885    +*** Checking missing input Interval
207886    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
207887    +
207888    +IF NMISS(
207889    +   AcceptedCmpTotal ,
207890    +   Kidhome ,
207891    +   Mnt ,
207892    +   MntFishProducts ,
207893    +   MntFruits ,
207894    +   MntGoldProds ,
207895    +   MntMeatProducts ,
207896    +   MntSweetProducts ,
207897    +   MntWines ,
207898    +   NumCatalogPurchases ,
207899    +   NumDealsPurchases ,
207900    +   NumDistPurchases ,
207901    +   NumStorePurchases ,
207902    +   NumWebPurchases ,
207903    +   NumWebVisitsMonth ,
207904    +   RFMstat ,
207905    +   Recency ,
207906    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Kidhome , Mnt , MntFishProducts , MntFruits 
, MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , 
NumDealsPurchases , NumDistPurchases , NumStorePurchases , NumWebPurchases , NumWebVisitsMonth 
, RFMstat , Recency , Teenhome ) THEN DO;
207907    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
207908    +
207909    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207910    +END;
MPRINT(EM_DIAGRAM):   END;
207911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207912    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
207913    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207914    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
207915    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
207916    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
207917    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
207918    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
207919    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
207920    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
207921    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
207922    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
207923    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
207924    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
207925    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
207926    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
207927    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
207928    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
207929    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
207930    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
207931    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
207932    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
207933    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
207934    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
207935    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
207936    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
207937    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
207938    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
207939    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
207940    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
207941    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
207942    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
207943    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
207944    +END;
MPRINT(EM_DIAGRAM):   END;
207945    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
207946    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
207947    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
207948    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
207949    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
207950    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
207951    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
207952    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
207953    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
207954    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
207955    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
207956    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
207957    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
207958    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
207959    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
207960    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
207961    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
207962    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
207963    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
207964    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
207965    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
207966    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
207967    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
207968    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
207969    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
207970    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
207971    +   ELSE S_NumCatalogPurchases
207972    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
207973    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
207974    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
207975    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
207976    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
207977    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
207978    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
207979    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
207980    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
207981    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
207982    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
207983    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
207984    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
207985    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
207986    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
207987    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
207988    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
207989    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
207990    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
207991    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
207992    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
207993    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
207994    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
207995    +END;
MPRINT(EM_DIAGRAM):   END;
207996    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207997    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
207998    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
207999    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208000    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
208001    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208003    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
208004    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208005    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208006    +   H11  =    -0.05593591984236 * S_AcceptedCmpTotal  +    -0.15222591404968 *
208007    +        S_Kidhome  +    -0.14333543557998 * S_Mnt  +    -0.15248110960637 *
208008    +        S_MntFishProducts  +     0.21423389210826 * S_MntFruits
208009    +          +     0.27583997827488 * S_MntGoldProds  +     0.33906941857334 *
208010    +        S_MntMeatProducts  +    -0.18189684051157 * S_MntSweetProducts
208011    +          +    -0.14699487046336 * S_MntWines  +     0.12279108001012 *
208012    +        S_NumCatalogPurchases  +    -0.13784967978035 * S_NumDealsPurchases
208013    +          +     0.31907604696327 * S_NumDistPurchases
208014    +          +    -0.02337643350225 * S_NumStorePurchases
208015    +          +    -0.03710870748613 * S_NumWebPurchases
208016    +          +    -0.09050794174833 * S_NumWebVisitsMonth
208017    +          +    -0.03038236905639 * S_RFMstat  +     -0.1425750250249 *
208018    +        S_Recency  +     0.28728724059371 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05593591984236 * S_AcceptedCmpTotal + -0.15222591404968 * 
S_Kidhome + -0.14333543557998 * S_Mnt + -0.15248110960637 * S_MntFishProducts + 
0.21423389210826 * S_MntFruits + 0.27583997827488 * S_MntGoldProds + 0.33906941857334 * 
S_MntMeatProducts + -0.18189684051157 * S_MntSweetProducts + -0.14699487046336 * S_MntWines + 
0.12279108001012 * S_NumCatalogPurchases + -0.13784967978035 * S_NumDealsPurchases + 
0.31907604696327 * S_NumDistPurchases + -0.02337643350225 * S_NumStorePurchases + 
-0.03710870748613 * S_NumWebPurchases + -0.09050794174833 * S_NumWebVisitsMonth + 
-0.03038236905639 * S_RFMstat + -0.1425750250249 * S_Recency + 0.28728724059371 * S_Teenhome ;
208019    +   H12  =     0.02658934126333 * S_AcceptedCmpTotal  +     0.00729222523123 *
208020    +        S_Kidhome  +    -0.16054040072952 * S_Mnt  +     0.21368744829668 *
208021    +        S_MntFishProducts  +    -0.38567748679786 * S_MntFruits
208022    +          +     0.01538770837896 * S_MntGoldProds  +     0.26799837156516 *
208023    +        S_MntMeatProducts  +    -0.03227992228949 * S_MntSweetProducts
208024    +          +    -0.05332837299227 * S_MntWines  +    -0.59456078768767 *
208025    +        S_NumCatalogPurchases  +    -0.30459286527334 * S_NumDealsPurchases
208026    +          +     0.09101667200647 * S_NumDistPurchases
208027    +          +     0.15756950151025 * S_NumStorePurchases
208028    +          +    -0.25413468685639 * S_NumWebPurchases
208029    +          +     0.05860616268336 * S_NumWebVisitsMonth
208030    +          +     0.15733068754241 * S_RFMstat  +    -0.45821943962804 *
208031    +        S_Recency  +    -0.27642512764036 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.02658934126333 * S_AcceptedCmpTotal + 0.00729222523123 * 
S_Kidhome + -0.16054040072952 * S_Mnt + 0.21368744829668 * S_MntFishProducts + 
-0.38567748679786 * S_MntFruits + 0.01538770837896 * S_MntGoldProds + 0.26799837156516 * 
S_MntMeatProducts + -0.03227992228949 * S_MntSweetProducts + -0.05332837299227 * S_MntWines + 
-0.59456078768767 * S_NumCatalogPurchases + -0.30459286527334 * S_NumDealsPurchases + 
0.09101667200647 * S_NumDistPurchases + 0.15756950151025 * S_NumStorePurchases + 
-0.25413468685639 * S_NumWebPurchases + 0.05860616268336 * S_NumWebVisitsMonth + 
0.15733068754241 * S_RFMstat + -0.45821943962804 * S_Recency + -0.27642512764036 * S_Teenhome ;
208032    +   H13  =     0.16918999382902 * S_AcceptedCmpTotal  +     -0.4012305600884 *
208033    +        S_Kidhome  +     0.26493497259127 * S_Mnt  +     0.04728975645729 *
208034    +        S_MntFishProducts  +      0.0315247200365 * S_MntFruits
208035    +          +    -0.04096342555085 * S_MntGoldProds  +     0.56434077264537 *
208036    +        S_MntMeatProducts  +    -0.09161669649727 * S_MntSweetProducts
208037    +          +    -0.39043511079678 * S_MntWines  +     0.54393711558115 *
208038    +        S_NumCatalogPurchases  +    -0.01184328299667 * S_NumDealsPurchases
208039    +          +      0.3986742546267 * S_NumDistPurchases
208040    +          +     0.01771277995324 * S_NumStorePurchases
208041    +          +    -0.01959916713409 * S_NumWebPurchases
208042    +          +     0.60679036120713 * S_NumWebVisitsMonth
208043    +          +     0.08435948584344 * S_RFMstat  +    -0.95524595397707 *
208044    +        S_Recency  +    -0.25065878895323 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.16918999382902 * S_AcceptedCmpTotal + -0.4012305600884 * 
S_Kidhome + 0.26493497259127 * S_Mnt + 0.04728975645729 * S_MntFishProducts + 0.0315247200365 
* S_MntFruits + -0.04096342555085 * S_MntGoldProds + 0.56434077264537 * S_MntMeatProducts + 
-0.09161669649727 * S_MntSweetProducts + -0.39043511079678 * S_MntWines + 0.54393711558115 * 
S_NumCatalogPurchases + -0.01184328299667 * S_NumDealsPurchases + 0.3986742546267 * 
S_NumDistPurchases + 0.01771277995324 * S_NumStorePurchases + -0.01959916713409 * 
S_NumWebPurchases + 0.60679036120713 * S_NumWebVisitsMonth + 0.08435948584344 * S_RFMstat + 
-0.95524595397707 * S_Recency + -0.25065878895323 * S_Teenhome ;
208045    +   H14  =    -0.16659499847061 * S_AcceptedCmpTotal  +     0.02357084658349 *
208046    +        S_Kidhome  +     0.05388140126658 * S_Mnt  +    -0.05810927736046 *
208047    +        S_MntFishProducts  +    -0.15826458235953 * S_MntFruits
208048    +          +    -0.41850090574896 * S_MntGoldProds  +    -0.26401541533988 *
208049    +        S_MntMeatProducts  +     0.04480310739087 * S_MntSweetProducts
208050    +          +      0.1225741493226 * S_MntWines  +    -0.56748657856846 *
208051    +        S_NumCatalogPurchases  +    -0.69394311075706 * S_NumDealsPurchases
208052    +          +    -0.56367315288861 * S_NumDistPurchases
208053    +          +     0.22181323985263 * S_NumStorePurchases
208054    +          +    -0.06232830057869 * S_NumWebPurchases
208055    +          +    -0.16027390604517 * S_NumWebVisitsMonth
208056    +          +    -0.09981217676274 * S_RFMstat  +    -0.04262244153265 *
208057    +        S_Recency  +    -0.17321366891816 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.16659499847061 * S_AcceptedCmpTotal + 0.02357084658349 * 
S_Kidhome + 0.05388140126658 * S_Mnt + -0.05810927736046 * S_MntFishProducts + 
-0.15826458235953 * S_MntFruits + -0.41850090574896 * S_MntGoldProds + -0.26401541533988 * 
S_MntMeatProducts + 0.04480310739087 * S_MntSweetProducts + 0.1225741493226 * S_MntWines + 
-0.56748657856846 * S_NumCatalogPurchases + -0.69394311075706 * S_NumDealsPurchases + 
-0.56367315288861 * S_NumDistPurchases + 0.22181323985263 * S_NumStorePurchases + 
-0.06232830057869 * S_NumWebPurchases + -0.16027390604517 * S_NumWebVisitsMonth + 
-0.09981217676274 * S_RFMstat + -0.04262244153265 * S_Recency + -0.17321366891816 * S_Teenhome 
;
208058    +   H15  =    -0.03881766208476 * S_AcceptedCmpTotal  +      0.3555777614453 *
208059    +        S_Kidhome  +     0.15023474562078 * S_Mnt  +    -0.28470673338867 *
208060    +        S_MntFishProducts  +    -0.16436807986852 * S_MntFruits
208061    +          +     0.15942617624256 * S_MntGoldProds  +     1.26624544782503 *
208062    +        S_MntMeatProducts  +      0.0500748594942 * S_MntSweetProducts
208063    +          +      0.1213695191802 * S_MntWines  +     1.23017810696609 *
208064    +        S_NumCatalogPurchases  +     0.26589246063072 * S_NumDealsPurchases
208065    +          +      0.2955712939881 * S_NumDistPurchases
208066    +          +     -0.5433445349483 * S_NumStorePurchases
208067    +          +    -0.59265227511161 * S_NumWebPurchases
208068    +          +     0.00366326444932 * S_NumWebVisitsMonth
208069    +          +     0.25124432206112 * S_RFMstat  +    -0.08596429987285 *
208070    +        S_Recency  +    -0.19264562465751 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.03881766208476 * S_AcceptedCmpTotal + 0.3555777614453 * 
S_Kidhome + 0.15023474562078 * S_Mnt + -0.28470673338867 * S_MntFishProducts + 
-0.16436807986852 * S_MntFruits + 0.15942617624256 * S_MntGoldProds + 1.26624544782503 * 
S_MntMeatProducts + 0.0500748594942 * S_MntSweetProducts + 0.1213695191802 * S_MntWines + 
1.23017810696609 * S_NumCatalogPurchases + 0.26589246063072 * S_NumDealsPurchases + 
0.2955712939881 * S_NumDistPurchases + -0.5433445349483 * S_NumStorePurchases + 
-0.59265227511161 * S_NumWebPurchases + 0.00366326444932 * S_NumWebVisitsMonth + 
0.25124432206112 * S_RFMstat + -0.08596429987285 * S_Recency + -0.19264562465751 * S_Teenhome ;
208071    +   H16  =      0.4256391916459 * S_AcceptedCmpTotal  +    -0.14933442450857 *
208072    +        S_Kidhome  +     0.11321190053106 * S_Mnt  +    -0.08228540664731 *
208073    +        S_MntFishProducts  +    -0.44605772880289 * S_MntFruits
208074    +          +     0.02398042304084 * S_MntGoldProds  +     1.02247698844519 *
208075    +        S_MntMeatProducts  +    -0.29299854989186 * S_MntSweetProducts
208076    +          +    -0.55069644292933 * S_MntWines  +      0.6692377268179 *
208077    +        S_NumCatalogPurchases  +     0.70282032902203 * S_NumDealsPurchases
208078    +          +    -0.42166207183939 * S_NumDistPurchases
208079    +          +    -0.74339843972857 * S_NumStorePurchases
208080    +          +    -0.61598427613968 * S_NumWebPurchases
208081    +          +     0.88769400454452 * S_NumWebVisitsMonth
208082    +          +     0.45864975080775 * S_RFMstat  +    -1.00498331113421 *
208083    +        S_Recency  +    -0.06157944188263 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.4256391916459 * S_AcceptedCmpTotal + -0.14933442450857 * 
S_Kidhome + 0.11321190053106 * S_Mnt + -0.08228540664731 * S_MntFishProducts + 
-0.44605772880289 * S_MntFruits + 0.02398042304084 * S_MntGoldProds + 1.02247698844519 * 
S_MntMeatProducts + -0.29299854989186 * S_MntSweetProducts + -0.55069644292933 * S_MntWines + 
0.6692377268179 * S_NumCatalogPurchases + 0.70282032902203 * S_NumDealsPurchases + 
-0.42166207183939 * S_NumDistPurchases + -0.74339843972857 * S_NumStorePurchases + 
-0.61598427613968 * S_NumWebPurchases + 0.88769400454452 * S_NumWebVisitsMonth + 
0.45864975080775 * S_RFMstat + -1.00498331113421 * S_Recency + -0.06157944188263 * S_Teenhome ;
208084    +   H17  =     0.63900672999082 * S_AcceptedCmpTotal  +    -0.30964832179168 *
208085    +        S_Kidhome  +    -0.32513653413684 * S_Mnt  +    -0.24581000667509 *
208086    +        S_MntFishProducts  +     0.02617694172605 * S_MntFruits
208087    +          +     0.00781760579393 * S_MntGoldProds  +     0.29104948109042 *
208088    +        S_MntMeatProducts  +    -0.02316001924491 * S_MntSweetProducts
208089    +          +    -0.36691071804931 * S_MntWines  +     0.32387184925622 *
208090    +        S_NumCatalogPurchases  +    -0.02259558698489 * S_NumDealsPurchases
208091    +          +    -0.05302323558282 * S_NumDistPurchases
208092    +          +    -0.61057201236183 * S_NumStorePurchases
208093    +          +    -0.43675839485699 * S_NumWebPurchases
208094    +          +      0.9068485509802 * S_NumWebVisitsMonth
208095    +          +    -0.10589439992168 * S_RFMstat  +    -1.04488846978483 *
208096    +        S_Recency  +    -0.22850227275517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.63900672999082 * S_AcceptedCmpTotal + -0.30964832179168 * 
S_Kidhome + -0.32513653413684 * S_Mnt + -0.24581000667509 * S_MntFishProducts + 
0.02617694172605 * S_MntFruits + 0.00781760579393 * S_MntGoldProds + 0.29104948109042 * 
S_MntMeatProducts + -0.02316001924491 * S_MntSweetProducts + -0.36691071804931 * S_MntWines + 
0.32387184925622 * S_NumCatalogPurchases + -0.02259558698489 * S_NumDealsPurchases + 
-0.05302323558282 * S_NumDistPurchases + -0.61057201236183 * S_NumStorePurchases + 
-0.43675839485699 * S_NumWebPurchases + 0.9068485509802 * S_NumWebVisitsMonth + 
-0.10589439992168 * S_RFMstat + -1.04488846978483 * S_Recency + -0.22850227275517 * S_Teenhome 
;
208097    +   H11  = H11  +     0.18111603256896 * AcceptedCmp10
208098    +          +     0.22509521803356 * AcceptedCmp20  +    -0.04654046313147 *
208099    +        AcceptedCmp30  +      0.3384111516657 * AcceptedCmp40
208100    +          +     0.32627827523963 * AcceptedCmp50  +    -0.01568279175973 *
208101    +        Complain0  +    -0.55252517176272 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.18111603256896 * AcceptedCmp10 + 0.22509521803356 * 
AcceptedCmp20 + -0.04654046313147 * AcceptedCmp30 + 0.3384111516657 * AcceptedCmp40 + 
0.32627827523963 * AcceptedCmp50 + -0.01568279175973 * Complain0 + -0.55252517176272 * 
HigherEducationBinary0 ;
208102    +   H12  = H12  +     0.11443639158645 * AcceptedCmp10
208103    +          +    -0.07848565251064 * AcceptedCmp20  +     0.12149050142183 *
208104    +        AcceptedCmp30  +     0.16124218246786 * AcceptedCmp40
208105    +          +     0.08002037216673 * AcceptedCmp50  +     0.19507760774174 *
208106    +        Complain0  +     0.11914737027935 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.11443639158645 * AcceptedCmp10 + -0.07848565251064 * 
AcceptedCmp20 + 0.12149050142183 * AcceptedCmp30 + 0.16124218246786 * AcceptedCmp40 + 
0.08002037216673 * AcceptedCmp50 + 0.19507760774174 * Complain0 + 0.11914737027935 * 
HigherEducationBinary0 ;
208107    +   H13  = H13  +    -0.10931311385786 * AcceptedCmp10
208108    +          +    -0.35789040073328 * AcceptedCmp20  +    -0.38944306116716 *
208109    +        AcceptedCmp30  +    -0.40889901167624 * AcceptedCmp40
208110    +          +    -0.24329354019242 * AcceptedCmp50  +    -0.35456353492115 *
208111    +        Complain0  +     0.13555715311919 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10931311385786 * AcceptedCmp10 + -0.35789040073328 * 
AcceptedCmp20 + -0.38944306116716 * AcceptedCmp30 + -0.40889901167624 * AcceptedCmp40 + 
-0.24329354019242 * AcceptedCmp50 + -0.35456353492115 * Complain0 + 0.13555715311919 * 
HigherEducationBinary0 ;
208112    +   H14  = H14  +      0.2188684433023 * AcceptedCmp10
208113    +          +    -0.29615454952167 * AcceptedCmp20  +    -0.22271127437354 *
208114    +        AcceptedCmp30  +     0.20823945988265 * AcceptedCmp40
208115    +          +    -0.21625430481282 * AcceptedCmp50  +    -0.18295367581943 *
208116    +        Complain0  +     0.46325732026927 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.2188684433023 * AcceptedCmp10 + -0.29615454952167 * 
AcceptedCmp20 + -0.22271127437354 * AcceptedCmp30 + 0.20823945988265 * AcceptedCmp40 + 
-0.21625430481282 * AcceptedCmp50 + -0.18295367581943 * Complain0 + 0.46325732026927 * 
HigherEducationBinary0 ;
208117    +   H15  = H15  +     0.30998447993837 * AcceptedCmp10
208118    +          +     0.12767836835052 * AcceptedCmp20  +    -0.06080337916302 *
208119    +        AcceptedCmp30  +     0.01251586968598 * AcceptedCmp40
208120    +          +    -0.23770263910732 * AcceptedCmp50  +     0.25109546472381 *
208121    +        Complain0  +    -0.02175844243112 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30998447993837 * AcceptedCmp10 + 0.12767836835052 * 
AcceptedCmp20 + -0.06080337916302 * AcceptedCmp30 + 0.01251586968598 * AcceptedCmp40 + 
-0.23770263910732 * AcceptedCmp50 + 0.25109546472381 * Complain0 + -0.02175844243112 * 
HigherEducationBinary0 ;
208122    +   H16  = H16  +    -0.62091932539163 * AcceptedCmp10
208123    +          +    -0.51271562673252 * AcceptedCmp20  +    -0.11342469632318 *
208124    +        AcceptedCmp30  +    -0.16507397007692 * AcceptedCmp40
208125    +          +    -0.30784693811801 * AcceptedCmp50  +    -0.25537137844726 *
208126    +        Complain0  +    -0.10971155214877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.62091932539163 * AcceptedCmp10 + -0.51271562673252 * 
AcceptedCmp20 + -0.11342469632318 * AcceptedCmp30 + -0.16507397007692 * AcceptedCmp40 + 
-0.30784693811801 * AcceptedCmp50 + -0.25537137844726 * Complain0 + -0.10971155214877 * 
HigherEducationBinary0 ;
208127    +   H17  = H17  +    -0.05412380892781 * AcceptedCmp10
208128    +          +    -0.01109263229825 * AcceptedCmp20  +     -0.2110615452485 *
208129    +        AcceptedCmp30  +     0.00965424319008 * AcceptedCmp40
208130    +          +     -0.4258810591025 * AcceptedCmp50  +     0.27308424287361 *
208131    +        Complain0  +      0.0268240614027 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.05412380892781 * AcceptedCmp10 + -0.01109263229825 * 
AcceptedCmp20 + -0.2110615452485 * AcceptedCmp30 + 0.00965424319008 * AcceptedCmp40 + 
-0.4258810591025 * AcceptedCmp50 + 0.27308424287361 * Complain0 + 0.0268240614027 * 
HigherEducationBinary0 ;
208132    +   H11  = H11  +    -0.33757847459033 * Marital_StatusDivorced
208133    +          +     0.00302217414126 * Marital_StatusMarried
208134    +          +      0.2152123397616 * Marital_StatusSingle
208135    +          +    -0.13520964902373 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.33757847459033 * Marital_StatusDivorced + 
0.00302217414126 * Marital_StatusMarried + 0.2152123397616 * Marital_StatusSingle + 
-0.13520964902373 * Marital_StatusTogether ;
208136    +   H12  = H12  +     0.00194872690496 * Marital_StatusDivorced
208137    +          +     0.03439335682344 * Marital_StatusMarried
208138    +          +     0.05021548127829 * Marital_StatusSingle
208139    +          +    -0.21404927960644 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00194872690496 * Marital_StatusDivorced + 0.03439335682344 
* Marital_StatusMarried + 0.05021548127829 * Marital_StatusSingle + -0.21404927960644 * 
Marital_StatusTogether ;
208140    +   H13  = H13  +     0.48013325378484 * Marital_StatusDivorced
208141    +          +    -0.98905242808423 * Marital_StatusMarried
208142    +          +     0.71786420090726 * Marital_StatusSingle
208143    +          +    -0.99548524974998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.48013325378484 * Marital_StatusDivorced + 
-0.98905242808423 * Marital_StatusMarried + 0.71786420090726 * Marital_StatusSingle + 
-0.99548524974998 * Marital_StatusTogether ;
208144    +   H14  = H14  +    -0.10242951736314 * Marital_StatusDivorced
208145    +          +       0.050581701391 * Marital_StatusMarried
208146    +          +     0.02970444912382 * Marital_StatusSingle
208147    +          +    -0.31932441367684 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.10242951736314 * Marital_StatusDivorced + 0.050581701391 
* Marital_StatusMarried + 0.02970444912382 * Marital_StatusSingle + -0.31932441367684 * 
Marital_StatusTogether ;
208148    +   H15  = H15  +    -0.15638584915255 * Marital_StatusDivorced
208149    +          +     0.24057441973108 * Marital_StatusMarried
208150    +          +    -0.25555699216503 * Marital_StatusSingle
208151    +          +     0.42413452422729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.15638584915255 * Marital_StatusDivorced + 
0.24057441973108 * Marital_StatusMarried + -0.25555699216503 * Marital_StatusSingle + 
0.42413452422729 * Marital_StatusTogether ;
208152    +   H16  = H16  +     0.21905536295614 * Marital_StatusDivorced
208153    +          +     0.05764012832482 * Marital_StatusMarried
208154    +          +     0.09900502198755 * Marital_StatusSingle
208155    +          +    -0.29296987558734 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.21905536295614 * Marital_StatusDivorced + 0.05764012832482 
* Marital_StatusMarried + 0.09900502198755 * Marital_StatusSingle + -0.29296987558734 * 
Marital_StatusTogether ;
208156    +   H17  = H17  +    -0.10338488336034 * Marital_StatusDivorced
208157    +          +    -0.91005475926987 * Marital_StatusMarried
208158    +          +     0.69014529167411 * Marital_StatusSingle
208159    +          +    -0.54713111008177 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.10338488336034 * Marital_StatusDivorced + 
-0.91005475926987 * Marital_StatusMarried + 0.69014529167411 * Marital_StatusSingle + 
-0.54713111008177 * Marital_StatusTogether ;
208160    +   H11  =     0.41764308857177 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.41764308857177 + H11 ;
208161    +   H12  =     0.52419261709948 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.52419261709948 + H12 ;
208162    +   H13  =    -0.81831247743605 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.81831247743605 + H13 ;
208163    +   H14  =    -0.81516752423378 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.81516752423378 + H14 ;
208164    +   H15  =     0.07454870495209 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.07454870495209 + H15 ;
208165    +   H16  =    -0.59819903707625 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.59819903707625 + H16 ;
208166    +   H17  =     0.67503972430369 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.67503972430369 + H17 ;
208167    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
208168    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
208169    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
208170    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
208171    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
208172    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
208173    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
208174    +END;
MPRINT(EM_DIAGRAM):   END;
208175    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208176    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
208177    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
208178    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
208179    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
208180    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
208181    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
208182    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
208183    +END;
MPRINT(EM_DIAGRAM):   END;
208184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208185    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
208186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208187    +
208188    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
208189    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
208190    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
208191    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
208192    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
208193    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208194    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
208195    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
208196    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
208197    +end;
MPRINT(EM_DIAGRAM):   end;
208198    +else do;
MPRINT(EM_DIAGRAM):   else do;
208199    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
208200    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
208201    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
208202    +   end;
MPRINT(EM_DIAGRAM):   end;
208203    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
208204    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
208205    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
208206    +   end;
MPRINT(EM_DIAGRAM):   end;
208207    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208208    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
208209    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
208210    +   end;
MPRINT(EM_DIAGRAM):   end;
208211    +end;
MPRINT(EM_DIAGRAM):   end;
208212    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208213    +   P_DepVar1  =    -0.00227674838385 * H11  +     0.58155599175904 * H12
208214    +          +     2.88143779402566 * H13  +    -1.63691423838644 * H14
208215    +          +     2.39141643331858 * H15  +     3.17879887277365 * H16
208216    +          +     2.23901808700024 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.00227674838385 * H11 + 0.58155599175904 * H12 + 
2.88143779402566 * H13 + -1.63691423838644 * H14 + 2.39141643331858 * H15 + 3.17879887277365 * 
H16 + 2.23901808700024 * H17 ;
208217    +   P_DepVar1  =     -1.5295367762329 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5295367762329 + P_DepVar1 ;
208218    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
208219    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
208220    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
208221    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
208222    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
208223    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
208224    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
208225    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
208226    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
208227    +END;
MPRINT(EM_DIAGRAM):   END;
208228    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208229    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
208230    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
208231    +END;
MPRINT(EM_DIAGRAM):   END;
208232    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
208233    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
208234    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
208235    +END;
MPRINT(EM_DIAGRAM):   END;
208236    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
208237    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
208238    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
208239    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
208240    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
208241    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
208242    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
208243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208244    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
208245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208246    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
208247    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
208248    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
208249    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
208250    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
208251    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
208252    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
208253    +END;
MPRINT(EM_DIAGRAM):   END;
208254    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
208255    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
208256    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
208257    +drop
208258    +H11
208259    +H12
208260    +H13
208261    +H14
208262    +H15
208263    +H16
208264    +H17
208265    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
208266    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
208267     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
208268     quit;
208269     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
208270     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
208271     * Neural10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural10: Computing metadata for TRAIN data;
208272     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural10_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural10_TRAIN out=WORK.M2K2S0_J noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2K2S0_J;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2K2S0_J(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2K2S0_J;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2K2S0_J;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1O05B57 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1O05B57;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1O05B57;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1G9GUZX(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1O05B57;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1O05B57;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1O05B57;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1O05B57;
MPRINT(EMADVISECOLUMNS):   set WORK.M1O05B57;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
208584     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
208585     set EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO;
208586     where DATA='Neural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
208587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL10_EMINFO.
      WHERE (DATA='Neural10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

208588     data EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural10_EMINFO;
208589     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
208590     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
208591     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
208595     run;
208596     data EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_EMINFO;
208597     set EMWS8.Neural10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO WORK.MODELTEMP_INFO;
208598     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

208599     proc sort data = EMWS8.Neural10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural10_EMINFO NOTHREADS;
208600     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
208601     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: The data set EMWS8.NEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

208602     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
208603     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
208604     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

208605     proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
208606     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
208607     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

208608     data EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_EMINFO;
208609     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
208610     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
208611     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

208612     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
208613     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
208614     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
208615     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
