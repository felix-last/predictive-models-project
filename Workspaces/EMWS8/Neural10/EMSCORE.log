MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "08.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                08.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3RCYE4T 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3RCYE4T new;
MPRINT(EM_DIAGRAM):   run;
534766     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
534767     set EMWS8.Neural10_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_OUTKEY;
534768     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
534769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set EMWS8.NEURAL10_OUTKEY.
NOTE: The data set WORK.OUTKEY has 7 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

534770     filename emflow
534770   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural10: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
534771     *------------------------------------------------------------*;
534772     * Neural10: Scoring DATA data;
534773     *------------------------------------------------------------*;
534774     data EMWS8.Neural10_TRAIN
534775     / view=EMWS8.Neural10_TRAIN
534776     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_TRAIN / view=EMWS8.Neural10_TRAIN ;
534777     set EMWS8.Meta_TRAIN
534778     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_TRAIN ;
534779     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas.
534780    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
534781    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
534782    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
534783    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
534784    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
534785    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
534786    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
534787    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
534788    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
534789    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
534790    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
534791    +LENGTH _WARN_ $4
534792    +      F_DepVar  $ 12
534793    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
534794    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
534795    +
534796    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
534797    +
534798    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
534799    +
534800    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
534801    +
534802    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
534803    +
534804    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
534805    +
534806    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
534807    +
534808    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
534809    +
534810    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
534811    +
534812    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
534813    +
534814    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
534815    +
534816    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
534817    +
534818    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
534819    +
534820    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
534821    +
534822    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
534823    +
534824    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
534825    +
534826    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
534827    +
534828    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
534829    +
534830    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
534831    +
534832    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
534833    +
534834    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
534835    +
534836    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
534837    +
534838    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
534839    +
534840    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
534841    +
534842    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
534843    +
534844    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
534845    +
534846    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
534847    +
534848    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
534849    +
534850    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
534851    +
534852    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
534853    +
534854    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
534855    +
534856    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
534857    +
534858    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
534859    +
534860    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
534861    +
534862    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
534863    +
534864    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
534865    +
534866    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
534867    +
534868    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
534869    +
534870    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
534871    +
534872    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
534873    +
534874    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
534875    +
534876    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
534877    +
534878    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
534879    +
534880    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
534881    +
534882    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
534883    +
534884    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
534885    +
534886    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
534887    +
534888    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
534889    +
534890    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
534891    +
534892    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
534893    +
534894    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
534895    +
534896    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
534897    +
534898    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
534899    +
534900    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
534901    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
534902    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
534903    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
534904    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
534905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534906    +end;
MPRINT(EM_DIAGRAM):   end;
534907    +else do;
MPRINT(EM_DIAGRAM):   else do;
534908    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
534909    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
534910    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
534911    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
534912    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
534913    +   end;
MPRINT(EM_DIAGRAM):   end;
534914    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
534915    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
534916    +   end;
MPRINT(EM_DIAGRAM):   end;
534917    +   else do;
MPRINT(EM_DIAGRAM):   else do;
534918    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
534919    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
534920    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534921    +   end;
MPRINT(EM_DIAGRAM):   end;
534922    +end;
MPRINT(EM_DIAGRAM):   end;
534923    +
534924    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
534925    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
534926    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
534927    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
534928    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
534929    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534930    +end;
MPRINT(EM_DIAGRAM):   end;
534931    +else do;
MPRINT(EM_DIAGRAM):   else do;
534932    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
534933    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
534934    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
534935    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
534936    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
534937    +   end;
MPRINT(EM_DIAGRAM):   end;
534938    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
534939    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
534940    +   end;
MPRINT(EM_DIAGRAM):   end;
534941    +   else do;
MPRINT(EM_DIAGRAM):   else do;
534942    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
534943    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
534944    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534945    +   end;
MPRINT(EM_DIAGRAM):   end;
534946    +end;
MPRINT(EM_DIAGRAM):   end;
534947    +
534948    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
534949    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
534950    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
534951    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
534952    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
534953    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534954    +end;
MPRINT(EM_DIAGRAM):   end;
534955    +else do;
MPRINT(EM_DIAGRAM):   else do;
534956    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
534957    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
534958    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
534959    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
534960    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
534961    +   end;
MPRINT(EM_DIAGRAM):   end;
534962    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
534963    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
534964    +   end;
MPRINT(EM_DIAGRAM):   end;
534965    +   else do;
MPRINT(EM_DIAGRAM):   else do;
534966    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
534967    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
534968    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534969    +   end;
MPRINT(EM_DIAGRAM):   end;
534970    +end;
MPRINT(EM_DIAGRAM):   end;
534971    +
534972    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
534973    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
534974    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
534975    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
534976    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
534977    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534978    +end;
MPRINT(EM_DIAGRAM):   end;
534979    +else do;
MPRINT(EM_DIAGRAM):   else do;
534980    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
534981    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
534982    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
534983    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
534984    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
534985    +   end;
MPRINT(EM_DIAGRAM):   end;
534986    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
534987    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
534988    +   end;
MPRINT(EM_DIAGRAM):   end;
534989    +   else do;
MPRINT(EM_DIAGRAM):   else do;
534990    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
534991    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
534992    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
534993    +   end;
MPRINT(EM_DIAGRAM):   end;
534994    +end;
MPRINT(EM_DIAGRAM):   end;
534995    +
534996    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
534997    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
534998    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
534999    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
535000    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535002    +end;
MPRINT(EM_DIAGRAM):   end;
535003    +else do;
MPRINT(EM_DIAGRAM):   else do;
535004    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535005    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
535006    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535007    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535008    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
535009    +   end;
MPRINT(EM_DIAGRAM):   end;
535010    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535011    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
535012    +   end;
MPRINT(EM_DIAGRAM):   end;
535013    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535014    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
535015    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535016    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535017    +   end;
MPRINT(EM_DIAGRAM):   end;
535018    +end;
MPRINT(EM_DIAGRAM):   end;
535019    +
535020    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
535021    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
535022    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
535023    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
535024    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535026    +end;
MPRINT(EM_DIAGRAM):   end;
535027    +else do;
MPRINT(EM_DIAGRAM):   else do;
535028    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535029    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
535030    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535031    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535032    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
535033    +   end;
MPRINT(EM_DIAGRAM):   end;
535034    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535035    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
535036    +   end;
MPRINT(EM_DIAGRAM):   end;
535037    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535038    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
535039    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535040    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535041    +   end;
MPRINT(EM_DIAGRAM):   end;
535042    +end;
MPRINT(EM_DIAGRAM):   end;
535043    +
535044    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
535045    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
535046    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
535047    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
535048    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535050    +end;
MPRINT(EM_DIAGRAM):   end;
535051    +else do;
MPRINT(EM_DIAGRAM):   else do;
535052    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535053    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
535054    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535055    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
535056    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
535057    +   end;
MPRINT(EM_DIAGRAM):   end;
535058    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
535059    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
535060    +   end;
MPRINT(EM_DIAGRAM):   end;
535061    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535062    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
535063    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535064    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535065    +   end;
MPRINT(EM_DIAGRAM):   end;
535066    +end;
MPRINT(EM_DIAGRAM):   end;
535067    +
535068    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
535069    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
535070    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
535071    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
535072    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
535073    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
535074    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
535075    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
535076    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
535077    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
535078    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
535079    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
535080    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535081    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535082    +end;
MPRINT(EM_DIAGRAM):   end;
535083    +else do;
MPRINT(EM_DIAGRAM):   else do;
535084    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
535085    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
535086    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535087    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
535088    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
535089    +   end;
MPRINT(EM_DIAGRAM):   end;
535090    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
535091    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
535092    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
535093    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
535094    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
535095    +   end;
MPRINT(EM_DIAGRAM):   end;
535096    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
535097    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
535098    +   end;
MPRINT(EM_DIAGRAM):   end;
535099    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
535100    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
535101    +   end;
MPRINT(EM_DIAGRAM):   end;
535102    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
535103    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
535104    +   end;
MPRINT(EM_DIAGRAM):   end;
535105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535106    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
535107    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
535108    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
535109    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
535110    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535111    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535112    +   end;
MPRINT(EM_DIAGRAM):   end;
535113    +end;
MPRINT(EM_DIAGRAM):   end;
535114    +
535115    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
535116    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
535117    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
535118    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
535119    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
535120    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
535121    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
535122    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
535123    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
535124    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
535125    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
535126    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
535127    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
535128    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535129    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535130    +end;
MPRINT(EM_DIAGRAM):   end;
535131    +else do;
MPRINT(EM_DIAGRAM):   else do;
535132    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
535133    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
535134    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535135    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
535136    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
535137    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
535138    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
535139    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
535140    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
535141    +         end;
MPRINT(EM_DIAGRAM):   end;
535142    +         else do;
MPRINT(EM_DIAGRAM):   else do;
535143    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
535144    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
535145    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
535146    +            end;
MPRINT(EM_DIAGRAM):   end;
535147    +         end;
MPRINT(EM_DIAGRAM):   end;
535148    +      end;
MPRINT(EM_DIAGRAM):   end;
535149    +      else do;
MPRINT(EM_DIAGRAM):   else do;
535150    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
535151    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
535152    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
535153    +         end;
MPRINT(EM_DIAGRAM):   end;
535154    +      end;
MPRINT(EM_DIAGRAM):   end;
535155    +   end;
MPRINT(EM_DIAGRAM):   end;
535156    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535157    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
535158    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
535159    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
535160    +      end;
MPRINT(EM_DIAGRAM):   end;
535161    +      else do;
MPRINT(EM_DIAGRAM):   else do;
535162    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
535163    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
535164    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
535165    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
535166    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
535167    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
535168    +         end;
MPRINT(EM_DIAGRAM):   end;
535169    +      end;
MPRINT(EM_DIAGRAM):   end;
535170    +   end;
MPRINT(EM_DIAGRAM):   end;
535171    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
535172    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
535173    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
535174    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
535175    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
535176    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535177    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535178    +   end;
MPRINT(EM_DIAGRAM):   end;
535179    +end;
MPRINT(EM_DIAGRAM):   end;
535180    +
535181    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535182    +*** Checking missing input Interval
535183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
535184    +
535185    +IF NMISS(
535186    +   AcceptedCmpTotal ,
535187    +   Age ,
535188    +   Frq ,
535189    +   Income ,
535190    +   Kidhome ,
535191    +   Mnt ,
535192    +   MntFishProducts ,
535193    +   MntFruits ,
535194    +   MntGoldProds ,
535195    +   MntMeatProducts ,
535196    +   MntSweetProducts ,
535197    +   MntWines ,
535198    +   MonthsAsCustomer ,
535199    +   NumCatalogPurchases ,
535200    +   NumDealsPurchases ,
535201    +   NumDistPurchases ,
535202    +   NumStorePurchases ,
535203    +   NumWebPurchases ,
535204    +   NumWebVisitsMonth ,
535205    +   RFMstat ,
535206    +   RMntFrq ,
535207    +   Recency ,
535208    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
535209    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
535210    +
535211    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535212    +END;
MPRINT(EM_DIAGRAM):   END;
535213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535214    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
535215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535216    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
535217    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
535218    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
535219    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
535220    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
535221    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
535222    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
535223    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
535224    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
535225    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
535226    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
535227    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
535228    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
535229    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
535230    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
535231    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
535232    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
535233    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
535234    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
535235    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
535236    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
535237    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
535238    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
535239    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
535240    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
535241    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
535242    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
535243    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
535244    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
535245    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
535246    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
535247    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
535248    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
535249    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
535250    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
535251    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
535252    +END;
MPRINT(EM_DIAGRAM):   END;
535253    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
535254    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
535255    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
535256    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
535257    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
535258    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
535259    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
535260    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
535261    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
535262    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
535263    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
535264    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
535265    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
535266    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
535267    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
535268    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
535269    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
535270    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
535271    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
535272    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
535273    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
535274    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
535275    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
535276    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
535277    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
535278    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
535279    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
535280    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
535281    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
535282    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
535283    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
535284    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
535285    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
535286    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
535287    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
535288    +   ELSE S_NumCatalogPurchases
535289    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
535290    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
535291    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
535292    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
535293    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
535294    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
535295    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
535296    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
535297    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
535298    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
535299    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
535300    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
535301    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
535302    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
535303    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
535304    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
535305    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
535306    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
535307    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
535308    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
535309    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
535310    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
535311    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
535312    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
535313    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
535314    +END;
MPRINT(EM_DIAGRAM):   END;
535315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535316    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
535317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535319    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
535320    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535322    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
535323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535324    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
535325    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
535326    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
535327    +        S_Income  +    -0.48272554811946 * S_Kidhome
535328    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
535329    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
535330    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
535331    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
535332    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
535333    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
535334    +          +    -0.21965892172232 * S_NumDealsPurchases
535335    +          +     0.18147972034868 * S_NumDistPurchases
535336    +          +     0.36657814181657 * S_NumStorePurchases
535337    +          +      0.2558783559717 * S_NumWebPurchases
535338    +          +    -0.12008925196796 * S_NumWebVisitsMonth
535339    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
535340    +        S_RMntFrq  +     0.37914209292496 * S_Recency
535341    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
535342    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
535343    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
535344    +        S_Income  +     0.24387947620062 * S_Kidhome
535345    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
535346    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
535347    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
535348    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
535349    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
535350    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
535351    +          +    -0.05257082874614 * S_NumDealsPurchases
535352    +          +     0.41456571712035 * S_NumDistPurchases
535353    +          +     0.23489798619427 * S_NumStorePurchases
535354    +          +     0.27816946712153 * S_NumWebPurchases
535355    +          +    -0.60321927125997 * S_NumWebVisitsMonth
535356    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
535357    +        S_RMntFrq  +     0.37992942536792 * S_Recency
535358    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
535359    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
535360    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
535361    +        S_Income  +     0.20262487803684 * S_Kidhome
535362    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
535363    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
535364    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
535365    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
535366    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
535367    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
535368    +          +      0.0913099268589 * S_NumDealsPurchases
535369    +          +    -0.05574305289625 * S_NumDistPurchases
535370    +          +    -0.09928560475828 * S_NumStorePurchases
535371    +          +     0.00041482984053 * S_NumWebPurchases
535372    +          +    -0.03314322750163 * S_NumWebVisitsMonth
535373    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
535374    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
535375    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
535376    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
535377    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
535378    +        S_Income  +     0.26225843602768 * S_Kidhome
535379    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
535380    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
535381    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
535382    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
535383    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
535384    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
535385    +          +     0.83559002761395 * S_NumDealsPurchases
535386    +          +     0.30813434559451 * S_NumDistPurchases
535387    +          +    -0.61391039002598 * S_NumStorePurchases
535388    +          +    -1.03190502679863 * S_NumWebPurchases
535389    +          +     0.13374464245621 * S_NumWebVisitsMonth
535390    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
535391    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
535392    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
535393    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
535394    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
535395    +        S_Income  +      -0.692179901076 * S_Kidhome
535396    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
535397    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
535398    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
535399    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
535400    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
535401    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
535402    +          +     0.65604427948051 * S_NumDealsPurchases
535403    +          +     0.01430165674945 * S_NumDistPurchases
535404    +          +    -0.76865963932685 * S_NumStorePurchases
535405    +          +    -0.72521754496401 * S_NumWebPurchases
535406    +          +     1.59453686210397 * S_NumWebVisitsMonth
535407    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
535408    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
535409    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
535410    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
535411    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
535412    +        S_Income  +    -0.23602869688727 * S_Kidhome
535413    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
535414    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
535415    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
535416    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
535417    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
535418    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
535419    +          +    -0.30337362777997 * S_NumDealsPurchases
535420    +          +     0.11551482249746 * S_NumDistPurchases
535421    +          +     0.19719845223838 * S_NumStorePurchases
535422    +          +     0.16011319337206 * S_NumWebPurchases
535423    +          +    -0.19222801416081 * S_NumWebVisitsMonth
535424    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
535425    +        S_RMntFrq  +     0.01056840325776 * S_Recency
535426    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
535427    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
535428    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
535429    +        S_Income  +    -0.47270881977809 * S_Kidhome
535430    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
535431    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
535432    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
535433    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
535434    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
535435    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
535436    +          +    -0.16806813676368 * S_NumDealsPurchases
535437    +          +      0.1680540538046 * S_NumDistPurchases
535438    +          +     0.09845423109173 * S_NumStorePurchases
535439    +          +     0.22281606853536 * S_NumWebPurchases
535440    +          +       0.650769024744 * S_NumWebVisitsMonth
535441    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
535442    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
535443    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
535444    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
535445    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
535446    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
535447    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
535448    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
535449    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
535450    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
535451    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
535452    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
535453    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
535454    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
535455    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
535456    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
535457    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
535458    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
535459    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
535460    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
535461    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
535462    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
535463    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
535464    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
535465    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
535466    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
535467    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
535468    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
535469    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
535470    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
535471    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
535472    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
535473    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
535474    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
535475    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
535476    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
535477    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
535478    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
535479    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
535480    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
535481    +        EducationGraduation  +     0.02445863067232 * EducationMaster
535482    +          +     0.42984001630756 * Marital_StatusDivorced
535483    +          +     -0.4660144877239 * Marital_StatusMarried
535484    +          +     0.44888148801285 * Marital_StatusSingle
535485    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
535486    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
535487    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
535488    +        EducationGraduation  +     0.28773168978233 * EducationMaster
535489    +          +     0.10758942571981 * Marital_StatusDivorced
535490    +          +     0.51795960036213 * Marital_StatusMarried
535491    +          +    -0.40242992087783 * Marital_StatusSingle
535492    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
535493    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
535494    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
535495    +        EducationGraduation  +      0.1986661885803 * EducationMaster
535496    +          +    -0.05264595890678 * Marital_StatusDivorced
535497    +          +     0.07468414180829 * Marital_StatusMarried
535498    +          +     0.20145352309024 * Marital_StatusSingle
535499    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
535500    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
535501    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
535502    +        EducationGraduation  +     0.28768591072195 * EducationMaster
535503    +          +    -0.41440932029593 * Marital_StatusDivorced
535504    +          +     0.65630698363184 * Marital_StatusMarried
535505    +          +    -0.37277384861759 * Marital_StatusSingle
535506    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
535507    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
535508    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
535509    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
535510    +          +     0.86284304352233 * Marital_StatusDivorced
535511    +          +    -0.85716490342524 * Marital_StatusMarried
535512    +          +     0.74516572826411 * Marital_StatusSingle
535513    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
535514    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
535515    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
535516    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
535517    +          +    -0.11928801837478 * Marital_StatusDivorced
535518    +          +    -0.15909233409421 * Marital_StatusMarried
535519    +          +     0.34325131781601 * Marital_StatusSingle
535520    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
535521    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
535522    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
535523    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
535524    +          +     0.15109481730803 * Marital_StatusDivorced
535525    +          +    -1.01578758379559 * Marital_StatusMarried
535526    +          +     0.70421923836193 * Marital_StatusSingle
535527    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
535528    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
535529    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
535530    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
535531    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
535532    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
535533    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
535534    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
535535    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
535536    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
535537    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
535538    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
535539    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
535540    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
535541    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
535542    +END;
MPRINT(EM_DIAGRAM):   END;
535543    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
535544    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
535545    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
535546    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
535547    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
535548    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
535549    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
535550    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
535551    +END;
MPRINT(EM_DIAGRAM):   END;
535552    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535553    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
535554    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535555    +
535556    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
535557    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
535558    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
535559    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
535560    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
535561    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535562    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
535563    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
535564    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
535565    +end;
MPRINT(EM_DIAGRAM):   end;
535566    +else do;
MPRINT(EM_DIAGRAM):   else do;
535567    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
535568    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
535569    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
535570    +   end;
MPRINT(EM_DIAGRAM):   end;
535571    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
535572    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
535573    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
535574    +   end;
MPRINT(EM_DIAGRAM):   end;
535575    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535576    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
535577    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
535578    +   end;
MPRINT(EM_DIAGRAM):   end;
535579    +end;
MPRINT(EM_DIAGRAM):   end;
535580    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
535581    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
535582    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
535583    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
535584    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
535585    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
535586    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
535587    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
535588    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
535589    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
535590    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
535591    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
535592    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
535593    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
535594    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
535595    +END;
MPRINT(EM_DIAGRAM):   END;
535596    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
535597    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
535598    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
535599    +END;
MPRINT(EM_DIAGRAM):   END;
535600    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
535601    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
535602    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
535603    +END;
MPRINT(EM_DIAGRAM):   END;
535604    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
535605    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
535606    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
535607    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
535608    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
535609    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
535610    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
535611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535612    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
535613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
535614    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
535615    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
535616    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
535617    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
535618    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
535619    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
535620    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
535621    +END;
MPRINT(EM_DIAGRAM):   END;
535622    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
535623    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
535624    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
535625    +drop
535626    +H11
535627    +H12
535628    +H13
535629    +H14
535630    +H15
535631    +H16
535632    +H17
535633    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
535634    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
535635     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
535636     quit;
535637     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
535638     filename emflow
535638   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural10: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
535639     *------------------------------------------------------------*;
535640     * Neural10: Scoring VALIDATE data;
535641     *------------------------------------------------------------*;
535642     data EMWS8.Neural10_VALIDATE
535643     / view=EMWS8.Neural10_VALIDATE
535644     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_VALIDATE / view=EMWS8.Neural10_VALIDATE ;
535645     set EMWS8.Meta_VALIDATE
535646     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta_VALIDATE ;
535647     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural10\EMFLOWSCORE.sas.
535648    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
535649    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
535650    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
535651    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
535652    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
535653    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
535654    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
535655    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
535656    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
535657    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
535658    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
535659    +LENGTH _WARN_ $4
535660    +      F_DepVar  $ 12
535661    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
535662    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
535663    +
535664    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
535665    +
535666    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
535667    +
535668    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
535669    +
535670    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
535671    +
535672    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
535673    +
535674    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
535675    +
535676    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
535677    +
535678    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
535679    +
535680    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
535681    +
535682    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
535683    +
535684    +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
535685    +
535686    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
535687    +
535688    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
535689    +
535690    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
535691    +
535692    +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
535693    +
535694    +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
535695    +
535696    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
535697    +
535698    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
535699    +
535700    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
535701    +
535702    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
535703    +
535704    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
535705    +
535706    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
535707    +
535708    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
535709    +
535710    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
535711    +
535712    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
535713    +
535714    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
535715    +
535716    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
535717    +
535718    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
535719    +
535720    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
535721    +
535722    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
535723    +
535724    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
535725    +
535726    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
535727    +
535728    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
535729    +
535730    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
535731    +
535732    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
535733    +
535734    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
535735    +
535736    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
535737    +
535738    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
535739    +
535740    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
535741    +
535742    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
535743    +
535744    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
535745    +
535746    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
535747    +
535748    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
535749    +
535750    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
535751    +
535752    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
535753    +
535754    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
535755    +
535756    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
535757    +
535758    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
535759    +
535760    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
535761    +
535762    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
535763    +
535764    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
535765    +
535766    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
535767    +
535768    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
535769    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
535770    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
535771    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
535772    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535773    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535774    +end;
MPRINT(EM_DIAGRAM):   end;
535775    +else do;
MPRINT(EM_DIAGRAM):   else do;
535776    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535777    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
535778    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535779    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535780    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
535781    +   end;
MPRINT(EM_DIAGRAM):   end;
535782    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535783    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
535784    +   end;
MPRINT(EM_DIAGRAM):   end;
535785    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535786    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
535787    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535788    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535789    +   end;
MPRINT(EM_DIAGRAM):   end;
535790    +end;
MPRINT(EM_DIAGRAM):   end;
535791    +
535792    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
535793    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
535794    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
535795    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
535796    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535797    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535798    +end;
MPRINT(EM_DIAGRAM):   end;
535799    +else do;
MPRINT(EM_DIAGRAM):   else do;
535800    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535801    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
535802    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535803    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535804    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
535805    +   end;
MPRINT(EM_DIAGRAM):   end;
535806    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535807    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
535808    +   end;
MPRINT(EM_DIAGRAM):   end;
535809    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535810    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
535811    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535812    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535813    +   end;
MPRINT(EM_DIAGRAM):   end;
535814    +end;
MPRINT(EM_DIAGRAM):   end;
535815    +
535816    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
535817    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
535818    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
535819    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
535820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535822    +end;
MPRINT(EM_DIAGRAM):   end;
535823    +else do;
MPRINT(EM_DIAGRAM):   else do;
535824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535825    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
535826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535827    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535828    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
535829    +   end;
MPRINT(EM_DIAGRAM):   end;
535830    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535831    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
535832    +   end;
MPRINT(EM_DIAGRAM):   end;
535833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535834    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
535835    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535836    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535837    +   end;
MPRINT(EM_DIAGRAM):   end;
535838    +end;
MPRINT(EM_DIAGRAM):   end;
535839    +
535840    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
535841    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
535842    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
535843    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
535844    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535846    +end;
MPRINT(EM_DIAGRAM):   end;
535847    +else do;
MPRINT(EM_DIAGRAM):   else do;
535848    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535849    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
535850    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535851    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535852    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
535853    +   end;
MPRINT(EM_DIAGRAM):   end;
535854    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535855    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
535856    +   end;
MPRINT(EM_DIAGRAM):   end;
535857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535858    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
535859    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535860    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535861    +   end;
MPRINT(EM_DIAGRAM):   end;
535862    +end;
MPRINT(EM_DIAGRAM):   end;
535863    +
535864    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
535865    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
535866    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
535867    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
535868    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535869    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535870    +end;
MPRINT(EM_DIAGRAM):   end;
535871    +else do;
MPRINT(EM_DIAGRAM):   else do;
535872    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535873    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
535874    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535875    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535876    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
535877    +   end;
MPRINT(EM_DIAGRAM):   end;
535878    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535879    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
535880    +   end;
MPRINT(EM_DIAGRAM):   end;
535881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535882    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
535883    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535884    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535885    +   end;
MPRINT(EM_DIAGRAM):   end;
535886    +end;
MPRINT(EM_DIAGRAM):   end;
535887    +
535888    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
535889    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
535890    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
535891    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
535892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535894    +end;
MPRINT(EM_DIAGRAM):   end;
535895    +else do;
MPRINT(EM_DIAGRAM):   else do;
535896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535897    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
535898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535899    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
535900    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
535901    +   end;
MPRINT(EM_DIAGRAM):   end;
535902    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
535903    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
535904    +   end;
MPRINT(EM_DIAGRAM):   end;
535905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535906    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
535907    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535908    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535909    +   end;
MPRINT(EM_DIAGRAM):   end;
535910    +end;
MPRINT(EM_DIAGRAM):   end;
535911    +
535912    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
535913    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
535914    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
535915    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
535916    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535917    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535918    +end;
MPRINT(EM_DIAGRAM):   end;
535919    +else do;
MPRINT(EM_DIAGRAM):   else do;
535920    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
535921    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
535922    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535923    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
535924    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
535925    +   end;
MPRINT(EM_DIAGRAM):   end;
535926    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
535927    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
535928    +   end;
MPRINT(EM_DIAGRAM):   end;
535929    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535930    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
535931    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535932    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535933    +   end;
MPRINT(EM_DIAGRAM):   end;
535934    +end;
MPRINT(EM_DIAGRAM):   end;
535935    +
535936    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
535937    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
535938    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
535939    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
535940    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
535941    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
535942    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
535943    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
535944    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
535945    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
535946    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
535947    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
535948    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535949    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535950    +end;
MPRINT(EM_DIAGRAM):   end;
535951    +else do;
MPRINT(EM_DIAGRAM):   else do;
535952    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
535953    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
535954    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
535955    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
535956    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
535957    +   end;
MPRINT(EM_DIAGRAM):   end;
535958    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
535959    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
535960    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
535961    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
535962    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
535963    +   end;
MPRINT(EM_DIAGRAM):   end;
535964    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
535965    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
535966    +   end;
MPRINT(EM_DIAGRAM):   end;
535967    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
535968    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
535969    +   end;
MPRINT(EM_DIAGRAM):   end;
535970    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
535971    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
535972    +   end;
MPRINT(EM_DIAGRAM):   end;
535973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
535974    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
535975    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
535976    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
535977    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
535978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
535979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535980    +   end;
MPRINT(EM_DIAGRAM):   end;
535981    +end;
MPRINT(EM_DIAGRAM):   end;
535982    +
535983    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
535984    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
535985    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
535986    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
535987    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
535988    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
535989    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
535990    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
535991    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
535992    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
535993    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
535994    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
535995    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
535996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
535997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
535998    +end;
MPRINT(EM_DIAGRAM):   end;
535999    +else do;
MPRINT(EM_DIAGRAM):   else do;
536000    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
536001    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
536002    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
536003    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
536004    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
536005    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
536006    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
536007    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
536008    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
536009    +         end;
MPRINT(EM_DIAGRAM):   end;
536010    +         else do;
MPRINT(EM_DIAGRAM):   else do;
536011    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
536012    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
536013    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
536014    +            end;
MPRINT(EM_DIAGRAM):   end;
536015    +         end;
MPRINT(EM_DIAGRAM):   end;
536016    +      end;
MPRINT(EM_DIAGRAM):   end;
536017    +      else do;
MPRINT(EM_DIAGRAM):   else do;
536018    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
536019    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
536020    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
536021    +         end;
MPRINT(EM_DIAGRAM):   end;
536022    +      end;
MPRINT(EM_DIAGRAM):   end;
536023    +   end;
MPRINT(EM_DIAGRAM):   end;
536024    +   else do;
MPRINT(EM_DIAGRAM):   else do;
536025    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
536026    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
536027    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
536028    +      end;
MPRINT(EM_DIAGRAM):   end;
536029    +      else do;
MPRINT(EM_DIAGRAM):   else do;
536030    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
536031    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
536032    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
536033    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
536034    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
536035    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
536036    +         end;
MPRINT(EM_DIAGRAM):   end;
536037    +      end;
MPRINT(EM_DIAGRAM):   end;
536038    +   end;
MPRINT(EM_DIAGRAM):   end;
536039    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
536040    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
536041    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
536042    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
536043    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
536044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
536045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
536046    +   end;
MPRINT(EM_DIAGRAM):   end;
536047    +end;
MPRINT(EM_DIAGRAM):   end;
536048    +
536049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536050    +*** Checking missing input Interval
536051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
536052    +
536053    +IF NMISS(
536054    +   AcceptedCmpTotal ,
536055    +   Age ,
536056    +   Frq ,
536057    +   Income ,
536058    +   Kidhome ,
536059    +   Mnt ,
536060    +   MntFishProducts ,
536061    +   MntFruits ,
536062    +   MntGoldProds ,
536063    +   MntMeatProducts ,
536064    +   MntSweetProducts ,
536065    +   MntWines ,
536066    +   MonthsAsCustomer ,
536067    +   NumCatalogPurchases ,
536068    +   NumDealsPurchases ,
536069    +   NumDistPurchases ,
536070    +   NumStorePurchases ,
536071    +   NumWebPurchases ,
536072    +   NumWebVisitsMonth ,
536073    +   RFMstat ,
536074    +   RMntFrq ,
536075    +   Recency ,
536076    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
536077    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
536078    +
536079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
536080    +END;
MPRINT(EM_DIAGRAM):   END;
536081    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536082    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
536083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536084    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
536085    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
536086    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
536087    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
536088    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
536089    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
536090    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
536091    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
536092    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
536093    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
536094    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
536095    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
536096    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
536097    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
536098    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
536099    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
536100    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
536101    +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
536102    +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
536103    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
536104    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
536105    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
536106    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
536107    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
536108    +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
536109    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
536110    +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
536111    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
536112    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
536113    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
536114    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
536115    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
536116    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
536117    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
536118    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
536119    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
536120    +END;
MPRINT(EM_DIAGRAM):   END;
536121    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
536122    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
536123    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
536124    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
536125    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
536126    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
536127    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
536128    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
536129    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
536130    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
536131    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
536132    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
536133    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
536134    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
536135    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
536136    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
536137    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
536138    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
536139    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
536140    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
536141    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
536142    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
536143    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
536144    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
536145    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
536146    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
536147    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
536148    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
536149    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
536150    +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
536151    +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
536152    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
536153    +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
536154    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
536155    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
536156    +   ELSE S_NumCatalogPurchases
536157    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
536158    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
536159    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
536160    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
536161    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
536162    +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
536163    +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
536164    +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
536165    +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
536166    +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
536167    +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
536168    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
536169    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
536170    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
536171    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
536172    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
536173    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
536174    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
536175    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
536176    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
536177    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
536178    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
536179    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
536180    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
536181    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
536182    +END;
MPRINT(EM_DIAGRAM):   END;
536183    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536184    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
536185    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536187    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
536188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536189    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536190    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
536191    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536192    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
536193    +   H11  =    -0.56509996505673 * S_AcceptedCmpTotal  +    -0.23063823697229 *
536194    +        S_Age  +     0.27537956875262 * S_Frq  +    -0.13998299759696 *
536195    +        S_Income  +    -0.48272554811946 * S_Kidhome
536196    +          +     0.02078968845252 * S_Mnt  +     0.39778286292195 *
536197    +        S_MntFishProducts  +    -0.05943228184406 * S_MntFruits
536198    +          +    -0.22076005674037 * S_MntGoldProds  +    -1.15470073662687 *
536199    +        S_MntMeatProducts  +     0.01689175327079 * S_MntSweetProducts
536200    +          +     0.38794071873445 * S_MntWines  +      0.0790144986614 *
536201    +        S_MonthsAsCustomer  +     -0.5385547715034 * S_NumCatalogPurchases
536202    +          +    -0.21965892172232 * S_NumDealsPurchases
536203    +          +     0.18147972034868 * S_NumDistPurchases
536204    +          +     0.36657814181657 * S_NumStorePurchases
536205    +          +      0.2558783559717 * S_NumWebPurchases
536206    +          +    -0.12008925196796 * S_NumWebVisitsMonth
536207    +          +     -0.2801394750033 * S_RFMstat  +    -0.15606351466959 *
536208    +        S_RMntFrq  +     0.37914209292496 * S_Recency
536209    +          +     0.40705261237123 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.56509996505673 * S_AcceptedCmpTotal + -0.23063823697229 * S_Age 
+ 0.27537956875262 * S_Frq + -0.13998299759696 * S_Income + -0.48272554811946 * S_Kidhome + 
0.02078968845252 * S_Mnt + 0.39778286292195 * S_MntFishProducts + -0.05943228184406 * 
S_MntFruits + -0.22076005674037 * S_MntGoldProds + -1.15470073662687 * S_MntMeatProducts + 
0.01689175327079 * S_MntSweetProducts + 0.38794071873445 * S_MntWines + 0.0790144986614 * 
S_MonthsAsCustomer + -0.5385547715034 * S_NumCatalogPurchases + -0.21965892172232 * 
S_NumDealsPurchases + 0.18147972034868 * S_NumDistPurchases + 0.36657814181657 * 
S_NumStorePurchases + 0.2558783559717 * S_NumWebPurchases + -0.12008925196796 * 
S_NumWebVisitsMonth + -0.2801394750033 * S_RFMstat + -0.15606351466959 * S_RMntFrq + 
0.37914209292496 * S_Recency + 0.40705261237123 * S_Teenhome ;
536210    +   H12  =    -0.33633432608107 * S_AcceptedCmpTotal  +     0.16353547895993 *
536211    +        S_Age  +     0.24085016715236 * S_Frq  +    -0.12216338707901 *
536212    +        S_Income  +     0.24387947620062 * S_Kidhome
536213    +          +     0.49145996867369 * S_Mnt  +      0.0578610487644 *
536214    +        S_MntFishProducts  +     0.02621200334488 * S_MntFruits
536215    +          +    -0.22909633857209 * S_MntGoldProds  +    -0.86136295830946 *
536216    +        S_MntMeatProducts  +     0.11908088548047 * S_MntSweetProducts
536217    +          +     0.63547632412982 * S_MntWines  +      0.2259508551947 *
536218    +        S_MonthsAsCustomer  +    -0.13471041074588 * S_NumCatalogPurchases
536219    +          +    -0.05257082874614 * S_NumDealsPurchases
536220    +          +     0.41456571712035 * S_NumDistPurchases
536221    +          +     0.23489798619427 * S_NumStorePurchases
536222    +          +     0.27816946712153 * S_NumWebPurchases
536223    +          +    -0.60321927125997 * S_NumWebVisitsMonth
536224    +          +    -0.13771604724576 * S_RFMstat  +     0.32661912615265 *
536225    +        S_RMntFrq  +     0.37992942536792 * S_Recency
536226    +          +     0.23123529364349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.33633432608107 * S_AcceptedCmpTotal + 0.16353547895993 * S_Age 
+ 0.24085016715236 * S_Frq + -0.12216338707901 * S_Income + 0.24387947620062 * S_Kidhome + 
0.49145996867369 * S_Mnt + 0.0578610487644 * S_MntFishProducts + 0.02621200334488 * 
S_MntFruits + -0.22909633857209 * S_MntGoldProds + -0.86136295830946 * S_MntMeatProducts + 
0.11908088548047 * S_MntSweetProducts + 0.63547632412982 * S_MntWines + 0.2259508551947 * 
S_MonthsAsCustomer + -0.13471041074588 * S_NumCatalogPurchases + -0.05257082874614 * 
S_NumDealsPurchases + 0.41456571712035 * S_NumDistPurchases + 0.23489798619427 * 
S_NumStorePurchases + 0.27816946712153 * S_NumWebPurchases + -0.60321927125997 * 
S_NumWebVisitsMonth + -0.13771604724576 * S_RFMstat + 0.32661912615265 * S_RMntFrq + 
0.37992942536792 * S_Recency + 0.23123529364349 * S_Teenhome ;
536227    +   H13  =    -0.62677142457909 * S_AcceptedCmpTotal  +    -0.10225199885389 *
536228    +        S_Age  +     0.05375482280846 * S_Frq  +     -0.2276300280575 *
536229    +        S_Income  +     0.20262487803684 * S_Kidhome
536230    +          +    -0.14876269646837 * S_Mnt  +     -0.4868127566475 *
536231    +        S_MntFishProducts  +    -0.14012815992673 * S_MntFruits
536232    +          +     0.10460152409631 * S_MntGoldProds  +     0.32637815775717 *
536233    +        S_MntMeatProducts  +    -0.31544850569482 * S_MntSweetProducts
536234    +          +     0.04232116862038 * S_MntWines  +     0.04384330908855 *
536235    +        S_MonthsAsCustomer  +       0.024361263039 * S_NumCatalogPurchases
536236    +          +      0.0913099268589 * S_NumDealsPurchases
536237    +          +    -0.05574305289625 * S_NumDistPurchases
536238    +          +    -0.09928560475828 * S_NumStorePurchases
536239    +          +     0.00041482984053 * S_NumWebPurchases
536240    +          +    -0.03314322750163 * S_NumWebVisitsMonth
536241    +          +    -0.18963089491876 * S_RFMstat  +    -0.07289922796134 *
536242    +        S_RMntFrq  +     -0.0998656801694 * S_Recency
536243    +          +     0.07805710264311 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.62677142457909 * S_AcceptedCmpTotal + -0.10225199885389 * S_Age 
+ 0.05375482280846 * S_Frq + -0.2276300280575 * S_Income + 0.20262487803684 * S_Kidhome + 
-0.14876269646837 * S_Mnt + -0.4868127566475 * S_MntFishProducts + -0.14012815992673 * 
S_MntFruits + 0.10460152409631 * S_MntGoldProds + 0.32637815775717 * S_MntMeatProducts + 
-0.31544850569482 * S_MntSweetProducts + 0.04232116862038 * S_MntWines + 0.04384330908855 * 
S_MonthsAsCustomer + 0.024361263039 * S_NumCatalogPurchases + 0.0913099268589 * 
S_NumDealsPurchases + -0.05574305289625 * S_NumDistPurchases + -0.09928560475828 * 
S_NumStorePurchases + 0.00041482984053 * S_NumWebPurchases + -0.03314322750163 * 
S_NumWebVisitsMonth + -0.18963089491876 * S_RFMstat + -0.07289922796134 * S_RMntFrq + 
-0.0998656801694 * S_Recency + 0.07805710264311 * S_Teenhome ;
536244    +   H14  =     0.58578346547732 * S_AcceptedCmpTotal  +     0.04716075363777 *
536245    +        S_Age  +     0.23789426503274 * S_Frq  +     0.09306785885014 *
536246    +        S_Income  +     0.26225843602768 * S_Kidhome
536247    +          +     0.28381069432619 * S_Mnt  +    -0.20750545498741 *
536248    +        S_MntFishProducts  +     -0.0153624448098 * S_MntFruits
536249    +          +    -0.02656939541352 * S_MntGoldProds  +     1.97911440218059 *
536250    +        S_MntMeatProducts  +     0.28353571629196 * S_MntSweetProducts
536251    +          +    -0.69002907264222 * S_MntWines  +    -0.01673377005001 *
536252    +        S_MonthsAsCustomer  +     1.76601520216011 * S_NumCatalogPurchases
536253    +          +     0.83559002761395 * S_NumDealsPurchases
536254    +          +     0.30813434559451 * S_NumDistPurchases
536255    +          +    -0.61391039002598 * S_NumStorePurchases
536256    +          +    -1.03190502679863 * S_NumWebPurchases
536257    +          +     0.13374464245621 * S_NumWebVisitsMonth
536258    +          +     0.34844972128972 * S_RFMstat  +     0.00077632967209 *
536259    +        S_RMntFrq  +    -0.37521605306084 * S_Recency
536260    +          +    -0.00142295377819 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.58578346547732 * S_AcceptedCmpTotal + 0.04716075363777 * S_Age + 
0.23789426503274 * S_Frq + 0.09306785885014 * S_Income + 0.26225843602768 * S_Kidhome + 
0.28381069432619 * S_Mnt + -0.20750545498741 * S_MntFishProducts + -0.0153624448098 * 
S_MntFruits + -0.02656939541352 * S_MntGoldProds + 1.97911440218059 * S_MntMeatProducts + 
0.28353571629196 * S_MntSweetProducts + -0.69002907264222 * S_MntWines + -0.01673377005001 * 
S_MonthsAsCustomer + 1.76601520216011 * S_NumCatalogPurchases + 0.83559002761395 * 
S_NumDealsPurchases + 0.30813434559451 * S_NumDistPurchases + -0.61391039002598 * 
S_NumStorePurchases + -1.03190502679863 * S_NumWebPurchases + 0.13374464245621 * 
S_NumWebVisitsMonth + 0.34844972128972 * S_RFMstat + 0.00077632967209 * S_RMntFrq + 
-0.37521605306084 * S_Recency + -0.00142295377819 * S_Teenhome ;
536261    +   H15  =      0.5305297970665 * S_AcceptedCmpTotal  +    -0.02853929527052 *
536262    +        S_Age  +    -0.17491582531678 * S_Frq  +     0.67721722139265 *
536263    +        S_Income  +      -0.692179901076 * S_Kidhome
536264    +          +      0.0753885945685 * S_Mnt  +     0.07509531201013 *
536265    +        S_MntFishProducts  +    -0.09558593671631 * S_MntFruits
536266    +          +     -0.1010519397785 * S_MntGoldProds  +     0.90842125479786 *
536267    +        S_MntMeatProducts  +    -0.05268487318554 * S_MntSweetProducts
536268    +          +    -0.41869343587904 * S_MntWines  +     0.00774546781662 *
536269    +        S_MonthsAsCustomer  +     0.69118571360022 * S_NumCatalogPurchases
536270    +          +     0.65604427948051 * S_NumDealsPurchases
536271    +          +     0.01430165674945 * S_NumDistPurchases
536272    +          +    -0.76865963932685 * S_NumStorePurchases
536273    +          +    -0.72521754496401 * S_NumWebPurchases
536274    +          +     1.59453686210397 * S_NumWebVisitsMonth
536275    +          +     0.07015818288598 * S_RFMstat  +    -0.48678185627279 *
536276    +        S_RMntFrq  +    -1.32992957279361 * S_Recency
536277    +          +    -0.30389277845474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.5305297970665 * S_AcceptedCmpTotal + -0.02853929527052 * S_Age + 
-0.17491582531678 * S_Frq + 0.67721722139265 * S_Income + -0.692179901076 * S_Kidhome + 
0.0753885945685 * S_Mnt + 0.07509531201013 * S_MntFishProducts + -0.09558593671631 * 
S_MntFruits + -0.1010519397785 * S_MntGoldProds + 0.90842125479786 * S_MntMeatProducts + 
-0.05268487318554 * S_MntSweetProducts + -0.41869343587904 * S_MntWines + 0.00774546781662 * 
S_MonthsAsCustomer + 0.69118571360022 * S_NumCatalogPurchases + 0.65604427948051 * 
S_NumDealsPurchases + 0.01430165674945 * S_NumDistPurchases + -0.76865963932685 * 
S_NumStorePurchases + -0.72521754496401 * S_NumWebPurchases + 1.59453686210397 * 
S_NumWebVisitsMonth + 0.07015818288598 * S_RFMstat + -0.48678185627279 * S_RMntFrq + 
-1.32992957279361 * S_Recency + -0.30389277845474 * S_Teenhome ;
536278    +   H16  =    -0.14461357872357 * S_AcceptedCmpTotal  +     0.33306933698178 *
536279    +        S_Age  +     0.23947139684336 * S_Frq  +     0.25400354895308 *
536280    +        S_Income  +    -0.23602869688727 * S_Kidhome
536281    +          +     0.01762051414513 * S_Mnt  +    -0.02278009971118 *
536282    +        S_MntFishProducts  +      0.0138100640729 * S_MntFruits
536283    +          +     0.10885605658644 * S_MntGoldProds  +    -0.08129497127342 *
536284    +        S_MntMeatProducts  +    -0.15226579430345 * S_MntSweetProducts
536285    +          +    -0.28936878643978 * S_MntWines  +     0.18699471527536 *
536286    +        S_MonthsAsCustomer  +     0.22218904316421 * S_NumCatalogPurchases
536287    +          +    -0.30337362777997 * S_NumDealsPurchases
536288    +          +     0.11551482249746 * S_NumDistPurchases
536289    +          +     0.19719845223838 * S_NumStorePurchases
536290    +          +     0.16011319337206 * S_NumWebPurchases
536291    +          +    -0.19222801416081 * S_NumWebVisitsMonth
536292    +          +    -0.21560223408993 * S_RFMstat  +    -0.09112530580192 *
536293    +        S_RMntFrq  +     0.01056840325776 * S_Recency
536294    +          +      -0.297834752682 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.14461357872357 * S_AcceptedCmpTotal + 0.33306933698178 * S_Age 
+ 0.23947139684336 * S_Frq + 0.25400354895308 * S_Income + -0.23602869688727 * S_Kidhome + 
0.01762051414513 * S_Mnt + -0.02278009971118 * S_MntFishProducts + 0.0138100640729 * 
S_MntFruits + 0.10885605658644 * S_MntGoldProds + -0.08129497127342 * S_MntMeatProducts + 
-0.15226579430345 * S_MntSweetProducts + -0.28936878643978 * S_MntWines + 0.18699471527536 * 
S_MonthsAsCustomer + 0.22218904316421 * S_NumCatalogPurchases + -0.30337362777997 * 
S_NumDealsPurchases + 0.11551482249746 * S_NumDistPurchases + 0.19719845223838 * 
S_NumStorePurchases + 0.16011319337206 * S_NumWebPurchases + -0.19222801416081 * 
S_NumWebVisitsMonth + -0.21560223408993 * S_RFMstat + -0.09112530580192 * S_RMntFrq + 
0.01056840325776 * S_Recency + -0.297834752682 * S_Teenhome ;
536295    +   H17  =     0.15982134979751 * S_AcceptedCmpTotal  +    -0.10107478816004 *
536296    +        S_Age  +     0.02027525505315 * S_Frq  +     0.41229842787905 *
536297    +        S_Income  +    -0.47270881977809 * S_Kidhome
536298    +          +     0.12024996830569 * S_Mnt  +    -0.28295608579685 *
536299    +        S_MntFishProducts  +    -0.07163379649201 * S_MntFruits
536300    +          +     0.09552477346527 * S_MntGoldProds  +    -0.01286236006652 *
536301    +        S_MntMeatProducts  +     0.00943538063039 * S_MntSweetProducts
536302    +          +     0.04434518979611 * S_MntWines  +     -0.1176196348599 *
536303    +        S_MonthsAsCustomer  +      0.3393965598874 * S_NumCatalogPurchases
536304    +          +    -0.16806813676368 * S_NumDealsPurchases
536305    +          +      0.1680540538046 * S_NumDistPurchases
536306    +          +     0.09845423109173 * S_NumStorePurchases
536307    +          +     0.22281606853536 * S_NumWebPurchases
536308    +          +       0.650769024744 * S_NumWebVisitsMonth
536309    +          +     0.09481237306076 * S_RFMstat  +     0.13733671608882 *
536310    +        S_RMntFrq  +    -1.11177537596499 * S_Recency
536311    +          +     -0.4787522037445 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.15982134979751 * S_AcceptedCmpTotal + -0.10107478816004 * S_Age 
+ 0.02027525505315 * S_Frq + 0.41229842787905 * S_Income + -0.47270881977809 * S_Kidhome + 
0.12024996830569 * S_Mnt + -0.28295608579685 * S_MntFishProducts + -0.07163379649201 * 
S_MntFruits + 0.09552477346527 * S_MntGoldProds + -0.01286236006652 * S_MntMeatProducts + 
0.00943538063039 * S_MntSweetProducts + 0.04434518979611 * S_MntWines + -0.1176196348599 * 
S_MonthsAsCustomer + 0.3393965598874 * S_NumCatalogPurchases + -0.16806813676368 * 
S_NumDealsPurchases + 0.1680540538046 * S_NumDistPurchases + 0.09845423109173 * 
S_NumStorePurchases + 0.22281606853536 * S_NumWebPurchases + 0.650769024744 * 
S_NumWebVisitsMonth + 0.09481237306076 * S_RFMstat + 0.13733671608882 * S_RMntFrq + 
-1.11177537596499 * S_Recency + -0.4787522037445 * S_Teenhome ;
536312    +   H11  = H11  +     0.13366172993941 * AcceptedCmp10
536313    +          +     0.05223132673306 * AcceptedCmp20  +    -0.12431756055238 *
536314    +        AcceptedCmp30  +    -0.11023452429442 * AcceptedCmp40
536315    +          +     0.07032238409995 * AcceptedCmp50  +    -0.26682806608348 *
536316    +        Complain0  +    -0.02499813030323 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.13366172993941 * AcceptedCmp10 + 0.05223132673306 * 
AcceptedCmp20 + -0.12431756055238 * AcceptedCmp30 + -0.11023452429442 * AcceptedCmp40 + 
0.07032238409995 * AcceptedCmp50 + -0.26682806608348 * Complain0 + -0.02499813030323 * 
HigherEducationBinary0 ;
536317    +   H12  = H12  +     0.00554245438596 * AcceptedCmp10
536318    +          +     0.15839567066461 * AcceptedCmp20  +     0.37076825865406 *
536319    +        AcceptedCmp30  +    -0.35554633579904 * AcceptedCmp40
536320    +          +     0.37072771407119 * AcceptedCmp50  +    -0.05194089161987 *
536321    +        Complain0  +    -0.37225966683728 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00554245438596 * AcceptedCmp10 + 0.15839567066461 * 
AcceptedCmp20 + 0.37076825865406 * AcceptedCmp30 + -0.35554633579904 * AcceptedCmp40 + 
0.37072771407119 * AcceptedCmp50 + -0.05194089161987 * Complain0 + -0.37225966683728 * 
HigherEducationBinary0 ;
536322    +   H13  = H13  +    -0.22559016468364 * AcceptedCmp10
536323    +          +     0.05833377673707 * AcceptedCmp20  +    -0.03636700985548 *
536324    +        AcceptedCmp30  +    -0.25569759811115 * AcceptedCmp40
536325    +          +    -0.04684336742413 * AcceptedCmp50  +     0.04628503093017 *
536326    +        Complain0  +     -0.0274690420199 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.22559016468364 * AcceptedCmp10 + 0.05833377673707 * 
AcceptedCmp20 + -0.03636700985548 * AcceptedCmp30 + -0.25569759811115 * AcceptedCmp40 + 
-0.04684336742413 * AcceptedCmp50 + 0.04628503093017 * Complain0 + -0.0274690420199 * 
HigherEducationBinary0 ;
536327    +   H14  = H14  +    -0.32760772054296 * AcceptedCmp10
536328    +          +      -0.115974524782 * AcceptedCmp20  +     0.17243389922886 *
536329    +        AcceptedCmp30  +      0.2619520865817 * AcceptedCmp40
536330    +          +    -0.10340137441821 * AcceptedCmp50  +     0.07381382988108 *
536331    +        Complain0  +    -0.02819765040354 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32760772054296 * AcceptedCmp10 + -0.115974524782 * 
AcceptedCmp20 + 0.17243389922886 * AcceptedCmp30 + 0.2619520865817 * AcceptedCmp40 + 
-0.10340137441821 * AcceptedCmp50 + 0.07381382988108 * Complain0 + -0.02819765040354 * 
HigherEducationBinary0 ;
536332    +   H15  = H15  +    -0.26084605443779 * AcceptedCmp10
536333    +          +    -0.16387661015452 * AcceptedCmp20  +    -0.16566201323403 *
536334    +        AcceptedCmp30  +    -0.35263428487299 * AcceptedCmp40
536335    +          +    -0.32839719627655 * AcceptedCmp50  +     0.02360464331322 *
536336    +        Complain0  +    -0.27283273238131 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.26084605443779 * AcceptedCmp10 + -0.16387661015452 * 
AcceptedCmp20 + -0.16566201323403 * AcceptedCmp30 + -0.35263428487299 * AcceptedCmp40 + 
-0.32839719627655 * AcceptedCmp50 + 0.02360464331322 * Complain0 + -0.27283273238131 * 
HigherEducationBinary0 ;
536337    +   H16  = H16  +     0.01304183242542 * AcceptedCmp10
536338    +          +     0.04566997893346 * AcceptedCmp20  +    -0.04050514571317 *
536339    +        AcceptedCmp30  +    -0.01620566973366 * AcceptedCmp40
536340    +          +    -0.07167046817245 * AcceptedCmp50  +    -0.06511918231577 *
536341    +        Complain0  +     0.23270681066978 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.01304183242542 * AcceptedCmp10 + 0.04566997893346 * 
AcceptedCmp20 + -0.04050514571317 * AcceptedCmp30 + -0.01620566973366 * AcceptedCmp40 + 
-0.07167046817245 * AcceptedCmp50 + -0.06511918231577 * Complain0 + 0.23270681066978 * 
HigherEducationBinary0 ;
536342    +   H17  = H17  +     0.01260470527699 * AcceptedCmp10
536343    +          +    -0.16882003264299 * AcceptedCmp20  +    -0.27439169721218 *
536344    +        AcceptedCmp30  +    -0.26741927505062 * AcceptedCmp40
536345    +          +    -0.13327257255598 * AcceptedCmp50  +     -0.1392453082395 *
536346    +        Complain0  +     0.31998419104809 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.01260470527699 * AcceptedCmp10 + -0.16882003264299 * 
AcceptedCmp20 + -0.27439169721218 * AcceptedCmp30 + -0.26741927505062 * AcceptedCmp40 + 
-0.13327257255598 * AcceptedCmp50 + -0.1392453082395 * Complain0 + 0.31998419104809 * 
HigherEducationBinary0 ;
536347    +   H11  = H11  +     0.06102738975935 * Education2n_Cycle
536348    +          +     0.28943057977991 * EducationBasic  +     0.30966749770345 *
536349    +        EducationGraduation  +     0.02445863067232 * EducationMaster
536350    +          +     0.42984001630756 * Marital_StatusDivorced
536351    +          +     -0.4660144877239 * Marital_StatusMarried
536352    +          +     0.44888148801285 * Marital_StatusSingle
536353    +          +    -0.35337765969826 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.06102738975935 * Education2n_Cycle + 0.28943057977991 * 
EducationBasic + 0.30966749770345 * EducationGraduation + 0.02445863067232 * EducationMaster + 
0.42984001630756 * Marital_StatusDivorced + -0.4660144877239 * Marital_StatusMarried + 
0.44888148801285 * Marital_StatusSingle + -0.35337765969826 * Marital_StatusTogether ;
536354    +   H12  = H12  +    -0.14873776047169 * Education2n_Cycle
536355    +          +     0.02114476645887 * EducationBasic  +    -0.06983582232977 *
536356    +        EducationGraduation  +     0.28773168978233 * EducationMaster
536357    +          +     0.10758942571981 * Marital_StatusDivorced
536358    +          +     0.51795960036213 * Marital_StatusMarried
536359    +          +    -0.40242992087783 * Marital_StatusSingle
536360    +          +     0.59638712724774 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.14873776047169 * Education2n_Cycle + 0.02114476645887 * 
EducationBasic + -0.06983582232977 * EducationGraduation + 0.28773168978233 * EducationMaster 
+ 0.10758942571981 * Marital_StatusDivorced + 0.51795960036213 * Marital_StatusMarried + 
-0.40242992087783 * Marital_StatusSingle + 0.59638712724774 * Marital_StatusTogether ;
536361    +   H13  = H13  +     0.07261326268026 * Education2n_Cycle
536362    +          +     0.22828601903683 * EducationBasic  +    -0.09808260614396 *
536363    +        EducationGraduation  +      0.1986661885803 * EducationMaster
536364    +          +    -0.05264595890678 * Marital_StatusDivorced
536365    +          +     0.07468414180829 * Marital_StatusMarried
536366    +          +     0.20145352309024 * Marital_StatusSingle
536367    +          +     0.21800692249317 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.07261326268026 * Education2n_Cycle + 0.22828601903683 * 
EducationBasic + -0.09808260614396 * EducationGraduation + 0.1986661885803 * EducationMaster + 
-0.05264595890678 * Marital_StatusDivorced + 0.07468414180829 * Marital_StatusMarried + 
0.20145352309024 * Marital_StatusSingle + 0.21800692249317 * Marital_StatusTogether ;
536368    +   H14  = H14  +    -0.16591436756181 * Education2n_Cycle
536369    +          +     0.10944605668626 * EducationBasic  +    -0.04736510771915 *
536370    +        EducationGraduation  +     0.28768591072195 * EducationMaster
536371    +          +    -0.41440932029593 * Marital_StatusDivorced
536372    +          +     0.65630698363184 * Marital_StatusMarried
536373    +          +    -0.37277384861759 * Marital_StatusSingle
536374    +          +     0.66742239790358 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16591436756181 * Education2n_Cycle + 0.10944605668626 * 
EducationBasic + -0.04736510771915 * EducationGraduation + 0.28768591072195 * EducationMaster 
+ -0.41440932029593 * Marital_StatusDivorced + 0.65630698363184 * Marital_StatusMarried + 
-0.37277384861759 * Marital_StatusSingle + 0.66742239790358 * Marital_StatusTogether ;
536375    +   H15  = H15  +     0.14874986561786 * Education2n_Cycle
536376    +          +    -0.26075650045962 * EducationBasic  +     0.31386399943318 *
536377    +        EducationGraduation  +    -0.19252087246622 * EducationMaster
536378    +          +     0.86284304352233 * Marital_StatusDivorced
536379    +          +    -0.85716490342524 * Marital_StatusMarried
536380    +          +     0.74516572826411 * Marital_StatusSingle
536381    +          +    -0.94596838391348 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.14874986561786 * Education2n_Cycle + -0.26075650045962 * 
EducationBasic + 0.31386399943318 * EducationGraduation + -0.19252087246622 * EducationMaster 
+ 0.86284304352233 * Marital_StatusDivorced + -0.85716490342524 * Marital_StatusMarried + 
0.74516572826411 * Marital_StatusSingle + -0.94596838391348 * Marital_StatusTogether ;
536382    +   H16  = H16  +     0.05955306560033 * Education2n_Cycle
536383    +          +    -0.33179362702455 * EducationBasic  +    -0.11577784652643 *
536384    +        EducationGraduation  +    -0.12481149416801 * EducationMaster
536385    +          +    -0.11928801837478 * Marital_StatusDivorced
536386    +          +    -0.15909233409421 * Marital_StatusMarried
536387    +          +     0.34325131781601 * Marital_StatusSingle
536388    +          +    -0.10826134118683 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.05955306560033 * Education2n_Cycle + -0.33179362702455 * 
EducationBasic + -0.11577784652643 * EducationGraduation + -0.12481149416801 * EducationMaster 
+ -0.11928801837478 * Marital_StatusDivorced + -0.15909233409421 * Marital_StatusMarried + 
0.34325131781601 * Marital_StatusSingle + -0.10826134118683 * Marital_StatusTogether ;
536389    +   H17  = H17  +      0.0153077476724 * Education2n_Cycle
536390    +          +    -0.21261765604905 * EducationBasic  +    -0.12217248919773 *
536391    +        EducationGraduation  +    -0.08573366282988 * EducationMaster
536392    +          +     0.15109481730803 * Marital_StatusDivorced
536393    +          +    -1.01578758379559 * Marital_StatusMarried
536394    +          +     0.70421923836193 * Marital_StatusSingle
536395    +          +    -0.63730370729331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.0153077476724 * Education2n_Cycle + -0.21261765604905 * 
EducationBasic + -0.12217248919773 * EducationGraduation + -0.08573366282988 * EducationMaster 
+ 0.15109481730803 * Marital_StatusDivorced + -1.01578758379559 * Marital_StatusMarried + 
0.70421923836193 * Marital_StatusSingle + -0.63730370729331 * Marital_StatusTogether ;
536396    +   H11  =     0.02509750258391 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.02509750258391 + H11 ;
536397    +   H12  =    -0.58342149790654 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58342149790654 + H12 ;
536398    +   H13  =    -1.03881761031374 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.03881761031374 + H13 ;
536399    +   H14  =     0.84311700438452 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84311700438452 + H14 ;
536400    +   H15  =    -0.42140887324666 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.42140887324666 + H15 ;
536401    +   H16  =    -1.77342637643401 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.77342637643401 + H16 ;
536402    +   H17  =    -1.60862695180721 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.60862695180721 + H17 ;
536403    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
536404    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
536405    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
536406    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
536407    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
536408    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
536409    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
536410    +END;
MPRINT(EM_DIAGRAM):   END;
536411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
536412    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
536413    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
536414    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
536415    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
536416    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
536417    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
536418    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
536419    +END;
MPRINT(EM_DIAGRAM):   END;
536420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536421    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
536422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536423    +
536424    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
536425    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
536426    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
536427    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
536428    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
536429    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
536430    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
536431    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
536432    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
536433    +end;
MPRINT(EM_DIAGRAM):   end;
536434    +else do;
MPRINT(EM_DIAGRAM):   else do;
536435    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
536436    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
536437    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
536438    +   end;
MPRINT(EM_DIAGRAM):   end;
536439    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
536440    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
536441    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
536442    +   end;
MPRINT(EM_DIAGRAM):   end;
536443    +   else do;
MPRINT(EM_DIAGRAM):   else do;
536444    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
536445    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
536446    +   end;
MPRINT(EM_DIAGRAM):   end;
536447    +end;
MPRINT(EM_DIAGRAM):   end;
536448    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
536449    +   P_DepVar1  =    -1.59177479560764 * H11  +    -1.61754897134463 * H12
536450    +          +     0.34365500815599 * H13  +     3.22562781339883 * H14
536451    +          +     3.60138310710336 * H15  +     0.57380881905142 * H16
536452    +          +     2.14937033273881 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.59177479560764 * H11 + -1.61754897134463 * H12 + 
0.34365500815599 * H13 + 3.22562781339883 * H14 + 3.60138310710336 * H15 + 0.57380881905142 * 
H16 + 2.14937033273881 * H17 ;
536453    +   P_DepVar1  =      -2.174490498324 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.174490498324 + P_DepVar1 ;
536454    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
536455    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
536456    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
536457    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
536458    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
536459    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
536460    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
536461    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
536462    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
536463    +END;
MPRINT(EM_DIAGRAM):   END;
536464    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
536465    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
536466    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
536467    +END;
MPRINT(EM_DIAGRAM):   END;
536468    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
536469    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
536470    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
536471    +END;
MPRINT(EM_DIAGRAM):   END;
536472    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
536473    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
536474    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
536475    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
536476    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
536477    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
536478    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
536479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536480    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
536481    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
536482    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
536483    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
536484    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
536485    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
536486    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
536487    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
536488    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
536489    +END;
MPRINT(EM_DIAGRAM):   END;
536490    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
536491    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
536492    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
536493    +drop
536494    +H11
536495    +H12
536496    +H13
536497    +H14
536498    +H15
536499    +H16
536500    +H17
536501    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
536502    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
536503     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
536504     quit;
536505     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
536506     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
536507     * Neural10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural10: Computing metadata for TRAIN data;
536508     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural10_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural10_TRAIN out=WORK.M31DV012 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31DV012;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M31DV012(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31DV012;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M31DV012;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M036RLDS NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M036RLDS;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M036RLDS;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M207JQLQ(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M036RLDS;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M036RLDS;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M036RLDS;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M036RLDS;
MPRINT(EMADVISECOLUMNS):   set WORK.M036RLDS;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
536820     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
536821     set EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO;
536822     where DATA='Neural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
536823     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL10_EMINFO.
      WHERE (DATA='Neural10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

536824     data EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural10_EMINFO;
536825     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
536826     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
536827     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
536831     run;
536832     data EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_EMINFO;
536833     set EMWS8.Neural10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural10_EMINFO WORK.MODELTEMP_INFO;
536834     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

536835     proc sort data = EMWS8.Neural10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural10_EMINFO NOTHREADS;
536836     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
536837     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: The data set EMWS8.NEURAL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

536838     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
536839     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
536840     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

536841     proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
536842     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
536843     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

536844     data EMWS8.Neural10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural10_EMINFO;
536845     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
536846     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
536847     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

536848     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
536849     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
536850     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
536851     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
