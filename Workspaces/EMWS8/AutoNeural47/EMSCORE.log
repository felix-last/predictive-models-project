MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.35 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                19.35 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3T9C4FP 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMSCORE.out" encoding="UTF-8" 
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3T9C4FP new;
MPRINT(EM_DIAGRAM):   run;
445612     filename emflow
445612   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural47: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
445613     *------------------------------------------------------------*;
445614     * AutoNeural47: Scoring DATA data;
445615     *------------------------------------------------------------*;
445616     data EMWS8.AutoNeural47_TRAIN
445617     / view=EMWS8.AutoNeural47_TRAIN
445618     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural47_TRAIN / view=EMWS8.AutoNeural47_TRAIN ;
445619     set EMWS8.Meta2_TRAIN
445620     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_TRAIN ;
445621     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMFLOWSCORE.sas.
445622    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
445623    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
445624    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
445625    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
445626    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
445627    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
445628    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
445629    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
445630    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
445631    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
445632    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
445633    +LENGTH _WARN_ $4
445634    +      F_DepVar  $ 12
445635    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
445636    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
445637    +
445638    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
445639    +
445640    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
445641    +
445642    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
445643    +
445644    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
445645    +
445646    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
445647    +
445648    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
445649    +
445650    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
445651    +
445652    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
445653    +
445654    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
445655    +
445656    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
445657    +
445658    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
445659    +
445660    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
445661    +
445662    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
445663    +
445664    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
445665    +
445666    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
445667    +
445668    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
445669    +
445670    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
445671    +
445672    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
445673    +
445674    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
445675    +
445676    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
445677    +
445678    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
445679    +
445680    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
445681    +
445682    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
445683    +
445684    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
445685    +
445686    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
445687    +
445688    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
445689    +
445690    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
445691    +
445692    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
445693    +
445694    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
445695    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
445696    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
445697    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
445698    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
445699    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
445700    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
445701    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
445702    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
445703    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
445704    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
445705    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
445706    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
445707    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
445708    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445709    +end;
MPRINT(EM_DIAGRAM):   end;
445710    +else do;
MPRINT(EM_DIAGRAM):   else do;
445711    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
445712    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
445713    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445714    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
445715    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
445716    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
445717    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
445718    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
445719    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445720    +         end;
MPRINT(EM_DIAGRAM):   end;
445721    +         else do;
MPRINT(EM_DIAGRAM):   else do;
445722    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
445723    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
445724    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445725    +            end;
MPRINT(EM_DIAGRAM):   end;
445726    +         end;
MPRINT(EM_DIAGRAM):   end;
445727    +      end;
MPRINT(EM_DIAGRAM):   end;
445728    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445729    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
445730    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
445731    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445732    +         end;
MPRINT(EM_DIAGRAM):   end;
445733    +      end;
MPRINT(EM_DIAGRAM):   end;
445734    +   end;
MPRINT(EM_DIAGRAM):   end;
445735    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445736    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
445737    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
445738    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445739    +      end;
MPRINT(EM_DIAGRAM):   end;
445740    +      else do;
MPRINT(EM_DIAGRAM):   else do;
445741    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
445742    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
445743    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
445744    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
445745    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
445746    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
445747    +         end;
MPRINT(EM_DIAGRAM):   end;
445748    +      end;
MPRINT(EM_DIAGRAM):   end;
445749    +   end;
MPRINT(EM_DIAGRAM):   end;
445750    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
445751    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
445752    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
445753    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
445754    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
445755    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
445756    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445757    +   end;
MPRINT(EM_DIAGRAM):   end;
445758    +end;
MPRINT(EM_DIAGRAM):   end;
445759    +
445760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445761    +*** Checking missing input Interval
445762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
445763    +
445764    +IF NMISS(
445765    +   AcceptedCmpTotal ,
445766    +   Frq ,
445767    +   Income ,
445768    +   Mnt ,
445769    +   MntGoldProds ,
445770    +   MntMeatProducts ,
445771    +   NumCatalogPurchases ,
445772    +   NumDealsPurchases ,
445773    +   NumWebVisitsMonth ,
445774    +   RFMstat ,
445775    +   Recency ,
445776    +   Teenhome ,
445777    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
445778    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
445779    +
445780    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
445781    +END;
MPRINT(EM_DIAGRAM):   END;
445782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445783    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
445784    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445785    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445786    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
445787    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
445788    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
445789    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
445790    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
445791    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
445792    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
445793    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
445794    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
445795    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
445796    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
445797    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
445798    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
445799    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
445800    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
445801    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
445802    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
445803    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
445804    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
445805    +END;
MPRINT(EM_DIAGRAM):   END;
445806    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445807    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
445808    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
445809    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
445810    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
445811    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
445812    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
445813    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
445814    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
445815    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
445816    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
445817    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
445818    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
445819    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
445820    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
445821    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
445822    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
445823    +   ELSE S_NumCatalogPurchases
445824    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
445825    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
445826    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
445827    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
445828    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
445829    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
445830    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
445831    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
445832    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
445833    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
445834    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
445835    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
445836    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
445837    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
445838    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
445839    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
445840    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
445841    +END;
MPRINT(EM_DIAGRAM):   END;
445842    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445843    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
445844    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445846    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
445847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445848    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445849    +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
445850    +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
445851    +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
445852    +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
445853    +          +     0.96941096546276 * S_NumCatalogPurchases
445854    +          +    -0.78169009272221 * S_NumDealsPurchases
445855    +          +     2.46694552614806 * S_NumWebVisitsMonth
445856    +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
445857    +        S_Recency  +    -1.09760548427625 * S_Teenhome
445858    +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 * 
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 * 
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 * 
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 * 
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency + 
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
445859    +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
445860    +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
445861    +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
445862    +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
445863    +          +    -2.01779739147185 * S_NumCatalogPurchases
445864    +          +     -2.6507470301089 * S_NumDealsPurchases
445865    +          +     0.43757499676531 * S_NumWebVisitsMonth
445866    +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
445867    +        S_Recency  +    -0.45321912120397 * S_Teenhome
445868    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 * 
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 * 
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 * 
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 * 
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency + 
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
445869    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
445870    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
445871    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
445872    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
445873    +          +      3.9474982958259 * S_NumCatalogPurchases
445874    +          +       0.376468804707 * S_NumDealsPurchases
445875    +          +     3.31501013882439 * S_NumWebVisitsMonth
445876    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
445877    +        S_Recency  +    -1.57729700618019 * S_Teenhome
445878    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 * 
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 * 
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 * 
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 * 
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency + 
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
445879    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
445880    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
445881    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
445882    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
445883    +          +    -1.47064436222345 * S_NumCatalogPurchases
445884    +          +    -0.47773085529503 * S_NumDealsPurchases
445885    +          +     0.20028656323595 * S_NumWebVisitsMonth
445886    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
445887    +        S_Recency  +    -0.11530372179295 * S_Teenhome
445888    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 * 
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 * 
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 * 
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 * 
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency + 
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
445889    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
445890    +          +    -1.68634246986018 * Marital_StatusMarried
445891    +          +     0.61674763327859 * Marital_StatusSingle
445892    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced + 
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle + 
-1.26649958570453 * Marital_StatusTogether ;
445893    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
445894    +          +    -0.63821523628652 * Marital_StatusMarried
445895    +          +    -1.40431603473643 * Marital_StatusSingle
445896    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced + 
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle + 
-0.20849152262706 * Marital_StatusTogether ;
445897    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
445898    +          +    -2.86773035723606 * Marital_StatusMarried
445899    +          +     2.52900517550184 * Marital_StatusSingle
445900    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced + 
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle + 
-3.34343954102751 * Marital_StatusTogether ;
445901    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
445902    +          +    -0.89880425714459 * Marital_StatusMarried
445903    +          +     0.97652284934456 * Marital_StatusSingle
445904    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced + 
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle + 
-0.83414241747679 * Marital_StatusTogether ;
445905    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
445906    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
445907    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
445908    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
445909    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
445910    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
445911    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
445912    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
445913    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
445914    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
445915    +END;
MPRINT(EM_DIAGRAM):   END;
445916    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445917    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
445918    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
445919    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
445920    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
445921    +END;
MPRINT(EM_DIAGRAM):   END;
445922    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445923    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
445924    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445925    +
445926    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
445927    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
445928    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
445929    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
445930    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
445931    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
445932    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
445933    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
445934    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
445935    +end;
MPRINT(EM_DIAGRAM):   end;
445936    +else do;
MPRINT(EM_DIAGRAM):   else do;
445937    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
445938    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
445939    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
445940    +   end;
MPRINT(EM_DIAGRAM):   end;
445941    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
445942    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
445943    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
445944    +   end;
MPRINT(EM_DIAGRAM):   end;
445945    +   else do;
MPRINT(EM_DIAGRAM):   else do;
445946    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
445947    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
445948    +   end;
MPRINT(EM_DIAGRAM):   end;
445949    +end;
MPRINT(EM_DIAGRAM):   end;
445950    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
445951    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
445952    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 + 
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
445953    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
445954    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
445955    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
445956    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
445957    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
445958    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
445959    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
445960    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
445961    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
445962    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
445963    +END;
MPRINT(EM_DIAGRAM):   END;
445964    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
445965    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
445966    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
445967    +END;
MPRINT(EM_DIAGRAM):   END;
445968    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
445969    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
445970    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
445971    +END;
MPRINT(EM_DIAGRAM):   END;
445972    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
445973    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
445974    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
445975    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
445976    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
445977    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
445978    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
445979    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445980    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
445981    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
445982    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
445983    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
445984    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
445985    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
445986    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
445987    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
445988    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
445989    +END;
MPRINT(EM_DIAGRAM):   END;
445990    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
445991    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
445992    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
445993    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
445994     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL47_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
445995     quit;
445996     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
445997     filename emflow
445997   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural47: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
445998     *------------------------------------------------------------*;
445999     * AutoNeural47: Scoring VALIDATE data;
446000     *------------------------------------------------------------*;
446001     data EMWS8.AutoNeural47_VALIDATE
446002     / view=EMWS8.AutoNeural47_VALIDATE
446003     ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural47_VALIDATE / view=EMWS8.AutoNeural47_VALIDATE ;
446004     set EMWS8.Meta2_VALIDATE
446005     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta2_VALIDATE ;
446006     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\EMFLOWSCORE.sas.
446007    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
446008    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
446009    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
446010    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
446011    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
446012    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
446013    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
446014    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
446015    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
446016    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
446017    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
446018    +LENGTH _WARN_ $4
446019    +      F_DepVar  $ 12
446020    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
446021    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
446022    +
446023    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
446024    +
446025    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
446026    +
446027    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
446028    +
446029    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
446030    +
446031    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
446032    +
446033    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
446034    +
446035    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
446036    +
446037    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
446038    +
446039    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
446040    +
446041    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
446042    +
446043    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
446044    +
446045    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
446046    +
446047    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
446048    +
446049    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
446050    +
446051    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
446052    +
446053    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
446054    +
446055    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
446056    +
446057    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
446058    +
446059    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
446060    +
446061    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
446062    +
446063    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
446064    +
446065    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
446066    +
446067    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
446068    +
446069    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
446070    +
446071    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
446072    +
446073    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
446074    +
446075    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
446076    +
446077    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
446078    +
446079    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
446080    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
446081    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
446082    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
446083    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
446084    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
446085    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
446086    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
446087    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
446088    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
446089    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
446090    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
446091    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
446092    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
446093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446094    +end;
MPRINT(EM_DIAGRAM):   end;
446095    +else do;
MPRINT(EM_DIAGRAM):   else do;
446096    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
446097    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
446098    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446099    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
446100    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
446101    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
446102    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
446103    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
446104    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446105    +         end;
MPRINT(EM_DIAGRAM):   end;
446106    +         else do;
MPRINT(EM_DIAGRAM):   else do;
446107    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
446108    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
446109    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446110    +            end;
MPRINT(EM_DIAGRAM):   end;
446111    +         end;
MPRINT(EM_DIAGRAM):   end;
446112    +      end;
MPRINT(EM_DIAGRAM):   end;
446113    +      else do;
MPRINT(EM_DIAGRAM):   else do;
446114    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
446115    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
446116    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446117    +         end;
MPRINT(EM_DIAGRAM):   end;
446118    +      end;
MPRINT(EM_DIAGRAM):   end;
446119    +   end;
MPRINT(EM_DIAGRAM):   end;
446120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446121    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
446122    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
446123    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446124    +      end;
MPRINT(EM_DIAGRAM):   end;
446125    +      else do;
MPRINT(EM_DIAGRAM):   else do;
446126    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
446127    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
446128    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
446129    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
446130    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
446131    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
446132    +         end;
MPRINT(EM_DIAGRAM):   end;
446133    +      end;
MPRINT(EM_DIAGRAM):   end;
446134    +   end;
MPRINT(EM_DIAGRAM):   end;
446135    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
446136    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
446137    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
446138    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
446139    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
446140    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
446141    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446142    +   end;
MPRINT(EM_DIAGRAM):   end;
446143    +end;
MPRINT(EM_DIAGRAM):   end;
446144    +
446145    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446146    +*** Checking missing input Interval
446147    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
446148    +
446149    +IF NMISS(
446150    +   AcceptedCmpTotal ,
446151    +   Frq ,
446152    +   Income ,
446153    +   Mnt ,
446154    +   MntGoldProds ,
446155    +   MntMeatProducts ,
446156    +   NumCatalogPurchases ,
446157    +   NumDealsPurchases ,
446158    +   NumWebVisitsMonth ,
446159    +   RFMstat ,
446160    +   Recency ,
446161    +   Teenhome ,
446162    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds , 
MntMeatProducts , NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , RFMstat , 
Recency , Teenhome , Year_Birth ) THEN DO;
446163    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
446164    +
446165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
446166    +END;
MPRINT(EM_DIAGRAM):   END;
446167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446168    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
446169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446170    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
446171    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
446172    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
446173    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
446174    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
446175    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
446176    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
446177    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
446178    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
446179    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
446180    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
446181    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
446182    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
446183    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
446184    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
446185    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
446186    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
446187    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
446188    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
446189    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
446190    +END;
MPRINT(EM_DIAGRAM):   END;
446191    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
446192    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
446193    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
446194    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
446195    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
446196    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
446197    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
446198    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
446199    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
446200    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
446201    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
446202    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
446203    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
446204    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
446205    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
446206    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
446207    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
446208    +   ELSE S_NumCatalogPurchases
446209    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
446210    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
446211    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
446212    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
446213    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
446214    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
446215    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
446216    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
446217    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
446218    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
446219    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
446220    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
446221    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
446222    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
446223    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
446224    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
446225    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
446226    +END;
MPRINT(EM_DIAGRAM):   END;
446227    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446228    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
446229    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446231    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
446232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446233    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
446234    +   H1x1_1  =      1.3507655650527 * S_AcceptedCmpTotal
446235    +          +    -1.10614122240879 * S_Frq  +     1.75303764660855 * S_Income
446236    +          +    -3.36358487853209 * S_Mnt  +     0.66482370197508 *
446237    +        S_MntGoldProds  +     2.20380795880989 * S_MntMeatProducts
446238    +          +     0.96941096546276 * S_NumCatalogPurchases
446239    +          +    -0.78169009272221 * S_NumDealsPurchases
446240    +          +     2.46694552614806 * S_NumWebVisitsMonth
446241    +          +    -0.70379796230966 * S_RFMstat  +    -2.91060571548081 *
446242    +        S_Recency  +    -1.09760548427625 * S_Teenhome
446243    +          +    -0.04996948842393 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.3507655650527 * S_AcceptedCmpTotal + -1.10614122240879 * 
S_Frq + 1.75303764660855 * S_Income + -3.36358487853209 * S_Mnt + 0.66482370197508 * 
S_MntGoldProds + 2.20380795880989 * S_MntMeatProducts + 0.96941096546276 * 
S_NumCatalogPurchases + -0.78169009272221 * S_NumDealsPurchases + 2.46694552614806 * 
S_NumWebVisitsMonth + -0.70379796230966 * S_RFMstat + -2.91060571548081 * S_Recency + 
-1.09760548427625 * S_Teenhome + -0.04996948842393 * S_Year_Birth ;
446244    +   H1x1_2  =    -0.31908942522077 * S_AcceptedCmpTotal
446245    +          +     3.74791296051726 * S_Frq  +     2.24284839751303 * S_Income
446246    +          +    -1.78405040388815 * S_Mnt  +      0.8742942749026 *
446247    +        S_MntGoldProds  +    -0.14368654003355 * S_MntMeatProducts
446248    +          +    -2.01779739147185 * S_NumCatalogPurchases
446249    +          +     -2.6507470301089 * S_NumDealsPurchases
446250    +          +     0.43757499676531 * S_NumWebVisitsMonth
446251    +          +    -1.37847156147455 * S_RFMstat  +    -0.69576523519337 *
446252    +        S_Recency  +    -0.45321912120397 * S_Teenhome
446253    +          +     0.52676912620048 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.31908942522077 * S_AcceptedCmpTotal + 3.74791296051726 * 
S_Frq + 2.24284839751303 * S_Income + -1.78405040388815 * S_Mnt + 0.8742942749026 * 
S_MntGoldProds + -0.14368654003355 * S_MntMeatProducts + -2.01779739147185 * 
S_NumCatalogPurchases + -2.6507470301089 * S_NumDealsPurchases + 0.43757499676531 * 
S_NumWebVisitsMonth + -1.37847156147455 * S_RFMstat + -0.69576523519337 * S_Recency + 
-0.45321912120397 * S_Teenhome + 0.52676912620048 * S_Year_Birth ;
446254    +   H1x1_3  =     2.41023196591392 * S_AcceptedCmpTotal
446255    +          +    -2.36084733932675 * S_Frq  +     1.24213632619464 * S_Income
446256    +          +    -1.85110475917758 * S_Mnt  +    -0.28004157450889 *
446257    +        S_MntGoldProds  +     2.40469717841771 * S_MntMeatProducts
446258    +          +      3.9474982958259 * S_NumCatalogPurchases
446259    +          +       0.376468804707 * S_NumDealsPurchases
446260    +          +     3.31501013882439 * S_NumWebVisitsMonth
446261    +          +     0.11559780336909 * S_RFMstat  +    -4.25267693921008 *
446262    +        S_Recency  +    -1.57729700618019 * S_Teenhome
446263    +          +      0.1824973506119 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.41023196591392 * S_AcceptedCmpTotal + -2.36084733932675 * 
S_Frq + 1.24213632619464 * S_Income + -1.85110475917758 * S_Mnt + -0.28004157450889 * 
S_MntGoldProds + 2.40469717841771 * S_MntMeatProducts + 3.9474982958259 * 
S_NumCatalogPurchases + 0.376468804707 * S_NumDealsPurchases + 3.31501013882439 * 
S_NumWebVisitsMonth + 0.11559780336909 * S_RFMstat + -4.25267693921008 * S_Recency + 
-1.57729700618019 * S_Teenhome + 0.1824973506119 * S_Year_Birth ;
446264    +   H1x1_4  =     -0.2757766975278 * S_AcceptedCmpTotal
446265    +          +     3.82725387338192 * S_Frq  +      -0.761164420496 * S_Income
446266    +          +    -1.14207863171921 * S_Mnt  +     -0.1745335405903 *
446267    +        S_MntGoldProds  +    -5.79657274001258 * S_MntMeatProducts
446268    +          +    -1.47064436222345 * S_NumCatalogPurchases
446269    +          +    -0.47773085529503 * S_NumDealsPurchases
446270    +          +     0.20028656323595 * S_NumWebVisitsMonth
446271    +          +    -0.18383173425255 * S_RFMstat  +     0.10522454853137 *
446272    +        S_Recency  +    -0.11530372179295 * S_Teenhome
446273    +          +    -0.34167488644648 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.2757766975278 * S_AcceptedCmpTotal + 3.82725387338192 * 
S_Frq + -0.761164420496 * S_Income + -1.14207863171921 * S_Mnt + -0.1745335405903 * 
S_MntGoldProds + -5.79657274001258 * S_MntMeatProducts + -1.47064436222345 * 
S_NumCatalogPurchases + -0.47773085529503 * S_NumDealsPurchases + 0.20028656323595 * 
S_NumWebVisitsMonth + -0.18383173425255 * S_RFMstat + 0.10522454853137 * S_Recency + 
-0.11530372179295 * S_Teenhome + -0.34167488644648 * S_Year_Birth ;
446274    +   H1x1_1  = H1x1_1  +     1.48263364530339 * Marital_StatusDivorced
446275    +          +    -1.68634246986018 * Marital_StatusMarried
446276    +          +     0.61674763327859 * Marital_StatusSingle
446277    +          +    -1.26649958570453 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.48263364530339 * Marital_StatusDivorced + 
-1.68634246986018 * Marital_StatusMarried + 0.61674763327859 * Marital_StatusSingle + 
-1.26649958570453 * Marital_StatusTogether ;
446278    +   H1x1_2  = H1x1_2  +     1.03937964147637 * Marital_StatusDivorced
446279    +          +    -0.63821523628652 * Marital_StatusMarried
446280    +          +    -1.40431603473643 * Marital_StatusSingle
446281    +          +    -0.20849152262706 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.03937964147637 * Marital_StatusDivorced + 
-0.63821523628652 * Marital_StatusMarried + -1.40431603473643 * Marital_StatusSingle + 
-0.20849152262706 * Marital_StatusTogether ;
446282    +   H1x1_3  = H1x1_3  +    -0.00632006555267 * Marital_StatusDivorced
446283    +          +    -2.86773035723606 * Marital_StatusMarried
446284    +          +     2.52900517550184 * Marital_StatusSingle
446285    +          +    -3.34343954102751 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.00632006555267 * Marital_StatusDivorced + 
-2.86773035723606 * Marital_StatusMarried + 2.52900517550184 * Marital_StatusSingle + 
-3.34343954102751 * Marital_StatusTogether ;
446286    +   H1x1_4  = H1x1_4  +     0.05620673245628 * Marital_StatusDivorced
446287    +          +    -0.89880425714459 * Marital_StatusMarried
446288    +          +     0.97652284934456 * Marital_StatusSingle
446289    +          +    -0.83414241747679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.05620673245628 * Marital_StatusDivorced + 
-0.89880425714459 * Marital_StatusMarried + 0.97652284934456 * Marital_StatusSingle + 
-0.83414241747679 * Marital_StatusTogether ;
446290    +   H1x1_1  =    -0.73505942586437 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.73505942586437 + H1x1_1 ;
446291    +   H1x1_2  =     2.97401194500651 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.97401194500651 + H1x1_2 ;
446292    +   H1x1_3  =    -7.86049995366383 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -7.86049995366383 + H1x1_3 ;
446293    +   H1x1_4  =    -3.77808914097545 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.77808914097545 + H1x1_4 ;
446294    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
446295    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
446296    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
446297    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
446298    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
446299    +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
446300    +END;
MPRINT(EM_DIAGRAM):   END;
446301    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
446302    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
446303    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
446304    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
446305    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
446306    +END;
MPRINT(EM_DIAGRAM):   END;
446307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446308    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
446309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446310    +
446311    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
446312    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
446313    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
446314    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
446315    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
446316    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
446317    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
446318    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
446319    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
446320    +end;
MPRINT(EM_DIAGRAM):   end;
446321    +else do;
MPRINT(EM_DIAGRAM):   else do;
446322    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
446323    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
446324    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
446325    +   end;
MPRINT(EM_DIAGRAM):   end;
446326    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
446327    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
446328    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
446329    +   end;
MPRINT(EM_DIAGRAM):   end;
446330    +   else do;
MPRINT(EM_DIAGRAM):   else do;
446331    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
446332    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
446333    +   end;
MPRINT(EM_DIAGRAM):   end;
446334    +end;
MPRINT(EM_DIAGRAM):   end;
446335    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
446336    +   P_DepVar1  =     17.1091261255058 * H1x1_1  +    -15.4649724088409 * H1x1_2
446337    +          +     14.2519883476498 * H1x1_3  +    -25.0940711325771 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 17.1091261255058 * H1x1_1 + -15.4649724088409 * H1x1_2 + 
14.2519883476498 * H1x1_3 + -25.0940711325771 * H1x1_4 ;
446338    +   P_DepVar1  =     -0.7898064443713 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.7898064443713 + P_DepVar1 ;
446339    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
446340    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
446341    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
446342    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
446343    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
446344    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
446345    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
446346    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
446347    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
446348    +END;
MPRINT(EM_DIAGRAM):   END;
446349    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
446350    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
446351    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
446352    +END;
MPRINT(EM_DIAGRAM):   END;
446353    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
446354    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
446355    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
446356    +END;
MPRINT(EM_DIAGRAM):   END;
446357    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
446358    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
446359    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
446360    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
446361    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
446362    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
446363    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
446364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446365    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
446366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
446367    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
446368    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
446369    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
446370    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
446371    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
446372    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
446373    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
446374    +END;
MPRINT(EM_DIAGRAM):   END;
446375    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
446376    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
446377    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
446378    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
446379     run;

NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL47_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META2_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
446380     quit;
446381     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
446382     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
446383     * AutoNeural47: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural47: Computing metadata for TRAIN data;
446384     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.AUTONEURAL47_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural47\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural47_TRAIN out=_tempAdvisor 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural47_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural47_TRAIN out=WORK.M3O0FQXH 
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3O0FQXH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3O0FQXH(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3O0FQXH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3O0FQXH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0C6_VCS NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0C6_VCS;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C6_VCS;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0M28WQY(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C6_VCS;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0C6_VCS;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C6_VCS;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0C6_VCS;
MPRINT(EMADVISECOLUMNS):   set WORK.M0C6_VCS;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta2_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta2_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural47_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural47";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural47";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural47: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
446696     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
446697     set EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO;
446698     where DATA='AutoNeural47' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural47' and KEY ^in('DECDATA', 'DECMETA', 
'IMPORTANCE', 'MODEL');
446699     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
      WHERE (DATA='AutoNeural47') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446700     data EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural47_EMINFO;
446701     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
446702     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
446703     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.AUTONEURAL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
446707     run;
446708     data EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural47_EMINFO;
446709     set EMWS8.AutoNeural47_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural47_EMINFO WORK.MODELTEMP_INFO;
446710     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL47_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446711     proc sort data = EMWS8.AutoNeural47_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural47_EMINFO NOTHREADS;
446712     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446713     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL47_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446714     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
446715     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446716     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

446717     proc sort data = EMWS8.AutoNeural47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural47_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
446718     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446719     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL47_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446720     data EMWS8.AutoNeural47_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural47_EMINFO;
446721     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
446722     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
446723     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL47_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

446724     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
446725     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
446726     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
446727     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.AUTONEURAL47_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.AUTONEURAL47_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
