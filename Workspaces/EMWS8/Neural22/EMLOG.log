*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.42 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.41 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0S962R0
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0S962R0 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.41 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
988252     proc freq data=EMWS8.Neural22_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Neural22_VariableSet noprint;
988253     table ROLE*LEVEL/out=WORK.Neural22META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Neural22META;
988254     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK.NEURAL22META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
988255     proc print data=WORK.Neural22META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural22META label noobs;
988256     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
988257     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
988257   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
988257   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
988258     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
988259     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
988260     run;
 
NOTE: There were 6 observations read from the data set WORK.NEURAL22META.
NOTE: The PROCEDURE PRINT printed page 698.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
988261     title10;
MPRINT(EM_DIAGRAM):   title10;
988262     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.Neural22_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_DepVar_DD
out=EMWS8.Neural22_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
988309     data WORK.Neural22_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural22_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
988310     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
988311     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
988311   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
988311   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
988312        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
988312   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
988312   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
988313     set EMWS8.NEURAL22_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL22_DEPVAR_DM( where=(_TYPE_="TARGET"));
988314     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
988315     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
988316     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
988317     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
988318     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
988319     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
988320     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
988321     end;
MPRINT(EM_DIAGRAM):   end;
988322     output;
MPRINT(EM_DIAGRAM):   output;
988323     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL22_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL22_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
988324     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
988325     proc print data=WORK.Neural22_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural22_EVENT noobs label;
988326     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
988327     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
988328     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
988329     run;
 
NOTE: There were 1 observations read from the data set WORK.NEURAL22_EVENT.
NOTE: The PROCEDURE PRINT printed page 699.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988330     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
988331     proc print data = EMWS8.Neural22_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural22_DepVar_DM noobs label;
988332     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
988333     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
988334     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
988334   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
988334   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
988335     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
988336     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
988337     run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL22_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 700.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
988338     title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural22: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M16I38KF;
MPRINT(EM_DIAGRAM):   set WORK.M16I38KF;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
988348     data WORK.M16I38KF;
MPRINT(EM_DIAGRAM):    data WORK.M16I38KF;
988349     set WORK.M16I38KF end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M16I38KF end=eof;
988350     output;
MPRINT(EM_DIAGRAM):   output;
988351     if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
988352     NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
988353     ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
988354     LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
988355     TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
988356     output;
MPRINT(EM_DIAGRAM):   output;
988357     end;
MPRINT(EM_DIAGRAM):   end;
988358     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M16I38KF.
NOTE: The data set WORK.M16I38KF has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.NEURAL22_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
988359     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
988360     * Neural22: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Neural22: Create decision matrix;
988361     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
988362     data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
988363       length   DepVar                           $  32
988364                COUNT                                8
988365                DATAPRIOR                            8
988366                TRAINPRIOR                           8
988367                DECPRIOR                             8
988368                DECISION1                            8
988369                DECISION2                            8
988370                ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
988371
988372       label    COUNT="Level Counts"
988373                DATAPRIOR="Data Proportions"
988374                TRAINPRIOR="Training Proportions"
988375                DECPRIOR="Decision Priors"
988376                DECISION1="1"
988377                DECISION2="0"
988378                ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
988379       format   COUNT 10.
988380                ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
988381     DepVar="1"; COUNT=359; DATAPRIOR=0.0643642072; TRAINPRIOR=0.15122156697556;
988381   ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.0643642072;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
988382     output;
MPRINT(EM_DIAGRAM):   output;
988383     DepVar="0"; COUNT=2015; DATAPRIOR=0.9356357928; TRAINPRIOR=0.84877843302443;
988383   ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.9356357928;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
988384     output;
MPRINT(EM_DIAGRAM):   output;
988385     ;
MPRINT(EM_DIAGRAM):   ;
988386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988387     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
988388     modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
988389     label DECISION1= '1';
988390     label DECISION2= '0';
988391     run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
988392     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
988393     data EM_Neural22;
MPRINT(EM_DIAGRAM):   data EM_Neural22;
988394     set EMWS8.BINNING_TRAIN(keep=
988395     DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
988396     GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
988397     GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
988398     GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5
GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds
GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases
GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
988399     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK.EM_NEURAL22 has 2374 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural22: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988400     *------------------------------------------------------------* ;
988401     * Neural22: DMDBClass Macro ;
988402     *------------------------------------------------------------* ;
988403     %macro DMDBClass;
988404         DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
988405        GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
988406        GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
988407        GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
988408        GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
988409     %mend DMDBClass;
988410     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988411     * Neural22: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Neural22: DMDBVar Macro ;
988412     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988413     %macro DMDBVar;
988414         Year_Birth
988415     %mend DMDBVar;
988416     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
988417     * Neural22: Create DMDB;
MPRINT(EM_DIAGRAM):   * Neural22: Create DMDB;
988418     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
988419     proc dmdb batch data=WORK.EM_Neural22
988420     dmdbcat=WORK.Neural22_DMDB
988421     maxlevel = 513
988422     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Neural22 dmdbcat=WORK.Neural22_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
988423     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
988424     var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
988425     target
988426     DepVar
988427     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
988428     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_NEURAL22.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
988429     quit;
988430     *--- end code ---*;
 
988431     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
988432     * Neural22: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Neural22: Interval Input Variables Macro ;
988433     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988434     %macro INTINPUTS;
988435         Year_Birth
988436     %mend INTINPUTS;
988437     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988438     * Neural22: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural22: Binary Inputs Macro ;
988439     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988440     %macro BININPUTS;
988441
988442     %mend BININPUTS;
988443     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988444     * Neural22: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural22: Nominal Inputs Macro ;
988445     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988446     %macro NOMINPUTS;
988447         GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
988448        GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
988449        GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
988450        GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
988451     %mend NOMINPUTS;
988452     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988453     * Neural22: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural22: Ordinal Inputs Macro ;
988454     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
988455     %macro ORDINPUTS;
988456
988457     %mend ORDINPUTS;
988458     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
988459     * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
988460     ;
MPRINT(EM_DIAGRAM):   ;
988461     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
988462     proc neural data=EM_Neural22 dmdbcat=WORK.Neural22_DMDB
988463     validdata = EMWS8.BINNING_VALIDATE
988464     random=12345
988465     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural22 dmdbcat=WORK.Neural22_DMDB validdata =
EMWS8.BINNING_VALIDATE random=12345 ;
988466     nloptions
988467     ;
MPRINT(EM_DIAGRAM):   nloptions ;
988468     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
988469     netopts
988470     decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
988471     input %INTINPUTS / level=interval id=intvl
MPRINT(INTINPUTS):   Year_Birth
988472     ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
MPRINT(EM_DIAGRAM):   input
988473     input %NOMINPUTS / level=nominal id=nom
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth
GRP_RFMstat GRP_RMntFrq GRP_Recency
988474     ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
988475     target DepVar / level=NOMINAL id=DepVar
988476     bias
988477     ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar bias ;
988478     arch MLP
988479     Hidden=5
988480     ;
MPRINT(EM_DIAGRAM):   arch MLP Hidden=5 ;
988481     Prelim 5 preiter=10
988482     pretime=3600
988483     Outest=EMWS8.Neural22_PRELIM_OUTEST
988484     ;
MPRINT(EM_DIAGRAM):   Prelim 5 preiter=10 pretime=3600 Outest=EMWS8.Neural22_PRELIM_OUTEST ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set EMWS8.NEURAL22_PRELIM_OUTEST has 11 observations and 666 variables.
988485     save network=EMWS8.Neural22_NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=EMWS8.Neural22_NETWORK.dm_neural;
NOTE: Entry EMWS8.NEURAL22_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS8.NEURAL22_NETWORK.DM_NEURAL has been closed.
988486     train Maxiter=50
988487     maxtime=14400
988488     Outest=EMWS8.Neural22_outest estiter=1
988489     Outfit=EMWS8.Neural22_OUTFIT
988490     ;
MPRINT(EM_DIAGRAM):   train Maxiter=50 maxtime=14400 Outest=EMWS8.Neural22_outest estiter=1
Outfit=EMWS8.Neural22_OUTFIT ;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set EMWS8.NEURAL22_OUTEST has 53 observations and 666 variables.
NOTE: The data set EMWS8.NEURAL22_OUTFIT has 104 observations and 36 variables.
988491     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL22 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           5.60 seconds
      cpu time            5.49 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed pages 701-704.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           5.61 seconds
      cpu time            5.49 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
988492     quit;
 
988493     proc sort data=EMWS8.Neural22_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL"))
988493   ! out=fit_Neural22;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural22_OUTFIT(where=(_iter_ ne . and
_NAME_="OVERALL")) out=fit_Neural22;
988494     by _VAVERR_;
MPRINT(EM_DIAGRAM):   by _VAVERR_;
988495     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.NEURAL22_OUTFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_NEURAL22 has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988496     %GLOBAL ITER;
988497     data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
988498     set fit_Neural22(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Neural22(obs=1);
988499     call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
988500     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_NEURAL22.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988501     data EMWS8.Neural22_INITIAL;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_INITIAL;
988502     set EMWS8.Neural22_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_outest(where=(_ITER_ eq 23 and _OBJ_ ne .));
988503     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL22_OUTEST.
      WHERE (_ITER_=23) and (_OBJ_ not = .);
NOTE: The data set EMWS8.NEURAL22_INITIAL has 1 observations and 666 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988504     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
988505     * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
988506     ;
MPRINT(EM_DIAGRAM):   ;
988507     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
988508     proc neural data=EM_Neural22 dmdbcat=WORK.Neural22_DMDB
988509     validdata = EMWS8.BINNING_VALIDATE
988510     network = EMWS8.Neural22_NETWORK.dm_neural
988511     random=12345
988512     ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural22 dmdbcat=WORK.Neural22_DMDB validdata =
EMWS8.BINNING_VALIDATE network = EMWS8.Neural22_NETWORK.dm_neural random=12345 ;
NOTE: Entry EMWS8.NEURAL22_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS8.NEURAL22_NETWORK.DM_NEURAL has been closed.
988513     nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
988514     performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
988515     initial inest=EMWS8.Neural22_INITIAL;
MPRINT(EM_DIAGRAM):   initial inest=EMWS8.Neural22_INITIAL;
NOTE: The data set EMWS8.NEURAL22_INITIAL has 1 observations and 666 variables.
988516     train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
988517     code file="C:\\predictive-models-project\Workspaces\EMWS8\Neural22\SCORECODE.sas"
988518     group=Neural22
988519     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\Neural22\SCORECODE.sas" group=Neural22 ;
NOTE: External file C:\\predictive-models-project\Workspaces\EMWS8\Neural22\SCORECODE.sas
      opened.
988520     ;
MPRINT(EM_DIAGRAM):   ;
988521     code
988521   ! file="C:\\predictive-models-project\Workspaces\EMWS8\Neural22\RESIDUALSCORECODE.sas"
988522     group=Neural22
988523     residual
988524     ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\Neural22\RESIDUALSCORECODE.sas"
group=Neural22 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\RESIDUALSCORECODE.sas opened.
988525     ;
MPRINT(EM_DIAGRAM):   ;
988526     score data=EMWS8.BINNING_TRAIN out=_NULL_
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
988527     outfit=WORK.FIT1
988528     role=TRAIN
988529     outkey=EMWS8.Neural22_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_NULL_ outfit=WORK.FIT1 role=TRAIN
outkey=EMWS8.Neural22_OUTKEY;
NOTE: The data set EMWS8.NEURAL22_OUTKEY has 145 observations and 8 variables.
NOTE: The data set EMWS8.BINNING_TRAIN has . observations and 62 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
988530     score data=EMWS8.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
988531     outfit=WORK.FIT2
988532     role=VALID
988533     outkey=EMWS8.Neural22_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_NULL_ outfit=WORK.FIT2 role=VALID
outkey=EMWS8.Neural22_OUTKEY;
NOTE: The data set EMWS8.NEURAL22_OUTKEY has 145 observations and 8 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
988534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL22 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.31 seconds
      cpu time            0.29 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.32 seconds
      cpu time            0.31 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
988535     quit;
988536     data EMWS8.Neural22_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_OUTFIT;
988537     merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
988538     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.NEURAL22_OUTFIT has 2 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988539     data EMWS8.Neural22_EMESTIMATE;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMESTIMATE;
988540     set EMWS8.Neural22_outest;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_outest;
988541     if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
988542     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.NEURAL22_OUTEST.
NOTE: The data set EMWS8.NEURAL22_EMESTIMATE has 52 observations and 666 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
988543     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
988544     delete EM_Neural22;
MPRINT(EM_DIAGRAM):   delete EM_Neural22;
988545     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_NEURAL22 (memtype=DATA).
988546     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
988547     data EMWS8.Neural22_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
988548     set fit_Neural22;
MPRINT(EM_DIAGRAM):   set fit_Neural22;
988549     attrib _ITER_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
988549   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _ITER_ label="Training Iterations";
988550     attrib _NAME_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name  ,
988550   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _NAME_ label="Name";
988551     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK.FIT_NEURAL22.
NOTE: The data set EMWS8.NEURAL22_PLOTDS has 52 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988552     proc sort data=EMWS8.Neural22_PLOTDS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_PLOTDS;
988553     by _ITER_;
MPRINT(EM_DIAGRAM):   by _ITER_;
988554     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.NEURAL22_PLOTDS.
NOTE: The data set EMWS8.NEURAL22_PLOTDS has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
988555     data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_
988555   ! where=(_type_ eq "PARMS" and _iter_ eq 23) );
MPRINT(EM_DIAGRAM):    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
_averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 23) );
988556     set EMWS8.Neural22_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMESTIMATE;
988557     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.NEURAL22_EMESTIMATE.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 658 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988558     proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
988559     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
988560     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 658 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
988561     proc transpose data=tempweight out=EMWS8.Neural22_WEIGHTDS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight out=EMWS8.Neural22_WEIGHTDS;
988562     by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
988563     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.NEURAL22_WEIGHTDS has 656 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988564     data EMWS8.Neural22_WEIGHTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_WEIGHTDS;
988565     set EMWS8.Neural22_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_WEIGHTDS;
988566     FROM = trim(left(scan(_LABEL_, 1, '->')));
MPRINT(EM_DIAGRAM):   FROM = trim(left(scan(_LABEL_, 1, '->')));
988567     TO = trim(left(scan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = trim(left(scan(_LABEL_, 2, '>')));
988568     WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
988569     if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
988570     label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))" FROM
988570   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  , NOQUOTE))" TO =
988570   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  , NOQUOTE))" WEIGHT =
988571        "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT = "Weight";
988572     keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
988573     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 656 observations read from the data set EMWS8.NEURAL22_WEIGHTDS.
NOTE: The data set EMWS8.NEURAL22_WEIGHTDS has 651 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
988574     proc sort data=EMWS8.Neural22_WEIGHTDS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_WEIGHTDS nodupkey;
988575     by _LABEL_;
MPRINT(EM_DIAGRAM):   by _LABEL_;
988576     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 651 observations read from the data set EMWS8.NEURAL22_WEIGHTDS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.NEURAL22_WEIGHTDS has 651 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1KEQ5E3
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1KEQ5E3 new;
MPRINT(EM_DIAGRAM):   run;
988678     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
988679     set EMWS8.Neural22_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_OUTKEY;
988680     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
988681     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 145 observations read from the data set EMWS8.NEURAL22_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
988682     filename emflow
988682   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural22: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
988683     *------------------------------------------------------------*;
988684     * Neural22: Scoring DATA data;
988685     *------------------------------------------------------------*;
988686     data EMWS8.Neural22_TRAIN
988687     / view=EMWS8.Neural22_TRAIN
988688     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_TRAIN / view=EMWS8.Neural22_TRAIN ;
988689     set EMWS8.BINNING_TRAIN
988690     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
988691     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas.
988692    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
988693    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
988694    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
988695    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
988696    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
988697    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
988698    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
988699    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
988700    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
988701    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
988702    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
988703    +LENGTH _WARN_ $4
988704    +      F_DepVar  $ 12
988705    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
988706    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
988707    +
988708    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
988709    +
988710    +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
988711    +
988712    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
988713    +
988714    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
988715    +
988716    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
988717    +
988718    +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
988719    +
988720    +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
988721    +
988722    +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
988723    +
988724    +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
988725    +
988726    +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
988727    +
988728    +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
988729    +
988730    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
988731    +
988732    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
988733    +
988734    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
988735    +
988736    +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
988737    +
988738    +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
988739    +
988740    +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
988741    +
988742    +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
988743    +
988744    +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
988745    +
988746    +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
988747    +
988748    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
988749    +
988750    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
988751    +
988752    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
988753    +
988754    +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
988755    +
988756    +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
988757    +
988758    +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
988759    +
988760    +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
988761    +
988762    +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
988763    +
988764    +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
988765    +
988766    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
988767    +
988768    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
988769    +
988770    +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
988771    +
988772    +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
988773    +
988774    +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
988775    +
988776    +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
988777    +
988778    +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
988779    +
988780    +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
988781    +
988782    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
988783    +
988784    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
988785    +
988786    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
988787    +
988788    +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
988789    +
988790    +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
988791    +
988792    +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
988793    +
988794    +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
988795    +
988796    +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
988797    +
988798    +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
988799    +
988800    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
988801    +
988802    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
988803    +
988804    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
988805    +
988806    +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
988807    +
988808    +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
988809    +
988810    +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
988811    +
988812    +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
988813    +
988814    +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
988815    +
988816    +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
988817    +
988818    +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
988819    +
988820    +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
988821    +
988822    +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
988823    +
988824    +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
988825    +
988826    +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
988827    +
988828    +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
988829    +
988830    +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
988831    +
988832    +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
988833    +
988834    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
988835    +
988836    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
988837    +
988838    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
988839    +
988840    +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
988841    +
988842    +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
988843    +
988844    +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
988845    +
988846    +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
988847    +
988848    +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
988849    +
988850    +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
988851    +
988852    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
988853    +
988854    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
988855    +
988856    +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
988857    +
988858    +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
988859    +
988860    +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
988861    +
988862    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
988863    +
988864    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
988865    +
988866    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
988867    +
988868    +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
988869    +
988870    +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
988871    +
988872    +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
988873    +
988874    +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
988875    +
988876    +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
988877    +
988878    +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
988879    +
988880    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
988881    +
988882    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
988883    +
988884    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
988885    +
988886    +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
988887    +
988888    +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
988889    +
988890    +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
988891    +
988892    +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
988893    +
988894    +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
988895    +
988896    +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
988897    +
988898    +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
988899    +
988900    +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
988901    +
988902    +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
988903    +
988904    +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
988905    +
988906    +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
988907    +
988908    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
988909    +
988910    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
988911    +
988912    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
988913    +
988914    +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
988915    +
988916    +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
988917    +
988918    +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
988919    +
988920    +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
988921    +
988922    +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
988923    +
988924    +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
988925    +
988926    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
988927    +
988928    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
988929    +
988930    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
988931    +
988932    +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
988933    +
988934    +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
988935    +
988936    +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
988937    +
988938    +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
988939    +
988940    +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
988941    +
988942    +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
988943    +
988944    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
988945    +
988946    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
988947    +
988948    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
988949    +
988950    +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
988951    +
988952    +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
988953    +
988954    +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
988955    +
988956    +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
988957    +
988958    +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
988959    +
988960    +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
988961    +
988962    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
988963    +
988964    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
988965    +
988966    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
988967    +
988968    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
988969    +
988970    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
988971    +
988972    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
988973    +
988974    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
988975    +
988976    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
988977    +
988978    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
988979    +
988980    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
988981    +
988982    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
988983    +
988984    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
988985    +
988986    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
988987    +
988988    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
988989    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
988990    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
988991    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
988992    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
988993    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
988994    +end;
MPRINT(EM_DIAGRAM):   end;
988995    +else do;
MPRINT(EM_DIAGRAM):   else do;
988996    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
988997    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
988998    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
988999    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
989000    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
989001    +   end;
MPRINT(EM_DIAGRAM):   end;
989002    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
989003    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
989004    +   end;
MPRINT(EM_DIAGRAM):   end;
989005    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989006    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
989007    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989008    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989009    +   end;
MPRINT(EM_DIAGRAM):   end;
989010    +end;
MPRINT(EM_DIAGRAM):   end;
989011    +
989012    +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
989013    +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
989014    +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
989015    +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
989016    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989017    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989018    +end;
MPRINT(EM_DIAGRAM):   end;
989019    +else do;
MPRINT(EM_DIAGRAM):   else do;
989020    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989021    +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
989022    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989023    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989024    +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
989025    +   end;
MPRINT(EM_DIAGRAM):   end;
989026    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
989027    +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
989028    +   end;
MPRINT(EM_DIAGRAM):   end;
989029    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989030    +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
989031    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989032    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989033    +   end;
MPRINT(EM_DIAGRAM):   end;
989034    +end;
MPRINT(EM_DIAGRAM):   end;
989035    +
989036    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
989037    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
989038    +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
989039    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989040    +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
989041    +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
989042    +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
989043    +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
989044    +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
989045    +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
989046    +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
989047    +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
989048    +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
989049    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
989050    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
989051    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
989052    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
989053    +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
989054    +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
989055    +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
989056    +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
989057    +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
989058    +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
989059    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989060    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989061    +end;
MPRINT(EM_DIAGRAM):   end;
989062    +else do;
MPRINT(EM_DIAGRAM):   else do;
989063    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989064    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
989065    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989066    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989067    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
989068    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
989069    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989070    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989071    +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
989072    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989073    +            end;
MPRINT(EM_DIAGRAM):   end;
989074    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989075    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989076    +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
989077    +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
989078    +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
989079    +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
989080    +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
989081    +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
989082    +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
989083    +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
989084    +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
989085    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989086    +               end;
MPRINT(EM_DIAGRAM):   end;
989087    +            end;
MPRINT(EM_DIAGRAM):   end;
989088    +         end;
MPRINT(EM_DIAGRAM):   end;
989089    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989090    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
989091    +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
989092    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989093    +            end;
MPRINT(EM_DIAGRAM):   end;
989094    +         end;
MPRINT(EM_DIAGRAM):   end;
989095    +      end;
MPRINT(EM_DIAGRAM):   end;
989096    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989097    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989098    +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
989099    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989100    +         end;
MPRINT(EM_DIAGRAM):   end;
989101    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989102    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989103    +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
989104    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989105    +            end;
MPRINT(EM_DIAGRAM):   end;
989106    +         end;
MPRINT(EM_DIAGRAM):   end;
989107    +      end;
MPRINT(EM_DIAGRAM):   end;
989108    +   end;
MPRINT(EM_DIAGRAM):   end;
989109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989110    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989111    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
989112    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989113    +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
989114    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989115    +            end;
MPRINT(EM_DIAGRAM):   end;
989116    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989117    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989118    +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
989119    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989120    +               end;
MPRINT(EM_DIAGRAM):   end;
989121    +            end;
MPRINT(EM_DIAGRAM):   end;
989122    +         end;
MPRINT(EM_DIAGRAM):   end;
989123    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989124    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989125    +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
989126    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989127    +            end;
MPRINT(EM_DIAGRAM):   end;
989128    +         end;
MPRINT(EM_DIAGRAM):   end;
989129    +      end;
MPRINT(EM_DIAGRAM):   end;
989130    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989131    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989132    +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
989133    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989134    +         end;
MPRINT(EM_DIAGRAM):   end;
989135    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989136    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989137    +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
989138    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989139    +            end;
MPRINT(EM_DIAGRAM):   end;
989140    +         end;
MPRINT(EM_DIAGRAM):   end;
989141    +      end;
MPRINT(EM_DIAGRAM):   end;
989142    +   end;
MPRINT(EM_DIAGRAM):   end;
989143    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989144    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
989145    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
989146    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
989147    +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
989148    +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
989149    +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
989150    +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
989151    +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
989152    +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
989153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989155    +   end;
MPRINT(EM_DIAGRAM):   end;
989156    +end;
MPRINT(EM_DIAGRAM):   end;
989157    +
989158    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
989159    +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
989160    +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
989161    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989162    +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
989163    +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
989164    +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
989165    +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
989166    +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
989167    +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
989168    +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
989169    +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
989170    +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
989171    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
989172    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
989173    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
989174    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
989175    +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
989176    +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
989177    +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
989178    +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
989179    +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
989180    +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
989181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989183    +end;
MPRINT(EM_DIAGRAM):   end;
989184    +else do;
MPRINT(EM_DIAGRAM):   else do;
989185    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989186    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
989187    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989188    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989189    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
989190    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
989191    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989192    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989193    +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
989194    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989195    +            end;
MPRINT(EM_DIAGRAM):   end;
989196    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989197    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989198    +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
989199    +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
989200    +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
989201    +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
989202    +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
989203    +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
989204    +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
989205    +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
989206    +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
989207    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989208    +               end;
MPRINT(EM_DIAGRAM):   end;
989209    +            end;
MPRINT(EM_DIAGRAM):   end;
989210    +         end;
MPRINT(EM_DIAGRAM):   end;
989211    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989212    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
989213    +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
989214    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989215    +            end;
MPRINT(EM_DIAGRAM):   end;
989216    +         end;
MPRINT(EM_DIAGRAM):   end;
989217    +      end;
MPRINT(EM_DIAGRAM):   end;
989218    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989219    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989220    +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
989221    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989222    +         end;
MPRINT(EM_DIAGRAM):   end;
989223    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989224    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989225    +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
989226    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989227    +            end;
MPRINT(EM_DIAGRAM):   end;
989228    +         end;
MPRINT(EM_DIAGRAM):   end;
989229    +      end;
MPRINT(EM_DIAGRAM):   end;
989230    +   end;
MPRINT(EM_DIAGRAM):   end;
989231    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989232    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989233    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
989234    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989235    +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
989236    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989237    +            end;
MPRINT(EM_DIAGRAM):   end;
989238    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989239    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989240    +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
989241    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989242    +               end;
MPRINT(EM_DIAGRAM):   end;
989243    +            end;
MPRINT(EM_DIAGRAM):   end;
989244    +         end;
MPRINT(EM_DIAGRAM):   end;
989245    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989246    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989247    +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
989248    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989249    +            end;
MPRINT(EM_DIAGRAM):   end;
989250    +         end;
MPRINT(EM_DIAGRAM):   end;
989251    +      end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
989252    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989253    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989254    +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
989255    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989256    +         end;
MPRINT(EM_DIAGRAM):   end;
989257    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989258    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989259    +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
989260    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989261    +            end;
MPRINT(EM_DIAGRAM):   end;
989262    +         end;
MPRINT(EM_DIAGRAM):   end;
989263    +      end;
MPRINT(EM_DIAGRAM):   end;
989264    +   end;
MPRINT(EM_DIAGRAM):   end;
989265    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989266    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
989267    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
989268    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
989269    +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
989270    +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
989271    +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
989272    +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
989273    +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
989274    +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
989275    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989276    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989277    +   end;
MPRINT(EM_DIAGRAM):   end;
989278    +end;
MPRINT(EM_DIAGRAM):   end;
989279    +
989280    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
989281    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
989282    +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
989283    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989284    +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
989285    +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
989286    +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
989287    +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
989288    +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
989289    +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
989290    +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
989291    +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
989292    +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
989293    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
989294    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
989295    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
989296    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
989297    +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
989298    +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
989299    +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
989300    +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
989301    +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
989302    +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
989303    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989304    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989305    +end;
MPRINT(EM_DIAGRAM):   end;
989306    +else do;
MPRINT(EM_DIAGRAM):   else do;
989307    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989308    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
989309    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989310    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989311    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
989312    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
989313    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989314    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989315    +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
989316    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989317    +            end;
MPRINT(EM_DIAGRAM):   end;
989318    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989319    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989320    +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
989321    +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
989322    +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
989323    +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
989324    +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
989325    +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
989326    +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
989327    +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
989328    +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
989329    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989330    +               end;
MPRINT(EM_DIAGRAM):   end;
989331    +            end;
MPRINT(EM_DIAGRAM):   end;
989332    +         end;
MPRINT(EM_DIAGRAM):   end;
989333    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989334    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
989335    +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
989336    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989337    +            end;
MPRINT(EM_DIAGRAM):   end;
989338    +         end;
MPRINT(EM_DIAGRAM):   end;
989339    +      end;
MPRINT(EM_DIAGRAM):   end;
989340    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989341    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989342    +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
989343    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989344    +         end;
MPRINT(EM_DIAGRAM):   end;
989345    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989346    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989347    +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
989348    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989349    +            end;
MPRINT(EM_DIAGRAM):   end;
989350    +         end;
MPRINT(EM_DIAGRAM):   end;
989351    +      end;
MPRINT(EM_DIAGRAM):   end;
989352    +   end;
MPRINT(EM_DIAGRAM):   end;
989353    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989354    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989355    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
989356    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989357    +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
989358    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989359    +            end;
MPRINT(EM_DIAGRAM):   end;
989360    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989361    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989362    +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
989363    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989364    +               end;
MPRINT(EM_DIAGRAM):   end;
989365    +            end;
MPRINT(EM_DIAGRAM):   end;
989366    +         end;
MPRINT(EM_DIAGRAM):   end;
989367    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989368    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989369    +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
989370    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989371    +            end;
MPRINT(EM_DIAGRAM):   end;
989372    +         end;
MPRINT(EM_DIAGRAM):   end;
989373    +      end;
MPRINT(EM_DIAGRAM):   end;
989374    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989375    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989376    +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
989377    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989378    +         end;
MPRINT(EM_DIAGRAM):   end;
989379    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989380    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989381    +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
989382    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989383    +            end;
MPRINT(EM_DIAGRAM):   end;
989384    +         end;
MPRINT(EM_DIAGRAM):   end;
989385    +      end;
MPRINT(EM_DIAGRAM):   end;
989386    +   end;
MPRINT(EM_DIAGRAM):   end;
989387    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989388    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
989389    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
989390    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
989391    +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
989392    +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
989393    +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
989394    +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
989395    +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
989396    +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
989397    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989398    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989399    +   end;
MPRINT(EM_DIAGRAM):   end;
989400    +end;
MPRINT(EM_DIAGRAM):   end;
989401    +
989402    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
989403    +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
989404    +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
989405    +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
989406    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989407    +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
989408    +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
989409    +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
989410    +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
989411    +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
989412    +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
989413    +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
989414    +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
989415    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
989416    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
989417    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
989418    +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
989419    +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
989420    +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
989421    +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
989422    +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
989423    +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
989424    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989426    +end;
MPRINT(EM_DIAGRAM):   end;
989427    +else do;
MPRINT(EM_DIAGRAM):   else do;
989428    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989429    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
989430    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989431    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989432    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
989433    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
989434    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989435    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989436    +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
989437    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989438    +            end;
MPRINT(EM_DIAGRAM):   end;
989439    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989440    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989441    +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
989442    +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
989443    +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
989444    +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
989445    +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
989446    +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
989447    +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
989448    +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
989449    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989450    +               end;
MPRINT(EM_DIAGRAM):   end;
989451    +            end;
MPRINT(EM_DIAGRAM):   end;
989452    +         end;
MPRINT(EM_DIAGRAM):   end;
989453    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989454    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989455    +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
989456    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989457    +            end;
MPRINT(EM_DIAGRAM):   end;
989458    +         end;
MPRINT(EM_DIAGRAM):   end;
989459    +      end;
MPRINT(EM_DIAGRAM):   end;
989460    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989461    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989462    +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
989463    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989464    +         end;
MPRINT(EM_DIAGRAM):   end;
989465    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989466    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989467    +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
989468    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989469    +            end;
MPRINT(EM_DIAGRAM):   end;
989470    +         end;
MPRINT(EM_DIAGRAM):   end;
989471    +      end;
MPRINT(EM_DIAGRAM):   end;
989472    +   end;
MPRINT(EM_DIAGRAM):   end;
989473    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989474    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989475    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989476    +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
989477    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989478    +         end;
MPRINT(EM_DIAGRAM):   end;
989479    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989480    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989481    +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
989482    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989483    +            end;
MPRINT(EM_DIAGRAM):   end;
989484    +         end;
MPRINT(EM_DIAGRAM):   end;
989485    +      end;
MPRINT(EM_DIAGRAM):   end;
989486    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989487    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989488    +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
989489    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989490    +         end;
MPRINT(EM_DIAGRAM):   end;
989491    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989492    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989493    +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
989494    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989495    +            end;
MPRINT(EM_DIAGRAM):   end;
989496    +         end;
MPRINT(EM_DIAGRAM):   end;
989497    +      end;
MPRINT(EM_DIAGRAM):   end;
989498    +   end;
MPRINT(EM_DIAGRAM):   end;
989499    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989500    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
989501    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
989502    +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
989503    +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
989504    +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
989505    +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
989506    +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
989507    +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
989508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989510    +   end;
MPRINT(EM_DIAGRAM):   end;
989511    +end;
MPRINT(EM_DIAGRAM):   end;
989512    +
989513    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
989514    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
989515    +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
989516    +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
989517    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989518    +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
989519    +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
989520    +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
989521    +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
989522    +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
989523    +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
989524    +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
989525    +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
989526    +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
989527    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
989528    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
989529    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
989530    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
989531    +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
989532    +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
989533    +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
989534    +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
989535    +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
989536    +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
989537    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989538    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989539    +end;
MPRINT(EM_DIAGRAM):   end;
989540    +else do;
MPRINT(EM_DIAGRAM):   else do;
989541    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989542    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
989543    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989544    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989545    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
989546    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
989547    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989548    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989549    +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
989550    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989551    +            end;
MPRINT(EM_DIAGRAM):   end;
989552    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989553    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989554    +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
989555    +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
989556    +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
989557    +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
989558    +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
989559    +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
989560    +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
989561    +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
989562    +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
989563    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989564    +               end;
MPRINT(EM_DIAGRAM):   end;
989565    +            end;
MPRINT(EM_DIAGRAM):   end;
989566    +         end;
MPRINT(EM_DIAGRAM):   end;
989567    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989568    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
989569    +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
989570    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989571    +            end;
MPRINT(EM_DIAGRAM):   end;
989572    +         end;
MPRINT(EM_DIAGRAM):   end;
989573    +      end;
MPRINT(EM_DIAGRAM):   end;
989574    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989575    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989576    +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
989577    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989578    +         end;
MPRINT(EM_DIAGRAM):   end;
989579    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989580    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989581    +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
989582    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989583    +            end;
MPRINT(EM_DIAGRAM):   end;
989584    +         end;
MPRINT(EM_DIAGRAM):   end;
989585    +      end;
MPRINT(EM_DIAGRAM):   end;
989586    +   end;
MPRINT(EM_DIAGRAM):   end;
989587    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989588    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989589    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
989590    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989591    +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
989592    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989593    +            end;
MPRINT(EM_DIAGRAM):   end;
989594    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989595    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989596    +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
989597    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989598    +               end;
MPRINT(EM_DIAGRAM):   end;
989599    +            end;
MPRINT(EM_DIAGRAM):   end;
989600    +         end;
MPRINT(EM_DIAGRAM):   end;
989601    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989602    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989603    +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
989604    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989605    +            end;
MPRINT(EM_DIAGRAM):   end;
989606    +         end;
MPRINT(EM_DIAGRAM):   end;
989607    +      end;
MPRINT(EM_DIAGRAM):   end;
989608    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989609    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989610    +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
989611    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989612    +         end;
MPRINT(EM_DIAGRAM):   end;
989613    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989614    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989615    +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
989616    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989617    +            end;
MPRINT(EM_DIAGRAM):   end;
989618    +         end;
MPRINT(EM_DIAGRAM):   end;
989619    +      end;
MPRINT(EM_DIAGRAM):   end;
989620    +   end;
MPRINT(EM_DIAGRAM):   end;
989621    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989622    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
989623    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
989624    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
989625    +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
989626    +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
989627    +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
989628    +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
989629    +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
989630    +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
989631    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989632    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989633    +   end;
MPRINT(EM_DIAGRAM):   end;
989634    +end;
MPRINT(EM_DIAGRAM):   end;
989635    +
989636    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
989637    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
989638    +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
989639    +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
989640    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989641    +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
989642    +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
989643    +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
989644    +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
989645    +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
989646    +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
989647    +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
989648    +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
989649    +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
989650    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
989651    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
989652    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
989653    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
989654    +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
989655    +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
989656    +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
989657    +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
989658    +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
989659    +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
989660    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989661    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989662    +end;
MPRINT(EM_DIAGRAM):   end;
989663    +else do;
MPRINT(EM_DIAGRAM):   else do;
989664    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989665    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
989666    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989667    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989668    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
989669    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
989670    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989671    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989672    +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
989673    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989674    +            end;
MPRINT(EM_DIAGRAM):   end;
989675    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989676    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989677    +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
989678    +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
989679    +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
989680    +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
989681    +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
989682    +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
989683    +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
989684    +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
989685    +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
989686    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989687    +               end;
MPRINT(EM_DIAGRAM):   end;
989688    +            end;
MPRINT(EM_DIAGRAM):   end;
989689    +         end;
MPRINT(EM_DIAGRAM):   end;
989690    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989691    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
989692    +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
989693    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989694    +            end;
MPRINT(EM_DIAGRAM):   end;
989695    +         end;
MPRINT(EM_DIAGRAM):   end;
989696    +      end;
MPRINT(EM_DIAGRAM):   end;
989697    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989698    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989699    +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
989700    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989701    +         end;
MPRINT(EM_DIAGRAM):   end;
989702    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989703    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989704    +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
989705    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989706    +            end;
MPRINT(EM_DIAGRAM):   end;
989707    +         end;
MPRINT(EM_DIAGRAM):   end;
989708    +      end;
MPRINT(EM_DIAGRAM):   end;
989709    +   end;
MPRINT(EM_DIAGRAM):   end;
989710    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989711    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989712    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
989713    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989714    +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
989715    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989716    +            end;
MPRINT(EM_DIAGRAM):   end;
989717    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989718    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989719    +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
989720    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989721    +               end;
MPRINT(EM_DIAGRAM):   end;
989722    +            end;
MPRINT(EM_DIAGRAM):   end;
989723    +         end;
MPRINT(EM_DIAGRAM):   end;
989724    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989725    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989726    +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
989727    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989728    +            end;
MPRINT(EM_DIAGRAM):   end;
989729    +         end;
MPRINT(EM_DIAGRAM):   end;
989730    +      end;
MPRINT(EM_DIAGRAM):   end;
989731    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989732    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989733    +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
989734    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989735    +         end;
MPRINT(EM_DIAGRAM):   end;
989736    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989737    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989738    +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
989739    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989740    +            end;
MPRINT(EM_DIAGRAM):   end;
989741    +         end;
MPRINT(EM_DIAGRAM):   end;
989742    +      end;
MPRINT(EM_DIAGRAM):   end;
989743    +   end;
MPRINT(EM_DIAGRAM):   end;
989744    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989745    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
989746    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
989747    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
989748    +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
989749    +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
989750    +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
989751    +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
989752    +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
989753    +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
989754    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989755    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989756    +   end;
MPRINT(EM_DIAGRAM):   end;
989757    +end;
MPRINT(EM_DIAGRAM):   end;
989758    +
989759    +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
989760    +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
989761    +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
989762    +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
989763    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989764    +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
989765    +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
989766    +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
989767    +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
989768    +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
989769    +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
989770    +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
989771    +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
989772    +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
989773    +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
989774    +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
989775    +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
989776    +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
989777    +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
989778    +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
989779    +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
989780    +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
989781    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989782    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989783    +end;
MPRINT(EM_DIAGRAM):   end;
989784    +else do;
MPRINT(EM_DIAGRAM):   else do;
989785    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989786    +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
989787    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989788    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989789    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
989790    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
989791    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989792    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989793    +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
989794    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989795    +            end;
MPRINT(EM_DIAGRAM):   end;
989796    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989797    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989798    +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
989799    +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
989800    +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
989801    +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
989802    +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
989803    +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
989804    +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
989805    +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
989806    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989807    +               end;
MPRINT(EM_DIAGRAM):   end;
989808    +            end;
MPRINT(EM_DIAGRAM):   end;
989809    +         end;
MPRINT(EM_DIAGRAM):   end;
989810    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989811    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989812    +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
989813    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989814    +            end;
MPRINT(EM_DIAGRAM):   end;
989815    +         end;
MPRINT(EM_DIAGRAM):   end;
989816    +      end;
MPRINT(EM_DIAGRAM):   end;
989817    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989818    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989819    +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
989820    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989821    +         end;
MPRINT(EM_DIAGRAM):   end;
989822    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989823    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989824    +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
989825    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989826    +            end;
MPRINT(EM_DIAGRAM):   end;
989827    +         end;
MPRINT(EM_DIAGRAM):   end;
989828    +      end;
MPRINT(EM_DIAGRAM):   end;
989829    +   end;
MPRINT(EM_DIAGRAM):   end;
989830    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989831    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989832    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989833    +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
989834    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989835    +         end;
MPRINT(EM_DIAGRAM):   end;
989836    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989837    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989838    +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
989839    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989840    +            end;
MPRINT(EM_DIAGRAM):   end;
989841    +         end;
MPRINT(EM_DIAGRAM):   end;
989842    +      end;
MPRINT(EM_DIAGRAM):   end;
989843    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989844    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989845    +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
989846    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989847    +         end;
MPRINT(EM_DIAGRAM):   end;
989848    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989849    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989850    +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
989851    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989852    +            end;
MPRINT(EM_DIAGRAM):   end;
989853    +         end;
MPRINT(EM_DIAGRAM):   end;
989854    +      end;
MPRINT(EM_DIAGRAM):   end;
989855    +   end;
MPRINT(EM_DIAGRAM):   end;
989856    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989857    +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
989858    +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
989859    +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
989860    +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
989861    +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
989862    +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
989863    +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
989864    +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
989865    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989866    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989867    +   end;
MPRINT(EM_DIAGRAM):   end;
989868    +end;
MPRINT(EM_DIAGRAM):   end;
989869    +
989870    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
989871    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
989872    +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
989873    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989874    +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
989875    +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
989876    +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
989877    +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
989878    +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
989879    +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
989880    +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
989881    +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
989882    +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
989883    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
989884    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
989885    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
989886    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
989887    +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
989888    +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
989889    +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
989890    +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
989891    +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
989892    +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
989893    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
989894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989895    +end;
MPRINT(EM_DIAGRAM):   end;
989896    +else do;
MPRINT(EM_DIAGRAM):   else do;
989897    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
989898    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
989899    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
989900    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
989901    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
989902    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
989903    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
989904    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
989905    +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
989906    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989907    +            end;
MPRINT(EM_DIAGRAM):   end;
989908    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989909    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
989910    +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
989911    +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
989912    +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
989913    +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
989914    +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
989915    +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
989916    +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
989917    +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
989918    +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
989919    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989920    +               end;
MPRINT(EM_DIAGRAM):   end;
989921    +            end;
MPRINT(EM_DIAGRAM):   end;
989922    +         end;
MPRINT(EM_DIAGRAM):   end;
989923    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989924    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
989925    +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
989926    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989927    +            end;
MPRINT(EM_DIAGRAM):   end;
989928    +         end;
MPRINT(EM_DIAGRAM):   end;
989929    +      end;
MPRINT(EM_DIAGRAM):   end;
989930    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989931    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
989932    +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
989933    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989934    +         end;
MPRINT(EM_DIAGRAM):   end;
989935    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989936    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
989937    +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
989938    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989939    +            end;
MPRINT(EM_DIAGRAM):   end;
989940    +         end;
MPRINT(EM_DIAGRAM):   end;
989941    +      end;
MPRINT(EM_DIAGRAM):   end;
989942    +   end;
MPRINT(EM_DIAGRAM):   end;
989943    +   else do;
MPRINT(EM_DIAGRAM):   else do;
989944    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
989945    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
989946    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
989947    +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
989948    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989949    +            end;
MPRINT(EM_DIAGRAM):   end;
989950    +            else do;
MPRINT(EM_DIAGRAM):   else do;
989951    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
989952    +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
989953    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989954    +               end;
MPRINT(EM_DIAGRAM):   end;
989955    +            end;
MPRINT(EM_DIAGRAM):   end;
989956    +         end;
MPRINT(EM_DIAGRAM):   end;
989957    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989958    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
989959    +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
989960    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989961    +            end;
MPRINT(EM_DIAGRAM):   end;
989962    +         end;
MPRINT(EM_DIAGRAM):   end;
989963    +      end;
MPRINT(EM_DIAGRAM):   end;
989964    +      else do;
MPRINT(EM_DIAGRAM):   else do;
989965    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
989966    +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
989967    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989968    +         end;
MPRINT(EM_DIAGRAM):   end;
989969    +         else do;
MPRINT(EM_DIAGRAM):   else do;
989970    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
989971    +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
989972    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
989973    +            end;
MPRINT(EM_DIAGRAM):   end;
989974    +         end;
MPRINT(EM_DIAGRAM):   end;
989975    +      end;
MPRINT(EM_DIAGRAM):   end;
989976    +   end;
MPRINT(EM_DIAGRAM):   end;
989977    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
989978    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
989979    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
989980    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
989981    +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
989982    +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
989983    +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
989984    +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
989985    +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
989986    +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
989987    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
989988    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
989989    +   end;
MPRINT(EM_DIAGRAM):   end;
989990    +end;
MPRINT(EM_DIAGRAM):   end;
989991    +
989992    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
989993    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
989994    +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
989995    +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
989996    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
989997    +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
989998    +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
989999    +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
990000    +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
990001    +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
990002    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
990003    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
990004    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
990005    +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
990006    +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
990007    +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
990008    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
990009    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990010    +end;
MPRINT(EM_DIAGRAM):   end;
990011    +else do;
MPRINT(EM_DIAGRAM):   else do;
990012    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
990013    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
990014    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
990015    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
990016    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
990017    +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
990018    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
990019    +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
990020    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990021    +         end;
MPRINT(EM_DIAGRAM):   end;
990022    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990023    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
990024    +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
990025    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990026    +            end;
MPRINT(EM_DIAGRAM):   end;
990027    +         end;
MPRINT(EM_DIAGRAM):   end;
990028    +      end;
MPRINT(EM_DIAGRAM):   end;
990029    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990030    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
990031    +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
990032    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990033    +         end;
MPRINT(EM_DIAGRAM):   end;
990034    +      end;
MPRINT(EM_DIAGRAM):   end;
990035    +   end;
MPRINT(EM_DIAGRAM):   end;
990036    +   else do;
MPRINT(EM_DIAGRAM):   else do;
990037    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
990038    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
990039    +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
990040    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990041    +         end;
MPRINT(EM_DIAGRAM):   end;
990042    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990043    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
990044    +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
990045    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990046    +            end;
MPRINT(EM_DIAGRAM):   end;
990047    +         end;
MPRINT(EM_DIAGRAM):   end;
990048    +      end;
MPRINT(EM_DIAGRAM):   end;
990049    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990050    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
990051    +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
990052    +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
990053    +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
990054    +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
990055    +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
990056    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990057    +         end;
MPRINT(EM_DIAGRAM):   end;
990058    +      end;
MPRINT(EM_DIAGRAM):   end;
990059    +   end;
MPRINT(EM_DIAGRAM):   end;
990060    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
990061    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
990062    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
990063    +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
990064    +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
990065    +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
990066    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
990067    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990068    +   end;
MPRINT(EM_DIAGRAM):   end;
990069    +end;
MPRINT(EM_DIAGRAM):   end;
990070    +
990071    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
990072    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
990073    +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
990074    +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
990075    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
990076    +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
990077    +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
990078    +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
990079    +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
990080    +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
990081    +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
990082    +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
990083    +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
990084    +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
990085    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
990086    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
990087    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
990088    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
990089    +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
990090    +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
990091    +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
990092    +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
990093    +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
990094    +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
990095    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
990096    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990097    +end;
MPRINT(EM_DIAGRAM):   end;
990098    +else do;
MPRINT(EM_DIAGRAM):   else do;
990099    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
990100    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
990101    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
990102    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
990103    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
990104    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
990105    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
990106    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
990107    +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
990108    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990109    +            end;
MPRINT(EM_DIAGRAM):   end;
990110    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990111    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
990112    +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
990113    +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
990114    +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
990115    +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
990116    +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
990117    +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
990118    +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
990119    +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
990120    +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
990121    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990122    +               end;
MPRINT(EM_DIAGRAM):   end;
990123    +            end;
MPRINT(EM_DIAGRAM):   end;
990124    +         end;
MPRINT(EM_DIAGRAM):   end;
990125    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990126    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
990127    +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
990128    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990129    +            end;
MPRINT(EM_DIAGRAM):   end;
990130    +         end;
MPRINT(EM_DIAGRAM):   end;
990131    +      end;
MPRINT(EM_DIAGRAM):   end;
990132    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990133    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
990134    +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
990135    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990136    +         end;
MPRINT(EM_DIAGRAM):   end;
990137    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990138    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
990139    +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
990140    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990141    +            end;
MPRINT(EM_DIAGRAM):   end;
990142    +         end;
MPRINT(EM_DIAGRAM):   end;
990143    +      end;
MPRINT(EM_DIAGRAM):   end;
990144    +   end;
MPRINT(EM_DIAGRAM):   end;
990145    +   else do;
MPRINT(EM_DIAGRAM):   else do;
990146    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
990147    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
990148    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
990149    +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
990150    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990151    +            end;
MPRINT(EM_DIAGRAM):   end;
990152    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990153    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
990154    +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
990155    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990156    +               end;
MPRINT(EM_DIAGRAM):   end;
990157    +            end;
MPRINT(EM_DIAGRAM):   end;
990158    +         end;
MPRINT(EM_DIAGRAM):   end;
990159    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990160    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
990161    +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
990162    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990163    +            end;
MPRINT(EM_DIAGRAM):   end;
990164    +         end;
MPRINT(EM_DIAGRAM):   end;
990165    +      end;
MPRINT(EM_DIAGRAM):   end;
990166    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990167    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
990168    +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
990169    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990170    +         end;
MPRINT(EM_DIAGRAM):   end;
990171    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990172    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
990173    +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
990174    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990175    +            end;
MPRINT(EM_DIAGRAM):   end;
990176    +         end;
MPRINT(EM_DIAGRAM):   end;
990177    +      end;
MPRINT(EM_DIAGRAM):   end;
990178    +   end;
MPRINT(EM_DIAGRAM):   end;
990179    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
990180    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
990181    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
990182    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
990183    +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
990184    +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
990185    +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
990186    +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
990187    +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
990188    +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
990189    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
990190    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990191    +   end;
MPRINT(EM_DIAGRAM):   end;
990192    +end;
MPRINT(EM_DIAGRAM):   end;
990193    +
990194    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
990195    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
990196    +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
990197    +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
990198    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
990199    +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
990200    +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
990201    +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
990202    +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
990203    +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
990204    +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
990205    +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
990206    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
990207    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
990208    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
990209    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
990210    +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
990211    +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
990212    +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
990213    +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
990214    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
990215    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990216    +end;
MPRINT(EM_DIAGRAM):   end;
990217    +else do;
MPRINT(EM_DIAGRAM):   else do;
990218    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
990219    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
990220    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
990221    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
990222    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
990223    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
990224    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
990225    +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
990226    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990227    +         end;
MPRINT(EM_DIAGRAM):   end;
990228    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990229    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
990230    +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
990231    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990232    +            end;
MPRINT(EM_DIAGRAM):   end;
990233    +         end;
MPRINT(EM_DIAGRAM):   end;
990234    +      end;
MPRINT(EM_DIAGRAM):   end;
990235    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990236    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
990237    +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
990238    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990239    +         end;
MPRINT(EM_DIAGRAM):   end;
990240    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990241    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
990242    +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
990243    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990244    +            end;
MPRINT(EM_DIAGRAM):   end;
990245    +         end;
MPRINT(EM_DIAGRAM):   end;
990246    +      end;
MPRINT(EM_DIAGRAM):   end;
990247    +   end;
MPRINT(EM_DIAGRAM):   end;
990248    +   else do;
MPRINT(EM_DIAGRAM):   else do;
990249    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
990250    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
990251    +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
990252    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990253    +         end;
MPRINT(EM_DIAGRAM):   end;
990254    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990255    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
990256    +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
990257    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990258    +            end;
MPRINT(EM_DIAGRAM):   end;
990259    +         end;
MPRINT(EM_DIAGRAM):   end;
990260    +      end;
MPRINT(EM_DIAGRAM):   end;
990261    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990262    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
990263    +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
990264    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990265    +         end;
MPRINT(EM_DIAGRAM):   end;
990266    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990267    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
990268    +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
990269    +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
990270    +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
990271    +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
990272    +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
990273    +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
990274    +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
990275    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990276    +            end;
MPRINT(EM_DIAGRAM):   end;
990277    +         end;
MPRINT(EM_DIAGRAM):   end;
990278    +      end;
MPRINT(EM_DIAGRAM):   end;
990279    +   end;
MPRINT(EM_DIAGRAM):   end;
990280    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
990281    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
990282    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
990283    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
990284    +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
990285    +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
990286    +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
990287    +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
990288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
990289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990290    +   end;
MPRINT(EM_DIAGRAM):   end;
990291    +end;
MPRINT(EM_DIAGRAM):   end;
990292    +
990293    +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
990294    +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
990295    +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
990296    +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
990297    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
990298    +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
990299    +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
990300    +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
990301    +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
990302    +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
990303    +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
990304    +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
990305    +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
990306    +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
990307    +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
990308    +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
990309    +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
990310    +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
990311    +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
990312    +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
990313    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
990314    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990315    +end;
MPRINT(EM_DIAGRAM):   end;
990316    +else do;
MPRINT(EM_DIAGRAM):   else do;
990317    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
990318    +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
990319    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
990320    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
990321    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
990322    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
990323    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
990324    +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
990325    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990326    +         end;
MPRINT(EM_DIAGRAM):   end;
990327    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990328    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
990329    +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
990330    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990331    +            end;
MPRINT(EM_DIAGRAM):   end;
990332    +         end;
MPRINT(EM_DIAGRAM):   end;
990333    +      end;
MPRINT(EM_DIAGRAM):   end;
990334    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990335    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
990336    +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
990337    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990338    +         end;
MPRINT(EM_DIAGRAM):   end;
990339    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990340    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
990341    +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
990342    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990343    +            end;
MPRINT(EM_DIAGRAM):   end;
990344    +         end;
MPRINT(EM_DIAGRAM):   end;
990345    +      end;
MPRINT(EM_DIAGRAM):   end;
990346    +   end;
MPRINT(EM_DIAGRAM):   end;
990347    +   else do;
MPRINT(EM_DIAGRAM):   else do;
990348    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
990349    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
990350    +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
990351    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990352    +         end;
MPRINT(EM_DIAGRAM):   end;
990353    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990354    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
990355    +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
990356    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990357    +            end;
MPRINT(EM_DIAGRAM):   end;
990358    +         end;
MPRINT(EM_DIAGRAM):   end;
990359    +      end;
MPRINT(EM_DIAGRAM):   end;
990360    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990361    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
990362    +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
990363    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990364    +         end;
MPRINT(EM_DIAGRAM):   end;
990365    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990366    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
990367    +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
990368    +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
990369    +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
990370    +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
990371    +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
990372    +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
990373    +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
990374    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990375    +            end;
MPRINT(EM_DIAGRAM):   end;
990376    +         end;
MPRINT(EM_DIAGRAM):   end;
990377    +      end;
MPRINT(EM_DIAGRAM):   end;
990378    +   end;
MPRINT(EM_DIAGRAM):   end;
990379    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
990380    +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
990381    +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
990382    +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
990383    +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
990384    +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
990385    +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
990386    +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
990387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
990388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990389    +   end;
MPRINT(EM_DIAGRAM):   end;
990390    +end;
MPRINT(EM_DIAGRAM):   end;
990391    +
990392    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
990393    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
990394    +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
990395    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
990396    +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
990397    +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
990398    +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
990399    +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
990400    +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
990401    +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
990402    +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
990403    +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
990404    +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
990405    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
990406    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
990407    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
990408    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
990409    +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
990410    +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
990411    +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
990412    +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
990413    +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
990414    +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
990415    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
990416    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990417    +end;
MPRINT(EM_DIAGRAM):   end;
990418    +else do;
MPRINT(EM_DIAGRAM):   else do;
990419    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
990420    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
990421    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
990422    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
990423    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
990424    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
990425    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
990426    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
990427    +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
990428    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990429    +            end;
MPRINT(EM_DIAGRAM):   end;
990430    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990431    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
990432    +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
990433    +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
990434    +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
990435    +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
990436    +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
990437    +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
990438    +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
990439    +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
990440    +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
990441    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990442    +               end;
MPRINT(EM_DIAGRAM):   end;
990443    +            end;
MPRINT(EM_DIAGRAM):   end;
990444    +         end;
MPRINT(EM_DIAGRAM):   end;
990445    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990446    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
990447    +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
990448    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990449    +            end;
MPRINT(EM_DIAGRAM):   end;
990450    +         end;
MPRINT(EM_DIAGRAM):   end;
990451    +      end;
MPRINT(EM_DIAGRAM):   end;
990452    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990453    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
990454    +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
990455    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990456    +         end;
MPRINT(EM_DIAGRAM):   end;
990457    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990458    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
990459    +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
990460    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990461    +            end;
MPRINT(EM_DIAGRAM):   end;
990462    +         end;
MPRINT(EM_DIAGRAM):   end;
990463    +      end;
MPRINT(EM_DIAGRAM):   end;
990464    +   end;
MPRINT(EM_DIAGRAM):   end;
990465    +   else do;
MPRINT(EM_DIAGRAM):   else do;
990466    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
990467    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
990468    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
990469    +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
990470    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990471    +            end;
MPRINT(EM_DIAGRAM):   end;
990472    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990473    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
990474    +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
990475    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990476    +               end;
MPRINT(EM_DIAGRAM):   end;
990477    +            end;
MPRINT(EM_DIAGRAM):   end;
990478    +         end;
MPRINT(EM_DIAGRAM):   end;
990479    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990480    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
990481    +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
990482    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990483    +            end;
MPRINT(EM_DIAGRAM):   end;
990484    +         end;
MPRINT(EM_DIAGRAM):   end;
990485    +      end;
MPRINT(EM_DIAGRAM):   end;
990486    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990487    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
990488    +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
990489    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990490    +         end;
MPRINT(EM_DIAGRAM):   end;
990491    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990492    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
990493    +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
990494    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990495    +            end;
MPRINT(EM_DIAGRAM):   end;
990496    +         end;
MPRINT(EM_DIAGRAM):   end;
990497    +      end;
MPRINT(EM_DIAGRAM):   end;
990498    +   end;
MPRINT(EM_DIAGRAM):   end;
990499    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
990500    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
990501    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
990502    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
990503    +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
990504    +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
990505    +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
990506    +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
990507    +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
990508    +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
990509    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
990510    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990511    +   end;
MPRINT(EM_DIAGRAM):   end;
990512    +end;
MPRINT(EM_DIAGRAM):   end;
990513    +
990514    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
990515    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
990516    +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
990517    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
990518    +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
990519    +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
990520    +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
990521    +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
990522    +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
990523    +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
990524    +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
990525    +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
990526    +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
990527    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
990528    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
990529    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
990530    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
990531    +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
990532    +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
990533    +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
990534    +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
990535    +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
990536    +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
990537    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
990538    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990539    +end;
MPRINT(EM_DIAGRAM):   end;
990540    +else do;
MPRINT(EM_DIAGRAM):   else do;
990541    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
990542    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
990543    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
990544    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
990545    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
990546    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
990547    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
990548    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
990549    +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
990550    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990551    +            end;
MPRINT(EM_DIAGRAM):   end;
990552    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990553    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
990554    +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
990555    +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
990556    +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
990557    +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
990558    +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
990559    +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
990560    +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
990561    +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
990562    +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
990563    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990564    +               end;
MPRINT(EM_DIAGRAM):   end;
990565    +            end;
MPRINT(EM_DIAGRAM):   end;
990566    +         end;
MPRINT(EM_DIAGRAM):   end;
990567    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990568    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
990569    +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
990570    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990571    +            end;
MPRINT(EM_DIAGRAM):   end;
990572    +         end;
MPRINT(EM_DIAGRAM):   end;
990573    +      end;
MPRINT(EM_DIAGRAM):   end;
990574    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990575    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
990576    +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
990577    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990578    +         end;
MPRINT(EM_DIAGRAM):   end;
990579    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990580    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
990581    +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
990582    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990583    +            end;
MPRINT(EM_DIAGRAM):   end;
990584    +         end;
MPRINT(EM_DIAGRAM):   end;
990585    +      end;
MPRINT(EM_DIAGRAM):   end;
990586    +   end;
MPRINT(EM_DIAGRAM):   end;
990587    +   else do;
MPRINT(EM_DIAGRAM):   else do;
990588    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
990589    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
990590    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
990591    +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
990592    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990593    +            end;
MPRINT(EM_DIAGRAM):   end;
990594    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990595    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
990596    +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
990597    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990598    +               end;
MPRINT(EM_DIAGRAM):   end;
990599    +            end;
MPRINT(EM_DIAGRAM):   end;
990600    +         end;
MPRINT(EM_DIAGRAM):   end;
990601    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990602    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
990603    +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
990604    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990605    +            end;
MPRINT(EM_DIAGRAM):   end;
990606    +         end;
MPRINT(EM_DIAGRAM):   end;
990607    +      end;
MPRINT(EM_DIAGRAM):   end;
990608    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990609    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
990610    +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
990611    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990612    +         end;
MPRINT(EM_DIAGRAM):   end;
990613    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990614    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
990615    +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
990616    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990617    +            end;
MPRINT(EM_DIAGRAM):   end;
990618    +         end;
MPRINT(EM_DIAGRAM):   end;
990619    +      end;
MPRINT(EM_DIAGRAM):   end;
990620    +   end;
MPRINT(EM_DIAGRAM):   end;
990621    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
990622    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
990623    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
990624    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
990625    +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
990626    +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
990627    +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
990628    +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
990629    +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
990630    +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
990631    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
990632    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990633    +   end;
MPRINT(EM_DIAGRAM):   end;
990634    +end;
MPRINT(EM_DIAGRAM):   end;
990635    +
990636    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
990637    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
990638    +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
990639    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
990640    +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
990641    +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
990642    +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
990643    +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
990644    +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
990645    +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
990646    +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
990647    +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
990648    +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
990649    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
990650    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
990651    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
990652    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
990653    +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
990654    +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
990655    +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
990656    +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
990657    +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
990658    +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
990659    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
990660    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990661    +end;
MPRINT(EM_DIAGRAM):   end;
990662    +else do;
MPRINT(EM_DIAGRAM):   else do;
990663    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
990664    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
990665    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
990666    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
990667    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
990668    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
990669    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
990670    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
990671    +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
990672    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990673    +            end;
MPRINT(EM_DIAGRAM):   end;
990674    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990675    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
990676    +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
990677    +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
990678    +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
990679    +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
990680    +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
990681    +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
990682    +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
990683    +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
990684    +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
990685    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990686    +               end;
MPRINT(EM_DIAGRAM):   end;
990687    +            end;
MPRINT(EM_DIAGRAM):   end;
990688    +         end;
MPRINT(EM_DIAGRAM):   end;
990689    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990690    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
990691    +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
990692    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990693    +            end;
MPRINT(EM_DIAGRAM):   end;
990694    +         end;
MPRINT(EM_DIAGRAM):   end;
990695    +      end;
MPRINT(EM_DIAGRAM):   end;
990696    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990697    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
990698    +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
990699    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990700    +         end;
MPRINT(EM_DIAGRAM):   end;
990701    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990702    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
990703    +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
990704    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990705    +            end;
MPRINT(EM_DIAGRAM):   end;
990706    +         end;
MPRINT(EM_DIAGRAM):   end;
990707    +      end;
MPRINT(EM_DIAGRAM):   end;
990708    +   end;
MPRINT(EM_DIAGRAM):   end;
990709    +   else do;
MPRINT(EM_DIAGRAM):   else do;
990710    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
990711    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
990712    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
990713    +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
990714    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990715    +            end;
MPRINT(EM_DIAGRAM):   end;
990716    +            else do;
MPRINT(EM_DIAGRAM):   else do;
990717    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
990718    +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
990719    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990720    +               end;
MPRINT(EM_DIAGRAM):   end;
990721    +            end;
MPRINT(EM_DIAGRAM):   end;
990722    +         end;
MPRINT(EM_DIAGRAM):   end;
990723    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990724    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
990725    +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
990726    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990727    +            end;
MPRINT(EM_DIAGRAM):   end;
990728    +         end;
MPRINT(EM_DIAGRAM):   end;
990729    +      end;
MPRINT(EM_DIAGRAM):   end;
990730    +      else do;
MPRINT(EM_DIAGRAM):   else do;
990731    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
990732    +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
990733    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990734    +         end;
MPRINT(EM_DIAGRAM):   end;
990735    +         else do;
MPRINT(EM_DIAGRAM):   else do;
990736    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
990737    +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
990738    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
990739    +            end;
MPRINT(EM_DIAGRAM):   end;
990740    +         end;
MPRINT(EM_DIAGRAM):   end;
990741    +      end;
MPRINT(EM_DIAGRAM):   end;
990742    +   end;
MPRINT(EM_DIAGRAM):   end;
990743    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
990744    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
990745    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
990746    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
990747    +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
990748    +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
990749    +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
990750    +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
990751    +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
990752    +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
990753    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
990754    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990755    +   end;
MPRINT(EM_DIAGRAM):   end;
990756    +end;
MPRINT(EM_DIAGRAM):   end;
990757    +
990758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
990759    +*** Checking missing input Interval
990760    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
990761    +
990762    +IF NMISS(
990763    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
990764    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
990765    +
990766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
990767    +END;
MPRINT(EM_DIAGRAM):   END;
990768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
990769    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
990770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
990771    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
990772    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
990773    +END;
MPRINT(EM_DIAGRAM):   END;
990774    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
990775    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
990776    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
990777    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
990778    +END;
MPRINT(EM_DIAGRAM):   END;
990779    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
990780    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
990781    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
990782    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
990783    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
990784    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
990785    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
990786    +   H11  =    -0.11779994129006 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.11779994129006 * S_Year_Birth ;
990787    +   H12  =     0.01439270223905 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.01439270223905 * S_Year_Birth ;
990788    +   H13  =     0.16810576596239 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.16810576596239 * S_Year_Birth ;
990789    +   H14  =      0.0126323556283 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.0126323556283 * S_Year_Birth ;
990790    +   H15  =     0.00490126786427 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.00490126786427 * S_Year_Birth ;
990791    +   H11  = H11  +    -0.10120130038823 * GRP_AcceptedCmp52
990792    +          +    -0.29145091653241 * GRP_AcceptedCmpTotal3
990793    +          +     0.01802833275582 * GRP_Frq2  +     0.15272820858021 * GRP_Frq3
990794    +          +     0.14370686750504 * GRP_Frq4  +    -0.06074271943474 * GRP_Frq5
990795    +          +    -0.16494155191767 * GRP_Frq6  +    -0.03508219706844 * GRP_Frq7
990796    +          +     0.03801978911133 * GRP_Frq8  +    -0.04837268754875 * GRP_Frq9
990797    +          +     0.04133949833009 * GRP_Frq10  +     0.01585269216602 *
990798    +        GRP_Income2  +     0.02526921062614 * GRP_Income3
990799    +          +     0.19310035357829 * GRP_Income4  +     0.16615699836751 *
990800    +        GRP_Income5  +    -0.01656164262311 * GRP_Income6
990801    +          +     0.04387641774257 * GRP_Income7  +    -0.17330241074594 *
990802    +        GRP_Income8  +     0.16738656775649 * GRP_Income9
990803    +          +      0.1630131883969 * GRP_Income10  +     0.34279387127093 *
990804    +        GRP_Mnt2  +     0.02575623945089 * GRP_Mnt3  +      0.0148719039037 *
990805    +        GRP_Mnt4  +    -0.14622490571067 * GRP_Mnt5  +    -0.19294026942757 *
990806    +        GRP_Mnt6  +    -0.00783114298777 * GRP_Mnt7  +     0.09174888699683 *
990807    +        GRP_Mnt8  +    -0.08601289398209 * GRP_Mnt9  +     0.21448453029375 *
990808    +        GRP_Mnt10  +     0.10697869967047 * GRP_MntFishProducts3
990809    +          +     0.06225775049469 * GRP_MntFishProducts4
990810    +          +    -0.01408797391558 * GRP_MntFishProducts5
990811    +          +     0.02848289613699 * GRP_MntFishProducts6
990812    +          +     0.05325776779504 * GRP_MntFishProducts7
990813    +          +     0.02437321250069 * GRP_MntFishProducts8
990814    +          +      0.2617858307061 * GRP_MntFishProducts9
990815    +          +    -0.07319837564913 * GRP_MntFishProducts10
990816    +          +    -0.02161432541757 * GRP_MntGoldProds2
990817    +          +     0.19849470180453 * GRP_MntGoldProds3
990818    +          +     0.08066760525249 * GRP_MntGoldProds4
990819    +          +     0.14331081076233 * GRP_MntGoldProds5
990820    +          +     0.05943247571249 * GRP_MntGoldProds6
990821    +          +      0.0608061458335 * GRP_MntGoldProds7
990822    +          +     0.05038235669624 * GRP_MntGoldProds8
990823    +          +    -0.04685805642629 * GRP_MntGoldProds9
990824    +          +    -0.29152354570589 * GRP_MntGoldProds10
990825    +          +    -0.39968469332087 * GRP_MntMeatProducts2
990826    +          +    -0.19201423289799 * GRP_MntMeatProducts3
990827    +          +    -0.27560935050599 * GRP_MntMeatProducts4
990828    +          +     -0.0283731212244 * GRP_MntMeatProducts5
990829    +          +     0.03960809803437 * GRP_MntMeatProducts6
990830    +          +    -0.18777726757179 * GRP_MntMeatProducts7
990831    +          +    -0.05524894778392 * GRP_MntMeatProducts8
990832    +          +     0.13594754762959 * GRP_MntMeatProducts9
990833    +          +     0.43906108436269 * GRP_MntMeatProducts10
990834    +          +    -0.06435829145013 * GRP_MntSweetProducts3
990835    +          +     -0.0210530647656 * GRP_MntSweetProducts4
990836    +          +     0.12313868065999 * GRP_MntSweetProducts5
990837    +          +     0.09312437748244 * GRP_MntSweetProducts6
990838    +          +    -0.12471463660639 * GRP_MntSweetProducts7
990839    +          +     0.06602921514536 * GRP_MntSweetProducts8
990840    +          +     0.08468927916869 * GRP_MntSweetProducts9
990841    +          +    -0.13586571968305 * GRP_MntSweetProducts10
990842    +          +     0.36708616844444 * GRP_MntWines2  +     0.10783294052251 *
990843    +        GRP_MntWines3  +     0.04439392359556 * GRP_MntWines4
990844    +          +     0.03715965915951 * GRP_MntWines5  +    -0.03210586065209 *
990845    +        GRP_MntWines6  +     0.11894764415135 * GRP_MntWines7
990846    +          +    -0.11667658986463 * GRP_MntWines8  +    -0.00166194976989 *
990847    +        GRP_MntWines9  +    -0.40981775275403 * GRP_MntWines10
990848    +          +    -0.44861088264537 * GRP_NumCatalogPurchases3
990849    +          +    -0.16773306967441 * GRP_NumCatalogPurchases4
990850    +          +    -0.09165932058272 * GRP_NumCatalogPurchases5
990851    +          +     0.14298090214424 * GRP_NumCatalogPurchases6
990852    +          +    -0.02734458137769 * GRP_NumCatalogPurchases7
990853    +          +     0.08564176396946 * GRP_NumDistPurchases2
990854    +          +    -0.04992946661847 * GRP_NumDistPurchases3
990855    +          +    -0.02597736910094 * GRP_NumDistPurchases4
990856    +          +    -0.05061636893507 * GRP_NumDistPurchases5
990857    +          +    -0.03128813104108 * GRP_NumDistPurchases6
990858    +          +    -0.13321401016342 * GRP_NumDistPurchases7
990859    +          +    -0.16916873887958 * GRP_NumDistPurchases8
990860    +          +     0.27222053253076 * GRP_NumDistPurchases9
990861    +          +     0.31493873732485 * GRP_NumDistPurchases10
990862    +          +     0.00940915246846 * GRP_NumWebPurchases2
990863    +          +    -0.09454543870383 * GRP_NumWebPurchases3
990864    +          +     0.02354360806187 * GRP_NumWebPurchases4
990865    +          +      0.0623848511153 * GRP_NumWebPurchases5
990866    +          +    -0.14177656017556 * GRP_NumWebPurchases6
990867    +          +    -0.08722967193472 * GRP_NumWebPurchases7
990868    +          +     0.08762950710966 * GRP_NumWebPurchases8
990869    +          +    -0.02407598807456 * GRP_NumWebVisitsMonth2
990870    +          +    -0.08734142313349 * GRP_NumWebVisitsMonth3
990871    +          +    -0.07761023656162 * GRP_NumWebVisitsMonth4
990872    +          +     -0.1666467425177 * GRP_NumWebVisitsMonth5
990873    +          +    -0.08134770955005 * GRP_NumWebVisitsMonth6
990874    +          +     0.02327986356952 * GRP_NumWebVisitsMonth7
990875    +          +     0.35444907806561 * GRP_NumWebVisitsMonth8
990876    +          +     0.09441161284057 * GRP_RFMstat2  +     -0.1319671606322 *
990877    +        GRP_RFMstat3  +     0.02748981688883 * GRP_RFMstat4
990878    +          +    -0.11127405232643 * GRP_RFMstat5  +     0.02825604094962 *
990879    +        GRP_RFMstat6  +    -0.11039280017266 * GRP_RFMstat7
990880    +          +    -0.26019386650861 * GRP_RFMstat8  +    -0.21523161156313 *
990881    +        GRP_RFMstat9  +    -0.03629252062158 * GRP_RFMstat10
990882    +          +     0.15763266470046 * GRP_RMntFrq2  +     0.08780054158661 *
990883    +        GRP_RMntFrq3  +     0.17890334374232 * GRP_RMntFrq4
990884    +          +     0.19959789054927 * GRP_RMntFrq5  +    -0.13310639896206 *
990885    +        GRP_RMntFrq6  +     0.02766923637797 * GRP_RMntFrq7
990886    +          +    -0.00498872677557 * GRP_RMntFrq8  +     0.28068860472864 *
990887    +        GRP_RMntFrq9  +    -0.00625449404896 * GRP_RMntFrq10
990888    +          +     0.14035437235589 * GRP_Recency2  +     0.21926411321176 *
990889    +        GRP_Recency3  +     0.40977962900363 * GRP_Recency4
990890    +          +    -0.04780791117376 * GRP_Recency5  +     0.06447865348011 *
990891    +        GRP_Recency6  +     0.02645001728685 * GRP_Recency7
990892    +          +    -0.25500720229394 * GRP_Recency8  +    -0.33194208803227 *
990893    +        GRP_Recency9  +    -0.37509931095396 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10120130038823 * GRP_AcceptedCmp52 + -0.29145091653241 *
GRP_AcceptedCmpTotal3 + 0.01802833275582 * GRP_Frq2 + 0.15272820858021 * GRP_Frq3 +
0.14370686750504 * GRP_Frq4 + -0.06074271943474 * GRP_Frq5 + -0.16494155191767 * GRP_Frq6 +
-0.03508219706844 * GRP_Frq7 + 0.03801978911133 * GRP_Frq8 + -0.04837268754875 * GRP_Frq9 +
0.04133949833009 * GRP_Frq10 + 0.01585269216602 * GRP_Income2 + 0.02526921062614 * GRP_Income3
+ 0.19310035357829 * GRP_Income4 + 0.16615699836751 * GRP_Income5 + -0.01656164262311 *
GRP_Income6 + 0.04387641774257 * GRP_Income7 + -0.17330241074594 * GRP_Income8 +
0.16738656775649 * GRP_Income9 + 0.1630131883969 * GRP_Income10 + 0.34279387127093 * GRP_Mnt2
+ 0.02575623945089 * GRP_Mnt3 + 0.0148719039037 * GRP_Mnt4 + -0.14622490571067 * GRP_Mnt5 +
-0.19294026942757 * GRP_Mnt6 + -0.00783114298777 * GRP_Mnt7 + 0.09174888699683 * GRP_Mnt8 +
-0.08601289398209 * GRP_Mnt9 + 0.21448453029375 * GRP_Mnt10 + 0.10697869967047 *
GRP_MntFishProducts3 + 0.06225775049469 * GRP_MntFishProducts4 + -0.01408797391558 *
GRP_MntFishProducts5 + 0.02848289613699 * GRP_MntFishProducts6 + 0.05325776779504 *
GRP_MntFishProducts7 + 0.02437321250069 * GRP_MntFishProducts8 + 0.2617858307061 *
GRP_MntFishProducts9 + -0.07319837564913 * GRP_MntFishProducts10 + -0.02161432541757 *
GRP_MntGoldProds2 + 0.19849470180453 * GRP_MntGoldProds3 + 0.08066760525249 *
GRP_MntGoldProds4 + 0.14331081076233 * GRP_MntGoldProds5 + 0.05943247571249 *
GRP_MntGoldProds6 + 0.0608061458335 * GRP_MntGoldProds7 + 0.05038235669624 * GRP_MntGoldProds8
+ -0.04685805642629 * GRP_MntGoldProds9 + -0.29152354570589 * GRP_MntGoldProds10 +
-0.39968469332087 * GRP_MntMeatProducts2 + -0.19201423289799 * GRP_MntMeatProducts3 +
-0.27560935050599 * GRP_MntMeatProducts4 + -0.0283731212244 * GRP_MntMeatProducts5 +
0.03960809803437 * GRP_MntMeatProducts6 + -0.18777726757179 * GRP_MntMeatProducts7 +
-0.05524894778392 * GRP_MntMeatProducts8 + 0.13594754762959 * GRP_MntMeatProducts9 +
0.43906108436269 * GRP_MntMeatProducts10 + -0.06435829145013 * GRP_MntSweetProducts3 +
-0.0210530647656 * GRP_MntSweetProducts4 + 0.12313868065999 * GRP_MntSweetProducts5 +
0.09312437748244 * GRP_MntSweetProducts6 + -0.12471463660639 * GRP_MntSweetProducts7 +
0.06602921514536 * GRP_MntSweetProducts8 + 0.08468927916869 * GRP_MntSweetProducts9 +
-0.13586571968305 * GRP_MntSweetProducts10 + 0.36708616844444 * GRP_MntWines2 +
0.10783294052251 * GRP_MntWines3 + 0.04439392359556 * GRP_MntWines4 + 0.03715965915951 *
GRP_MntWines5 + -0.03210586065209 * GRP_MntWines6 + 0.11894764415135 * GRP_MntWines7 +
-0.11667658986463 * GRP_MntWines8 + -0.00166194976989 * GRP_MntWines9 + -0.40981775275403 *
GRP_MntWines10 + -0.44861088264537 * GRP_NumCatalogPurchases3 + -0.16773306967441 *
GRP_NumCatalogPurchases4 + -0.09165932058272 * GRP_NumCatalogPurchases5 + 0.14298090214424 *
GRP_NumCatalogPurchases6 + -0.02734458137769 * GRP_NumCatalogPurchases7 + 0.08564176396946 *
GRP_NumDistPurchases2 + -0.04992946661847 * GRP_NumDistPurchases3 + -0.02597736910094 *
GRP_NumDistPurchases4 + -0.05061636893507 * GRP_NumDistPurchases5 + -0.03128813104108 *
GRP_NumDistPurchases6 + -0.13321401016342 * GRP_NumDistPurchases7 + -0.16916873887958 *
GRP_NumDistPurchases8 + 0.27222053253076 * GRP_NumDistPurchases9 + 0.31493873732485 *
GRP_NumDistPurchases10 + 0.00940915246846 * GRP_NumWebPurchases2 + -0.09454543870383 *
GRP_NumWebPurchases3 + 0.02354360806187 * GRP_NumWebPurchases4 + 0.0623848511153 *
GRP_NumWebPurchases5 + -0.14177656017556 * GRP_NumWebPurchases6 + -0.08722967193472 *
GRP_NumWebPurchases7 + 0.08762950710966 * GRP_NumWebPurchases8 + -0.02407598807456 *
GRP_NumWebVisitsMonth2 + -0.08734142313349 * GRP_NumWebVisitsMonth3 + -0.07761023656162 *
GRP_NumWebVisitsMonth4 + -0.1666467425177 * GRP_NumWebVisitsMonth5 + -0.08134770955005 *
GRP_NumWebVisitsMonth6 + 0.02327986356952 * GRP_NumWebVisitsMonth7 + 0.35444907806561 *
GRP_NumWebVisitsMonth8 + 0.09441161284057 * GRP_RFMstat2 + -0.1319671606322 * GRP_RFMstat3 +
0.02748981688883 * GRP_RFMstat4 + -0.11127405232643 * GRP_RFMstat5 + 0.02825604094962 *
GRP_RFMstat6 + -0.11039280017266 * GRP_RFMstat7 + -0.26019386650861 * GRP_RFMstat8 +
-0.21523161156313 * GRP_RFMstat9 + -0.03629252062158 * GRP_RFMstat10 + 0.15763266470046 *
GRP_RMntFrq2 + 0.08780054158661 * GRP_RMntFrq3 + 0.17890334374232 * GRP_RMntFrq4 +
0.19959789054927 * GRP_RMntFrq5 + -0.13310639896206 * GRP_RMntFrq6 + 0.02766923637797 *
GRP_RMntFrq7 + -0.00498872677557 * GRP_RMntFrq8 + 0.28068860472864 * GRP_RMntFrq9 +
-0.00625449404896 * GRP_RMntFrq10 + 0.14035437235589 * GRP_Recency2 + 0.21926411321176 *
GRP_Recency3 + 0.40977962900363 * GRP_Recency4 + -0.04780791117376 * GRP_Recency5 +
0.06447865348011 * GRP_Recency6 + 0.02645001728685 * GRP_Recency7 + -0.25500720229394 *
GRP_Recency8 + -0.33194208803227 * GRP_Recency9 + -0.37509931095396 * GRP_Recency10 ;
990894    +   H12  = H12  +    -0.00249283048209 * GRP_AcceptedCmp52
990895    +          +    -0.09776325087959 * GRP_AcceptedCmpTotal3
990896    +          +    -0.00891809516361 * GRP_Frq2  +     0.14615554769541 * GRP_Frq3
990897    +          +      0.1722454322885 * GRP_Frq4  +     0.09138515117743 * GRP_Frq5
990898    +          +     0.14064605711365 * GRP_Frq6  +       0.208609928829 * GRP_Frq7
990899    +          +     0.06763174841825 * GRP_Frq8  +    -0.16985550967141 * GRP_Frq9
990900    +          +    -0.30826093029849 * GRP_Frq10  +    -0.17205683871698 *
990901    +        GRP_Income2  +    -0.07552170179471 * GRP_Income3
990902    +          +    -0.08527885170211 * GRP_Income4  +     0.06185373635887 *
990903    +        GRP_Income5  +     0.00815930818625 * GRP_Income6
990904    +          +    -0.19329281237864 * GRP_Income7  +    -0.24838123961567 *
990905    +        GRP_Income8  +     -0.3451185715786 * GRP_Income9
990906    +          +    -0.06156031870187 * GRP_Income10  +     0.12646781621248 *
990907    +        GRP_Mnt2  +     0.20774819950358 * GRP_Mnt3  +     0.09336734204436 *
990908    +        GRP_Mnt4  +    -0.01383466332001 * GRP_Mnt5  +     0.00434172484009 *
990909    +        GRP_Mnt6  +    -0.09016745393613 * GRP_Mnt7  +     0.02434881276443 *
990910    +        GRP_Mnt8  +     0.10420387102641 * GRP_Mnt9  +     0.03849142222263 *
990911    +        GRP_Mnt10  +     0.00119020430694 * GRP_MntFishProducts3
990912    +          +    -0.04202232011311 * GRP_MntFishProducts4
990913    +          +     0.00471909191461 * GRP_MntFishProducts5
990914    +          +    -0.01341208106056 * GRP_MntFishProducts6
990915    +          +    -0.03381180366256 * GRP_MntFishProducts7
990916    +          +     0.07915179388389 * GRP_MntFishProducts8
990917    +          +     -0.2118274361441 * GRP_MntFishProducts9
990918    +          +     0.00900226925099 * GRP_MntFishProducts10
990919    +          +    -0.07254685103355 * GRP_MntGoldProds2
990920    +          +     0.07651956492684 * GRP_MntGoldProds3
990921    +          +      0.0379503877146 * GRP_MntGoldProds4
990922    +          +     -0.0143124128849 * GRP_MntGoldProds5
990923    +          +    -0.09371264388109 * GRP_MntGoldProds6
990924    +          +    -0.08979093146507 * GRP_MntGoldProds7
990925    +          +    -0.11428579149697 * GRP_MntGoldProds8
990926    +          +     0.02515117293126 * GRP_MntGoldProds9
990927    +          +     0.03958828108962 * GRP_MntGoldProds10
990928    +          +    -0.53525050445826 * GRP_MntMeatProducts2
990929    +          +    -0.38303217784514 * GRP_MntMeatProducts3
990930    +          +    -0.15105347636013 * GRP_MntMeatProducts4
990931    +          +    -0.12802941645278 * GRP_MntMeatProducts5
990932    +          +     0.10972081378946 * GRP_MntMeatProducts6
990933    +          +     0.22627684747763 * GRP_MntMeatProducts7
990934    +          +     0.23914993995125 * GRP_MntMeatProducts8
990935    +          +     0.21711314655121 * GRP_MntMeatProducts9
990936    +          +     0.17696755989253 * GRP_MntMeatProducts10
990937    +          +     0.01432518789616 * GRP_MntSweetProducts3
990938    +          +       0.112537640149 * GRP_MntSweetProducts4
990939    +          +     0.02389715897828 * GRP_MntSweetProducts5
990940    +          +    -0.05432364662019 * GRP_MntSweetProducts6
990941    +          +     0.12863266937677 * GRP_MntSweetProducts7
990942    +          +    -0.12170377984261 * GRP_MntSweetProducts8
990943    +          +    -0.15569754043078 * GRP_MntSweetProducts9
990944    +          +     0.11101814605488 * GRP_MntSweetProducts10
990945    +          +     0.26441611005377 * GRP_MntWines2  +     0.20796872121882 *
990946    +        GRP_MntWines3  +     0.18485529175745 * GRP_MntWines4
990947    +          +     0.20613815212747 * GRP_MntWines5  +    -0.08399507703703 *
990948    +        GRP_MntWines6  +    -0.12917024022546 * GRP_MntWines7
990949    +          +    -0.11831999499226 * GRP_MntWines8  +    -0.23794898937509 *
990950    +        GRP_MntWines9  +    -0.24100263717396 * GRP_MntWines10
990951    +          +    -0.64938371587273 * GRP_NumCatalogPurchases3
990952    +          +    -0.26502090013033 * GRP_NumCatalogPurchases4
990953    +          +     0.11962176026494 * GRP_NumCatalogPurchases5
990954    +          +     0.23744578086114 * GRP_NumCatalogPurchases6
990955    +          +     0.33203573078088 * GRP_NumCatalogPurchases7
990956    +          +     -0.1355753508144 * GRP_NumDistPurchases2
990957    +          +    -0.19902516536157 * GRP_NumDistPurchases3
990958    +          +     0.01617542872985 * GRP_NumDistPurchases4
990959    +          +     0.03558443617419 * GRP_NumDistPurchases5
990960    +          +     0.01694358499533 * GRP_NumDistPurchases6
990961    +          +    -0.03587174008246 * GRP_NumDistPurchases7
990962    +          +    -0.13059687132935 * GRP_NumDistPurchases8
990963    +          +    -0.00261084476059 * GRP_NumDistPurchases9
990964    +          +     0.03959312715152 * GRP_NumDistPurchases10
990965    +          +    -0.00699065524457 * GRP_NumWebPurchases2
990966    +          +     0.08645828622182 * GRP_NumWebPurchases3
990967    +          +     0.06137932095071 * GRP_NumWebPurchases4
990968    +          +     0.04397086481384 * GRP_NumWebPurchases5
990969    +          +     0.03939129656232 * GRP_NumWebPurchases6
990970    +          +      0.0761710872424 * GRP_NumWebPurchases7
990971    +          +    -0.18535375992005 * GRP_NumWebPurchases8
990972    +          +    -0.37974326775206 * GRP_NumWebVisitsMonth2
990973    +          +    -0.21664462893373 * GRP_NumWebVisitsMonth3
990974    +          +    -0.29354965662623 * GRP_NumWebVisitsMonth4
990975    +          +     0.05912309691805 * GRP_NumWebVisitsMonth5
990976    +          +     0.00336298282733 * GRP_NumWebVisitsMonth6
990977    +          +     0.18685442551954 * GRP_NumWebVisitsMonth7
990978    +          +     0.07672545849498 * GRP_NumWebVisitsMonth8
990979    +          +    -0.07207149498011 * GRP_RFMstat2  +    -0.15950305183546 *
990980    +        GRP_RFMstat3  +    -0.04769364516978 * GRP_RFMstat4
990981    +          +    -0.00882390888626 * GRP_RFMstat5  +    -0.07661006142272 *
990982    +        GRP_RFMstat6  +     0.10619202272066 * GRP_RFMstat7
990983    +          +     0.12781265381966 * GRP_RFMstat8  +    -0.06589954645466 *
990984    +        GRP_RFMstat9  +      0.0920076477391 * GRP_RFMstat10
990985    +          +     0.22417426812948 * GRP_RMntFrq2  +     0.12308955447252 *
990986    +        GRP_RMntFrq3  +     -0.0709096722458 * GRP_RMntFrq4
990987    +          +    -0.09665324906445 * GRP_RMntFrq5  +     0.05404802941496 *
990988    +        GRP_RMntFrq6  +     -0.2773732279586 * GRP_RMntFrq7
990989    +          +    -0.30308069179408 * GRP_RMntFrq8  +    -0.11423475800051 *
990990    +        GRP_RMntFrq9  +    -0.00207097504576 * GRP_RMntFrq10
990991    +          +     0.48750564548185 * GRP_Recency2  +     0.33320222570381 *
990992    +        GRP_Recency3  +     0.24796788740541 * GRP_Recency4
990993    +          +     0.24418511158274 * GRP_Recency5  +     0.04836980441754 *
990994    +        GRP_Recency6  +     0.00192843617184 * GRP_Recency7
990995    +          +    -0.09040437561133 * GRP_Recency8  +    -0.13695951196499 *
990996    +        GRP_Recency9  +    -0.38555406809777 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00249283048209 * GRP_AcceptedCmp52 + -0.09776325087959 *
GRP_AcceptedCmpTotal3 + -0.00891809516361 * GRP_Frq2 + 0.14615554769541 * GRP_Frq3 +
0.1722454322885 * GRP_Frq4 + 0.09138515117743 * GRP_Frq5 + 0.14064605711365 * GRP_Frq6 +
0.208609928829 * GRP_Frq7 + 0.06763174841825 * GRP_Frq8 + -0.16985550967141 * GRP_Frq9 +
-0.30826093029849 * GRP_Frq10 + -0.17205683871698 * GRP_Income2 + -0.07552170179471 *
GRP_Income3 + -0.08527885170211 * GRP_Income4 + 0.06185373635887 * GRP_Income5 +
0.00815930818625 * GRP_Income6 + -0.19329281237864 * GRP_Income7 + -0.24838123961567 *
GRP_Income8 + -0.3451185715786 * GRP_Income9 + -0.06156031870187 * GRP_Income10 +
0.12646781621248 * GRP_Mnt2 + 0.20774819950358 * GRP_Mnt3 + 0.09336734204436 * GRP_Mnt4 +
-0.01383466332001 * GRP_Mnt5 + 0.00434172484009 * GRP_Mnt6 + -0.09016745393613 * GRP_Mnt7 +
0.02434881276443 * GRP_Mnt8 + 0.10420387102641 * GRP_Mnt9 + 0.03849142222263 * GRP_Mnt10 +
0.00119020430694 * GRP_MntFishProducts3 + -0.04202232011311 * GRP_MntFishProducts4 +
0.00471909191461 * GRP_MntFishProducts5 + -0.01341208106056 * GRP_MntFishProducts6 +
-0.03381180366256 * GRP_MntFishProducts7 + 0.07915179388389 * GRP_MntFishProducts8 +
-0.2118274361441 * GRP_MntFishProducts9 + 0.00900226925099 * GRP_MntFishProducts10 +
-0.07254685103355 * GRP_MntGoldProds2 + 0.07651956492684 * GRP_MntGoldProds3 + 0.0379503877146
* GRP_MntGoldProds4 + -0.0143124128849 * GRP_MntGoldProds5 + -0.09371264388109 *
GRP_MntGoldProds6 + -0.08979093146507 * GRP_MntGoldProds7 + -0.11428579149697 *
GRP_MntGoldProds8 + 0.02515117293126 * GRP_MntGoldProds9 + 0.03958828108962 *
GRP_MntGoldProds10 + -0.53525050445826 * GRP_MntMeatProducts2 + -0.38303217784514 *
GRP_MntMeatProducts3 + -0.15105347636013 * GRP_MntMeatProducts4 + -0.12802941645278 *
GRP_MntMeatProducts5 + 0.10972081378946 * GRP_MntMeatProducts6 + 0.22627684747763 *
GRP_MntMeatProducts7 + 0.23914993995125 * GRP_MntMeatProducts8 + 0.21711314655121 *
GRP_MntMeatProducts9 + 0.17696755989253 * GRP_MntMeatProducts10 + 0.01432518789616 *
GRP_MntSweetProducts3 + 0.112537640149 * GRP_MntSweetProducts4 + 0.02389715897828 *
GRP_MntSweetProducts5 + -0.05432364662019 * GRP_MntSweetProducts6 + 0.12863266937677 *
GRP_MntSweetProducts7 + -0.12170377984261 * GRP_MntSweetProducts8 + -0.15569754043078 *
GRP_MntSweetProducts9 + 0.11101814605488 * GRP_MntSweetProducts10 + 0.26441611005377 *
GRP_MntWines2 + 0.20796872121882 * GRP_MntWines3 + 0.18485529175745 * GRP_MntWines4 +
0.20613815212747 * GRP_MntWines5 + -0.08399507703703 * GRP_MntWines6 + -0.12917024022546 *
GRP_MntWines7 + -0.11831999499226 * GRP_MntWines8 + -0.23794898937509 * GRP_MntWines9 +
-0.24100263717396 * GRP_MntWines10 + -0.64938371587273 * GRP_NumCatalogPurchases3 +
-0.26502090013033 * GRP_NumCatalogPurchases4 + 0.11962176026494 * GRP_NumCatalogPurchases5 +
0.23744578086114 * GRP_NumCatalogPurchases6 + 0.33203573078088 * GRP_NumCatalogPurchases7 +
-0.1355753508144 * GRP_NumDistPurchases2 + -0.19902516536157 * GRP_NumDistPurchases3 +
0.01617542872985 * GRP_NumDistPurchases4 + 0.03558443617419 * GRP_NumDistPurchases5 +
0.01694358499533 * GRP_NumDistPurchases6 + -0.03587174008246 * GRP_NumDistPurchases7 +
-0.13059687132935 * GRP_NumDistPurchases8 + -0.00261084476059 * GRP_NumDistPurchases9 +
0.03959312715152 * GRP_NumDistPurchases10 + -0.00699065524457 * GRP_NumWebPurchases2 +
0.08645828622182 * GRP_NumWebPurchases3 + 0.06137932095071 * GRP_NumWebPurchases4 +
0.04397086481384 * GRP_NumWebPurchases5 + 0.03939129656232 * GRP_NumWebPurchases6 +
0.0761710872424 * GRP_NumWebPurchases7 + -0.18535375992005 * GRP_NumWebPurchases8 +
-0.37974326775206 * GRP_NumWebVisitsMonth2 + -0.21664462893373 * GRP_NumWebVisitsMonth3 +
-0.29354965662623 * GRP_NumWebVisitsMonth4 + 0.05912309691805 * GRP_NumWebVisitsMonth5 +
0.00336298282733 * GRP_NumWebVisitsMonth6 + 0.18685442551954 * GRP_NumWebVisitsMonth7 +
0.07672545849498 * GRP_NumWebVisitsMonth8 + -0.07207149498011 * GRP_RFMstat2 +
-0.15950305183546 * GRP_RFMstat3 + -0.04769364516978 * GRP_RFMstat4 + -0.00882390888626 *
GRP_RFMstat5 + -0.07661006142272 * GRP_RFMstat6 + 0.10619202272066 * GRP_RFMstat7 +
0.12781265381966 * GRP_RFMstat8 + -0.06589954645466 * GRP_RFMstat9 + 0.0920076477391 *
GRP_RFMstat10 + 0.22417426812948 * GRP_RMntFrq2 + 0.12308955447252 * GRP_RMntFrq3 +
-0.0709096722458 * GRP_RMntFrq4 + -0.09665324906445 * GRP_RMntFrq5 + 0.05404802941496 *
GRP_RMntFrq6 + -0.2773732279586 * GRP_RMntFrq7 + -0.30308069179408 * GRP_RMntFrq8 +
-0.11423475800051 * GRP_RMntFrq9 + -0.00207097504576 * GRP_RMntFrq10 + 0.48750564548185 *
GRP_Recency2 + 0.33320222570381 * GRP_Recency3 + 0.24796788740541 * GRP_Recency4 +
0.24418511158274 * GRP_Recency5 + 0.04836980441754 * GRP_Recency6 + 0.00192843617184 *
GRP_Recency7 + -0.09040437561133 * GRP_Recency8 + -0.13695951196499 * GRP_Recency9 +
-0.38555406809777 * GRP_Recency10 ;
990997    +   H13  = H13  +    -0.23975949521409 * GRP_AcceptedCmp52
990998    +          +    -0.15038912427149 * GRP_AcceptedCmpTotal3
990999    +          +    -0.02639019894622 * GRP_Frq2  +      0.0209879343907 * GRP_Frq3
991000    +          +    -0.04701151124137 * GRP_Frq4  +     0.21097277354199 * GRP_Frq5
991001    +          +     0.12012227863902 * GRP_Frq6  +    -0.07421032341607 * GRP_Frq7
991002    +          +     0.19658431807083 * GRP_Frq8  +    -0.05226562615755 * GRP_Frq9
991003    +          +     0.05597653780122 * GRP_Frq10  +     0.17120341383362 *
991004    +        GRP_Income2  +     0.09812054914141 * GRP_Income3
991005    +          +     0.15644165989621 * GRP_Income4  +     0.04090465657337 *
991006    +        GRP_Income5  +     0.14854142220811 * GRP_Income6
991007    +          +     0.10518345156393 * GRP_Income7  +     0.07639614158562 *
991008    +        GRP_Income8  +     0.17046626234482 * GRP_Income9
991009    +          +     0.03825262112761 * GRP_Income10  +    -0.06766465427377 *
991010    +        GRP_Mnt2  +    -0.08563392300903 * GRP_Mnt3  +    -0.21787222756548 *
991011    +        GRP_Mnt4  +     0.01899823791029 * GRP_Mnt5  +     0.05967271085466 *
991012    +        GRP_Mnt6  +    -0.12499644228381 * GRP_Mnt7  +    -0.14435081412155 *
991013    +        GRP_Mnt8  +    -0.14252043260208 * GRP_Mnt9  +    -0.08323850676532 *
991014    +        GRP_Mnt10  +     0.04114477269411 * GRP_MntFishProducts3
991015    +          +     0.09893856338637 * GRP_MntFishProducts4
991016    +          +      0.1385215809505 * GRP_MntFishProducts5
991017    +          +    -0.14638498466154 * GRP_MntFishProducts6
991018    +          +    -0.00648777978091 * GRP_MntFishProducts7
991019    +          +     0.10782473267799 * GRP_MntFishProducts8
991020    +          +     0.13001972812092 * GRP_MntFishProducts9
991021    +          +    -0.15664721122766 * GRP_MntFishProducts10
991022    +          +     0.06207283716621 * GRP_MntGoldProds2
991023    +          +    -0.16540502618932 * GRP_MntGoldProds3
991024    +          +    -0.00419113426167 * GRP_MntGoldProds4
991025    +          +    -0.15616562124594 * GRP_MntGoldProds5
991026    +          +     0.19299597306567 * GRP_MntGoldProds6
991027    +          +     0.06014052355635 * GRP_MntGoldProds7
991028    +          +    -0.04575999486456 * GRP_MntGoldProds8
991029    +          +      0.0095752569809 * GRP_MntGoldProds9
991030    +          +    -0.05949014660438 * GRP_MntGoldProds10
991031    +          +    -0.19601970187904 * GRP_MntMeatProducts2
991032    +          +    -0.05185736813653 * GRP_MntMeatProducts3
991033    +          +    -0.09619773384577 * GRP_MntMeatProducts4
991034    +          +    -0.01027665288868 * GRP_MntMeatProducts5
991035    +          +    -0.07620773034876 * GRP_MntMeatProducts6
991036    +          +    -0.21888659802114 * GRP_MntMeatProducts7
991037    +          +     0.09136355079296 * GRP_MntMeatProducts8
991038    +          +    -0.03462987847874 * GRP_MntMeatProducts9
991039    +          +      0.2033242827681 * GRP_MntMeatProducts10
991040    +          +    -0.03870314975231 * GRP_MntSweetProducts3
991041    +          +     0.02833274507907 * GRP_MntSweetProducts4
991042    +          +    -0.14006037291884 * GRP_MntSweetProducts5
991043    +          +     0.02172045500272 * GRP_MntSweetProducts6
991044    +          +     0.10356823396614 * GRP_MntSweetProducts7
991045    +          +     0.19721738077737 * GRP_MntSweetProducts8
991046    +          +    -0.04378585782125 * GRP_MntSweetProducts9
991047    +          +     0.08558224507445 * GRP_MntSweetProducts10
991048    +          +     0.18750621323673 * GRP_MntWines2  +     0.20631370991164 *
991049    +        GRP_MntWines3  +     0.18264845188539 * GRP_MntWines4
991050    +          +     0.19517731981032 * GRP_MntWines5  +      0.3172348878549 *
991051    +        GRP_MntWines6  +     -0.0700174737681 * GRP_MntWines7
991052    +          +    -0.13433821831179 * GRP_MntWines8  +    -0.18525074858401 *
991053    +        GRP_MntWines9  +    -0.00462918646351 * GRP_MntWines10
991054    +          +    -0.26862743551871 * GRP_NumCatalogPurchases3
991055    +          +     -0.1922446276115 * GRP_NumCatalogPurchases4
991056    +          +    -0.14822362894342 * GRP_NumCatalogPurchases5
991057    +          +    -0.04052742965098 * GRP_NumCatalogPurchases6
991058    +          +     0.21101352511891 * GRP_NumCatalogPurchases7
991059    +          +    -0.09588775463072 * GRP_NumDistPurchases2
991060    +          +    -0.15658252158004 * GRP_NumDistPurchases3
991061    +          +      0.0013743090184 * GRP_NumDistPurchases4
991062    +          +    -0.11554368014443 * GRP_NumDistPurchases5
991063    +          +     0.07423244034811 * GRP_NumDistPurchases6
991064    +          +     0.05834805090718 * GRP_NumDistPurchases7
991065    +          +    -0.12463576132288 * GRP_NumDistPurchases8
991066    +          +    -0.03179189812652 * GRP_NumDistPurchases9
991067    +          +     0.01279300331344 * GRP_NumDistPurchases10
991068    +          +    -0.05148868227287 * GRP_NumWebPurchases2
991069    +          +       0.126407567911 * GRP_NumWebPurchases3
991070    +          +    -0.07384834706894 * GRP_NumWebPurchases4
991071    +          +     0.20664248870859 * GRP_NumWebPurchases5
991072    +          +     0.12584364051888 * GRP_NumWebPurchases6
991073    +          +    -0.07856262149859 * GRP_NumWebPurchases7
991074    +          +     -0.0421904538227 * GRP_NumWebPurchases8
991075    +          +    -0.39807813413922 * GRP_NumWebVisitsMonth2
991076    +          +    -0.41818221692382 * GRP_NumWebVisitsMonth3
991077    +          +    -0.10842629005668 * GRP_NumWebVisitsMonth4
991078    +          +     0.04070704103804 * GRP_NumWebVisitsMonth5
991079    +          +     0.14449276979575 * GRP_NumWebVisitsMonth6
991080    +          +    -0.03455833946004 * GRP_NumWebVisitsMonth7
991081    +          +      0.2795681557571 * GRP_NumWebVisitsMonth8
991082    +          +    -0.11584512993649 * GRP_RFMstat2  +    -0.08000771454672 *
991083    +        GRP_RFMstat3  +     0.15435047581932 * GRP_RFMstat4
991084    +          +     0.15639777401667 * GRP_RFMstat5  +     0.13653913265734 *
991085    +        GRP_RFMstat6  +     0.01738099885837 * GRP_RFMstat7
991086    +          +    -0.09833460018931 * GRP_RFMstat8  +      0.1824870541175 *
991087    +        GRP_RFMstat9  +    -0.06768797179234 * GRP_RFMstat10
991088    +          +     0.12594211084791 * GRP_RMntFrq2  +    -0.01760788766872 *
991089    +        GRP_RMntFrq3  +     0.17892049391542 * GRP_RMntFrq4
991090    +          +      0.0600208306946 * GRP_RMntFrq5  +    -0.01237732322599 *
991091    +        GRP_RMntFrq6  +     0.05686770073947 * GRP_RMntFrq7
991092    +          +     0.02731624688039 * GRP_RMntFrq8  +     0.00340498223629 *
991093    +        GRP_RMntFrq9  +    -0.22067101016209 * GRP_RMntFrq10
991094    +          +      0.2098710117924 * GRP_Recency2  +     0.14903439860077 *
991095    +        GRP_Recency3  +     0.13401249348315 * GRP_Recency4
991096    +          +     0.07298641932791 * GRP_Recency5  +    -0.06050660489562 *
991097    +        GRP_Recency6  +    -0.09715484342683 * GRP_Recency7
991098    +          +    -0.07334022459066 * GRP_Recency8  +     0.08622885824343 *
991099    +        GRP_Recency9  +    -0.14521252633207 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23975949521409 * GRP_AcceptedCmp52 + -0.15038912427149 *
GRP_AcceptedCmpTotal3 + -0.02639019894622 * GRP_Frq2 + 0.0209879343907 * GRP_Frq3 +
-0.04701151124137 * GRP_Frq4 + 0.21097277354199 * GRP_Frq5 + 0.12012227863902 * GRP_Frq6 +
-0.07421032341607 * GRP_Frq7 + 0.19658431807083 * GRP_Frq8 + -0.05226562615755 * GRP_Frq9 +
0.05597653780122 * GRP_Frq10 + 0.17120341383362 * GRP_Income2 + 0.09812054914141 * GRP_Income3
+ 0.15644165989621 * GRP_Income4 + 0.04090465657337 * GRP_Income5 + 0.14854142220811 *
GRP_Income6 + 0.10518345156393 * GRP_Income7 + 0.07639614158562 * GRP_Income8 +
0.17046626234482 * GRP_Income9 + 0.03825262112761 * GRP_Income10 + -0.06766465427377 *
GRP_Mnt2 + -0.08563392300903 * GRP_Mnt3 + -0.21787222756548 * GRP_Mnt4 + 0.01899823791029 *
GRP_Mnt5 + 0.05967271085466 * GRP_Mnt6 + -0.12499644228381 * GRP_Mnt7 + -0.14435081412155 *
GRP_Mnt8 + -0.14252043260208 * GRP_Mnt9 + -0.08323850676532 * GRP_Mnt10 + 0.04114477269411 *
GRP_MntFishProducts3 + 0.09893856338637 * GRP_MntFishProducts4 + 0.1385215809505 *
GRP_MntFishProducts5 + -0.14638498466154 * GRP_MntFishProducts6 + -0.00648777978091 *
GRP_MntFishProducts7 + 0.10782473267799 * GRP_MntFishProducts8 + 0.13001972812092 *
GRP_MntFishProducts9 + -0.15664721122766 * GRP_MntFishProducts10 + 0.06207283716621 *
GRP_MntGoldProds2 + -0.16540502618932 * GRP_MntGoldProds3 + -0.00419113426167 *
GRP_MntGoldProds4 + -0.15616562124594 * GRP_MntGoldProds5 + 0.19299597306567 *
GRP_MntGoldProds6 + 0.06014052355635 * GRP_MntGoldProds7 + -0.04575999486456 *
GRP_MntGoldProds8 + 0.0095752569809 * GRP_MntGoldProds9 + -0.05949014660438 *
GRP_MntGoldProds10 + -0.19601970187904 * GRP_MntMeatProducts2 + -0.05185736813653 *
GRP_MntMeatProducts3 + -0.09619773384577 * GRP_MntMeatProducts4 + -0.01027665288868 *
GRP_MntMeatProducts5 + -0.07620773034876 * GRP_MntMeatProducts6 + -0.21888659802114 *
GRP_MntMeatProducts7 + 0.09136355079296 * GRP_MntMeatProducts8 + -0.03462987847874 *
GRP_MntMeatProducts9 + 0.2033242827681 * GRP_MntMeatProducts10 + -0.03870314975231 *
GRP_MntSweetProducts3 + 0.02833274507907 * GRP_MntSweetProducts4 + -0.14006037291884 *
GRP_MntSweetProducts5 + 0.02172045500272 * GRP_MntSweetProducts6 + 0.10356823396614 *
GRP_MntSweetProducts7 + 0.19721738077737 * GRP_MntSweetProducts8 + -0.04378585782125 *
GRP_MntSweetProducts9 + 0.08558224507445 * GRP_MntSweetProducts10 + 0.18750621323673 *
GRP_MntWines2 + 0.20631370991164 * GRP_MntWines3 + 0.18264845188539 * GRP_MntWines4 +
0.19517731981032 * GRP_MntWines5 + 0.3172348878549 * GRP_MntWines6 + -0.0700174737681 *
GRP_MntWines7 + -0.13433821831179 * GRP_MntWines8 + -0.18525074858401 * GRP_MntWines9 +
-0.00462918646351 * GRP_MntWines10 + -0.26862743551871 * GRP_NumCatalogPurchases3 +
-0.1922446276115 * GRP_NumCatalogPurchases4 + -0.14822362894342 * GRP_NumCatalogPurchases5 +
-0.04052742965098 * GRP_NumCatalogPurchases6 + 0.21101352511891 * GRP_NumCatalogPurchases7 +
-0.09588775463072 * GRP_NumDistPurchases2 + -0.15658252158004 * GRP_NumDistPurchases3 +
0.0013743090184 * GRP_NumDistPurchases4 + -0.11554368014443 * GRP_NumDistPurchases5 +
0.07423244034811 * GRP_NumDistPurchases6 + 0.05834805090718 * GRP_NumDistPurchases7 +
-0.12463576132288 * GRP_NumDistPurchases8 + -0.03179189812652 * GRP_NumDistPurchases9 +
0.01279300331344 * GRP_NumDistPurchases10 + -0.05148868227287 * GRP_NumWebPurchases2 +
0.126407567911 * GRP_NumWebPurchases3 + -0.07384834706894 * GRP_NumWebPurchases4 +
0.20664248870859 * GRP_NumWebPurchases5 + 0.12584364051888 * GRP_NumWebPurchases6 +
-0.07856262149859 * GRP_NumWebPurchases7 + -0.0421904538227 * GRP_NumWebPurchases8 +
-0.39807813413922 * GRP_NumWebVisitsMonth2 + -0.41818221692382 * GRP_NumWebVisitsMonth3 +
-0.10842629005668 * GRP_NumWebVisitsMonth4 + 0.04070704103804 * GRP_NumWebVisitsMonth5 +
0.14449276979575 * GRP_NumWebVisitsMonth6 + -0.03455833946004 * GRP_NumWebVisitsMonth7 +
0.2795681557571 * GRP_NumWebVisitsMonth8 + -0.11584512993649 * GRP_RFMstat2 +
-0.08000771454672 * GRP_RFMstat3 + 0.15435047581932 * GRP_RFMstat4 + 0.15639777401667 *
GRP_RFMstat5 + 0.13653913265734 * GRP_RFMstat6 + 0.01738099885837 * GRP_RFMstat7 +
-0.09833460018931 * GRP_RFMstat8 + 0.1824870541175 * GRP_RFMstat9 + -0.06768797179234 *
GRP_RFMstat10 + 0.12594211084791 * GRP_RMntFrq2 + -0.01760788766872 * GRP_RMntFrq3 +
0.17892049391542 * GRP_RMntFrq4 + 0.0600208306946 * GRP_RMntFrq5 + -0.01237732322599 *
GRP_RMntFrq6 + 0.05686770073947 * GRP_RMntFrq7 + 0.02731624688039 * GRP_RMntFrq8 +
0.00340498223629 * GRP_RMntFrq9 + -0.22067101016209 * GRP_RMntFrq10 + 0.2098710117924 *
GRP_Recency2 + 0.14903439860077 * GRP_Recency3 + 0.13401249348315 * GRP_Recency4 +
0.07298641932791 * GRP_Recency5 + -0.06050660489562 * GRP_Recency6 + -0.09715484342683 *
GRP_Recency7 + -0.07334022459066 * GRP_Recency8 + 0.08622885824343 * GRP_Recency9 +
-0.14521252633207 * GRP_Recency10 ;
991100    +   H14  = H14  +     0.09775139014406 * GRP_AcceptedCmp52
991101    +          +    -0.05185326111457 * GRP_AcceptedCmpTotal3
991102    +          +     0.06346844628454 * GRP_Frq2  +    -0.12509273928412 * GRP_Frq3
991103    +          +    -0.09198262128828 * GRP_Frq4  +    -0.01182504550004 * GRP_Frq5
991104    +          +      -0.056768207716 * GRP_Frq6  +    -0.16132581110621 * GRP_Frq7
991105    +          +    -0.04959596102282 * GRP_Frq8  +    -0.04567484157076 * GRP_Frq9
991106    +          +    -0.19802300351641 * GRP_Frq10  +      0.0752413635351 *
991107    +        GRP_Income2  +     0.00476632282991 * GRP_Income3
991108    +          +     0.06457401869132 * GRP_Income4  +     0.17338522672456 *
991109    +        GRP_Income5  +     0.05634925985236 * GRP_Income6
991110    +          +    -0.04324886540049 * GRP_Income7  +     0.12151783797002 *
991111    +        GRP_Income8  +     0.05164926456192 * GRP_Income9
991112    +          +     0.00485439723946 * GRP_Income10  +     0.15110097357718 *
991113    +        GRP_Mnt2  +     0.09865119271264 * GRP_Mnt3  +    -0.00511534178899 *
991114    +        GRP_Mnt4  +    -0.05719362330008 * GRP_Mnt5  +     0.02913562361493 *
991115    +        GRP_Mnt6  +     0.13642412041981 * GRP_Mnt7  +      0.0644852158438 *
991116    +        GRP_Mnt8  +     0.11260528545055 * GRP_Mnt9  +    -0.04836232783362 *
991117    +        GRP_Mnt10  +    -0.10704879727804 * GRP_MntFishProducts3
991118    +          +    -0.10246133021659 * GRP_MntFishProducts4
991119    +          +     0.07511280205792 * GRP_MntFishProducts5
991120    +          +     0.05316490785199 * GRP_MntFishProducts6
991121    +          +    -0.08700716569909 * GRP_MntFishProducts7
991122    +          +    -0.09682177985634 * GRP_MntFishProducts8
991123    +          +     0.07439756883922 * GRP_MntFishProducts9
991124    +          +     0.00446074450706 * GRP_MntFishProducts10
991125    +          +    -0.09001143924347 * GRP_MntGoldProds2
991126    +          +     0.01609312672536 * GRP_MntGoldProds3
991127    +          +     0.07035469032678 * GRP_MntGoldProds4
991128    +          +     0.00711603846698 * GRP_MntGoldProds5
991129    +          +    -0.04068446183089 * GRP_MntGoldProds6
991130    +          +     0.15395481242479 * GRP_MntGoldProds7
991131    +          +    -0.11308236846443 * GRP_MntGoldProds8
991132    +          +    -0.03537344566096 * GRP_MntGoldProds9
991133    +          +     0.06051838016414 * GRP_MntGoldProds10
991134    +          +      0.2035141766276 * GRP_MntMeatProducts2
991135    +          +     0.11278969513967 * GRP_MntMeatProducts3
991136    +          +     0.04661931313376 * GRP_MntMeatProducts4
991137    +          +     0.16452320933838 * GRP_MntMeatProducts5
991138    +          +     0.10770184592821 * GRP_MntMeatProducts6
991139    +          +     0.13901339765753 * GRP_MntMeatProducts7
991140    +          +    -0.05190887812163 * GRP_MntMeatProducts8
991141    +          +     0.01954217936532 * GRP_MntMeatProducts9
991142    +          +     0.03332801536639 * GRP_MntMeatProducts10
991143    +          +     0.08361196701406 * GRP_MntSweetProducts3
991144    +          +     0.12046863267625 * GRP_MntSweetProducts4
991145    +          +    -0.06960624989657 * GRP_MntSweetProducts5
991146    +          +     0.02528342548299 * GRP_MntSweetProducts6
991147    +          +     0.06650097777299 * GRP_MntSweetProducts7
991148    +          +     0.11859111222476 * GRP_MntSweetProducts8
991149    +          +    -0.06554622682799 * GRP_MntSweetProducts9
991150    +          +     0.21001957500605 * GRP_MntSweetProducts10
991151    +          +     0.00731755704127 * GRP_MntWines2  +    -0.13735139324497 *
991152    +        GRP_MntWines3  +    -0.04158270471567 * GRP_MntWines4
991153    +          +     0.07926049065675 * GRP_MntWines5  +    -0.02429458037724 *
991154    +        GRP_MntWines6  +     -0.1282166172913 * GRP_MntWines7
991155    +          +    -0.08677752910806 * GRP_MntWines8  +     0.07540797934238 *
991156    +        GRP_MntWines9  +     0.17493983229139 * GRP_MntWines10
991157    +          +     -0.0713614079649 * GRP_NumCatalogPurchases3
991158    +          +     0.04023033957679 * GRP_NumCatalogPurchases4
991159    +          +     0.05335371946994 * GRP_NumCatalogPurchases5
991160    +          +    -0.04900718695282 * GRP_NumCatalogPurchases6
991161    +          +    -0.02899204623539 * GRP_NumCatalogPurchases7
991162    +          +     0.03938478596542 * GRP_NumDistPurchases2
991163    +          +    -0.11842065825647 * GRP_NumDistPurchases3
991164    +          +     0.12810519506777 * GRP_NumDistPurchases4
991165    +          +     0.03251975367652 * GRP_NumDistPurchases5
991166    +          +    -0.20095019460601 * GRP_NumDistPurchases6
991167    +          +     0.10812326965005 * GRP_NumDistPurchases7
991168    +          +      0.0287453988047 * GRP_NumDistPurchases8
991169    +          +     -0.0969283103509 * GRP_NumDistPurchases9
991170    +          +    -0.16520433255669 * GRP_NumDistPurchases10
991171    +          +    -0.05852836521422 * GRP_NumWebPurchases2
991172    +          +    -0.09748986581637 * GRP_NumWebPurchases3
991173    +          +     -0.1035732808226 * GRP_NumWebPurchases4
991174    +          +    -0.02657669178935 * GRP_NumWebPurchases5
991175    +          +    -0.14302610588281 * GRP_NumWebPurchases6
991176    +          +    -0.02401715848443 * GRP_NumWebPurchases7
991177    +          +    -0.00665464700774 * GRP_NumWebPurchases8
991178    +          +     0.10779106619083 * GRP_NumWebVisitsMonth2
991179    +          +    -0.02984428486672 * GRP_NumWebVisitsMonth3
991180    +          +     0.13778787733685 * GRP_NumWebVisitsMonth4
991181    +          +     0.00802707801664 * GRP_NumWebVisitsMonth5
991182    +          +    -0.16625282394015 * GRP_NumWebVisitsMonth6
991183    +          +     0.10106887697617 * GRP_NumWebVisitsMonth7
991184    +          +    -0.08824472498437 * GRP_NumWebVisitsMonth8
991185    +          +    -0.03526513082645 * GRP_RFMstat2  +     0.10283156836959 *
991186    +        GRP_RFMstat3  +    -0.01757421618587 * GRP_RFMstat4
991187    +          +     0.14132635365523 * GRP_RFMstat5  +    -0.03672768186133 *
991188    +        GRP_RFMstat6  +     0.00258056988376 * GRP_RFMstat7
991189    +          +     0.05732533278238 * GRP_RFMstat8  +    -0.11555107353955 *
991190    +        GRP_RFMstat9  +     0.13078950712504 * GRP_RFMstat10
991191    +          +     0.06981855039942 * GRP_RMntFrq2  +     -0.0674188031774 *
991192    +        GRP_RMntFrq3  +     0.01403624484254 * GRP_RMntFrq4
991193    +          +     0.15675245151505 * GRP_RMntFrq5  +     0.02655321401599 *
991194    +        GRP_RMntFrq6  +     0.19673158757121 * GRP_RMntFrq7
991195    +          +    -0.07596120973163 * GRP_RMntFrq8  +    -0.02098873085179 *
991196    +        GRP_RMntFrq9  +     0.05038094121628 * GRP_RMntFrq10
991197    +          +     0.06723803817114 * GRP_Recency2  +    -0.05982635501022 *
991198    +        GRP_Recency3  +    -0.08002228635654 * GRP_Recency4
991199    +          +     -0.0814806856315 * GRP_Recency5  +     -0.0111860674205 *
991200    +        GRP_Recency6  +     0.14684736173087 * GRP_Recency7
991201    +          +     0.03782442851658 * GRP_Recency8  +     0.27840617851866 *
991202    +        GRP_Recency9  +     0.06367048710928 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09775139014406 * GRP_AcceptedCmp52 + -0.05185326111457 *
GRP_AcceptedCmpTotal3 + 0.06346844628454 * GRP_Frq2 + -0.12509273928412 * GRP_Frq3 +
-0.09198262128828 * GRP_Frq4 + -0.01182504550004 * GRP_Frq5 + -0.056768207716 * GRP_Frq6 +
-0.16132581110621 * GRP_Frq7 + -0.04959596102282 * GRP_Frq8 + -0.04567484157076 * GRP_Frq9 +
-0.19802300351641 * GRP_Frq10 + 0.0752413635351 * GRP_Income2 + 0.00476632282991 * GRP_Income3
+ 0.06457401869132 * GRP_Income4 + 0.17338522672456 * GRP_Income5 + 0.05634925985236 *
GRP_Income6 + -0.04324886540049 * GRP_Income7 + 0.12151783797002 * GRP_Income8 +
0.05164926456192 * GRP_Income9 + 0.00485439723946 * GRP_Income10 + 0.15110097357718 * GRP_Mnt2
+ 0.09865119271264 * GRP_Mnt3 + -0.00511534178899 * GRP_Mnt4 + -0.05719362330008 * GRP_Mnt5 +
0.02913562361493 * GRP_Mnt6 + 0.13642412041981 * GRP_Mnt7 + 0.0644852158438 * GRP_Mnt8 +
0.11260528545055 * GRP_Mnt9 + -0.04836232783362 * GRP_Mnt10 + -0.10704879727804 *
GRP_MntFishProducts3 + -0.10246133021659 * GRP_MntFishProducts4 + 0.07511280205792 *
GRP_MntFishProducts5 + 0.05316490785199 * GRP_MntFishProducts6 + -0.08700716569909 *
GRP_MntFishProducts7 + -0.09682177985634 * GRP_MntFishProducts8 + 0.07439756883922 *
GRP_MntFishProducts9 + 0.00446074450706 * GRP_MntFishProducts10 + -0.09001143924347 *
GRP_MntGoldProds2 + 0.01609312672536 * GRP_MntGoldProds3 + 0.07035469032678 *
GRP_MntGoldProds4 + 0.00711603846698 * GRP_MntGoldProds5 + -0.04068446183089 *
GRP_MntGoldProds6 + 0.15395481242479 * GRP_MntGoldProds7 + -0.11308236846443 *
GRP_MntGoldProds8 + -0.03537344566096 * GRP_MntGoldProds9 + 0.06051838016414 *
GRP_MntGoldProds10 + 0.2035141766276 * GRP_MntMeatProducts2 + 0.11278969513967 *
GRP_MntMeatProducts3 + 0.04661931313376 * GRP_MntMeatProducts4 + 0.16452320933838 *
GRP_MntMeatProducts5 + 0.10770184592821 * GRP_MntMeatProducts6 + 0.13901339765753 *
GRP_MntMeatProducts7 + -0.05190887812163 * GRP_MntMeatProducts8 + 0.01954217936532 *
GRP_MntMeatProducts9 + 0.03332801536639 * GRP_MntMeatProducts10 + 0.08361196701406 *
GRP_MntSweetProducts3 + 0.12046863267625 * GRP_MntSweetProducts4 + -0.06960624989657 *
GRP_MntSweetProducts5 + 0.02528342548299 * GRP_MntSweetProducts6 + 0.06650097777299 *
GRP_MntSweetProducts7 + 0.11859111222476 * GRP_MntSweetProducts8 + -0.06554622682799 *
GRP_MntSweetProducts9 + 0.21001957500605 * GRP_MntSweetProducts10 + 0.00731755704127 *
GRP_MntWines2 + -0.13735139324497 * GRP_MntWines3 + -0.04158270471567 * GRP_MntWines4 +
0.07926049065675 * GRP_MntWines5 + -0.02429458037724 * GRP_MntWines6 + -0.1282166172913 *
GRP_MntWines7 + -0.08677752910806 * GRP_MntWines8 + 0.07540797934238 * GRP_MntWines9 +
0.17493983229139 * GRP_MntWines10 + -0.0713614079649 * GRP_NumCatalogPurchases3 +
0.04023033957679 * GRP_NumCatalogPurchases4 + 0.05335371946994 * GRP_NumCatalogPurchases5 +
-0.04900718695282 * GRP_NumCatalogPurchases6 + -0.02899204623539 * GRP_NumCatalogPurchases7 +
0.03938478596542 * GRP_NumDistPurchases2 + -0.11842065825647 * GRP_NumDistPurchases3 +
0.12810519506777 * GRP_NumDistPurchases4 + 0.03251975367652 * GRP_NumDistPurchases5 +
-0.20095019460601 * GRP_NumDistPurchases6 + 0.10812326965005 * GRP_NumDistPurchases7 +
0.0287453988047 * GRP_NumDistPurchases8 + -0.0969283103509 * GRP_NumDistPurchases9 +
-0.16520433255669 * GRP_NumDistPurchases10 + -0.05852836521422 * GRP_NumWebPurchases2 +
-0.09748986581637 * GRP_NumWebPurchases3 + -0.1035732808226 * GRP_NumWebPurchases4 +
-0.02657669178935 * GRP_NumWebPurchases5 + -0.14302610588281 * GRP_NumWebPurchases6 +
-0.02401715848443 * GRP_NumWebPurchases7 + -0.00665464700774 * GRP_NumWebPurchases8 +
0.10779106619083 * GRP_NumWebVisitsMonth2 + -0.02984428486672 * GRP_NumWebVisitsMonth3 +
0.13778787733685 * GRP_NumWebVisitsMonth4 + 0.00802707801664 * GRP_NumWebVisitsMonth5 +
-0.16625282394015 * GRP_NumWebVisitsMonth6 + 0.10106887697617 * GRP_NumWebVisitsMonth7 +
-0.08824472498437 * GRP_NumWebVisitsMonth8 + -0.03526513082645 * GRP_RFMstat2 +
0.10283156836959 * GRP_RFMstat3 + -0.01757421618587 * GRP_RFMstat4 + 0.14132635365523 *
GRP_RFMstat5 + -0.03672768186133 * GRP_RFMstat6 + 0.00258056988376 * GRP_RFMstat7 +
0.05732533278238 * GRP_RFMstat8 + -0.11555107353955 * GRP_RFMstat9 + 0.13078950712504 *
GRP_RFMstat10 + 0.06981855039942 * GRP_RMntFrq2 + -0.0674188031774 * GRP_RMntFrq3 +
0.01403624484254 * GRP_RMntFrq4 + 0.15675245151505 * GRP_RMntFrq5 + 0.02655321401599 *
GRP_RMntFrq6 + 0.19673158757121 * GRP_RMntFrq7 + -0.07596120973163 * GRP_RMntFrq8 +
-0.02098873085179 * GRP_RMntFrq9 + 0.05038094121628 * GRP_RMntFrq10 + 0.06723803817114 *
GRP_Recency2 + -0.05982635501022 * GRP_Recency3 + -0.08002228635654 * GRP_Recency4 +
-0.0814806856315 * GRP_Recency5 + -0.0111860674205 * GRP_Recency6 + 0.14684736173087 *
GRP_Recency7 + 0.03782442851658 * GRP_Recency8 + 0.27840617851866 * GRP_Recency9 +
0.06367048710928 * GRP_Recency10 ;
991203    +   H15  = H15  +    -0.07806115508508 * GRP_AcceptedCmp52
991204    +          +    -0.07253207743328 * GRP_AcceptedCmpTotal3
991205    +          +     0.00068319550289 * GRP_Frq2  +     0.01053423185442 * GRP_Frq3
991206    +          +     0.12146836577194 * GRP_Frq4  +    -0.02109847088645 * GRP_Frq5
991207    +          +     0.12117603213018 * GRP_Frq6  +    -0.05610800968967 * GRP_Frq7
991208    +          +     0.03978492600567 * GRP_Frq8  +     0.04223735193015 * GRP_Frq9
991209    +          +    -0.06520463728003 * GRP_Frq10  +       0.062049900978 *
991210    +        GRP_Income2  +     0.03328830262974 * GRP_Income3
991211    +          +    -0.02319751936777 * GRP_Income4  +    -0.14018290895085 *
991212    +        GRP_Income5  +    -0.20161259066579 * GRP_Income6
991213    +          +     0.04520749587308 * GRP_Income7  +    -0.12005951328941 *
991214    +        GRP_Income8  +     -0.0271220049046 * GRP_Income9
991215    +          +    -0.01279023704027 * GRP_Income10  +     0.08937556740583 *
991216    +        GRP_Mnt2  +    -0.10612717465916 * GRP_Mnt3  +     0.17815428575003 *
991217    +        GRP_Mnt4  +     -0.0370614578947 * GRP_Mnt5  +    -0.01135345278923 *
991218    +        GRP_Mnt6  +    -0.12746479049026 * GRP_Mnt7  +    -0.10029531183924 *
991219    +        GRP_Mnt8  +    -0.05531509364291 * GRP_Mnt9  +    -0.05237212542444 *
991220    +        GRP_Mnt10  +    -0.11135939029175 * GRP_MntFishProducts3
991221    +          +     0.00523055501837 * GRP_MntFishProducts4
991222    +          +     0.06995755836785 * GRP_MntFishProducts5
991223    +          +    -0.04271980194111 * GRP_MntFishProducts6
991224    +          +     0.01174513507622 * GRP_MntFishProducts7
991225    +          +    -0.01277525563734 * GRP_MntFishProducts8
991226    +          +     0.12998167316257 * GRP_MntFishProducts9
991227    +          +    -0.09861861312574 * GRP_MntFishProducts10
991228    +          +     0.01241278109567 * GRP_MntGoldProds2
991229    +          +    -0.08099817362086 * GRP_MntGoldProds3
991230    +          +     0.06851172830818 * GRP_MntGoldProds4
991231    +          +     0.08958140948505 * GRP_MntGoldProds5
991232    +          +    -0.00218658598252 * GRP_MntGoldProds6
991233    +          +     -0.0121636699266 * GRP_MntGoldProds7
991234    +          +     0.08312530546896 * GRP_MntGoldProds8
991235    +          +    -0.09695558162329 * GRP_MntGoldProds9
991236    +          +    -0.13362889085159 * GRP_MntGoldProds10
991237    +          +      0.1497720820291 * GRP_MntMeatProducts2
991238    +          +     0.13747884120385 * GRP_MntMeatProducts3
991239    +          +    -0.01382324310957 * GRP_MntMeatProducts4
991240    +          +      0.1026627602622 * GRP_MntMeatProducts5
991241    +          +     0.12473983237959 * GRP_MntMeatProducts6
991242    +          +    -0.00460258978783 * GRP_MntMeatProducts7
991243    +          +    -0.02636237932342 * GRP_MntMeatProducts8
991244    +          +     0.01088187708787 * GRP_MntMeatProducts9
991245    +          +    -0.06235232820082 * GRP_MntMeatProducts10
991246    +          +    -0.01027496660636 * GRP_MntSweetProducts3
991247    +          +    -0.03339881469063 * GRP_MntSweetProducts4
991248    +          +    -0.00006744319692 * GRP_MntSweetProducts5
991249    +          +    -0.08133264214994 * GRP_MntSweetProducts6
991250    +          +    -0.08611045862832 * GRP_MntSweetProducts7
991251    +          +     0.04349149520384 * GRP_MntSweetProducts8
991252    +          +    -0.11983272725696 * GRP_MntSweetProducts9
991253    +          +      0.0295546319232 * GRP_MntSweetProducts10
991254    +          +    -0.08123379301643 * GRP_MntWines2  +     0.04651831039743 *
991255    +        GRP_MntWines3  +     0.06310002346307 * GRP_MntWines4
991256    +          +    -0.17933545315591 * GRP_MntWines5  +     -0.1937708146292 *
991257    +        GRP_MntWines6  +    -0.03101077799974 * GRP_MntWines7
991258    +          +     -0.1041503240188 * GRP_MntWines8  +     0.05775300092738 *
991259    +        GRP_MntWines9  +    -0.03058517174309 * GRP_MntWines10
991260    +          +     0.07560261351989 * GRP_NumCatalogPurchases3
991261    +          +    -0.02171409354554 * GRP_NumCatalogPurchases4
991262    +          +    -0.05679659919998 * GRP_NumCatalogPurchases5
991263    +          +    -0.12764205653408 * GRP_NumCatalogPurchases6
991264    +          +    -0.08101121779612 * GRP_NumCatalogPurchases7
991265    +          +     0.01667103886915 * GRP_NumDistPurchases2
991266    +          +    -0.01671279072694 * GRP_NumDistPurchases3
991267    +          +      0.1259674987166 * GRP_NumDistPurchases4
991268    +          +    -0.16321313045784 * GRP_NumDistPurchases5
991269    +          +     0.11936322929288 * GRP_NumDistPurchases6
991270    +          +    -0.06556668418313 * GRP_NumDistPurchases7
991271    +          +     0.10511131736767 * GRP_NumDistPurchases8
991272    +          +     0.15706878704211 * GRP_NumDistPurchases9
991273    +          +    -0.02459606438141 * GRP_NumDistPurchases10
991274    +          +    -0.12649905874392 * GRP_NumWebPurchases2
991275    +          +    -0.19047040809704 * GRP_NumWebPurchases3
991276    +          +     0.05314754301096 * GRP_NumWebPurchases4
991277    +          +     0.07985015828954 * GRP_NumWebPurchases5
991278    +          +     0.03142129782708 * GRP_NumWebPurchases6
991279    +          +    -0.06854751810317 * GRP_NumWebPurchases7
991280    +          +     0.04252315624645 * GRP_NumWebPurchases8
991281    +          +     0.05095051650376 * GRP_NumWebVisitsMonth2
991282    +          +    -0.06364646216319 * GRP_NumWebVisitsMonth3
991283    +          +     -0.0763099305682 * GRP_NumWebVisitsMonth4
991284    +          +    -0.09328993733351 * GRP_NumWebVisitsMonth5
991285    +          +    -0.15992682318474 * GRP_NumWebVisitsMonth6
991286    +          +     0.05855154160855 * GRP_NumWebVisitsMonth7
991287    +          +    -0.02936254579621 * GRP_NumWebVisitsMonth8
991288    +          +     0.03386330448388 * GRP_RFMstat2  +     0.15736501855948 *
991289    +        GRP_RFMstat3  +     0.00191361166205 * GRP_RFMstat4
991290    +          +     0.13353067210356 * GRP_RFMstat5  +     0.07177888737143 *
991291    +        GRP_RFMstat6  +    -0.09136544703087 * GRP_RFMstat7
991292    +          +     0.06240017584936 * GRP_RFMstat8  +    -0.13392008107813 *
991293    +        GRP_RFMstat9  +      0.1640400559806 * GRP_RFMstat10
991294    +          +    -0.04729585381288 * GRP_RMntFrq2  +    -0.10696256491016 *
991295    +        GRP_RMntFrq3  +    -0.01612962997775 * GRP_RMntFrq4
991296    +          +     0.03988781041495 * GRP_RMntFrq5  +    -0.16331389081736 *
991297    +        GRP_RMntFrq6  +    -0.04782412873041 * GRP_RMntFrq7
991298    +          +    -0.26113374531456 * GRP_RMntFrq8  +     0.12714151557135 *
991299    +        GRP_RMntFrq9  +     0.04516692519663 * GRP_RMntFrq10
991300    +          +    -0.02063571135452 * GRP_Recency2  +    -0.26395733111279 *
991301    +        GRP_Recency3  +     0.06052941897951 * GRP_Recency4
991302    +          +     0.02037202909561 * GRP_Recency5  +    -0.03853508999085 *
991303    +        GRP_Recency6  +    -0.04725141215181 * GRP_Recency7
991304    +          +    -0.03539071681016 * GRP_Recency8  +     0.00231218046757 *
991305    +        GRP_Recency9  +     0.15061319591771 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.07806115508508 * GRP_AcceptedCmp52 + -0.07253207743328 *
GRP_AcceptedCmpTotal3 + 0.00068319550289 * GRP_Frq2 + 0.01053423185442 * GRP_Frq3 +
0.12146836577194 * GRP_Frq4 + -0.02109847088645 * GRP_Frq5 + 0.12117603213018 * GRP_Frq6 +
-0.05610800968967 * GRP_Frq7 + 0.03978492600567 * GRP_Frq8 + 0.04223735193015 * GRP_Frq9 +
-0.06520463728003 * GRP_Frq10 + 0.062049900978 * GRP_Income2 + 0.03328830262974 * GRP_Income3
+ -0.02319751936777 * GRP_Income4 + -0.14018290895085 * GRP_Income5 + -0.20161259066579 *
GRP_Income6 + 0.04520749587308 * GRP_Income7 + -0.12005951328941 * GRP_Income8 +
-0.0271220049046 * GRP_Income9 + -0.01279023704027 * GRP_Income10 + 0.08937556740583 *
GRP_Mnt2 + -0.10612717465916 * GRP_Mnt3 + 0.17815428575003 * GRP_Mnt4 + -0.0370614578947 *
GRP_Mnt5 + -0.01135345278923 * GRP_Mnt6 + -0.12746479049026 * GRP_Mnt7 + -0.10029531183924 *
GRP_Mnt8 + -0.05531509364291 * GRP_Mnt9 + -0.05237212542444 * GRP_Mnt10 + -0.11135939029175 *
GRP_MntFishProducts3 + 0.00523055501837 * GRP_MntFishProducts4 + 0.06995755836785 *
GRP_MntFishProducts5 + -0.04271980194111 * GRP_MntFishProducts6 + 0.01174513507622 *
GRP_MntFishProducts7 + -0.01277525563734 * GRP_MntFishProducts8 + 0.12998167316257 *
GRP_MntFishProducts9 + -0.09861861312574 * GRP_MntFishProducts10 + 0.01241278109567 *
GRP_MntGoldProds2 + -0.08099817362086 * GRP_MntGoldProds3 + 0.06851172830818 *
GRP_MntGoldProds4 + 0.08958140948505 * GRP_MntGoldProds5 + -0.00218658598252 *
GRP_MntGoldProds6 + -0.0121636699266 * GRP_MntGoldProds7 + 0.08312530546896 *
GRP_MntGoldProds8 + -0.09695558162329 * GRP_MntGoldProds9 + -0.13362889085159 *
GRP_MntGoldProds10 + 0.1497720820291 * GRP_MntMeatProducts2 + 0.13747884120385 *
GRP_MntMeatProducts3 + -0.01382324310957 * GRP_MntMeatProducts4 + 0.1026627602622 *
GRP_MntMeatProducts5 + 0.12473983237959 * GRP_MntMeatProducts6 + -0.00460258978783 *
GRP_MntMeatProducts7 + -0.02636237932342 * GRP_MntMeatProducts8 + 0.01088187708787 *
GRP_MntMeatProducts9 + -0.06235232820082 * GRP_MntMeatProducts10 + -0.01027496660636 *
GRP_MntSweetProducts3 + -0.03339881469063 * GRP_MntSweetProducts4 + -0.00006744319692 *
GRP_MntSweetProducts5 + -0.08133264214994 * GRP_MntSweetProducts6 + -0.08611045862832 *
GRP_MntSweetProducts7 + 0.04349149520384 * GRP_MntSweetProducts8 + -0.11983272725696 *
GRP_MntSweetProducts9 + 0.0295546319232 * GRP_MntSweetProducts10 + -0.08123379301643 *
GRP_MntWines2 + 0.04651831039743 * GRP_MntWines3 + 0.06310002346307 * GRP_MntWines4 +
-0.17933545315591 * GRP_MntWines5 + -0.1937708146292 * GRP_MntWines6 + -0.03101077799974 *
GRP_MntWines7 + -0.1041503240188 * GRP_MntWines8 + 0.05775300092738 * GRP_MntWines9 +
-0.03058517174309 * GRP_MntWines10 + 0.07560261351989 * GRP_NumCatalogPurchases3 +
-0.02171409354554 * GRP_NumCatalogPurchases4 + -0.05679659919998 * GRP_NumCatalogPurchases5 +
-0.12764205653408 * GRP_NumCatalogPurchases6 + -0.08101121779612 * GRP_NumCatalogPurchases7 +
0.01667103886915 * GRP_NumDistPurchases2 + -0.01671279072694 * GRP_NumDistPurchases3 +
0.1259674987166 * GRP_NumDistPurchases4 + -0.16321313045784 * GRP_NumDistPurchases5 +
0.11936322929288 * GRP_NumDistPurchases6 + -0.06556668418313 * GRP_NumDistPurchases7 +
0.10511131736767 * GRP_NumDistPurchases8 + 0.15706878704211 * GRP_NumDistPurchases9 +
-0.02459606438141 * GRP_NumDistPurchases10 + -0.12649905874392 * GRP_NumWebPurchases2 +
-0.19047040809704 * GRP_NumWebPurchases3 + 0.05314754301096 * GRP_NumWebPurchases4 +
0.07985015828954 * GRP_NumWebPurchases5 + 0.03142129782708 * GRP_NumWebPurchases6 +
-0.06854751810317 * GRP_NumWebPurchases7 + 0.04252315624645 * GRP_NumWebPurchases8 +
0.05095051650376 * GRP_NumWebVisitsMonth2 + -0.06364646216319 * GRP_NumWebVisitsMonth3 +
-0.0763099305682 * GRP_NumWebVisitsMonth4 + -0.09328993733351 * GRP_NumWebVisitsMonth5 +
-0.15992682318474 * GRP_NumWebVisitsMonth6 + 0.05855154160855 * GRP_NumWebVisitsMonth7 +
-0.02936254579621 * GRP_NumWebVisitsMonth8 + 0.03386330448388 * GRP_RFMstat2 +
0.15736501855948 * GRP_RFMstat3 + 0.00191361166205 * GRP_RFMstat4 + 0.13353067210356 *
GRP_RFMstat5 + 0.07177888737143 * GRP_RFMstat6 + -0.09136544703087 * GRP_RFMstat7 +
0.06240017584936 * GRP_RFMstat8 + -0.13392008107813 * GRP_RFMstat9 + 0.1640400559806 *
GRP_RFMstat10 + -0.04729585381288 * GRP_RMntFrq2 + -0.10696256491016 * GRP_RMntFrq3 +
-0.01612962997775 * GRP_RMntFrq4 + 0.03988781041495 * GRP_RMntFrq5 + -0.16331389081736 *
GRP_RMntFrq6 + -0.04782412873041 * GRP_RMntFrq7 + -0.26113374531456 * GRP_RMntFrq8 +
0.12714151557135 * GRP_RMntFrq9 + 0.04516692519663 * GRP_RMntFrq10 + -0.02063571135452 *
GRP_Recency2 + -0.26395733111279 * GRP_Recency3 + 0.06052941897951 * GRP_Recency4 +
0.02037202909561 * GRP_Recency5 + -0.03853508999085 * GRP_Recency6 + -0.04725141215181 *
GRP_Recency7 + -0.03539071681016 * GRP_Recency8 + 0.00231218046757 * GRP_Recency9 +
0.15061319591771 * GRP_Recency10 ;
991306    +   H11  =    -0.41794755051402 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.41794755051402 + H11 ;
991307    +   H12  =    -0.49840292545282 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.49840292545282 + H12 ;
991308    +   H13  =     0.68519838870778 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.68519838870778 + H13 ;
991309    +   H14  =    -0.29927820698876 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.29927820698876 + H14 ;
991310    +   H15  =    -1.33189145036759 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.33189145036759 + H15 ;
991311    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
991312    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
991313    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
991314    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
991315    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
991316    +END;
MPRINT(EM_DIAGRAM):   END;
991317    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
991318    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
991319    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
991320    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
991321    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
991322    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
991323    +END;
MPRINT(EM_DIAGRAM):   END;
991324    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
991325    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
991326    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
991327    +
991328    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
991329    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
991330    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
991331    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
991332    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
991333    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991334    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
991335    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
991336    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
991337    +end;
MPRINT(EM_DIAGRAM):   end;
991338    +else do;
MPRINT(EM_DIAGRAM):   else do;
991339    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
991340    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
991341    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
991342    +   end;
MPRINT(EM_DIAGRAM):   end;
991343    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
991344    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
991345    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
991346    +   end;
MPRINT(EM_DIAGRAM):   end;
991347    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991348    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
991349    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
991350    +   end;
MPRINT(EM_DIAGRAM):   end;
991351    +end;
MPRINT(EM_DIAGRAM):   end;
991352    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
991353    +   P_DepVar1  =     3.74750910029477 * H11  +     6.03649252206533 * H12
991354    +          +     3.79892216009428 * H13  +    -0.91884002074191 * H14
991355    +          +    -0.46883154533119 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.74750910029477 * H11 + 6.03649252206533 * H12 +
3.79892216009428 * H13 + -0.91884002074191 * H14 + -0.46883154533119 * H15 ;
991356    +   P_DepVar1  =    -1.84390654654668 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84390654654668 + P_DepVar1 ;
991357    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
991358    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
991359    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
991360    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
991361    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
991362    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
991363    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
991364    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
991365    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
991366    +END;
MPRINT(EM_DIAGRAM):   END;
991367    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
991368    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
991369    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
991370    +END;
MPRINT(EM_DIAGRAM):   END;
991371    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
991372    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
991373    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
991374    +END;
MPRINT(EM_DIAGRAM):   END;
991375    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
991376    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
991377    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
991378    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
991379    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
991380    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
991381    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
991382    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
991383    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
991384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
991385    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
991386    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
991387    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
991388    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
991389    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
991390    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
991391    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
991392    +END;
MPRINT(EM_DIAGRAM):   END;
991393    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
991394    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
991395    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
991396    +drop
991397    +H11
991398    +H12
991399    +H13
991400    +H14
991401    +H15
991402    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
991403    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
991404     run;
 
NOTE: DATA STEP view saved on file EMWS8.NEURAL22_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
991405     quit;
991406     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
991407     filename emflow
991407   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural22: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
991408     *------------------------------------------------------------*;
991409     * Neural22: Scoring VALIDATE data;
991410     *------------------------------------------------------------*;
991411     data EMWS8.Neural22_VALIDATE
991412     / view=EMWS8.Neural22_VALIDATE
991413     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_VALIDATE / view=EMWS8.Neural22_VALIDATE ;
991414     set EMWS8.BINNING_VALIDATE
991415     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
991416     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas.
991417    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
991418    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
991419    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
991420    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
991421    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
991422    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
991423    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
991424    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
991425    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
991426    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
991427    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
991428    +LENGTH _WARN_ $4
991429    +      F_DepVar  $ 12
991430    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
991431    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
991432    +
991433    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
991434    +
991435    +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
991436    +
991437    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
991438    +
991439    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
991440    +
991441    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
991442    +
991443    +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
991444    +
991445    +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
991446    +
991447    +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
991448    +
991449    +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
991450    +
991451    +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
991452    +
991453    +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
991454    +
991455    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
991456    +
991457    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
991458    +
991459    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
991460    +
991461    +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
991462    +
991463    +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
991464    +
991465    +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
991466    +
991467    +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
991468    +
991469    +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
991470    +
991471    +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
991472    +
991473    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
991474    +
991475    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
991476    +
991477    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
991478    +
991479    +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
991480    +
991481    +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
991482    +
991483    +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
991484    +
991485    +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
991486    +
991487    +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
991488    +
991489    +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
991490    +
991491    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
991492    +
991493    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
991494    +
991495    +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
991496    +
991497    +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
991498    +
991499    +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
991500    +
991501    +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
991502    +
991503    +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
991504    +
991505    +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
991506    +
991507    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
991508    +
991509    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
991510    +
991511    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
991512    +
991513    +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
991514    +
991515    +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
991516    +
991517    +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
991518    +
991519    +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
991520    +
991521    +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
991522    +
991523    +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
991524    +
991525    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
991526    +
991527    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
991528    +
991529    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
991530    +
991531    +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
991532    +
991533    +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
991534    +
991535    +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
991536    +
991537    +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
991538    +
991539    +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
991540    +
991541    +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
991542    +
991543    +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
991544    +
991545    +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
991546    +
991547    +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
991548    +
991549    +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
991550    +
991551    +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
991552    +
991553    +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
991554    +
991555    +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
991556    +
991557    +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
991558    +
991559    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
991560    +
991561    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
991562    +
991563    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
991564    +
991565    +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
991566    +
991567    +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
991568    +
991569    +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
991570    +
991571    +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
991572    +
991573    +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
991574    +
991575    +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
991576    +
991577    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
991578    +
991579    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
991580    +
991581    +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
991582    +
991583    +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
991584    +
991585    +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
991586    +
991587    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
991588    +
991589    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
991590    +
991591    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
991592    +
991593    +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
991594    +
991595    +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
991596    +
991597    +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
991598    +
991599    +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
991600    +
991601    +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
991602    +
991603    +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
991604    +
991605    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
991606    +
991607    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
991608    +
991609    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
991610    +
991611    +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
991612    +
991613    +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
991614    +
991615    +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
991616    +
991617    +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
991618    +
991619    +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
991620    +
991621    +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
991622    +
991623    +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
991624    +
991625    +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
991626    +
991627    +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
991628    +
991629    +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
991630    +
991631    +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
991632    +
991633    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
991634    +
991635    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
991636    +
991637    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
991638    +
991639    +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
991640    +
991641    +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
991642    +
991643    +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
991644    +
991645    +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
991646    +
991647    +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
991648    +
991649    +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
991650    +
991651    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
991652    +
991653    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
991654    +
991655    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
991656    +
991657    +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
991658    +
991659    +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
991660    +
991661    +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
991662    +
991663    +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
991664    +
991665    +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
991666    +
991667    +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
991668    +
991669    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
991670    +
991671    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
991672    +
991673    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
991674    +
991675    +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
991676    +
991677    +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
991678    +
991679    +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
991680    +
991681    +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
991682    +
991683    +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
991684    +
991685    +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
991686    +
991687    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
991688    +
991689    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
991690    +
991691    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
991692    +
991693    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
991694    +
991695    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
991696    +
991697    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
991698    +
991699    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
991700    +
991701    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
991702    +
991703    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
991704    +
991705    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
991706    +
991707    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
991708    +
991709    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
991710    +
991711    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
991712    +
991713    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
991714    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
991715    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
991716    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
991717    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991718    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991719    +end;
MPRINT(EM_DIAGRAM):   end;
991720    +else do;
MPRINT(EM_DIAGRAM):   else do;
991721    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991722    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
991723    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991724    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
991725    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
991726    +   end;
MPRINT(EM_DIAGRAM):   end;
991727    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
991728    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
991729    +   end;
MPRINT(EM_DIAGRAM):   end;
991730    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991731    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
991732    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
991733    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991734    +   end;
MPRINT(EM_DIAGRAM):   end;
991735    +end;
MPRINT(EM_DIAGRAM):   end;
991736    +
991737    +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
991738    +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
991739    +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
991740    +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
991741    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991742    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991743    +end;
MPRINT(EM_DIAGRAM):   end;
991744    +else do;
MPRINT(EM_DIAGRAM):   else do;
991745    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991746    +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
991747    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991748    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
991749    +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
991750    +   end;
MPRINT(EM_DIAGRAM):   end;
991751    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
991752    +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
991753    +   end;
MPRINT(EM_DIAGRAM):   end;
991754    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991755    +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
991756    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
991757    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991758    +   end;
MPRINT(EM_DIAGRAM):   end;
991759    +end;
MPRINT(EM_DIAGRAM):   end;
991760    +
991761    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
991762    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
991763    +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
991764    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
991765    +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
991766    +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
991767    +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
991768    +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
991769    +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
991770    +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
991771    +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
991772    +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
991773    +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
991774    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
991775    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
991776    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
991777    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
991778    +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
991779    +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
991780    +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
991781    +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
991782    +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
991783    +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
991784    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991785    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991786    +end;
MPRINT(EM_DIAGRAM):   end;
991787    +else do;
MPRINT(EM_DIAGRAM):   else do;
991788    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991789    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
991790    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991791    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
991792    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
991793    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
991794    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
991795    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
991796    +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
991797    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991798    +            end;
MPRINT(EM_DIAGRAM):   end;
991799    +            else do;
MPRINT(EM_DIAGRAM):   else do;
991800    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
991801    +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
991802    +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
991803    +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
991804    +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
991805    +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
991806    +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
991807    +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
991808    +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
991809    +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
991810    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991811    +               end;
MPRINT(EM_DIAGRAM):   end;
991812    +            end;
MPRINT(EM_DIAGRAM):   end;
991813    +         end;
MPRINT(EM_DIAGRAM):   end;
991814    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991815    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
991816    +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
991817    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991818    +            end;
MPRINT(EM_DIAGRAM):   end;
991819    +         end;
MPRINT(EM_DIAGRAM):   end;
991820    +      end;
MPRINT(EM_DIAGRAM):   end;
991821    +      else do;
MPRINT(EM_DIAGRAM):   else do;
991822    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
991823    +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
991824    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991825    +         end;
MPRINT(EM_DIAGRAM):   end;
991826    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991827    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
991828    +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
991829    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991830    +            end;
MPRINT(EM_DIAGRAM):   end;
991831    +         end;
MPRINT(EM_DIAGRAM):   end;
991832    +      end;
MPRINT(EM_DIAGRAM):   end;
991833    +   end;
MPRINT(EM_DIAGRAM):   end;
991834    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991835    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
991836    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
991837    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
991838    +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
991839    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991840    +            end;
MPRINT(EM_DIAGRAM):   end;
991841    +            else do;
MPRINT(EM_DIAGRAM):   else do;
991842    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
991843    +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
991844    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991845    +               end;
MPRINT(EM_DIAGRAM):   end;
991846    +            end;
MPRINT(EM_DIAGRAM):   end;
991847    +         end;
MPRINT(EM_DIAGRAM):   end;
991848    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991849    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
991850    +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
991851    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991852    +            end;
MPRINT(EM_DIAGRAM):   end;
991853    +         end;
MPRINT(EM_DIAGRAM):   end;
991854    +      end;
MPRINT(EM_DIAGRAM):   end;
991855    +      else do;
MPRINT(EM_DIAGRAM):   else do;
991856    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
991857    +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
991858    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991859    +         end;
MPRINT(EM_DIAGRAM):   end;
991860    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991861    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
991862    +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
991863    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991864    +            end;
MPRINT(EM_DIAGRAM):   end;
991865    +         end;
MPRINT(EM_DIAGRAM):   end;
991866    +      end;
MPRINT(EM_DIAGRAM):   end;
991867    +   end;
MPRINT(EM_DIAGRAM):   end;
991868    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
991869    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
991870    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
991871    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
991872    +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
991873    +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
991874    +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
991875    +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
991876    +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
991877    +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
991878    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
991879    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991880    +   end;
MPRINT(EM_DIAGRAM):   end;
991881    +end;
MPRINT(EM_DIAGRAM):   end;
991882    +
991883    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
991884    +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
991885    +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
991886    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
991887    +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
991888    +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
991889    +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
991890    +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
991891    +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
991892    +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
991893    +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
991894    +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
991895    +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
991896    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
991897    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
991898    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
991899    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
991900    +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
991901    +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
991902    +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
991903    +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
991904    +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
991905    +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
991906    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
991907    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
991908    +end;
MPRINT(EM_DIAGRAM):   end;
991909    +else do;
MPRINT(EM_DIAGRAM):   else do;
991910    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
991911    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
991912    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
991913    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
991914    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
991915    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
991916    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
991917    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
991918    +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
991919    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991920    +            end;
MPRINT(EM_DIAGRAM):   end;
991921    +            else do;
MPRINT(EM_DIAGRAM):   else do;
991922    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
991923    +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
991924    +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
991925    +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
991926    +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
991927    +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
991928    +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
991929    +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
991930    +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
991931    +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
991932    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991933    +               end;
MPRINT(EM_DIAGRAM):   end;
991934    +            end;
MPRINT(EM_DIAGRAM):   end;
991935    +         end;
MPRINT(EM_DIAGRAM):   end;
991936    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991937    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
991938    +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
991939    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991940    +            end;
MPRINT(EM_DIAGRAM):   end;
991941    +         end;
MPRINT(EM_DIAGRAM):   end;
991942    +      end;
MPRINT(EM_DIAGRAM):   end;
991943    +      else do;
MPRINT(EM_DIAGRAM):   else do;
991944    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
991945    +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
991946    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991947    +         end;
MPRINT(EM_DIAGRAM):   end;
991948    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991949    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
991950    +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
991951    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991952    +            end;
MPRINT(EM_DIAGRAM):   end;
991953    +         end;
MPRINT(EM_DIAGRAM):   end;
991954    +      end;
MPRINT(EM_DIAGRAM):   end;
991955    +   end;
MPRINT(EM_DIAGRAM):   end;
991956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
991957    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
991958    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
991959    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
991960    +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
991961    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991962    +            end;
MPRINT(EM_DIAGRAM):   end;
991963    +            else do;
MPRINT(EM_DIAGRAM):   else do;
991964    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
991965    +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
991966    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991967    +               end;
MPRINT(EM_DIAGRAM):   end;
991968    +            end;
MPRINT(EM_DIAGRAM):   end;
991969    +         end;
MPRINT(EM_DIAGRAM):   end;
991970    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991971    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
991972    +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
991973    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991974    +            end;
MPRINT(EM_DIAGRAM):   end;
991975    +         end;
MPRINT(EM_DIAGRAM):   end;
991976    +      end;
MPRINT(EM_DIAGRAM):   end;
991977    +      else do;
MPRINT(EM_DIAGRAM):   else do;
991978    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
991979    +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
991980    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991981    +         end;
MPRINT(EM_DIAGRAM):   end;
991982    +         else do;
MPRINT(EM_DIAGRAM):   else do;
991983    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
991984    +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
991985    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
991986    +            end;
MPRINT(EM_DIAGRAM):   end;
991987    +         end;
MPRINT(EM_DIAGRAM):   end;
991988    +      end;
MPRINT(EM_DIAGRAM):   end;
991989    +   end;
MPRINT(EM_DIAGRAM):   end;
991990    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
991991    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
991992    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
991993    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
991994    +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
991995    +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
991996    +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
991997    +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
991998    +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
991999    +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
992000    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992001    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992002    +   end;
MPRINT(EM_DIAGRAM):   end;
992003    +end;
MPRINT(EM_DIAGRAM):   end;
992004    +
992005    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
992006    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
992007    +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
992008    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992009    +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
992010    +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
992011    +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
992012    +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
992013    +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
992014    +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
992015    +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
992016    +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
992017    +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
992018    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
992019    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
992020    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
992021    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
992022    +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
992023    +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
992024    +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
992025    +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
992026    +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
992027    +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
992028    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992029    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992030    +end;
MPRINT(EM_DIAGRAM):   end;
992031    +else do;
MPRINT(EM_DIAGRAM):   else do;
992032    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992033    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
992034    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992035    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992036    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
992037    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
992038    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
992039    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
992040    +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
992041    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992042    +            end;
MPRINT(EM_DIAGRAM):   end;
992043    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992044    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
992045    +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
992046    +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
992047    +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
992048    +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
992049    +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
992050    +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
992051    +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
992052    +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
992053    +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
992054    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992055    +               end;
MPRINT(EM_DIAGRAM):   end;
992056    +            end;
MPRINT(EM_DIAGRAM):   end;
992057    +         end;
MPRINT(EM_DIAGRAM):   end;
992058    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992059    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
992060    +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
992061    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992062    +            end;
MPRINT(EM_DIAGRAM):   end;
992063    +         end;
MPRINT(EM_DIAGRAM):   end;
992064    +      end;
MPRINT(EM_DIAGRAM):   end;
992065    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992066    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992067    +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
992068    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992069    +         end;
MPRINT(EM_DIAGRAM):   end;
992070    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992071    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992072    +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
992073    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992074    +            end;
MPRINT(EM_DIAGRAM):   end;
992075    +         end;
MPRINT(EM_DIAGRAM):   end;
992076    +      end;
MPRINT(EM_DIAGRAM):   end;
992077    +   end;
MPRINT(EM_DIAGRAM):   end;
992078    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992079    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992080    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
992081    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992082    +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
992083    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992084    +            end;
MPRINT(EM_DIAGRAM):   end;
992085    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992086    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992087    +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
992088    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992089    +               end;
MPRINT(EM_DIAGRAM):   end;
992090    +            end;
MPRINT(EM_DIAGRAM):   end;
992091    +         end;
MPRINT(EM_DIAGRAM):   end;
992092    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992093    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992094    +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
992095    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992096    +            end;
MPRINT(EM_DIAGRAM):   end;
992097    +         end;
MPRINT(EM_DIAGRAM):   end;
992098    +      end;
MPRINT(EM_DIAGRAM):   end;
992099    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992100    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992101    +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
992102    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992103    +         end;
MPRINT(EM_DIAGRAM):   end;
992104    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992105    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992106    +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
992107    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992108    +            end;
MPRINT(EM_DIAGRAM):   end;
992109    +         end;
MPRINT(EM_DIAGRAM):   end;
992110    +      end;
MPRINT(EM_DIAGRAM):   end;
992111    +   end;
MPRINT(EM_DIAGRAM):   end;
992112    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992113    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
992114    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
992115    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
992116    +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
992117    +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
992118    +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
992119    +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
992120    +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
992121    +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
992122    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992123    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992124    +   end;
MPRINT(EM_DIAGRAM):   end;
992125    +end;
MPRINT(EM_DIAGRAM):   end;
992126    +
992127    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
992128    +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
992129    +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
992130    +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
992131    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992132    +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
992133    +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
992134    +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
992135    +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
992136    +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
992137    +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
992138    +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
992139    +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
992140    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
992141    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
992142    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
992143    +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
992144    +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
992145    +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
992146    +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
992147    +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
992148    +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
992149    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992150    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992151    +end;
MPRINT(EM_DIAGRAM):   end;
992152    +else do;
MPRINT(EM_DIAGRAM):   else do;
992153    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992154    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
992155    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992156    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992157    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
992158    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
992159    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
992160    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
992161    +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
992162    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992163    +            end;
MPRINT(EM_DIAGRAM):   end;
992164    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992165    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
992166    +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
992167    +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
992168    +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
992169    +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
992170    +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
992171    +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
992172    +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
992173    +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
992174    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992175    +               end;
MPRINT(EM_DIAGRAM):   end;
992176    +            end;
MPRINT(EM_DIAGRAM):   end;
992177    +         end;
MPRINT(EM_DIAGRAM):   end;
992178    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992179    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992180    +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
992181    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992182    +            end;
MPRINT(EM_DIAGRAM):   end;
992183    +         end;
MPRINT(EM_DIAGRAM):   end;
992184    +      end;
MPRINT(EM_DIAGRAM):   end;
992185    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992186    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992187    +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
992188    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992189    +         end;
MPRINT(EM_DIAGRAM):   end;
992190    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992191    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992192    +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
992193    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992194    +            end;
MPRINT(EM_DIAGRAM):   end;
992195    +         end;
MPRINT(EM_DIAGRAM):   end;
992196    +      end;
MPRINT(EM_DIAGRAM):   end;
992197    +   end;
MPRINT(EM_DIAGRAM):   end;
992198    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992199    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992200    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992201    +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
992202    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992203    +         end;
MPRINT(EM_DIAGRAM):   end;
992204    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992205    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992206    +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
992207    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992208    +            end;
MPRINT(EM_DIAGRAM):   end;
992209    +         end;
MPRINT(EM_DIAGRAM):   end;
992210    +      end;
MPRINT(EM_DIAGRAM):   end;
992211    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992212    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992213    +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
992214    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992215    +         end;
MPRINT(EM_DIAGRAM):   end;
992216    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992217    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992218    +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
992219    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992220    +            end;
MPRINT(EM_DIAGRAM):   end;
992221    +         end;
MPRINT(EM_DIAGRAM):   end;
992222    +      end;
MPRINT(EM_DIAGRAM):   end;
992223    +   end;
MPRINT(EM_DIAGRAM):   end;
992224    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992225    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
992226    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
992227    +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
992228    +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
992229    +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
992230    +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
992231    +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
992232    +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
992233    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992234    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992235    +   end;
MPRINT(EM_DIAGRAM):   end;
992236    +end;
MPRINT(EM_DIAGRAM):   end;
992237    +
992238    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
992239    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
992240    +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
992241    +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
992242    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992243    +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
992244    +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
992245    +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
992246    +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
992247    +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
992248    +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
992249    +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
992250    +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
992251    +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
992252    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
992253    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
992254    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
992255    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
992256    +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
992257    +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
992258    +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
992259    +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
992260    +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
992261    +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
992262    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992263    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992264    +end;
MPRINT(EM_DIAGRAM):   end;
992265    +else do;
MPRINT(EM_DIAGRAM):   else do;
992266    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992267    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
992268    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992269    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992270    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
992271    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
992272    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
992273    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
992274    +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
992275    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992276    +            end;
MPRINT(EM_DIAGRAM):   end;
992277    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992278    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
992279    +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
992280    +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
992281    +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
992282    +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
992283    +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
992284    +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
992285    +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
992286    +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
992287    +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
992288    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992289    +               end;
MPRINT(EM_DIAGRAM):   end;
992290    +            end;
MPRINT(EM_DIAGRAM):   end;
992291    +         end;
MPRINT(EM_DIAGRAM):   end;
992292    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992293    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
992294    +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
992295    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992296    +            end;
MPRINT(EM_DIAGRAM):   end;
992297    +         end;
MPRINT(EM_DIAGRAM):   end;
992298    +      end;
MPRINT(EM_DIAGRAM):   end;
992299    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992300    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992301    +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
992302    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992303    +         end;
MPRINT(EM_DIAGRAM):   end;
992304    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992305    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992306    +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
992307    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992308    +            end;
MPRINT(EM_DIAGRAM):   end;
992309    +         end;
MPRINT(EM_DIAGRAM):   end;
992310    +      end;
MPRINT(EM_DIAGRAM):   end;
992311    +   end;
MPRINT(EM_DIAGRAM):   end;
992312    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992313    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992314    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
992315    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992316    +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
992317    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992318    +            end;
MPRINT(EM_DIAGRAM):   end;
992319    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992320    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992321    +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
992322    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992323    +               end;
MPRINT(EM_DIAGRAM):   end;
992324    +            end;
MPRINT(EM_DIAGRAM):   end;
992325    +         end;
MPRINT(EM_DIAGRAM):   end;
992326    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992327    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992328    +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
992329    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992330    +            end;
MPRINT(EM_DIAGRAM):   end;
992331    +         end;
MPRINT(EM_DIAGRAM):   end;
992332    +      end;
MPRINT(EM_DIAGRAM):   end;
992333    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992334    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992335    +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
992336    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992337    +         end;
MPRINT(EM_DIAGRAM):   end;
992338    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992339    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992340    +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
992341    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992342    +            end;
MPRINT(EM_DIAGRAM):   end;
992343    +         end;
MPRINT(EM_DIAGRAM):   end;
992344    +      end;
MPRINT(EM_DIAGRAM):   end;
992345    +   end;
MPRINT(EM_DIAGRAM):   end;
992346    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992347    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
992348    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
992349    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
992350    +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
992351    +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
992352    +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
992353    +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
992354    +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
992355    +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
992356    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992357    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992358    +   end;
MPRINT(EM_DIAGRAM):   end;
992359    +end;
MPRINT(EM_DIAGRAM):   end;
992360    +
992361    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
992362    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
992363    +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
992364    +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
992365    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992366    +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
992367    +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
992368    +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
992369    +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
992370    +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
992371    +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
992372    +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
992373    +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
992374    +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
992375    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
992376    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
992377    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
992378    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
992379    +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
992380    +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
992381    +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
992382    +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
992383    +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
992384    +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
992385    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992386    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992387    +end;
MPRINT(EM_DIAGRAM):   end;
992388    +else do;
MPRINT(EM_DIAGRAM):   else do;
992389    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992390    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
992391    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992392    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992393    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
992394    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
992395    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
992396    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
992397    +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
992398    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992399    +            end;
MPRINT(EM_DIAGRAM):   end;
992400    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992401    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
992402    +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
992403    +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
992404    +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
992405    +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
992406    +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
992407    +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
992408    +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
992409    +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
992410    +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
992411    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992412    +               end;
MPRINT(EM_DIAGRAM):   end;
992413    +            end;
MPRINT(EM_DIAGRAM):   end;
992414    +         end;
MPRINT(EM_DIAGRAM):   end;
992415    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992416    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
992417    +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
992418    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992419    +            end;
MPRINT(EM_DIAGRAM):   end;
992420    +         end;
MPRINT(EM_DIAGRAM):   end;
992421    +      end;
MPRINT(EM_DIAGRAM):   end;
992422    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992423    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992424    +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
992425    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992426    +         end;
MPRINT(EM_DIAGRAM):   end;
992427    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992428    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992429    +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
992430    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992431    +            end;
MPRINT(EM_DIAGRAM):   end;
992432    +         end;
MPRINT(EM_DIAGRAM):   end;
992433    +      end;
MPRINT(EM_DIAGRAM):   end;
992434    +   end;
MPRINT(EM_DIAGRAM):   end;
992435    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992436    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992437    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
992438    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992439    +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
992440    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992441    +            end;
MPRINT(EM_DIAGRAM):   end;
992442    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992443    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992444    +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
992445    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992446    +               end;
MPRINT(EM_DIAGRAM):   end;
992447    +            end;
MPRINT(EM_DIAGRAM):   end;
992448    +         end;
MPRINT(EM_DIAGRAM):   end;
992449    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992450    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992451    +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
992452    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992453    +            end;
MPRINT(EM_DIAGRAM):   end;
992454    +         end;
MPRINT(EM_DIAGRAM):   end;
992455    +      end;
MPRINT(EM_DIAGRAM):   end;
992456    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992457    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992458    +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
992459    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992460    +         end;
MPRINT(EM_DIAGRAM):   end;
992461    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992462    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992463    +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
992464    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992465    +            end;
MPRINT(EM_DIAGRAM):   end;
992466    +         end;
MPRINT(EM_DIAGRAM):   end;
992467    +      end;
MPRINT(EM_DIAGRAM):   end;
992468    +   end;
MPRINT(EM_DIAGRAM):   end;
992469    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992470    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
992471    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
992472    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
992473    +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
992474    +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
992475    +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
992476    +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
992477    +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
992478    +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
992479    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992480    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992481    +   end;
MPRINT(EM_DIAGRAM):   end;
992482    +end;
MPRINT(EM_DIAGRAM):   end;
992483    +
992484    +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
992485    +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
992486    +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
992487    +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
992488    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992489    +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
992490    +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
992491    +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
992492    +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
992493    +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
992494    +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
992495    +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
992496    +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
992497    +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
992498    +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
992499    +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
992500    +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
992501    +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
992502    +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
992503    +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
992504    +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
992505    +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
992506    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992507    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992508    +end;
MPRINT(EM_DIAGRAM):   end;
992509    +else do;
MPRINT(EM_DIAGRAM):   else do;
992510    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992511    +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
992512    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992513    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992514    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
992515    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
992516    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
992517    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
992518    +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
992519    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992520    +            end;
MPRINT(EM_DIAGRAM):   end;
992521    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992522    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
992523    +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
992524    +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
992525    +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
992526    +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
992527    +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
992528    +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
992529    +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
992530    +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
992531    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992532    +               end;
MPRINT(EM_DIAGRAM):   end;
992533    +            end;
MPRINT(EM_DIAGRAM):   end;
992534    +         end;
MPRINT(EM_DIAGRAM):   end;
992535    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992536    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992537    +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
992538    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992539    +            end;
MPRINT(EM_DIAGRAM):   end;
992540    +         end;
MPRINT(EM_DIAGRAM):   end;
992541    +      end;
MPRINT(EM_DIAGRAM):   end;
992542    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992543    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992544    +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
992545    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992546    +         end;
MPRINT(EM_DIAGRAM):   end;
992547    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992548    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992549    +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
992550    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992551    +            end;
MPRINT(EM_DIAGRAM):   end;
992552    +         end;
MPRINT(EM_DIAGRAM):   end;
992553    +      end;
MPRINT(EM_DIAGRAM):   end;
992554    +   end;
MPRINT(EM_DIAGRAM):   end;
992555    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992556    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992557    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992558    +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
992559    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992560    +         end;
MPRINT(EM_DIAGRAM):   end;
992561    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992562    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992563    +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
992564    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992565    +            end;
MPRINT(EM_DIAGRAM):   end;
992566    +         end;
MPRINT(EM_DIAGRAM):   end;
992567    +      end;
MPRINT(EM_DIAGRAM):   end;
992568    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992569    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992570    +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
992571    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992572    +         end;
MPRINT(EM_DIAGRAM):   end;
992573    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992574    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992575    +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
992576    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992577    +            end;
MPRINT(EM_DIAGRAM):   end;
992578    +         end;
MPRINT(EM_DIAGRAM):   end;
992579    +      end;
MPRINT(EM_DIAGRAM):   end;
992580    +   end;
MPRINT(EM_DIAGRAM):   end;
992581    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992582    +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
992583    +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
992584    +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
992585    +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
992586    +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
992587    +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
992588    +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
992589    +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
992590    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992591    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992592    +   end;
MPRINT(EM_DIAGRAM):   end;
992593    +end;
MPRINT(EM_DIAGRAM):   end;
992594    +
992595    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
992596    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
992597    +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
992598    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992599    +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
992600    +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
992601    +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
992602    +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
992603    +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
992604    +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
992605    +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
992606    +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
992607    +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
992608    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
992609    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
992610    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
992611    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
992612    +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
992613    +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
992614    +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
992615    +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
992616    +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
992617    +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
992618    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992619    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992620    +end;
MPRINT(EM_DIAGRAM):   end;
992621    +else do;
MPRINT(EM_DIAGRAM):   else do;
992622    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992623    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
992624    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992625    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992626    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
992627    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
992628    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
992629    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
992630    +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
992631    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992632    +            end;
MPRINT(EM_DIAGRAM):   end;
992633    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992634    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
992635    +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
992636    +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
992637    +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
992638    +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
992639    +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
992640    +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
992641    +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
992642    +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
992643    +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
992644    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992645    +               end;
MPRINT(EM_DIAGRAM):   end;
992646    +            end;
MPRINT(EM_DIAGRAM):   end;
992647    +         end;
MPRINT(EM_DIAGRAM):   end;
992648    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992649    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
992650    +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
992651    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992652    +            end;
MPRINT(EM_DIAGRAM):   end;
992653    +         end;
MPRINT(EM_DIAGRAM):   end;
992654    +      end;
MPRINT(EM_DIAGRAM):   end;
992655    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992656    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992657    +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
992658    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992659    +         end;
MPRINT(EM_DIAGRAM):   end;
992660    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992661    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992662    +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
992663    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992664    +            end;
MPRINT(EM_DIAGRAM):   end;
992665    +         end;
MPRINT(EM_DIAGRAM):   end;
992666    +      end;
MPRINT(EM_DIAGRAM):   end;
992667    +   end;
MPRINT(EM_DIAGRAM):   end;
992668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992669    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992670    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
992671    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992672    +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
992673    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992674    +            end;
MPRINT(EM_DIAGRAM):   end;
992675    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992676    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992677    +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
992678    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992679    +               end;
MPRINT(EM_DIAGRAM):   end;
992680    +            end;
MPRINT(EM_DIAGRAM):   end;
992681    +         end;
MPRINT(EM_DIAGRAM):   end;
992682    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992683    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992684    +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
992685    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992686    +            end;
MPRINT(EM_DIAGRAM):   end;
992687    +         end;
MPRINT(EM_DIAGRAM):   end;
992688    +      end;
MPRINT(EM_DIAGRAM):   end;
992689    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992690    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992691    +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
992692    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992693    +         end;
MPRINT(EM_DIAGRAM):   end;
992694    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992695    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992696    +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
992697    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992698    +            end;
MPRINT(EM_DIAGRAM):   end;
992699    +         end;
MPRINT(EM_DIAGRAM):   end;
992700    +      end;
MPRINT(EM_DIAGRAM):   end;
992701    +   end;
MPRINT(EM_DIAGRAM):   end;
992702    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992703    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
992704    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
992705    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
992706    +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
992707    +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
992708    +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
992709    +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
992710    +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
992711    +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
992712    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992713    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992714    +   end;
MPRINT(EM_DIAGRAM):   end;
992715    +end;
MPRINT(EM_DIAGRAM):   end;
992716    +
992717    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
992718    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
992719    +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
992720    +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
992721    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992722    +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
992723    +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
992724    +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
992725    +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
992726    +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
992727    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
992728    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
992729    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
992730    +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
992731    +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
992732    +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
992733    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992734    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992735    +end;
MPRINT(EM_DIAGRAM):   end;
992736    +else do;
MPRINT(EM_DIAGRAM):   else do;
992737    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992738    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
992739    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992740    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992741    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
992742    +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
992743    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992744    +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
992745    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992746    +         end;
MPRINT(EM_DIAGRAM):   end;
992747    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992748    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992749    +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
992750    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992751    +            end;
MPRINT(EM_DIAGRAM):   end;
992752    +         end;
MPRINT(EM_DIAGRAM):   end;
992753    +      end;
MPRINT(EM_DIAGRAM):   end;
992754    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992755    +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992756    +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
992757    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992758    +         end;
MPRINT(EM_DIAGRAM):   end;
992759    +      end;
MPRINT(EM_DIAGRAM):   end;
992760    +   end;
MPRINT(EM_DIAGRAM):   end;
992761    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992762    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992763    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992764    +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
992765    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992766    +         end;
MPRINT(EM_DIAGRAM):   end;
992767    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992768    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992769    +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
992770    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992771    +            end;
MPRINT(EM_DIAGRAM):   end;
992772    +         end;
MPRINT(EM_DIAGRAM):   end;
992773    +      end;
MPRINT(EM_DIAGRAM):   end;
992774    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992775    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992776    +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
992777    +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
992778    +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
992779    +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
992780    +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
992781    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992782    +         end;
MPRINT(EM_DIAGRAM):   end;
992783    +      end;
MPRINT(EM_DIAGRAM):   end;
992784    +   end;
MPRINT(EM_DIAGRAM):   end;
992785    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992786    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
992787    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
992788    +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
992789    +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
992790    +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
992791    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992792    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992793    +   end;
MPRINT(EM_DIAGRAM):   end;
992794    +end;
MPRINT(EM_DIAGRAM):   end;
992795    +
992796    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
992797    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
992798    +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
992799    +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
992800    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992801    +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
992802    +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
992803    +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
992804    +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
992805    +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
992806    +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
992807    +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
992808    +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
992809    +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
992810    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
992811    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
992812    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
992813    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
992814    +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
992815    +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
992816    +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
992817    +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
992818    +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
992819    +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
992820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992822    +end;
MPRINT(EM_DIAGRAM):   end;
992823    +else do;
MPRINT(EM_DIAGRAM):   else do;
992824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992825    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
992826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992827    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992828    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
992829    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
992830    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
992831    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
992832    +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
992833    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992834    +            end;
MPRINT(EM_DIAGRAM):   end;
992835    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992836    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
992837    +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
992838    +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
992839    +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
992840    +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
992841    +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
992842    +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
992843    +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
992844    +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
992845    +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
992846    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992847    +               end;
MPRINT(EM_DIAGRAM):   end;
992848    +            end;
MPRINT(EM_DIAGRAM):   end;
992849    +         end;
MPRINT(EM_DIAGRAM):   end;
992850    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992851    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
992852    +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
992853    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992854    +            end;
MPRINT(EM_DIAGRAM):   end;
992855    +         end;
MPRINT(EM_DIAGRAM):   end;
992856    +      end;
MPRINT(EM_DIAGRAM):   end;
992857    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992858    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992859    +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
992860    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992861    +         end;
MPRINT(EM_DIAGRAM):   end;
992862    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992863    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992864    +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
992865    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992866    +            end;
MPRINT(EM_DIAGRAM):   end;
992867    +         end;
MPRINT(EM_DIAGRAM):   end;
992868    +      end;
MPRINT(EM_DIAGRAM):   end;
992869    +   end;
MPRINT(EM_DIAGRAM):   end;
992870    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992871    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992872    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
992873    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992874    +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
992875    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992876    +            end;
MPRINT(EM_DIAGRAM):   end;
992877    +            else do;
MPRINT(EM_DIAGRAM):   else do;
992878    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992879    +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
992880    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992881    +               end;
MPRINT(EM_DIAGRAM):   end;
992882    +            end;
MPRINT(EM_DIAGRAM):   end;
992883    +         end;
MPRINT(EM_DIAGRAM):   end;
992884    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992885    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992886    +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
992887    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992888    +            end;
MPRINT(EM_DIAGRAM):   end;
992889    +         end;
MPRINT(EM_DIAGRAM):   end;
992890    +      end;
MPRINT(EM_DIAGRAM):   end;
992891    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992892    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992893    +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
992894    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992895    +         end;
MPRINT(EM_DIAGRAM):   end;
992896    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992897    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992898    +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
992899    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992900    +            end;
MPRINT(EM_DIAGRAM):   end;
992901    +         end;
MPRINT(EM_DIAGRAM):   end;
992902    +      end;
MPRINT(EM_DIAGRAM):   end;
992903    +   end;
MPRINT(EM_DIAGRAM):   end;
992904    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
992905    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
992906    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
992907    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
992908    +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
992909    +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
992910    +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
992911    +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
992912    +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
992913    +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
992914    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
992915    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992916    +   end;
MPRINT(EM_DIAGRAM):   end;
992917    +end;
MPRINT(EM_DIAGRAM):   end;
992918    +
992919    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
992920    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
992921    +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
992922    +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
992923    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
992924    +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
992925    +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
992926    +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
992927    +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
992928    +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
992929    +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
992930    +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
992931    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
992932    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
992933    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
992934    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
992935    +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
992936    +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
992937    +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
992938    +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
992939    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
992940    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
992941    +end;
MPRINT(EM_DIAGRAM):   end;
992942    +else do;
MPRINT(EM_DIAGRAM):   else do;
992943    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
992944    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
992945    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
992946    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
992947    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
992948    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
992949    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
992950    +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
992951    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992952    +         end;
MPRINT(EM_DIAGRAM):   end;
992953    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992954    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
992955    +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
992956    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992957    +            end;
MPRINT(EM_DIAGRAM):   end;
992958    +         end;
MPRINT(EM_DIAGRAM):   end;
992959    +      end;
MPRINT(EM_DIAGRAM):   end;
992960    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992961    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
992962    +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
992963    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992964    +         end;
MPRINT(EM_DIAGRAM):   end;
992965    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992966    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
992967    +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
992968    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992969    +            end;
MPRINT(EM_DIAGRAM):   end;
992970    +         end;
MPRINT(EM_DIAGRAM):   end;
992971    +      end;
MPRINT(EM_DIAGRAM):   end;
992972    +   end;
MPRINT(EM_DIAGRAM):   end;
992973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
992974    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
992975    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
992976    +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
992977    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992978    +         end;
MPRINT(EM_DIAGRAM):   end;
992979    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992980    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
992981    +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
992982    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992983    +            end;
MPRINT(EM_DIAGRAM):   end;
992984    +         end;
MPRINT(EM_DIAGRAM):   end;
992985    +      end;
MPRINT(EM_DIAGRAM):   end;
992986    +      else do;
MPRINT(EM_DIAGRAM):   else do;
992987    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
992988    +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
992989    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
992990    +         end;
MPRINT(EM_DIAGRAM):   end;
992991    +         else do;
MPRINT(EM_DIAGRAM):   else do;
992992    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
992993    +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
992994    +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
992995    +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
992996    +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
992997    +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
992998    +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
992999    +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
993000    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993001    +            end;
MPRINT(EM_DIAGRAM):   end;
993002    +         end;
MPRINT(EM_DIAGRAM):   end;
993003    +      end;
MPRINT(EM_DIAGRAM):   end;
993004    +   end;
MPRINT(EM_DIAGRAM):   end;
993005    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
993006    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
993007    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
993008    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
993009    +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
993010    +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
993011    +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
993012    +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
993013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
993014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993015    +   end;
MPRINT(EM_DIAGRAM):   end;
993016    +end;
MPRINT(EM_DIAGRAM):   end;
993017    +
993018    +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
993019    +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
993020    +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
993021    +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
993022    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
993023    +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
993024    +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
993025    +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
993026    +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
993027    +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
993028    +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
993029    +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
993030    +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
993031    +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
993032    +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
993033    +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
993034    +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
993035    +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
993036    +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
993037    +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
993038    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
993039    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993040    +end;
MPRINT(EM_DIAGRAM):   end;
993041    +else do;
MPRINT(EM_DIAGRAM):   else do;
993042    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
993043    +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
993044    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
993045    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
993046    +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
993047    +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
993048    +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
993049    +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
993050    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993051    +         end;
MPRINT(EM_DIAGRAM):   end;
993052    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993053    +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
993054    +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
993055    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993056    +            end;
MPRINT(EM_DIAGRAM):   end;
993057    +         end;
MPRINT(EM_DIAGRAM):   end;
993058    +      end;
MPRINT(EM_DIAGRAM):   end;
993059    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993060    +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
993061    +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
993062    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993063    +         end;
MPRINT(EM_DIAGRAM):   end;
993064    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993065    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
993066    +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
993067    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993068    +            end;
MPRINT(EM_DIAGRAM):   end;
993069    +         end;
MPRINT(EM_DIAGRAM):   end;
993070    +      end;
MPRINT(EM_DIAGRAM):   end;
993071    +   end;
MPRINT(EM_DIAGRAM):   end;
993072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
993073    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
993074    +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
993075    +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
993076    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993077    +         end;
MPRINT(EM_DIAGRAM):   end;
993078    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993079    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
993080    +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
993081    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993082    +            end;
MPRINT(EM_DIAGRAM):   end;
993083    +         end;
MPRINT(EM_DIAGRAM):   end;
993084    +      end;
MPRINT(EM_DIAGRAM):   end;
993085    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993086    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
993087    +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
993088    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993089    +         end;
MPRINT(EM_DIAGRAM):   end;
993090    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993091    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
993092    +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
993093    +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
993094    +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
993095    +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
993096    +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
993097    +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
993098    +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
993099    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993100    +            end;
MPRINT(EM_DIAGRAM):   end;
993101    +         end;
MPRINT(EM_DIAGRAM):   end;
993102    +      end;
MPRINT(EM_DIAGRAM):   end;
993103    +   end;
MPRINT(EM_DIAGRAM):   end;
993104    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
993105    +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
993106    +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
993107    +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
993108    +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
993109    +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
993110    +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
993111    +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
993112    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
993113    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993114    +   end;
MPRINT(EM_DIAGRAM):   end;
993115    +end;
MPRINT(EM_DIAGRAM):   end;
993116    +
993117    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
993118    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
993119    +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
993120    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
993121    +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
993122    +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
993123    +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
993124    +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
993125    +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
993126    +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
993127    +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
993128    +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
993129    +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
993130    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
993131    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
993132    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
993133    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
993134    +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
993135    +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
993136    +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
993137    +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
993138    +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
993139    +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
993140    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
993141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993142    +end;
MPRINT(EM_DIAGRAM):   end;
993143    +else do;
MPRINT(EM_DIAGRAM):   else do;
993144    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
993145    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
993146    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
993147    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
993148    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
993149    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
993150    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
993151    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
993152    +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
993153    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993154    +            end;
MPRINT(EM_DIAGRAM):   end;
993155    +            else do;
MPRINT(EM_DIAGRAM):   else do;
993156    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
993157    +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
993158    +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
993159    +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
993160    +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
993161    +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
993162    +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
993163    +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
993164    +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
993165    +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
993166    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993167    +               end;
MPRINT(EM_DIAGRAM):   end;
993168    +            end;
MPRINT(EM_DIAGRAM):   end;
993169    +         end;
MPRINT(EM_DIAGRAM):   end;
993170    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993171    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
993172    +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
993173    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993174    +            end;
MPRINT(EM_DIAGRAM):   end;
993175    +         end;
MPRINT(EM_DIAGRAM):   end;
993176    +      end;
MPRINT(EM_DIAGRAM):   end;
993177    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993178    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
993179    +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
993180    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993181    +         end;
MPRINT(EM_DIAGRAM):   end;
993182    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993183    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
993184    +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
993185    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993186    +            end;
MPRINT(EM_DIAGRAM):   end;
993187    +         end;
MPRINT(EM_DIAGRAM):   end;
993188    +      end;
MPRINT(EM_DIAGRAM):   end;
993189    +   end;
MPRINT(EM_DIAGRAM):   end;
993190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
993191    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
993192    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
993193    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
993194    +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
993195    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993196    +            end;
MPRINT(EM_DIAGRAM):   end;
993197    +            else do;
MPRINT(EM_DIAGRAM):   else do;
993198    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
993199    +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
993200    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993201    +               end;
MPRINT(EM_DIAGRAM):   end;
993202    +            end;
MPRINT(EM_DIAGRAM):   end;
993203    +         end;
MPRINT(EM_DIAGRAM):   end;
993204    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993205    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
993206    +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
993207    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993208    +            end;
MPRINT(EM_DIAGRAM):   end;
993209    +         end;
MPRINT(EM_DIAGRAM):   end;
993210    +      end;
MPRINT(EM_DIAGRAM):   end;
993211    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993212    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
993213    +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
993214    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993215    +         end;
MPRINT(EM_DIAGRAM):   end;
993216    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993217    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
993218    +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
993219    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993220    +            end;
MPRINT(EM_DIAGRAM):   end;
993221    +         end;
MPRINT(EM_DIAGRAM):   end;
993222    +      end;
MPRINT(EM_DIAGRAM):   end;
993223    +   end;
MPRINT(EM_DIAGRAM):   end;
993224    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
993225    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
993226    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
993227    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
993228    +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
993229    +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
993230    +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
993231    +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
993232    +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
993233    +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
993234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
993235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993236    +   end;
MPRINT(EM_DIAGRAM):   end;
993237    +end;
MPRINT(EM_DIAGRAM):   end;
993238    +
993239    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
993240    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
993241    +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
993242    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
993243    +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
993244    +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
993245    +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
993246    +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
993247    +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
993248    +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
993249    +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
993250    +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
993251    +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
993252    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
993253    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
993254    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
993255    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
993256    +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
993257    +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
993258    +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
993259    +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
993260    +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
993261    +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
993262    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
993263    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993264    +end;
MPRINT(EM_DIAGRAM):   end;
993265    +else do;
MPRINT(EM_DIAGRAM):   else do;
993266    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
993267    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
993268    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
993269    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
993270    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
993271    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
993272    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
993273    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
993274    +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
993275    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993276    +            end;
MPRINT(EM_DIAGRAM):   end;
993277    +            else do;
MPRINT(EM_DIAGRAM):   else do;
993278    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
993279    +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
993280    +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
993281    +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
993282    +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
993283    +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
993284    +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
993285    +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
993286    +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
993287    +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
993288    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993289    +               end;
MPRINT(EM_DIAGRAM):   end;
993290    +            end;
MPRINT(EM_DIAGRAM):   end;
993291    +         end;
MPRINT(EM_DIAGRAM):   end;
993292    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993293    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
993294    +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
993295    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993296    +            end;
MPRINT(EM_DIAGRAM):   end;
993297    +         end;
MPRINT(EM_DIAGRAM):   end;
993298    +      end;
MPRINT(EM_DIAGRAM):   end;
993299    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993300    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
993301    +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
993302    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993303    +         end;
MPRINT(EM_DIAGRAM):   end;
993304    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993305    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
993306    +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
993307    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993308    +            end;
MPRINT(EM_DIAGRAM):   end;
993309    +         end;
MPRINT(EM_DIAGRAM):   end;
993310    +      end;
MPRINT(EM_DIAGRAM):   end;
993311    +   end;
MPRINT(EM_DIAGRAM):   end;
993312    +   else do;
MPRINT(EM_DIAGRAM):   else do;
993313    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
993314    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
993315    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
993316    +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
993317    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993318    +            end;
MPRINT(EM_DIAGRAM):   end;
993319    +            else do;
MPRINT(EM_DIAGRAM):   else do;
993320    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
993321    +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
993322    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993323    +               end;
MPRINT(EM_DIAGRAM):   end;
993324    +            end;
MPRINT(EM_DIAGRAM):   end;
993325    +         end;
MPRINT(EM_DIAGRAM):   end;
993326    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993327    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
993328    +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
993329    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993330    +            end;
MPRINT(EM_DIAGRAM):   end;
993331    +         end;
MPRINT(EM_DIAGRAM):   end;
993332    +      end;
MPRINT(EM_DIAGRAM):   end;
993333    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993334    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
993335    +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
993336    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993337    +         end;
MPRINT(EM_DIAGRAM):   end;
993338    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993339    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
993340    +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
993341    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993342    +            end;
MPRINT(EM_DIAGRAM):   end;
993343    +         end;
MPRINT(EM_DIAGRAM):   end;
993344    +      end;
MPRINT(EM_DIAGRAM):   end;
993345    +   end;
MPRINT(EM_DIAGRAM):   end;
993346    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
993347    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
993348    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
993349    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
993350    +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
993351    +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
993352    +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
993353    +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
993354    +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
993355    +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
993356    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
993357    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993358    +   end;
MPRINT(EM_DIAGRAM):   end;
993359    +end;
MPRINT(EM_DIAGRAM):   end;
993360    +
993361    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
993362    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
993363    +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
993364    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
993365    +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
993366    +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
993367    +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
993368    +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
993369    +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
993370    +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
993371    +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
993372    +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
993373    +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
993374    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
993375    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
993376    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
993377    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
993378    +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
993379    +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
993380    +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
993381    +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
993382    +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
993383    +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
993384    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
993385    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993386    +end;
MPRINT(EM_DIAGRAM):   end;
993387    +else do;
MPRINT(EM_DIAGRAM):   else do;
993388    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
993389    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
993390    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
993391    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
993392    +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
993393    +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
993394    +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
993395    +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
993396    +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
993397    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993398    +            end;
MPRINT(EM_DIAGRAM):   end;
993399    +            else do;
MPRINT(EM_DIAGRAM):   else do;
993400    +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
993401    +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
993402    +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
993403    +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
993404    +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
993405    +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
993406    +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
993407    +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
993408    +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
993409    +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
993410    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993411    +               end;
MPRINT(EM_DIAGRAM):   end;
993412    +            end;
MPRINT(EM_DIAGRAM):   end;
993413    +         end;
MPRINT(EM_DIAGRAM):   end;
993414    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993415    +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
993416    +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
993417    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993418    +            end;
MPRINT(EM_DIAGRAM):   end;
993419    +         end;
MPRINT(EM_DIAGRAM):   end;
993420    +      end;
MPRINT(EM_DIAGRAM):   end;
993421    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993422    +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
993423    +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
993424    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993425    +         end;
MPRINT(EM_DIAGRAM):   end;
993426    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993427    +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
993428    +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
993429    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993430    +            end;
MPRINT(EM_DIAGRAM):   end;
993431    +         end;
MPRINT(EM_DIAGRAM):   end;
993432    +      end;
MPRINT(EM_DIAGRAM):   end;
993433    +   end;
MPRINT(EM_DIAGRAM):   end;
993434    +   else do;
MPRINT(EM_DIAGRAM):   else do;
993435    +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
993436    +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
993437    +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
993438    +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
993439    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993440    +            end;
MPRINT(EM_DIAGRAM):   end;
993441    +            else do;
MPRINT(EM_DIAGRAM):   else do;
993442    +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
993443    +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
993444    +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993445    +               end;
MPRINT(EM_DIAGRAM):   end;
993446    +            end;
MPRINT(EM_DIAGRAM):   end;
993447    +         end;
MPRINT(EM_DIAGRAM):   end;
993448    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993449    +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
993450    +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
993451    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993452    +            end;
MPRINT(EM_DIAGRAM):   end;
993453    +         end;
MPRINT(EM_DIAGRAM):   end;
993454    +      end;
MPRINT(EM_DIAGRAM):   end;
993455    +      else do;
MPRINT(EM_DIAGRAM):   else do;
993456    +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
993457    +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
993458    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993459    +         end;
MPRINT(EM_DIAGRAM):   end;
993460    +         else do;
MPRINT(EM_DIAGRAM):   else do;
993461    +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
993462    +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
993463    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
993464    +            end;
MPRINT(EM_DIAGRAM):   end;
993465    +         end;
MPRINT(EM_DIAGRAM):   end;
993466    +      end;
MPRINT(EM_DIAGRAM):   end;
993467    +   end;
MPRINT(EM_DIAGRAM):   end;
993468    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
993469    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
993470    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
993471    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
993472    +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
993473    +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
993474    +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
993475    +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
993476    +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
993477    +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
993478    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
993479    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993480    +   end;
MPRINT(EM_DIAGRAM):   end;
993481    +end;
MPRINT(EM_DIAGRAM):   end;
993482    +
993483    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993484    +*** Checking missing input Interval
993485    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
993486    +
993487    +IF NMISS(
993488    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
993489    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
993490    +
993491    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
993492    +END;
MPRINT(EM_DIAGRAM):   END;
993493    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993494    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
993495    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993496    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
993497    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
993498    +END;
MPRINT(EM_DIAGRAM):   END;
993499    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
993500    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
993501    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
993502    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
993503    +END;
MPRINT(EM_DIAGRAM):   END;
993504    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993505    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
993506    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993507    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993508    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
993509    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
993510    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
993511    +   H11  =    -0.11779994129006 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.11779994129006 * S_Year_Birth ;
993512    +   H12  =     0.01439270223905 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.01439270223905 * S_Year_Birth ;
993513    +   H13  =     0.16810576596239 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.16810576596239 * S_Year_Birth ;
993514    +   H14  =      0.0126323556283 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.0126323556283 * S_Year_Birth ;
993515    +   H15  =     0.00490126786427 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.00490126786427 * S_Year_Birth ;
993516    +   H11  = H11  +    -0.10120130038823 * GRP_AcceptedCmp52
993517    +          +    -0.29145091653241 * GRP_AcceptedCmpTotal3
993518    +          +     0.01802833275582 * GRP_Frq2  +     0.15272820858021 * GRP_Frq3
993519    +          +     0.14370686750504 * GRP_Frq4  +    -0.06074271943474 * GRP_Frq5
993520    +          +    -0.16494155191767 * GRP_Frq6  +    -0.03508219706844 * GRP_Frq7
993521    +          +     0.03801978911133 * GRP_Frq8  +    -0.04837268754875 * GRP_Frq9
993522    +          +     0.04133949833009 * GRP_Frq10  +     0.01585269216602 *
993523    +        GRP_Income2  +     0.02526921062614 * GRP_Income3
993524    +          +     0.19310035357829 * GRP_Income4  +     0.16615699836751 *
993525    +        GRP_Income5  +    -0.01656164262311 * GRP_Income6
993526    +          +     0.04387641774257 * GRP_Income7  +    -0.17330241074594 *
993527    +        GRP_Income8  +     0.16738656775649 * GRP_Income9
993528    +          +      0.1630131883969 * GRP_Income10  +     0.34279387127093 *
993529    +        GRP_Mnt2  +     0.02575623945089 * GRP_Mnt3  +      0.0148719039037 *
993530    +        GRP_Mnt4  +    -0.14622490571067 * GRP_Mnt5  +    -0.19294026942757 *
993531    +        GRP_Mnt6  +    -0.00783114298777 * GRP_Mnt7  +     0.09174888699683 *
993532    +        GRP_Mnt8  +    -0.08601289398209 * GRP_Mnt9  +     0.21448453029375 *
993533    +        GRP_Mnt10  +     0.10697869967047 * GRP_MntFishProducts3
993534    +          +     0.06225775049469 * GRP_MntFishProducts4
993535    +          +    -0.01408797391558 * GRP_MntFishProducts5
993536    +          +     0.02848289613699 * GRP_MntFishProducts6
993537    +          +     0.05325776779504 * GRP_MntFishProducts7
993538    +          +     0.02437321250069 * GRP_MntFishProducts8
993539    +          +      0.2617858307061 * GRP_MntFishProducts9
993540    +          +    -0.07319837564913 * GRP_MntFishProducts10
993541    +          +    -0.02161432541757 * GRP_MntGoldProds2
993542    +          +     0.19849470180453 * GRP_MntGoldProds3
993543    +          +     0.08066760525249 * GRP_MntGoldProds4
993544    +          +     0.14331081076233 * GRP_MntGoldProds5
993545    +          +     0.05943247571249 * GRP_MntGoldProds6
993546    +          +      0.0608061458335 * GRP_MntGoldProds7
993547    +          +     0.05038235669624 * GRP_MntGoldProds8
993548    +          +    -0.04685805642629 * GRP_MntGoldProds9
993549    +          +    -0.29152354570589 * GRP_MntGoldProds10
993550    +          +    -0.39968469332087 * GRP_MntMeatProducts2
993551    +          +    -0.19201423289799 * GRP_MntMeatProducts3
993552    +          +    -0.27560935050599 * GRP_MntMeatProducts4
993553    +          +     -0.0283731212244 * GRP_MntMeatProducts5
993554    +          +     0.03960809803437 * GRP_MntMeatProducts6
993555    +          +    -0.18777726757179 * GRP_MntMeatProducts7
993556    +          +    -0.05524894778392 * GRP_MntMeatProducts8
993557    +          +     0.13594754762959 * GRP_MntMeatProducts9
993558    +          +     0.43906108436269 * GRP_MntMeatProducts10
993559    +          +    -0.06435829145013 * GRP_MntSweetProducts3
993560    +          +     -0.0210530647656 * GRP_MntSweetProducts4
993561    +          +     0.12313868065999 * GRP_MntSweetProducts5
993562    +          +     0.09312437748244 * GRP_MntSweetProducts6
993563    +          +    -0.12471463660639 * GRP_MntSweetProducts7
993564    +          +     0.06602921514536 * GRP_MntSweetProducts8
993565    +          +     0.08468927916869 * GRP_MntSweetProducts9
993566    +          +    -0.13586571968305 * GRP_MntSweetProducts10
993567    +          +     0.36708616844444 * GRP_MntWines2  +     0.10783294052251 *
993568    +        GRP_MntWines3  +     0.04439392359556 * GRP_MntWines4
993569    +          +     0.03715965915951 * GRP_MntWines5  +    -0.03210586065209 *
993570    +        GRP_MntWines6  +     0.11894764415135 * GRP_MntWines7
993571    +          +    -0.11667658986463 * GRP_MntWines8  +    -0.00166194976989 *
993572    +        GRP_MntWines9  +    -0.40981775275403 * GRP_MntWines10
993573    +          +    -0.44861088264537 * GRP_NumCatalogPurchases3
993574    +          +    -0.16773306967441 * GRP_NumCatalogPurchases4
993575    +          +    -0.09165932058272 * GRP_NumCatalogPurchases5
993576    +          +     0.14298090214424 * GRP_NumCatalogPurchases6
993577    +          +    -0.02734458137769 * GRP_NumCatalogPurchases7
993578    +          +     0.08564176396946 * GRP_NumDistPurchases2
993579    +          +    -0.04992946661847 * GRP_NumDistPurchases3
993580    +          +    -0.02597736910094 * GRP_NumDistPurchases4
993581    +          +    -0.05061636893507 * GRP_NumDistPurchases5
993582    +          +    -0.03128813104108 * GRP_NumDistPurchases6
993583    +          +    -0.13321401016342 * GRP_NumDistPurchases7
993584    +          +    -0.16916873887958 * GRP_NumDistPurchases8
993585    +          +     0.27222053253076 * GRP_NumDistPurchases9
993586    +          +     0.31493873732485 * GRP_NumDistPurchases10
993587    +          +     0.00940915246846 * GRP_NumWebPurchases2
993588    +          +    -0.09454543870383 * GRP_NumWebPurchases3
993589    +          +     0.02354360806187 * GRP_NumWebPurchases4
993590    +          +      0.0623848511153 * GRP_NumWebPurchases5
993591    +          +    -0.14177656017556 * GRP_NumWebPurchases6
993592    +          +    -0.08722967193472 * GRP_NumWebPurchases7
993593    +          +     0.08762950710966 * GRP_NumWebPurchases8
993594    +          +    -0.02407598807456 * GRP_NumWebVisitsMonth2
993595    +          +    -0.08734142313349 * GRP_NumWebVisitsMonth3
993596    +          +    -0.07761023656162 * GRP_NumWebVisitsMonth4
993597    +          +     -0.1666467425177 * GRP_NumWebVisitsMonth5
993598    +          +    -0.08134770955005 * GRP_NumWebVisitsMonth6
993599    +          +     0.02327986356952 * GRP_NumWebVisitsMonth7
993600    +          +     0.35444907806561 * GRP_NumWebVisitsMonth8
993601    +          +     0.09441161284057 * GRP_RFMstat2  +     -0.1319671606322 *
993602    +        GRP_RFMstat3  +     0.02748981688883 * GRP_RFMstat4
993603    +          +    -0.11127405232643 * GRP_RFMstat5  +     0.02825604094962 *
993604    +        GRP_RFMstat6  +    -0.11039280017266 * GRP_RFMstat7
993605    +          +    -0.26019386650861 * GRP_RFMstat8  +    -0.21523161156313 *
993606    +        GRP_RFMstat9  +    -0.03629252062158 * GRP_RFMstat10
993607    +          +     0.15763266470046 * GRP_RMntFrq2  +     0.08780054158661 *
993608    +        GRP_RMntFrq3  +     0.17890334374232 * GRP_RMntFrq4
993609    +          +     0.19959789054927 * GRP_RMntFrq5  +    -0.13310639896206 *
993610    +        GRP_RMntFrq6  +     0.02766923637797 * GRP_RMntFrq7
993611    +          +    -0.00498872677557 * GRP_RMntFrq8  +     0.28068860472864 *
993612    +        GRP_RMntFrq9  +    -0.00625449404896 * GRP_RMntFrq10
993613    +          +     0.14035437235589 * GRP_Recency2  +     0.21926411321176 *
993614    +        GRP_Recency3  +     0.40977962900363 * GRP_Recency4
993615    +          +    -0.04780791117376 * GRP_Recency5  +     0.06447865348011 *
993616    +        GRP_Recency6  +     0.02645001728685 * GRP_Recency7
993617    +          +    -0.25500720229394 * GRP_Recency8  +    -0.33194208803227 *
993618    +        GRP_Recency9  +    -0.37509931095396 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10120130038823 * GRP_AcceptedCmp52 + -0.29145091653241 *
GRP_AcceptedCmpTotal3 + 0.01802833275582 * GRP_Frq2 + 0.15272820858021 * GRP_Frq3 +
0.14370686750504 * GRP_Frq4 + -0.06074271943474 * GRP_Frq5 + -0.16494155191767 * GRP_Frq6 +
-0.03508219706844 * GRP_Frq7 + 0.03801978911133 * GRP_Frq8 + -0.04837268754875 * GRP_Frq9 +
0.04133949833009 * GRP_Frq10 + 0.01585269216602 * GRP_Income2 + 0.02526921062614 * GRP_Income3
+ 0.19310035357829 * GRP_Income4 + 0.16615699836751 * GRP_Income5 + -0.01656164262311 *
GRP_Income6 + 0.04387641774257 * GRP_Income7 + -0.17330241074594 * GRP_Income8 +
0.16738656775649 * GRP_Income9 + 0.1630131883969 * GRP_Income10 + 0.34279387127093 * GRP_Mnt2
+ 0.02575623945089 * GRP_Mnt3 + 0.0148719039037 * GRP_Mnt4 + -0.14622490571067 * GRP_Mnt5 +
-0.19294026942757 * GRP_Mnt6 + -0.00783114298777 * GRP_Mnt7 + 0.09174888699683 * GRP_Mnt8 +
-0.08601289398209 * GRP_Mnt9 + 0.21448453029375 * GRP_Mnt10 + 0.10697869967047 *
GRP_MntFishProducts3 + 0.06225775049469 * GRP_MntFishProducts4 + -0.01408797391558 *
GRP_MntFishProducts5 + 0.02848289613699 * GRP_MntFishProducts6 + 0.05325776779504 *
GRP_MntFishProducts7 + 0.02437321250069 * GRP_MntFishProducts8 + 0.2617858307061 *
GRP_MntFishProducts9 + -0.07319837564913 * GRP_MntFishProducts10 + -0.02161432541757 *
GRP_MntGoldProds2 + 0.19849470180453 * GRP_MntGoldProds3 + 0.08066760525249 *
GRP_MntGoldProds4 + 0.14331081076233 * GRP_MntGoldProds5 + 0.05943247571249 *
GRP_MntGoldProds6 + 0.0608061458335 * GRP_MntGoldProds7 + 0.05038235669624 * GRP_MntGoldProds8
+ -0.04685805642629 * GRP_MntGoldProds9 + -0.29152354570589 * GRP_MntGoldProds10 +
-0.39968469332087 * GRP_MntMeatProducts2 + -0.19201423289799 * GRP_MntMeatProducts3 +
-0.27560935050599 * GRP_MntMeatProducts4 + -0.0283731212244 * GRP_MntMeatProducts5 +
0.03960809803437 * GRP_MntMeatProducts6 + -0.18777726757179 * GRP_MntMeatProducts7 +
-0.05524894778392 * GRP_MntMeatProducts8 + 0.13594754762959 * GRP_MntMeatProducts9 +
0.43906108436269 * GRP_MntMeatProducts10 + -0.06435829145013 * GRP_MntSweetProducts3 +
-0.0210530647656 * GRP_MntSweetProducts4 + 0.12313868065999 * GRP_MntSweetProducts5 +
0.09312437748244 * GRP_MntSweetProducts6 + -0.12471463660639 * GRP_MntSweetProducts7 +
0.06602921514536 * GRP_MntSweetProducts8 + 0.08468927916869 * GRP_MntSweetProducts9 +
-0.13586571968305 * GRP_MntSweetProducts10 + 0.36708616844444 * GRP_MntWines2 +
0.10783294052251 * GRP_MntWines3 + 0.04439392359556 * GRP_MntWines4 + 0.03715965915951 *
GRP_MntWines5 + -0.03210586065209 * GRP_MntWines6 + 0.11894764415135 * GRP_MntWines7 +
-0.11667658986463 * GRP_MntWines8 + -0.00166194976989 * GRP_MntWines9 + -0.40981775275403 *
GRP_MntWines10 + -0.44861088264537 * GRP_NumCatalogPurchases3 + -0.16773306967441 *
GRP_NumCatalogPurchases4 + -0.09165932058272 * GRP_NumCatalogPurchases5 + 0.14298090214424 *
GRP_NumCatalogPurchases6 + -0.02734458137769 * GRP_NumCatalogPurchases7 + 0.08564176396946 *
GRP_NumDistPurchases2 + -0.04992946661847 * GRP_NumDistPurchases3 + -0.02597736910094 *
GRP_NumDistPurchases4 + -0.05061636893507 * GRP_NumDistPurchases5 + -0.03128813104108 *
GRP_NumDistPurchases6 + -0.13321401016342 * GRP_NumDistPurchases7 + -0.16916873887958 *
GRP_NumDistPurchases8 + 0.27222053253076 * GRP_NumDistPurchases9 + 0.31493873732485 *
GRP_NumDistPurchases10 + 0.00940915246846 * GRP_NumWebPurchases2 + -0.09454543870383 *
GRP_NumWebPurchases3 + 0.02354360806187 * GRP_NumWebPurchases4 + 0.0623848511153 *
GRP_NumWebPurchases5 + -0.14177656017556 * GRP_NumWebPurchases6 + -0.08722967193472 *
GRP_NumWebPurchases7 + 0.08762950710966 * GRP_NumWebPurchases8 + -0.02407598807456 *
GRP_NumWebVisitsMonth2 + -0.08734142313349 * GRP_NumWebVisitsMonth3 + -0.07761023656162 *
GRP_NumWebVisitsMonth4 + -0.1666467425177 * GRP_NumWebVisitsMonth5 + -0.08134770955005 *
GRP_NumWebVisitsMonth6 + 0.02327986356952 * GRP_NumWebVisitsMonth7 + 0.35444907806561 *
GRP_NumWebVisitsMonth8 + 0.09441161284057 * GRP_RFMstat2 + -0.1319671606322 * GRP_RFMstat3 +
0.02748981688883 * GRP_RFMstat4 + -0.11127405232643 * GRP_RFMstat5 + 0.02825604094962 *
GRP_RFMstat6 + -0.11039280017266 * GRP_RFMstat7 + -0.26019386650861 * GRP_RFMstat8 +
-0.21523161156313 * GRP_RFMstat9 + -0.03629252062158 * GRP_RFMstat10 + 0.15763266470046 *
GRP_RMntFrq2 + 0.08780054158661 * GRP_RMntFrq3 + 0.17890334374232 * GRP_RMntFrq4 +
0.19959789054927 * GRP_RMntFrq5 + -0.13310639896206 * GRP_RMntFrq6 + 0.02766923637797 *
GRP_RMntFrq7 + -0.00498872677557 * GRP_RMntFrq8 + 0.28068860472864 * GRP_RMntFrq9 +
-0.00625449404896 * GRP_RMntFrq10 + 0.14035437235589 * GRP_Recency2 + 0.21926411321176 *
GRP_Recency3 + 0.40977962900363 * GRP_Recency4 + -0.04780791117376 * GRP_Recency5 +
0.06447865348011 * GRP_Recency6 + 0.02645001728685 * GRP_Recency7 + -0.25500720229394 *
GRP_Recency8 + -0.33194208803227 * GRP_Recency9 + -0.37509931095396 * GRP_Recency10 ;
993619    +   H12  = H12  +    -0.00249283048209 * GRP_AcceptedCmp52
993620    +          +    -0.09776325087959 * GRP_AcceptedCmpTotal3
993621    +          +    -0.00891809516361 * GRP_Frq2  +     0.14615554769541 * GRP_Frq3
993622    +          +      0.1722454322885 * GRP_Frq4  +     0.09138515117743 * GRP_Frq5
993623    +          +     0.14064605711365 * GRP_Frq6  +       0.208609928829 * GRP_Frq7
993624    +          +     0.06763174841825 * GRP_Frq8  +    -0.16985550967141 * GRP_Frq9
993625    +          +    -0.30826093029849 * GRP_Frq10  +    -0.17205683871698 *
993626    +        GRP_Income2  +    -0.07552170179471 * GRP_Income3
993627    +          +    -0.08527885170211 * GRP_Income4  +     0.06185373635887 *
993628    +        GRP_Income5  +     0.00815930818625 * GRP_Income6
993629    +          +    -0.19329281237864 * GRP_Income7  +    -0.24838123961567 *
993630    +        GRP_Income8  +     -0.3451185715786 * GRP_Income9
993631    +          +    -0.06156031870187 * GRP_Income10  +     0.12646781621248 *
993632    +        GRP_Mnt2  +     0.20774819950358 * GRP_Mnt3  +     0.09336734204436 *
993633    +        GRP_Mnt4  +    -0.01383466332001 * GRP_Mnt5  +     0.00434172484009 *
993634    +        GRP_Mnt6  +    -0.09016745393613 * GRP_Mnt7  +     0.02434881276443 *
993635    +        GRP_Mnt8  +     0.10420387102641 * GRP_Mnt9  +     0.03849142222263 *
993636    +        GRP_Mnt10  +     0.00119020430694 * GRP_MntFishProducts3
993637    +          +    -0.04202232011311 * GRP_MntFishProducts4
993638    +          +     0.00471909191461 * GRP_MntFishProducts5
993639    +          +    -0.01341208106056 * GRP_MntFishProducts6
993640    +          +    -0.03381180366256 * GRP_MntFishProducts7
993641    +          +     0.07915179388389 * GRP_MntFishProducts8
993642    +          +     -0.2118274361441 * GRP_MntFishProducts9
993643    +          +     0.00900226925099 * GRP_MntFishProducts10
993644    +          +    -0.07254685103355 * GRP_MntGoldProds2
993645    +          +     0.07651956492684 * GRP_MntGoldProds3
993646    +          +      0.0379503877146 * GRP_MntGoldProds4
993647    +          +     -0.0143124128849 * GRP_MntGoldProds5
993648    +          +    -0.09371264388109 * GRP_MntGoldProds6
993649    +          +    -0.08979093146507 * GRP_MntGoldProds7
993650    +          +    -0.11428579149697 * GRP_MntGoldProds8
993651    +          +     0.02515117293126 * GRP_MntGoldProds9
993652    +          +     0.03958828108962 * GRP_MntGoldProds10
993653    +          +    -0.53525050445826 * GRP_MntMeatProducts2
993654    +          +    -0.38303217784514 * GRP_MntMeatProducts3
993655    +          +    -0.15105347636013 * GRP_MntMeatProducts4
993656    +          +    -0.12802941645278 * GRP_MntMeatProducts5
993657    +          +     0.10972081378946 * GRP_MntMeatProducts6
993658    +          +     0.22627684747763 * GRP_MntMeatProducts7
993659    +          +     0.23914993995125 * GRP_MntMeatProducts8
993660    +          +     0.21711314655121 * GRP_MntMeatProducts9
993661    +          +     0.17696755989253 * GRP_MntMeatProducts10
993662    +          +     0.01432518789616 * GRP_MntSweetProducts3
993663    +          +       0.112537640149 * GRP_MntSweetProducts4
993664    +          +     0.02389715897828 * GRP_MntSweetProducts5
993665    +          +    -0.05432364662019 * GRP_MntSweetProducts6
993666    +          +     0.12863266937677 * GRP_MntSweetProducts7
993667    +          +    -0.12170377984261 * GRP_MntSweetProducts8
993668    +          +    -0.15569754043078 * GRP_MntSweetProducts9
993669    +          +     0.11101814605488 * GRP_MntSweetProducts10
993670    +          +     0.26441611005377 * GRP_MntWines2  +     0.20796872121882 *
993671    +        GRP_MntWines3  +     0.18485529175745 * GRP_MntWines4
993672    +          +     0.20613815212747 * GRP_MntWines5  +    -0.08399507703703 *
993673    +        GRP_MntWines6  +    -0.12917024022546 * GRP_MntWines7
993674    +          +    -0.11831999499226 * GRP_MntWines8  +    -0.23794898937509 *
993675    +        GRP_MntWines9  +    -0.24100263717396 * GRP_MntWines10
993676    +          +    -0.64938371587273 * GRP_NumCatalogPurchases3
993677    +          +    -0.26502090013033 * GRP_NumCatalogPurchases4
993678    +          +     0.11962176026494 * GRP_NumCatalogPurchases5
993679    +          +     0.23744578086114 * GRP_NumCatalogPurchases6
993680    +          +     0.33203573078088 * GRP_NumCatalogPurchases7
993681    +          +     -0.1355753508144 * GRP_NumDistPurchases2
993682    +          +    -0.19902516536157 * GRP_NumDistPurchases3
993683    +          +     0.01617542872985 * GRP_NumDistPurchases4
993684    +          +     0.03558443617419 * GRP_NumDistPurchases5
993685    +          +     0.01694358499533 * GRP_NumDistPurchases6
993686    +          +    -0.03587174008246 * GRP_NumDistPurchases7
993687    +          +    -0.13059687132935 * GRP_NumDistPurchases8
993688    +          +    -0.00261084476059 * GRP_NumDistPurchases9
993689    +          +     0.03959312715152 * GRP_NumDistPurchases10
993690    +          +    -0.00699065524457 * GRP_NumWebPurchases2
993691    +          +     0.08645828622182 * GRP_NumWebPurchases3
993692    +          +     0.06137932095071 * GRP_NumWebPurchases4
993693    +          +     0.04397086481384 * GRP_NumWebPurchases5
993694    +          +     0.03939129656232 * GRP_NumWebPurchases6
993695    +          +      0.0761710872424 * GRP_NumWebPurchases7
993696    +          +    -0.18535375992005 * GRP_NumWebPurchases8
993697    +          +    -0.37974326775206 * GRP_NumWebVisitsMonth2
993698    +          +    -0.21664462893373 * GRP_NumWebVisitsMonth3
993699    +          +    -0.29354965662623 * GRP_NumWebVisitsMonth4
993700    +          +     0.05912309691805 * GRP_NumWebVisitsMonth5
993701    +          +     0.00336298282733 * GRP_NumWebVisitsMonth6
993702    +          +     0.18685442551954 * GRP_NumWebVisitsMonth7
993703    +          +     0.07672545849498 * GRP_NumWebVisitsMonth8
993704    +          +    -0.07207149498011 * GRP_RFMstat2  +    -0.15950305183546 *
993705    +        GRP_RFMstat3  +    -0.04769364516978 * GRP_RFMstat4
993706    +          +    -0.00882390888626 * GRP_RFMstat5  +    -0.07661006142272 *
993707    +        GRP_RFMstat6  +     0.10619202272066 * GRP_RFMstat7
993708    +          +     0.12781265381966 * GRP_RFMstat8  +    -0.06589954645466 *
993709    +        GRP_RFMstat9  +      0.0920076477391 * GRP_RFMstat10
993710    +          +     0.22417426812948 * GRP_RMntFrq2  +     0.12308955447252 *
993711    +        GRP_RMntFrq3  +     -0.0709096722458 * GRP_RMntFrq4
993712    +          +    -0.09665324906445 * GRP_RMntFrq5  +     0.05404802941496 *
993713    +        GRP_RMntFrq6  +     -0.2773732279586 * GRP_RMntFrq7
993714    +          +    -0.30308069179408 * GRP_RMntFrq8  +    -0.11423475800051 *
993715    +        GRP_RMntFrq9  +    -0.00207097504576 * GRP_RMntFrq10
993716    +          +     0.48750564548185 * GRP_Recency2  +     0.33320222570381 *
993717    +        GRP_Recency3  +     0.24796788740541 * GRP_Recency4
993718    +          +     0.24418511158274 * GRP_Recency5  +     0.04836980441754 *
993719    +        GRP_Recency6  +     0.00192843617184 * GRP_Recency7
993720    +          +    -0.09040437561133 * GRP_Recency8  +    -0.13695951196499 *
993721    +        GRP_Recency9  +    -0.38555406809777 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00249283048209 * GRP_AcceptedCmp52 + -0.09776325087959 *
GRP_AcceptedCmpTotal3 + -0.00891809516361 * GRP_Frq2 + 0.14615554769541 * GRP_Frq3 +
0.1722454322885 * GRP_Frq4 + 0.09138515117743 * GRP_Frq5 + 0.14064605711365 * GRP_Frq6 +
0.208609928829 * GRP_Frq7 + 0.06763174841825 * GRP_Frq8 + -0.16985550967141 * GRP_Frq9 +
-0.30826093029849 * GRP_Frq10 + -0.17205683871698 * GRP_Income2 + -0.07552170179471 *
GRP_Income3 + -0.08527885170211 * GRP_Income4 + 0.06185373635887 * GRP_Income5 +
0.00815930818625 * GRP_Income6 + -0.19329281237864 * GRP_Income7 + -0.24838123961567 *
GRP_Income8 + -0.3451185715786 * GRP_Income9 + -0.06156031870187 * GRP_Income10 +
0.12646781621248 * GRP_Mnt2 + 0.20774819950358 * GRP_Mnt3 + 0.09336734204436 * GRP_Mnt4 +
-0.01383466332001 * GRP_Mnt5 + 0.00434172484009 * GRP_Mnt6 + -0.09016745393613 * GRP_Mnt7 +
0.02434881276443 * GRP_Mnt8 + 0.10420387102641 * GRP_Mnt9 + 0.03849142222263 * GRP_Mnt10 +
0.00119020430694 * GRP_MntFishProducts3 + -0.04202232011311 * GRP_MntFishProducts4 +
0.00471909191461 * GRP_MntFishProducts5 + -0.01341208106056 * GRP_MntFishProducts6 +
-0.03381180366256 * GRP_MntFishProducts7 + 0.07915179388389 * GRP_MntFishProducts8 +
-0.2118274361441 * GRP_MntFishProducts9 + 0.00900226925099 * GRP_MntFishProducts10 +
-0.07254685103355 * GRP_MntGoldProds2 + 0.07651956492684 * GRP_MntGoldProds3 + 0.0379503877146
* GRP_MntGoldProds4 + -0.0143124128849 * GRP_MntGoldProds5 + -0.09371264388109 *
GRP_MntGoldProds6 + -0.08979093146507 * GRP_MntGoldProds7 + -0.11428579149697 *
GRP_MntGoldProds8 + 0.02515117293126 * GRP_MntGoldProds9 + 0.03958828108962 *
GRP_MntGoldProds10 + -0.53525050445826 * GRP_MntMeatProducts2 + -0.38303217784514 *
GRP_MntMeatProducts3 + -0.15105347636013 * GRP_MntMeatProducts4 + -0.12802941645278 *
GRP_MntMeatProducts5 + 0.10972081378946 * GRP_MntMeatProducts6 + 0.22627684747763 *
GRP_MntMeatProducts7 + 0.23914993995125 * GRP_MntMeatProducts8 + 0.21711314655121 *
GRP_MntMeatProducts9 + 0.17696755989253 * GRP_MntMeatProducts10 + 0.01432518789616 *
GRP_MntSweetProducts3 + 0.112537640149 * GRP_MntSweetProducts4 + 0.02389715897828 *
GRP_MntSweetProducts5 + -0.05432364662019 * GRP_MntSweetProducts6 + 0.12863266937677 *
GRP_MntSweetProducts7 + -0.12170377984261 * GRP_MntSweetProducts8 + -0.15569754043078 *
GRP_MntSweetProducts9 + 0.11101814605488 * GRP_MntSweetProducts10 + 0.26441611005377 *
GRP_MntWines2 + 0.20796872121882 * GRP_MntWines3 + 0.18485529175745 * GRP_MntWines4 +
0.20613815212747 * GRP_MntWines5 + -0.08399507703703 * GRP_MntWines6 + -0.12917024022546 *
GRP_MntWines7 + -0.11831999499226 * GRP_MntWines8 + -0.23794898937509 * GRP_MntWines9 +
-0.24100263717396 * GRP_MntWines10 + -0.64938371587273 * GRP_NumCatalogPurchases3 +
-0.26502090013033 * GRP_NumCatalogPurchases4 + 0.11962176026494 * GRP_NumCatalogPurchases5 +
0.23744578086114 * GRP_NumCatalogPurchases6 + 0.33203573078088 * GRP_NumCatalogPurchases7 +
-0.1355753508144 * GRP_NumDistPurchases2 + -0.19902516536157 * GRP_NumDistPurchases3 +
0.01617542872985 * GRP_NumDistPurchases4 + 0.03558443617419 * GRP_NumDistPurchases5 +
0.01694358499533 * GRP_NumDistPurchases6 + -0.03587174008246 * GRP_NumDistPurchases7 +
-0.13059687132935 * GRP_NumDistPurchases8 + -0.00261084476059 * GRP_NumDistPurchases9 +
0.03959312715152 * GRP_NumDistPurchases10 + -0.00699065524457 * GRP_NumWebPurchases2 +
0.08645828622182 * GRP_NumWebPurchases3 + 0.06137932095071 * GRP_NumWebPurchases4 +
0.04397086481384 * GRP_NumWebPurchases5 + 0.03939129656232 * GRP_NumWebPurchases6 +
0.0761710872424 * GRP_NumWebPurchases7 + -0.18535375992005 * GRP_NumWebPurchases8 +
-0.37974326775206 * GRP_NumWebVisitsMonth2 + -0.21664462893373 * GRP_NumWebVisitsMonth3 +
-0.29354965662623 * GRP_NumWebVisitsMonth4 + 0.05912309691805 * GRP_NumWebVisitsMonth5 +
0.00336298282733 * GRP_NumWebVisitsMonth6 + 0.18685442551954 * GRP_NumWebVisitsMonth7 +
0.07672545849498 * GRP_NumWebVisitsMonth8 + -0.07207149498011 * GRP_RFMstat2 +
-0.15950305183546 * GRP_RFMstat3 + -0.04769364516978 * GRP_RFMstat4 + -0.00882390888626 *
GRP_RFMstat5 + -0.07661006142272 * GRP_RFMstat6 + 0.10619202272066 * GRP_RFMstat7 +
0.12781265381966 * GRP_RFMstat8 + -0.06589954645466 * GRP_RFMstat9 + 0.0920076477391 *
GRP_RFMstat10 + 0.22417426812948 * GRP_RMntFrq2 + 0.12308955447252 * GRP_RMntFrq3 +
-0.0709096722458 * GRP_RMntFrq4 + -0.09665324906445 * GRP_RMntFrq5 + 0.05404802941496 *
GRP_RMntFrq6 + -0.2773732279586 * GRP_RMntFrq7 + -0.30308069179408 * GRP_RMntFrq8 +
-0.11423475800051 * GRP_RMntFrq9 + -0.00207097504576 * GRP_RMntFrq10 + 0.48750564548185 *
GRP_Recency2 + 0.33320222570381 * GRP_Recency3 + 0.24796788740541 * GRP_Recency4 +
0.24418511158274 * GRP_Recency5 + 0.04836980441754 * GRP_Recency6 + 0.00192843617184 *
GRP_Recency7 + -0.09040437561133 * GRP_Recency8 + -0.13695951196499 * GRP_Recency9 +
-0.38555406809777 * GRP_Recency10 ;
993722    +   H13  = H13  +    -0.23975949521409 * GRP_AcceptedCmp52
993723    +          +    -0.15038912427149 * GRP_AcceptedCmpTotal3
993724    +          +    -0.02639019894622 * GRP_Frq2  +      0.0209879343907 * GRP_Frq3
993725    +          +    -0.04701151124137 * GRP_Frq4  +     0.21097277354199 * GRP_Frq5
993726    +          +     0.12012227863902 * GRP_Frq6  +    -0.07421032341607 * GRP_Frq7
993727    +          +     0.19658431807083 * GRP_Frq8  +    -0.05226562615755 * GRP_Frq9
993728    +          +     0.05597653780122 * GRP_Frq10  +     0.17120341383362 *
993729    +        GRP_Income2  +     0.09812054914141 * GRP_Income3
993730    +          +     0.15644165989621 * GRP_Income4  +     0.04090465657337 *
993731    +        GRP_Income5  +     0.14854142220811 * GRP_Income6
993732    +          +     0.10518345156393 * GRP_Income7  +     0.07639614158562 *
993733    +        GRP_Income8  +     0.17046626234482 * GRP_Income9
993734    +          +     0.03825262112761 * GRP_Income10  +    -0.06766465427377 *
993735    +        GRP_Mnt2  +    -0.08563392300903 * GRP_Mnt3  +    -0.21787222756548 *
993736    +        GRP_Mnt4  +     0.01899823791029 * GRP_Mnt5  +     0.05967271085466 *
993737    +        GRP_Mnt6  +    -0.12499644228381 * GRP_Mnt7  +    -0.14435081412155 *
993738    +        GRP_Mnt8  +    -0.14252043260208 * GRP_Mnt9  +    -0.08323850676532 *
993739    +        GRP_Mnt10  +     0.04114477269411 * GRP_MntFishProducts3
993740    +          +     0.09893856338637 * GRP_MntFishProducts4
993741    +          +      0.1385215809505 * GRP_MntFishProducts5
993742    +          +    -0.14638498466154 * GRP_MntFishProducts6
993743    +          +    -0.00648777978091 * GRP_MntFishProducts7
993744    +          +     0.10782473267799 * GRP_MntFishProducts8
993745    +          +     0.13001972812092 * GRP_MntFishProducts9
993746    +          +    -0.15664721122766 * GRP_MntFishProducts10
993747    +          +     0.06207283716621 * GRP_MntGoldProds2
993748    +          +    -0.16540502618932 * GRP_MntGoldProds3
993749    +          +    -0.00419113426167 * GRP_MntGoldProds4
993750    +          +    -0.15616562124594 * GRP_MntGoldProds5
993751    +          +     0.19299597306567 * GRP_MntGoldProds6
993752    +          +     0.06014052355635 * GRP_MntGoldProds7
993753    +          +    -0.04575999486456 * GRP_MntGoldProds8
993754    +          +      0.0095752569809 * GRP_MntGoldProds9
993755    +          +    -0.05949014660438 * GRP_MntGoldProds10
993756    +          +    -0.19601970187904 * GRP_MntMeatProducts2
993757    +          +    -0.05185736813653 * GRP_MntMeatProducts3
993758    +          +    -0.09619773384577 * GRP_MntMeatProducts4
993759    +          +    -0.01027665288868 * GRP_MntMeatProducts5
993760    +          +    -0.07620773034876 * GRP_MntMeatProducts6
993761    +          +    -0.21888659802114 * GRP_MntMeatProducts7
993762    +          +     0.09136355079296 * GRP_MntMeatProducts8
993763    +          +    -0.03462987847874 * GRP_MntMeatProducts9
993764    +          +      0.2033242827681 * GRP_MntMeatProducts10
993765    +          +    -0.03870314975231 * GRP_MntSweetProducts3
993766    +          +     0.02833274507907 * GRP_MntSweetProducts4
993767    +          +    -0.14006037291884 * GRP_MntSweetProducts5
993768    +          +     0.02172045500272 * GRP_MntSweetProducts6
993769    +          +     0.10356823396614 * GRP_MntSweetProducts7
993770    +          +     0.19721738077737 * GRP_MntSweetProducts8
993771    +          +    -0.04378585782125 * GRP_MntSweetProducts9
993772    +          +     0.08558224507445 * GRP_MntSweetProducts10
993773    +          +     0.18750621323673 * GRP_MntWines2  +     0.20631370991164 *
993774    +        GRP_MntWines3  +     0.18264845188539 * GRP_MntWines4
993775    +          +     0.19517731981032 * GRP_MntWines5  +      0.3172348878549 *
993776    +        GRP_MntWines6  +     -0.0700174737681 * GRP_MntWines7
993777    +          +    -0.13433821831179 * GRP_MntWines8  +    -0.18525074858401 *
993778    +        GRP_MntWines9  +    -0.00462918646351 * GRP_MntWines10
993779    +          +    -0.26862743551871 * GRP_NumCatalogPurchases3
993780    +          +     -0.1922446276115 * GRP_NumCatalogPurchases4
993781    +          +    -0.14822362894342 * GRP_NumCatalogPurchases5
993782    +          +    -0.04052742965098 * GRP_NumCatalogPurchases6
993783    +          +     0.21101352511891 * GRP_NumCatalogPurchases7
993784    +          +    -0.09588775463072 * GRP_NumDistPurchases2
993785    +          +    -0.15658252158004 * GRP_NumDistPurchases3
993786    +          +      0.0013743090184 * GRP_NumDistPurchases4
993787    +          +    -0.11554368014443 * GRP_NumDistPurchases5
993788    +          +     0.07423244034811 * GRP_NumDistPurchases6
993789    +          +     0.05834805090718 * GRP_NumDistPurchases7
993790    +          +    -0.12463576132288 * GRP_NumDistPurchases8
993791    +          +    -0.03179189812652 * GRP_NumDistPurchases9
993792    +          +     0.01279300331344 * GRP_NumDistPurchases10
993793    +          +    -0.05148868227287 * GRP_NumWebPurchases2
993794    +          +       0.126407567911 * GRP_NumWebPurchases3
993795    +          +    -0.07384834706894 * GRP_NumWebPurchases4
993796    +          +     0.20664248870859 * GRP_NumWebPurchases5
993797    +          +     0.12584364051888 * GRP_NumWebPurchases6
993798    +          +    -0.07856262149859 * GRP_NumWebPurchases7
993799    +          +     -0.0421904538227 * GRP_NumWebPurchases8
993800    +          +    -0.39807813413922 * GRP_NumWebVisitsMonth2
993801    +          +    -0.41818221692382 * GRP_NumWebVisitsMonth3
993802    +          +    -0.10842629005668 * GRP_NumWebVisitsMonth4
993803    +          +     0.04070704103804 * GRP_NumWebVisitsMonth5
993804    +          +     0.14449276979575 * GRP_NumWebVisitsMonth6
993805    +          +    -0.03455833946004 * GRP_NumWebVisitsMonth7
993806    +          +      0.2795681557571 * GRP_NumWebVisitsMonth8
993807    +          +    -0.11584512993649 * GRP_RFMstat2  +    -0.08000771454672 *
993808    +        GRP_RFMstat3  +     0.15435047581932 * GRP_RFMstat4
993809    +          +     0.15639777401667 * GRP_RFMstat5  +     0.13653913265734 *
993810    +        GRP_RFMstat6  +     0.01738099885837 * GRP_RFMstat7
993811    +          +    -0.09833460018931 * GRP_RFMstat8  +      0.1824870541175 *
993812    +        GRP_RFMstat9  +    -0.06768797179234 * GRP_RFMstat10
993813    +          +     0.12594211084791 * GRP_RMntFrq2  +    -0.01760788766872 *
993814    +        GRP_RMntFrq3  +     0.17892049391542 * GRP_RMntFrq4
993815    +          +      0.0600208306946 * GRP_RMntFrq5  +    -0.01237732322599 *
993816    +        GRP_RMntFrq6  +     0.05686770073947 * GRP_RMntFrq7
993817    +          +     0.02731624688039 * GRP_RMntFrq8  +     0.00340498223629 *
993818    +        GRP_RMntFrq9  +    -0.22067101016209 * GRP_RMntFrq10
993819    +          +      0.2098710117924 * GRP_Recency2  +     0.14903439860077 *
993820    +        GRP_Recency3  +     0.13401249348315 * GRP_Recency4
993821    +          +     0.07298641932791 * GRP_Recency5  +    -0.06050660489562 *
993822    +        GRP_Recency6  +    -0.09715484342683 * GRP_Recency7
993823    +          +    -0.07334022459066 * GRP_Recency8  +     0.08622885824343 *
993824    +        GRP_Recency9  +    -0.14521252633207 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.23975949521409 * GRP_AcceptedCmp52 + -0.15038912427149 *
GRP_AcceptedCmpTotal3 + -0.02639019894622 * GRP_Frq2 + 0.0209879343907 * GRP_Frq3 +
-0.04701151124137 * GRP_Frq4 + 0.21097277354199 * GRP_Frq5 + 0.12012227863902 * GRP_Frq6 +
-0.07421032341607 * GRP_Frq7 + 0.19658431807083 * GRP_Frq8 + -0.05226562615755 * GRP_Frq9 +
0.05597653780122 * GRP_Frq10 + 0.17120341383362 * GRP_Income2 + 0.09812054914141 * GRP_Income3
+ 0.15644165989621 * GRP_Income4 + 0.04090465657337 * GRP_Income5 + 0.14854142220811 *
GRP_Income6 + 0.10518345156393 * GRP_Income7 + 0.07639614158562 * GRP_Income8 +
0.17046626234482 * GRP_Income9 + 0.03825262112761 * GRP_Income10 + -0.06766465427377 *
GRP_Mnt2 + -0.08563392300903 * GRP_Mnt3 + -0.21787222756548 * GRP_Mnt4 + 0.01899823791029 *
GRP_Mnt5 + 0.05967271085466 * GRP_Mnt6 + -0.12499644228381 * GRP_Mnt7 + -0.14435081412155 *
GRP_Mnt8 + -0.14252043260208 * GRP_Mnt9 + -0.08323850676532 * GRP_Mnt10 + 0.04114477269411 *
GRP_MntFishProducts3 + 0.09893856338637 * GRP_MntFishProducts4 + 0.1385215809505 *
GRP_MntFishProducts5 + -0.14638498466154 * GRP_MntFishProducts6 + -0.00648777978091 *
GRP_MntFishProducts7 + 0.10782473267799 * GRP_MntFishProducts8 + 0.13001972812092 *
GRP_MntFishProducts9 + -0.15664721122766 * GRP_MntFishProducts10 + 0.06207283716621 *
GRP_MntGoldProds2 + -0.16540502618932 * GRP_MntGoldProds3 + -0.00419113426167 *
GRP_MntGoldProds4 + -0.15616562124594 * GRP_MntGoldProds5 + 0.19299597306567 *
GRP_MntGoldProds6 + 0.06014052355635 * GRP_MntGoldProds7 + -0.04575999486456 *
GRP_MntGoldProds8 + 0.0095752569809 * GRP_MntGoldProds9 + -0.05949014660438 *
GRP_MntGoldProds10 + -0.19601970187904 * GRP_MntMeatProducts2 + -0.05185736813653 *
GRP_MntMeatProducts3 + -0.09619773384577 * GRP_MntMeatProducts4 + -0.01027665288868 *
GRP_MntMeatProducts5 + -0.07620773034876 * GRP_MntMeatProducts6 + -0.21888659802114 *
GRP_MntMeatProducts7 + 0.09136355079296 * GRP_MntMeatProducts8 + -0.03462987847874 *
GRP_MntMeatProducts9 + 0.2033242827681 * GRP_MntMeatProducts10 + -0.03870314975231 *
GRP_MntSweetProducts3 + 0.02833274507907 * GRP_MntSweetProducts4 + -0.14006037291884 *
GRP_MntSweetProducts5 + 0.02172045500272 * GRP_MntSweetProducts6 + 0.10356823396614 *
GRP_MntSweetProducts7 + 0.19721738077737 * GRP_MntSweetProducts8 + -0.04378585782125 *
GRP_MntSweetProducts9 + 0.08558224507445 * GRP_MntSweetProducts10 + 0.18750621323673 *
GRP_MntWines2 + 0.20631370991164 * GRP_MntWines3 + 0.18264845188539 * GRP_MntWines4 +
0.19517731981032 * GRP_MntWines5 + 0.3172348878549 * GRP_MntWines6 + -0.0700174737681 *
GRP_MntWines7 + -0.13433821831179 * GRP_MntWines8 + -0.18525074858401 * GRP_MntWines9 +
-0.00462918646351 * GRP_MntWines10 + -0.26862743551871 * GRP_NumCatalogPurchases3 +
-0.1922446276115 * GRP_NumCatalogPurchases4 + -0.14822362894342 * GRP_NumCatalogPurchases5 +
-0.04052742965098 * GRP_NumCatalogPurchases6 + 0.21101352511891 * GRP_NumCatalogPurchases7 +
-0.09588775463072 * GRP_NumDistPurchases2 + -0.15658252158004 * GRP_NumDistPurchases3 +
0.0013743090184 * GRP_NumDistPurchases4 + -0.11554368014443 * GRP_NumDistPurchases5 +
0.07423244034811 * GRP_NumDistPurchases6 + 0.05834805090718 * GRP_NumDistPurchases7 +
-0.12463576132288 * GRP_NumDistPurchases8 + -0.03179189812652 * GRP_NumDistPurchases9 +
0.01279300331344 * GRP_NumDistPurchases10 + -0.05148868227287 * GRP_NumWebPurchases2 +
0.126407567911 * GRP_NumWebPurchases3 + -0.07384834706894 * GRP_NumWebPurchases4 +
0.20664248870859 * GRP_NumWebPurchases5 + 0.12584364051888 * GRP_NumWebPurchases6 +
-0.07856262149859 * GRP_NumWebPurchases7 + -0.0421904538227 * GRP_NumWebPurchases8 +
-0.39807813413922 * GRP_NumWebVisitsMonth2 + -0.41818221692382 * GRP_NumWebVisitsMonth3 +
-0.10842629005668 * GRP_NumWebVisitsMonth4 + 0.04070704103804 * GRP_NumWebVisitsMonth5 +
0.14449276979575 * GRP_NumWebVisitsMonth6 + -0.03455833946004 * GRP_NumWebVisitsMonth7 +
0.2795681557571 * GRP_NumWebVisitsMonth8 + -0.11584512993649 * GRP_RFMstat2 +
-0.08000771454672 * GRP_RFMstat3 + 0.15435047581932 * GRP_RFMstat4 + 0.15639777401667 *
GRP_RFMstat5 + 0.13653913265734 * GRP_RFMstat6 + 0.01738099885837 * GRP_RFMstat7 +
-0.09833460018931 * GRP_RFMstat8 + 0.1824870541175 * GRP_RFMstat9 + -0.06768797179234 *
GRP_RFMstat10 + 0.12594211084791 * GRP_RMntFrq2 + -0.01760788766872 * GRP_RMntFrq3 +
0.17892049391542 * GRP_RMntFrq4 + 0.0600208306946 * GRP_RMntFrq5 + -0.01237732322599 *
GRP_RMntFrq6 + 0.05686770073947 * GRP_RMntFrq7 + 0.02731624688039 * GRP_RMntFrq8 +
0.00340498223629 * GRP_RMntFrq9 + -0.22067101016209 * GRP_RMntFrq10 + 0.2098710117924 *
GRP_Recency2 + 0.14903439860077 * GRP_Recency3 + 0.13401249348315 * GRP_Recency4 +
0.07298641932791 * GRP_Recency5 + -0.06050660489562 * GRP_Recency6 + -0.09715484342683 *
GRP_Recency7 + -0.07334022459066 * GRP_Recency8 + 0.08622885824343 * GRP_Recency9 +
-0.14521252633207 * GRP_Recency10 ;
993825    +   H14  = H14  +     0.09775139014406 * GRP_AcceptedCmp52
993826    +          +    -0.05185326111457 * GRP_AcceptedCmpTotal3
993827    +          +     0.06346844628454 * GRP_Frq2  +    -0.12509273928412 * GRP_Frq3
993828    +          +    -0.09198262128828 * GRP_Frq4  +    -0.01182504550004 * GRP_Frq5
993829    +          +      -0.056768207716 * GRP_Frq6  +    -0.16132581110621 * GRP_Frq7
993830    +          +    -0.04959596102282 * GRP_Frq8  +    -0.04567484157076 * GRP_Frq9
993831    +          +    -0.19802300351641 * GRP_Frq10  +      0.0752413635351 *
993832    +        GRP_Income2  +     0.00476632282991 * GRP_Income3
993833    +          +     0.06457401869132 * GRP_Income4  +     0.17338522672456 *
993834    +        GRP_Income5  +     0.05634925985236 * GRP_Income6
993835    +          +    -0.04324886540049 * GRP_Income7  +     0.12151783797002 *
993836    +        GRP_Income8  +     0.05164926456192 * GRP_Income9
993837    +          +     0.00485439723946 * GRP_Income10  +     0.15110097357718 *
993838    +        GRP_Mnt2  +     0.09865119271264 * GRP_Mnt3  +    -0.00511534178899 *
993839    +        GRP_Mnt4  +    -0.05719362330008 * GRP_Mnt5  +     0.02913562361493 *
993840    +        GRP_Mnt6  +     0.13642412041981 * GRP_Mnt7  +      0.0644852158438 *
993841    +        GRP_Mnt8  +     0.11260528545055 * GRP_Mnt9  +    -0.04836232783362 *
993842    +        GRP_Mnt10  +    -0.10704879727804 * GRP_MntFishProducts3
993843    +          +    -0.10246133021659 * GRP_MntFishProducts4
993844    +          +     0.07511280205792 * GRP_MntFishProducts5
993845    +          +     0.05316490785199 * GRP_MntFishProducts6
993846    +          +    -0.08700716569909 * GRP_MntFishProducts7
993847    +          +    -0.09682177985634 * GRP_MntFishProducts8
993848    +          +     0.07439756883922 * GRP_MntFishProducts9
993849    +          +     0.00446074450706 * GRP_MntFishProducts10
993850    +          +    -0.09001143924347 * GRP_MntGoldProds2
993851    +          +     0.01609312672536 * GRP_MntGoldProds3
993852    +          +     0.07035469032678 * GRP_MntGoldProds4
993853    +          +     0.00711603846698 * GRP_MntGoldProds5
993854    +          +    -0.04068446183089 * GRP_MntGoldProds6
993855    +          +     0.15395481242479 * GRP_MntGoldProds7
993856    +          +    -0.11308236846443 * GRP_MntGoldProds8
993857    +          +    -0.03537344566096 * GRP_MntGoldProds9
993858    +          +     0.06051838016414 * GRP_MntGoldProds10
993859    +          +      0.2035141766276 * GRP_MntMeatProducts2
993860    +          +     0.11278969513967 * GRP_MntMeatProducts3
993861    +          +     0.04661931313376 * GRP_MntMeatProducts4
993862    +          +     0.16452320933838 * GRP_MntMeatProducts5
993863    +          +     0.10770184592821 * GRP_MntMeatProducts6
993864    +          +     0.13901339765753 * GRP_MntMeatProducts7
993865    +          +    -0.05190887812163 * GRP_MntMeatProducts8
993866    +          +     0.01954217936532 * GRP_MntMeatProducts9
993867    +          +     0.03332801536639 * GRP_MntMeatProducts10
993868    +          +     0.08361196701406 * GRP_MntSweetProducts3
993869    +          +     0.12046863267625 * GRP_MntSweetProducts4
993870    +          +    -0.06960624989657 * GRP_MntSweetProducts5
993871    +          +     0.02528342548299 * GRP_MntSweetProducts6
993872    +          +     0.06650097777299 * GRP_MntSweetProducts7
993873    +          +     0.11859111222476 * GRP_MntSweetProducts8
993874    +          +    -0.06554622682799 * GRP_MntSweetProducts9
993875    +          +     0.21001957500605 * GRP_MntSweetProducts10
993876    +          +     0.00731755704127 * GRP_MntWines2  +    -0.13735139324497 *
993877    +        GRP_MntWines3  +    -0.04158270471567 * GRP_MntWines4
993878    +          +     0.07926049065675 * GRP_MntWines5  +    -0.02429458037724 *
993879    +        GRP_MntWines6  +     -0.1282166172913 * GRP_MntWines7
993880    +          +    -0.08677752910806 * GRP_MntWines8  +     0.07540797934238 *
993881    +        GRP_MntWines9  +     0.17493983229139 * GRP_MntWines10
993882    +          +     -0.0713614079649 * GRP_NumCatalogPurchases3
993883    +          +     0.04023033957679 * GRP_NumCatalogPurchases4
993884    +          +     0.05335371946994 * GRP_NumCatalogPurchases5
993885    +          +    -0.04900718695282 * GRP_NumCatalogPurchases6
993886    +          +    -0.02899204623539 * GRP_NumCatalogPurchases7
993887    +          +     0.03938478596542 * GRP_NumDistPurchases2
993888    +          +    -0.11842065825647 * GRP_NumDistPurchases3
993889    +          +     0.12810519506777 * GRP_NumDistPurchases4
993890    +          +     0.03251975367652 * GRP_NumDistPurchases5
993891    +          +    -0.20095019460601 * GRP_NumDistPurchases6
993892    +          +     0.10812326965005 * GRP_NumDistPurchases7
993893    +          +      0.0287453988047 * GRP_NumDistPurchases8
993894    +          +     -0.0969283103509 * GRP_NumDistPurchases9
993895    +          +    -0.16520433255669 * GRP_NumDistPurchases10
993896    +          +    -0.05852836521422 * GRP_NumWebPurchases2
993897    +          +    -0.09748986581637 * GRP_NumWebPurchases3
993898    +          +     -0.1035732808226 * GRP_NumWebPurchases4
993899    +          +    -0.02657669178935 * GRP_NumWebPurchases5
993900    +          +    -0.14302610588281 * GRP_NumWebPurchases6
993901    +          +    -0.02401715848443 * GRP_NumWebPurchases7
993902    +          +    -0.00665464700774 * GRP_NumWebPurchases8
993903    +          +     0.10779106619083 * GRP_NumWebVisitsMonth2
993904    +          +    -0.02984428486672 * GRP_NumWebVisitsMonth3
993905    +          +     0.13778787733685 * GRP_NumWebVisitsMonth4
993906    +          +     0.00802707801664 * GRP_NumWebVisitsMonth5
993907    +          +    -0.16625282394015 * GRP_NumWebVisitsMonth6
993908    +          +     0.10106887697617 * GRP_NumWebVisitsMonth7
993909    +          +    -0.08824472498437 * GRP_NumWebVisitsMonth8
993910    +          +    -0.03526513082645 * GRP_RFMstat2  +     0.10283156836959 *
993911    +        GRP_RFMstat3  +    -0.01757421618587 * GRP_RFMstat4
993912    +          +     0.14132635365523 * GRP_RFMstat5  +    -0.03672768186133 *
993913    +        GRP_RFMstat6  +     0.00258056988376 * GRP_RFMstat7
993914    +          +     0.05732533278238 * GRP_RFMstat8  +    -0.11555107353955 *
993915    +        GRP_RFMstat9  +     0.13078950712504 * GRP_RFMstat10
993916    +          +     0.06981855039942 * GRP_RMntFrq2  +     -0.0674188031774 *
993917    +        GRP_RMntFrq3  +     0.01403624484254 * GRP_RMntFrq4
993918    +          +     0.15675245151505 * GRP_RMntFrq5  +     0.02655321401599 *
993919    +        GRP_RMntFrq6  +     0.19673158757121 * GRP_RMntFrq7
993920    +          +    -0.07596120973163 * GRP_RMntFrq8  +    -0.02098873085179 *
993921    +        GRP_RMntFrq9  +     0.05038094121628 * GRP_RMntFrq10
993922    +          +     0.06723803817114 * GRP_Recency2  +    -0.05982635501022 *
993923    +        GRP_Recency3  +    -0.08002228635654 * GRP_Recency4
993924    +          +     -0.0814806856315 * GRP_Recency5  +     -0.0111860674205 *
993925    +        GRP_Recency6  +     0.14684736173087 * GRP_Recency7
993926    +          +     0.03782442851658 * GRP_Recency8  +     0.27840617851866 *
993927    +        GRP_Recency9  +     0.06367048710928 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.09775139014406 * GRP_AcceptedCmp52 + -0.05185326111457 *
GRP_AcceptedCmpTotal3 + 0.06346844628454 * GRP_Frq2 + -0.12509273928412 * GRP_Frq3 +
-0.09198262128828 * GRP_Frq4 + -0.01182504550004 * GRP_Frq5 + -0.056768207716 * GRP_Frq6 +
-0.16132581110621 * GRP_Frq7 + -0.04959596102282 * GRP_Frq8 + -0.04567484157076 * GRP_Frq9 +
-0.19802300351641 * GRP_Frq10 + 0.0752413635351 * GRP_Income2 + 0.00476632282991 * GRP_Income3
+ 0.06457401869132 * GRP_Income4 + 0.17338522672456 * GRP_Income5 + 0.05634925985236 *
GRP_Income6 + -0.04324886540049 * GRP_Income7 + 0.12151783797002 * GRP_Income8 +
0.05164926456192 * GRP_Income9 + 0.00485439723946 * GRP_Income10 + 0.15110097357718 * GRP_Mnt2
+ 0.09865119271264 * GRP_Mnt3 + -0.00511534178899 * GRP_Mnt4 + -0.05719362330008 * GRP_Mnt5 +
0.02913562361493 * GRP_Mnt6 + 0.13642412041981 * GRP_Mnt7 + 0.0644852158438 * GRP_Mnt8 +
0.11260528545055 * GRP_Mnt9 + -0.04836232783362 * GRP_Mnt10 + -0.10704879727804 *
GRP_MntFishProducts3 + -0.10246133021659 * GRP_MntFishProducts4 + 0.07511280205792 *
GRP_MntFishProducts5 + 0.05316490785199 * GRP_MntFishProducts6 + -0.08700716569909 *
GRP_MntFishProducts7 + -0.09682177985634 * GRP_MntFishProducts8 + 0.07439756883922 *
GRP_MntFishProducts9 + 0.00446074450706 * GRP_MntFishProducts10 + -0.09001143924347 *
GRP_MntGoldProds2 + 0.01609312672536 * GRP_MntGoldProds3 + 0.07035469032678 *
GRP_MntGoldProds4 + 0.00711603846698 * GRP_MntGoldProds5 + -0.04068446183089 *
GRP_MntGoldProds6 + 0.15395481242479 * GRP_MntGoldProds7 + -0.11308236846443 *
GRP_MntGoldProds8 + -0.03537344566096 * GRP_MntGoldProds9 + 0.06051838016414 *
GRP_MntGoldProds10 + 0.2035141766276 * GRP_MntMeatProducts2 + 0.11278969513967 *
GRP_MntMeatProducts3 + 0.04661931313376 * GRP_MntMeatProducts4 + 0.16452320933838 *
GRP_MntMeatProducts5 + 0.10770184592821 * GRP_MntMeatProducts6 + 0.13901339765753 *
GRP_MntMeatProducts7 + -0.05190887812163 * GRP_MntMeatProducts8 + 0.01954217936532 *
GRP_MntMeatProducts9 + 0.03332801536639 * GRP_MntMeatProducts10 + 0.08361196701406 *
GRP_MntSweetProducts3 + 0.12046863267625 * GRP_MntSweetProducts4 + -0.06960624989657 *
GRP_MntSweetProducts5 + 0.02528342548299 * GRP_MntSweetProducts6 + 0.06650097777299 *
GRP_MntSweetProducts7 + 0.11859111222476 * GRP_MntSweetProducts8 + -0.06554622682799 *
GRP_MntSweetProducts9 + 0.21001957500605 * GRP_MntSweetProducts10 + 0.00731755704127 *
GRP_MntWines2 + -0.13735139324497 * GRP_MntWines3 + -0.04158270471567 * GRP_MntWines4 +
0.07926049065675 * GRP_MntWines5 + -0.02429458037724 * GRP_MntWines6 + -0.1282166172913 *
GRP_MntWines7 + -0.08677752910806 * GRP_MntWines8 + 0.07540797934238 * GRP_MntWines9 +
0.17493983229139 * GRP_MntWines10 + -0.0713614079649 * GRP_NumCatalogPurchases3 +
0.04023033957679 * GRP_NumCatalogPurchases4 + 0.05335371946994 * GRP_NumCatalogPurchases5 +
-0.04900718695282 * GRP_NumCatalogPurchases6 + -0.02899204623539 * GRP_NumCatalogPurchases7 +
0.03938478596542 * GRP_NumDistPurchases2 + -0.11842065825647 * GRP_NumDistPurchases3 +
0.12810519506777 * GRP_NumDistPurchases4 + 0.03251975367652 * GRP_NumDistPurchases5 +
-0.20095019460601 * GRP_NumDistPurchases6 + 0.10812326965005 * GRP_NumDistPurchases7 +
0.0287453988047 * GRP_NumDistPurchases8 + -0.0969283103509 * GRP_NumDistPurchases9 +
-0.16520433255669 * GRP_NumDistPurchases10 + -0.05852836521422 * GRP_NumWebPurchases2 +
-0.09748986581637 * GRP_NumWebPurchases3 + -0.1035732808226 * GRP_NumWebPurchases4 +
-0.02657669178935 * GRP_NumWebPurchases5 + -0.14302610588281 * GRP_NumWebPurchases6 +
-0.02401715848443 * GRP_NumWebPurchases7 + -0.00665464700774 * GRP_NumWebPurchases8 +
0.10779106619083 * GRP_NumWebVisitsMonth2 + -0.02984428486672 * GRP_NumWebVisitsMonth3 +
0.13778787733685 * GRP_NumWebVisitsMonth4 + 0.00802707801664 * GRP_NumWebVisitsMonth5 +
-0.16625282394015 * GRP_NumWebVisitsMonth6 + 0.10106887697617 * GRP_NumWebVisitsMonth7 +
-0.08824472498437 * GRP_NumWebVisitsMonth8 + -0.03526513082645 * GRP_RFMstat2 +
0.10283156836959 * GRP_RFMstat3 + -0.01757421618587 * GRP_RFMstat4 + 0.14132635365523 *
GRP_RFMstat5 + -0.03672768186133 * GRP_RFMstat6 + 0.00258056988376 * GRP_RFMstat7 +
0.05732533278238 * GRP_RFMstat8 + -0.11555107353955 * GRP_RFMstat9 + 0.13078950712504 *
GRP_RFMstat10 + 0.06981855039942 * GRP_RMntFrq2 + -0.0674188031774 * GRP_RMntFrq3 +
0.01403624484254 * GRP_RMntFrq4 + 0.15675245151505 * GRP_RMntFrq5 + 0.02655321401599 *
GRP_RMntFrq6 + 0.19673158757121 * GRP_RMntFrq7 + -0.07596120973163 * GRP_RMntFrq8 +
-0.02098873085179 * GRP_RMntFrq9 + 0.05038094121628 * GRP_RMntFrq10 + 0.06723803817114 *
GRP_Recency2 + -0.05982635501022 * GRP_Recency3 + -0.08002228635654 * GRP_Recency4 +
-0.0814806856315 * GRP_Recency5 + -0.0111860674205 * GRP_Recency6 + 0.14684736173087 *
GRP_Recency7 + 0.03782442851658 * GRP_Recency8 + 0.27840617851866 * GRP_Recency9 +
0.06367048710928 * GRP_Recency10 ;
993928    +   H15  = H15  +    -0.07806115508508 * GRP_AcceptedCmp52
993929    +          +    -0.07253207743328 * GRP_AcceptedCmpTotal3
993930    +          +     0.00068319550289 * GRP_Frq2  +     0.01053423185442 * GRP_Frq3
993931    +          +     0.12146836577194 * GRP_Frq4  +    -0.02109847088645 * GRP_Frq5
993932    +          +     0.12117603213018 * GRP_Frq6  +    -0.05610800968967 * GRP_Frq7
993933    +          +     0.03978492600567 * GRP_Frq8  +     0.04223735193015 * GRP_Frq9
993934    +          +    -0.06520463728003 * GRP_Frq10  +       0.062049900978 *
993935    +        GRP_Income2  +     0.03328830262974 * GRP_Income3
993936    +          +    -0.02319751936777 * GRP_Income4  +    -0.14018290895085 *
993937    +        GRP_Income5  +    -0.20161259066579 * GRP_Income6
993938    +          +     0.04520749587308 * GRP_Income7  +    -0.12005951328941 *
993939    +        GRP_Income8  +     -0.0271220049046 * GRP_Income9
993940    +          +    -0.01279023704027 * GRP_Income10  +     0.08937556740583 *
993941    +        GRP_Mnt2  +    -0.10612717465916 * GRP_Mnt3  +     0.17815428575003 *
993942    +        GRP_Mnt4  +     -0.0370614578947 * GRP_Mnt5  +    -0.01135345278923 *
993943    +        GRP_Mnt6  +    -0.12746479049026 * GRP_Mnt7  +    -0.10029531183924 *
993944    +        GRP_Mnt8  +    -0.05531509364291 * GRP_Mnt9  +    -0.05237212542444 *
993945    +        GRP_Mnt10  +    -0.11135939029175 * GRP_MntFishProducts3
993946    +          +     0.00523055501837 * GRP_MntFishProducts4
993947    +          +     0.06995755836785 * GRP_MntFishProducts5
993948    +          +    -0.04271980194111 * GRP_MntFishProducts6
993949    +          +     0.01174513507622 * GRP_MntFishProducts7
993950    +          +    -0.01277525563734 * GRP_MntFishProducts8
993951    +          +     0.12998167316257 * GRP_MntFishProducts9
993952    +          +    -0.09861861312574 * GRP_MntFishProducts10
993953    +          +     0.01241278109567 * GRP_MntGoldProds2
993954    +          +    -0.08099817362086 * GRP_MntGoldProds3
993955    +          +     0.06851172830818 * GRP_MntGoldProds4
993956    +          +     0.08958140948505 * GRP_MntGoldProds5
993957    +          +    -0.00218658598252 * GRP_MntGoldProds6
993958    +          +     -0.0121636699266 * GRP_MntGoldProds7
993959    +          +     0.08312530546896 * GRP_MntGoldProds8
993960    +          +    -0.09695558162329 * GRP_MntGoldProds9
993961    +          +    -0.13362889085159 * GRP_MntGoldProds10
993962    +          +      0.1497720820291 * GRP_MntMeatProducts2
993963    +          +     0.13747884120385 * GRP_MntMeatProducts3
993964    +          +    -0.01382324310957 * GRP_MntMeatProducts4
993965    +          +      0.1026627602622 * GRP_MntMeatProducts5
993966    +          +     0.12473983237959 * GRP_MntMeatProducts6
993967    +          +    -0.00460258978783 * GRP_MntMeatProducts7
993968    +          +    -0.02636237932342 * GRP_MntMeatProducts8
993969    +          +     0.01088187708787 * GRP_MntMeatProducts9
993970    +          +    -0.06235232820082 * GRP_MntMeatProducts10
993971    +          +    -0.01027496660636 * GRP_MntSweetProducts3
993972    +          +    -0.03339881469063 * GRP_MntSweetProducts4
993973    +          +    -0.00006744319692 * GRP_MntSweetProducts5
993974    +          +    -0.08133264214994 * GRP_MntSweetProducts6
993975    +          +    -0.08611045862832 * GRP_MntSweetProducts7
993976    +          +     0.04349149520384 * GRP_MntSweetProducts8
993977    +          +    -0.11983272725696 * GRP_MntSweetProducts9
993978    +          +      0.0295546319232 * GRP_MntSweetProducts10
993979    +          +    -0.08123379301643 * GRP_MntWines2  +     0.04651831039743 *
993980    +        GRP_MntWines3  +     0.06310002346307 * GRP_MntWines4
993981    +          +    -0.17933545315591 * GRP_MntWines5  +     -0.1937708146292 *
993982    +        GRP_MntWines6  +    -0.03101077799974 * GRP_MntWines7
993983    +          +     -0.1041503240188 * GRP_MntWines8  +     0.05775300092738 *
993984    +        GRP_MntWines9  +    -0.03058517174309 * GRP_MntWines10
993985    +          +     0.07560261351989 * GRP_NumCatalogPurchases3
993986    +          +    -0.02171409354554 * GRP_NumCatalogPurchases4
993987    +          +    -0.05679659919998 * GRP_NumCatalogPurchases5
993988    +          +    -0.12764205653408 * GRP_NumCatalogPurchases6
993989    +          +    -0.08101121779612 * GRP_NumCatalogPurchases7
993990    +          +     0.01667103886915 * GRP_NumDistPurchases2
993991    +          +    -0.01671279072694 * GRP_NumDistPurchases3
993992    +          +      0.1259674987166 * GRP_NumDistPurchases4
993993    +          +    -0.16321313045784 * GRP_NumDistPurchases5
993994    +          +     0.11936322929288 * GRP_NumDistPurchases6
993995    +          +    -0.06556668418313 * GRP_NumDistPurchases7
993996    +          +     0.10511131736767 * GRP_NumDistPurchases8
993997    +          +     0.15706878704211 * GRP_NumDistPurchases9
993998    +          +    -0.02459606438141 * GRP_NumDistPurchases10
993999    +          +    -0.12649905874392 * GRP_NumWebPurchases2
994000    +          +    -0.19047040809704 * GRP_NumWebPurchases3
994001    +          +     0.05314754301096 * GRP_NumWebPurchases4
994002    +          +     0.07985015828954 * GRP_NumWebPurchases5
994003    +          +     0.03142129782708 * GRP_NumWebPurchases6
994004    +          +    -0.06854751810317 * GRP_NumWebPurchases7
994005    +          +     0.04252315624645 * GRP_NumWebPurchases8
994006    +          +     0.05095051650376 * GRP_NumWebVisitsMonth2
994007    +          +    -0.06364646216319 * GRP_NumWebVisitsMonth3
994008    +          +     -0.0763099305682 * GRP_NumWebVisitsMonth4
994009    +          +    -0.09328993733351 * GRP_NumWebVisitsMonth5
994010    +          +    -0.15992682318474 * GRP_NumWebVisitsMonth6
994011    +          +     0.05855154160855 * GRP_NumWebVisitsMonth7
994012    +          +    -0.02936254579621 * GRP_NumWebVisitsMonth8
994013    +          +     0.03386330448388 * GRP_RFMstat2  +     0.15736501855948 *
994014    +        GRP_RFMstat3  +     0.00191361166205 * GRP_RFMstat4
994015    +          +     0.13353067210356 * GRP_RFMstat5  +     0.07177888737143 *
994016    +        GRP_RFMstat6  +    -0.09136544703087 * GRP_RFMstat7
994017    +          +     0.06240017584936 * GRP_RFMstat8  +    -0.13392008107813 *
994018    +        GRP_RFMstat9  +      0.1640400559806 * GRP_RFMstat10
994019    +          +    -0.04729585381288 * GRP_RMntFrq2  +    -0.10696256491016 *
994020    +        GRP_RMntFrq3  +    -0.01612962997775 * GRP_RMntFrq4
994021    +          +     0.03988781041495 * GRP_RMntFrq5  +    -0.16331389081736 *
994022    +        GRP_RMntFrq6  +    -0.04782412873041 * GRP_RMntFrq7
994023    +          +    -0.26113374531456 * GRP_RMntFrq8  +     0.12714151557135 *
994024    +        GRP_RMntFrq9  +     0.04516692519663 * GRP_RMntFrq10
994025    +          +    -0.02063571135452 * GRP_Recency2  +    -0.26395733111279 *
994026    +        GRP_Recency3  +     0.06052941897951 * GRP_Recency4
994027    +          +     0.02037202909561 * GRP_Recency5  +    -0.03853508999085 *
994028    +        GRP_Recency6  +    -0.04725141215181 * GRP_Recency7
994029    +          +    -0.03539071681016 * GRP_Recency8  +     0.00231218046757 *
994030    +        GRP_Recency9  +     0.15061319591771 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.07806115508508 * GRP_AcceptedCmp52 + -0.07253207743328 *
GRP_AcceptedCmpTotal3 + 0.00068319550289 * GRP_Frq2 + 0.01053423185442 * GRP_Frq3 +
0.12146836577194 * GRP_Frq4 + -0.02109847088645 * GRP_Frq5 + 0.12117603213018 * GRP_Frq6 +
-0.05610800968967 * GRP_Frq7 + 0.03978492600567 * GRP_Frq8 + 0.04223735193015 * GRP_Frq9 +
-0.06520463728003 * GRP_Frq10 + 0.062049900978 * GRP_Income2 + 0.03328830262974 * GRP_Income3
+ -0.02319751936777 * GRP_Income4 + -0.14018290895085 * GRP_Income5 + -0.20161259066579 *
GRP_Income6 + 0.04520749587308 * GRP_Income7 + -0.12005951328941 * GRP_Income8 +
-0.0271220049046 * GRP_Income9 + -0.01279023704027 * GRP_Income10 + 0.08937556740583 *
GRP_Mnt2 + -0.10612717465916 * GRP_Mnt3 + 0.17815428575003 * GRP_Mnt4 + -0.0370614578947 *
GRP_Mnt5 + -0.01135345278923 * GRP_Mnt6 + -0.12746479049026 * GRP_Mnt7 + -0.10029531183924 *
GRP_Mnt8 + -0.05531509364291 * GRP_Mnt9 + -0.05237212542444 * GRP_Mnt10 + -0.11135939029175 *
GRP_MntFishProducts3 + 0.00523055501837 * GRP_MntFishProducts4 + 0.06995755836785 *
GRP_MntFishProducts5 + -0.04271980194111 * GRP_MntFishProducts6 + 0.01174513507622 *
GRP_MntFishProducts7 + -0.01277525563734 * GRP_MntFishProducts8 + 0.12998167316257 *
GRP_MntFishProducts9 + -0.09861861312574 * GRP_MntFishProducts10 + 0.01241278109567 *
GRP_MntGoldProds2 + -0.08099817362086 * GRP_MntGoldProds3 + 0.06851172830818 *
GRP_MntGoldProds4 + 0.08958140948505 * GRP_MntGoldProds5 + -0.00218658598252 *
GRP_MntGoldProds6 + -0.0121636699266 * GRP_MntGoldProds7 + 0.08312530546896 *
GRP_MntGoldProds8 + -0.09695558162329 * GRP_MntGoldProds9 + -0.13362889085159 *
GRP_MntGoldProds10 + 0.1497720820291 * GRP_MntMeatProducts2 + 0.13747884120385 *
GRP_MntMeatProducts3 + -0.01382324310957 * GRP_MntMeatProducts4 + 0.1026627602622 *
GRP_MntMeatProducts5 + 0.12473983237959 * GRP_MntMeatProducts6 + -0.00460258978783 *
GRP_MntMeatProducts7 + -0.02636237932342 * GRP_MntMeatProducts8 + 0.01088187708787 *
GRP_MntMeatProducts9 + -0.06235232820082 * GRP_MntMeatProducts10 + -0.01027496660636 *
GRP_MntSweetProducts3 + -0.03339881469063 * GRP_MntSweetProducts4 + -0.00006744319692 *
GRP_MntSweetProducts5 + -0.08133264214994 * GRP_MntSweetProducts6 + -0.08611045862832 *
GRP_MntSweetProducts7 + 0.04349149520384 * GRP_MntSweetProducts8 + -0.11983272725696 *
GRP_MntSweetProducts9 + 0.0295546319232 * GRP_MntSweetProducts10 + -0.08123379301643 *
GRP_MntWines2 + 0.04651831039743 * GRP_MntWines3 + 0.06310002346307 * GRP_MntWines4 +
-0.17933545315591 * GRP_MntWines5 + -0.1937708146292 * GRP_MntWines6 + -0.03101077799974 *
GRP_MntWines7 + -0.1041503240188 * GRP_MntWines8 + 0.05775300092738 * GRP_MntWines9 +
-0.03058517174309 * GRP_MntWines10 + 0.07560261351989 * GRP_NumCatalogPurchases3 +
-0.02171409354554 * GRP_NumCatalogPurchases4 + -0.05679659919998 * GRP_NumCatalogPurchases5 +
-0.12764205653408 * GRP_NumCatalogPurchases6 + -0.08101121779612 * GRP_NumCatalogPurchases7 +
0.01667103886915 * GRP_NumDistPurchases2 + -0.01671279072694 * GRP_NumDistPurchases3 +
0.1259674987166 * GRP_NumDistPurchases4 + -0.16321313045784 * GRP_NumDistPurchases5 +
0.11936322929288 * GRP_NumDistPurchases6 + -0.06556668418313 * GRP_NumDistPurchases7 +
0.10511131736767 * GRP_NumDistPurchases8 + 0.15706878704211 * GRP_NumDistPurchases9 +
-0.02459606438141 * GRP_NumDistPurchases10 + -0.12649905874392 * GRP_NumWebPurchases2 +
-0.19047040809704 * GRP_NumWebPurchases3 + 0.05314754301096 * GRP_NumWebPurchases4 +
0.07985015828954 * GRP_NumWebPurchases5 + 0.03142129782708 * GRP_NumWebPurchases6 +
-0.06854751810317 * GRP_NumWebPurchases7 + 0.04252315624645 * GRP_NumWebPurchases8 +
0.05095051650376 * GRP_NumWebVisitsMonth2 + -0.06364646216319 * GRP_NumWebVisitsMonth3 +
-0.0763099305682 * GRP_NumWebVisitsMonth4 + -0.09328993733351 * GRP_NumWebVisitsMonth5 +
-0.15992682318474 * GRP_NumWebVisitsMonth6 + 0.05855154160855 * GRP_NumWebVisitsMonth7 +
-0.02936254579621 * GRP_NumWebVisitsMonth8 + 0.03386330448388 * GRP_RFMstat2 +
0.15736501855948 * GRP_RFMstat3 + 0.00191361166205 * GRP_RFMstat4 + 0.13353067210356 *
GRP_RFMstat5 + 0.07177888737143 * GRP_RFMstat6 + -0.09136544703087 * GRP_RFMstat7 +
0.06240017584936 * GRP_RFMstat8 + -0.13392008107813 * GRP_RFMstat9 + 0.1640400559806 *
GRP_RFMstat10 + -0.04729585381288 * GRP_RMntFrq2 + -0.10696256491016 * GRP_RMntFrq3 +
-0.01612962997775 * GRP_RMntFrq4 + 0.03988781041495 * GRP_RMntFrq5 + -0.16331389081736 *
GRP_RMntFrq6 + -0.04782412873041 * GRP_RMntFrq7 + -0.26113374531456 * GRP_RMntFrq8 +
0.12714151557135 * GRP_RMntFrq9 + 0.04516692519663 * GRP_RMntFrq10 + -0.02063571135452 *
GRP_Recency2 + -0.26395733111279 * GRP_Recency3 + 0.06052941897951 * GRP_Recency4 +
0.02037202909561 * GRP_Recency5 + -0.03853508999085 * GRP_Recency6 + -0.04725141215181 *
GRP_Recency7 + -0.03539071681016 * GRP_Recency8 + 0.00231218046757 * GRP_Recency9 +
0.15061319591771 * GRP_Recency10 ;
994031    +   H11  =    -0.41794755051402 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.41794755051402 + H11 ;
994032    +   H12  =    -0.49840292545282 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.49840292545282 + H12 ;
994033    +   H13  =     0.68519838870778 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.68519838870778 + H13 ;
994034    +   H14  =    -0.29927820698876 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.29927820698876 + H14 ;
994035    +   H15  =    -1.33189145036759 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.33189145036759 + H15 ;
994036    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
994037    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
994038    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
994039    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
994040    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
994041    +END;
MPRINT(EM_DIAGRAM):   END;
994042    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
994043    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
994044    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
994045    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
994046    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
994047    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
994048    +END;
MPRINT(EM_DIAGRAM):   END;
994049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
994050    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
994051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
994052    +
994053    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
994054    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
994055    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
994056    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
994057    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
994058    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
994059    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
994060    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
994061    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
994062    +end;
MPRINT(EM_DIAGRAM):   end;
994063    +else do;
MPRINT(EM_DIAGRAM):   else do;
994064    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
994065    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
994066    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
994067    +   end;
MPRINT(EM_DIAGRAM):   end;
994068    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
994069    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
994070    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
994071    +   end;
MPRINT(EM_DIAGRAM):   end;
994072    +   else do;
MPRINT(EM_DIAGRAM):   else do;
994073    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
994074    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
994075    +   end;
MPRINT(EM_DIAGRAM):   end;
994076    +end;
MPRINT(EM_DIAGRAM):   end;
994077    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
994078    +   P_DepVar1  =     3.74750910029477 * H11  +     6.03649252206533 * H12
994079    +          +     3.79892216009428 * H13  +    -0.91884002074191 * H14
994080    +          +    -0.46883154533119 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.74750910029477 * H11 + 6.03649252206533 * H12 +
3.79892216009428 * H13 + -0.91884002074191 * H14 + -0.46883154533119 * H15 ;
994081    +   P_DepVar1  =    -1.84390654654668 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84390654654668 + P_DepVar1 ;
994082    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
994083    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
994084    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
994085    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
994086    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
994087    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
994088    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
994089    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
994090    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
994091    +END;
MPRINT(EM_DIAGRAM):   END;
994092    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
994093    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
994094    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
994095    +END;
MPRINT(EM_DIAGRAM):   END;
994096    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
994097    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
994098    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
994099    +END;
MPRINT(EM_DIAGRAM):   END;
994100    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
994101    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
994102    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
994103    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
994104    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
994105    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
994106    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
994107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
994108    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
994109    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
994110    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
994111    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
994112    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
994113    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
994114    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
994115    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
994116    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
994117    +END;
MPRINT(EM_DIAGRAM):   END;
994118    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
994119    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
994120    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
994121    +drop
994122    +H11
994123    +H12
994124    +H13
994125    +H14
994126    +H15
994127    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
994128    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
994129     run;
 
NOTE: DATA STEP view saved on file EMWS8.NEURAL22_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
994130     quit;
994131     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
994132     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
994133     * Neural22: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural22: Computing metadata for TRAIN data;
994134     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.NEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural22_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural22_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural22_TRAIN out=WORK.M1NCMGDP noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NCMGDP;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NCMGDP(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1NCMGDP;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1NCMGDP;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M03Z1Z7Z NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03Z1Z7Z;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M03Z1Z7Z;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0U5W1_X(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M03Z1Z7Z;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03Z1Z7Z;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M03Z1Z7Z;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M03Z1Z7Z;
MPRINT(EMADVISECOLUMNS):   set WORK.M03Z1Z7Z;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural22";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural22";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural22: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
994446     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
994447     set EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMINFO;
994448     where DATA='Neural22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
994449     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL22_EMINFO.
      WHERE (DATA='Neural22') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994450     data EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMINFO;
994451     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
994452     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
994453     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.NEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
994457     run;
994458     data EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMINFO;
994459     set EMWS8.Neural22_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMINFO WORK.MODELTEMP_INFO;
994460     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.NEURAL22_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994461     proc sort data = EMWS8.Neural22_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural22_EMINFO NOTHREADS;
994462     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
994463     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.NEURAL22_EMINFO.
NOTE: The data set EMWS8.NEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994464     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
994465     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
994466     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
994467     proc sort data = EMWS8.Neural22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
994468     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
994469     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL22_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994470     data EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMINFO;
994471     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
994472     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
994473     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL22_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994474     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
994475     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
994476     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
994477     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.NEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.NEURAL22_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1788TAP
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1788TAP new;
MPRINT(EM_DIAGRAM):   run;
994501     data EMWS8.Neural22_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMOUTFIT(rename=(_NAME_=TARGET));
994502     set EMWS8.Neural22_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_OUTFIT(where=(_NAME_ eq 'OVERALL'));
994503     label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
994504     if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
994505     drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
994506     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL22_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.NEURAL22_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994507     proc sort data=EMWS8.Neural22_EMOUTFIT nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_EMOUTFIT nodupkey;
994508     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
994509     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL22_EMOUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.NEURAL22_EMOUTFIT has 1 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994510     data EMWS8.Neural22_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMOUTFIT;
994511     set EMWS8.Neural22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMOUTFIT;
994512     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
994513     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
994513   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
994514     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
994515     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL22_EMOUTFIT.
NOTE: The data set EMWS8.NEURAL22_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994516     proc sort data=EMWS8.Neural22_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural22_EMREPORTFIT nothreads;
994517     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
994518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.NEURAL22_EMREPORTFIT.
NOTE: The data set EMWS8.NEURAL22_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994519     %let _EMwarndup = 0;
994520     %let _EMtargetdup =;
994521     %let _EMASEtargetdup =;
994522     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
994523     set EMWS8.Neural22_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMOUTFIT;
994524     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
994525     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
994526     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
994527     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
994528     end;
MPRINT(EM_DIAGRAM):   end;
994529     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL22_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994530     proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
994531     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
994532     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994533     proc sort data=EMWS8.Neural22_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
994534     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
994535     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 51 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994536     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
994537     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
994538     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
994539     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 51 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
994540     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
994541     set EMWS8.Neural22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_CMeta_TRAIN;
994542     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
994542   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
994543     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL22_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
994544     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
994545     set EMWS8.Neural22_TRAIN(keep=
994546     F_DepVar
994547     I_DepVar
994548     P_DepVar0
994549     P_DepVar1
994550     R_DepVar0
994551     R_DepVar1
994552     U_DepVar
994553     _WARN_
994554     DepVar
994555     );
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
994556     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL22_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural22_0HRSRT5 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural22_0HRSRT5;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural22_0HRSRT5(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural22_0HRSRT5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural22_0HRSRT5;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
The SAS System
 
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.0728314E-6 OVLMAX 0.9998850217 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
998822     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
998823     set EMWS8.Neural22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_CMeta_TRAIN;
998824     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
998824   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
998825     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL22_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
998826     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
998827     set EMWS8.Neural22_VALIDATE(keep=
998828     F_DepVar
998829     I_DepVar
998830     P_DepVar0
998831     P_DepVar1
998832     R_DepVar0
998833     R_DepVar1
998834     U_DepVar
998835     _WARN_
998836     DepVar
998837     );
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
998838     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.NEURAL22_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL22_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural22_1G0S3UE nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural22_1G0S3UE;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural22_1G0S3UE(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMCLASSIFICATION WORK.Neural22_1G0S3UE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural22_1G0S3UE;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.9640401E-6 OVLMAX 0.9996993121 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1003113    %let _cn = %sysfunc(getoption(CENTER));
1003114    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1003115    proc print data=EMWS8.Neural22_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural22_EMREPORTFIT noobs label;
1003116    var STAT LABEL TRAIN
1003117    VALIDATE
1003118    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1003119    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1003120    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1003121    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1003122    run;
 
NOTE: There were 21 observations read from the data set EMWS8.NEURAL22_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 705.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1003123    title10;
MPRINT(EM_DIAGRAM):   title10;
1003124    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1003125    proc sort data=EMWS8.Neural22_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural22_EMCLASSIFICATION nothreads;
1003126    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1003127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL22_EMCLASSIFICATION.
NOTE: The data set EMWS8.NEURAL22_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1003128    %let _cn = %sysfunc(getoption(CENTER));
1003129    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1003130    proc print data=EMWS8.Neural22_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural22_EMCLASSIFICATION noobs label;
1003131    var from into pct_row pct_col count percent
1003132    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1003133    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1003134    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1003135    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1003136    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1003137    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1003138    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1003139    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1003140    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1003141    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1003142    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1003143    run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL22_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 706.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1003144    title9;
MPRINT(EM_DIAGRAM):   title9;
1003145    title10;
MPRINT(EM_DIAGRAM):   title10;
1003146    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1003147    %let _cn = %sysfunc(getoption(CENTER));
1003148    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1003149    data EMWS8.Neural22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMEVENTREPORT;
1003150    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1003150  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1003151    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1003151  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1003151  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1003151  ! FALSEEVENT
1003152    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1003152  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1003152  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1003153       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1003154    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1003155    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1003156    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1003157    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1003158    set EMWS8.Neural22_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMEVENTREPORT;
1003159    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.NEURAL22_EMEVENTREPORT.
NOTE: The data set EMWS8.NEURAL22_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1003160    proc print data=EMWS8.Neural22_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural22_EMEVENTREPORT noobs label;
1003161    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1003162    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1003163    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1003164    run;
 
NOTE: There were 2 observations read from the data set EMWS8.NEURAL22_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 707.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1003165    title10;
MPRINT(EM_DIAGRAM):   title10;
1003166    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1003167    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1003168    modify Neural22_EMRANK;
MPRINT(EM_DIAGRAM):   modify Neural22_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1003169    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1003170    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1003170  ! ;
MPRINT(EM_DIAGRAM):   run;
1003171    run;
 
NOTE: MODIFY was successful for EMWS8.NEURAL22_EMRANK.DATA.
1003172    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
1003173    %let _cn = %sysfunc(getoption(CENTER));
1003174    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1003175    proc print data=EMWS8.Neural22_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural22_EMRANK label noobs;
1003176    var
1003177    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1003178    by
1003179    notsorted DATAROLE
1003180    notsorted TARGET
1003181    notsorted TARGETLABEL
1003182    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1003183    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1003184    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1003185    run;
 
NOTE: There were 40 observations read from the data set EMWS8.NEURAL22_EMRANK.
NOTE: The PROCEDURE PRINT printed page 708.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1003186    title10;
MPRINT(EM_DIAGRAM):   title10;
1003187    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1003188    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1003189    modify Neural22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Neural22_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1003190    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1003190  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1003191    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1003191  ! ;
MPRINT(EM_DIAGRAM):   run;
1003192    run;
 
NOTE: MODIFY was successful for EMWS8.NEURAL22_EMSCOREDIST.DATA.
1003193    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural22_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
