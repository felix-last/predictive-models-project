MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.14 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1OWWUDP 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1OWWUDP new;
MPRINT(EM_DIAGRAM):   run;
574122     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
574123     set EMWS8.Neural22_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_OUTKEY;
574124     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
574125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set EMWS8.NEURAL22_OUTKEY.
NOTE: The data set WORK.OUTKEY has 5 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

574126     filename emflow
574126   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural22: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
574127     *------------------------------------------------------------*;
574128     * Neural22: Scoring DATA data;
574129     *------------------------------------------------------------*;
574130     data EMWS8.Neural22_TRAIN
574131     / view=EMWS8.Neural22_TRAIN
574132     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_TRAIN / view=EMWS8.Neural22_TRAIN ;
574133     set EMWS8.BINNING_TRAIN
574134     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
574135     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas.
574136    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
574137    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
574138    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
574139    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
574140    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
574141    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
574142    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
574143    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
574144    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
574145    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
574146    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
574147    +LENGTH _WARN_ $4
574148    +      F_DepVar  $ 12
574149    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
574150    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
574151    +
574152    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
574153    +
574154    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
574155    +
574156    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
574157    +
574158    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
574159    +
574160    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
574161    +
574162    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
574163    +
574164    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
574165    +
574166    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
574167    +
574168    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
574169    +
574170    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
574171    +
574172    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
574173    +
574174    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
574175    +
574176    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
574177    +
574178    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
574179    +
574180    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
574181    +
574182    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
574183    +
574184    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
574185    +
574186    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
574187    +
574188    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
574189    +
574190    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
574191    +
574192    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
574193    +
574194    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
574195    +
574196    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
574197    +
574198    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
574199    +
574200    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
574201    +
574202    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
574203    +
574204    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
574205    +
574206    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
574207    +
574208    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
574209    +
574210    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
574211    +
574212    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
574213    +
574214    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
574215    +
574216    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
574217    +
574218    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
574219    +
574220    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
574221    +
574222    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
574223    +
574224    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
574225    +
574226    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
574227    +
574228    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
574229    +
574230    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
574231    +
574232    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
574233    +
574234    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
574235    +
574236    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
574237    +
574238    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
574239    +
574240    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
574241    +
574242    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
574243    +
574244    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
574245    +
574246    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
574247    +
574248    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
574249    +
574250    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
574251    +
574252    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
574253    +
574254    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
574255    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
574256    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
574257    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
574258    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574260    +end;
MPRINT(EM_DIAGRAM):   end;
574261    +else do;
MPRINT(EM_DIAGRAM):   else do;
574262    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574263    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
574264    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574265    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
574266    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
574267    +   end;
MPRINT(EM_DIAGRAM):   end;
574268    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
574269    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
574270    +   end;
MPRINT(EM_DIAGRAM):   end;
574271    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574272    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
574273    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574274    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574275    +   end;
MPRINT(EM_DIAGRAM):   end;
574276    +end;
MPRINT(EM_DIAGRAM):   end;
574277    +
574278    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
574279    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
574280    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
574281    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
574282    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
574283    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
574284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574286    +end;
MPRINT(EM_DIAGRAM):   end;
574287    +else do;
MPRINT(EM_DIAGRAM):   else do;
574288    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574289    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
574290    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574291    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
574292    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
574293    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
574294    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
574295    +   end;
MPRINT(EM_DIAGRAM):   end;
574296    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
574297    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
574298    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
574299    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
574300    +   end;
MPRINT(EM_DIAGRAM):   end;
574301    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574302    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
574303    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
574304    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
574305    +   end;
MPRINT(EM_DIAGRAM):   end;
574306    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574307    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
574308    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
574309    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
574310    +   end;
MPRINT(EM_DIAGRAM):   end;
574311    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574312    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
574313    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
574314    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
574315    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574316    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574317    +   end;
MPRINT(EM_DIAGRAM):   end;
574318    +end;
MPRINT(EM_DIAGRAM):   end;
574319    +
574320    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
574321    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
574322    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
574323    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
574324    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
574325    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
574326    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574328    +end;
MPRINT(EM_DIAGRAM):   end;
574329    +else do;
MPRINT(EM_DIAGRAM):   else do;
574330    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574331    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
574332    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574333    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
574334    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
574335    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
574336    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
574337    +   end;
MPRINT(EM_DIAGRAM):   end;
574338    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574339    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
574340    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
574341    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
574342    +   end;
MPRINT(EM_DIAGRAM):   end;
574343    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
574344    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
574345    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
574346    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
574347    +   end;
MPRINT(EM_DIAGRAM):   end;
574348    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574349    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
574350    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
574351    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
574352    +   end;
MPRINT(EM_DIAGRAM):   end;
574353    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574354    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
574355    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
574356    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
574357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574359    +   end;
MPRINT(EM_DIAGRAM):   end;
574360    +end;
MPRINT(EM_DIAGRAM):   end;
574361    +
574362    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
574363    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
574364    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
574365    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
574366    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
574367    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
574368    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574369    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574370    +end;
MPRINT(EM_DIAGRAM):   end;
574371    +else do;
MPRINT(EM_DIAGRAM):   else do;
574372    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574373    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
574374    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574375    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574376    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
574377    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
574378    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
574379    +   end;
MPRINT(EM_DIAGRAM):   end;
574380    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574381    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
574382    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
574383    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
574384    +   end;
MPRINT(EM_DIAGRAM):   end;
574385    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574386    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
574387    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
574388    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
574389    +   end;
MPRINT(EM_DIAGRAM):   end;
574390    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574391    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
574392    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
574393    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
574394    +   end;
MPRINT(EM_DIAGRAM):   end;
574395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574396    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
574397    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
574398    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
574399    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574400    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574401    +   end;
MPRINT(EM_DIAGRAM):   end;
574402    +end;
MPRINT(EM_DIAGRAM):   end;
574403    +
574404    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
574405    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
574406    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
574407    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
574408    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
574409    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
574410    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574411    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574412    +end;
MPRINT(EM_DIAGRAM):   end;
574413    +else do;
MPRINT(EM_DIAGRAM):   else do;
574414    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574415    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
574416    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574417    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574418    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
574419    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
574420    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
574421    +   end;
MPRINT(EM_DIAGRAM):   end;
574422    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574423    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
574424    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
574425    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
574426    +   end;
MPRINT(EM_DIAGRAM):   end;
574427    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574428    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
574429    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
574430    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
574431    +   end;
MPRINT(EM_DIAGRAM):   end;
574432    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574433    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
574434    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
574435    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
574436    +   end;
MPRINT(EM_DIAGRAM):   end;
574437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574438    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
574439    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
574440    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
574441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574443    +   end;
MPRINT(EM_DIAGRAM):   end;
574444    +end;
MPRINT(EM_DIAGRAM):   end;
574445    +
574446    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
574447    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
574448    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
574449    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
574450    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
574451    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
574452    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574453    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574454    +end;
MPRINT(EM_DIAGRAM):   end;
574455    +else do;
MPRINT(EM_DIAGRAM):   else do;
574456    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574457    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
574458    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574459    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574460    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
574461    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
574462    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
574463    +   end;
MPRINT(EM_DIAGRAM):   end;
574464    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574465    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
574466    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
574467    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
574468    +   end;
MPRINT(EM_DIAGRAM):   end;
574469    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574470    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
574471    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
574472    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
574473    +   end;
MPRINT(EM_DIAGRAM):   end;
574474    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574475    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
574476    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
574477    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
574478    +   end;
MPRINT(EM_DIAGRAM):   end;
574479    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574480    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
574481    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
574482    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
574483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574485    +   end;
MPRINT(EM_DIAGRAM):   end;
574486    +end;
MPRINT(EM_DIAGRAM):   end;
574487    +
574488    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
574489    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
574490    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
574491    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
574492    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
574493    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
574494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574496    +end;
MPRINT(EM_DIAGRAM):   end;
574497    +else do;
MPRINT(EM_DIAGRAM):   else do;
574498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574499    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
574500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574501    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574502    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
574503    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
574504    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
574505    +   end;
MPRINT(EM_DIAGRAM):   end;
574506    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574507    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
574508    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
574509    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
574510    +   end;
MPRINT(EM_DIAGRAM):   end;
574511    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574512    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
574513    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
574514    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
574515    +   end;
MPRINT(EM_DIAGRAM):   end;
574516    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574517    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
574518    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
574519    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
574520    +   end;
MPRINT(EM_DIAGRAM):   end;
574521    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574522    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
574523    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
574524    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
574525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574527    +   end;
MPRINT(EM_DIAGRAM):   end;
574528    +end;
MPRINT(EM_DIAGRAM):   end;
574529    +
574530    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
574531    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
574532    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
574533    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
574534    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
574535    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
574536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574538    +end;
MPRINT(EM_DIAGRAM):   end;
574539    +else do;
MPRINT(EM_DIAGRAM):   else do;
574540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574541    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
574542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574543    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574544    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
574545    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
574546    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
574547    +   end;
MPRINT(EM_DIAGRAM):   end;
574548    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574549    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
574550    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
574551    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
574552    +   end;
MPRINT(EM_DIAGRAM):   end;
574553    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574554    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
574555    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
574556    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
574557    +   end;
MPRINT(EM_DIAGRAM):   end;
574558    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574559    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
574560    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
574561    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
574562    +   end;
MPRINT(EM_DIAGRAM):   end;
574563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574564    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
574565    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
574566    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
574567    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574568    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574569    +   end;
MPRINT(EM_DIAGRAM):   end;
574570    +end;
MPRINT(EM_DIAGRAM):   end;
574571    +
574572    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
574573    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
574574    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
574575    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
574576    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
574577    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574578    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574579    +end;
MPRINT(EM_DIAGRAM):   end;
574580    +else do;
MPRINT(EM_DIAGRAM):   else do;
574581    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574582    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
574583    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574584    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574585    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
574586    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
574587    +   end;
MPRINT(EM_DIAGRAM):   end;
574588    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574589    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
574590    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
574591    +   end;
MPRINT(EM_DIAGRAM):   end;
574592    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574593    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
574594    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
574595    +   end;
MPRINT(EM_DIAGRAM):   end;
574596    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574597    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
574598    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
574599    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574600    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574601    +   end;
MPRINT(EM_DIAGRAM):   end;
574602    +end;
MPRINT(EM_DIAGRAM):   end;
574603    +
574604    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
574605    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
574606    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
574607    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
574608    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
574609    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
574610    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574611    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574612    +end;
MPRINT(EM_DIAGRAM):   end;
574613    +else do;
MPRINT(EM_DIAGRAM):   else do;
574614    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574615    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
574616    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574617    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
574618    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
574619    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
574620    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
574621    +   end;
MPRINT(EM_DIAGRAM):   end;
574622    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574623    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
574624    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
574625    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
574626    +   end;
MPRINT(EM_DIAGRAM):   end;
574627    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574628    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
574629    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
574630    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
574631    +   end;
MPRINT(EM_DIAGRAM):   end;
574632    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
574633    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
574634    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
574635    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
574636    +   end;
MPRINT(EM_DIAGRAM):   end;
574637    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574638    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
574639    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
574640    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
574641    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574642    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574643    +   end;
MPRINT(EM_DIAGRAM):   end;
574644    +end;
MPRINT(EM_DIAGRAM):   end;
574645    +
574646    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
574647    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
574648    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
574649    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
574650    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
574651    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
574652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574654    +end;
MPRINT(EM_DIAGRAM):   end;
574655    +else do;
MPRINT(EM_DIAGRAM):   else do;
574656    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574657    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
574658    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574659    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574660    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
574661    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
574662    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
574663    +   end;
MPRINT(EM_DIAGRAM):   end;
574664    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574665    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
574666    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
574667    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
574668    +   end;
MPRINT(EM_DIAGRAM):   end;
574669    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574670    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
574671    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
574672    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
574673    +   end;
MPRINT(EM_DIAGRAM):   end;
574674    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574675    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
574676    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
574677    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
574678    +   end;
MPRINT(EM_DIAGRAM):   end;
574679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574680    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
574681    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
574682    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
574683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574685    +   end;
MPRINT(EM_DIAGRAM):   end;
574686    +end;
MPRINT(EM_DIAGRAM):   end;
574687    +
574688    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
574689    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
574690    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
574691    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
574692    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
574693    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
574694    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574696    +end;
MPRINT(EM_DIAGRAM):   end;
574697    +else do;
MPRINT(EM_DIAGRAM):   else do;
574698    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574699    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
574700    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574701    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
574702    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
574703    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
574704    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
574705    +   end;
MPRINT(EM_DIAGRAM):   end;
574706    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
574707    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
574708    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
574709    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
574710    +   end;
MPRINT(EM_DIAGRAM):   end;
574711    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574712    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
574713    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
574714    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
574715    +   end;
MPRINT(EM_DIAGRAM):   end;
574716    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574717    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
574718    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
574719    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
574720    +   end;
MPRINT(EM_DIAGRAM):   end;
574721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574722    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
574723    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
574724    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
574725    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574726    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574727    +   end;
MPRINT(EM_DIAGRAM):   end;
574728    +end;
MPRINT(EM_DIAGRAM):   end;
574729    +
574730    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
574731    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
574732    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
574733    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
574734    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
574735    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
574736    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574737    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574738    +end;
MPRINT(EM_DIAGRAM):   end;
574739    +else do;
MPRINT(EM_DIAGRAM):   else do;
574740    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574741    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
574742    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574743    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
574744    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
574745    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
574746    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
574747    +   end;
MPRINT(EM_DIAGRAM):   end;
574748    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
574749    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
574750    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
574751    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
574752    +   end;
MPRINT(EM_DIAGRAM):   end;
574753    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574754    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
574755    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
574756    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
574757    +   end;
MPRINT(EM_DIAGRAM):   end;
574758    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574759    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
574760    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
574761    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
574762    +   end;
MPRINT(EM_DIAGRAM):   end;
574763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574764    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
574765    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
574766    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
574767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574769    +   end;
MPRINT(EM_DIAGRAM):   end;
574770    +end;
MPRINT(EM_DIAGRAM):   end;
574771    +
574772    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
574773    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
574774    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
574775    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
574776    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
574777    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
574778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
574779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574780    +end;
MPRINT(EM_DIAGRAM):   end;
574781    +else do;
MPRINT(EM_DIAGRAM):   else do;
574782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
574783    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
574784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
574785    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
574786    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
574787    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
574788    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
574789    +   end;
MPRINT(EM_DIAGRAM):   end;
574790    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
574791    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
574792    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
574793    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
574794    +   end;
MPRINT(EM_DIAGRAM):   end;
574795    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
574796    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
574797    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
574798    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
574799    +   end;
MPRINT(EM_DIAGRAM):   end;
574800    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
574801    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
574802    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
574803    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
574804    +   end;
MPRINT(EM_DIAGRAM):   end;
574805    +   else do;
MPRINT(EM_DIAGRAM):   else do;
574806    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
574807    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
574808    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
574809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
574810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
574811    +   end;
MPRINT(EM_DIAGRAM):   end;
574812    +end;
MPRINT(EM_DIAGRAM):   end;
574813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
574814    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
574815    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
574816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
574817    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
574818    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
574819    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
574820    +   H11  =    -0.47846451014473 * GRP_AcceptedCmp52  +     0.19123593876387 *
574821    +        GRP_Frq2  +     0.09643181492148 * GRP_Frq3  +     0.05144024674895 *
574822    +        GRP_Frq4  +     0.04295631018086 * GRP_Income2
574823    +          +     -0.1228594895838 * GRP_Income3  +    -0.24669259703155 *
574824    +        GRP_Income4  +    -0.12634710557505 * GRP_Mnt2
574825    +          +     0.06153848379201 * GRP_Mnt3  +    -0.25623825887978 * GRP_Mnt4
574826    +          +    -0.09885892988252 * GRP_MntFishProducts2
574827    +          +     0.08406776876431 * GRP_MntFishProducts3
574828    +          +    -0.01961506207304 * GRP_MntFishProducts4
574829    +          +     0.05865015349102 * GRP_MntGoldProds2
574830    +          +    -0.19025881153665 * GRP_MntGoldProds3
574831    +          +     0.11742267670165 * GRP_MntGoldProds4
574832    +          +    -0.48107725600014 * GRP_MntMeatProducts2
574833    +          +    -0.06405219545244 * GRP_MntMeatProducts3
574834    +          +    -0.28599597872655 * GRP_MntMeatProducts4
574835    +          +     0.09252331701173 * GRP_MntWines2  +    -0.01679973092371 *
574836    +        GRP_MntWines3  +    -0.28118765113398 * GRP_MntWines4
574837    +          +    -0.20589129984224 * GRP_NumCatalogPurchases3
574838    +          +     0.09269540062859 * GRP_NumCatalogPurchases4
574839    +          +    -0.21301173258264 * GRP_NumDistPurchases2
574840    +          +     0.02968077077204 * GRP_NumDistPurchases3
574841    +          +     0.37847518797466 * GRP_NumDistPurchases4
574842    +          +    -0.14460622553066 * GRP_NumWebPurchases2
574843    +          +     0.24087714617368 * GRP_NumWebPurchases3
574844    +          +     0.31645984538255 * GRP_NumWebPurchases4
574845    +          +    -0.21603366146166 * GRP_RFMstat2  +    -0.16662861409798 *
574846    +        GRP_RFMstat3  +     0.21007601365613 * GRP_RFMstat4
574847    +          +    -0.01443663304415 * GRP_RMntFrq2  +    -0.10326438582674 *
574848    +        GRP_RMntFrq3  +    -0.65474128199839 * GRP_RMntFrq4
574849    +          +     0.32165037855922 * GRP_Recency2  +     0.13838311684738 *
574850    +        GRP_Recency3  +     0.25495034500897 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47846451014473 * GRP_AcceptedCmp52 + 0.19123593876387 * 
GRP_Frq2 + 0.09643181492148 * GRP_Frq3 + 0.05144024674895 * GRP_Frq4 + 0.04295631018086 * 
GRP_Income2 + -0.1228594895838 * GRP_Income3 + -0.24669259703155 * GRP_Income4 + 
-0.12634710557505 * GRP_Mnt2 + 0.06153848379201 * GRP_Mnt3 + -0.25623825887978 * GRP_Mnt4 + 
-0.09885892988252 * GRP_MntFishProducts2 + 0.08406776876431 * GRP_MntFishProducts3 + 
-0.01961506207304 * GRP_MntFishProducts4 + 0.05865015349102 * GRP_MntGoldProds2 + 
-0.19025881153665 * GRP_MntGoldProds3 + 0.11742267670165 * GRP_MntGoldProds4 + 
-0.48107725600014 * GRP_MntMeatProducts2 + -0.06405219545244 * GRP_MntMeatProducts3 + 
-0.28599597872655 * GRP_MntMeatProducts4 + 0.09252331701173 * GRP_MntWines2 + 
-0.01679973092371 * GRP_MntWines3 + -0.28118765113398 * GRP_MntWines4 + -0.20589129984224 * 
GRP_NumCatalogPurchases3 + 0.09269540062859 * GRP_NumCatalogPurchases4 + -0.21301173258264 * 
GRP_NumDistPurchases2 + 0.02968077077204 * GRP_NumDistPurchases3 + 0.37847518797466 * 
GRP_NumDistPurchases4 + -0.14460622553066 * GRP_NumWebPurchases2 + 0.24087714617368 * 
GRP_NumWebPurchases3 + 0.31645984538255 * GRP_NumWebPurchases4 + -0.21603366146166 * 
GRP_RFMstat2 + -0.16662861409798 * GRP_RFMstat3 + 0.21007601365613 * GRP_RFMstat4 + 
-0.01443663304415 * GRP_RMntFrq2 + -0.10326438582674 * GRP_RMntFrq3 + -0.65474128199839 * 
GRP_RMntFrq4 + 0.32165037855922 * GRP_Recency2 + 0.13838311684738 * GRP_Recency3 + 
0.25495034500897 * GRP_Recency4 ;
574851    +   H12  =     0.19980227701329 * GRP_AcceptedCmp52  +     0.35227413860542 *
574852    +        GRP_Frq2  +    -0.08132751965568 * GRP_Frq3  +     0.06274660992037 *
574853    +        GRP_Frq4  +     0.14609729670665 * GRP_Income2
574854    +          +     -0.0521158725468 * GRP_Income3  +     0.29485821055626 *
574855    +        GRP_Income4  +     0.11491631500511 * GRP_Mnt2
574856    +          +    -0.48249282197964 * GRP_Mnt3  +    -0.43275960999945 * GRP_Mnt4
574857    +          +     0.23372129286866 * GRP_MntFishProducts2
574858    +          +     0.08173006283377 * GRP_MntFishProducts3
574859    +          +    -0.26374451563307 * GRP_MntFishProducts4
574860    +          +    -0.05478986771486 * GRP_MntGoldProds2
574861    +          +     0.15674217490538 * GRP_MntGoldProds3
574862    +          +     -0.0970693263223 * GRP_MntGoldProds4
574863    +          +    -0.07551339114514 * GRP_MntMeatProducts2
574864    +          +     0.20520020022282 * GRP_MntMeatProducts3
574865    +          +     0.18185271543305 * GRP_MntMeatProducts4
574866    +          +     0.13372808101693 * GRP_MntWines2  +    -0.23508613293176 *
574867    +        GRP_MntWines3  +     0.03782283781196 * GRP_MntWines4
574868    +          +    -0.01759208575836 * GRP_NumCatalogPurchases3
574869    +          +     0.03228155996803 * GRP_NumCatalogPurchases4
574870    +          +    -0.16689756602171 * GRP_NumDistPurchases2
574871    +          +     0.23008084678616 * GRP_NumDistPurchases3
574872    +          +      0.1020080832353 * GRP_NumDistPurchases4
574873    +          +     0.00689419482794 * GRP_NumWebPurchases2
574874    +          +     0.45549724613494 * GRP_NumWebPurchases3
574875    +          +     0.21666691620434 * GRP_NumWebPurchases4
574876    +          +    -0.02464138218078 * GRP_RFMstat2  +     0.13412544784153 *
574877    +        GRP_RFMstat3  +    -0.09645970560405 * GRP_RFMstat4
574878    +          +     0.04270814348512 * GRP_RMntFrq2  +     -0.1501520967589 *
574879    +        GRP_RMntFrq3  +     -0.1772447013278 * GRP_RMntFrq4
574880    +          +      0.1223375687576 * GRP_Recency2  +      0.1019105028487 *
574881    +        GRP_Recency3  +     0.06326170958276 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19980227701329 * GRP_AcceptedCmp52 + 0.35227413860542 * GRP_Frq2 
+ -0.08132751965568 * GRP_Frq3 + 0.06274660992037 * GRP_Frq4 + 0.14609729670665 * GRP_Income2 
+ -0.0521158725468 * GRP_Income3 + 0.29485821055626 * GRP_Income4 + 0.11491631500511 * 
GRP_Mnt2 + -0.48249282197964 * GRP_Mnt3 + -0.43275960999945 * GRP_Mnt4 + 0.23372129286866 * 
GRP_MntFishProducts2 + 0.08173006283377 * GRP_MntFishProducts3 + -0.26374451563307 * 
GRP_MntFishProducts4 + -0.05478986771486 * GRP_MntGoldProds2 + 0.15674217490538 * 
GRP_MntGoldProds3 + -0.0970693263223 * GRP_MntGoldProds4 + -0.07551339114514 * 
GRP_MntMeatProducts2 + 0.20520020022282 * GRP_MntMeatProducts3 + 0.18185271543305 * 
GRP_MntMeatProducts4 + 0.13372808101693 * GRP_MntWines2 + -0.23508613293176 * GRP_MntWines3 + 
0.03782283781196 * GRP_MntWines4 + -0.01759208575836 * GRP_NumCatalogPurchases3 + 
0.03228155996803 * GRP_NumCatalogPurchases4 + -0.16689756602171 * GRP_NumDistPurchases2 + 
0.23008084678616 * GRP_NumDistPurchases3 + 0.1020080832353 * GRP_NumDistPurchases4 + 
0.00689419482794 * GRP_NumWebPurchases2 + 0.45549724613494 * GRP_NumWebPurchases3 + 
0.21666691620434 * GRP_NumWebPurchases4 + -0.02464138218078 * GRP_RFMstat2 + 0.13412544784153 
* GRP_RFMstat3 + -0.09645970560405 * GRP_RFMstat4 + 0.04270814348512 * GRP_RMntFrq2 + 
-0.1501520967589 * GRP_RMntFrq3 + -0.1772447013278 * GRP_RMntFrq4 + 0.1223375687576 * 
GRP_Recency2 + 0.1019105028487 * GRP_Recency3 + 0.06326170958276 * GRP_Recency4 ;
574882    +   H13  =    -0.47552326597307 * GRP_AcceptedCmp52  +     0.13942347151662 *
574883    +        GRP_Frq2  +     0.15792042601114 * GRP_Frq3  +    -0.31699137546772 *
574884    +        GRP_Frq4  +     0.31623959766757 * GRP_Income2
574885    +          +     0.51675448663341 * GRP_Income3  +    -0.28386096750656 *
574886    +        GRP_Income4  +    -0.19585257598596 * GRP_Mnt2
574887    +          +     0.03528129174811 * GRP_Mnt3  +     0.16020552351069 * GRP_Mnt4
574888    +          +     0.11549870508237 * GRP_MntFishProducts2
574889    +          +    -0.02472870244462 * GRP_MntFishProducts3
574890    +          +    -0.08397818027214 * GRP_MntFishProducts4
574891    +          +    -0.15352678487636 * GRP_MntGoldProds2
574892    +          +    -0.22936969994696 * GRP_MntGoldProds3
574893    +          +    -0.14955434708754 * GRP_MntGoldProds4
574894    +          +    -0.27851745198006 * GRP_MntMeatProducts2
574895    +          +    -0.20347624413948 * GRP_MntMeatProducts3
574896    +          +     0.22612412661729 * GRP_MntMeatProducts4
574897    +          +      0.0680550338972 * GRP_MntWines2  +     0.13605728094791 *
574898    +        GRP_MntWines3  +    -0.24233826362305 * GRP_MntWines4
574899    +          +    -0.51105265438413 * GRP_NumCatalogPurchases3
574900    +          +      0.3463181885617 * GRP_NumCatalogPurchases4
574901    +          +    -0.42061003686263 * GRP_NumDistPurchases2
574902    +          +     0.05694490202182 * GRP_NumDistPurchases3
574903    +          +    -0.05589065356183 * GRP_NumDistPurchases4
574904    +          +    -0.15004779907268 * GRP_NumWebPurchases2
574905    +          +    -0.03683214810286 * GRP_NumWebPurchases3
574906    +          +    -0.14152766915751 * GRP_NumWebPurchases4
574907    +          +    -0.34448387603605 * GRP_RFMstat2  +    -0.12678315363038 *
574908    +        GRP_RFMstat3  +    -0.17785766746488 * GRP_RFMstat4
574909    +          +    -0.12269367915474 * GRP_RMntFrq2  +     0.15261716486225 *
574910    +        GRP_RMntFrq3  +    -0.14834283523731 * GRP_RMntFrq4
574911    +          +     0.41906757309616 * GRP_Recency2  +     0.11383836551208 *
574912    +        GRP_Recency3  +    -0.50873022901358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.47552326597307 * GRP_AcceptedCmp52 + 0.13942347151662 * 
GRP_Frq2 + 0.15792042601114 * GRP_Frq3 + -0.31699137546772 * GRP_Frq4 + 0.31623959766757 * 
GRP_Income2 + 0.51675448663341 * GRP_Income3 + -0.28386096750656 * GRP_Income4 + 
-0.19585257598596 * GRP_Mnt2 + 0.03528129174811 * GRP_Mnt3 + 0.16020552351069 * GRP_Mnt4 + 
0.11549870508237 * GRP_MntFishProducts2 + -0.02472870244462 * GRP_MntFishProducts3 + 
-0.08397818027214 * GRP_MntFishProducts4 + -0.15352678487636 * GRP_MntGoldProds2 + 
-0.22936969994696 * GRP_MntGoldProds3 + -0.14955434708754 * GRP_MntGoldProds4 + 
-0.27851745198006 * GRP_MntMeatProducts2 + -0.20347624413948 * GRP_MntMeatProducts3 + 
0.22612412661729 * GRP_MntMeatProducts4 + 0.0680550338972 * GRP_MntWines2 + 0.13605728094791 * 
GRP_MntWines3 + -0.24233826362305 * GRP_MntWines4 + -0.51105265438413 * 
GRP_NumCatalogPurchases3 + 0.3463181885617 * GRP_NumCatalogPurchases4 + -0.42061003686263 * 
GRP_NumDistPurchases2 + 0.05694490202182 * GRP_NumDistPurchases3 + -0.05589065356183 * 
GRP_NumDistPurchases4 + -0.15004779907268 * GRP_NumWebPurchases2 + -0.03683214810286 * 
GRP_NumWebPurchases3 + -0.14152766915751 * GRP_NumWebPurchases4 + -0.34448387603605 * 
GRP_RFMstat2 + -0.12678315363038 * GRP_RFMstat3 + -0.17785766746488 * GRP_RFMstat4 + 
-0.12269367915474 * GRP_RMntFrq2 + 0.15261716486225 * GRP_RMntFrq3 + -0.14834283523731 * 
GRP_RMntFrq4 + 0.41906757309616 * GRP_Recency2 + 0.11383836551208 * GRP_Recency3 + 
-0.50873022901358 * GRP_Recency4 ;
574913    +   H14  =     0.47487308000188 * GRP_AcceptedCmp52  +    -0.20783874293801 *
574914    +        GRP_Frq2  +     -0.2262487293265 * GRP_Frq3  +    -0.24497015722444 *
574915    +        GRP_Frq4  +    -0.41352416374349 * GRP_Income2
574916    +          +    -0.19029917786221 * GRP_Income3  +     0.44371774186743 *
574917    +        GRP_Income4  +     0.03966957052109 * GRP_Mnt2
574918    +          +     0.21041258864544 * GRP_Mnt3  +    -0.03545115071009 * GRP_Mnt4
574919    +          +     -0.3523117475999 * GRP_MntFishProducts2
574920    +          +     0.01075749365425 * GRP_MntFishProducts3
574921    +          +    -0.19220397921061 * GRP_MntFishProducts4
574922    +          +     0.24691019907326 * GRP_MntGoldProds2
574923    +          +    -0.36269131170152 * GRP_MntGoldProds3
574924    +          +    -0.07442729340208 * GRP_MntGoldProds4
574925    +          +     0.14166838567576 * GRP_MntMeatProducts2
574926    +          +     -0.0573636128895 * GRP_MntMeatProducts3
574927    +          +     0.11782684497872 * GRP_MntMeatProducts4
574928    +          +    -0.58306293735162 * GRP_MntWines2  +     -0.1332347200661 *
574929    +        GRP_MntWines3  +     -0.0491151521812 * GRP_MntWines4
574930    +          +     0.19217394838443 * GRP_NumCatalogPurchases3
574931    +          +     0.30242368378572 * GRP_NumCatalogPurchases4
574932    +          +      0.5631335040028 * GRP_NumDistPurchases2
574933    +          +      0.2833277493575 * GRP_NumDistPurchases3
574934    +          +     0.15501991757103 * GRP_NumDistPurchases4
574935    +          +     0.06522663204791 * GRP_NumWebPurchases2
574936    +          +    -0.24250508241812 * GRP_NumWebPurchases3
574937    +          +    -0.14936719392927 * GRP_NumWebPurchases4
574938    +          +     0.07538326365237 * GRP_RFMstat2  +    -0.11207708467015 *
574939    +        GRP_RFMstat3  +    -0.03495013261696 * GRP_RFMstat4
574940    +          +    -0.07948642963964 * GRP_RMntFrq2  +     -0.3740993499425 *
574941    +        GRP_RMntFrq3  +      0.1224880912483 * GRP_RMntFrq4
574942    +          +    -1.20234498415322 * GRP_Recency2  +    -0.15277267671243 *
574943    +        GRP_Recency3  +     0.17498175973385 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.47487308000188 * GRP_AcceptedCmp52 + -0.20783874293801 * 
GRP_Frq2 + -0.2262487293265 * GRP_Frq3 + -0.24497015722444 * GRP_Frq4 + -0.41352416374349 * 
GRP_Income2 + -0.19029917786221 * GRP_Income3 + 0.44371774186743 * GRP_Income4 + 
0.03966957052109 * GRP_Mnt2 + 0.21041258864544 * GRP_Mnt3 + -0.03545115071009 * GRP_Mnt4 + 
-0.3523117475999 * GRP_MntFishProducts2 + 0.01075749365425 * GRP_MntFishProducts3 + 
-0.19220397921061 * GRP_MntFishProducts4 + 0.24691019907326 * GRP_MntGoldProds2 + 
-0.36269131170152 * GRP_MntGoldProds3 + -0.07442729340208 * GRP_MntGoldProds4 + 
0.14166838567576 * GRP_MntMeatProducts2 + -0.0573636128895 * GRP_MntMeatProducts3 + 
0.11782684497872 * GRP_MntMeatProducts4 + -0.58306293735162 * GRP_MntWines2 + -0.1332347200661 
* GRP_MntWines3 + -0.0491151521812 * GRP_MntWines4 + 0.19217394838443 * 
GRP_NumCatalogPurchases3 + 0.30242368378572 * GRP_NumCatalogPurchases4 + 0.5631335040028 * 
GRP_NumDistPurchases2 + 0.2833277493575 * GRP_NumDistPurchases3 + 0.15501991757103 * 
GRP_NumDistPurchases4 + 0.06522663204791 * GRP_NumWebPurchases2 + -0.24250508241812 * 
GRP_NumWebPurchases3 + -0.14936719392927 * GRP_NumWebPurchases4 + 0.07538326365237 * 
GRP_RFMstat2 + -0.11207708467015 * GRP_RFMstat3 + -0.03495013261696 * GRP_RFMstat4 + 
-0.07948642963964 * GRP_RMntFrq2 + -0.3740993499425 * GRP_RMntFrq3 + 0.1224880912483 * 
GRP_RMntFrq4 + -1.20234498415322 * GRP_Recency2 + -0.15277267671243 * GRP_Recency3 + 
0.17498175973385 * GRP_Recency4 ;
574944    +   H15  =     0.31607756545434 * GRP_AcceptedCmp52  +    -0.39938983779344 *
574945    +        GRP_Frq2  +     0.14190381114364 * GRP_Frq3  +    -0.04654073105991 *
574946    +        GRP_Frq4  +    -0.46847099915399 * GRP_Income2
574947    +          +    -0.24521056791482 * GRP_Income3  +     0.29673900247528 *
574948    +        GRP_Income4  +    -0.24347594694596 * GRP_Mnt2
574949    +          +    -0.25470417967356 * GRP_Mnt3  +     -0.3155333752807 * GRP_Mnt4
574950    +          +    -0.16164851437662 * GRP_MntFishProducts2
574951    +          +    -0.07507872874942 * GRP_MntFishProducts3
574952    +          +     -0.0000128165366 * GRP_MntFishProducts4
574953    +          +    -0.13003975496355 * GRP_MntGoldProds2
574954    +          +     0.10076462685161 * GRP_MntGoldProds3
574955    +          +     0.06823082371801 * GRP_MntGoldProds4
574956    +          +    -0.06661203056726 * GRP_MntMeatProducts2
574957    +          +     0.21135583081997 * GRP_MntMeatProducts3
574958    +          +     0.05317467469941 * GRP_MntMeatProducts4
574959    +          +     -0.6790577471338 * GRP_MntWines2  +    -0.29030845400198 *
574960    +        GRP_MntWines3  +     0.17538455641954 * GRP_MntWines4
574961    +          +     0.27411589551701 * GRP_NumCatalogPurchases3
574962    +          +     0.33639439802576 * GRP_NumCatalogPurchases4
574963    +          +     0.37202178791302 * GRP_NumDistPurchases2
574964    +          +     0.21242089259106 * GRP_NumDistPurchases3
574965    +          +     0.01745612539369 * GRP_NumDistPurchases4
574966    +          +     0.06417261665114 * GRP_NumWebPurchases2
574967    +          +     0.34302874594069 * GRP_NumWebPurchases3
574968    +          +     0.08556934131582 * GRP_NumWebPurchases4
574969    +          +    -0.01317484038203 * GRP_RFMstat2  +    -0.26798645102872 *
574970    +        GRP_RFMstat3  +    -0.23199496411354 * GRP_RFMstat4
574971    +          +    -0.36396476479849 * GRP_RMntFrq2  +    -0.16838193614715 *
574972    +        GRP_RMntFrq3  +       0.051807632343 * GRP_RMntFrq4
574973    +          +    -0.13014582685433 * GRP_Recency2  +     0.01537566565331 *
574974    +        GRP_Recency3  +      0.1365007617785 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.31607756545434 * GRP_AcceptedCmp52 + -0.39938983779344 * 
GRP_Frq2 + 0.14190381114364 * GRP_Frq3 + -0.04654073105991 * GRP_Frq4 + -0.46847099915399 * 
GRP_Income2 + -0.24521056791482 * GRP_Income3 + 0.29673900247528 * GRP_Income4 + 
-0.24347594694596 * GRP_Mnt2 + -0.25470417967356 * GRP_Mnt3 + -0.3155333752807 * GRP_Mnt4 + 
-0.16164851437662 * GRP_MntFishProducts2 + -0.07507872874942 * GRP_MntFishProducts3 + 
-0.0000128165366 * GRP_MntFishProducts4 + -0.13003975496355 * GRP_MntGoldProds2 + 
0.10076462685161 * GRP_MntGoldProds3 + 0.06823082371801 * GRP_MntGoldProds4 + 
-0.06661203056726 * GRP_MntMeatProducts2 + 0.21135583081997 * GRP_MntMeatProducts3 + 
0.05317467469941 * GRP_MntMeatProducts4 + -0.6790577471338 * GRP_MntWines2 + -0.29030845400198 
* GRP_MntWines3 + 0.17538455641954 * GRP_MntWines4 + 0.27411589551701 * 
GRP_NumCatalogPurchases3 + 0.33639439802576 * GRP_NumCatalogPurchases4 + 0.37202178791302 * 
GRP_NumDistPurchases2 + 0.21242089259106 * GRP_NumDistPurchases3 + 0.01745612539369 * 
GRP_NumDistPurchases4 + 0.06417261665114 * GRP_NumWebPurchases2 + 0.34302874594069 * 
GRP_NumWebPurchases3 + 0.08556934131582 * GRP_NumWebPurchases4 + -0.01317484038203 * 
GRP_RFMstat2 + -0.26798645102872 * GRP_RFMstat3 + -0.23199496411354 * GRP_RFMstat4 + 
-0.36396476479849 * GRP_RMntFrq2 + -0.16838193614715 * GRP_RMntFrq3 + 0.051807632343 * 
GRP_RMntFrq4 + -0.13014582685433 * GRP_Recency2 + 0.01537566565331 * GRP_Recency3 + 
0.1365007617785 * GRP_Recency4 ;
574975    +   H11  =    -0.02804722687441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02804722687441 + H11 ;
574976    +   H12  =    -1.15173994765723 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.15173994765723 + H12 ;
574977    +   H13  =     0.30124306509106 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30124306509106 + H13 ;
574978    +   H14  =    -0.37792609262463 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.37792609262463 + H14 ;
574979    +   H15  =     0.46405557098176 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.46405557098176 + H15 ;
574980    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
574981    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
574982    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
574983    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
574984    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
574985    +END;
MPRINT(EM_DIAGRAM):   END;
574986    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
574987    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
574988    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
574989    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
574990    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
574991    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
574992    +END;
MPRINT(EM_DIAGRAM):   END;
574993    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
574994    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
574995    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
574996    +
574997    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
574998    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
574999    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
575000    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
575001    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
575002    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575003    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
575004    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
575005    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
575006    +end;
MPRINT(EM_DIAGRAM):   end;
575007    +else do;
MPRINT(EM_DIAGRAM):   else do;
575008    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
575009    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
575010    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
575011    +   end;
MPRINT(EM_DIAGRAM):   end;
575012    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
575013    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
575014    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
575015    +   end;
MPRINT(EM_DIAGRAM):   end;
575016    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575017    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
575018    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
575019    +   end;
MPRINT(EM_DIAGRAM):   end;
575020    +end;
MPRINT(EM_DIAGRAM):   end;
575021    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
575022    +   P_DepVar1  =     1.14388401268032 * H11  +      0.6001876010487 * H12
575023    +          +     2.09526498410663 * H13  +    -1.84849014758118 * H14
575024    +          +    -1.09009016441951 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.14388401268032 * H11 + 0.6001876010487 * H12 + 
2.09526498410663 * H13 + -1.84849014758118 * H14 + -1.09009016441951 * H15 ;
575025    +   P_DepVar1  =    -1.61414772995986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.61414772995986 + P_DepVar1 ;
575026    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
575027    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
575028    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
575029    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
575030    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
575031    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
575032    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
575033    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
575034    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
575035    +END;
MPRINT(EM_DIAGRAM):   END;
575036    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
575037    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
575038    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
575039    +END;
MPRINT(EM_DIAGRAM):   END;
575040    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
575041    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
575042    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
575043    +END;
MPRINT(EM_DIAGRAM):   END;
575044    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
575045    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
575046    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
575047    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
575048    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
575049    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
575050    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
575051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575052    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
575053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575054    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
575055    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
575056    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
575057    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
575058    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
575059    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
575060    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
575061    +END;
MPRINT(EM_DIAGRAM):   END;
575062    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
575063    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
575064    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
575065    +drop
575066    +H11
575067    +H12
575068    +H13
575069    +H14
575070    +H15
575071    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
575072     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL22_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
575073     quit;
575074     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
575075     filename emflow
575075   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural22: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
575076     *------------------------------------------------------------*;
575077     * Neural22: Scoring VALIDATE data;
575078     *------------------------------------------------------------*;
575079     data EMWS8.Neural22_VALIDATE
575080     / view=EMWS8.Neural22_VALIDATE
575081     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_VALIDATE / view=EMWS8.Neural22_VALIDATE ;
575082     set EMWS8.BINNING_VALIDATE
575083     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
575084     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMFLOWSCORE.sas.
575085    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
575086    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
575087    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
575088    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
575089    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
575090    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
575091    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
575092    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
575093    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
575094    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
575095    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
575096    +LENGTH _WARN_ $4
575097    +      F_DepVar  $ 12
575098    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
575099    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
575100    +
575101    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
575102    +
575103    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
575104    +
575105    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
575106    +
575107    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
575108    +
575109    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
575110    +
575111    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
575112    +
575113    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
575114    +
575115    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
575116    +
575117    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
575118    +
575119    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
575120    +
575121    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
575122    +
575123    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
575124    +
575125    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
575126    +
575127    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
575128    +
575129    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
575130    +
575131    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
575132    +
575133    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
575134    +
575135    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
575136    +
575137    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
575138    +
575139    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
575140    +
575141    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
575142    +
575143    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
575144    +
575145    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
575146    +
575147    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
575148    +
575149    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
575150    +
575151    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
575152    +
575153    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
575154    +
575155    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
575156    +
575157    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
575158    +
575159    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
575160    +
575161    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
575162    +
575163    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
575164    +
575165    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
575166    +
575167    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
575168    +
575169    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
575170    +
575171    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
575172    +
575173    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
575174    +
575175    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
575176    +
575177    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
575178    +
575179    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
575180    +
575181    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
575182    +
575183    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
575184    +
575185    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
575186    +
575187    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
575188    +
575189    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
575190    +
575191    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
575192    +
575193    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
575194    +
575195    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
575196    +
575197    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
575198    +
575199    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
575200    +
575201    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
575202    +
575203    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
575204    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
575205    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
575206    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
575207    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575208    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575209    +end;
MPRINT(EM_DIAGRAM):   end;
575210    +else do;
MPRINT(EM_DIAGRAM):   else do;
575211    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575212    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
575213    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575214    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
575215    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
575216    +   end;
MPRINT(EM_DIAGRAM):   end;
575217    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
575218    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
575219    +   end;
MPRINT(EM_DIAGRAM):   end;
575220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575221    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
575222    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575223    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575224    +   end;
MPRINT(EM_DIAGRAM):   end;
575225    +end;
MPRINT(EM_DIAGRAM):   end;
575226    +
575227    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
575228    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
575229    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
575230    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
575231    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
575232    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
575233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575235    +end;
MPRINT(EM_DIAGRAM):   end;
575236    +else do;
MPRINT(EM_DIAGRAM):   else do;
575237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575238    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
575239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575240    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
575241    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
575242    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
575243    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
575244    +   end;
MPRINT(EM_DIAGRAM):   end;
575245    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
575246    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
575247    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
575248    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
575249    +   end;
MPRINT(EM_DIAGRAM):   end;
575250    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575251    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
575252    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
575253    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
575254    +   end;
MPRINT(EM_DIAGRAM):   end;
575255    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575256    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
575257    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
575258    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
575259    +   end;
MPRINT(EM_DIAGRAM):   end;
575260    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575261    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
575262    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
575263    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
575264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575266    +   end;
MPRINT(EM_DIAGRAM):   end;
575267    +end;
MPRINT(EM_DIAGRAM):   end;
575268    +
575269    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
575270    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
575271    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
575272    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
575273    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
575274    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
575275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575277    +end;
MPRINT(EM_DIAGRAM):   end;
575278    +else do;
MPRINT(EM_DIAGRAM):   else do;
575279    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575280    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
575281    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575282    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
575283    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
575284    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
575285    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
575286    +   end;
MPRINT(EM_DIAGRAM):   end;
575287    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575288    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
575289    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
575290    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
575291    +   end;
MPRINT(EM_DIAGRAM):   end;
575292    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
575293    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
575294    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
575295    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
575296    +   end;
MPRINT(EM_DIAGRAM):   end;
575297    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575298    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
575299    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
575300    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
575301    +   end;
MPRINT(EM_DIAGRAM):   end;
575302    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575303    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
575304    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
575305    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
575306    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575307    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575308    +   end;
MPRINT(EM_DIAGRAM):   end;
575309    +end;
MPRINT(EM_DIAGRAM):   end;
575310    +
575311    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
575312    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
575313    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
575314    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
575315    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
575316    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
575317    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575319    +end;
MPRINT(EM_DIAGRAM):   end;
575320    +else do;
MPRINT(EM_DIAGRAM):   else do;
575321    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575322    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
575323    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575324    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575325    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
575326    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
575327    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
575328    +   end;
MPRINT(EM_DIAGRAM):   end;
575329    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575330    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
575331    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
575332    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
575333    +   end;
MPRINT(EM_DIAGRAM):   end;
575334    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575335    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
575336    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
575337    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
575338    +   end;
MPRINT(EM_DIAGRAM):   end;
575339    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575340    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
575341    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
575342    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
575343    +   end;
MPRINT(EM_DIAGRAM):   end;
575344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575345    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
575346    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
575347    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
575348    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575349    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575350    +   end;
MPRINT(EM_DIAGRAM):   end;
575351    +end;
MPRINT(EM_DIAGRAM):   end;
575352    +
575353    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
575354    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
575355    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
575356    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
575357    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
575358    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
575359    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575361    +end;
MPRINT(EM_DIAGRAM):   end;
575362    +else do;
MPRINT(EM_DIAGRAM):   else do;
575363    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575364    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
575365    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575366    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575367    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
575368    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
575369    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
575370    +   end;
MPRINT(EM_DIAGRAM):   end;
575371    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575372    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
575373    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
575374    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
575375    +   end;
MPRINT(EM_DIAGRAM):   end;
575376    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575377    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
575378    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
575379    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
575380    +   end;
MPRINT(EM_DIAGRAM):   end;
575381    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575382    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
575383    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
575384    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
575385    +   end;
MPRINT(EM_DIAGRAM):   end;
575386    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575387    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
575388    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
575389    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
575390    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575391    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575392    +   end;
MPRINT(EM_DIAGRAM):   end;
575393    +end;
MPRINT(EM_DIAGRAM):   end;
575394    +
575395    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
575396    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
575397    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
575398    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
575399    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
575400    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
575401    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575402    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575403    +end;
MPRINT(EM_DIAGRAM):   end;
575404    +else do;
MPRINT(EM_DIAGRAM):   else do;
575405    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575406    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
575407    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575408    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575409    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
575410    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
575411    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
575412    +   end;
MPRINT(EM_DIAGRAM):   end;
575413    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575414    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
575415    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
575416    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
575417    +   end;
MPRINT(EM_DIAGRAM):   end;
575418    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575419    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
575420    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
575421    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
575422    +   end;
MPRINT(EM_DIAGRAM):   end;
575423    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575424    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
575425    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
575426    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
575427    +   end;
MPRINT(EM_DIAGRAM):   end;
575428    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575429    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
575430    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
575431    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
575432    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575433    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575434    +   end;
MPRINT(EM_DIAGRAM):   end;
575435    +end;
MPRINT(EM_DIAGRAM):   end;
575436    +
575437    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
575438    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
575439    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
575440    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
575441    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
575442    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
575443    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575444    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575445    +end;
MPRINT(EM_DIAGRAM):   end;
575446    +else do;
MPRINT(EM_DIAGRAM):   else do;
575447    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575448    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
575449    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575450    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575451    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
575452    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
575453    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
575454    +   end;
MPRINT(EM_DIAGRAM):   end;
575455    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575456    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
575457    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
575458    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
575459    +   end;
MPRINT(EM_DIAGRAM):   end;
575460    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575461    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
575462    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
575463    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
575464    +   end;
MPRINT(EM_DIAGRAM):   end;
575465    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575466    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
575467    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
575468    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
575469    +   end;
MPRINT(EM_DIAGRAM):   end;
575470    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575471    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
575472    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
575473    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
575474    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575475    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575476    +   end;
MPRINT(EM_DIAGRAM):   end;
575477    +end;
MPRINT(EM_DIAGRAM):   end;
575478    +
575479    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
575480    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
575481    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
575482    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
575483    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
575484    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
575485    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575486    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575487    +end;
MPRINT(EM_DIAGRAM):   end;
575488    +else do;
MPRINT(EM_DIAGRAM):   else do;
575489    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575490    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
575491    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575492    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575493    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
575494    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
575495    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
575496    +   end;
MPRINT(EM_DIAGRAM):   end;
575497    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575498    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
575499    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
575500    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
575501    +   end;
MPRINT(EM_DIAGRAM):   end;
575502    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575503    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
575504    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
575505    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
575506    +   end;
MPRINT(EM_DIAGRAM):   end;
575507    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575508    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
575509    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
575510    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
575511    +   end;
MPRINT(EM_DIAGRAM):   end;
575512    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575513    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
575514    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
575515    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
575516    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575517    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575518    +   end;
MPRINT(EM_DIAGRAM):   end;
575519    +end;
MPRINT(EM_DIAGRAM):   end;
575520    +
575521    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
575522    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
575523    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
575524    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
575525    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
575526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575528    +end;
MPRINT(EM_DIAGRAM):   end;
575529    +else do;
MPRINT(EM_DIAGRAM):   else do;
575530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575531    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
575532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575533    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575534    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
575535    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
575536    +   end;
MPRINT(EM_DIAGRAM):   end;
575537    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575538    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
575539    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
575540    +   end;
MPRINT(EM_DIAGRAM):   end;
575541    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575542    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
575543    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
575544    +   end;
MPRINT(EM_DIAGRAM):   end;
575545    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575546    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
575547    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
575548    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575549    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575550    +   end;
MPRINT(EM_DIAGRAM):   end;
575551    +end;
MPRINT(EM_DIAGRAM):   end;
575552    +
575553    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
575554    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
575555    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
575556    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
575557    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
575558    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
575559    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575560    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575561    +end;
MPRINT(EM_DIAGRAM):   end;
575562    +else do;
MPRINT(EM_DIAGRAM):   else do;
575563    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575564    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
575565    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575566    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
575567    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
575568    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
575569    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
575570    +   end;
MPRINT(EM_DIAGRAM):   end;
575571    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575572    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
575573    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
575574    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
575575    +   end;
MPRINT(EM_DIAGRAM):   end;
575576    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575577    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
575578    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
575579    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
575580    +   end;
MPRINT(EM_DIAGRAM):   end;
575581    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
575582    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
575583    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
575584    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
575585    +   end;
MPRINT(EM_DIAGRAM):   end;
575586    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575587    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
575588    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
575589    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
575590    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575591    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575592    +   end;
MPRINT(EM_DIAGRAM):   end;
575593    +end;
MPRINT(EM_DIAGRAM):   end;
575594    +
575595    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
575596    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
575597    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
575598    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
575599    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
575600    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
575601    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575602    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575603    +end;
MPRINT(EM_DIAGRAM):   end;
575604    +else do;
MPRINT(EM_DIAGRAM):   else do;
575605    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575606    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
575607    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575608    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575609    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
575610    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
575611    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
575612    +   end;
MPRINT(EM_DIAGRAM):   end;
575613    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575614    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
575615    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
575616    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
575617    +   end;
MPRINT(EM_DIAGRAM):   end;
575618    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575619    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
575620    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
575621    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
575622    +   end;
MPRINT(EM_DIAGRAM):   end;
575623    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575624    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
575625    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
575626    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
575627    +   end;
MPRINT(EM_DIAGRAM):   end;
575628    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575629    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
575630    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
575631    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
575632    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575633    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575634    +   end;
MPRINT(EM_DIAGRAM):   end;
575635    +end;
MPRINT(EM_DIAGRAM):   end;
575636    +
575637    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
575638    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
575639    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
575640    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
575641    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
575642    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
575643    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575644    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575645    +end;
MPRINT(EM_DIAGRAM):   end;
575646    +else do;
MPRINT(EM_DIAGRAM):   else do;
575647    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575648    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
575649    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575650    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
575651    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
575652    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
575653    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
575654    +   end;
MPRINT(EM_DIAGRAM):   end;
575655    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
575656    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
575657    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
575658    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
575659    +   end;
MPRINT(EM_DIAGRAM):   end;
575660    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575661    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
575662    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
575663    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
575664    +   end;
MPRINT(EM_DIAGRAM):   end;
575665    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575666    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
575667    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
575668    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
575669    +   end;
MPRINT(EM_DIAGRAM):   end;
575670    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575671    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
575672    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
575673    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
575674    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575675    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575676    +   end;
MPRINT(EM_DIAGRAM):   end;
575677    +end;
MPRINT(EM_DIAGRAM):   end;
575678    +
575679    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
575680    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
575681    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
575682    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
575683    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
575684    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
575685    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575686    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575687    +end;
MPRINT(EM_DIAGRAM):   end;
575688    +else do;
MPRINT(EM_DIAGRAM):   else do;
575689    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575690    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
575691    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575692    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
575693    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
575694    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
575695    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
The SAS System

575696    +   end;
MPRINT(EM_DIAGRAM):   end;
575697    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
575698    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
575699    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
575700    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
575701    +   end;
MPRINT(EM_DIAGRAM):   end;
575702    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575703    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
575704    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
575705    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
575706    +   end;
MPRINT(EM_DIAGRAM):   end;
575707    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575708    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
575709    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
575710    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
575711    +   end;
MPRINT(EM_DIAGRAM):   end;
575712    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575713    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
575714    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
575715    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
575716    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575717    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575718    +   end;
MPRINT(EM_DIAGRAM):   end;
575719    +end;
MPRINT(EM_DIAGRAM):   end;
575720    +
575721    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
575722    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
575723    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
575724    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
575725    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
575726    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
575727    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
575728    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575729    +end;
MPRINT(EM_DIAGRAM):   end;
575730    +else do;
MPRINT(EM_DIAGRAM):   else do;
575731    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
575732    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
575733    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575734    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
575735    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
575736    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
575737    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
575738    +   end;
MPRINT(EM_DIAGRAM):   end;
575739    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
575740    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
575741    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
575742    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
575743    +   end;
MPRINT(EM_DIAGRAM):   end;
575744    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
575745    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
575746    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
575747    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
575748    +   end;
MPRINT(EM_DIAGRAM):   end;
575749    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
575750    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
575751    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
575752    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
575753    +   end;
MPRINT(EM_DIAGRAM):   end;
575754    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575755    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
575756    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
575757    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
575758    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
575759    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
575760    +   end;
MPRINT(EM_DIAGRAM):   end;
575761    +end;
MPRINT(EM_DIAGRAM):   end;
575762    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575763    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
575764    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575766    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
575767    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575768    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
575769    +   H11  =    -0.47846451014473 * GRP_AcceptedCmp52  +     0.19123593876387 *
575770    +        GRP_Frq2  +     0.09643181492148 * GRP_Frq3  +     0.05144024674895 *
575771    +        GRP_Frq4  +     0.04295631018086 * GRP_Income2
575772    +          +     -0.1228594895838 * GRP_Income3  +    -0.24669259703155 *
575773    +        GRP_Income4  +    -0.12634710557505 * GRP_Mnt2
575774    +          +     0.06153848379201 * GRP_Mnt3  +    -0.25623825887978 * GRP_Mnt4
575775    +          +    -0.09885892988252 * GRP_MntFishProducts2
575776    +          +     0.08406776876431 * GRP_MntFishProducts3
575777    +          +    -0.01961506207304 * GRP_MntFishProducts4
575778    +          +     0.05865015349102 * GRP_MntGoldProds2
575779    +          +    -0.19025881153665 * GRP_MntGoldProds3
575780    +          +     0.11742267670165 * GRP_MntGoldProds4
575781    +          +    -0.48107725600014 * GRP_MntMeatProducts2
575782    +          +    -0.06405219545244 * GRP_MntMeatProducts3
575783    +          +    -0.28599597872655 * GRP_MntMeatProducts4
575784    +          +     0.09252331701173 * GRP_MntWines2  +    -0.01679973092371 *
575785    +        GRP_MntWines3  +    -0.28118765113398 * GRP_MntWines4
575786    +          +    -0.20589129984224 * GRP_NumCatalogPurchases3
575787    +          +     0.09269540062859 * GRP_NumCatalogPurchases4
575788    +          +    -0.21301173258264 * GRP_NumDistPurchases2
575789    +          +     0.02968077077204 * GRP_NumDistPurchases3
575790    +          +     0.37847518797466 * GRP_NumDistPurchases4
575791    +          +    -0.14460622553066 * GRP_NumWebPurchases2
575792    +          +     0.24087714617368 * GRP_NumWebPurchases3
575793    +          +     0.31645984538255 * GRP_NumWebPurchases4
575794    +          +    -0.21603366146166 * GRP_RFMstat2  +    -0.16662861409798 *
575795    +        GRP_RFMstat3  +     0.21007601365613 * GRP_RFMstat4
575796    +          +    -0.01443663304415 * GRP_RMntFrq2  +    -0.10326438582674 *
575797    +        GRP_RMntFrq3  +    -0.65474128199839 * GRP_RMntFrq4
575798    +          +     0.32165037855922 * GRP_Recency2  +     0.13838311684738 *
575799    +        GRP_Recency3  +     0.25495034500897 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47846451014473 * GRP_AcceptedCmp52 + 0.19123593876387 * 
GRP_Frq2 + 0.09643181492148 * GRP_Frq3 + 0.05144024674895 * GRP_Frq4 + 0.04295631018086 * 
GRP_Income2 + -0.1228594895838 * GRP_Income3 + -0.24669259703155 * GRP_Income4 + 
-0.12634710557505 * GRP_Mnt2 + 0.06153848379201 * GRP_Mnt3 + -0.25623825887978 * GRP_Mnt4 + 
-0.09885892988252 * GRP_MntFishProducts2 + 0.08406776876431 * GRP_MntFishProducts3 + 
-0.01961506207304 * GRP_MntFishProducts4 + 0.05865015349102 * GRP_MntGoldProds2 + 
-0.19025881153665 * GRP_MntGoldProds3 + 0.11742267670165 * GRP_MntGoldProds4 + 
-0.48107725600014 * GRP_MntMeatProducts2 + -0.06405219545244 * GRP_MntMeatProducts3 + 
-0.28599597872655 * GRP_MntMeatProducts4 + 0.09252331701173 * GRP_MntWines2 + 
-0.01679973092371 * GRP_MntWines3 + -0.28118765113398 * GRP_MntWines4 + -0.20589129984224 * 
GRP_NumCatalogPurchases3 + 0.09269540062859 * GRP_NumCatalogPurchases4 + -0.21301173258264 * 
GRP_NumDistPurchases2 + 0.02968077077204 * GRP_NumDistPurchases3 + 0.37847518797466 * 
GRP_NumDistPurchases4 + -0.14460622553066 * GRP_NumWebPurchases2 + 0.24087714617368 * 
GRP_NumWebPurchases3 + 0.31645984538255 * GRP_NumWebPurchases4 + -0.21603366146166 * 
GRP_RFMstat2 + -0.16662861409798 * GRP_RFMstat3 + 0.21007601365613 * GRP_RFMstat4 + 
-0.01443663304415 * GRP_RMntFrq2 + -0.10326438582674 * GRP_RMntFrq3 + -0.65474128199839 * 
GRP_RMntFrq4 + 0.32165037855922 * GRP_Recency2 + 0.13838311684738 * GRP_Recency3 + 
0.25495034500897 * GRP_Recency4 ;
575800    +   H12  =     0.19980227701329 * GRP_AcceptedCmp52  +     0.35227413860542 *
575801    +        GRP_Frq2  +    -0.08132751965568 * GRP_Frq3  +     0.06274660992037 *
575802    +        GRP_Frq4  +     0.14609729670665 * GRP_Income2
575803    +          +     -0.0521158725468 * GRP_Income3  +     0.29485821055626 *
575804    +        GRP_Income4  +     0.11491631500511 * GRP_Mnt2
575805    +          +    -0.48249282197964 * GRP_Mnt3  +    -0.43275960999945 * GRP_Mnt4
575806    +          +     0.23372129286866 * GRP_MntFishProducts2
575807    +          +     0.08173006283377 * GRP_MntFishProducts3
575808    +          +    -0.26374451563307 * GRP_MntFishProducts4
575809    +          +    -0.05478986771486 * GRP_MntGoldProds2
575810    +          +     0.15674217490538 * GRP_MntGoldProds3
575811    +          +     -0.0970693263223 * GRP_MntGoldProds4
575812    +          +    -0.07551339114514 * GRP_MntMeatProducts2
575813    +          +     0.20520020022282 * GRP_MntMeatProducts3
575814    +          +     0.18185271543305 * GRP_MntMeatProducts4
575815    +          +     0.13372808101693 * GRP_MntWines2  +    -0.23508613293176 *
575816    +        GRP_MntWines3  +     0.03782283781196 * GRP_MntWines4
575817    +          +    -0.01759208575836 * GRP_NumCatalogPurchases3
575818    +          +     0.03228155996803 * GRP_NumCatalogPurchases4
575819    +          +    -0.16689756602171 * GRP_NumDistPurchases2
575820    +          +     0.23008084678616 * GRP_NumDistPurchases3
575821    +          +      0.1020080832353 * GRP_NumDistPurchases4
575822    +          +     0.00689419482794 * GRP_NumWebPurchases2
575823    +          +     0.45549724613494 * GRP_NumWebPurchases3
575824    +          +     0.21666691620434 * GRP_NumWebPurchases4
575825    +          +    -0.02464138218078 * GRP_RFMstat2  +     0.13412544784153 *
575826    +        GRP_RFMstat3  +    -0.09645970560405 * GRP_RFMstat4
575827    +          +     0.04270814348512 * GRP_RMntFrq2  +     -0.1501520967589 *
575828    +        GRP_RMntFrq3  +     -0.1772447013278 * GRP_RMntFrq4
575829    +          +      0.1223375687576 * GRP_Recency2  +      0.1019105028487 *
575830    +        GRP_Recency3  +     0.06326170958276 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19980227701329 * GRP_AcceptedCmp52 + 0.35227413860542 * GRP_Frq2 
+ -0.08132751965568 * GRP_Frq3 + 0.06274660992037 * GRP_Frq4 + 0.14609729670665 * GRP_Income2 
+ -0.0521158725468 * GRP_Income3 + 0.29485821055626 * GRP_Income4 + 0.11491631500511 * 
GRP_Mnt2 + -0.48249282197964 * GRP_Mnt3 + -0.43275960999945 * GRP_Mnt4 + 0.23372129286866 * 
GRP_MntFishProducts2 + 0.08173006283377 * GRP_MntFishProducts3 + -0.26374451563307 * 
GRP_MntFishProducts4 + -0.05478986771486 * GRP_MntGoldProds2 + 0.15674217490538 * 
GRP_MntGoldProds3 + -0.0970693263223 * GRP_MntGoldProds4 + -0.07551339114514 * 
GRP_MntMeatProducts2 + 0.20520020022282 * GRP_MntMeatProducts3 + 0.18185271543305 * 
GRP_MntMeatProducts4 + 0.13372808101693 * GRP_MntWines2 + -0.23508613293176 * GRP_MntWines3 + 
0.03782283781196 * GRP_MntWines4 + -0.01759208575836 * GRP_NumCatalogPurchases3 + 
0.03228155996803 * GRP_NumCatalogPurchases4 + -0.16689756602171 * GRP_NumDistPurchases2 + 
0.23008084678616 * GRP_NumDistPurchases3 + 0.1020080832353 * GRP_NumDistPurchases4 + 
0.00689419482794 * GRP_NumWebPurchases2 + 0.45549724613494 * GRP_NumWebPurchases3 + 
0.21666691620434 * GRP_NumWebPurchases4 + -0.02464138218078 * GRP_RFMstat2 + 0.13412544784153 
* GRP_RFMstat3 + -0.09645970560405 * GRP_RFMstat4 + 0.04270814348512 * GRP_RMntFrq2 + 
-0.1501520967589 * GRP_RMntFrq3 + -0.1772447013278 * GRP_RMntFrq4 + 0.1223375687576 * 
GRP_Recency2 + 0.1019105028487 * GRP_Recency3 + 0.06326170958276 * GRP_Recency4 ;
575831    +   H13  =    -0.47552326597307 * GRP_AcceptedCmp52  +     0.13942347151662 *
575832    +        GRP_Frq2  +     0.15792042601114 * GRP_Frq3  +    -0.31699137546772 *
575833    +        GRP_Frq4  +     0.31623959766757 * GRP_Income2
575834    +          +     0.51675448663341 * GRP_Income3  +    -0.28386096750656 *
575835    +        GRP_Income4  +    -0.19585257598596 * GRP_Mnt2
575836    +          +     0.03528129174811 * GRP_Mnt3  +     0.16020552351069 * GRP_Mnt4
575837    +          +     0.11549870508237 * GRP_MntFishProducts2
575838    +          +    -0.02472870244462 * GRP_MntFishProducts3
575839    +          +    -0.08397818027214 * GRP_MntFishProducts4
575840    +          +    -0.15352678487636 * GRP_MntGoldProds2
575841    +          +    -0.22936969994696 * GRP_MntGoldProds3
575842    +          +    -0.14955434708754 * GRP_MntGoldProds4
575843    +          +    -0.27851745198006 * GRP_MntMeatProducts2
575844    +          +    -0.20347624413948 * GRP_MntMeatProducts3
575845    +          +     0.22612412661729 * GRP_MntMeatProducts4
575846    +          +      0.0680550338972 * GRP_MntWines2  +     0.13605728094791 *
575847    +        GRP_MntWines3  +    -0.24233826362305 * GRP_MntWines4
575848    +          +    -0.51105265438413 * GRP_NumCatalogPurchases3
575849    +          +      0.3463181885617 * GRP_NumCatalogPurchases4
575850    +          +    -0.42061003686263 * GRP_NumDistPurchases2
575851    +          +     0.05694490202182 * GRP_NumDistPurchases3
575852    +          +    -0.05589065356183 * GRP_NumDistPurchases4
575853    +          +    -0.15004779907268 * GRP_NumWebPurchases2
575854    +          +    -0.03683214810286 * GRP_NumWebPurchases3
575855    +          +    -0.14152766915751 * GRP_NumWebPurchases4
575856    +          +    -0.34448387603605 * GRP_RFMstat2  +    -0.12678315363038 *
575857    +        GRP_RFMstat3  +    -0.17785766746488 * GRP_RFMstat4
575858    +          +    -0.12269367915474 * GRP_RMntFrq2  +     0.15261716486225 *
575859    +        GRP_RMntFrq3  +    -0.14834283523731 * GRP_RMntFrq4
575860    +          +     0.41906757309616 * GRP_Recency2  +     0.11383836551208 *
575861    +        GRP_Recency3  +    -0.50873022901358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.47552326597307 * GRP_AcceptedCmp52 + 0.13942347151662 * 
GRP_Frq2 + 0.15792042601114 * GRP_Frq3 + -0.31699137546772 * GRP_Frq4 + 0.31623959766757 * 
GRP_Income2 + 0.51675448663341 * GRP_Income3 + -0.28386096750656 * GRP_Income4 + 
-0.19585257598596 * GRP_Mnt2 + 0.03528129174811 * GRP_Mnt3 + 0.16020552351069 * GRP_Mnt4 + 
0.11549870508237 * GRP_MntFishProducts2 + -0.02472870244462 * GRP_MntFishProducts3 + 
-0.08397818027214 * GRP_MntFishProducts4 + -0.15352678487636 * GRP_MntGoldProds2 + 
-0.22936969994696 * GRP_MntGoldProds3 + -0.14955434708754 * GRP_MntGoldProds4 + 
-0.27851745198006 * GRP_MntMeatProducts2 + -0.20347624413948 * GRP_MntMeatProducts3 + 
0.22612412661729 * GRP_MntMeatProducts4 + 0.0680550338972 * GRP_MntWines2 + 0.13605728094791 * 
GRP_MntWines3 + -0.24233826362305 * GRP_MntWines4 + -0.51105265438413 * 
GRP_NumCatalogPurchases3 + 0.3463181885617 * GRP_NumCatalogPurchases4 + -0.42061003686263 * 
GRP_NumDistPurchases2 + 0.05694490202182 * GRP_NumDistPurchases3 + -0.05589065356183 * 
GRP_NumDistPurchases4 + -0.15004779907268 * GRP_NumWebPurchases2 + -0.03683214810286 * 
GRP_NumWebPurchases3 + -0.14152766915751 * GRP_NumWebPurchases4 + -0.34448387603605 * 
GRP_RFMstat2 + -0.12678315363038 * GRP_RFMstat3 + -0.17785766746488 * GRP_RFMstat4 + 
-0.12269367915474 * GRP_RMntFrq2 + 0.15261716486225 * GRP_RMntFrq3 + -0.14834283523731 * 
GRP_RMntFrq4 + 0.41906757309616 * GRP_Recency2 + 0.11383836551208 * GRP_Recency3 + 
-0.50873022901358 * GRP_Recency4 ;
575862    +   H14  =     0.47487308000188 * GRP_AcceptedCmp52  +    -0.20783874293801 *
575863    +        GRP_Frq2  +     -0.2262487293265 * GRP_Frq3  +    -0.24497015722444 *
575864    +        GRP_Frq4  +    -0.41352416374349 * GRP_Income2
575865    +          +    -0.19029917786221 * GRP_Income3  +     0.44371774186743 *
575866    +        GRP_Income4  +     0.03966957052109 * GRP_Mnt2
575867    +          +     0.21041258864544 * GRP_Mnt3  +    -0.03545115071009 * GRP_Mnt4
575868    +          +     -0.3523117475999 * GRP_MntFishProducts2
575869    +          +     0.01075749365425 * GRP_MntFishProducts3
575870    +          +    -0.19220397921061 * GRP_MntFishProducts4
575871    +          +     0.24691019907326 * GRP_MntGoldProds2
575872    +          +    -0.36269131170152 * GRP_MntGoldProds3
575873    +          +    -0.07442729340208 * GRP_MntGoldProds4
575874    +          +     0.14166838567576 * GRP_MntMeatProducts2
575875    +          +     -0.0573636128895 * GRP_MntMeatProducts3
575876    +          +     0.11782684497872 * GRP_MntMeatProducts4
575877    +          +    -0.58306293735162 * GRP_MntWines2  +     -0.1332347200661 *
575878    +        GRP_MntWines3  +     -0.0491151521812 * GRP_MntWines4
575879    +          +     0.19217394838443 * GRP_NumCatalogPurchases3
575880    +          +     0.30242368378572 * GRP_NumCatalogPurchases4
575881    +          +      0.5631335040028 * GRP_NumDistPurchases2
575882    +          +      0.2833277493575 * GRP_NumDistPurchases3
575883    +          +     0.15501991757103 * GRP_NumDistPurchases4
575884    +          +     0.06522663204791 * GRP_NumWebPurchases2
575885    +          +    -0.24250508241812 * GRP_NumWebPurchases3
575886    +          +    -0.14936719392927 * GRP_NumWebPurchases4
575887    +          +     0.07538326365237 * GRP_RFMstat2  +    -0.11207708467015 *
575888    +        GRP_RFMstat3  +    -0.03495013261696 * GRP_RFMstat4
575889    +          +    -0.07948642963964 * GRP_RMntFrq2  +     -0.3740993499425 *
575890    +        GRP_RMntFrq3  +      0.1224880912483 * GRP_RMntFrq4
575891    +          +    -1.20234498415322 * GRP_Recency2  +    -0.15277267671243 *
575892    +        GRP_Recency3  +     0.17498175973385 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.47487308000188 * GRP_AcceptedCmp52 + -0.20783874293801 * 
GRP_Frq2 + -0.2262487293265 * GRP_Frq3 + -0.24497015722444 * GRP_Frq4 + -0.41352416374349 * 
GRP_Income2 + -0.19029917786221 * GRP_Income3 + 0.44371774186743 * GRP_Income4 + 
0.03966957052109 * GRP_Mnt2 + 0.21041258864544 * GRP_Mnt3 + -0.03545115071009 * GRP_Mnt4 + 
-0.3523117475999 * GRP_MntFishProducts2 + 0.01075749365425 * GRP_MntFishProducts3 + 
-0.19220397921061 * GRP_MntFishProducts4 + 0.24691019907326 * GRP_MntGoldProds2 + 
-0.36269131170152 * GRP_MntGoldProds3 + -0.07442729340208 * GRP_MntGoldProds4 + 
0.14166838567576 * GRP_MntMeatProducts2 + -0.0573636128895 * GRP_MntMeatProducts3 + 
0.11782684497872 * GRP_MntMeatProducts4 + -0.58306293735162 * GRP_MntWines2 + -0.1332347200661 
* GRP_MntWines3 + -0.0491151521812 * GRP_MntWines4 + 0.19217394838443 * 
GRP_NumCatalogPurchases3 + 0.30242368378572 * GRP_NumCatalogPurchases4 + 0.5631335040028 * 
GRP_NumDistPurchases2 + 0.2833277493575 * GRP_NumDistPurchases3 + 0.15501991757103 * 
GRP_NumDistPurchases4 + 0.06522663204791 * GRP_NumWebPurchases2 + -0.24250508241812 * 
GRP_NumWebPurchases3 + -0.14936719392927 * GRP_NumWebPurchases4 + 0.07538326365237 * 
GRP_RFMstat2 + -0.11207708467015 * GRP_RFMstat3 + -0.03495013261696 * GRP_RFMstat4 + 
-0.07948642963964 * GRP_RMntFrq2 + -0.3740993499425 * GRP_RMntFrq3 + 0.1224880912483 * 
GRP_RMntFrq4 + -1.20234498415322 * GRP_Recency2 + -0.15277267671243 * GRP_Recency3 + 
0.17498175973385 * GRP_Recency4 ;
575893    +   H15  =     0.31607756545434 * GRP_AcceptedCmp52  +    -0.39938983779344 *
575894    +        GRP_Frq2  +     0.14190381114364 * GRP_Frq3  +    -0.04654073105991 *
575895    +        GRP_Frq4  +    -0.46847099915399 * GRP_Income2
575896    +          +    -0.24521056791482 * GRP_Income3  +     0.29673900247528 *
575897    +        GRP_Income4  +    -0.24347594694596 * GRP_Mnt2
575898    +          +    -0.25470417967356 * GRP_Mnt3  +     -0.3155333752807 * GRP_Mnt4
575899    +          +    -0.16164851437662 * GRP_MntFishProducts2
575900    +          +    -0.07507872874942 * GRP_MntFishProducts3
575901    +          +     -0.0000128165366 * GRP_MntFishProducts4
575902    +          +    -0.13003975496355 * GRP_MntGoldProds2
575903    +          +     0.10076462685161 * GRP_MntGoldProds3
575904    +          +     0.06823082371801 * GRP_MntGoldProds4
575905    +          +    -0.06661203056726 * GRP_MntMeatProducts2
575906    +          +     0.21135583081997 * GRP_MntMeatProducts3
575907    +          +     0.05317467469941 * GRP_MntMeatProducts4
575908    +          +     -0.6790577471338 * GRP_MntWines2  +    -0.29030845400198 *
575909    +        GRP_MntWines3  +     0.17538455641954 * GRP_MntWines4
575910    +          +     0.27411589551701 * GRP_NumCatalogPurchases3
575911    +          +     0.33639439802576 * GRP_NumCatalogPurchases4
575912    +          +     0.37202178791302 * GRP_NumDistPurchases2
575913    +          +     0.21242089259106 * GRP_NumDistPurchases3
575914    +          +     0.01745612539369 * GRP_NumDistPurchases4
575915    +          +     0.06417261665114 * GRP_NumWebPurchases2
575916    +          +     0.34302874594069 * GRP_NumWebPurchases3
575917    +          +     0.08556934131582 * GRP_NumWebPurchases4
575918    +          +    -0.01317484038203 * GRP_RFMstat2  +    -0.26798645102872 *
575919    +        GRP_RFMstat3  +    -0.23199496411354 * GRP_RFMstat4
575920    +          +    -0.36396476479849 * GRP_RMntFrq2  +    -0.16838193614715 *
575921    +        GRP_RMntFrq3  +       0.051807632343 * GRP_RMntFrq4
575922    +          +    -0.13014582685433 * GRP_Recency2  +     0.01537566565331 *
575923    +        GRP_Recency3  +      0.1365007617785 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.31607756545434 * GRP_AcceptedCmp52 + -0.39938983779344 * 
GRP_Frq2 + 0.14190381114364 * GRP_Frq3 + -0.04654073105991 * GRP_Frq4 + -0.46847099915399 * 
GRP_Income2 + -0.24521056791482 * GRP_Income3 + 0.29673900247528 * GRP_Income4 + 
-0.24347594694596 * GRP_Mnt2 + -0.25470417967356 * GRP_Mnt3 + -0.3155333752807 * GRP_Mnt4 + 
-0.16164851437662 * GRP_MntFishProducts2 + -0.07507872874942 * GRP_MntFishProducts3 + 
-0.0000128165366 * GRP_MntFishProducts4 + -0.13003975496355 * GRP_MntGoldProds2 + 
0.10076462685161 * GRP_MntGoldProds3 + 0.06823082371801 * GRP_MntGoldProds4 + 
-0.06661203056726 * GRP_MntMeatProducts2 + 0.21135583081997 * GRP_MntMeatProducts3 + 
0.05317467469941 * GRP_MntMeatProducts4 + -0.6790577471338 * GRP_MntWines2 + -0.29030845400198 
* GRP_MntWines3 + 0.17538455641954 * GRP_MntWines4 + 0.27411589551701 * 
GRP_NumCatalogPurchases3 + 0.33639439802576 * GRP_NumCatalogPurchases4 + 0.37202178791302 * 
GRP_NumDistPurchases2 + 0.21242089259106 * GRP_NumDistPurchases3 + 0.01745612539369 * 
GRP_NumDistPurchases4 + 0.06417261665114 * GRP_NumWebPurchases2 + 0.34302874594069 * 
GRP_NumWebPurchases3 + 0.08556934131582 * GRP_NumWebPurchases4 + -0.01317484038203 * 
GRP_RFMstat2 + -0.26798645102872 * GRP_RFMstat3 + -0.23199496411354 * GRP_RFMstat4 + 
-0.36396476479849 * GRP_RMntFrq2 + -0.16838193614715 * GRP_RMntFrq3 + 0.051807632343 * 
GRP_RMntFrq4 + -0.13014582685433 * GRP_Recency2 + 0.01537566565331 * GRP_Recency3 + 
0.1365007617785 * GRP_Recency4 ;
575924    +   H11  =    -0.02804722687441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02804722687441 + H11 ;
575925    +   H12  =    -1.15173994765723 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.15173994765723 + H12 ;
575926    +   H13  =     0.30124306509106 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30124306509106 + H13 ;
575927    +   H14  =    -0.37792609262463 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.37792609262463 + H14 ;
575928    +   H15  =     0.46405557098176 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.46405557098176 + H15 ;
575929    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
575930    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
575931    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
575932    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
575933    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
575934    +END;
MPRINT(EM_DIAGRAM):   END;
575935    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
575936    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
575937    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
575938    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
575939    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
575940    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
575941    +END;
MPRINT(EM_DIAGRAM):   END;
575942    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575943    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
575944    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
575945    +
575946    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
575947    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
575948    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
575949    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
575950    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
575951    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
575952    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
575953    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
575954    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
575955    +end;
MPRINT(EM_DIAGRAM):   end;
575956    +else do;
MPRINT(EM_DIAGRAM):   else do;
575957    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
575958    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
575959    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
575960    +   end;
MPRINT(EM_DIAGRAM):   end;
575961    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
575962    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
575963    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
575964    +   end;
MPRINT(EM_DIAGRAM):   end;
575965    +   else do;
MPRINT(EM_DIAGRAM):   else do;
575966    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
575967    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
575968    +   end;
MPRINT(EM_DIAGRAM):   end;
575969    +end;
MPRINT(EM_DIAGRAM):   end;
575970    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
575971    +   P_DepVar1  =     1.14388401268032 * H11  +      0.6001876010487 * H12
575972    +          +     2.09526498410663 * H13  +    -1.84849014758118 * H14
575973    +          +    -1.09009016441951 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.14388401268032 * H11 + 0.6001876010487 * H12 + 
2.09526498410663 * H13 + -1.84849014758118 * H14 + -1.09009016441951 * H15 ;
575974    +   P_DepVar1  =    -1.61414772995986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.61414772995986 + P_DepVar1 ;
575975    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
575976    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
575977    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
575978    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
575979    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
575980    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
575981    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
575982    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
575983    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
575984    +END;
MPRINT(EM_DIAGRAM):   END;
575985    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
575986    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
575987    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
575988    +END;
MPRINT(EM_DIAGRAM):   END;
575989    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
575990    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
575991    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
575992    +END;
MPRINT(EM_DIAGRAM):   END;
575993    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
575994    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
575995    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
575996    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
575997    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
575998    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
575999    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
576000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
576001    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
576002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
576003    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
576004    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
576005    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
576006    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
576007    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
576008    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
576009    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
576010    +END;
MPRINT(EM_DIAGRAM):   END;
576011    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
576012    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
576013    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
576014    +drop
576015    +H11
576016    +H12
576017    +H13
576018    +H14
576019    +H15
576020    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
576021     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL22_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
576022     quit;
576023     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
576024     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
576025     * Neural22: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural22: Computing metadata for TRAIN data;
576026     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural22_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural22_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural22_TRAIN out=WORK.M0ELBFHU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ELBFHU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ELBFHU(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0ELBFHU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0ELBFHU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3U8_OOJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3U8_OOJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3U8_OOJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2W_W745(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3U8_OOJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3U8_OOJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3U8_OOJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3U8_OOJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M3U8_OOJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural22";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural22";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural22";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural22: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
576338     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
576339     set EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMINFO;
576340     where DATA='Neural22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural22' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
576341     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL22_EMINFO.
      WHERE (DATA='Neural22') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

576342     data EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural22_EMINFO;
576343     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
576344     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
576345     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
576349     run;
576350     data EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMINFO;
576351     set EMWS8.Neural22_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMINFO WORK.MODELTEMP_INFO;
576352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL22_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

576353     proc sort data = EMWS8.Neural22_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural22_EMINFO NOTHREADS;
576354     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
576355     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL22_EMINFO.
NOTE: The data set EMWS8.NEURAL22_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

576356     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
576357     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
576358     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

576359     proc sort data = EMWS8.Neural22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural22_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
576360     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
576361     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL22_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

576362     data EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural22_EMINFO;
576363     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
576364     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
576365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL22_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

576366     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
576367     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
576368     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
576369     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL22_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
