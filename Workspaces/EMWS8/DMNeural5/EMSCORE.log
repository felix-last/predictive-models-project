MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                15.48 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0DQWD1K "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0DQWD1K new;
MPRINT(EM_DIAGRAM):   run;
53196      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53197      *------------------------------------------------------------*;
53198      * DMNeural5: Scoring DATA data;
53199      *------------------------------------------------------------*;
53200      data EMWS8.DMNeural5_TRAIN
53201      / view=EMWS8.DMNeural5_TRAIN
53202      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_TRAIN / view=EMWS8.DMNeural5_TRAIN ;
53203      set EMWS8.Varsel_TRAIN
53204      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
53205      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas.
53206     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53207     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
53208     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53209     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
53210     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
53211     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
53211    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53212     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
53213     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
53214     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
53214    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53215     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
53215    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53216     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
53217     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
53217    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53218     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
53219     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   ;
53220     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
53221     +DROP
53222     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   ;
53223     +;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
53224     +/*-------------------------------------------------------------------------*/
53225     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
53226     +/*-------------------------------------------------------------------------*/
MPRINT(EM_DIAGRAM):   if Mnt=. then _S2_MNT = 0;
53227     +;
53228     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
53229     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
53230     +if Mnt=. then _S2_MNT = 0;
MPRINT(EM_DIAGRAM):   else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
53231     +else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
53232     +if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
53233     +else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S5_RFMSTAT = 0;
53234     +if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
53235     +else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
MPRINT(EM_DIAGRAM):   if Recency=. then _S6_RECENCY = 0;
53236     +if RFMstat=. then _S5_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
53237     +else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   ;
53238     +if Recency=. then _S6_RECENCY = 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
53239     +else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   ;
53240     +;
53241     +/*----------------------------------------------*/
53242     +* Component 1 at stage 0;
53243     +/*----------------------------------------------*/
53244     +;
53245     +_SPRIN01=
53246     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN01= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53247     +0.5374691584*_S2_MNT+
53248     +0.5080895383*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
53249     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53250     +0.3013048241*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53251     +-0.046064184*_S6_RECENCY;
53252     +/*----------------------------------------------*/
53253     +* Component 2 at stage 0;
53254     +/*----------------------------------------------*/
53255     +;
53256     +_SPRIN02=
53257     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53258     +-0.142689264*_S2_MNT+
53259     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
53260     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53261     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53262     +-0.135292247*_S6_RECENCY;
53263     +/*----------------------------------------------*/
53264     +* Component 3 at stage 0;
53265     +/*----------------------------------------------*/
53266     +;
53267     +_SPRIN03=
53268     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53269     +0.1087901318*_S2_MNT+
53270     +0.0846582314*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
53271     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53272     +-0.559752239*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53273     +0.7969423216*_S6_RECENCY;
53274     +/*----------------------------------------------*/
53275     +* Component 4 at stage 0;
53276     +/*----------------------------------------------*/
53277     +;
53278     +_SPRIN04=
53279     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN04= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53280     +-0.796009619*_S2_MNT+
53281     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
53282     +0.214935625*_S4_NUMCATALOGPURCHASES+
53283     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53284     +0.0245374038*_S6_RECENCY;
53285     +/*----------------------------------------------*/
53286     +* Component 5 at stage 0;
53287     +/*----------------------------------------------*/
53288     +;
53289     +_SPRIN05=
53290     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53291     +-0.113848017*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53292     +-0.190193757*_S3_MNTMEATPRODUCTS+
53293     +-0.122879307*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
53294     +0.7685193197*_S5_RFMSTAT+
53295     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53296     +;
53297     +/*----------------------------------------------*/
53298     +* Component 1 at stage 1;
53299     +/*----------------------------------------------*/
53300     +;
53301     +_SPRIN11=
53302     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53303     +-0.796009619*_S2_MNT+
53304     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
53305     +0.214935625*_S4_NUMCATALOGPURCHASES+
53306     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53307     +0.0245374038*_S6_RECENCY;
53308     +/*----------------------------------------------*/
53309     +* Component 2 at stage 1;
53310     +/*----------------------------------------------*/
53311     +;
53312     +_SPRIN12=
53313     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53314     +0.5374691584*_S2_MNT+
53315     +0.5080895383*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
53316     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53317     +0.3013048241*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53318     +-0.046064184*_S6_RECENCY;
53319     +/*----------------------------------------------*/
53320     +* Component 3 at stage 1;
53321     +/*----------------------------------------------*/
53322     +;
53323     +_SPRIN13=
53324     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53325     +-0.142689264*_S2_MNT+
53326     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
53327     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53328     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53329     +-0.135292247*_S6_RECENCY;
53330     +/*----------------------------------------------*/
53331     +* Component 4 at stage 1;
53332     +/*----------------------------------------------*/
53333     +;
53334     +_SPRIN14=
53335     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN14= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53336     +0.1798296437*_S2_MNT+
53337     +0.5541281961*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
53338     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53339     +0.0087823313*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53340     +0.0276437095*_S6_RECENCY;
53341     +/*----------------------------------------------*/
53342     +* Component 5 at stage 1;
53343     +/*----------------------------------------------*/
53344     +;
53345     +_SPRIN15=
53346     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN15= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53347     +0.1087901318*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53348     +0.0846582314*_S3_MNTMEATPRODUCTS+
53349     +0.1168772715*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
53350     +-0.559752239*_S5_RFMSTAT+
53351     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53352     +;
53353     +/*----------------------------------------------*/
53354     +* Component 1 at stage 2;
53355     +/*----------------------------------------------*/
53356     +;
53357     +_SPRIN21=
53358     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53359     +-0.796009619*_S2_MNT+
53360     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
53361     +0.214935625*_S4_NUMCATALOGPURCHASES+
53362     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53363     +0.0245374038*_S6_RECENCY;
53364     +/*----------------------------------------------*/
53365     +* Component 2 at stage 2;
53366     +/*----------------------------------------------*/
53367     +;
53368     +_SPRIN22=
53369     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53370     +0.1798296437*_S2_MNT+
53371     +0.5541281961*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
53372     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53373     +0.0087823313*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53374     +0.0276437095*_S6_RECENCY;
53375     +/*----------------------------------------------*/
53376     +* Component 3 at stage 2;
53377     +/*----------------------------------------------*/
53378     +;
53379     +_SPRIN23=
53380     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN23= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53381     +0.5374691584*_S2_MNT+
53382     +0.5080895383*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
53383     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53384     +0.3013048241*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53385     +-0.046064184*_S6_RECENCY;
53386     +/*----------------------------------------------*/
53387     +* Component 4 at stage 2;
53388     +/*----------------------------------------------*/
53389     +;
53390     +_SPRIN24=
53391     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53392     +-0.142689264*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53393     +-0.283353414*_S3_MNTMEATPRODUCTS+
53394     +-0.140572437*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
53395     +-0.065203098*_S5_RFMSTAT+
53396     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53397     +;
53398     +/*----------------------------------------------*/
53399     +* Component 1 at stage 3;
53400     +/*----------------------------------------------*/
53401     +;
53402     +_SPRIN31=
53403     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53404     +-0.796009619*_S2_MNT+
53405     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
53406     +0.214935625*_S4_NUMCATALOGPURCHASES+
53407     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53408     +0.0245374038*_S6_RECENCY;
53409     +/*----------------------------------------------*/
53410     +* Component 2 at stage 3;
53411     +/*----------------------------------------------*/
53412     +;
53413     +_SPRIN32=
53414     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53415     +-0.142689264*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53416     +-0.283353414*_S3_MNTMEATPRODUCTS+
53417     +-0.140572437*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
53418     +-0.065203098*_S5_RFMSTAT+
53419     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53420     +;
53421     +/*----------------------------------------------*/
53422     +* Component 1 at stage 4;
53423     +/*----------------------------------------------*/
53424     +;
53425     +_SPRIN41=
53426     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53427     +-0.142689264*_S2_MNT+
53428     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
53429     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53430     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53431     +-0.135292247*_S6_RECENCY;
53432     +/*----------------------------------------------*/
53433     +* Component 2 at stage 4;
53434     +/*----------------------------------------------*/
53435     +;
53436     +_SPRIN42=
53437     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN42= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53438     +-0.113848017*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53439     +-0.190193757*_S3_MNTMEATPRODUCTS+
53440     +-0.122879307*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
53441     +0.7685193197*_S5_RFMSTAT+
53442     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53443     +;
53444     +/*----------------------------------------------*/
53445     +* Component 1 at stage 5;
53446     +/*----------------------------------------------*/
53447     +;
53448     +_SPRIN51=
53449     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53450     +-0.113848017*_S2_MNT+
53451     +-0.190193757*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
53452     +-0.122879307*_S4_NUMCATALOGPURCHASES+
53453     +0.7685193197*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53454     +0.585739512*_S6_RECENCY;
53455     +/*----------------------------------------------*/
53456     +* Component 2 at stage 5;
53457     +/*----------------------------------------------*/
53458     +;
53459     +_SPRIN52=
53460     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53461     +-0.142689264*_S2_MNT+
53462     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
53463     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53464     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53465     +-0.135292247*_S6_RECENCY;
53466     +/*----------------------------------------------*/
53467     +* Component 3 at stage 5;
53468     +/*----------------------------------------------*/
53469     +;
53470     +_SPRIN53=
53471     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN53= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53472     +0.1087901318*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53473     +0.0846582314*_S3_MNTMEATPRODUCTS+
53474     +0.1168772715*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
53475     +-0.559752239*_S5_RFMSTAT+
53476     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53477     +;
53478     +/*----------------------------------------------*/
53479     +* Component 1 at stage 6;
53480     +/*----------------------------------------------*/
53481     +;
53482     +_SPRIN61=
53483     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN61= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53484     +-0.142689264*_S2_MNT+
53485     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
53486     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53487     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53488     +-0.135292247*_S6_RECENCY;
53489     +/*----------------------------------------------*/
53490     +* Component 2 at stage 6;
53491     +/*----------------------------------------------*/
53492     +;
53493     +_SPRIN62=
53494     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53495     +-0.113848017*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53496     +-0.190193757*_S3_MNTMEATPRODUCTS+
53497     +-0.122879307*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
53498     +0.7685193197*_S5_RFMSTAT+
53499     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53500     +;
53501     +/*----------------------------------------------*/
53502     +* Component 1 at stage 7;
53503     +/*----------------------------------------------*/
53504     +;
53505     +_SPRIN71=
53506     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN71= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53507     +-0.113848017*_S2_MNT+
53508     +-0.190193757*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
53509     +-0.122879307*_S4_NUMCATALOGPURCHASES+
53510     +0.7685193197*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53511     +0.585739512*_S6_RECENCY;
53512     +/*----------------------------------------------*/
53513     +* Component 2 at stage 7;
53514     +/*----------------------------------------------*/
53515     +;
53516     +_SPRIN72=
53517     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN72= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53518     +-0.142689264*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53519     +-0.283353414*_S3_MNTMEATPRODUCTS+
53520     +-0.140572437*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
53521     +-0.065203098*_S5_RFMSTAT+
53522     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53523     +;
53524     +/*----------------------------------------------*/
53525     +* Component 1 at stage 8;
53526     +/*----------------------------------------------*/
53527     +;
53528     +_SPRIN81=
53529     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN81= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53530     +0.1087901318*_S2_MNT+
53531     +0.0846582314*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
53532     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53533     +-0.559752239*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53534     +0.7969423216*_S6_RECENCY;
53535     +/*----------------------------------------------*/
53536     +* Component 2 at stage 8;
53537     +/*----------------------------------------------*/
53538     +;
53539     +_SPRIN82=
53540     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN82= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53541     +0.1798296437*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53542     +0.5541281961*_S3_MNTMEATPRODUCTS+
53543     +-0.808383705*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
53544     +0.0087823313*_S5_RFMSTAT+
53545     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53546     +;
53547     +/*----------------------------------------------*/
53548     +* Component 1 at stage 9;
53549     +/*----------------------------------------------*/
53550     +;
53551     +_SPRIN91=
53552     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN91= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53553     +0.1798296437*_S2_MNT+
53554     +0.5541281961*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
53555     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53556     +0.0087823313*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53557     +0.0276437095*_S6_RECENCY;
53558     +/*----------------------------------------------*/
53559     +* Component 2 at stage 9;
53560     +/*----------------------------------------------*/
53561     +;
53562     +_SPRIN92=
53563     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53564     +0.1087901318*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53565     +0.0846582314*_S3_MNTMEATPRODUCTS+
53566     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53567     +-0.559752239*_S5_RFMSTAT+
53568     +0.7969423216*_S6_RECENCY;
53569     +;
53570     +DROP
53571     +_SPRIN01
53572     +_SPRIN02
53573     +_SPRIN03
53574     +_SPRIN04
53575     +_SPRIN05
53576     +_SPRIN11
53577     +_SPRIN12
53578     +_SPRIN13
53579     +_SPRIN14
53580     +_SPRIN15
53581     +_SPRIN21
53582     +_SPRIN22
53583     +_SPRIN23
53584     +_SPRIN24
53585     +_SPRIN31
53586     +_SPRIN32
53587     +_SPRIN41
53588     +_SPRIN42
53589     +_SPRIN51
53590     +_SPRIN52
53591     +_SPRIN53
53592     +_SPRIN61
53593     +_SPRIN62
53594     +_SPRIN71
53595     +_SPRIN72
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN31 _SPRIN32 _SPRIN41 _SPRIN42 _SPRIN51 _SPRIN52 _SPRIN53 _SPRIN61 _SPRIN62 _SPRIN71 _SPRIN72 
_SPRIN81 _SPRIN82 _SPRIN91 _SPRIN92 ;
53596     +_SPRIN81
MPRINT(EM_DIAGRAM):   ;
53597     +_SPRIN82
53598     +_SPRIN91
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SIN;
53599     +_SPRIN92
53600     +;
MPRINT(EM_DIAGRAM):   ;
53601     +;
53602     +/**********************************************************/
53603     +* Selected activation function at stage 0 = SIN;
53604     +/**********************************************************/
53605     +;
53606     +_YHAT0=2.2012932637
53607     ++14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   _YHAT0=2.2012932637 +14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1))) +13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1))) +2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1))) 
+4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1))) +1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1))) ;
53608     ++13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1)))
53609     ++2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
53610     ++4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1)))
53611     ++1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
53612     +;
MPRINT(EM_DIAGRAM):   ;
53613     +/*--- Target level is binary, take a logistic link function --*/
53614     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = GAUSS;
53615     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   ;
53616     +;
53617     +/**********************************************************/
53618     +* Selected activation function at stage 1 = GAUSS;
53619     +/**********************************************************/
53620     +;
53621     +_RHAT1=-0.123866614
53622     ++0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11))
MPRINT(EM_DIAGRAM):   _RHAT1=-0.123866614 +0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11)) +0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12)) 
+0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13)) +-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14)) +-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15)) ;
53623     ++0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12))
MPRINT(EM_DIAGRAM):   ;
53624     ++0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13))
53625     ++-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = TANH;
53626     ++-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15))
53627     +;
MPRINT(EM_DIAGRAM):   ;
53628     +;
53629     +/**********************************************************/
53630     +* Selected activation function at stage 2 = TANH;
53631     +/**********************************************************/
53632     +;
53633     +_RHAT2=0.008215354
MPRINT(EM_DIAGRAM):   _RHAT2=0.008215354 +-0.16001558456505*TANH(0.2712320323826*_SPRIN21) +0.12356430469767*TANH(0.1686070475744*_SPRIN22) +-0.01390368846175*TANH(-1.31495933200985*_SPRIN23) +-0.00711588556486*TANH(0.02635498107348*_SPRIN24) ;
53634     ++-0.16001558456505*TANH(0.2712320323826*_SPRIN21)
MPRINT(EM_DIAGRAM):   ;
53635     ++0.12356430469767*TANH(0.1686070475744*_SPRIN22)
53636     ++-0.01390368846175*TANH(-1.31495933200985*_SPRIN23)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
53637     ++-0.00711588556486*TANH(0.02635498107348*_SPRIN24)
53638     +;
MPRINT(EM_DIAGRAM):   ;
53639     +;
53640     +/**********************************************************/
53641     +* Selected activation function at stage 3 = SQUARE;
53642     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT3=-0.00306658 +(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31 +(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32 ;
53643     +;
MPRINT(EM_DIAGRAM):   ;
53644     +_RHAT3=-0.00306658
53645     ++(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = COS;
53646     ++(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32
53647     +;
MPRINT(EM_DIAGRAM):   ;
53648     +;
53649     +/**********************************************************/
53650     +* Selected activation function at stage 4 = COS;
53651     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT4=0.0826256873 +-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1))) +0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1))) ;
53652     +;
MPRINT(EM_DIAGRAM):   ;
53653     +_RHAT4=0.0826256873
53654     ++-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
53655     ++0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1)))
53656     +;
MPRINT(EM_DIAGRAM):   ;
53657     +;
53658     +/**********************************************************/
53659     +* Selected activation function at stage 5 = COS;
53660     +/**********************************************************/
53661     +;
MPRINT(EM_DIAGRAM):   _RHAT5=-0.52219127 +-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1))) +0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1))) +-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1))) ;
53662     +_RHAT5=-0.52219127
MPRINT(EM_DIAGRAM):   ;
53663     ++-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1)))
53664     ++0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = GAUSS;
53665     ++-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1)))
53666     +;
MPRINT(EM_DIAGRAM):   ;
53667     +;
53668     +/**********************************************************/
53669     +* Selected activation function at stage 6 = GAUSS;
53670     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT6=0.2291041173 +-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61)) +0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62)) ;
53671     +;
MPRINT(EM_DIAGRAM):   ;
53672     +_RHAT6=0.2291041173
53673     ++-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = TANH;
53674     ++0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62))
53675     +;
MPRINT(EM_DIAGRAM):   ;
53676     +;
53677     +/**********************************************************/
53678     +* Selected activation function at stage 7 = TANH;
53679     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT7=-0.000155303 +0.08225980630599*TANH(0.09090661078805*_SPRIN71) +-0.00601524575819*TANH(1.83770197448699*_SPRIN72) ;
53680     +;
MPRINT(EM_DIAGRAM):   ;
53681     +_RHAT7=-0.000155303
53682     ++0.08225980630599*TANH(0.09090661078805*_SPRIN71)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = TANH;
53683     ++-0.00601524575819*TANH(1.83770197448699*_SPRIN72)
53684     +;
MPRINT(EM_DIAGRAM):   ;
53685     +;
53686     +/**********************************************************/
53687     +* Selected activation function at stage 8 = TANH;
53688     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT8=0.0003764288 +9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81) +0.01274328817113*TANH(3.99440936961243*_SPRIN82) ;
53689     +;
MPRINT(EM_DIAGRAM):   ;
53690     +_RHAT8=0.0003764288
53691     ++9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = SQUARE;
53692     ++0.01274328817113*TANH(3.99440936961243*_SPRIN82)
53693     +;
MPRINT(EM_DIAGRAM):   ;
53694     +;
53695     +/**********************************************************/
53696     +* Selected activation function at stage 9 = SQUARE;
53697     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT9=0.0362328144 +(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91 +(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92 ;
53698     +;
MPRINT(EM_DIAGRAM):   ;
53699     +_RHAT9=0.0362328144
53700     ++(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91
53701     ++(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92
53702     +;
53703     +;
53704     +_tmpPredict
53705     +=_YHAT0
53706     ++_RHAT1
53707     ++_RHAT2
53708     ++_RHAT3
53709     ++_RHAT4
53710     ++_RHAT5
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
53711     ++_RHAT6
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
53712     ++_RHAT7
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
53713     ++_RHAT8
53714     ++_RHAT9
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
53715     +;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
53716     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
53717     +If _tmpPredict > 1 then _tmpPredict=1;
53718     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
53719     +P_DepVar1=_tmpPredict;
53720     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
53721     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
53722     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
53723     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
53724     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   end;
53725     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   else do;
53726     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
53727     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
53728     +end;
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
53729     +else do;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
53730     +R_DepVar1 = -P_DepVar1;
53731     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   OTHERWISE;
53732     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   end;
53733     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   END;
53734     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   ;
53735     +OTHERWISE;
53736     +end;
53737     +END;
53738     +;
53739     +DROP _YHAT0
53740     +_RHAT1
53741     +_RHAT2
53742     +_RHAT3
53743     +_RHAT4
53744     +_RHAT5
53745     +_RHAT6
53746     +_RHAT7
53747     +_RHAT8
53748     +_RHAT9
53749     +_tmpPredict
53750     +_S1_ACCEPTEDCMPTOTAL
53751     +_S2_MNT
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpPredict _S1_ACCEPTEDCMPTOTAL _S2_MNT _S3_MNTMEATPRODUCTS _S4_NUMCATALOGPURCHASES _S5_RFMSTAT _S6_RECENCY ;
53752     +_S3_MNTMEATPRODUCTS
53753     +_S4_NUMCATALOGPURCHASES
53754     +_S5_RFMSTAT
53755     +_S6_RECENCY
53756     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53757      run;

NOTE: DATA STEP view saved on file EMWS8.DMNEURAL5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
53758      quit;
53759      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
53760      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53761      *------------------------------------------------------------*;
53762      * DMNeural5: Scoring VALIDATE data;
53763      *------------------------------------------------------------*;
53764      data EMWS8.DMNeural5_VALIDATE
53765      / view=EMWS8.DMNeural5_VALIDATE
53766      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_VALIDATE / view=EMWS8.DMNeural5_VALIDATE ;
53767      set EMWS8.Varsel_VALIDATE
53768      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
53769      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas.
53770     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53771     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
53772     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53773     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
53774     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
53775     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
53775    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53776     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
53777     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
53778     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
53778    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53779     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
53779    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53780     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
53781     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
53781    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53782     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
53783     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53784     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
53785     +DROP
53786     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
53787     +;
MPRINT(EM_DIAGRAM):   ;
53788     +/*-------------------------------------------------------------------------*/
53789     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
53790     +/*-------------------------------------------------------------------------*/
53791     +;
MPRINT(EM_DIAGRAM):   ;
53792     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
53793     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
53794     +if Mnt=. then _S2_MNT = 0;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S2_MNT = 0;
53795     +else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
53796     +if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
53797     +else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
53798     +if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
53799     +else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
MPRINT(EM_DIAGRAM):   else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
53800     +if RFMstat=. then _S5_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S5_RFMSTAT = 0;
53801     +else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
53802     +if Recency=. then _S6_RECENCY = 0;
MPRINT(EM_DIAGRAM):   if Recency=. then _S6_RECENCY = 0;
53803     +else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
53804     +;
MPRINT(EM_DIAGRAM):   ;
53805     +/*----------------------------------------------*/
53806     +* Component 1 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
53807     +/*----------------------------------------------*/
53808     +;
MPRINT(EM_DIAGRAM):   ;
53809     +_SPRIN01=
53810     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
53811     +0.5374691584*_S2_MNT+
53812     +0.5080895383*_S3_MNTMEATPRODUCTS+
53813     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53814     +0.3013048241*_S5_RFMSTAT+
53815     +-0.046064184*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN01= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53816     +/*----------------------------------------------*/
53817     +* Component 2 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
53818     +/*----------------------------------------------*/
53819     +;
MPRINT(EM_DIAGRAM):   ;
53820     +_SPRIN02=
53821     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53822     +-0.142689264*_S2_MNT+
53823     +-0.283353414*_S3_MNTMEATPRODUCTS+
53824     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53825     +-0.065203098*_S5_RFMSTAT+
53826     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53827     +/*----------------------------------------------*/
53828     +* Component 3 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
53829     +/*----------------------------------------------*/
53830     +;
MPRINT(EM_DIAGRAM):   ;
53831     +_SPRIN03=
53832     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
53833     +0.1087901318*_S2_MNT+
53834     +0.0846582314*_S3_MNTMEATPRODUCTS+
53835     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53836     +-0.559752239*_S5_RFMSTAT+
53837     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53838     +/*----------------------------------------------*/
53839     +* Component 4 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
53840     +/*----------------------------------------------*/
53841     +;
MPRINT(EM_DIAGRAM):   ;
53842     +_SPRIN04=
53843     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53844     +-0.796009619*_S2_MNT+
53845     +0.5578145973*_S3_MNTMEATPRODUCTS+
53846     +0.214935625*_S4_NUMCATALOGPURCHASES+
53847     +0.0306971608*_S5_RFMSTAT+
53848     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN04= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53849     +/*----------------------------------------------*/
53850     +* Component 5 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
53851     +/*----------------------------------------------*/
53852     +;
MPRINT(EM_DIAGRAM):   ;
53853     +_SPRIN05=
53854     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
53855     +-0.113848017*_S2_MNT+
53856     +-0.190193757*_S3_MNTMEATPRODUCTS+
53857     +-0.122879307*_S4_NUMCATALOGPURCHASES+
53858     +0.7685193197*_S5_RFMSTAT+
53859     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53860     +;
MPRINT(EM_DIAGRAM):   ;
53861     +/*----------------------------------------------*/
53862     +* Component 1 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
53863     +/*----------------------------------------------*/
53864     +;
MPRINT(EM_DIAGRAM):   ;
53865     +_SPRIN11=
53866     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53867     +-0.796009619*_S2_MNT+
53868     +0.5578145973*_S3_MNTMEATPRODUCTS+
53869     +0.214935625*_S4_NUMCATALOGPURCHASES+
53870     +0.0306971608*_S5_RFMSTAT+
53871     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53872     +/*----------------------------------------------*/
53873     +* Component 2 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
53874     +/*----------------------------------------------*/
53875     +;
MPRINT(EM_DIAGRAM):   ;
53876     +_SPRIN12=
53877     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
53878     +0.5374691584*_S2_MNT+
53879     +0.5080895383*_S3_MNTMEATPRODUCTS+
53880     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53881     +0.3013048241*_S5_RFMSTAT+
53882     +-0.046064184*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53883     +/*----------------------------------------------*/
53884     +* Component 3 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
53885     +/*----------------------------------------------*/
53886     +;
MPRINT(EM_DIAGRAM):   ;
53887     +_SPRIN13=
53888     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53889     +-0.142689264*_S2_MNT+
53890     +-0.283353414*_S3_MNTMEATPRODUCTS+
53891     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53892     +-0.065203098*_S5_RFMSTAT+
53893     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53894     +/*----------------------------------------------*/
53895     +* Component 4 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
53896     +/*----------------------------------------------*/
53897     +;
MPRINT(EM_DIAGRAM):   ;
53898     +_SPRIN14=
53899     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
53900     +0.1798296437*_S2_MNT+
53901     +0.5541281961*_S3_MNTMEATPRODUCTS+
53902     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53903     +0.0087823313*_S5_RFMSTAT+
53904     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN14= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53905     +/*----------------------------------------------*/
53906     +* Component 5 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
53907     +/*----------------------------------------------*/
53908     +;
MPRINT(EM_DIAGRAM):   ;
53909     +_SPRIN15=
53910     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
53911     +0.1087901318*_S2_MNT+
53912     +0.0846582314*_S3_MNTMEATPRODUCTS+
53913     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53914     +-0.559752239*_S5_RFMSTAT+
53915     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN15= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53916     +;
MPRINT(EM_DIAGRAM):   ;
53917     +/*----------------------------------------------*/
53918     +* Component 1 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
53919     +/*----------------------------------------------*/
53920     +;
MPRINT(EM_DIAGRAM):   ;
53921     +_SPRIN21=
53922     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53923     +-0.796009619*_S2_MNT+
53924     +0.5578145973*_S3_MNTMEATPRODUCTS+
53925     +0.214935625*_S4_NUMCATALOGPURCHASES+
53926     +0.0306971608*_S5_RFMSTAT+
53927     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53928     +/*----------------------------------------------*/
53929     +* Component 2 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
53930     +/*----------------------------------------------*/
53931     +;
MPRINT(EM_DIAGRAM):   ;
53932     +_SPRIN22=
53933     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
53934     +0.1798296437*_S2_MNT+
53935     +0.5541281961*_S3_MNTMEATPRODUCTS+
53936     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53937     +0.0087823313*_S5_RFMSTAT+
53938     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53939     +/*----------------------------------------------*/
53940     +* Component 3 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
53941     +/*----------------------------------------------*/
53942     +;
MPRINT(EM_DIAGRAM):   ;
53943     +_SPRIN23=
53944     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
53945     +0.5374691584*_S2_MNT+
53946     +0.5080895383*_S3_MNTMEATPRODUCTS+
53947     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53948     +0.3013048241*_S5_RFMSTAT+
53949     +-0.046064184*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN23= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53950     +/*----------------------------------------------*/
53951     +* Component 4 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
53952     +/*----------------------------------------------*/
53953     +;
MPRINT(EM_DIAGRAM):   ;
53954     +_SPRIN24=
53955     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53956     +-0.142689264*_S2_MNT+
53957     +-0.283353414*_S3_MNTMEATPRODUCTS+
53958     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53959     +-0.065203098*_S5_RFMSTAT+
53960     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53961     +;
MPRINT(EM_DIAGRAM):   ;
53962     +/*----------------------------------------------*/
53963     +* Component 1 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
53964     +/*----------------------------------------------*/
53965     +;
MPRINT(EM_DIAGRAM):   ;
53966     +_SPRIN31=
53967     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53968     +-0.796009619*_S2_MNT+
53969     +0.5578145973*_S3_MNTMEATPRODUCTS+
53970     +0.214935625*_S4_NUMCATALOGPURCHASES+
53971     +0.0306971608*_S5_RFMSTAT+
53972     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53973     +/*----------------------------------------------*/
53974     +* Component 2 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
53975     +/*----------------------------------------------*/
53976     +;
MPRINT(EM_DIAGRAM):   ;
53977     +_SPRIN32=
53978     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53979     +-0.142689264*_S2_MNT+
53980     +-0.283353414*_S3_MNTMEATPRODUCTS+
53981     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53982     +-0.065203098*_S5_RFMSTAT+
53983     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53984     +;
MPRINT(EM_DIAGRAM):   ;
53985     +/*----------------------------------------------*/
53986     +* Component 1 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
53987     +/*----------------------------------------------*/
53988     +;
MPRINT(EM_DIAGRAM):   ;
53989     +_SPRIN41=
53990     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53991     +-0.142689264*_S2_MNT+
53992     +-0.283353414*_S3_MNTMEATPRODUCTS+
53993     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53994     +-0.065203098*_S5_RFMSTAT+
53995     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53996     +/*----------------------------------------------*/
53997     +* Component 2 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
53998     +/*----------------------------------------------*/
53999     +;
MPRINT(EM_DIAGRAM):   ;
54000     +_SPRIN42=
54001     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54002     +-0.113848017*_S2_MNT+
54003     +-0.190193757*_S3_MNTMEATPRODUCTS+
54004     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54005     +0.7685193197*_S5_RFMSTAT+
54006     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN42= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54007     +;
MPRINT(EM_DIAGRAM):   ;
54008     +/*----------------------------------------------*/
54009     +* Component 1 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
54010     +/*----------------------------------------------*/
54011     +;
MPRINT(EM_DIAGRAM):   ;
54012     +_SPRIN51=
54013     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54014     +-0.113848017*_S2_MNT+
54015     +-0.190193757*_S3_MNTMEATPRODUCTS+
54016     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54017     +0.7685193197*_S5_RFMSTAT+
54018     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54019     +/*----------------------------------------------*/
54020     +* Component 2 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
54021     +/*----------------------------------------------*/
54022     +;
MPRINT(EM_DIAGRAM):   ;
54023     +_SPRIN52=
54024     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
54025     +-0.142689264*_S2_MNT+
54026     +-0.283353414*_S3_MNTMEATPRODUCTS+
54027     +-0.140572437*_S4_NUMCATALOGPURCHASES+
54028     +-0.065203098*_S5_RFMSTAT+
54029     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
54030     +/*----------------------------------------------*/
54031     +* Component 3 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
54032     +/*----------------------------------------------*/
54033     +;
MPRINT(EM_DIAGRAM):   ;
54034     +_SPRIN53=
54035     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
54036     +0.1087901318*_S2_MNT+
54037     +0.0846582314*_S3_MNTMEATPRODUCTS+
54038     +0.1168772715*_S4_NUMCATALOGPURCHASES+
54039     +-0.559752239*_S5_RFMSTAT+
54040     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN53= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
54041     +;
MPRINT(EM_DIAGRAM):   ;
54042     +/*----------------------------------------------*/
54043     +* Component 1 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
54044     +/*----------------------------------------------*/
54045     +;
MPRINT(EM_DIAGRAM):   ;
54046     +_SPRIN61=
54047     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
54048     +-0.142689264*_S2_MNT+
54049     +-0.283353414*_S3_MNTMEATPRODUCTS+
54050     +-0.140572437*_S4_NUMCATALOGPURCHASES+
54051     +-0.065203098*_S5_RFMSTAT+
54052     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN61= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
54053     +/*----------------------------------------------*/
54054     +* Component 2 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
54055     +/*----------------------------------------------*/
54056     +;
MPRINT(EM_DIAGRAM):   ;
54057     +_SPRIN62=
54058     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54059     +-0.113848017*_S2_MNT+
54060     +-0.190193757*_S3_MNTMEATPRODUCTS+
54061     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54062     +0.7685193197*_S5_RFMSTAT+
54063     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54064     +;
MPRINT(EM_DIAGRAM):   ;
54065     +/*----------------------------------------------*/
54066     +* Component 1 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
54067     +/*----------------------------------------------*/
54068     +;
MPRINT(EM_DIAGRAM):   ;
54069     +_SPRIN71=
54070     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54071     +-0.113848017*_S2_MNT+
54072     +-0.190193757*_S3_MNTMEATPRODUCTS+
54073     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54074     +0.7685193197*_S5_RFMSTAT+
54075     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN71= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54076     +/*----------------------------------------------*/
54077     +* Component 2 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
54078     +/*----------------------------------------------*/
54079     +;
MPRINT(EM_DIAGRAM):   ;
54080     +_SPRIN72=
54081     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
54082     +-0.142689264*_S2_MNT+
54083     +-0.283353414*_S3_MNTMEATPRODUCTS+
54084     +-0.140572437*_S4_NUMCATALOGPURCHASES+
54085     +-0.065203098*_S5_RFMSTAT+
54086     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN72= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
54087     +;
MPRINT(EM_DIAGRAM):   ;
54088     +/*----------------------------------------------*/
54089     +* Component 1 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
54090     +/*----------------------------------------------*/
54091     +;
MPRINT(EM_DIAGRAM):   ;
54092     +_SPRIN81=
54093     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
54094     +0.1087901318*_S2_MNT+
54095     +0.0846582314*_S3_MNTMEATPRODUCTS+
54096     +0.1168772715*_S4_NUMCATALOGPURCHASES+
54097     +-0.559752239*_S5_RFMSTAT+
54098     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN81= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
54099     +/*----------------------------------------------*/
54100     +* Component 2 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
54101     +/*----------------------------------------------*/
54102     +;
MPRINT(EM_DIAGRAM):   ;
54103     +_SPRIN82=
54104     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
54105     +0.1798296437*_S2_MNT+
54106     +0.5541281961*_S3_MNTMEATPRODUCTS+
54107     +-0.808383705*_S4_NUMCATALOGPURCHASES+
54108     +0.0087823313*_S5_RFMSTAT+
54109     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN82= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
54110     +;
MPRINT(EM_DIAGRAM):   ;
54111     +/*----------------------------------------------*/
54112     +* Component 1 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
54113     +/*----------------------------------------------*/
54114     +;
MPRINT(EM_DIAGRAM):   ;
54115     +_SPRIN91=
54116     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
54117     +0.1798296437*_S2_MNT+
54118     +0.5541281961*_S3_MNTMEATPRODUCTS+
54119     +-0.808383705*_S4_NUMCATALOGPURCHASES+
54120     +0.0087823313*_S5_RFMSTAT+
54121     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN91= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
54122     +/*----------------------------------------------*/
54123     +* Component 2 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
54124     +/*----------------------------------------------*/
54125     +;
MPRINT(EM_DIAGRAM):   ;
54126     +_SPRIN92=
54127     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
54128     +0.1087901318*_S2_MNT+
54129     +0.0846582314*_S3_MNTMEATPRODUCTS+
54130     +0.1168772715*_S4_NUMCATALOGPURCHASES+
54131     +-0.559752239*_S5_RFMSTAT+
54132     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
54133     +;
MPRINT(EM_DIAGRAM):   ;
54134     +DROP
54135     +_SPRIN01
54136     +_SPRIN02
54137     +_SPRIN03
54138     +_SPRIN04
54139     +_SPRIN05
54140     +_SPRIN11
54141     +_SPRIN12
54142     +_SPRIN13
54143     +_SPRIN14
54144     +_SPRIN15
54145     +_SPRIN21
54146     +_SPRIN22
54147     +_SPRIN23
54148     +_SPRIN24
54149     +_SPRIN31
54150     +_SPRIN32
54151     +_SPRIN41
54152     +_SPRIN42
54153     +_SPRIN51
54154     +_SPRIN52
54155     +_SPRIN53
54156     +_SPRIN61
54157     +_SPRIN62
54158     +_SPRIN71
54159     +_SPRIN72
54160     +_SPRIN81
54161     +_SPRIN82
54162     +_SPRIN91
54163     +_SPRIN92
54164     +;
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN31 _SPRIN32 _SPRIN41 _SPRIN42 _SPRIN51 _SPRIN52 _SPRIN53 _SPRIN61 _SPRIN62 _SPRIN71 _SPRIN72 
_SPRIN81 _SPRIN82 _SPRIN91 _SPRIN92 ;
54165     +;
MPRINT(EM_DIAGRAM):   ;
54166     +/**********************************************************/
54167     +* Selected activation function at stage 0 = SIN;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SIN;
54168     +/**********************************************************/
54169     +;
MPRINT(EM_DIAGRAM):   ;
54170     +_YHAT0=2.2012932637
54171     ++14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1)))
54172     ++13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1)))
54173     ++2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1)))
54174     ++4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1)))
54175     ++1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1)))
54176     +;
MPRINT(EM_DIAGRAM):   _YHAT0=2.2012932637 +14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1))) +13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1))) +2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1))) 
+4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1))) +1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1))) ;
54177     +/*--- Target level is binary, take a logistic link function --*/
54178     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
54179     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
54180     +;
MPRINT(EM_DIAGRAM):   ;
54181     +/**********************************************************/
54182     +* Selected activation function at stage 1 = GAUSS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = GAUSS;
54183     +/**********************************************************/
54184     +;
MPRINT(EM_DIAGRAM):   ;
54185     +_RHAT1=-0.123866614
54186     ++0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11))
54187     ++0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12))
54188     ++0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13))
54189     ++-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14))
54190     ++-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15))
54191     +;
MPRINT(EM_DIAGRAM):   _RHAT1=-0.123866614 +0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11)) +0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12)) 
+0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13)) +-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14)) +-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15)) ;
54192     +;
MPRINT(EM_DIAGRAM):   ;
54193     +/**********************************************************/
54194     +* Selected activation function at stage 2 = TANH;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = TANH;
54195     +/**********************************************************/
54196     +;
MPRINT(EM_DIAGRAM):   ;
54197     +_RHAT2=0.008215354
54198     ++-0.16001558456505*TANH(0.2712320323826*_SPRIN21)
54199     ++0.12356430469767*TANH(0.1686070475744*_SPRIN22)
54200     ++-0.01390368846175*TANH(-1.31495933200985*_SPRIN23)
54201     ++-0.00711588556486*TANH(0.02635498107348*_SPRIN24)
54202     +;
MPRINT(EM_DIAGRAM):   _RHAT2=0.008215354 +-0.16001558456505*TANH(0.2712320323826*_SPRIN21) +0.12356430469767*TANH(0.1686070475744*_SPRIN22) +-0.01390368846175*TANH(-1.31495933200985*_SPRIN23) +-0.00711588556486*TANH(0.02635498107348*_SPRIN24) ;
54203     +;
MPRINT(EM_DIAGRAM):   ;
54204     +/**********************************************************/
54205     +* Selected activation function at stage 3 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
54206     +/**********************************************************/
54207     +;
MPRINT(EM_DIAGRAM):   ;
54208     +_RHAT3=-0.00306658
54209     ++(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31
54210     ++(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32
54211     +;
MPRINT(EM_DIAGRAM):   _RHAT3=-0.00306658 +(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31 +(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32 ;
54212     +;
MPRINT(EM_DIAGRAM):   ;
54213     +/**********************************************************/
54214     +* Selected activation function at stage 4 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = COS;
54215     +/**********************************************************/
54216     +;
MPRINT(EM_DIAGRAM):   ;
54217     +_RHAT4=0.0826256873
54218     ++-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1)))
54219     ++0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1)))
54220     +;
MPRINT(EM_DIAGRAM):   _RHAT4=0.0826256873 +-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1))) +0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1))) ;
54221     +;
MPRINT(EM_DIAGRAM):   ;
54222     +/**********************************************************/
54223     +* Selected activation function at stage 5 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
54224     +/**********************************************************/
54225     +;
MPRINT(EM_DIAGRAM):   ;
54226     +_RHAT5=-0.52219127
54227     ++-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1)))
54228     ++0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1)))
54229     ++-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1)))
54230     +;
MPRINT(EM_DIAGRAM):   _RHAT5=-0.52219127 +-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1))) +0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1))) +-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1))) ;
54231     +;
MPRINT(EM_DIAGRAM):   ;
54232     +/**********************************************************/
54233     +* Selected activation function at stage 6 = GAUSS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = GAUSS;
54234     +/**********************************************************/
54235     +;
MPRINT(EM_DIAGRAM):   ;
54236     +_RHAT6=0.2291041173
54237     ++-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61))
54238     ++0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62))
54239     +;
MPRINT(EM_DIAGRAM):   _RHAT6=0.2291041173 +-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61)) +0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62)) ;
54240     +;
MPRINT(EM_DIAGRAM):   ;
54241     +/**********************************************************/
54242     +* Selected activation function at stage 7 = TANH;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = TANH;
54243     +/**********************************************************/
54244     +;
MPRINT(EM_DIAGRAM):   ;
54245     +_RHAT7=-0.000155303
54246     ++0.08225980630599*TANH(0.09090661078805*_SPRIN71)
54247     ++-0.00601524575819*TANH(1.83770197448699*_SPRIN72)
54248     +;
MPRINT(EM_DIAGRAM):   _RHAT7=-0.000155303 +0.08225980630599*TANH(0.09090661078805*_SPRIN71) +-0.00601524575819*TANH(1.83770197448699*_SPRIN72) ;
54249     +;
MPRINT(EM_DIAGRAM):   ;
54250     +/**********************************************************/
54251     +* Selected activation function at stage 8 = TANH;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = TANH;
54252     +/**********************************************************/
54253     +;
MPRINT(EM_DIAGRAM):   ;
54254     +_RHAT8=0.0003764288
54255     ++9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81)
54256     ++0.01274328817113*TANH(3.99440936961243*_SPRIN82)
54257     +;
MPRINT(EM_DIAGRAM):   _RHAT8=0.0003764288 +9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81) +0.01274328817113*TANH(3.99440936961243*_SPRIN82) ;
54258     +;
MPRINT(EM_DIAGRAM):   ;
54259     +/**********************************************************/
54260     +* Selected activation function at stage 9 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = SQUARE;
54261     +/**********************************************************/
54262     +;
MPRINT(EM_DIAGRAM):   ;
54263     +_RHAT9=0.0362328144
54264     ++(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91
54265     ++(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92
54266     +;
MPRINT(EM_DIAGRAM):   _RHAT9=0.0362328144 +(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91 +(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92 ;
54267     +;
MPRINT(EM_DIAGRAM):   ;
54268     +_tmpPredict
54269     +=_YHAT0
54270     ++_RHAT1
54271     ++_RHAT2
54272     ++_RHAT3
54273     ++_RHAT4
54274     ++_RHAT5
54275     ++_RHAT6
54276     ++_RHAT7
54277     ++_RHAT8
54278     ++_RHAT9
54279     +;
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
54280     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
54281     +If _tmpPredict > 1 then _tmpPredict=1;
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
54282     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
54283     +P_DepVar1=_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
54284     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
54285     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
54286     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
54287     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
54288     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
54289     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
54290     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
54291     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
54292     +end;
MPRINT(EM_DIAGRAM):   end;
54293     +else do;
MPRINT(EM_DIAGRAM):   else do;
54294     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
54295     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
54296     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
54297     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
54298     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
54299     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
54300     +end;
MPRINT(EM_DIAGRAM):   end;
54301     +END;
MPRINT(EM_DIAGRAM):   END;
54302     +;
MPRINT(EM_DIAGRAM):   ;
54303     +DROP _YHAT0
54304     +_RHAT1
54305     +_RHAT2
54306     +_RHAT3
54307     +_RHAT4
54308     +_RHAT5
54309     +_RHAT6
54310     +_RHAT7
54311     +_RHAT8
54312     +_RHAT9
54313     +_tmpPredict
54314     +_S1_ACCEPTEDCMPTOTAL
54315     +_S2_MNT
54316     +_S3_MNTMEATPRODUCTS
54317     +_S4_NUMCATALOGPURCHASES
54318     +_S5_RFMSTAT
54319     +_S6_RECENCY
54320     +;
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpPredict _S1_ACCEPTEDCMPTOTAL _S2_MNT _S3_MNTMEATPRODUCTS _S4_NUMCATALOGPURCHASES _S5_RFMSTAT _S6_RECENCY ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
54321      run;

NOTE: DATA STEP view saved on file EMWS8.DMNEURAL5_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
54322      quit;
54323      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural5_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" _DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong 
Classifications" _DISF_= "Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   label _DFE_= "Train: Degrees of Freedom for Error" _DFT_= "Train: Total Degrees of Freedom" _DFM_= "Train: Model Degrees of Freedom" _MSE_= "Train: Mean Squared Error" _RMSE_= "Train: Root Mean Squared Error" _NW_= "Train: 
Number of Weights" _FPE_ = "Train: Final Prediction Error" _RFPE_ = "Train: Root Final Prediction Error" _AIC_= "Train: Akaike's Information Criterion" _SBC_= "Train: Schwarz's Bayesian Criterion" _ERR_= "Train: Error Function" _AVERR_= "Train: Average 
Error Function";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ _ERR_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="1" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar1<1e-10 then _ERR_+(-2*(1e10*P_DepVar1-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="0" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar0<1e-10 then _ERR_+(-2*(1e10*P_DepVar0-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   _AVERR_=_ERR_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _NW_=68;
MPRINT(CALFITSTATSNOMINAL):   _DFM_=68;
MPRINT(CALFITSTATSNOMINAL):   _DFT_=_DIV_-_NOBS_;
MPRINT(CALFITSTATSNOMINAL):   _DFE_=_DFT_-_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFE_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MSE_=_ASE_ *_DFT_/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RMSE_=sqrt(_MSE_);
MPRINT(CALFITSTATSNOMINAL):   _FPE_ =_ASE_*(_DFT_+_DFM_)/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RFPE_=sqrt(_FPE_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _AIC_=_ERR_+2*_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFT_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _SBC_=_ERR_+_DFM_*log(_DFT_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural5_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" _DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong 
Classifications" _DISF_= "Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural5_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
54383      data _tmpds1_;
MPRINT(EM_DIAGRAM):    data _tmpds1_;
54384      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
54385      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
54386      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
54387      STATISTICS = 'Sum of Square Errors';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Sum of Square Errors';
54388      KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
54389      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
54390      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
54391      Label _MEAN_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _MEAN_ = "Statistic";
54392      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
54393      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
54394      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
54395      rename _MEAN_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _MEAN_ = VALUE;
54396      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._TMPDS1_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54397      data _tmpds2_;
MPRINT(EM_DIAGRAM):   data _tmpds2_;
54398      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
54399      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
54400      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
54401      STATISTICS = 'Accuracy Percent';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Accuracy Percent';
54402      KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
54403      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
54404      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
54405      Label _STDEV_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _STDEV_ = "Statistic";
54406      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
54407      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
54408      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
54409      rename _STDEV_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _STDEV_ = VALUE;
54410      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._TMPDS2_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

54411      data EMWS8.DMNeural5_PLOTSTAGE;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_PLOTSTAGE;
54412      set _tmpds1_ _tmpds2_;
MPRINT(EM_DIAGRAM):   set _tmpds1_ _tmpds2_;
54413      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 80 observations read from the data set WORK._TMPDS1_.
NOTE: There were 80 observations read from the data set WORK._TMPDS2_.
NOTE: The data set EMWS8.DMNEURAL5_PLOTSTAGE has 160 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
54414      *------------------------------------------------------------*;
54415      * DMNeural5: Computing metadata for TRAIN data;
54416      *------------------------------------------------------------*;

NOTE: View EMWS8.DMNEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.DMNeural5_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.DMNeural5_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.DMNeural5_TRAIN out=WORK.M0YRM02E noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YRM02E;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YRM02E(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YRM02E;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YRM02E;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1BRYLZ0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35POSKI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "DMNeural5";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "DMNeural5";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
54728      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
54729      set EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMINFO;
54730      where DATA='DMNeural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='DMNeural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
54731      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
      WHERE (DATA='DMNeural5') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54732      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMINFO;
54733      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
54734      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
54735      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
54739      run;
54740      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMINFO;
54741      set EMWS8.DMNeural5_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMINFO WORK.MODELTEMP_INFO;
54742      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54743      proc sort data = EMWS8.DMNeural5_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.DMNeural5_EMINFO NOTHREADS;
54744      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54745      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54746      proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
54747      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54748      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54749      proc sort data = EMWS8.DMNeural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.DMNeural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
54750      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54751      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

54752      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMINFO;
54753      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
54754      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54755      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

54756      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
54757      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
54758      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
54759      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.DMNEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.DMNEURAL5_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
