MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                15.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2Q59ODO "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2Q59ODO new;
MPRINT(EM_DIAGRAM):   run;
31935      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
31936      *------------------------------------------------------------*;
31937      * DMNeural5: Scoring DATA data;
31938      *------------------------------------------------------------*;
31939      data EMWS8.DMNeural5_TRAIN
31940      / view=EMWS8.DMNeural5_TRAIN
31941      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_TRAIN / view=EMWS8.DMNeural5_TRAIN ;
31942      set EMWS8.Varsel_TRAIN
31943      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
31944      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas.
31945     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
31946     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
31947     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
31948     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
31949     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
31950     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
31950    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
31951     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
31952     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
31953     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
31953    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
31954     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
31954    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
31955     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
31956     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
31956    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
31957     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
31958     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   ;
31959     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
31960     +DROP
31961     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   ;
31962     +;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
31963     +/*-------------------------------------------------------------------------*/
31964     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
31965     +/*-------------------------------------------------------------------------*/
MPRINT(EM_DIAGRAM):   if Income=. then _S2_INCOME = 0;
31966     +;
31967     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   else _S2_INCOME=(Income-51962.545914069)/20878.2658128313;
31968     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S3_MNT = 0;
31969     +if Income=. then _S2_INCOME = 0;
MPRINT(EM_DIAGRAM):   else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
31970     +else _S2_INCOME=(Income-51962.545914069)/20878.2658128313;
MPRINT(EM_DIAGRAM):   if NumDistPurchases=. then _S4_NUMDISTPURCHASES = 0;
31971     +if Mnt=. then _S3_MNT = 0;
MPRINT(EM_DIAGRAM):   else _S4_NUMDISTPURCHASES=(NumDistPurchases-6.73504633529907)/4.60209117827878;
31972     +else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S5_RFMSTAT = 0;
31973     +if NumDistPurchases=. then _S4_NUMDISTPURCHASES = 0;
MPRINT(EM_DIAGRAM):   else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
31974     +else _S4_NUMDISTPURCHASES=(NumDistPurchases-6.73504633529907)/4.60209117827878;
MPRINT(EM_DIAGRAM):   if RMntFrq=. then _S6_RMNTFRQ = 0;
31975     +if RFMstat=. then _S5_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   else _S6_RMNTFRQ=(RMntFrq-37.8039241814599)/30.0642993170191;
31976     +else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   ;
31977     +if RMntFrq=. then _S6_RMNTFRQ = 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
31978     +else _S6_RMNTFRQ=(RMntFrq-37.8039241814599)/30.0642993170191;
MPRINT(EM_DIAGRAM):   ;
31979     +;
31980     +/*----------------------------------------------*/
31981     +* Component 1 at stage 0;
31982     +/*----------------------------------------------*/
31983     +;
31984     +_SPRIN01=
31985     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN01= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
31986     +-0.188835475*_S2_INCOME+
31987     +-0.156406342*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
31988     +-0.140654415*_S4_NUMDISTPURCHASES+
31989     +0.2445164966*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
31990     +-0.2046748*_S6_RMNTFRQ;
31991     +/*----------------------------------------------*/
31992     +* Component 2 at stage 0;
31993     +/*----------------------------------------------*/
31994     +;
31995     +_SPRIN02=
31996     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
31997     +0.4590524476*_S2_INCOME+
31998     +0.4946652679*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
31999     +0.438938369*_S4_NUMDISTPURCHASES+
32000     +0.2404822302*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32001     +0.4591931838*_S6_RMNTFRQ;
32002     +/*----------------------------------------------*/
32003     +* Component 3 at stage 0;
32004     +/*----------------------------------------------*/
32005     +;
32006     +_SPRIN03=
32007     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32008     +0.0112843223*_S2_INCOME+
32009     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
32010     +0.2541728271*_S4_NUMDISTPURCHASES+
32011     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32012     +0.5623896823*_S6_RMNTFRQ;
32013     +/*----------------------------------------------*/
32014     +* Component 4 at stage 0;
32015     +/*----------------------------------------------*/
32016     +;
32017     +_SPRIN04=
32018     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN04= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32019     +-0.09192664*_S2_INCOME+
32020     +-0.060640599*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
32021     +-0.054327938*_S4_NUMDISTPURCHASES+
32022     +0.9383364806*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32023     +-0.08666173*_S6_RMNTFRQ;
32024     +/*----------------------------------------------*/
32025     +* Component 5 at stage 0;
32026     +/*----------------------------------------------*/
32027     +;
32028     +_SPRIN05=
32029     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32030     +0.8551360682*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32031     +-0.269952828*_S3_MNT+
32032     +-0.380017014*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
32033     +0.0283185455*_S5_RFMSTAT+
32034     +-0.224609088*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32035     +;
32036     +/*----------------------------------------------*/
32037     +* Component 1 at stage 1;
32038     +/*----------------------------------------------*/
32039     +;
32040     +_SPRIN11=
32041     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32042     +0.0112843223*_S2_INCOME+
32043     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
32044     +0.2541728271*_S4_NUMDISTPURCHASES+
32045     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32046     +0.5623896823*_S6_RMNTFRQ;
32047     +/*----------------------------------------------*/
32048     +* Component 2 at stage 1;
32049     +/*----------------------------------------------*/
32050     +;
32051     +_SPRIN12=
32052     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32053     +-0.188835475*_S2_INCOME+
32054     +-0.156406342*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
32055     +-0.140654415*_S4_NUMDISTPURCHASES+
32056     +0.2445164966*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32057     +-0.2046748*_S6_RMNTFRQ;
32058     +/*----------------------------------------------*/
32059     +* Component 3 at stage 1;
32060     +/*----------------------------------------------*/
32061     +;
32062     +_SPRIN13=
32063     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN13= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32064     +-0.09192664*_S2_INCOME+
32065     +-0.060640599*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
32066     +-0.054327938*_S4_NUMDISTPURCHASES+
32067     +0.9383364806*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32068     +-0.08666173*_S6_RMNTFRQ;
32069     +/*----------------------------------------------*/
32070     +* Component 4 at stage 1;
32071     +/*----------------------------------------------*/
32072     +;
32073     +_SPRIN14=
32074     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN14= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32075     +0.8551360682*_S2_INCOME+
32076     +-0.269952828*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
32077     +-0.380017014*_S4_NUMDISTPURCHASES+
32078     +0.0283185455*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32079     +-0.224609088*_S6_RMNTFRQ;
32080     +/*----------------------------------------------*/
32081     +* Component 5 at stage 1;
32082     +/*----------------------------------------------*/
32083     +;
32084     +_SPRIN15=
32085     +-0.023137807*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN15= -0.023137807*_S1_ACCEPTEDCMPTOTAL+ 0.1173732321*_S2_INCOME+ -0.191458751*_S3_MNT+ 0.7586706544*_S4_NUMDISTPURCHASES+ -0.021032306*_S5_RFMSTAT+ -0.610743967*_S6_RMNTFRQ;
32086     +0.1173732321*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32087     +-0.191458751*_S3_MNT+
32088     +0.7586706544*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
32089     +-0.021032306*_S5_RFMSTAT+
32090     +-0.610743967*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32091     +;
32092     +/*----------------------------------------------*/
32093     +* Component 1 at stage 2;
32094     +/*----------------------------------------------*/
32095     +;
32096     +_SPRIN21=
32097     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32098     +0.0112843223*_S2_INCOME+
32099     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
32100     +0.2541728271*_S4_NUMDISTPURCHASES+
32101     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32102     +0.5623896823*_S6_RMNTFRQ;
32103     +/*----------------------------------------------*/
32104     +* Component 2 at stage 2;
32105     +/*----------------------------------------------*/
32106     +;
32107     +_SPRIN22=
32108     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32109     +-0.188835475*_S2_INCOME+
32110     +-0.156406342*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
32111     +-0.140654415*_S4_NUMDISTPURCHASES+
32112     +0.2445164966*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32113     +-0.2046748*_S6_RMNTFRQ;
32114     +/*----------------------------------------------*/
32115     +* Component 3 at stage 2;
32116     +/*----------------------------------------------*/
32117     +;
32118     +_SPRIN23=
32119     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN23= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32120     +0.8551360682*_S2_INCOME+
32121     +-0.269952828*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
32122     +-0.380017014*_S4_NUMDISTPURCHASES+
32123     +0.0283185455*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32124     +-0.224609088*_S6_RMNTFRQ;
32125     +/*----------------------------------------------*/
32126     +* Component 4 at stage 2;
32127     +/*----------------------------------------------*/
32128     +;
32129     +_SPRIN24=
32130     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN24= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32131     +-0.09192664*_S2_INCOME+
32132     +-0.060640599*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 2;
32133     +-0.054327938*_S4_NUMDISTPURCHASES+
32134     +0.9383364806*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32135     +-0.08666173*_S6_RMNTFRQ;
32136     +/*----------------------------------------------*/
32137     +* Component 5 at stage 2;
32138     +/*----------------------------------------------*/
32139     +;
32140     +_SPRIN25=
32141     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN25= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32142     +0.4590524476*_S2_INCOME+
32143     +0.4946652679*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 6 at stage 2;
32144     +0.438938369*_S4_NUMDISTPURCHASES+
32145     +0.2404822302*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32146     +0.4591931838*_S6_RMNTFRQ;
32147     +/*----------------------------------------------*/
32148     +* Component 6 at stage 2;
32149     +/*----------------------------------------------*/
32150     +;
32151     +_SPRIN26=
32152     +-0.023137807*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN26= -0.023137807*_S1_ACCEPTEDCMPTOTAL+ 0.1173732321*_S2_INCOME+ -0.191458751*_S3_MNT+ 0.7586706544*_S4_NUMDISTPURCHASES+ -0.021032306*_S5_RFMSTAT+ -0.610743967*_S6_RMNTFRQ;
32153     +0.1173732321*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32154     +-0.191458751*_S3_MNT+
32155     +0.7586706544*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
32156     +-0.021032306*_S5_RFMSTAT+
32157     +-0.610743967*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32158     +;
32159     +/*----------------------------------------------*/
32160     +* Component 1 at stage 3;
32161     +/*----------------------------------------------*/
32162     +;
32163     +_SPRIN31=
32164     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32165     +0.0112843223*_S2_INCOME+
32166     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
32167     +0.2541728271*_S4_NUMDISTPURCHASES+
32168     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32169     +0.5623896823*_S6_RMNTFRQ;
32170     +/*----------------------------------------------*/
32171     +* Component 2 at stage 3;
32172     +/*----------------------------------------------*/
32173     +;
32174     +_SPRIN32=
32175     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32176     +-0.188835475*_S2_INCOME+
32177     +-0.156406342*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 3;
32178     +-0.140654415*_S4_NUMDISTPURCHASES+
32179     +0.2445164966*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32180     +-0.2046748*_S6_RMNTFRQ;
32181     +/*----------------------------------------------*/
32182     +* Component 3 at stage 3;
32183     +/*----------------------------------------------*/
32184     +;
32185     +_SPRIN33=
32186     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN33= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32187     +0.8551360682*_S2_INCOME+
32188     +-0.269952828*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 3;
32189     +-0.380017014*_S4_NUMDISTPURCHASES+
32190     +0.0283185455*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32191     +-0.224609088*_S6_RMNTFRQ;
32192     +/*----------------------------------------------*/
32193     +* Component 4 at stage 3;
32194     +/*----------------------------------------------*/
32195     +;
32196     +_SPRIN34=
32197     +-0.023137807*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN34= -0.023137807*_S1_ACCEPTEDCMPTOTAL+ 0.1173732321*_S2_INCOME+ -0.191458751*_S3_MNT+ 0.7586706544*_S4_NUMDISTPURCHASES+ -0.021032306*_S5_RFMSTAT+ -0.610743967*_S6_RMNTFRQ;
32198     +0.1173732321*_S2_INCOME+
32199     +-0.191458751*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 3;
32200     +0.7586706544*_S4_NUMDISTPURCHASES+
32201     +-0.021032306*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32202     +-0.610743967*_S6_RMNTFRQ;
32203     +/*----------------------------------------------*/
32204     +* Component 5 at stage 3;
32205     +/*----------------------------------------------*/
32206     +;
32207     +_SPRIN35=
32208     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN35= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32209     +0.4590524476*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32210     +0.4946652679*_S3_MNT+
32211     +0.438938369*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
32212     +0.2404822302*_S5_RFMSTAT+
32213     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32214     +;
32215     +/*----------------------------------------------*/
32216     +* Component 1 at stage 4;
32217     +/*----------------------------------------------*/
32218     +;
32219     +_SPRIN41=
32220     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32221     +0.0112843223*_S2_INCOME+
32222     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
32223     +0.2541728271*_S4_NUMDISTPURCHASES+
32224     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32225     +0.5623896823*_S6_RMNTFRQ;
32226     +/*----------------------------------------------*/
32227     +* Component 2 at stage 4;
32228     +/*----------------------------------------------*/
32229     +;
32230     +_SPRIN42=
32231     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN42= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32232     +-0.09192664*_S2_INCOME+
32233     +-0.060640599*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 4;
32234     +-0.054327938*_S4_NUMDISTPURCHASES+
32235     +0.9383364806*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32236     +-0.08666173*_S6_RMNTFRQ;
32237     +/*----------------------------------------------*/
32238     +* Component 3 at stage 4;
32239     +/*----------------------------------------------*/
32240     +;
32241     +_SPRIN43=
32242     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN43= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32243     +0.4590524476*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32244     +0.4946652679*_S3_MNT+
32245     +0.438938369*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
32246     +0.2404822302*_S5_RFMSTAT+
32247     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32248     +;
32249     +/*----------------------------------------------*/
32250     +* Component 1 at stage 5;
32251     +/*----------------------------------------------*/
32252     +;
32253     +_SPRIN51=
32254     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32255     +0.0112843223*_S2_INCOME+
32256     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
32257     +0.2541728271*_S4_NUMDISTPURCHASES+
32258     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32259     +0.5623896823*_S6_RMNTFRQ;
32260     +/*----------------------------------------------*/
32261     +* Component 2 at stage 5;
32262     +/*----------------------------------------------*/
32263     +;
32264     +_SPRIN52=
32265     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32266     +0.4590524476*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32267     +0.4946652679*_S3_MNT+
32268     +0.438938369*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
32269     +0.2404822302*_S5_RFMSTAT+
32270     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32271     +;
32272     +/*----------------------------------------------*/
32273     +* Component 1 at stage 6;
32274     +/*----------------------------------------------*/
32275     +;
32276     +_SPRIN61=
32277     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN61= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32278     +0.0112843223*_S2_INCOME+
32279     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
32280     +0.2541728271*_S4_NUMDISTPURCHASES+
32281     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32282     +0.5623896823*_S6_RMNTFRQ;
32283     +/*----------------------------------------------*/
32284     +* Component 2 at stage 6;
32285     +/*----------------------------------------------*/
32286     +;
32287     +_SPRIN62=
32288     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32289     +0.4590524476*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32290     +0.4946652679*_S3_MNT+
32291     +0.438938369*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
32292     +0.2404822302*_S5_RFMSTAT+
32293     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32294     +;
32295     +/*----------------------------------------------*/
32296     +* Component 1 at stage 7;
32297     +/*----------------------------------------------*/
32298     +;
32299     +_SPRIN71=
32300     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN71= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32301     +0.0112843223*_S2_INCOME+
32302     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
32303     +0.2541728271*_S4_NUMDISTPURCHASES+
32304     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32305     +0.5623896823*_S6_RMNTFRQ;
32306     +/*----------------------------------------------*/
32307     +* Component 2 at stage 7;
32308     +/*----------------------------------------------*/
32309     +;
32310     +_SPRIN72=
32311     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN72= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32312     +-0.09192664*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32313     +-0.060640599*_S3_MNT+
32314     +-0.054327938*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
32315     +0.9383364806*_S5_RFMSTAT+
32316     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32317     +;
32318     +/*----------------------------------------------*/
32319     +* Component 1 at stage 8;
32320     +/*----------------------------------------------*/
32321     +;
32322     +_SPRIN81=
32323     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN81= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32324     +-0.09192664*_S2_INCOME+
32325     +-0.060640599*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
32326     +-0.054327938*_S4_NUMDISTPURCHASES+
32327     +0.9383364806*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32328     +-0.08666173*_S6_RMNTFRQ;
32329     +/*----------------------------------------------*/
32330     +* Component 2 at stage 8;
32331     +/*----------------------------------------------*/
32332     +;
32333     +_SPRIN82=
32334     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN82= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32335     +0.0112843223*_S2_INCOME+
32336     +-0.785897617*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 8;
32337     +0.2541728271*_S4_NUMDISTPURCHASES+
32338     +0.0256969066*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32339     +0.5623896823*_S6_RMNTFRQ;
32340     +/*----------------------------------------------*/
32341     +* Component 3 at stage 8;
32342     +/*----------------------------------------------*/
32343     +;
32344     +_SPRIN83=
32345     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN83= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32346     +-0.188835475*_S2_INCOME+
32347     +-0.156406342*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 8;
32348     +-0.140654415*_S4_NUMDISTPURCHASES+
32349     +0.2445164966*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32350     +-0.2046748*_S6_RMNTFRQ;
32351     +/*----------------------------------------------*/
32352     +* Component 4 at stage 8;
32353     +/*----------------------------------------------*/
32354     +;
32355     +_SPRIN84=
32356     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN84= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32357     +0.4590524476*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32358     +0.4946652679*_S3_MNT+
32359     +0.438938369*_S4_NUMDISTPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
32360     +0.2404822302*_S5_RFMSTAT+
32361     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   ;
32362     +;
32363     +/*----------------------------------------------*/
32364     +* Component 1 at stage 9;
32365     +/*----------------------------------------------*/
32366     +;
32367     +_SPRIN91=
32368     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN91= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32369     +-0.09192664*_S2_INCOME+
32370     +-0.060640599*_S3_MNT+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
32371     +-0.054327938*_S4_NUMDISTPURCHASES+
32372     +0.9383364806*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
32373     +-0.08666173*_S6_RMNTFRQ;
32374     +/*----------------------------------------------*/
32375     +* Component 2 at stage 9;
32376     +/*----------------------------------------------*/
32377     +;
32378     +_SPRIN92=
32379     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32380     +0.4590524476*_S2_INCOME+
MPRINT(EM_DIAGRAM):   ;
32381     +0.4946652679*_S3_MNT+
32382     +0.438938369*_S4_NUMDISTPURCHASES+
32383     +0.2404822302*_S5_RFMSTAT+
32384     +0.4591931838*_S6_RMNTFRQ;
32385     +;
32386     +DROP
32387     +_SPRIN01
32388     +_SPRIN02
32389     +_SPRIN03
32390     +_SPRIN04
32391     +_SPRIN05
32392     +_SPRIN11
32393     +_SPRIN12
32394     +_SPRIN13
32395     +_SPRIN14
32396     +_SPRIN15
32397     +_SPRIN21
32398     +_SPRIN22
32399     +_SPRIN23
32400     +_SPRIN24
32401     +_SPRIN25
32402     +_SPRIN26
32403     +_SPRIN31
32404     +_SPRIN32
32405     +_SPRIN33
32406     +_SPRIN34
32407     +_SPRIN35
32408     +_SPRIN41
32409     +_SPRIN42
32410     +_SPRIN43
32411     +_SPRIN51
32412     +_SPRIN52
32413     +_SPRIN61
32414     +_SPRIN62
32415     +_SPRIN71
32416     +_SPRIN72
32417     +_SPRIN81
32418     +_SPRIN82
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN25 _SPRIN26 _SPRIN31 _SPRIN32 _SPRIN33 _SPRIN34 _SPRIN35 _SPRIN41 _SPRIN42 _SPRIN43 _SPRIN51 
_SPRIN52 _SPRIN61 _SPRIN62 _SPRIN71 _SPRIN72 _SPRIN81 _SPRIN82 _SPRIN83 _SPRIN84 _SPRIN91 _SPRIN92 ;
32419     +_SPRIN83
MPRINT(EM_DIAGRAM):   ;
32420     +_SPRIN84
32421     +_SPRIN91
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = LOGIST;
32422     +_SPRIN92
32423     +;
MPRINT(EM_DIAGRAM):   ;
32424     +;
32425     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _YHAT0=-3.790351337 ;
32426     +* Selected activation function at stage 0 = LOGIST;
32427     +/**********************************************************/
MPRINT(EM_DIAGRAM):   if -(-78.7580216583561*_SPRIN01) <= 0 then _tmpLogit=1/(1+exp(-(-78.7580216583561*_SPRIN01)));
32428     +;
32429     +_YHAT0=-3.790351337
32430     +;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-78.7580216583561*_SPRIN01)) /(1+exp((-78.7580216583561*_SPRIN01)));
32431     +if -(-78.7580216583561*_SPRIN01) <= 0
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+1.2125160145*_tmpLogit;
32432     +then _tmpLogit=1/(1+exp(-(-78.7580216583561*_SPRIN01)));
32433     +else _tmpLogit=exp((-78.7580216583561*_SPRIN01))
MPRINT(EM_DIAGRAM):   if -(-0.20085109739778*_SPRIN02) <= 0 then _tmpLogit=1/(1+exp(-(-0.20085109739778*_SPRIN02)));
32434     +/(1+exp((-78.7580216583561*_SPRIN01)));
32435     +_YHAT0=_YHAT0+1.2125160145*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.20085109739778*_SPRIN02)) /(1+exp((-0.20085109739778*_SPRIN02)));
32436     +if -(-0.20085109739778*_SPRIN02) <= 0
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+14.422044995*_tmpLogit;
32437     +then _tmpLogit=1/(1+exp(-(-0.20085109739778*_SPRIN02)));
32438     +else _tmpLogit=exp((-0.20085109739778*_SPRIN02))
MPRINT(EM_DIAGRAM):   if -(-33.1383346450376*_SPRIN03) <= 0 then _tmpLogit=1/(1+exp(-(-33.1383346450376*_SPRIN03)));
32439     +/(1+exp((-0.20085109739778*_SPRIN02)));
32440     +_YHAT0=_YHAT0+14.422044995*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-33.1383346450376*_SPRIN03)) /(1+exp((-33.1383346450376*_SPRIN03)));
32441     +if -(-33.1383346450376*_SPRIN03) <= 0
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+-0.363107377*_tmpLogit;
32442     +then _tmpLogit=1/(1+exp(-(-33.1383346450376*_SPRIN03)));
32443     +else _tmpLogit=exp((-33.1383346450376*_SPRIN03))
MPRINT(EM_DIAGRAM):   if -(7.59906937007084*_SPRIN04) <= 0 then _tmpLogit=1/(1+exp(-(7.59906937007084*_SPRIN04)));
32444     +/(1+exp((-33.1383346450376*_SPRIN03)));
32445     +_YHAT0=_YHAT0+-0.363107377*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((7.59906937007084*_SPRIN04)) /(1+exp((7.59906937007084*_SPRIN04)));
32446     +if -(7.59906937007084*_SPRIN04) <= 0
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+0.039150692*_tmpLogit;
32447     +then _tmpLogit=1/(1+exp(-(7.59906937007084*_SPRIN04)));
32448     +else _tmpLogit=exp((7.59906937007084*_SPRIN04))
MPRINT(EM_DIAGRAM):   if -(0.85210915397767*_SPRIN05) <= 0 then _tmpLogit=1/(1+exp(-(0.85210915397767*_SPRIN05)));
32449     +/(1+exp((7.59906937007084*_SPRIN04)));
32450     +_YHAT0=_YHAT0+0.039150692*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.85210915397767*_SPRIN05)) /(1+exp((0.85210915397767*_SPRIN05)));
32451     +if -(0.85210915397767*_SPRIN05) <= 0
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+-1.715086997*_tmpLogit;
32452     +then _tmpLogit=1/(1+exp(-(0.85210915397767*_SPRIN05)));
MPRINT(EM_DIAGRAM):   ;
32453     +else _tmpLogit=exp((0.85210915397767*_SPRIN05))
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
32454     +/(1+exp((0.85210915397767*_SPRIN05)));
32455     +_YHAT0=_YHAT0+-1.715086997*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
32456     +;
MPRINT(EM_DIAGRAM):   ;
32457     +/*--- Target level is binary, take a logistic link function --*/
32458     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = LOGIST;
32459     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   ;
32460     +;
32461     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT1=0.0251563404 ;
32462     +* Selected activation function at stage 1 = LOGIST;
32463     +/**********************************************************/
MPRINT(EM_DIAGRAM):   if -(-3.43716780937551*_SPRIN11) <= 0 then _tmpLogit=1/(1+exp(-(-3.43716780937551*_SPRIN11)));
32464     +;
32465     +_RHAT1=0.0251563404
32466     +;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-3.43716780937551*_SPRIN11)) /(1+exp((-3.43716780937551*_SPRIN11)));
32467     +if -(-3.43716780937551*_SPRIN11) <= 0
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+0.1592016602*_tmpLogit;
32468     +then _tmpLogit=1/(1+exp(-(-3.43716780937551*_SPRIN11)));
32469     +else _tmpLogit=exp((-3.43716780937551*_SPRIN11))
MPRINT(EM_DIAGRAM):   if -(0.21416847077854*_SPRIN12) <= 0 then _tmpLogit=1/(1+exp(-(0.21416847077854*_SPRIN12)));
32470     +/(1+exp((-3.43716780937551*_SPRIN11)));
32471     +_RHAT1=_RHAT1+0.1592016602*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.21416847077854*_SPRIN12)) /(1+exp((0.21416847077854*_SPRIN12)));
32472     +if -(0.21416847077854*_SPRIN12) <= 0
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+-0.605943094*_tmpLogit;
32473     +then _tmpLogit=1/(1+exp(-(0.21416847077854*_SPRIN12)));
32474     +else _tmpLogit=exp((0.21416847077854*_SPRIN12))
MPRINT(EM_DIAGRAM):   if -(1.64883929554916*_SPRIN13) <= 0 then _tmpLogit=1/(1+exp(-(1.64883929554916*_SPRIN13)));
32475     +/(1+exp((0.21416847077854*_SPRIN12)));
32476     +_RHAT1=_RHAT1+-0.605943094*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((1.64883929554916*_SPRIN13)) /(1+exp((1.64883929554916*_SPRIN13)));
32477     +if -(1.64883929554916*_SPRIN13) <= 0
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+-0.143628868*_tmpLogit;
32478     +then _tmpLogit=1/(1+exp(-(1.64883929554916*_SPRIN13)));
32479     +else _tmpLogit=exp((1.64883929554916*_SPRIN13))
MPRINT(EM_DIAGRAM):   if -(0.72304520869261*_SPRIN14) <= 0 then _tmpLogit=1/(1+exp(-(0.72304520869261*_SPRIN14)));
32480     +/(1+exp((1.64883929554916*_SPRIN13)));
32481     +_RHAT1=_RHAT1+-0.143628868*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.72304520869261*_SPRIN14)) /(1+exp((0.72304520869261*_SPRIN14)));
32482     +if -(0.72304520869261*_SPRIN14) <= 0
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+0.1072317513*_tmpLogit;
32483     +then _tmpLogit=1/(1+exp(-(0.72304520869261*_SPRIN14)));
32484     +else _tmpLogit=exp((0.72304520869261*_SPRIN14))
MPRINT(EM_DIAGRAM):   if -(-0.31634081743659*_SPRIN15) <= 0 then _tmpLogit=1/(1+exp(-(-0.31634081743659*_SPRIN15)));
32485     +/(1+exp((0.72304520869261*_SPRIN14)));
32486     +_RHAT1=_RHAT1+0.1072317513*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.31634081743659*_SPRIN15)) /(1+exp((-0.31634081743659*_SPRIN15)));
32487     +if -(-0.31634081743659*_SPRIN15) <= 0
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+0.3040322724*_tmpLogit;
32488     +then _tmpLogit=1/(1+exp(-(-0.31634081743659*_SPRIN15)));
MPRINT(EM_DIAGRAM):   ;
32489     +else _tmpLogit=exp((-0.31634081743659*_SPRIN15))
MPRINT(EM_DIAGRAM):   ;
32490     +/(1+exp((-0.31634081743659*_SPRIN15)));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = TANH;
32491     +_RHAT1=_RHAT1+0.3040322724*_tmpLogit;
32492     +;
MPRINT(EM_DIAGRAM):   ;
32493     +;
32494     +/**********************************************************/
32495     +* Selected activation function at stage 2 = TANH;
32496     +/**********************************************************/
32497     +;
32498     +_RHAT2=0.0037368744
32499     ++0.24509185564498*TANH(-0.22766591063218*_SPRIN21)
32500     ++-0.12226104493481*TANH(0.11844355916085*_SPRIN22)
MPRINT(EM_DIAGRAM):   _RHAT2=0.0037368744 +0.24509185564498*TANH(-0.22766591063218*_SPRIN21) +-0.12226104493481*TANH(0.11844355916085*_SPRIN22) +0.22736439254794*TANH(0.05489227554239*_SPRIN23) +0.05254666351477*TANH(-0.78180525890618*_SPRIN24) 
+0.07483544124088*TANH(-0.12431837995063*_SPRIN25) +-0.01686883514205*TANH(0.39709097344802*_SPRIN26) ;
32501     ++0.22736439254794*TANH(0.05489227554239*_SPRIN23)
MPRINT(EM_DIAGRAM):   ;
32502     ++0.05254666351477*TANH(-0.78180525890618*_SPRIN24)
32503     ++0.07483544124088*TANH(-0.12431837995063*_SPRIN25)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
32504     ++-0.01686883514205*TANH(0.39709097344802*_SPRIN26)
32505     +;
MPRINT(EM_DIAGRAM):   ;
32506     +;
32507     +/**********************************************************/
32508     +* Selected activation function at stage 3 = SQUARE;
32509     +/**********************************************************/
32510     +;
32511     +_RHAT3=-0.022052101
32512     ++(-0.0977177085079+0.00691990140402*_SPRIN31)*_SPRIN31
MPRINT(EM_DIAGRAM):   _RHAT3=-0.022052101 +(-0.0977177085079+0.00691990140402*_SPRIN31)*_SPRIN31 +(-0.03059395418228+-0.00667288771384*_SPRIN32)*_SPRIN32 +(0.03747596772594+0.00571410506002*_SPRIN33)*_SPRIN33 
+(0.02410862500084+0.01363577745125*_SPRIN34)*_SPRIN34 +(-0.00136695465228+0.0036463140305*_SPRIN35)*_SPRIN35 ;
32513     ++(-0.03059395418228+-0.00667288771384*_SPRIN32)*_SPRIN32
MPRINT(EM_DIAGRAM):   ;
32514     ++(0.03747596772594+0.00571410506002*_SPRIN33)*_SPRIN33
32515     ++(0.02410862500084+0.01363577745125*_SPRIN34)*_SPRIN34
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = LOGIST;
32516     ++(-0.00136695465228+0.0036463140305*_SPRIN35)*_SPRIN35
32517     +;
MPRINT(EM_DIAGRAM):   ;
32518     +;
32519     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT4=0.0441385056 ;
32520     +* Selected activation function at stage 4 = LOGIST;
32521     +/**********************************************************/
MPRINT(EM_DIAGRAM):   if -(-3.50378275616244*_SPRIN41) <= 0 then _tmpLogit=1/(1+exp(-(-3.50378275616244*_SPRIN41)));
32522     +;
32523     +_RHAT4=0.0441385056
32524     +;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-3.50378275616244*_SPRIN41)) /(1+exp((-3.50378275616244*_SPRIN41)));
32525     +if -(-3.50378275616244*_SPRIN41) <= 0
MPRINT(EM_DIAGRAM):   _RHAT4=_RHAT4+0.0675674361*_tmpLogit;
32526     +then _tmpLogit=1/(1+exp(-(-3.50378275616244*_SPRIN41)));
32527     +else _tmpLogit=exp((-3.50378275616244*_SPRIN41))
MPRINT(EM_DIAGRAM):   if -(-0.68142768864615*_SPRIN42) <= 0 then _tmpLogit=1/(1+exp(-(-0.68142768864615*_SPRIN42)));
32528     +/(1+exp((-3.50378275616244*_SPRIN41)));
32529     +_RHAT4=_RHAT4+0.0675674361*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.68142768864615*_SPRIN42)) /(1+exp((-0.68142768864615*_SPRIN42)));
32530     +if -(-0.68142768864615*_SPRIN42) <= 0
MPRINT(EM_DIAGRAM):   _RHAT4=_RHAT4+0.0788330005*_tmpLogit;
32531     +then _tmpLogit=1/(1+exp(-(-0.68142768864615*_SPRIN42)));
32532     +else _tmpLogit=exp((-0.68142768864615*_SPRIN42))
MPRINT(EM_DIAGRAM):   if -(0.01804490084237*_SPRIN43) <= 0 then _tmpLogit=1/(1+exp(-(0.01804490084237*_SPRIN43)));
32533     +/(1+exp((-0.68142768864615*_SPRIN42)));
32534     +_RHAT4=_RHAT4+0.0788330005*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.01804490084237*_SPRIN43)) /(1+exp((0.01804490084237*_SPRIN43)));
32535     +if -(0.01804490084237*_SPRIN43) <= 0
MPRINT(EM_DIAGRAM):   _RHAT4=_RHAT4+-0.201594425*_tmpLogit;
32536     +then _tmpLogit=1/(1+exp(-(0.01804490084237*_SPRIN43)));
MPRINT(EM_DIAGRAM):   ;
32537     +else _tmpLogit=exp((0.01804490084237*_SPRIN43))
MPRINT(EM_DIAGRAM):   ;
32538     +/(1+exp((0.01804490084237*_SPRIN43)));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
32539     +_RHAT4=_RHAT4+-0.201594425*_tmpLogit;
32540     +;
MPRINT(EM_DIAGRAM):   ;
32541     +;
32542     +/**********************************************************/
32543     +* Selected activation function at stage 5 = COS;
32544     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT5=1.6036995269 +-0.79319039901112*COS(0.35522643723722*_SPRIN51*(2/ARCOS(-1))) +-0.82284903068383*COS(0.03064693387791*_SPRIN52*(2/ARCOS(-1))) ;
32545     +;
MPRINT(EM_DIAGRAM):   ;
32546     +_RHAT5=1.6036995269
32547     ++-0.79319039901112*COS(0.35522643723722*_SPRIN51*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = LOGIST;
32548     ++-0.82284903068383*COS(0.03064693387791*_SPRIN52*(2/ARCOS(-1)))
32549     +;
MPRINT(EM_DIAGRAM):   ;
32550     +;
32551     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT6=0.1 ;
32552     +* Selected activation function at stage 6 = LOGIST;
32553     +/**********************************************************/
MPRINT(EM_DIAGRAM):   if -(-0.1*_SPRIN61) <= 0 then _tmpLogit=1/(1+exp(-(-0.1*_SPRIN61)));
32554     +;
32555     +_RHAT6=0.1
32556     +;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.1*_SPRIN61)) /(1+exp((-0.1*_SPRIN61)));
32557     +if -(-0.1*_SPRIN61) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.1*_tmpLogit;
32558     +then _tmpLogit=1/(1+exp(-(-0.1*_SPRIN61)));
32559     +else _tmpLogit=exp((-0.1*_SPRIN61))
MPRINT(EM_DIAGRAM):   if -(0.1*_SPRIN62) <= 0 then _tmpLogit=1/(1+exp(-(0.1*_SPRIN62)));
32560     +/(1+exp((-0.1*_SPRIN61)));
32561     +_RHAT6=_RHAT6+-0.1*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.1*_SPRIN62)) /(1+exp((0.1*_SPRIN62)));
32562     +if -(0.1*_SPRIN62) <= 0
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.1*_tmpLogit;
32563     +then _tmpLogit=1/(1+exp(-(0.1*_SPRIN62)));
MPRINT(EM_DIAGRAM):   ;
32564     +else _tmpLogit=exp((0.1*_SPRIN62))
MPRINT(EM_DIAGRAM):   ;
32565     +/(1+exp((0.1*_SPRIN62)));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = GAUSS;
32566     +_RHAT6=_RHAT6+-0.1*_tmpLogit;
32567     +;
MPRINT(EM_DIAGRAM):   ;
32568     +;
32569     +/**********************************************************/
32570     +* Selected activation function at stage 7 = GAUSS;
32571     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT7=0.1936780186 +0.04053032681598*exp(-(9.24176504115922*_SPRIN71*9.24176504115922*_SPRIN71)) +-0.20785410800795*exp(-(0.29311251021882*_SPRIN72*0.29311251021882*_SPRIN72)) ;
32572     +;
MPRINT(EM_DIAGRAM):   ;
32573     +_RHAT7=0.1936780186
32574     ++0.04053032681598*exp(-(9.24176504115922*_SPRIN71*9.24176504115922*_SPRIN71))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = LOGIST;
32575     ++-0.20785410800795*exp(-(0.29311251021882*_SPRIN72*0.29311251021882*_SPRIN72))
32576     +;
MPRINT(EM_DIAGRAM):   ;
32577     +;
32578     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT8=0.0959411414 ;
32579     +* Selected activation function at stage 8 = LOGIST;
32580     +/**********************************************************/
MPRINT(EM_DIAGRAM):   if -(-0.46525905235341*_SPRIN81) <= 0 then _tmpLogit=1/(1+exp(-(-0.46525905235341*_SPRIN81)));
32581     +;
32582     +_RHAT8=0.0959411414
32583     +;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.46525905235341*_SPRIN81)) /(1+exp((-0.46525905235341*_SPRIN81)));
32584     +if -(-0.46525905235341*_SPRIN81) <= 0
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+0.1033285648*_tmpLogit;
32585     +then _tmpLogit=1/(1+exp(-(-0.46525905235341*_SPRIN81)));
32586     +else _tmpLogit=exp((-0.46525905235341*_SPRIN81))
MPRINT(EM_DIAGRAM):   if -(2.13410240213739*_SPRIN82) <= 0 then _tmpLogit=1/(1+exp(-(2.13410240213739*_SPRIN82)));
32587     +/(1+exp((-0.46525905235341*_SPRIN81)));
32588     +_RHAT8=_RHAT8+0.1033285648*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((2.13410240213739*_SPRIN82)) /(1+exp((2.13410240213739*_SPRIN82)));
32589     +if -(2.13410240213739*_SPRIN82) <= 0
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+-0.101630747*_tmpLogit;
32590     +then _tmpLogit=1/(1+exp(-(2.13410240213739*_SPRIN82)));
32591     +else _tmpLogit=exp((2.13410240213739*_SPRIN82))
MPRINT(EM_DIAGRAM):   if -(0.31625236500835*_SPRIN83) <= 0 then _tmpLogit=1/(1+exp(-(0.31625236500835*_SPRIN83)));
32592     +/(1+exp((2.13410240213739*_SPRIN82)));
32593     +_RHAT8=_RHAT8+-0.101630747*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.31625236500835*_SPRIN83)) /(1+exp((0.31625236500835*_SPRIN83)));
32594     +if -(0.31625236500835*_SPRIN83) <= 0
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+-0.098830155*_tmpLogit;
32595     +then _tmpLogit=1/(1+exp(-(0.31625236500835*_SPRIN83)));
32596     +else _tmpLogit=exp((0.31625236500835*_SPRIN83))
MPRINT(EM_DIAGRAM):   if -(0.01058734408671*_SPRIN84) <= 0 then _tmpLogit=1/(1+exp(-(0.01058734408671*_SPRIN84)));
32597     +/(1+exp((0.31625236500835*_SPRIN83)));
32598     +_RHAT8=_RHAT8+-0.098830155*_tmpLogit;
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.01058734408671*_SPRIN84)) /(1+exp((0.01058734408671*_SPRIN84)));
32599     +if -(0.01058734408671*_SPRIN84) <= 0
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+-0.086531966*_tmpLogit;
32600     +then _tmpLogit=1/(1+exp(-(0.01058734408671*_SPRIN84)));
MPRINT(EM_DIAGRAM):   ;
32601     +else _tmpLogit=exp((0.01058734408671*_SPRIN84))
MPRINT(EM_DIAGRAM):   ;
32602     +/(1+exp((0.01058734408671*_SPRIN84)));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = COS;
32603     +_RHAT8=_RHAT8+-0.086531966*_tmpLogit;
32604     +;
MPRINT(EM_DIAGRAM):   ;
32605     +;
32606     +/**********************************************************/
32607     +* Selected activation function at stage 9 = COS;
32608     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT9=0.073209372 +-0.07686528190743*COS(0.86827538576157*_SPRIN91*(2/ARCOS(-1))) +-0.01265860256501*COS(-0.37912517119517*_SPRIN92*(2/ARCOS(-1))) ;
32609     +;
MPRINT(EM_DIAGRAM):   ;
32610     +_RHAT9=0.073209372
32611     ++-0.07686528190743*COS(0.86827538576157*_SPRIN91*(2/ARCOS(-1)))
32612     ++-0.01265860256501*COS(-0.37912517119517*_SPRIN92*(2/ARCOS(-1)))
32613     +;
32614     +;
32615     +_tmpPredict
32616     +=_YHAT0
32617     ++_RHAT1
32618     ++_RHAT2
32619     ++_RHAT3
32620     ++_RHAT4
32621     ++_RHAT5
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
32622     ++_RHAT6
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
32623     ++_RHAT7
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
32624     ++_RHAT8
32625     ++_RHAT9
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
32626     +;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
32627     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
32628     +If _tmpPredict > 1 then _tmpPredict=1;
32629     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
32630     +P_DepVar1=_tmpPredict;
32631     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
32632     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
32633     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
32634     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
32635     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   end;
32636     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   else do;
32637     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
32638     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
32639     +end;
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
32640     +else do;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
32641     +R_DepVar1 = -P_DepVar1;
32642     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   OTHERWISE;
32643     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   end;
32644     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   END;
32645     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   ;
32646     +OTHERWISE;
32647     +end;
32648     +END;
32649     +;
32650     +DROP _YHAT0
32651     +_RHAT1
32652     +_RHAT2
32653     +_RHAT3
32654     +_RHAT4
32655     +_RHAT5
32656     +_RHAT6
32657     +_RHAT7
32658     +_RHAT8
32659     +_RHAT9
32660     +_tmpLogit
32661     +_tmpPredict
32662     +_S1_ACCEPTEDCMPTOTAL
32663     +_S2_INCOME
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpLogit _tmpPredict _S1_ACCEPTEDCMPTOTAL _S2_INCOME _S3_MNT _S4_NUMDISTPURCHASES _S5_RFMSTAT _S6_RMNTFRQ ;
32664     +_S3_MNT
32665     +_S4_NUMDISTPURCHASES
32666     +_S5_RFMSTAT
32667     +_S6_RMNTFRQ
32668     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
32669      run;

NOTE: DATA STEP view saved on file EMWS8.DMNEURAL5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
32670      quit;
32671      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
32672      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32673      *------------------------------------------------------------*;
32674      * DMNeural5: Scoring VALIDATE data;
32675      *------------------------------------------------------------*;
32676      data EMWS8.DMNeural5_VALIDATE
32677      / view=EMWS8.DMNeural5_VALIDATE
32678      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_VALIDATE / view=EMWS8.DMNeural5_VALIDATE ;
32679      set EMWS8.Varsel_VALIDATE
32680      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
32681      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas.
32682     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
32683     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
32684     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
32685     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
32686     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
32687     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
32687    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
32688     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
32689     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
32690     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
32690    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
32691     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
32691    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
32692     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
32693     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
32693    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
32694     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
32695     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
32696     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
32697     +DROP
32698     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
32699     +;
MPRINT(EM_DIAGRAM):   ;
32700     +/*-------------------------------------------------------------------------*/
32701     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
32702     +/*-------------------------------------------------------------------------*/
32703     +;
MPRINT(EM_DIAGRAM):   ;
32704     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
32705     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
32706     +if Income=. then _S2_INCOME = 0;
MPRINT(EM_DIAGRAM):   if Income=. then _S2_INCOME = 0;
32707     +else _S2_INCOME=(Income-51962.545914069)/20878.2658128313;
MPRINT(EM_DIAGRAM):   else _S2_INCOME=(Income-51962.545914069)/20878.2658128313;
32708     +if Mnt=. then _S3_MNT = 0;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S3_MNT = 0;
32709     +else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   else _S3_MNT=(Mnt-615.68197135636)/604.537497355942;
32710     +if NumDistPurchases=. then _S4_NUMDISTPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumDistPurchases=. then _S4_NUMDISTPURCHASES = 0;
32711     +else _S4_NUMDISTPURCHASES=(NumDistPurchases-6.73504633529907)/4.60209117827878;
MPRINT(EM_DIAGRAM):   else _S4_NUMDISTPURCHASES=(NumDistPurchases-6.73504633529907)/4.60209117827878;
32712     +if RFMstat=. then _S5_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S5_RFMSTAT = 0;
32713     +else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
32714     +if RMntFrq=. then _S6_RMNTFRQ = 0;
MPRINT(EM_DIAGRAM):   if RMntFrq=. then _S6_RMNTFRQ = 0;
32715     +else _S6_RMNTFRQ=(RMntFrq-37.8039241814599)/30.0642993170191;
MPRINT(EM_DIAGRAM):   else _S6_RMNTFRQ=(RMntFrq-37.8039241814599)/30.0642993170191;
32716     +;
MPRINT(EM_DIAGRAM):   ;
32717     +/*----------------------------------------------*/
32718     +* Component 1 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
32719     +/*----------------------------------------------*/
32720     +;
MPRINT(EM_DIAGRAM):   ;
32721     +_SPRIN01=
32722     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
32723     +-0.188835475*_S2_INCOME+
32724     +-0.156406342*_S3_MNT+
32725     +-0.140654415*_S4_NUMDISTPURCHASES+
32726     +0.2445164966*_S5_RFMSTAT+
32727     +-0.2046748*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN01= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32728     +/*----------------------------------------------*/
32729     +* Component 2 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
32730     +/*----------------------------------------------*/
32731     +;
MPRINT(EM_DIAGRAM):   ;
32732     +_SPRIN02=
32733     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
32734     +0.4590524476*_S2_INCOME+
32735     +0.4946652679*_S3_MNT+
32736     +0.438938369*_S4_NUMDISTPURCHASES+
32737     +0.2404822302*_S5_RFMSTAT+
32738     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32739     +/*----------------------------------------------*/
32740     +* Component 3 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
32741     +/*----------------------------------------------*/
32742     +;
MPRINT(EM_DIAGRAM):   ;
32743     +_SPRIN03=
32744     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
32745     +0.0112843223*_S2_INCOME+
32746     +-0.785897617*_S3_MNT+
32747     +0.2541728271*_S4_NUMDISTPURCHASES+
32748     +0.0256969066*_S5_RFMSTAT+
32749     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32750     +/*----------------------------------------------*/
32751     +* Component 4 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
32752     +/*----------------------------------------------*/
32753     +;
MPRINT(EM_DIAGRAM):   ;
32754     +_SPRIN04=
32755     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
32756     +-0.09192664*_S2_INCOME+
32757     +-0.060640599*_S3_MNT+
32758     +-0.054327938*_S4_NUMDISTPURCHASES+
32759     +0.9383364806*_S5_RFMSTAT+
32760     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN04= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32761     +/*----------------------------------------------*/
32762     +* Component 5 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
32763     +/*----------------------------------------------*/
32764     +;
MPRINT(EM_DIAGRAM):   ;
32765     +_SPRIN05=
32766     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
32767     +0.8551360682*_S2_INCOME+
32768     +-0.269952828*_S3_MNT+
32769     +-0.380017014*_S4_NUMDISTPURCHASES+
32770     +0.0283185455*_S5_RFMSTAT+
32771     +-0.224609088*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32772     +;
MPRINT(EM_DIAGRAM):   ;
32773     +/*----------------------------------------------*/
32774     +* Component 1 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
32775     +/*----------------------------------------------*/
32776     +;
MPRINT(EM_DIAGRAM):   ;
32777     +_SPRIN11=
32778     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
32779     +0.0112843223*_S2_INCOME+
32780     +-0.785897617*_S3_MNT+
32781     +0.2541728271*_S4_NUMDISTPURCHASES+
32782     +0.0256969066*_S5_RFMSTAT+
32783     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32784     +/*----------------------------------------------*/
32785     +* Component 2 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
32786     +/*----------------------------------------------*/
32787     +;
MPRINT(EM_DIAGRAM):   ;
32788     +_SPRIN12=
32789     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
32790     +-0.188835475*_S2_INCOME+
32791     +-0.156406342*_S3_MNT+
32792     +-0.140654415*_S4_NUMDISTPURCHASES+
32793     +0.2445164966*_S5_RFMSTAT+
32794     +-0.2046748*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32795     +/*----------------------------------------------*/
32796     +* Component 3 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
32797     +/*----------------------------------------------*/
32798     +;
MPRINT(EM_DIAGRAM):   ;
32799     +_SPRIN13=
32800     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
32801     +-0.09192664*_S2_INCOME+
32802     +-0.060640599*_S3_MNT+
32803     +-0.054327938*_S4_NUMDISTPURCHASES+
32804     +0.9383364806*_S5_RFMSTAT+
32805     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN13= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32806     +/*----------------------------------------------*/
32807     +* Component 4 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
32808     +/*----------------------------------------------*/
32809     +;
MPRINT(EM_DIAGRAM):   ;
32810     +_SPRIN14=
32811     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
32812     +0.8551360682*_S2_INCOME+
32813     +-0.269952828*_S3_MNT+
32814     +-0.380017014*_S4_NUMDISTPURCHASES+
32815     +0.0283185455*_S5_RFMSTAT+
32816     +-0.224609088*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN14= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32817     +/*----------------------------------------------*/
32818     +* Component 5 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
32819     +/*----------------------------------------------*/
32820     +;
MPRINT(EM_DIAGRAM):   ;
32821     +_SPRIN15=
32822     +-0.023137807*_S1_ACCEPTEDCMPTOTAL+
32823     +0.1173732321*_S2_INCOME+
32824     +-0.191458751*_S3_MNT+
32825     +0.7586706544*_S4_NUMDISTPURCHASES+
32826     +-0.021032306*_S5_RFMSTAT+
32827     +-0.610743967*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN15= -0.023137807*_S1_ACCEPTEDCMPTOTAL+ 0.1173732321*_S2_INCOME+ -0.191458751*_S3_MNT+ 0.7586706544*_S4_NUMDISTPURCHASES+ -0.021032306*_S5_RFMSTAT+ -0.610743967*_S6_RMNTFRQ;
32828     +;
MPRINT(EM_DIAGRAM):   ;
32829     +/*----------------------------------------------*/
32830     +* Component 1 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
32831     +/*----------------------------------------------*/
32832     +;
MPRINT(EM_DIAGRAM):   ;
32833     +_SPRIN21=
32834     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
32835     +0.0112843223*_S2_INCOME+
32836     +-0.785897617*_S3_MNT+
32837     +0.2541728271*_S4_NUMDISTPURCHASES+
32838     +0.0256969066*_S5_RFMSTAT+
32839     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32840     +/*----------------------------------------------*/
32841     +* Component 2 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
32842     +/*----------------------------------------------*/
32843     +;
MPRINT(EM_DIAGRAM):   ;
32844     +_SPRIN22=
32845     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
32846     +-0.188835475*_S2_INCOME+
32847     +-0.156406342*_S3_MNT+
32848     +-0.140654415*_S4_NUMDISTPURCHASES+
32849     +0.2445164966*_S5_RFMSTAT+
32850     +-0.2046748*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32851     +/*----------------------------------------------*/
32852     +* Component 3 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
32853     +/*----------------------------------------------*/
32854     +;
MPRINT(EM_DIAGRAM):   ;
32855     +_SPRIN23=
32856     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
32857     +0.8551360682*_S2_INCOME+
32858     +-0.269952828*_S3_MNT+
32859     +-0.380017014*_S4_NUMDISTPURCHASES+
32860     +0.0283185455*_S5_RFMSTAT+
32861     +-0.224609088*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN23= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32862     +/*----------------------------------------------*/
32863     +* Component 4 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
32864     +/*----------------------------------------------*/
32865     +;
MPRINT(EM_DIAGRAM):   ;
32866     +_SPRIN24=
32867     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
32868     +-0.09192664*_S2_INCOME+
32869     +-0.060640599*_S3_MNT+
32870     +-0.054327938*_S4_NUMDISTPURCHASES+
32871     +0.9383364806*_S5_RFMSTAT+
32872     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN24= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32873     +/*----------------------------------------------*/
32874     +* Component 5 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 2;
32875     +/*----------------------------------------------*/
32876     +;
MPRINT(EM_DIAGRAM):   ;
32877     +_SPRIN25=
32878     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
32879     +0.4590524476*_S2_INCOME+
32880     +0.4946652679*_S3_MNT+
32881     +0.438938369*_S4_NUMDISTPURCHASES+
32882     +0.2404822302*_S5_RFMSTAT+
32883     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN25= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32884     +/*----------------------------------------------*/
32885     +* Component 6 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 6 at stage 2;
32886     +/*----------------------------------------------*/
32887     +;
MPRINT(EM_DIAGRAM):   ;
32888     +_SPRIN26=
32889     +-0.023137807*_S1_ACCEPTEDCMPTOTAL+
32890     +0.1173732321*_S2_INCOME+
32891     +-0.191458751*_S3_MNT+
32892     +0.7586706544*_S4_NUMDISTPURCHASES+
32893     +-0.021032306*_S5_RFMSTAT+
32894     +-0.610743967*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN26= -0.023137807*_S1_ACCEPTEDCMPTOTAL+ 0.1173732321*_S2_INCOME+ -0.191458751*_S3_MNT+ 0.7586706544*_S4_NUMDISTPURCHASES+ -0.021032306*_S5_RFMSTAT+ -0.610743967*_S6_RMNTFRQ;
32895     +;
MPRINT(EM_DIAGRAM):   ;
32896     +/*----------------------------------------------*/
32897     +* Component 1 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
32898     +/*----------------------------------------------*/
32899     +;
MPRINT(EM_DIAGRAM):   ;
32900     +_SPRIN31=
32901     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
32902     +0.0112843223*_S2_INCOME+
32903     +-0.785897617*_S3_MNT+
32904     +0.2541728271*_S4_NUMDISTPURCHASES+
32905     +0.0256969066*_S5_RFMSTAT+
32906     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32907     +/*----------------------------------------------*/
32908     +* Component 2 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
32909     +/*----------------------------------------------*/
32910     +;
MPRINT(EM_DIAGRAM):   ;
32911     +_SPRIN32=
32912     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
32913     +-0.188835475*_S2_INCOME+
32914     +-0.156406342*_S3_MNT+
32915     +-0.140654415*_S4_NUMDISTPURCHASES+
32916     +0.2445164966*_S5_RFMSTAT+
32917     +-0.2046748*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
32918     +/*----------------------------------------------*/
32919     +* Component 3 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 3;
32920     +/*----------------------------------------------*/
32921     +;
MPRINT(EM_DIAGRAM):   ;
32922     +_SPRIN33=
32923     +0.0142710092*_S1_ACCEPTEDCMPTOTAL+
32924     +0.8551360682*_S2_INCOME+
32925     +-0.269952828*_S3_MNT+
32926     +-0.380017014*_S4_NUMDISTPURCHASES+
32927     +0.0283185455*_S5_RFMSTAT+
32928     +-0.224609088*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN33= 0.0142710092*_S1_ACCEPTEDCMPTOTAL+ 0.8551360682*_S2_INCOME+ -0.269952828*_S3_MNT+ -0.380017014*_S4_NUMDISTPURCHASES+ 0.0283185455*_S5_RFMSTAT+ -0.224609088*_S6_RMNTFRQ;
32929     +/*----------------------------------------------*/
32930     +* Component 4 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 3;
32931     +/*----------------------------------------------*/
32932     +;
MPRINT(EM_DIAGRAM):   ;
32933     +_SPRIN34=
32934     +-0.023137807*_S1_ACCEPTEDCMPTOTAL+
32935     +0.1173732321*_S2_INCOME+
32936     +-0.191458751*_S3_MNT+
32937     +0.7586706544*_S4_NUMDISTPURCHASES+
32938     +-0.021032306*_S5_RFMSTAT+
32939     +-0.610743967*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN34= -0.023137807*_S1_ACCEPTEDCMPTOTAL+ 0.1173732321*_S2_INCOME+ -0.191458751*_S3_MNT+ 0.7586706544*_S4_NUMDISTPURCHASES+ -0.021032306*_S5_RFMSTAT+ -0.610743967*_S6_RMNTFRQ;
32940     +/*----------------------------------------------*/
32941     +* Component 5 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 3;
32942     +/*----------------------------------------------*/
32943     +;
MPRINT(EM_DIAGRAM):   ;
32944     +_SPRIN35=
32945     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
32946     +0.4590524476*_S2_INCOME+
32947     +0.4946652679*_S3_MNT+
32948     +0.438938369*_S4_NUMDISTPURCHASES+
32949     +0.2404822302*_S5_RFMSTAT+
32950     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN35= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32951     +;
MPRINT(EM_DIAGRAM):   ;
32952     +/*----------------------------------------------*/
32953     +* Component 1 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
32954     +/*----------------------------------------------*/
32955     +;
MPRINT(EM_DIAGRAM):   ;
32956     +_SPRIN41=
32957     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
32958     +0.0112843223*_S2_INCOME+
32959     +-0.785897617*_S3_MNT+
32960     +0.2541728271*_S4_NUMDISTPURCHASES+
32961     +0.0256969066*_S5_RFMSTAT+
32962     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32963     +/*----------------------------------------------*/
32964     +* Component 2 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
32965     +/*----------------------------------------------*/
32966     +;
MPRINT(EM_DIAGRAM):   ;
32967     +_SPRIN42=
32968     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
32969     +-0.09192664*_S2_INCOME+
32970     +-0.060640599*_S3_MNT+
32971     +-0.054327938*_S4_NUMDISTPURCHASES+
32972     +0.9383364806*_S5_RFMSTAT+
32973     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN42= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
32974     +/*----------------------------------------------*/
32975     +* Component 3 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 4;
32976     +/*----------------------------------------------*/
32977     +;
MPRINT(EM_DIAGRAM):   ;
32978     +_SPRIN43=
32979     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
32980     +0.4590524476*_S2_INCOME+
32981     +0.4946652679*_S3_MNT+
32982     +0.438938369*_S4_NUMDISTPURCHASES+
32983     +0.2404822302*_S5_RFMSTAT+
32984     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN43= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
32985     +;
MPRINT(EM_DIAGRAM):   ;
32986     +/*----------------------------------------------*/
32987     +* Component 1 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
32988     +/*----------------------------------------------*/
32989     +;
MPRINT(EM_DIAGRAM):   ;
32990     +_SPRIN51=
32991     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
32992     +0.0112843223*_S2_INCOME+
32993     +-0.785897617*_S3_MNT+
32994     +0.2541728271*_S4_NUMDISTPURCHASES+
32995     +0.0256969066*_S5_RFMSTAT+
32996     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
32997     +/*----------------------------------------------*/
32998     +* Component 2 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
32999     +/*----------------------------------------------*/
33000     +;
MPRINT(EM_DIAGRAM):   ;
33001     +_SPRIN52=
33002     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
33003     +0.4590524476*_S2_INCOME+
33004     +0.4946652679*_S3_MNT+
33005     +0.438938369*_S4_NUMDISTPURCHASES+
33006     +0.2404822302*_S5_RFMSTAT+
33007     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
33008     +;
MPRINT(EM_DIAGRAM):   ;
33009     +/*----------------------------------------------*/
33010     +* Component 1 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
33011     +/*----------------------------------------------*/
33012     +;
MPRINT(EM_DIAGRAM):   ;
33013     +_SPRIN61=
33014     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
33015     +0.0112843223*_S2_INCOME+
33016     +-0.785897617*_S3_MNT+
33017     +0.2541728271*_S4_NUMDISTPURCHASES+
33018     +0.0256969066*_S5_RFMSTAT+
33019     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN61= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
33020     +/*----------------------------------------------*/
33021     +* Component 2 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
33022     +/*----------------------------------------------*/
33023     +;
MPRINT(EM_DIAGRAM):   ;
33024     +_SPRIN62=
33025     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
33026     +0.4590524476*_S2_INCOME+
33027     +0.4946652679*_S3_MNT+
33028     +0.438938369*_S4_NUMDISTPURCHASES+
33029     +0.2404822302*_S5_RFMSTAT+
33030     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
33031     +;
MPRINT(EM_DIAGRAM):   ;
33032     +/*----------------------------------------------*/
33033     +* Component 1 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
33034     +/*----------------------------------------------*/
33035     +;
MPRINT(EM_DIAGRAM):   ;
33036     +_SPRIN71=
33037     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
33038     +0.0112843223*_S2_INCOME+
33039     +-0.785897617*_S3_MNT+
33040     +0.2541728271*_S4_NUMDISTPURCHASES+
33041     +0.0256969066*_S5_RFMSTAT+
33042     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN71= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
33043     +/*----------------------------------------------*/
33044     +* Component 2 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
33045     +/*----------------------------------------------*/
33046     +;
MPRINT(EM_DIAGRAM):   ;
33047     +_SPRIN72=
33048     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
33049     +-0.09192664*_S2_INCOME+
33050     +-0.060640599*_S3_MNT+
33051     +-0.054327938*_S4_NUMDISTPURCHASES+
33052     +0.9383364806*_S5_RFMSTAT+
33053     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN72= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
33054     +;
MPRINT(EM_DIAGRAM):   ;
33055     +/*----------------------------------------------*/
33056     +* Component 1 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
33057     +/*----------------------------------------------*/
33058     +;
MPRINT(EM_DIAGRAM):   ;
33059     +_SPRIN81=
33060     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
33061     +-0.09192664*_S2_INCOME+
33062     +-0.060640599*_S3_MNT+
33063     +-0.054327938*_S4_NUMDISTPURCHASES+
33064     +0.9383364806*_S5_RFMSTAT+
33065     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN81= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
33066     +/*----------------------------------------------*/
33067     +* Component 2 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
33068     +/*----------------------------------------------*/
33069     +;
MPRINT(EM_DIAGRAM):   ;
33070     +_SPRIN82=
33071     +0.0262923619*_S1_ACCEPTEDCMPTOTAL+
33072     +0.0112843223*_S2_INCOME+
33073     +-0.785897617*_S3_MNT+
33074     +0.2541728271*_S4_NUMDISTPURCHASES+
33075     +0.0256969066*_S5_RFMSTAT+
33076     +0.5623896823*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN82= 0.0262923619*_S1_ACCEPTEDCMPTOTAL+ 0.0112843223*_S2_INCOME+ -0.785897617*_S3_MNT+ 0.2541728271*_S4_NUMDISTPURCHASES+ 0.0256969066*_S5_RFMSTAT+ 0.5623896823*_S6_RMNTFRQ;
33077     +/*----------------------------------------------*/
33078     +* Component 3 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 8;
33079     +/*----------------------------------------------*/
33080     +;
MPRINT(EM_DIAGRAM):   ;
33081     +_SPRIN83=
33082     +0.9046626244*_S1_ACCEPTEDCMPTOTAL+
33083     +-0.188835475*_S2_INCOME+
33084     +-0.156406342*_S3_MNT+
33085     +-0.140654415*_S4_NUMDISTPURCHASES+
33086     +0.2445164966*_S5_RFMSTAT+
33087     +-0.2046748*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN83= 0.9046626244*_S1_ACCEPTEDCMPTOTAL+ -0.188835475*_S2_INCOME+ -0.156406342*_S3_MNT+ -0.140654415*_S4_NUMDISTPURCHASES+ 0.2445164966*_S5_RFMSTAT+ -0.2046748*_S6_RMNTFRQ;
33088     +/*----------------------------------------------*/
33089     +* Component 4 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 8;
33090     +/*----------------------------------------------*/
33091     +;
MPRINT(EM_DIAGRAM):   ;
33092     +_SPRIN84=
33093     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
33094     +0.4590524476*_S2_INCOME+
33095     +0.4946652679*_S3_MNT+
33096     +0.438938369*_S4_NUMDISTPURCHASES+
33097     +0.2404822302*_S5_RFMSTAT+
33098     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN84= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
33099     +;
MPRINT(EM_DIAGRAM):   ;
33100     +/*----------------------------------------------*/
33101     +* Component 1 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
33102     +/*----------------------------------------------*/
33103     +;
MPRINT(EM_DIAGRAM):   ;
33104     +_SPRIN91=
33105     +-0.311343989*_S1_ACCEPTEDCMPTOTAL+
33106     +-0.09192664*_S2_INCOME+
33107     +-0.060640599*_S3_MNT+
33108     +-0.054327938*_S4_NUMDISTPURCHASES+
33109     +0.9383364806*_S5_RFMSTAT+
33110     +-0.08666173*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN91= -0.311343989*_S1_ACCEPTEDCMPTOTAL+ -0.09192664*_S2_INCOME+ -0.060640599*_S3_MNT+ -0.054327938*_S4_NUMDISTPURCHASES+ 0.9383364806*_S5_RFMSTAT+ -0.08666173*_S6_RMNTFRQ;
33111     +/*----------------------------------------------*/
33112     +* Component 2 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
33113     +/*----------------------------------------------*/
33114     +;
MPRINT(EM_DIAGRAM):   ;
33115     +_SPRIN92=
33116     +0.2884790257*_S1_ACCEPTEDCMPTOTAL+
33117     +0.4590524476*_S2_INCOME+
33118     +0.4946652679*_S3_MNT+
33119     +0.438938369*_S4_NUMDISTPURCHASES+
33120     +0.2404822302*_S5_RFMSTAT+
33121     +0.4591931838*_S6_RMNTFRQ;
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.2884790257*_S1_ACCEPTEDCMPTOTAL+ 0.4590524476*_S2_INCOME+ 0.4946652679*_S3_MNT+ 0.438938369*_S4_NUMDISTPURCHASES+ 0.2404822302*_S5_RFMSTAT+ 0.4591931838*_S6_RMNTFRQ;
33122     +;
MPRINT(EM_DIAGRAM):   ;
33123     +DROP
33124     +_SPRIN01
33125     +_SPRIN02
33126     +_SPRIN03
33127     +_SPRIN04
33128     +_SPRIN05
33129     +_SPRIN11
33130     +_SPRIN12
33131     +_SPRIN13
33132     +_SPRIN14
33133     +_SPRIN15
33134     +_SPRIN21
33135     +_SPRIN22
33136     +_SPRIN23
33137     +_SPRIN24
33138     +_SPRIN25
33139     +_SPRIN26
33140     +_SPRIN31
33141     +_SPRIN32
33142     +_SPRIN33
33143     +_SPRIN34
33144     +_SPRIN35
33145     +_SPRIN41
33146     +_SPRIN42
33147     +_SPRIN43
33148     +_SPRIN51
33149     +_SPRIN52
33150     +_SPRIN61
33151     +_SPRIN62
33152     +_SPRIN71
33153     +_SPRIN72
33154     +_SPRIN81
33155     +_SPRIN82
33156     +_SPRIN83
33157     +_SPRIN84
33158     +_SPRIN91
33159     +_SPRIN92
33160     +;
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN25 _SPRIN26 _SPRIN31 _SPRIN32 _SPRIN33 _SPRIN34 _SPRIN35 _SPRIN41 _SPRIN42 _SPRIN43 _SPRIN51 
_SPRIN52 _SPRIN61 _SPRIN62 _SPRIN71 _SPRIN72 _SPRIN81 _SPRIN82 _SPRIN83 _SPRIN84 _SPRIN91 _SPRIN92 ;
33161     +;
MPRINT(EM_DIAGRAM):   ;
33162     +/**********************************************************/
33163     +* Selected activation function at stage 0 = LOGIST;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = LOGIST;
33164     +/**********************************************************/
33165     +;
MPRINT(EM_DIAGRAM):   ;
33166     +_YHAT0=-3.790351337
33167     +;
MPRINT(EM_DIAGRAM):   _YHAT0=-3.790351337 ;
33168     +if -(-78.7580216583561*_SPRIN01) <= 0
33169     +then _tmpLogit=1/(1+exp(-(-78.7580216583561*_SPRIN01)));
MPRINT(EM_DIAGRAM):   if -(-78.7580216583561*_SPRIN01) <= 0 then _tmpLogit=1/(1+exp(-(-78.7580216583561*_SPRIN01)));
33170     +else _tmpLogit=exp((-78.7580216583561*_SPRIN01))
33171     +/(1+exp((-78.7580216583561*_SPRIN01)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-78.7580216583561*_SPRIN01)) /(1+exp((-78.7580216583561*_SPRIN01)));
33172     +_YHAT0=_YHAT0+1.2125160145*_tmpLogit;
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+1.2125160145*_tmpLogit;
33173     +if -(-0.20085109739778*_SPRIN02) <= 0
33174     +then _tmpLogit=1/(1+exp(-(-0.20085109739778*_SPRIN02)));
MPRINT(EM_DIAGRAM):   if -(-0.20085109739778*_SPRIN02) <= 0 then _tmpLogit=1/(1+exp(-(-0.20085109739778*_SPRIN02)));
33175     +else _tmpLogit=exp((-0.20085109739778*_SPRIN02))
33176     +/(1+exp((-0.20085109739778*_SPRIN02)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.20085109739778*_SPRIN02)) /(1+exp((-0.20085109739778*_SPRIN02)));
33177     +_YHAT0=_YHAT0+14.422044995*_tmpLogit;
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+14.422044995*_tmpLogit;
33178     +if -(-33.1383346450376*_SPRIN03) <= 0
33179     +then _tmpLogit=1/(1+exp(-(-33.1383346450376*_SPRIN03)));
MPRINT(EM_DIAGRAM):   if -(-33.1383346450376*_SPRIN03) <= 0 then _tmpLogit=1/(1+exp(-(-33.1383346450376*_SPRIN03)));
33180     +else _tmpLogit=exp((-33.1383346450376*_SPRIN03))
33181     +/(1+exp((-33.1383346450376*_SPRIN03)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-33.1383346450376*_SPRIN03)) /(1+exp((-33.1383346450376*_SPRIN03)));
33182     +_YHAT0=_YHAT0+-0.363107377*_tmpLogit;
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+-0.363107377*_tmpLogit;
33183     +if -(7.59906937007084*_SPRIN04) <= 0
33184     +then _tmpLogit=1/(1+exp(-(7.59906937007084*_SPRIN04)));
MPRINT(EM_DIAGRAM):   if -(7.59906937007084*_SPRIN04) <= 0 then _tmpLogit=1/(1+exp(-(7.59906937007084*_SPRIN04)));
33185     +else _tmpLogit=exp((7.59906937007084*_SPRIN04))
33186     +/(1+exp((7.59906937007084*_SPRIN04)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((7.59906937007084*_SPRIN04)) /(1+exp((7.59906937007084*_SPRIN04)));
33187     +_YHAT0=_YHAT0+0.039150692*_tmpLogit;
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+0.039150692*_tmpLogit;
33188     +if -(0.85210915397767*_SPRIN05) <= 0
33189     +then _tmpLogit=1/(1+exp(-(0.85210915397767*_SPRIN05)));
MPRINT(EM_DIAGRAM):   if -(0.85210915397767*_SPRIN05) <= 0 then _tmpLogit=1/(1+exp(-(0.85210915397767*_SPRIN05)));
33190     +else _tmpLogit=exp((0.85210915397767*_SPRIN05))
33191     +/(1+exp((0.85210915397767*_SPRIN05)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.85210915397767*_SPRIN05)) /(1+exp((0.85210915397767*_SPRIN05)));
33192     +_YHAT0=_YHAT0+-1.715086997*_tmpLogit;
MPRINT(EM_DIAGRAM):   _YHAT0=_YHAT0+-1.715086997*_tmpLogit;
33193     +;
MPRINT(EM_DIAGRAM):   ;
33194     +/*--- Target level is binary, take a logistic link function --*/
33195     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
33196     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
33197     +;
MPRINT(EM_DIAGRAM):   ;
33198     +/**********************************************************/
33199     +* Selected activation function at stage 1 = LOGIST;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = LOGIST;
33200     +/**********************************************************/
33201     +;
MPRINT(EM_DIAGRAM):   ;
33202     +_RHAT1=0.0251563404
33203     +;
MPRINT(EM_DIAGRAM):   _RHAT1=0.0251563404 ;
33204     +if -(-3.43716780937551*_SPRIN11) <= 0
33205     +then _tmpLogit=1/(1+exp(-(-3.43716780937551*_SPRIN11)));
MPRINT(EM_DIAGRAM):   if -(-3.43716780937551*_SPRIN11) <= 0 then _tmpLogit=1/(1+exp(-(-3.43716780937551*_SPRIN11)));
33206     +else _tmpLogit=exp((-3.43716780937551*_SPRIN11))
33207     +/(1+exp((-3.43716780937551*_SPRIN11)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-3.43716780937551*_SPRIN11)) /(1+exp((-3.43716780937551*_SPRIN11)));
33208     +_RHAT1=_RHAT1+0.1592016602*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+0.1592016602*_tmpLogit;
33209     +if -(0.21416847077854*_SPRIN12) <= 0
33210     +then _tmpLogit=1/(1+exp(-(0.21416847077854*_SPRIN12)));
MPRINT(EM_DIAGRAM):   if -(0.21416847077854*_SPRIN12) <= 0 then _tmpLogit=1/(1+exp(-(0.21416847077854*_SPRIN12)));
33211     +else _tmpLogit=exp((0.21416847077854*_SPRIN12))
33212     +/(1+exp((0.21416847077854*_SPRIN12)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.21416847077854*_SPRIN12)) /(1+exp((0.21416847077854*_SPRIN12)));
33213     +_RHAT1=_RHAT1+-0.605943094*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+-0.605943094*_tmpLogit;
33214     +if -(1.64883929554916*_SPRIN13) <= 0
33215     +then _tmpLogit=1/(1+exp(-(1.64883929554916*_SPRIN13)));
MPRINT(EM_DIAGRAM):   if -(1.64883929554916*_SPRIN13) <= 0 then _tmpLogit=1/(1+exp(-(1.64883929554916*_SPRIN13)));
33216     +else _tmpLogit=exp((1.64883929554916*_SPRIN13))
33217     +/(1+exp((1.64883929554916*_SPRIN13)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((1.64883929554916*_SPRIN13)) /(1+exp((1.64883929554916*_SPRIN13)));
33218     +_RHAT1=_RHAT1+-0.143628868*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+-0.143628868*_tmpLogit;
33219     +if -(0.72304520869261*_SPRIN14) <= 0
33220     +then _tmpLogit=1/(1+exp(-(0.72304520869261*_SPRIN14)));
MPRINT(EM_DIAGRAM):   if -(0.72304520869261*_SPRIN14) <= 0 then _tmpLogit=1/(1+exp(-(0.72304520869261*_SPRIN14)));
33221     +else _tmpLogit=exp((0.72304520869261*_SPRIN14))
33222     +/(1+exp((0.72304520869261*_SPRIN14)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.72304520869261*_SPRIN14)) /(1+exp((0.72304520869261*_SPRIN14)));
33223     +_RHAT1=_RHAT1+0.1072317513*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+0.1072317513*_tmpLogit;
33224     +if -(-0.31634081743659*_SPRIN15) <= 0
33225     +then _tmpLogit=1/(1+exp(-(-0.31634081743659*_SPRIN15)));
MPRINT(EM_DIAGRAM):   if -(-0.31634081743659*_SPRIN15) <= 0 then _tmpLogit=1/(1+exp(-(-0.31634081743659*_SPRIN15)));
33226     +else _tmpLogit=exp((-0.31634081743659*_SPRIN15))
33227     +/(1+exp((-0.31634081743659*_SPRIN15)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.31634081743659*_SPRIN15)) /(1+exp((-0.31634081743659*_SPRIN15)));
33228     +_RHAT1=_RHAT1+0.3040322724*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT1=_RHAT1+0.3040322724*_tmpLogit;
33229     +;
MPRINT(EM_DIAGRAM):   ;
33230     +;
MPRINT(EM_DIAGRAM):   ;
33231     +/**********************************************************/
33232     +* Selected activation function at stage 2 = TANH;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = TANH;
33233     +/**********************************************************/
33234     +;
MPRINT(EM_DIAGRAM):   ;
33235     +_RHAT2=0.0037368744
33236     ++0.24509185564498*TANH(-0.22766591063218*_SPRIN21)
33237     ++-0.12226104493481*TANH(0.11844355916085*_SPRIN22)
33238     ++0.22736439254794*TANH(0.05489227554239*_SPRIN23)
33239     ++0.05254666351477*TANH(-0.78180525890618*_SPRIN24)
33240     ++0.07483544124088*TANH(-0.12431837995063*_SPRIN25)
33241     ++-0.01686883514205*TANH(0.39709097344802*_SPRIN26)
33242     +;
MPRINT(EM_DIAGRAM):   _RHAT2=0.0037368744 +0.24509185564498*TANH(-0.22766591063218*_SPRIN21) +-0.12226104493481*TANH(0.11844355916085*_SPRIN22) +0.22736439254794*TANH(0.05489227554239*_SPRIN23) +0.05254666351477*TANH(-0.78180525890618*_SPRIN24) 
+0.07483544124088*TANH(-0.12431837995063*_SPRIN25) +-0.01686883514205*TANH(0.39709097344802*_SPRIN26) ;
33243     +;
MPRINT(EM_DIAGRAM):   ;
33244     +/**********************************************************/
33245     +* Selected activation function at stage 3 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
33246     +/**********************************************************/
33247     +;
MPRINT(EM_DIAGRAM):   ;
33248     +_RHAT3=-0.022052101
33249     ++(-0.0977177085079+0.00691990140402*_SPRIN31)*_SPRIN31
33250     ++(-0.03059395418228+-0.00667288771384*_SPRIN32)*_SPRIN32
33251     ++(0.03747596772594+0.00571410506002*_SPRIN33)*_SPRIN33
33252     ++(0.02410862500084+0.01363577745125*_SPRIN34)*_SPRIN34
33253     ++(-0.00136695465228+0.0036463140305*_SPRIN35)*_SPRIN35
33254     +;
MPRINT(EM_DIAGRAM):   _RHAT3=-0.022052101 +(-0.0977177085079+0.00691990140402*_SPRIN31)*_SPRIN31 +(-0.03059395418228+-0.00667288771384*_SPRIN32)*_SPRIN32 +(0.03747596772594+0.00571410506002*_SPRIN33)*_SPRIN33 
+(0.02410862500084+0.01363577745125*_SPRIN34)*_SPRIN34 +(-0.00136695465228+0.0036463140305*_SPRIN35)*_SPRIN35 ;
33255     +;
MPRINT(EM_DIAGRAM):   ;
33256     +/**********************************************************/
33257     +* Selected activation function at stage 4 = LOGIST;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = LOGIST;
33258     +/**********************************************************/
33259     +;
MPRINT(EM_DIAGRAM):   ;
33260     +_RHAT4=0.0441385056
33261     +;
MPRINT(EM_DIAGRAM):   _RHAT4=0.0441385056 ;
33262     +if -(-3.50378275616244*_SPRIN41) <= 0
33263     +then _tmpLogit=1/(1+exp(-(-3.50378275616244*_SPRIN41)));
MPRINT(EM_DIAGRAM):   if -(-3.50378275616244*_SPRIN41) <= 0 then _tmpLogit=1/(1+exp(-(-3.50378275616244*_SPRIN41)));
33264     +else _tmpLogit=exp((-3.50378275616244*_SPRIN41))
33265     +/(1+exp((-3.50378275616244*_SPRIN41)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-3.50378275616244*_SPRIN41)) /(1+exp((-3.50378275616244*_SPRIN41)));
33266     +_RHAT4=_RHAT4+0.0675674361*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT4=_RHAT4+0.0675674361*_tmpLogit;
33267     +if -(-0.68142768864615*_SPRIN42) <= 0
33268     +then _tmpLogit=1/(1+exp(-(-0.68142768864615*_SPRIN42)));
MPRINT(EM_DIAGRAM):   if -(-0.68142768864615*_SPRIN42) <= 0 then _tmpLogit=1/(1+exp(-(-0.68142768864615*_SPRIN42)));
33269     +else _tmpLogit=exp((-0.68142768864615*_SPRIN42))
33270     +/(1+exp((-0.68142768864615*_SPRIN42)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.68142768864615*_SPRIN42)) /(1+exp((-0.68142768864615*_SPRIN42)));
33271     +_RHAT4=_RHAT4+0.0788330005*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT4=_RHAT4+0.0788330005*_tmpLogit;
33272     +if -(0.01804490084237*_SPRIN43) <= 0
33273     +then _tmpLogit=1/(1+exp(-(0.01804490084237*_SPRIN43)));
MPRINT(EM_DIAGRAM):   if -(0.01804490084237*_SPRIN43) <= 0 then _tmpLogit=1/(1+exp(-(0.01804490084237*_SPRIN43)));
33274     +else _tmpLogit=exp((0.01804490084237*_SPRIN43))
33275     +/(1+exp((0.01804490084237*_SPRIN43)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.01804490084237*_SPRIN43)) /(1+exp((0.01804490084237*_SPRIN43)));
33276     +_RHAT4=_RHAT4+-0.201594425*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT4=_RHAT4+-0.201594425*_tmpLogit;
33277     +;
MPRINT(EM_DIAGRAM):   ;
33278     +;
MPRINT(EM_DIAGRAM):   ;
33279     +/**********************************************************/
33280     +* Selected activation function at stage 5 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
33281     +/**********************************************************/
33282     +;
MPRINT(EM_DIAGRAM):   ;
33283     +_RHAT5=1.6036995269
33284     ++-0.79319039901112*COS(0.35522643723722*_SPRIN51*(2/ARCOS(-1)))
33285     ++-0.82284903068383*COS(0.03064693387791*_SPRIN52*(2/ARCOS(-1)))
33286     +;
MPRINT(EM_DIAGRAM):   _RHAT5=1.6036995269 +-0.79319039901112*COS(0.35522643723722*_SPRIN51*(2/ARCOS(-1))) +-0.82284903068383*COS(0.03064693387791*_SPRIN52*(2/ARCOS(-1))) ;
33287     +;
MPRINT(EM_DIAGRAM):   ;
33288     +/**********************************************************/
33289     +* Selected activation function at stage 6 = LOGIST;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = LOGIST;
33290     +/**********************************************************/
33291     +;
MPRINT(EM_DIAGRAM):   ;
33292     +_RHAT6=0.1
33293     +;
MPRINT(EM_DIAGRAM):   _RHAT6=0.1 ;
33294     +if -(-0.1*_SPRIN61) <= 0
33295     +then _tmpLogit=1/(1+exp(-(-0.1*_SPRIN61)));
MPRINT(EM_DIAGRAM):   if -(-0.1*_SPRIN61) <= 0 then _tmpLogit=1/(1+exp(-(-0.1*_SPRIN61)));
33296     +else _tmpLogit=exp((-0.1*_SPRIN61))
33297     +/(1+exp((-0.1*_SPRIN61)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.1*_SPRIN61)) /(1+exp((-0.1*_SPRIN61)));
33298     +_RHAT6=_RHAT6+-0.1*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.1*_tmpLogit;
33299     +if -(0.1*_SPRIN62) <= 0
33300     +then _tmpLogit=1/(1+exp(-(0.1*_SPRIN62)));
MPRINT(EM_DIAGRAM):   if -(0.1*_SPRIN62) <= 0 then _tmpLogit=1/(1+exp(-(0.1*_SPRIN62)));
33301     +else _tmpLogit=exp((0.1*_SPRIN62))
33302     +/(1+exp((0.1*_SPRIN62)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.1*_SPRIN62)) /(1+exp((0.1*_SPRIN62)));
33303     +_RHAT6=_RHAT6+-0.1*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT6=_RHAT6+-0.1*_tmpLogit;
33304     +;
MPRINT(EM_DIAGRAM):   ;
33305     +;
MPRINT(EM_DIAGRAM):   ;
33306     +/**********************************************************/
33307     +* Selected activation function at stage 7 = GAUSS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = GAUSS;
33308     +/**********************************************************/
33309     +;
MPRINT(EM_DIAGRAM):   ;
33310     +_RHAT7=0.1936780186
33311     ++0.04053032681598*exp(-(9.24176504115922*_SPRIN71*9.24176504115922*_SPRIN71))
33312     ++-0.20785410800795*exp(-(0.29311251021882*_SPRIN72*0.29311251021882*_SPRIN72))
33313     +;
MPRINT(EM_DIAGRAM):   _RHAT7=0.1936780186 +0.04053032681598*exp(-(9.24176504115922*_SPRIN71*9.24176504115922*_SPRIN71)) +-0.20785410800795*exp(-(0.29311251021882*_SPRIN72*0.29311251021882*_SPRIN72)) ;
33314     +;
MPRINT(EM_DIAGRAM):   ;
33315     +/**********************************************************/
33316     +* Selected activation function at stage 8 = LOGIST;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = LOGIST;
33317     +/**********************************************************/
33318     +;
MPRINT(EM_DIAGRAM):   ;
33319     +_RHAT8=0.0959411414
33320     +;
MPRINT(EM_DIAGRAM):   _RHAT8=0.0959411414 ;
33321     +if -(-0.46525905235341*_SPRIN81) <= 0
33322     +then _tmpLogit=1/(1+exp(-(-0.46525905235341*_SPRIN81)));
MPRINT(EM_DIAGRAM):   if -(-0.46525905235341*_SPRIN81) <= 0 then _tmpLogit=1/(1+exp(-(-0.46525905235341*_SPRIN81)));
33323     +else _tmpLogit=exp((-0.46525905235341*_SPRIN81))
33324     +/(1+exp((-0.46525905235341*_SPRIN81)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((-0.46525905235341*_SPRIN81)) /(1+exp((-0.46525905235341*_SPRIN81)));
33325     +_RHAT8=_RHAT8+0.1033285648*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+0.1033285648*_tmpLogit;
33326     +if -(2.13410240213739*_SPRIN82) <= 0
33327     +then _tmpLogit=1/(1+exp(-(2.13410240213739*_SPRIN82)));
MPRINT(EM_DIAGRAM):   if -(2.13410240213739*_SPRIN82) <= 0 then _tmpLogit=1/(1+exp(-(2.13410240213739*_SPRIN82)));
33328     +else _tmpLogit=exp((2.13410240213739*_SPRIN82))
33329     +/(1+exp((2.13410240213739*_SPRIN82)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((2.13410240213739*_SPRIN82)) /(1+exp((2.13410240213739*_SPRIN82)));
33330     +_RHAT8=_RHAT8+-0.101630747*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+-0.101630747*_tmpLogit;
33331     +if -(0.31625236500835*_SPRIN83) <= 0
33332     +then _tmpLogit=1/(1+exp(-(0.31625236500835*_SPRIN83)));
MPRINT(EM_DIAGRAM):   if -(0.31625236500835*_SPRIN83) <= 0 then _tmpLogit=1/(1+exp(-(0.31625236500835*_SPRIN83)));
33333     +else _tmpLogit=exp((0.31625236500835*_SPRIN83))
33334     +/(1+exp((0.31625236500835*_SPRIN83)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.31625236500835*_SPRIN83)) /(1+exp((0.31625236500835*_SPRIN83)));
33335     +_RHAT8=_RHAT8+-0.098830155*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+-0.098830155*_tmpLogit;
33336     +if -(0.01058734408671*_SPRIN84) <= 0
33337     +then _tmpLogit=1/(1+exp(-(0.01058734408671*_SPRIN84)));
MPRINT(EM_DIAGRAM):   if -(0.01058734408671*_SPRIN84) <= 0 then _tmpLogit=1/(1+exp(-(0.01058734408671*_SPRIN84)));
33338     +else _tmpLogit=exp((0.01058734408671*_SPRIN84))
33339     +/(1+exp((0.01058734408671*_SPRIN84)));
MPRINT(EM_DIAGRAM):   else _tmpLogit=exp((0.01058734408671*_SPRIN84)) /(1+exp((0.01058734408671*_SPRIN84)));
33340     +_RHAT8=_RHAT8+-0.086531966*_tmpLogit;
MPRINT(EM_DIAGRAM):   _RHAT8=_RHAT8+-0.086531966*_tmpLogit;
33341     +;
MPRINT(EM_DIAGRAM):   ;
33342     +;
MPRINT(EM_DIAGRAM):   ;
33343     +/**********************************************************/
33344     +* Selected activation function at stage 9 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = COS;
33345     +/**********************************************************/
33346     +;
MPRINT(EM_DIAGRAM):   ;
33347     +_RHAT9=0.073209372
33348     ++-0.07686528190743*COS(0.86827538576157*_SPRIN91*(2/ARCOS(-1)))
33349     ++-0.01265860256501*COS(-0.37912517119517*_SPRIN92*(2/ARCOS(-1)))
33350     +;
MPRINT(EM_DIAGRAM):   _RHAT9=0.073209372 +-0.07686528190743*COS(0.86827538576157*_SPRIN91*(2/ARCOS(-1))) +-0.01265860256501*COS(-0.37912517119517*_SPRIN92*(2/ARCOS(-1))) ;
33351     +;
MPRINT(EM_DIAGRAM):   ;
33352     +_tmpPredict
33353     +=_YHAT0
33354     ++_RHAT1
33355     ++_RHAT2
33356     ++_RHAT3
33357     ++_RHAT4
33358     ++_RHAT5
33359     ++_RHAT6
33360     ++_RHAT7
33361     ++_RHAT8
33362     ++_RHAT9
33363     +;
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
33364     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
33365     +If _tmpPredict > 1 then _tmpPredict=1;
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
33366     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
33367     +P_DepVar1=_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
33368     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
33369     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
33370     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
33371     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
33372     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
33373     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
33374     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
33375     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
33376     +end;
MPRINT(EM_DIAGRAM):   end;
33377     +else do;
MPRINT(EM_DIAGRAM):   else do;
33378     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
33379     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
33380     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
33381     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
33382     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
33383     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
33384     +end;
MPRINT(EM_DIAGRAM):   end;
33385     +END;
MPRINT(EM_DIAGRAM):   END;
33386     +;
MPRINT(EM_DIAGRAM):   ;
33387     +DROP _YHAT0
33388     +_RHAT1
33389     +_RHAT2
33390     +_RHAT3
33391     +_RHAT4
33392     +_RHAT5
33393     +_RHAT6
33394     +_RHAT7
33395     +_RHAT8
33396     +_RHAT9
33397     +_tmpLogit
33398     +_tmpPredict
33399     +_S1_ACCEPTEDCMPTOTAL
33400     +_S2_INCOME
33401     +_S3_MNT
33402     +_S4_NUMDISTPURCHASES
33403     +_S5_RFMSTAT
33404     +_S6_RMNTFRQ
33405     +;
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpLogit _tmpPredict _S1_ACCEPTEDCMPTOTAL _S2_INCOME _S3_MNT _S4_NUMDISTPURCHASES _S5_RFMSTAT _S6_RMNTFRQ ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
33406      run;

NOTE: DATA STEP view saved on file EMWS8.DMNEURAL5_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
33407      quit;
33408      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural5_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" _DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong 
Classifications" _DISF_= "Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   label _DFE_= "Train: Degrees of Freedom for Error" _DFT_= "Train: Total Degrees of Freedom" _DFM_= "Train: Model Degrees of Freedom" _MSE_= "Train: Mean Squared Error" _RMSE_= "Train: Root Mean Squared Error" _NW_= "Train: 
Number of Weights" _FPE_ = "Train: Final Prediction Error" _RFPE_ = "Train: Root Final Prediction Error" _AIC_= "Train: Akaike's Information Criterion" _SBC_= "Train: Schwarz's Bayesian Criterion" _ERR_= "Train: Error Function" _AVERR_= "Train: Average 
Error Function";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ _ERR_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="1" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar1<1e-10 then _ERR_+(-2*(1e10*P_DepVar1-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="0" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar0<1e-10 then _ERR_+(-2*(1e10*P_DepVar0-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   _AVERR_=_ERR_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _NW_=82;
MPRINT(CALFITSTATSNOMINAL):   _DFM_=82;
MPRINT(CALFITSTATSNOMINAL):   _DFT_=_DIV_-_NOBS_;
MPRINT(CALFITSTATSNOMINAL):   _DFE_=_DFT_-_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFE_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MSE_=_ASE_ *_DFT_/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RMSE_=sqrt(_MSE_);
MPRINT(CALFITSTATSNOMINAL):   _FPE_ =_ASE_*(_DFT_+_DFM_)/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RFPE_=sqrt(_FPE_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _AIC_=_ERR_+2*_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFT_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _SBC_=_ERR_+_DFM_*log(_DFT_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural5_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" _DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong 
Classifications" _DISF_= "Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural5_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
33468      data _tmpds1_;
MPRINT(EM_DIAGRAM):    data _tmpds1_;
33469      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
33470      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
33471      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
33472      STATISTICS = 'Sum of Square Errors';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Sum of Square Errors';
33473      KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
33474      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
33475      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
33476      Label _MEAN_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _MEAN_ = "Statistic";
33477      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
33478      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
33479      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
33480      rename _MEAN_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _MEAN_ = VALUE;
33481      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 122 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._TMPDS1_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

33482      data _tmpds2_;
MPRINT(EM_DIAGRAM):   data _tmpds2_;
33483      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
33484      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
33485      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
33486      STATISTICS = 'Accuracy Percent';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Accuracy Percent';
33487      KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
33488      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
33489      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
33490      Label _STDEV_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _STDEV_ = "Statistic";
33491      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
33492      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
33493      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
33494      rename _STDEV_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _STDEV_ = VALUE;
33495      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 122 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._TMPDS2_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33496      data EMWS8.DMNeural5_PLOTSTAGE;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_PLOTSTAGE;
33497      set _tmpds1_ _tmpds2_;
MPRINT(EM_DIAGRAM):   set _tmpds1_ _tmpds2_;
33498      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 80 observations read from the data set WORK._TMPDS1_.
NOTE: There were 80 observations read from the data set WORK._TMPDS2_.
NOTE: The data set EMWS8.DMNEURAL5_PLOTSTAGE has 160 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
33499      *------------------------------------------------------------*;
33500      * DMNeural5: Computing metadata for TRAIN data;
33501      *------------------------------------------------------------*;

NOTE: View EMWS8.DMNEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.DMNeural5_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.DMNeural5_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.DMNeural5_TRAIN out=WORK.M0W4XI6X noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0W4XI6X;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0W4XI6X(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0W4XI6X;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0W4XI6X;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1_7UA7N NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_7UA7N;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_7UA7N;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3IXLQAB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_7UA7N;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_7UA7N;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_7UA7N;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" 
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1_7UA7N;
MPRINT(EMADVISECOLUMNS):   set WORK.M1_7UA7N;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower 
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "DMNeural5";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "DMNeural5";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
33813      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
33814      set EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMINFO;
33815      where DATA='DMNeural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='DMNeural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
33816      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
      WHERE (DATA='DMNeural5') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

33817      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMINFO;
33818      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
33819      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
33820      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
33824      run;
33825      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMINFO;
33826      set EMWS8.DMNeural5_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMINFO WORK.MODELTEMP_INFO;
33827      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

33828      proc sort data = EMWS8.DMNeural5_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.DMNeural5_EMINFO NOTHREADS;
33829      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
33830      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33831      proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
33832      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
33833      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

33834      proc sort data = EMWS8.DMNeural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.DMNeural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
33835      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
33836      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33837      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMINFO;
33838      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
33839      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
33840      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

33841      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
33842      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
33843      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
33844      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.DMNEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.DMNEURAL5_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
