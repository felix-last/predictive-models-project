*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                15.48 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                15.48 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2KV9932 "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2KV9932 new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
52728      proc freq data=EMWS8.DMNeural5_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.DMNeural5_VariableSet noprint;
52729      table ROLE*LEVEL/out=WORK.DMNeural5META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.DMNeural5META;
52730      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL5_VARIABLESET.
NOTE: The data set WORK.DMNEURAL5META has 2 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
52731      proc print data=WORK.DMNeural5META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.DMNeural5META label noobs;
52732      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
52733      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
52734      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
52735      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
52736      run;
 
NOTE: There were 2 observations read from the data set WORK.DMNEURAL5META.
NOTE: The PROCEDURE PRINT printed page 49.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52737      title10;
MPRINT(EM_DIAGRAM):   title10;
52738      %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN
EMWS8.Varsel_TRAIN EMWS8.Varsel_TRAIN EMWS8 Varsel_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Varsel_TRAIN classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural5_DepVar_DD _TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural5_DepVar_DD out=EMWS8.DMNeural5_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
52785      data WORK.DMNeural5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.DMNeural5_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
52786      length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
52787      label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))" EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS = "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
52788         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER = "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels" LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
52789      set EMWS8.DMNEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.DMNEURAL5_DEPVAR_DM( where=(_TYPE_="TARGET"));
52790      NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
52791      select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
52792      when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
52793      when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
52794      when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
52795      when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
52796      otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
52797      end;
MPRINT(EM_DIAGRAM):   end;
52798      output;
MPRINT(EM_DIAGRAM):   output;
52799      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL5_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.DMNEURAL5_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
52800      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
52801      proc print data=WORK.DMNeural5_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.DMNeural5_EVENT noobs label;
52802      var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
52803      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
52804      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
52805      run;
 
NOTE: There were 1 observations read from the data set WORK.DMNEURAL5_EVENT.
NOTE: The PROCEDURE PRINT printed page 50.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52806      title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
52807      proc print data = EMWS8.DMNeural5_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.DMNeural5_DepVar_DM noobs label;
52808      var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
52809      where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
52810      label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))" VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
52811      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
52812      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
52813      run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL5_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 51.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52814      title10;
MPRINT(EM_DIAGRAM):   title10;
52815      data WORK.M38W2NDB;
MPRINT(EM_DIAGRAM):    data WORK.M38W2NDB;
52816      set WORK.M38W2NDB;
MPRINT(EM_DIAGRAM):   set WORK.M38W2NDB;
52817      if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
52818      role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
52819      output;
MPRINT(EM_DIAGRAM):   output;
52820      end;
MPRINT(EM_DIAGRAM):   end;
52821      if role = 'INPUT' and use in ('Y','D') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D') then do;
52822      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
52823      output;
MPRINT(EM_DIAGRAM):   output;
52824      end;
MPRINT(EM_DIAGRAM):   end;
52825      if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
52826      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
52827      output;
MPRINT(EM_DIAGRAM):   output;
52828      end;
MPRINT(EM_DIAGRAM):   end;
52829      if role = 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' then do;
52830      role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
52831      output;
MPRINT(EM_DIAGRAM):   output;
52832      end;
MPRINT(EM_DIAGRAM):   end;
52833      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.M38W2NDB.
NOTE: The data set WORK.M38W2NDB has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52834      data WORK.M38W2NDB;
MPRINT(EM_DIAGRAM):    data WORK.M38W2NDB;
52835      set WORK.M38W2NDB end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M38W2NDB end=eof;
52836      output;
MPRINT(EM_DIAGRAM):   output;
52837      if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
52838      NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
52839      ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
52840      LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
52841      TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
52842      output;
MPRINT(EM_DIAGRAM):   output;
52843      end;
MPRINT(EM_DIAGRAM):   end;
52844      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK.M38W2NDB.
NOTE: The data set WORK.M38W2NDB has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL5_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
52845      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
52846      * DMNeural5: Create decision matrix;
MPRINT(EM_DIAGRAM):   * DMNeural5: Create decision matrix;
52847      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
52848      data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
52849        length   DepVar                           $  32
52850                 COUNT                                8
52851                 DATAPRIOR                            8
52852                 TRAINPRIOR                           8
52853                 DECPRIOR                             8
52854                 DECISION1                            8
52855                 DECISION2                            8
52856                 ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1 8 DECISION2 8 ;
52857
52858        label    COUNT="Level Counts"
52859                 DATAPRIOR="Data Proportions"
52860                 TRAINPRIOR="Training Proportions"
52861                 DECPRIOR="Decision Priors"
52862                 DECISION1="1"
52863                 DECISION2="0"
52864                 ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR= "Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
52865        format   COUNT 10.
52866                 ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
52867      DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556; DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
52868      output;
MPRINT(EM_DIAGRAM):   output;
52869      DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443; DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
52870      output;
MPRINT(EM_DIAGRAM):   output;
52871      ;
MPRINT(EM_DIAGRAM):   ;
52872      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52873      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
52874      modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
52875      label DECISION1= '1';
52876      label DECISION2= '0';
52877      run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
52878      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * DMNeural5: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
52879      *------------------------------------------------------------* ;
52880      * DMNeural5: DMDBClass Macro ;
52881      *------------------------------------------------------------* ;
52882      %macro DMDBClass;
52883          DepVar(DESC)
52884      %mend DMDBClass;
52885      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
52886      * DMNeural5: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * DMNeural5: DMDBVar Macro ;
52887      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
52888      %macro DMDBVar;
52889          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
52890      %mend DMDBVar;
52891      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
52892      * DMNeural5: Create DMDB;
MPRINT(EM_DIAGRAM):   * DMNeural5: Create DMDB;
52893      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
52894      proc dmdb batch data=EMWS8.Varsel_TRAIN
52895      dmdbcat=WORK.DMNeural5_DMDB
52896      maxlevel = 513
52897      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Varsel_TRAIN dmdbcat=WORK.DMNeural5_DMDB maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
52898      class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
52899      var %DMDBVar;
MPRINT(DMDBVAR):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
52900      target
52901      DepVar
52902      ;
MPRINT(EM_DIAGRAM):   target DepVar ;
52903      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _WARN_ is uninitialized.
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
52904      quit;
52905      *--- end code ---*;
 
52906      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
52907      * DMNeural5: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * DMNeural5: Input Variables Macro ;
52908      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
52909      %macro INPUTS;
52910          AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
52911      %mend INPUTS;
52912      proc dmneurl data=EMWS8.Varsel_TRAIN dmdbcat=WORK.DMNeural5_DMDB
52913      outest=EMWS8.DMNeural5_ESTIMATE outfit=WORK._OUTFIT_DMNEURAL
52914      out=WORK._OUT_DMNEURAL outclass=WORK._OUTCLASSDMNEURL_0XME2PI
52915      optcrit=ACC maxcomp=6 maxstage=10 maxfunc=1000
52916      selcrit=SSE
52917      maxiter=400 maxvect=800 memsiz=8 stopr2=0.00005 cutoff=0.5 maxrows = 3000
52918      absgconv=0.0005 gconv=1E-8
52919      NOMONITOR
52920      ;
MPRINT(EM_DIAGRAM):   proc dmneurl data=EMWS8.Varsel_TRAIN dmdbcat=WORK.DMNeural5_DMDB outest=EMWS8.DMNeural5_ESTIMATE outfit=WORK._OUTFIT_DMNEURAL out=WORK._OUT_DMNEURAL outclass=WORK._OUTCLASSDMNEURL_0XME2PI optcrit=ACC maxcomp=6 maxstage=10
maxfunc=1000 selcrit=SSE maxiter=400 maxvect=800 memsiz=8 stopr2=0.00005 cutoff=0.5 maxrows = 3000 absgconv=0.0005 gconv=1E-8 NOMONITOR ;
MPRINT(EM_DIAGRAM):   var
52921      var %INPUTS;
MPRINT(INPUTS):   AcceptedCmpTotal Mnt MntMeatProducts NumCatalogPurchases RFMstat Recency
MPRINT(EM_DIAGRAM):  ;
52922      target DepVar;
MPRINT(EM_DIAGRAM):   target DepVar;
52923      ;
MPRINT(EM_DIAGRAM):   ;
52924      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._OUTCLASSDMNEURL_0XME2PI has 2 observations and 3 variables.
 
Building X'X  for target: DepVar rows=7 memory=0.00 meg.
NOTE: Variable _WARN_ is uninitialized.
2374 records read
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=265
NOTE: Sparsity  Percentage=0.0356861024
     ---------- Optimization Cycle (Stage=0) ----------
-------------------- Activation= SQUARE (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SQUARE: Iter=8 Crit=0.04008523: SSE=380.649387 Acc= 89.5956
-------------------- Activation= TANH (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=25 Crit=0.03994798: SSE= 379.34601 Acc= 89.3850
-------------------- Activation= ARCTAN (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: ARCTAN: Iter=26 Crit=0.03992444: SSE=379.122452 Acc= 89.3850
-------------------- Activation= LOGIST (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: LOGIST: Iter=7 Crit=0.04553152: SSE=432.367301 Acc= 87.9528
-------------------- Activation= GAUSS (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=5.
NOTE: GAUSS: Iter=71 Crit= 0.0519464: SSE=493.282999 Acc= 86.6470
-------------------- Activation= SIN (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: SIN: Iter=18 Crit=0.04003577: SSE=  380.1797 Acc= 89.2586
-------------------- Activation= COS (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: COS: Iter=5 Crit=0.05109258: SSE=485.175153 Acc= 87.4895
-------------------- Activation= EXP (Stage=0) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: EXP: Iter=9 Crit=0.04513546: SSE=428.606344 Acc= 88.6268
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=367
NOTE: Sparsity  Percentage=0.0494218851
2374 records read
     ---------- Optimization Cycle (Stage=1) ----------
-------------------- Activation= SQUARE (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03738732: SSE=353.931718 Acc= 89.6377
-------------------- Activation= TANH (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=6 Crit= 0.0376788: SSE=357.394109 Acc= 89.7641
-------------------- Activation= ARCTAN (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=6 Crit=0.03767267: SSE=357.350695 Acc= 89.7220
-------------------- Activation= LOGIST (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=2 Crit= 0.0376641: SSE=357.232855 Acc= 89.7220
-------------------- Activation= GAUSS (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=7 Crit=0.03734132: SSE=353.787206 Acc= 89.7641
-------------------- Activation= SIN (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SIN: Iter=5 Crit=0.03773876: SSE=358.121499 Acc= 89.6799
-------------------- Activation= COS (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: COS: Iter=4 Crit= 0.0374861: SSE= 355.36195 Acc= 89.8484
-------------------- Activation= EXP (Stage=1) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=3 Crit=0.03760441: SSE=356.526685 Acc= 89.6377
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=279
NOTE: Sparsity  Percentage=0.4884282763
2374 records read
     ---------- Optimization Cycle (Stage=2) ----------
-------------------- Activation= SQUARE (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03681336: SSE=347.672965 Acc= 89.7641
-------------------- Activation= TANH (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=3 Crit=0.03678566: SSE=347.470776 Acc= 89.8484
-------------------- Activation= ARCTAN (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=4 Crit=0.03679955: SSE=347.767852 Acc= 89.8062
-------------------- Activation= LOGIST (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=2 Crit=0.03682482: SSE=347.820596 Acc= 89.8484
-------------------- Activation= GAUSS (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: GAUSS: Iter=1 Crit=0.03731253: SSE=353.368605 Acc= 89.8484
-------------------- Activation= SIN (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SIN: Iter=4 Crit=0.03683472: SSE=347.647917 Acc= 89.7220
-------------------- Activation= COS (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=3.
NOTE: COS: Iter=5 Crit=0.03730218: SSE=353.288841 Acc= 89.8905
-------------------- Activation= EXP (Stage=2) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=2 Crit=0.03683728: SSE=348.036507 Acc= 89.8062
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=115
NOTE: Sparsity  Percentage=34.023668639
2374 records read
     ---------- Optimization Cycle (Stage=3) ----------
-------------------- Activation= SQUARE (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03688279: SSE= 348.64173 Acc= 89.8484
-------------------- Activation= TANH (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=5 Crit=0.03689561: SSE=348.888843 Acc= 89.8062
-------------------- Activation= ARCTAN (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=4 Crit=0.03691629: SSE=349.246893 Acc= 89.8062
-------------------- Activation= LOGIST (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=1 Crit= 0.0369244: SSE=349.318089 Acc= 89.7641
-------------------- Activation= GAUSS (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: GAUSS: Iter=6 Crit= 0.0368938: SSE=349.006004 Acc= 89.8062
-------------------- Activation= SIN (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=4 Crit=0.03691827: SSE=349.277386 Acc= 89.8062
-------------------- Activation= COS (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: COS: Iter=4 Crit=0.03693149: SSE=349.543826 Acc= 89.7641
-------------------- Activation= EXP (Stage=3) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit=0.03692675: SSE=349.526373 Acc= 89.8484
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=42
NOTE: Sparsity  Percentage=12.426035503
2374 records read
     ---------- Optimization Cycle (Stage=4) ----------
-------------------- Activation= SQUARE (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03685291: SSE=348.264913 Acc= 89.7641
-------------------- Activation= TANH (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=4 Crit=0.03684993: SSE=348.317997 Acc= 89.7641
-------------------- Activation= ARCTAN (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=4 Crit=0.03685332: SSE=348.378027 Acc= 89.7641
-------------------- Activation= LOGIST (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=1 Crit=0.03685505: SSE=348.339465 Acc= 89.7641
-------------------- Activation= GAUSS (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=4 Crit=0.03685313: SSE=348.275397 Acc= 89.7220
-------------------- Activation= SIN (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=4 Crit=0.03682003: SSE= 347.78428 Acc= 89.7641
-------------------- Activation= COS (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: COS: Iter=4 Crit=0.03677026: SSE=347.494398 Acc= 89.9326
-------------------- Activation= EXP (Stage=4) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit=0.03686007: SSE=348.335544 Acc= 89.8062
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=81
NOTE: Sparsity  Percentage=1.8434228493
2374 records read
     ---------- Optimization Cycle (Stage=5) ----------
-------------------- Activation= SQUARE (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03674271: SSE=347.123058 Acc= 89.9747
-------------------- Activation= TANH (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=3 Crit=0.03677149: SSE=347.350412 Acc= 89.9326
-------------------- Activation= ARCTAN (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=5 Crit=0.03677127: SSE=347.361372 Acc= 89.9326
-------------------- Activation= LOGIST (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=1 Crit=0.03684284: SSE=347.491732 Acc= 89.7220
-------------------- Activation= GAUSS (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=3 Crit=0.03675778: SSE=347.364827 Acc= 89.9326
-------------------- Activation= SIN (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SIN: Iter=3 Crit=0.03676701: SSE=347.486798 Acc= 89.8905
-------------------- Activation= COS (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: COS: Iter=5 Crit=0.03675788: SSE=347.371833 Acc= 89.9326
-------------------- Activation= EXP (Stage=5) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit= 0.0367802: SSE= 347.41066 Acc= 89.8905
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=42
NOTE: Sparsity  Percentage=12.426035503
2374 records read
     ---------- Optimization Cycle (Stage=6) ----------
-------------------- Activation= SQUARE (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03674026: SSE=347.013369 Acc= 89.8905
-------------------- Activation= TANH (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=4 Crit=0.03674683: SSE=347.182895 Acc= 89.9326
-------------------- Activation= ARCTAN (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=4 Crit=0.03674864: SSE=347.262774 Acc= 89.9326
-------------------- Activation= LOGIST (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=0 Crit= 0.0367485: SSE=347.166857 Acc= 89.8905
-------------------- Activation= GAUSS (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=7 Crit=0.03671875: SSE=346.913145 Acc= 89.8905
-------------------- Activation= SIN (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: SIN: Iter=3 Crit=0.03674831: SSE=347.264386 Acc= 89.9326
-------------------- Activation= COS (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: COS: Iter=5 Crit=0.03665158: SSE=346.053652 Acc= 89.9326
-------------------- Activation= EXP (Stage=6) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: EXP: Iter=3 Crit=0.03674911: SSE=347.277981 Acc= 89.9747
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=42
NOTE: Sparsity  Percentage=12.426035503
2374 records read
     ---------- Optimization Cycle (Stage=7) ----------
-------------------- Activation= SQUARE (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03669398: SSE=346.453231 Acc= 89.9326
-------------------- Activation= TANH (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: TANH: Iter=5 Crit=0.03669925: SSE=346.604767 Acc= 89.9326
-------------------- Activation= ARCTAN (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: ARCTAN: Iter=5 Crit= 0.0367031: SSE=346.722551 Acc= 89.9326
-------------------- Activation= LOGIST (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=0 Crit=0.03670864: SSE=346.696119 Acc= 89.9747
-------------------- Activation= GAUSS (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: GAUSS: Iter=6 Crit=0.03671577: SSE=346.872863 Acc= 89.9326
-------------------- Activation= SIN (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=3 Crit=0.03670204: SSE=346.629037 Acc= 89.9747
-------------------- Activation= COS (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: COS: Iter=5 Crit=0.03671648: SSE=346.850986 Acc= 89.9326
-------------------- Activation= EXP (Stage=7) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=3 Crit=0.03670569: SSE=346.749537 Acc= 89.9326
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=62
NOTE: Sparsity  Percentage=18.343195266
2374 records read
     ---------- Optimization Cycle (Stage=8) ----------
-------------------- Activation= SQUARE (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03662112: SSE=345.279021 Acc= 90.0168
-------------------- Activation= TANH (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: TANH: Iter=3 Crit=0.03661968: SSE=   345.277 Acc= 89.9747
-------------------- Activation= ARCTAN (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=3 Crit=0.03662623: SSE=345.381017 Acc= 90.0168
-------------------- Activation= LOGIST (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: LOGIST: Iter=0 Crit=0.03668142: SSE=346.325152 Acc= 89.8484
-------------------- Activation= GAUSS (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=2.
NOTE: GAUSS: Iter=4 Crit=0.03669876: SSE=346.380813 Acc= 89.8484
-------------------- Activation= SIN (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=4 Crit=0.03663342: SSE= 345.51174 Acc= 90.0590
-------------------- Activation= COS (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: Singular Hessian at result, nullity=1.
NOTE: COS: Iter=5 Crit=0.03668887: SSE=346.384386 Acc= 89.8484
-------------------- Activation= EXP (Stage=8) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit=0.03664916: SSE=  345.9215 Acc= 89.9747
2374 records read
2374 records read
2374 records read
2374 records read
NOTE: Distinctive Patterns=62
NOTE: Sparsity  Percentage=18.343195266
2374 records read
     ---------- Optimization Cycle (Stage=9) ----------
-------------------- Activation= SQUARE (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=1 Crit=0.03666571: SSE=345.603682 Acc= 90.0590
-------------------- Activation= TANH (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: TANH: Iter=3 Crit= 0.0366768: SSE=345.755303 Acc= 90.1853
-------------------- Activation= ARCTAN (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=3 Crit=0.03667983: SSE= 345.82665 Acc= 90.1432
-------------------- Activation= LOGIST (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=1 Crit=0.03668041: SSE=345.819166 Acc= 90.1432
-------------------- Activation= GAUSS (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: GAUSS: Iter=11 Crit=0.03657881: SSE=344.894439 Acc= 90.1011
-------------------- Activation= SIN (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: SIN: Iter=2 Crit=0.03668085: SSE=345.908397 Acc= 90.1432
-------------------- Activation= COS (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: COS: Iter=5 Crit=0.03667788: SSE=345.993509 Acc= 89.9747
-------------------- Activation= EXP (Stage=9) --------------------
NOTE: ABSGCONV convergence criterion satisfied.
NOTE: EXP: Iter=1 Crit=0.03668606: SSE=346.043858 Acc= 90.1853
     ---------- Optimization Cycle (Stage=9) ----------
-------------------- Activation= SQUARE (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: SQUARE: Iter=17 Crit=9.43555181: SSE=359.204417 Acc= 90.5644
-------------------- Activation= TANH (Stage=9) --------------------
NOTE: ABSCONV convergence criterion satisfied.
NOTE: TANH: Iter=4 Crit= 9.8146588: SSE=345.755303 Acc= 90.1853
-------------------- Activation= ARCTAN (Stage=9) --------------------
NOTE: ABSCONV convergence criterion satisfied.
NOTE: ARCTAN: Iter=5 Crit= 9.7725358: SSE=345.932714 Acc= 90.2275
-------------------- Activation= LOGIST (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: LOGIST: Iter=9 Crit= 9.7725358: SSE=346.046118 Acc= 90.2275
-------------------- Activation= GAUSS (Stage=9) --------------------
NOTE: FCONV2 convergence criterion satisfied.
NOTE: GAUSS: Iter=6 Crit=9.68828981: SSE=345.239759 Acc= 90.3117
-------------------- Activation= SIN (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: SIN: Iter=11 Crit=9.51979781: SSE= 349.30108 Acc= 90.4802
-------------------- Activation= COS (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: COS: Iter=10 Crit= 9.8567818: SSE=346.380715 Acc= 90.1432
-------------------- Activation= EXP (Stage=9) --------------------
NOTE: FCONV convergence criterion satisfied.
NOTE: EXP: Iter=11 Crit= 9.8146588: SSE=346.043858 Acc= 90.1853
2374 records read
NOTE: The data set EMWS8.DMNEURAL5_ESTIMATE has 115 observations and 19 variables.
2374 records read
NOTE: The data set WORK._OUT_DMNEURAL has 2374 observations and 4 variables.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 11 observations and 9 variables.
*** Total Number of Runs through Data :       52
*** Total Number of NL Optimizations  :       88
*** Total Number of Iterations in NLP :      472
*** Total Number Function Calls in NLP:     1797
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           4.56 seconds
      cpu time            4.36 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The PROCEDURE DMNEURL printed pages 52-85.
NOTE: PROCEDURE DMNEURL used (Total process time):
      real time           4.57 seconds
      cpu time            4.36 seconds
 
 
52925      data WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):    data WORK._OUTFIT_DMNEURAL;
52926      set WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   set WORK._OUTFIT_DMNEURAL;
52927      if _TYPE_^='_FITIND_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_FITIND_' then delete;
52928      label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   label _STAGE_ = "Training Stage";
52929      _STAGE_=_STAGE_-1;
MPRINT(EM_DIAGRAM):   _STAGE_=_STAGE_-1;
 
NOTE: There were 11 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 10 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52930      proc transpose data=WORK._OUTFIT_DMNEURAL out=WORK._OUTFIT_DMNEURAL prefix=TRAINING;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._OUTFIT_DMNEURAL out=WORK._OUTFIT_DMNEURAL prefix=TRAINING;
 
NOTE: There were 10 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 6 observations and 12 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52931      data WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   data WORK._OUTFIT_DMNEURAL;
52932      set WORK._OUTFIT_DMNEURAL;
MPRINT(EM_DIAGRAM):   set WORK._OUTFIT_DMNEURAL;
52933      label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Statistic";
52934      label _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_statlabel, noquote))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label of Statistic";
52935      rename _NAME_=STATISTIC;
MPRINT(EM_DIAGRAM):   rename _NAME_=STATISTIC;
52936      rename _LABEL_=LABEL;
MPRINT(EM_DIAGRAM):   rename _LABEL_=LABEL;
52937      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._OUTFIT_DMNEURAL.
NOTE: The data set WORK._OUTFIT_DMNEURAL has 6 observations and 12 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52938      data WORK._DSSTAGEDMNEURL_0XME2PI;
MPRINT(EM_DIAGRAM):    data WORK._DSSTAGEDMNEURL_0XME2PI;
52939      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
52940      by _STAGE_;
MPRINT(EM_DIAGRAM):   by _STAGE_;
52941      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
52942      keep _STAGE_ _NAME_;
MPRINT(EM_DIAGRAM):   keep _STAGE_ _NAME_;
52943      if FIRST._STAGE_ then output;
MPRINT(EM_DIAGRAM):   if FIRST._STAGE_ then output;
52944      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._DSSTAGEDMNEURL_0XME2PI has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52945      data WORK._DSSTDMEANDMNEURL_0XME2PI;
MPRINT(EM_DIAGRAM):    data WORK._DSSTDMEANDMNEURL_0XME2PI;
52946      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
52947      if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_STDEV_' or _TYPE_='_MEAN_' then output;
52948      DROP _TARGET_ _NAME_ _STAGE_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   DROP _TARGET_ _NAME_ _STAGE_ _MEAN_ _STDEV_;
52949      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._DSSTDMEANDMNEURL_0XME2PI has 2 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52950      data WORK._DSPARADMNEURL_0XME2PI;
MPRINT(EM_DIAGRAM):    data WORK._DSPARADMNEURL_0XME2PI;
52951      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
52952      if _TYPE_='_PARMS_' then if _STAGE_=0 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=0 then output;
52953      if _TYPE_='_PARMS_' then if _STAGE_=1 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=1 then output;
52954      if _TYPE_='_PARMS_' then if _STAGE_=2 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=2 then output;
52955      if _TYPE_='_PARMS_' then if _STAGE_=3 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=3 then output;
52956      if _TYPE_='_PARMS_' then if _STAGE_=4 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=4 then output;
52957      if _TYPE_='_PARMS_' then if _STAGE_=5 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=5 then output;
52958      if _TYPE_='_PARMS_' then if _STAGE_=6 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=6 then output;
52959      if _TYPE_='_PARMS_' then if _STAGE_=7 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=7 then output;
52960      if _TYPE_='_PARMS_' then if _STAGE_=8 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=8 then output;
52961      if _TYPE_='_PARMS_' then if _STAGE_=9 then output;
MPRINT(EM_DIAGRAM):   if _TYPE_='_PARMS_' then if _STAGE_=9 then output;
52962      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._DSPARADMNEURL_0XME2PI has 80 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52963      data WORK._DSPARADMNEURL_0XME2PI;
MPRINT(EM_DIAGRAM):    data WORK._DSPARADMNEURL_0XME2PI;
52964      set WORK._DSPARADMNEURL_0XME2PI;
MPRINT(EM_DIAGRAM):   set WORK._DSPARADMNEURL_0XME2PI;
52965      by _STAGE_;
MPRINT(EM_DIAGRAM):   by _STAGE_;
52966      if FIRST._STAGE_ then output;
MPRINT(EM_DIAGRAM):   if FIRST._STAGE_ then output;
52967      DROP _TARGET_ _TYPE_ _MEAN_ _STDEV_ _NAME_ _STAGE_;
MPRINT(EM_DIAGRAM):   DROP _TARGET_ _TYPE_ _MEAN_ _STDEV_ _NAME_ _STAGE_;
 
NOTE: There were 80 observations read from the data set WORK._DSPARADMNEURL_0XME2PI.
NOTE: The data set WORK._DSPARADMNEURL_0XME2PI has 10 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52968      proc transpose data=WORK._DSPARADMNEURL_0XME2PI out=WORK._DSPARADMNEURL_0XME2PI prefix=STAGE;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._DSPARADMNEURL_0XME2PI out=WORK._DSPARADMNEURL_0XME2PI prefix=STAGE;
 
NOTE: There were 10 observations read from the data set WORK._DSPARADMNEURL_0XME2PI.
NOTE: The data set WORK._DSPARADMNEURL_0XME2PI has 13 observations and 11 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52969      proc transpose data=WORK._DSPARADMNEURL_0XME2PI out=WORK._DSPARADMNEURL_0XME2PI prefix=PARA;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._DSPARADMNEURL_0XME2PI out=WORK._DSPARADMNEURL_0XME2PI prefix=PARA;
52970      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._DSPARADMNEURL_0XME2PI.
NOTE: The data set WORK._DSPARADMNEURL_0XME2PI has 10 observations and 14 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52971      data WORK._OUTCLASSDMNEURL_0XME2PI;
MPRINT(EM_DIAGRAM):    data WORK._OUTCLASSDMNEURL_0XME2PI;
52972      set WORK._OUTCLASSDMNEURL_0XME2PI;
MPRINT(EM_DIAGRAM):   set WORK._OUTCLASSDMNEURL_0XME2PI;
52973      if upcase(_VAR_)=upcase('DepVar') then delete;
MPRINT(EM_DIAGRAM):   if upcase(_VAR_)=upcase('DepVar') then delete;
52974      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._OUTCLASSDMNEURL_0XME2PI.
NOTE: The data set WORK._OUTCLASSDMNEURL_0XME2PI has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52975      data WORK._SPRIN0;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN0;
52976      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
52977      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
52978      if _STAGE_ ^='0' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='0' then delete;
52979      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      52978:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN0 has 5 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52980      proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0 prefix=_SPRIN0;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0 prefix=_SPRIN0;
 
NOTE: There were 5 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 13 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52981      data WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN0;
52982      set WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN0;
52983      if _SPRIN01=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN01=. then delete;
52984      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52985      proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN0 out=WORK._SPRIN0;
52986      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN0.
NOTE: The data set WORK._SPRIN0 has 5 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
52987      data WORK._SPRIN1;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN1;
52988      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
52989      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
52990      if _STAGE_ ^='1' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='1' then delete;
52991      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      52990:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN1 has 5 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52992      proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1 prefix=_SPRIN1;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1 prefix=_SPRIN1;
 
NOTE: There were 5 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 13 observations and 6 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52993      data WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN1;
52994      set WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN1;
52995      if _SPRIN11=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN11=. then delete;
52996      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 6 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
52997      proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN1 out=WORK._SPRIN1;
52998      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN1.
NOTE: The data set WORK._SPRIN1 has 5 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
52999      data WORK._SPRIN2;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN2;
53000      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53001      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53002      if _STAGE_ ^='2' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='2' then delete;
53003      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53002:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN2 has 4 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53004      proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2 prefix=_SPRIN2;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2 prefix=_SPRIN2;
 
NOTE: There were 4 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 13 observations and 5 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53005      data WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN2;
53006      set WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN2;
53007      if _SPRIN21=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN21=. then delete;
53008      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53009      proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN2 out=WORK._SPRIN2;
53010      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN2.
NOTE: The data set WORK._SPRIN2 has 4 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53011      data WORK._SPRIN3;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN3;
53012      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53013      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53014      if _STAGE_ ^='3' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='3' then delete;
53015      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53014:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN3 has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53016      proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3 prefix=_SPRIN3;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3 prefix=_SPRIN3;
 
NOTE: There were 2 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
53017      data WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN3;
53018      set WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN3;
53019      if _SPRIN31=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN31=. then delete;
53020      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53021      proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN3 out=WORK._SPRIN3;
53022      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN3.
NOTE: The data set WORK._SPRIN3 has 2 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53023      data WORK._SPRIN4;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN4;
53024      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53025      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53026      if _STAGE_ ^='4' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='4' then delete;
53027      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53026:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN4 has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53028      proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4 prefix=_SPRIN4;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4 prefix=_SPRIN4;
 
NOTE: There were 2 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53029      data WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN4;
53030      set WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN4;
53031      if _SPRIN41=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN41=. then delete;
53032      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53033      proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN4 out=WORK._SPRIN4;
53034      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN4.
NOTE: The data set WORK._SPRIN4 has 2 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53035      data WORK._SPRIN5;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN5;
53036      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53037      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53038      if _STAGE_ ^='5' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='5' then delete;
53039      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53038:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN5 has 3 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53040      proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5 prefix=_SPRIN5;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5 prefix=_SPRIN5;
 
NOTE: There were 3 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 13 observations and 4 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53041      data WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN5;
53042      set WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN5;
53043      if _SPRIN51=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN51=. then delete;
53044      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53045      proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN5 out=WORK._SPRIN5;
53046      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN5.
NOTE: The data set WORK._SPRIN5 has 3 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53047      data WORK._SPRIN6;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN6;
53048      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53049      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53050      if _STAGE_ ^='6' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='6' then delete;
53051      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53050:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN6 has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53052      proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6 prefix=_SPRIN6;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6 prefix=_SPRIN6;
 
NOTE: There were 2 observations read from the data set WORK._SPRIN6.
NOTE: The data set WORK._SPRIN6 has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53053      data WORK._SPRIN6;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN6;
53054      set WORK._SPRIN6;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN6;
53055      if _SPRIN61=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN61=. then delete;
53056      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN6.
NOTE: The data set WORK._SPRIN6 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53057      proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN6 out=WORK._SPRIN6;
53058      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN6.
NOTE: The data set WORK._SPRIN6 has 2 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53059      data WORK._SPRIN7;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN7;
53060      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53061      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53062      if _STAGE_ ^='7' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='7' then delete;
53063      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53062:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN7 has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53064      proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7 prefix=_SPRIN7;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7 prefix=_SPRIN7;
 
NOTE: There were 2 observations read from the data set WORK._SPRIN7.
NOTE: The data set WORK._SPRIN7 has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53065      data WORK._SPRIN7;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN7;
53066      set WORK._SPRIN7;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN7;
53067      if _SPRIN71=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN71=. then delete;
53068      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN7.
NOTE: The data set WORK._SPRIN7 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53069      proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN7 out=WORK._SPRIN7;
53070      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN7.
NOTE: The data set WORK._SPRIN7 has 2 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53071      data WORK._SPRIN8;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN8;
53072      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53073      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53074      if _STAGE_ ^='8' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='8' then delete;
53075      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53074:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN8 has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53076      proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8 prefix=_SPRIN8;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8 prefix=_SPRIN8;
 
NOTE: There were 2 observations read from the data set WORK._SPRIN8.
NOTE: The data set WORK._SPRIN8 has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53077      data WORK._SPRIN8;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN8;
53078      set WORK._SPRIN8;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN8;
53079      if _SPRIN81=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN81=. then delete;
53080      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN8.
NOTE: The data set WORK._SPRIN8 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53081      proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN8 out=WORK._SPRIN8;
53082      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN8.
NOTE: The data set WORK._SPRIN8 has 2 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53083      data WORK._SPRIN9;
MPRINT(EM_DIAGRAM):    data WORK._SPRIN9;
53084      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
53085      if _TYPE_^='_EIGVEC_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_^='_EIGVEC_' then delete;
53086      if _STAGE_ ^='9' then delete;
MPRINT(EM_DIAGRAM):   if _STAGE_ ^='9' then delete;
53087      drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
MPRINT(EM_DIAGRAM):   drop _TARGET_ _TYPE_ _STAGE_ _NAME_ _MEAN_ _STDEV_;
 
NOTE: Character values have been converted to numeric values at the places given by: (Line):(Column).
      53086:14
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._SPRIN9 has 2 observations and 13 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53088      proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9 prefix=_SPRIN9;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9 prefix=_SPRIN9;
 
NOTE: There were 2 observations read from the data set WORK._SPRIN9.
NOTE: The data set WORK._SPRIN9 has 13 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
53089      data WORK._SPRIN9;
MPRINT(EM_DIAGRAM):   data WORK._SPRIN9;
53090      set WORK._SPRIN9;
MPRINT(EM_DIAGRAM):   set WORK._SPRIN9;
53091      if _SPRIN91=. then delete;
MPRINT(EM_DIAGRAM):   if _SPRIN91=. then delete;
53092      /* to delete _v_ variables */
 
NOTE: There were 13 observations read from the data set WORK._SPRIN9.
NOTE: The data set WORK._SPRIN9 has 6 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
53093      proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK._SPRIN9 out=WORK._SPRIN9;
53094      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set WORK._SPRIN9.
NOTE: The data set WORK._SPRIN9 has 2 observations and 7 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                15.48 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0DQWD1K "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0DQWD1K new;
MPRINT(EM_DIAGRAM):   run;
53196      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53197      *------------------------------------------------------------*;
53198      * DMNeural5: Scoring DATA data;
53199      *------------------------------------------------------------*;
53200      data EMWS8.DMNeural5_TRAIN
53201      / view=EMWS8.DMNeural5_TRAIN
53202      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_TRAIN / view=EMWS8.DMNeural5_TRAIN ;
53203      set EMWS8.Varsel_TRAIN
53204      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
53205      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas.
53206     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53207     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
53208     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53209     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
53210     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
53211     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
53211    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53212     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
53213     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
53214     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
53214    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53215     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
53215    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53216     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
53217     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
53217    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53218     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
53219     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   ;
53220     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
53221     +DROP
53222     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   ;
53223     +;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
53224     +/*-------------------------------------------------------------------------*/
53225     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
53226     +/*-------------------------------------------------------------------------*/
MPRINT(EM_DIAGRAM):   if Mnt=. then _S2_MNT = 0;
53227     +;
53228     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
53229     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
53230     +if Mnt=. then _S2_MNT = 0;
MPRINT(EM_DIAGRAM):   else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
53231     +else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
53232     +if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
53233     +else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S5_RFMSTAT = 0;
53234     +if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
53235     +else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
MPRINT(EM_DIAGRAM):   if Recency=. then _S6_RECENCY = 0;
53236     +if RFMstat=. then _S5_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
53237     +else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   ;
53238     +if Recency=. then _S6_RECENCY = 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
53239     +else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   ;
53240     +;
53241     +/*----------------------------------------------*/
53242     +* Component 1 at stage 0;
53243     +/*----------------------------------------------*/
53244     +;
53245     +_SPRIN01=
53246     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN01= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53247     +0.5374691584*_S2_MNT+
53248     +0.5080895383*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
53249     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53250     +0.3013048241*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53251     +-0.046064184*_S6_RECENCY;
53252     +/*----------------------------------------------*/
53253     +* Component 2 at stage 0;
53254     +/*----------------------------------------------*/
53255     +;
53256     +_SPRIN02=
53257     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53258     +-0.142689264*_S2_MNT+
53259     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
53260     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53261     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53262     +-0.135292247*_S6_RECENCY;
53263     +/*----------------------------------------------*/
53264     +* Component 3 at stage 0;
53265     +/*----------------------------------------------*/
53266     +;
53267     +_SPRIN03=
53268     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53269     +0.1087901318*_S2_MNT+
53270     +0.0846582314*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
53271     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53272     +-0.559752239*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53273     +0.7969423216*_S6_RECENCY;
53274     +/*----------------------------------------------*/
53275     +* Component 4 at stage 0;
53276     +/*----------------------------------------------*/
53277     +;
53278     +_SPRIN04=
53279     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN04= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53280     +-0.796009619*_S2_MNT+
53281     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
53282     +0.214935625*_S4_NUMCATALOGPURCHASES+
53283     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53284     +0.0245374038*_S6_RECENCY;
53285     +/*----------------------------------------------*/
53286     +* Component 5 at stage 0;
53287     +/*----------------------------------------------*/
53288     +;
53289     +_SPRIN05=
53290     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53291     +-0.113848017*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53292     +-0.190193757*_S3_MNTMEATPRODUCTS+
53293     +-0.122879307*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
53294     +0.7685193197*_S5_RFMSTAT+
53295     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53296     +;
53297     +/*----------------------------------------------*/
53298     +* Component 1 at stage 1;
53299     +/*----------------------------------------------*/
53300     +;
53301     +_SPRIN11=
53302     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53303     +-0.796009619*_S2_MNT+
53304     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
53305     +0.214935625*_S4_NUMCATALOGPURCHASES+
53306     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53307     +0.0245374038*_S6_RECENCY;
53308     +/*----------------------------------------------*/
53309     +* Component 2 at stage 1;
53310     +/*----------------------------------------------*/
53311     +;
53312     +_SPRIN12=
53313     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53314     +0.5374691584*_S2_MNT+
53315     +0.5080895383*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
53316     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53317     +0.3013048241*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53318     +-0.046064184*_S6_RECENCY;
53319     +/*----------------------------------------------*/
53320     +* Component 3 at stage 1;
53321     +/*----------------------------------------------*/
53322     +;
53323     +_SPRIN13=
53324     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53325     +-0.142689264*_S2_MNT+
53326     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
53327     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53328     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53329     +-0.135292247*_S6_RECENCY;
53330     +/*----------------------------------------------*/
53331     +* Component 4 at stage 1;
53332     +/*----------------------------------------------*/
53333     +;
53334     +_SPRIN14=
53335     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN14= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53336     +0.1798296437*_S2_MNT+
53337     +0.5541281961*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
53338     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53339     +0.0087823313*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53340     +0.0276437095*_S6_RECENCY;
53341     +/*----------------------------------------------*/
53342     +* Component 5 at stage 1;
53343     +/*----------------------------------------------*/
53344     +;
53345     +_SPRIN15=
53346     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN15= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53347     +0.1087901318*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53348     +0.0846582314*_S3_MNTMEATPRODUCTS+
53349     +0.1168772715*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
53350     +-0.559752239*_S5_RFMSTAT+
53351     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53352     +;
53353     +/*----------------------------------------------*/
53354     +* Component 1 at stage 2;
53355     +/*----------------------------------------------*/
53356     +;
53357     +_SPRIN21=
53358     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53359     +-0.796009619*_S2_MNT+
53360     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
53361     +0.214935625*_S4_NUMCATALOGPURCHASES+
53362     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53363     +0.0245374038*_S6_RECENCY;
53364     +/*----------------------------------------------*/
53365     +* Component 2 at stage 2;
53366     +/*----------------------------------------------*/
53367     +;
53368     +_SPRIN22=
53369     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53370     +0.1798296437*_S2_MNT+
53371     +0.5541281961*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
53372     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53373     +0.0087823313*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53374     +0.0276437095*_S6_RECENCY;
53375     +/*----------------------------------------------*/
53376     +* Component 3 at stage 2;
53377     +/*----------------------------------------------*/
53378     +;
53379     +_SPRIN23=
53380     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN23= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53381     +0.5374691584*_S2_MNT+
53382     +0.5080895383*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
53383     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53384     +0.3013048241*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53385     +-0.046064184*_S6_RECENCY;
53386     +/*----------------------------------------------*/
53387     +* Component 4 at stage 2;
53388     +/*----------------------------------------------*/
53389     +;
53390     +_SPRIN24=
53391     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53392     +-0.142689264*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53393     +-0.283353414*_S3_MNTMEATPRODUCTS+
53394     +-0.140572437*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
53395     +-0.065203098*_S5_RFMSTAT+
53396     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53397     +;
53398     +/*----------------------------------------------*/
53399     +* Component 1 at stage 3;
53400     +/*----------------------------------------------*/
53401     +;
53402     +_SPRIN31=
53403     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53404     +-0.796009619*_S2_MNT+
53405     +0.5578145973*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
53406     +0.214935625*_S4_NUMCATALOGPURCHASES+
53407     +0.0306971608*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53408     +0.0245374038*_S6_RECENCY;
53409     +/*----------------------------------------------*/
53410     +* Component 2 at stage 3;
53411     +/*----------------------------------------------*/
53412     +;
53413     +_SPRIN32=
53414     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53415     +-0.142689264*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53416     +-0.283353414*_S3_MNTMEATPRODUCTS+
53417     +-0.140572437*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
53418     +-0.065203098*_S5_RFMSTAT+
53419     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53420     +;
53421     +/*----------------------------------------------*/
53422     +* Component 1 at stage 4;
53423     +/*----------------------------------------------*/
53424     +;
53425     +_SPRIN41=
53426     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53427     +-0.142689264*_S2_MNT+
53428     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
53429     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53430     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53431     +-0.135292247*_S6_RECENCY;
53432     +/*----------------------------------------------*/
53433     +* Component 2 at stage 4;
53434     +/*----------------------------------------------*/
53435     +;
53436     +_SPRIN42=
53437     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN42= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53438     +-0.113848017*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53439     +-0.190193757*_S3_MNTMEATPRODUCTS+
53440     +-0.122879307*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
53441     +0.7685193197*_S5_RFMSTAT+
53442     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53443     +;
53444     +/*----------------------------------------------*/
53445     +* Component 1 at stage 5;
53446     +/*----------------------------------------------*/
53447     +;
53448     +_SPRIN51=
53449     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53450     +-0.113848017*_S2_MNT+
53451     +-0.190193757*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
53452     +-0.122879307*_S4_NUMCATALOGPURCHASES+
53453     +0.7685193197*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53454     +0.585739512*_S6_RECENCY;
53455     +/*----------------------------------------------*/
53456     +* Component 2 at stage 5;
53457     +/*----------------------------------------------*/
53458     +;
53459     +_SPRIN52=
53460     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53461     +-0.142689264*_S2_MNT+
53462     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
53463     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53464     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53465     +-0.135292247*_S6_RECENCY;
53466     +/*----------------------------------------------*/
53467     +* Component 3 at stage 5;
53468     +/*----------------------------------------------*/
53469     +;
53470     +_SPRIN53=
53471     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN53= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53472     +0.1087901318*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53473     +0.0846582314*_S3_MNTMEATPRODUCTS+
53474     +0.1168772715*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
53475     +-0.559752239*_S5_RFMSTAT+
53476     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53477     +;
53478     +/*----------------------------------------------*/
53479     +* Component 1 at stage 6;
53480     +/*----------------------------------------------*/
53481     +;
53482     +_SPRIN61=
53483     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN61= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53484     +-0.142689264*_S2_MNT+
53485     +-0.283353414*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
53486     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53487     +-0.065203098*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53488     +-0.135292247*_S6_RECENCY;
53489     +/*----------------------------------------------*/
53490     +* Component 2 at stage 6;
53491     +/*----------------------------------------------*/
53492     +;
53493     +_SPRIN62=
53494     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53495     +-0.113848017*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53496     +-0.190193757*_S3_MNTMEATPRODUCTS+
53497     +-0.122879307*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
53498     +0.7685193197*_S5_RFMSTAT+
53499     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53500     +;
53501     +/*----------------------------------------------*/
53502     +* Component 1 at stage 7;
53503     +/*----------------------------------------------*/
53504     +;
53505     +_SPRIN71=
53506     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN71= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53507     +-0.113848017*_S2_MNT+
53508     +-0.190193757*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
53509     +-0.122879307*_S4_NUMCATALOGPURCHASES+
53510     +0.7685193197*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53511     +0.585739512*_S6_RECENCY;
53512     +/*----------------------------------------------*/
53513     +* Component 2 at stage 7;
53514     +/*----------------------------------------------*/
53515     +;
53516     +_SPRIN72=
53517     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN72= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53518     +-0.142689264*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53519     +-0.283353414*_S3_MNTMEATPRODUCTS+
53520     +-0.140572437*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
53521     +-0.065203098*_S5_RFMSTAT+
53522     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53523     +;
53524     +/*----------------------------------------------*/
53525     +* Component 1 at stage 8;
53526     +/*----------------------------------------------*/
53527     +;
53528     +_SPRIN81=
53529     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN81= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53530     +0.1087901318*_S2_MNT+
53531     +0.0846582314*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
53532     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53533     +-0.559752239*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53534     +0.7969423216*_S6_RECENCY;
53535     +/*----------------------------------------------*/
53536     +* Component 2 at stage 8;
53537     +/*----------------------------------------------*/
53538     +;
53539     +_SPRIN82=
53540     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN82= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53541     +0.1798296437*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53542     +0.5541281961*_S3_MNTMEATPRODUCTS+
53543     +-0.808383705*_S4_NUMCATALOGPURCHASES+
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
53544     +0.0087823313*_S5_RFMSTAT+
53545     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   ;
53546     +;
53547     +/*----------------------------------------------*/
53548     +* Component 1 at stage 9;
53549     +/*----------------------------------------------*/
53550     +;
53551     +_SPRIN91=
53552     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN91= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53553     +0.1798296437*_S2_MNT+
53554     +0.5541281961*_S3_MNTMEATPRODUCTS+
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
53555     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53556     +0.0087823313*_S5_RFMSTAT+
MPRINT(EM_DIAGRAM):   ;
53557     +0.0276437095*_S6_RECENCY;
53558     +/*----------------------------------------------*/
53559     +* Component 2 at stage 9;
53560     +/*----------------------------------------------*/
53561     +;
53562     +_SPRIN92=
53563     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53564     +0.1087901318*_S2_MNT+
MPRINT(EM_DIAGRAM):   ;
53565     +0.0846582314*_S3_MNTMEATPRODUCTS+
53566     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53567     +-0.559752239*_S5_RFMSTAT+
53568     +0.7969423216*_S6_RECENCY;
53569     +;
53570     +DROP
53571     +_SPRIN01
53572     +_SPRIN02
53573     +_SPRIN03
53574     +_SPRIN04
53575     +_SPRIN05
53576     +_SPRIN11
53577     +_SPRIN12
53578     +_SPRIN13
53579     +_SPRIN14
53580     +_SPRIN15
53581     +_SPRIN21
53582     +_SPRIN22
53583     +_SPRIN23
53584     +_SPRIN24
53585     +_SPRIN31
53586     +_SPRIN32
53587     +_SPRIN41
53588     +_SPRIN42
53589     +_SPRIN51
53590     +_SPRIN52
53591     +_SPRIN53
53592     +_SPRIN61
53593     +_SPRIN62
53594     +_SPRIN71
53595     +_SPRIN72
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN31 _SPRIN32 _SPRIN41 _SPRIN42 _SPRIN51 _SPRIN52 _SPRIN53 _SPRIN61 _SPRIN62 _SPRIN71 _SPRIN72
_SPRIN81 _SPRIN82 _SPRIN91 _SPRIN92 ;
53596     +_SPRIN81
MPRINT(EM_DIAGRAM):   ;
53597     +_SPRIN82
53598     +_SPRIN91
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SIN;
53599     +_SPRIN92
53600     +;
MPRINT(EM_DIAGRAM):   ;
53601     +;
53602     +/**********************************************************/
53603     +* Selected activation function at stage 0 = SIN;
53604     +/**********************************************************/
53605     +;
53606     +_YHAT0=2.2012932637
53607     ++14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   _YHAT0=2.2012932637 +14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1))) +13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1))) +2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1)))
+4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1))) +1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1))) ;
53608     ++13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1)))
53609     ++2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
53610     ++4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1)))
53611     ++1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
53612     +;
MPRINT(EM_DIAGRAM):   ;
53613     +/*--- Target level is binary, take a logistic link function --*/
53614     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = GAUSS;
53615     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   ;
53616     +;
53617     +/**********************************************************/
53618     +* Selected activation function at stage 1 = GAUSS;
53619     +/**********************************************************/
53620     +;
53621     +_RHAT1=-0.123866614
53622     ++0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11))
MPRINT(EM_DIAGRAM):   _RHAT1=-0.123866614 +0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11)) +0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12))
+0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13)) +-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14)) +-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15)) ;
53623     ++0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12))
MPRINT(EM_DIAGRAM):   ;
53624     ++0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13))
53625     ++-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = TANH;
53626     ++-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15))
53627     +;
MPRINT(EM_DIAGRAM):   ;
53628     +;
53629     +/**********************************************************/
53630     +* Selected activation function at stage 2 = TANH;
53631     +/**********************************************************/
53632     +;
53633     +_RHAT2=0.008215354
MPRINT(EM_DIAGRAM):   _RHAT2=0.008215354 +-0.16001558456505*TANH(0.2712320323826*_SPRIN21) +0.12356430469767*TANH(0.1686070475744*_SPRIN22) +-0.01390368846175*TANH(-1.31495933200985*_SPRIN23) +-0.00711588556486*TANH(0.02635498107348*_SPRIN24) ;
53634     ++-0.16001558456505*TANH(0.2712320323826*_SPRIN21)
MPRINT(EM_DIAGRAM):   ;
53635     ++0.12356430469767*TANH(0.1686070475744*_SPRIN22)
53636     ++-0.01390368846175*TANH(-1.31495933200985*_SPRIN23)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
53637     ++-0.00711588556486*TANH(0.02635498107348*_SPRIN24)
53638     +;
MPRINT(EM_DIAGRAM):   ;
53639     +;
53640     +/**********************************************************/
53641     +* Selected activation function at stage 3 = SQUARE;
53642     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT3=-0.00306658 +(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31 +(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32 ;
53643     +;
MPRINT(EM_DIAGRAM):   ;
53644     +_RHAT3=-0.00306658
53645     ++(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = COS;
53646     ++(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32
53647     +;
MPRINT(EM_DIAGRAM):   ;
53648     +;
53649     +/**********************************************************/
53650     +* Selected activation function at stage 4 = COS;
53651     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT4=0.0826256873 +-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1))) +0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1))) ;
53652     +;
MPRINT(EM_DIAGRAM):   ;
53653     +_RHAT4=0.0826256873
53654     ++-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
53655     ++0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1)))
53656     +;
MPRINT(EM_DIAGRAM):   ;
53657     +;
53658     +/**********************************************************/
53659     +* Selected activation function at stage 5 = COS;
53660     +/**********************************************************/
53661     +;
MPRINT(EM_DIAGRAM):   _RHAT5=-0.52219127 +-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1))) +0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1))) +-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1))) ;
53662     +_RHAT5=-0.52219127
MPRINT(EM_DIAGRAM):   ;
53663     ++-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1)))
53664     ++0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1)))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = GAUSS;
53665     ++-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1)))
53666     +;
MPRINT(EM_DIAGRAM):   ;
53667     +;
53668     +/**********************************************************/
53669     +* Selected activation function at stage 6 = GAUSS;
53670     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT6=0.2291041173 +-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61)) +0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62)) ;
53671     +;
MPRINT(EM_DIAGRAM):   ;
53672     +_RHAT6=0.2291041173
53673     ++-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61))
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = TANH;
53674     ++0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62))
53675     +;
MPRINT(EM_DIAGRAM):   ;
53676     +;
53677     +/**********************************************************/
53678     +* Selected activation function at stage 7 = TANH;
53679     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT7=-0.000155303 +0.08225980630599*TANH(0.09090661078805*_SPRIN71) +-0.00601524575819*TANH(1.83770197448699*_SPRIN72) ;
53680     +;
MPRINT(EM_DIAGRAM):   ;
53681     +_RHAT7=-0.000155303
53682     ++0.08225980630599*TANH(0.09090661078805*_SPRIN71)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = TANH;
53683     ++-0.00601524575819*TANH(1.83770197448699*_SPRIN72)
53684     +;
MPRINT(EM_DIAGRAM):   ;
53685     +;
53686     +/**********************************************************/
53687     +* Selected activation function at stage 8 = TANH;
53688     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT8=0.0003764288 +9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81) +0.01274328817113*TANH(3.99440936961243*_SPRIN82) ;
53689     +;
MPRINT(EM_DIAGRAM):   ;
53690     +_RHAT8=0.0003764288
53691     ++9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81)
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = SQUARE;
53692     ++0.01274328817113*TANH(3.99440936961243*_SPRIN82)
53693     +;
MPRINT(EM_DIAGRAM):   ;
53694     +;
53695     +/**********************************************************/
53696     +* Selected activation function at stage 9 = SQUARE;
53697     +/**********************************************************/
MPRINT(EM_DIAGRAM):   _RHAT9=0.0362328144 +(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91 +(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92 ;
53698     +;
MPRINT(EM_DIAGRAM):   ;
53699     +_RHAT9=0.0362328144
53700     ++(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91
53701     ++(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92
53702     +;
53703     +;
53704     +_tmpPredict
53705     +=_YHAT0
53706     ++_RHAT1
53707     ++_RHAT2
53708     ++_RHAT3
53709     ++_RHAT4
53710     ++_RHAT5
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
53711     ++_RHAT6
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
53712     ++_RHAT7
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
53713     ++_RHAT8
53714     ++_RHAT9
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
53715     +;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
53716     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
53717     +If _tmpPredict > 1 then _tmpPredict=1;
53718     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
53719     +P_DepVar1=_tmpPredict;
53720     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
53721     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
53722     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
53723     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
53724     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   end;
53725     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   else do;
53726     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
53727     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
53728     +end;
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
53729     +else do;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
53730     +R_DepVar1 = -P_DepVar1;
53731     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   OTHERWISE;
53732     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   end;
53733     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   END;
53734     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   ;
53735     +OTHERWISE;
53736     +end;
53737     +END;
53738     +;
53739     +DROP _YHAT0
53740     +_RHAT1
53741     +_RHAT2
53742     +_RHAT3
53743     +_RHAT4
53744     +_RHAT5
53745     +_RHAT6
53746     +_RHAT7
53747     +_RHAT8
53748     +_RHAT9
53749     +_tmpPredict
53750     +_S1_ACCEPTEDCMPTOTAL
53751     +_S2_MNT
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpPredict _S1_ACCEPTEDCMPTOTAL _S2_MNT _S3_MNTMEATPRODUCTS _S4_NUMCATALOGPURCHASES _S5_RFMSTAT _S6_RECENCY ;
53752     +_S3_MNTMEATPRODUCTS
53753     +_S4_NUMCATALOGPURCHASES
53754     +_S5_RFMSTAT
53755     +_S6_RECENCY
53756     +;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
53757      run;
 
NOTE: DATA STEP view saved on file EMWS8.DMNEURAL5_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
53758      quit;
53759      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
53760      filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
53761      *------------------------------------------------------------*;
53762      * DMNeural5: Scoring VALIDATE data;
53763      *------------------------------------------------------------*;
53764      data EMWS8.DMNeural5_VALIDATE
53765      / view=EMWS8.DMNeural5_VALIDATE
53766      ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_VALIDATE / view=EMWS8.DMNeural5_VALIDATE ;
53767      set EMWS8.Varsel_VALIDATE
53768      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
53769      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMFLOWSCORE.sas.
53770     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53771     +**** Begin scoring code for DMNeural;
MPRINT(EM_DIAGRAM):   **** Begin scoring code for DMNeural;
53772     +**********************************************************;
MPRINT(EM_DIAGRAM):   **********************************************************;
53773     +LENGTH _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
53774     +LABEL _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = "Warnings";
53775     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar
53775    !+       I_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53776     +LABEL I_DepVar="Into: DepVar";
MPRINT(EM_DIAGRAM):   LABEL I_DepVar= "Into: DepVar";
53777     +LENGTH _FORMAT_ $200;
MPRINT(EM_DIAGRAM):   LENGTH _FORMAT_ $200;
53778     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _NORMFMT_
53778    !+       _NORMFMT_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53779     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar
53779    !+       F_DepVar $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53780     +LABEL F_DepVar="From: DepVar";
MPRINT(EM_DIAGRAM):   LABEL F_DepVar= "From: DepVar";
53781     +LENGTH
MPRINT(EM_DIAGRAM):   LENGTH _TARGNOR_
53781    !+       _TARGNOR_ $%DMNORLEN;
MPRINT(DMNORLEN):   $32
MPRINT(EM_DIAGRAM):  ;
53782     +_FORMAT_ =PUT(DepVar, BEST.);
MPRINT(EM_DIAGRAM):   _FORMAT_ =PUT(DepVar, BEST.);
53783     +%DMNORMCP(_FORMAT_ , _TARGNOR_ );
MPRINT(DMNORMCP):   _TARGNOR_=dmnorm(_FORMAT_,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
53784     +F_DepVar=_TARGNOR_;
MPRINT(EM_DIAGRAM):   F_DepVar=_TARGNOR_;
53785     +DROP
53786     +_FORMAT_ _NORMFMT_;
MPRINT(EM_DIAGRAM):   DROP _FORMAT_ _NORMFMT_;
53787     +;
MPRINT(EM_DIAGRAM):   ;
53788     +/*-------------------------------------------------------------------------*/
53789     +*Impute missing values for interval variables;
MPRINT(EM_DIAGRAM):   *Impute missing values for interval variables;
53790     +/*-------------------------------------------------------------------------*/
53791     +;
MPRINT(EM_DIAGRAM):   ;
53792     +if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
MPRINT(EM_DIAGRAM):   if AcceptedCmpTotal=. then _S1_ACCEPTEDCMPTOTAL = 0;
53793     +else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
MPRINT(EM_DIAGRAM):   else _S1_ACCEPTEDCMPTOTAL=(AcceptedCmpTotal-0.31255265374894)/0.66837726102124;
53794     +if Mnt=. then _S2_MNT = 0;
MPRINT(EM_DIAGRAM):   if Mnt=. then _S2_MNT = 0;
53795     +else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
MPRINT(EM_DIAGRAM):   else _S2_MNT=(Mnt-615.68197135636)/604.537497355942;
53796     +if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
MPRINT(EM_DIAGRAM):   if MntMeatProducts=. then _S3_MNTMEATPRODUCTS = 0;
53797     +else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
MPRINT(EM_DIAGRAM):   else _S3_MNTMEATPRODUCTS=(MntMeatProducts-169.965037910699)/216.176716057929;
53798     +if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases=. then _S4_NUMCATALOGPURCHASES = 0;
53799     +else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
MPRINT(EM_DIAGRAM):   else _S4_NUMCATALOGPURCHASES=(NumCatalogPurchases-2.64448188711036)/2.77214051734809;
53800     +if RFMstat=. then _S5_RFMSTAT = 0;
MPRINT(EM_DIAGRAM):   if RFMstat=. then _S5_RFMSTAT = 0;
53801     +else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
MPRINT(EM_DIAGRAM):   else _S5_RFMSTAT=(RFMstat-531.396946202505)/1565.49314871989;
53802     +if Recency=. then _S6_RECENCY = 0;
MPRINT(EM_DIAGRAM):   if Recency=. then _S6_RECENCY = 0;
53803     +else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
MPRINT(EM_DIAGRAM):   else _S6_RECENCY=(Recency-48.7742207245156)/28.8224799181808;
53804     +;
MPRINT(EM_DIAGRAM):   ;
53805     +/*----------------------------------------------*/
53806     +* Component 1 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 0;
53807     +/*----------------------------------------------*/
53808     +;
MPRINT(EM_DIAGRAM):   ;
53809     +_SPRIN01=
53810     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
53811     +0.5374691584*_S2_MNT+
53812     +0.5080895383*_S3_MNTMEATPRODUCTS+
53813     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53814     +0.3013048241*_S5_RFMSTAT+
53815     +-0.046064184*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN01= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53816     +/*----------------------------------------------*/
53817     +* Component 2 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 0;
53818     +/*----------------------------------------------*/
53819     +;
MPRINT(EM_DIAGRAM):   ;
53820     +_SPRIN02=
53821     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53822     +-0.142689264*_S2_MNT+
53823     +-0.283353414*_S3_MNTMEATPRODUCTS+
53824     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53825     +-0.065203098*_S5_RFMSTAT+
53826     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN02= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53827     +/*----------------------------------------------*/
53828     +* Component 3 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 0;
53829     +/*----------------------------------------------*/
53830     +;
MPRINT(EM_DIAGRAM):   ;
53831     +_SPRIN03=
53832     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
53833     +0.1087901318*_S2_MNT+
53834     +0.0846582314*_S3_MNTMEATPRODUCTS+
53835     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53836     +-0.559752239*_S5_RFMSTAT+
53837     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN03= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53838     +/*----------------------------------------------*/
53839     +* Component 4 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 0;
53840     +/*----------------------------------------------*/
53841     +;
MPRINT(EM_DIAGRAM):   ;
53842     +_SPRIN04=
53843     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53844     +-0.796009619*_S2_MNT+
53845     +0.5578145973*_S3_MNTMEATPRODUCTS+
53846     +0.214935625*_S4_NUMCATALOGPURCHASES+
53847     +0.0306971608*_S5_RFMSTAT+
53848     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN04= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53849     +/*----------------------------------------------*/
53850     +* Component 5 at stage 0;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 0;
53851     +/*----------------------------------------------*/
53852     +;
MPRINT(EM_DIAGRAM):   ;
53853     +_SPRIN05=
53854     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
53855     +-0.113848017*_S2_MNT+
53856     +-0.190193757*_S3_MNTMEATPRODUCTS+
53857     +-0.122879307*_S4_NUMCATALOGPURCHASES+
53858     +0.7685193197*_S5_RFMSTAT+
53859     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN05= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
53860     +;
MPRINT(EM_DIAGRAM):   ;
53861     +/*----------------------------------------------*/
53862     +* Component 1 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 1;
53863     +/*----------------------------------------------*/
53864     +;
MPRINT(EM_DIAGRAM):   ;
53865     +_SPRIN11=
53866     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53867     +-0.796009619*_S2_MNT+
53868     +0.5578145973*_S3_MNTMEATPRODUCTS+
53869     +0.214935625*_S4_NUMCATALOGPURCHASES+
53870     +0.0306971608*_S5_RFMSTAT+
53871     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN11= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53872     +/*----------------------------------------------*/
53873     +* Component 2 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 1;
53874     +/*----------------------------------------------*/
53875     +;
MPRINT(EM_DIAGRAM):   ;
53876     +_SPRIN12=
53877     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
53878     +0.5374691584*_S2_MNT+
53879     +0.5080895383*_S3_MNTMEATPRODUCTS+
53880     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53881     +0.3013048241*_S5_RFMSTAT+
53882     +-0.046064184*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN12= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53883     +/*----------------------------------------------*/
53884     +* Component 3 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 1;
53885     +/*----------------------------------------------*/
53886     +;
MPRINT(EM_DIAGRAM):   ;
53887     +_SPRIN13=
53888     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53889     +-0.142689264*_S2_MNT+
53890     +-0.283353414*_S3_MNTMEATPRODUCTS+
53891     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53892     +-0.065203098*_S5_RFMSTAT+
53893     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN13= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53894     +/*----------------------------------------------*/
53895     +* Component 4 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 1;
53896     +/*----------------------------------------------*/
53897     +;
MPRINT(EM_DIAGRAM):   ;
53898     +_SPRIN14=
53899     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
53900     +0.1798296437*_S2_MNT+
53901     +0.5541281961*_S3_MNTMEATPRODUCTS+
53902     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53903     +0.0087823313*_S5_RFMSTAT+
53904     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN14= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53905     +/*----------------------------------------------*/
53906     +* Component 5 at stage 1;
MPRINT(EM_DIAGRAM):   * Component 5 at stage 1;
53907     +/*----------------------------------------------*/
53908     +;
MPRINT(EM_DIAGRAM):   ;
53909     +_SPRIN15=
53910     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
53911     +0.1087901318*_S2_MNT+
53912     +0.0846582314*_S3_MNTMEATPRODUCTS+
53913     +0.1168772715*_S4_NUMCATALOGPURCHASES+
53914     +-0.559752239*_S5_RFMSTAT+
53915     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN15= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
53916     +;
MPRINT(EM_DIAGRAM):   ;
53917     +/*----------------------------------------------*/
53918     +* Component 1 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 2;
53919     +/*----------------------------------------------*/
53920     +;
MPRINT(EM_DIAGRAM):   ;
53921     +_SPRIN21=
53922     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53923     +-0.796009619*_S2_MNT+
53924     +0.5578145973*_S3_MNTMEATPRODUCTS+
53925     +0.214935625*_S4_NUMCATALOGPURCHASES+
53926     +0.0306971608*_S5_RFMSTAT+
53927     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN21= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53928     +/*----------------------------------------------*/
53929     +* Component 2 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 2;
53930     +/*----------------------------------------------*/
53931     +;
MPRINT(EM_DIAGRAM):   ;
53932     +_SPRIN22=
53933     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
53934     +0.1798296437*_S2_MNT+
53935     +0.5541281961*_S3_MNTMEATPRODUCTS+
53936     +-0.808383705*_S4_NUMCATALOGPURCHASES+
53937     +0.0087823313*_S5_RFMSTAT+
53938     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN22= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
53939     +/*----------------------------------------------*/
53940     +* Component 3 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 2;
53941     +/*----------------------------------------------*/
53942     +;
MPRINT(EM_DIAGRAM):   ;
53943     +_SPRIN23=
53944     +0.3290397948*_S1_ACCEPTEDCMPTOTAL+
53945     +0.5374691584*_S2_MNT+
53946     +0.5080895383*_S3_MNTMEATPRODUCTS+
53947     +0.5017950101*_S4_NUMCATALOGPURCHASES+
53948     +0.3013048241*_S5_RFMSTAT+
53949     +-0.046064184*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN23= 0.3290397948*_S1_ACCEPTEDCMPTOTAL+ 0.5374691584*_S2_MNT+ 0.5080895383*_S3_MNTMEATPRODUCTS+ 0.5017950101*_S4_NUMCATALOGPURCHASES+ 0.3013048241*_S5_RFMSTAT+ -0.046064184*_S6_RECENCY;
53950     +/*----------------------------------------------*/
53951     +* Component 4 at stage 2;
MPRINT(EM_DIAGRAM):   * Component 4 at stage 2;
53952     +/*----------------------------------------------*/
53953     +;
MPRINT(EM_DIAGRAM):   ;
53954     +_SPRIN24=
53955     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53956     +-0.142689264*_S2_MNT+
53957     +-0.283353414*_S3_MNTMEATPRODUCTS+
53958     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53959     +-0.065203098*_S5_RFMSTAT+
53960     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN24= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53961     +;
MPRINT(EM_DIAGRAM):   ;
53962     +/*----------------------------------------------*/
53963     +* Component 1 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 3;
53964     +/*----------------------------------------------*/
53965     +;
MPRINT(EM_DIAGRAM):   ;
53966     +_SPRIN31=
53967     +0.0864282309*_S1_ACCEPTEDCMPTOTAL+
53968     +-0.796009619*_S2_MNT+
53969     +0.5578145973*_S3_MNTMEATPRODUCTS+
53970     +0.214935625*_S4_NUMCATALOGPURCHASES+
53971     +0.0306971608*_S5_RFMSTAT+
53972     +0.0245374038*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN31= 0.0864282309*_S1_ACCEPTEDCMPTOTAL+ -0.796009619*_S2_MNT+ 0.5578145973*_S3_MNTMEATPRODUCTS+ 0.214935625*_S4_NUMCATALOGPURCHASES+ 0.0306971608*_S5_RFMSTAT+ 0.0245374038*_S6_RECENCY;
53973     +/*----------------------------------------------*/
53974     +* Component 2 at stage 3;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 3;
53975     +/*----------------------------------------------*/
53976     +;
MPRINT(EM_DIAGRAM):   ;
53977     +_SPRIN32=
53978     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53979     +-0.142689264*_S2_MNT+
53980     +-0.283353414*_S3_MNTMEATPRODUCTS+
53981     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53982     +-0.065203098*_S5_RFMSTAT+
53983     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN32= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53984     +;
MPRINT(EM_DIAGRAM):   ;
53985     +/*----------------------------------------------*/
53986     +* Component 1 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 4;
53987     +/*----------------------------------------------*/
53988     +;
MPRINT(EM_DIAGRAM):   ;
53989     +_SPRIN41=
53990     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
53991     +-0.142689264*_S2_MNT+
53992     +-0.283353414*_S3_MNTMEATPRODUCTS+
53993     +-0.140572437*_S4_NUMCATALOGPURCHASES+
53994     +-0.065203098*_S5_RFMSTAT+
53995     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN41= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
53996     +/*----------------------------------------------*/
53997     +* Component 2 at stage 4;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 4;
53998     +/*----------------------------------------------*/
53999     +;
MPRINT(EM_DIAGRAM):   ;
54000     +_SPRIN42=
54001     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54002     +-0.113848017*_S2_MNT+
54003     +-0.190193757*_S3_MNTMEATPRODUCTS+
54004     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54005     +0.7685193197*_S5_RFMSTAT+
54006     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN42= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54007     +;
MPRINT(EM_DIAGRAM):   ;
54008     +/*----------------------------------------------*/
54009     +* Component 1 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 5;
54010     +/*----------------------------------------------*/
54011     +;
MPRINT(EM_DIAGRAM):   ;
54012     +_SPRIN51=
54013     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54014     +-0.113848017*_S2_MNT+
54015     +-0.190193757*_S3_MNTMEATPRODUCTS+
54016     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54017     +0.7685193197*_S5_RFMSTAT+
54018     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN51= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54019     +/*----------------------------------------------*/
54020     +* Component 2 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 5;
54021     +/*----------------------------------------------*/
54022     +;
MPRINT(EM_DIAGRAM):   ;
54023     +_SPRIN52=
54024     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
54025     +-0.142689264*_S2_MNT+
54026     +-0.283353414*_S3_MNTMEATPRODUCTS+
54027     +-0.140572437*_S4_NUMCATALOGPURCHASES+
54028     +-0.065203098*_S5_RFMSTAT+
54029     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN52= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
54030     +/*----------------------------------------------*/
54031     +* Component 3 at stage 5;
MPRINT(EM_DIAGRAM):   * Component 3 at stage 5;
54032     +/*----------------------------------------------*/
54033     +;
MPRINT(EM_DIAGRAM):   ;
54034     +_SPRIN53=
54035     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
54036     +0.1087901318*_S2_MNT+
54037     +0.0846582314*_S3_MNTMEATPRODUCTS+
54038     +0.1168772715*_S4_NUMCATALOGPURCHASES+
54039     +-0.559752239*_S5_RFMSTAT+
54040     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN53= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
54041     +;
MPRINT(EM_DIAGRAM):   ;
54042     +/*----------------------------------------------*/
54043     +* Component 1 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 6;
54044     +/*----------------------------------------------*/
54045     +;
MPRINT(EM_DIAGRAM):   ;
54046     +_SPRIN61=
54047     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
54048     +-0.142689264*_S2_MNT+
54049     +-0.283353414*_S3_MNTMEATPRODUCTS+
54050     +-0.140572437*_S4_NUMCATALOGPURCHASES+
54051     +-0.065203098*_S5_RFMSTAT+
54052     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN61= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
54053     +/*----------------------------------------------*/
54054     +* Component 2 at stage 6;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 6;
54055     +/*----------------------------------------------*/
54056     +;
MPRINT(EM_DIAGRAM):   ;
54057     +_SPRIN62=
54058     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54059     +-0.113848017*_S2_MNT+
54060     +-0.190193757*_S3_MNTMEATPRODUCTS+
54061     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54062     +0.7685193197*_S5_RFMSTAT+
54063     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN62= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54064     +;
MPRINT(EM_DIAGRAM):   ;
54065     +/*----------------------------------------------*/
54066     +* Component 1 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 7;
54067     +/*----------------------------------------------*/
54068     +;
MPRINT(EM_DIAGRAM):   ;
54069     +_SPRIN71=
54070     +0.0453091502*_S1_ACCEPTEDCMPTOTAL+
54071     +-0.113848017*_S2_MNT+
54072     +-0.190193757*_S3_MNTMEATPRODUCTS+
54073     +-0.122879307*_S4_NUMCATALOGPURCHASES+
54074     +0.7685193197*_S5_RFMSTAT+
54075     +0.585739512*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN71= 0.0453091502*_S1_ACCEPTEDCMPTOTAL+ -0.113848017*_S2_MNT+ -0.190193757*_S3_MNTMEATPRODUCTS+ -0.122879307*_S4_NUMCATALOGPURCHASES+ 0.7685193197*_S5_RFMSTAT+ 0.585739512*_S6_RECENCY;
54076     +/*----------------------------------------------*/
54077     +* Component 2 at stage 7;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 7;
54078     +/*----------------------------------------------*/
54079     +;
MPRINT(EM_DIAGRAM):   ;
54080     +_SPRIN72=
54081     +0.9257616165*_S1_ACCEPTEDCMPTOTAL+
54082     +-0.142689264*_S2_MNT+
54083     +-0.283353414*_S3_MNTMEATPRODUCTS+
54084     +-0.140572437*_S4_NUMCATALOGPURCHASES+
54085     +-0.065203098*_S5_RFMSTAT+
54086     +-0.135292247*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN72= 0.9257616165*_S1_ACCEPTEDCMPTOTAL+ -0.142689264*_S2_MNT+ -0.283353414*_S3_MNTMEATPRODUCTS+ -0.140572437*_S4_NUMCATALOGPURCHASES+ -0.065203098*_S5_RFMSTAT+ -0.135292247*_S6_RECENCY;
54087     +;
MPRINT(EM_DIAGRAM):   ;
54088     +/*----------------------------------------------*/
54089     +* Component 1 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 8;
54090     +/*----------------------------------------------*/
54091     +;
MPRINT(EM_DIAGRAM):   ;
54092     +_SPRIN81=
54093     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
54094     +0.1087901318*_S2_MNT+
54095     +0.0846582314*_S3_MNTMEATPRODUCTS+
54096     +0.1168772715*_S4_NUMCATALOGPURCHASES+
54097     +-0.559752239*_S5_RFMSTAT+
54098     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN81= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
54099     +/*----------------------------------------------*/
54100     +* Component 2 at stage 8;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 8;
54101     +/*----------------------------------------------*/
54102     +;
MPRINT(EM_DIAGRAM):   ;
54103     +_SPRIN82=
54104     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
54105     +0.1798296437*_S2_MNT+
54106     +0.5541281961*_S3_MNTMEATPRODUCTS+
54107     +-0.808383705*_S4_NUMCATALOGPURCHASES+
54108     +0.0087823313*_S5_RFMSTAT+
54109     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN82= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
54110     +;
MPRINT(EM_DIAGRAM):   ;
54111     +/*----------------------------------------------*/
54112     +* Component 1 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 1 at stage 9;
54113     +/*----------------------------------------------*/
54114     +;
MPRINT(EM_DIAGRAM):   ;
54115     +_SPRIN91=
54116     +0.0792320846*_S1_ACCEPTEDCMPTOTAL+
54117     +0.1798296437*_S2_MNT+
54118     +0.5541281961*_S3_MNTMEATPRODUCTS+
54119     +-0.808383705*_S4_NUMCATALOGPURCHASES+
54120     +0.0087823313*_S5_RFMSTAT+
54121     +0.0276437095*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN91= 0.0792320846*_S1_ACCEPTEDCMPTOTAL+ 0.1798296437*_S2_MNT+ 0.5541281961*_S3_MNTMEATPRODUCTS+ -0.808383705*_S4_NUMCATALOGPURCHASES+ 0.0087823313*_S5_RFMSTAT+ 0.0276437095*_S6_RECENCY;
54122     +/*----------------------------------------------*/
54123     +* Component 2 at stage 9;
MPRINT(EM_DIAGRAM):   * Component 2 at stage 9;
54124     +/*----------------------------------------------*/
54125     +;
MPRINT(EM_DIAGRAM):   ;
54126     +_SPRIN92=
54127     +0.1374691289*_S1_ACCEPTEDCMPTOTAL+
54128     +0.1087901318*_S2_MNT+
54129     +0.0846582314*_S3_MNTMEATPRODUCTS+
54130     +0.1168772715*_S4_NUMCATALOGPURCHASES+
54131     +-0.559752239*_S5_RFMSTAT+
54132     +0.7969423216*_S6_RECENCY;
MPRINT(EM_DIAGRAM):   _SPRIN92= 0.1374691289*_S1_ACCEPTEDCMPTOTAL+ 0.1087901318*_S2_MNT+ 0.0846582314*_S3_MNTMEATPRODUCTS+ 0.1168772715*_S4_NUMCATALOGPURCHASES+ -0.559752239*_S5_RFMSTAT+ 0.7969423216*_S6_RECENCY;
54133     +;
MPRINT(EM_DIAGRAM):   ;
54134     +DROP
54135     +_SPRIN01
54136     +_SPRIN02
54137     +_SPRIN03
54138     +_SPRIN04
54139     +_SPRIN05
54140     +_SPRIN11
54141     +_SPRIN12
54142     +_SPRIN13
54143     +_SPRIN14
54144     +_SPRIN15
54145     +_SPRIN21
54146     +_SPRIN22
54147     +_SPRIN23
54148     +_SPRIN24
54149     +_SPRIN31
54150     +_SPRIN32
54151     +_SPRIN41
54152     +_SPRIN42
54153     +_SPRIN51
54154     +_SPRIN52
54155     +_SPRIN53
54156     +_SPRIN61
54157     +_SPRIN62
54158     +_SPRIN71
54159     +_SPRIN72
54160     +_SPRIN81
54161     +_SPRIN82
54162     +_SPRIN91
54163     +_SPRIN92
54164     +;
MPRINT(EM_DIAGRAM):   DROP _SPRIN01 _SPRIN02 _SPRIN03 _SPRIN04 _SPRIN05 _SPRIN11 _SPRIN12 _SPRIN13 _SPRIN14 _SPRIN15 _SPRIN21 _SPRIN22 _SPRIN23 _SPRIN24 _SPRIN31 _SPRIN32 _SPRIN41 _SPRIN42 _SPRIN51 _SPRIN52 _SPRIN53 _SPRIN61 _SPRIN62 _SPRIN71 _SPRIN72
_SPRIN81 _SPRIN82 _SPRIN91 _SPRIN92 ;
54165     +;
MPRINT(EM_DIAGRAM):   ;
54166     +/**********************************************************/
54167     +* Selected activation function at stage 0 = SIN;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 0 = SIN;
54168     +/**********************************************************/
54169     +;
MPRINT(EM_DIAGRAM):   ;
54170     +_YHAT0=2.2012932637
54171     ++14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1)))
54172     ++13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1)))
54173     ++2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1)))
54174     ++4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1)))
54175     ++1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1)))
54176     +;
MPRINT(EM_DIAGRAM):   _YHAT0=2.2012932637 +14.8557194238155*SIN(-0.05655276542652*_SPRIN01*(2/ARCOS(-1))) +13.481909413672*SIN(-0.09677887213153*_SPRIN02*(2/ARCOS(-1))) +2.83596778718721*SIN(0.48529364915088*_SPRIN03*(2/ARCOS(-1)))
+4.21906784539051*SIN(-0.42769522194195*_SPRIN04*(2/ARCOS(-1))) +1.07052649577056*SIN(0.88037255841185*_SPRIN05*(2/ARCOS(-1))) ;
54177     +/*--- Target level is binary, take a logistic link function --*/
54178     +if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
MPRINT(EM_DIAGRAM):   if _YHAT0 > 0 then _YHAT0=1/(1+exp(-_YHAT0));
54179     +else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
MPRINT(EM_DIAGRAM):   else _YHAT0=exp(_YHAT0)/(1+exp(_YHAT0));
54180     +;
MPRINT(EM_DIAGRAM):   ;
54181     +/**********************************************************/
54182     +* Selected activation function at stage 1 = GAUSS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 1 = GAUSS;
54183     +/**********************************************************/
54184     +;
MPRINT(EM_DIAGRAM):   ;
54185     +_RHAT1=-0.123866614
54186     ++0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11))
54187     ++0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12))
54188     ++0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13))
54189     ++-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14))
54190     ++-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15))
54191     +;
MPRINT(EM_DIAGRAM):   _RHAT1=-0.123866614 +0.07706294217246*exp(-(2.92544781120774*_SPRIN11*2.92544781120774*_SPRIN11)) +0.16922821677663*exp(-(0.16725539875894*_SPRIN12*0.16725539875894*_SPRIN12))
+0.07551172421375*exp(-(0.48574717515447*_SPRIN13*0.48574717515447*_SPRIN13)) +-0.08952117295162*exp(-(0.55229720822169*_SPRIN14*0.55229720822169*_SPRIN14)) +-0.06615313227777*exp(-(-0.53782679423952*_SPRIN15*-0.53782679423952*_SPRIN15)) ;
54192     +;
MPRINT(EM_DIAGRAM):   ;
54193     +/**********************************************************/
54194     +* Selected activation function at stage 2 = TANH;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 2 = TANH;
54195     +/**********************************************************/
54196     +;
MPRINT(EM_DIAGRAM):   ;
54197     +_RHAT2=0.008215354
54198     ++-0.16001558456505*TANH(0.2712320323826*_SPRIN21)
54199     ++0.12356430469767*TANH(0.1686070475744*_SPRIN22)
54200     ++-0.01390368846175*TANH(-1.31495933200985*_SPRIN23)
54201     ++-0.00711588556486*TANH(0.02635498107348*_SPRIN24)
54202     +;
MPRINT(EM_DIAGRAM):   _RHAT2=0.008215354 +-0.16001558456505*TANH(0.2712320323826*_SPRIN21) +0.12356430469767*TANH(0.1686070475744*_SPRIN22) +-0.01390368846175*TANH(-1.31495933200985*_SPRIN23) +-0.00711588556486*TANH(0.02635498107348*_SPRIN24) ;
54203     +;
MPRINT(EM_DIAGRAM):   ;
54204     +/**********************************************************/
54205     +* Selected activation function at stage 3 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 3 = SQUARE;
54206     +/**********************************************************/
54207     +;
MPRINT(EM_DIAGRAM):   ;
54208     +_RHAT3=-0.00306658
54209     ++(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31
54210     ++(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32
54211     +;
MPRINT(EM_DIAGRAM):   _RHAT3=-0.00306658 +(-0.01736246972984+-0.02979330795282*_SPRIN31)*_SPRIN31 +(-0.00332049293721+0.0030791815984*_SPRIN32)*_SPRIN32 ;
54212     +;
MPRINT(EM_DIAGRAM):   ;
54213     +/**********************************************************/
54214     +* Selected activation function at stage 4 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 4 = COS;
54215     +/**********************************************************/
54216     +;
MPRINT(EM_DIAGRAM):   ;
54217     +_RHAT4=0.0826256873
54218     ++-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1)))
54219     ++0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1)))
54220     +;
MPRINT(EM_DIAGRAM):   _RHAT4=0.0826256873 +-0.12238172190706*COS(0.02282548926214*_SPRIN41*(2/ARCOS(-1))) +0.04484860199928*COS(1.48265756415328*_SPRIN42*(2/ARCOS(-1))) ;
54221     +;
MPRINT(EM_DIAGRAM):   ;
54222     +/**********************************************************/
54223     +* Selected activation function at stage 5 = COS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 5 = COS;
54224     +/**********************************************************/
54225     +;
MPRINT(EM_DIAGRAM):   ;
54226     +_RHAT5=-0.52219127
54227     ++-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1)))
54228     ++0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1)))
54229     ++-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1)))
54230     +;
MPRINT(EM_DIAGRAM):   _RHAT5=-0.52219127 +-0.00160515605439*COS(0.30587662321319*_SPRIN51*(2/ARCOS(-1))) +0.57980710141949*COS(0.05285096253042*_SPRIN52*(2/ARCOS(-1))) +-0.05638211732802*COS(0.39892152738836*_SPRIN53*(2/ARCOS(-1))) ;
54231     +;
MPRINT(EM_DIAGRAM):   ;
54232     +/**********************************************************/
54233     +* Selected activation function at stage 6 = GAUSS;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 6 = GAUSS;
54234     +/**********************************************************/
54235     +;
MPRINT(EM_DIAGRAM):   ;
54236     +_RHAT6=0.2291041173
54237     ++-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61))
54238     ++0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62))
54239     +;
MPRINT(EM_DIAGRAM):   _RHAT6=0.2291041173 +-0.27087104133354*exp(-(0.01497465137757*_SPRIN61*0.01497465137757*_SPRIN61)) +0.04495253299061*exp(-(-0.53853738934044*_SPRIN62*-0.53853738934044*_SPRIN62)) ;
54240     +;
MPRINT(EM_DIAGRAM):   ;
54241     +/**********************************************************/
54242     +* Selected activation function at stage 7 = TANH;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 7 = TANH;
54243     +/**********************************************************/
54244     +;
MPRINT(EM_DIAGRAM):   ;
54245     +_RHAT7=-0.000155303
54246     ++0.08225980630599*TANH(0.09090661078805*_SPRIN71)
54247     ++-0.00601524575819*TANH(1.83770197448699*_SPRIN72)
54248     +;
MPRINT(EM_DIAGRAM):   _RHAT7=-0.000155303 +0.08225980630599*TANH(0.09090661078805*_SPRIN71) +-0.00601524575819*TANH(1.83770197448699*_SPRIN72) ;
54249     +;
MPRINT(EM_DIAGRAM):   ;
54250     +/**********************************************************/
54251     +* Selected activation function at stage 8 = TANH;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 8 = TANH;
54252     +/**********************************************************/
54253     +;
MPRINT(EM_DIAGRAM):   ;
54254     +_RHAT8=0.0003764288
54255     ++9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81)
54256     ++0.01274328817113*TANH(3.99440936961243*_SPRIN82)
54257     +;
MPRINT(EM_DIAGRAM):   _RHAT8=0.0003764288 +9.9565532917997E-6*TANH(0.25338971357985*_SPRIN81) +0.01274328817113*TANH(3.99440936961243*_SPRIN82) ;
54258     +;
MPRINT(EM_DIAGRAM):   ;
54259     +/**********************************************************/
54260     +* Selected activation function at stage 9 = SQUARE;
MPRINT(EM_DIAGRAM):   * Selected activation function at stage 9 = SQUARE;
54261     +/**********************************************************/
54262     +;
MPRINT(EM_DIAGRAM):   ;
54263     +_RHAT9=0.0362328144
54264     ++(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91
54265     ++(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92
54266     +;
MPRINT(EM_DIAGRAM):   _RHAT9=0.0362328144 +(0.08320836153318+-0.04610022807898*_SPRIN91)*_SPRIN91 +(0.02838947392465+0.00729753230704*_SPRIN92)*_SPRIN92 ;
54267     +;
MPRINT(EM_DIAGRAM):   ;
54268     +_tmpPredict
54269     +=_YHAT0
54270     ++_RHAT1
54271     ++_RHAT2
54272     ++_RHAT3
54273     ++_RHAT4
54274     ++_RHAT5
54275     ++_RHAT6
54276     ++_RHAT7
54277     ++_RHAT8
54278     ++_RHAT9
54279     +;
MPRINT(EM_DIAGRAM):   _tmpPredict =_YHAT0 +_RHAT1 +_RHAT2 +_RHAT3 +_RHAT4 +_RHAT5 +_RHAT6 +_RHAT7 +_RHAT8 +_RHAT9 ;
54280     +_tmpPredict=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   _tmpPredict=1-_tmpPredict;
54281     +If _tmpPredict > 1 then _tmpPredict=1;
MPRINT(EM_DIAGRAM):   If _tmpPredict > 1 then _tmpPredict=1;
54282     +else if _tmpPredict < 0 then _tmpPredict=0;
MPRINT(EM_DIAGRAM):   else if _tmpPredict < 0 then _tmpPredict=0;
54283     +P_DepVar1=_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar1=_tmpPredict;
54284     +label P_DepVar1 = "Predicted: DepVar=1";
MPRINT(EM_DIAGRAM):   label P_DepVar1 = "Predicted: DepVar=1";
54285     +P_DepVar0=1-_tmpPredict;
MPRINT(EM_DIAGRAM):   P_DepVar0=1-_tmpPredict;
54286     +label P_DepVar0 = "Predicted: DepVar=0";
MPRINT(EM_DIAGRAM):   label P_DepVar0 = "Predicted: DepVar=0";
54287     +if P_DepVar1 ge 0.5 then I_DepVar="1";
MPRINT(EM_DIAGRAM):   if P_DepVar1 ge 0.5 then I_DepVar="1";
54288     +else I_DepVar="0";
MPRINT(EM_DIAGRAM):   else I_DepVar="0";
54289     +if F_DepVar NE "1" AND F_DepVar NE "0" then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE "1" AND F_DepVar NE "0" then do;
54290     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
54291     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
54292     +end;
MPRINT(EM_DIAGRAM):   end;
54293     +else do;
MPRINT(EM_DIAGRAM):   else do;
54294     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
54295     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
54296     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
54297     +WHEN("1") R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN("1") R_DepVar1 = R_DepVar1 +1;
54298     +WHEN("0") R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN("0") R_DepVar0 = R_DepVar0 +1;
54299     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
54300     +end;
MPRINT(EM_DIAGRAM):   end;
54301     +END;
MPRINT(EM_DIAGRAM):   END;
54302     +;
MPRINT(EM_DIAGRAM):   ;
54303     +DROP _YHAT0
54304     +_RHAT1
54305     +_RHAT2
54306     +_RHAT3
54307     +_RHAT4
54308     +_RHAT5
54309     +_RHAT6
54310     +_RHAT7
54311     +_RHAT8
54312     +_RHAT9
54313     +_tmpPredict
54314     +_S1_ACCEPTEDCMPTOTAL
54315     +_S2_MNT
54316     +_S3_MNTMEATPRODUCTS
54317     +_S4_NUMCATALOGPURCHASES
54318     +_S5_RFMSTAT
54319     +_S6_RECENCY
54320     +;
MPRINT(EM_DIAGRAM):   DROP _YHAT0 _RHAT1 _RHAT2 _RHAT3 _RHAT4 _RHAT5 _RHAT6 _RHAT7 _RHAT8 _RHAT9 _tmpPredict _S1_ACCEPTEDCMPTOTAL _S2_MNT _S3_MNTMEATPRODUCTS _S4_NUMCATALOGPURCHASES _S5_RFMSTAT _S6_RECENCY ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
54321      run;
 
NOTE: DATA STEP view saved on file EMWS8.DMNEURAL5_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
54322      quit;
54323      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural5_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ _ERR_ _AVERR_ _DFT_ _DFE_ _MSE_ _RMSE_ _NW_ _FPE_ _RFPE_ _AIC_ _SBC_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" _DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong
Classifications" _DISF_= "Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   label _DFE_= "Train: Degrees of Freedom for Error" _DFT_= "Train: Total Degrees of Freedom" _DFM_= "Train: Model Degrees of Freedom" _MSE_= "Train: Mean Squared Error" _RMSE_= "Train: Root Mean Squared Error" _NW_= "Train:
Number of Weights" _FPE_ = "Train: Final Prediction Error" _RFPE_ = "Train: Root Final Prediction Error" _AIC_= "Train: Akaike's Information Criterion" _SBC_= "Train: Schwarz's Bayesian Criterion" _ERR_= "Train: Error Function" _AVERR_= "Train: Average
Error Function";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ _ERR_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="1" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar1<1e-10 then _ERR_+(-2*(1e10*P_DepVar1-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar="0" then do;
MPRINT(CALFITSTATSNOMINAL):   if P_DepVar0<1e-10 then _ERR_+(-2*(1e10*P_DepVar0-10*LOG(10)-1));
MPRINT(CALFITSTATSNOMINAL):   else _ERR_+(-2*log(P_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   _AVERR_=_ERR_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _NW_=68;
MPRINT(CALFITSTATSNOMINAL):   _DFM_=68;
MPRINT(CALFITSTATSNOMINAL):   _DFT_=_DIV_-_NOBS_;
MPRINT(CALFITSTATSNOMINAL):   _DFE_=_DFT_-_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFE_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MSE_=_ASE_ *_DFT_/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RMSE_=sqrt(_MSE_);
MPRINT(CALFITSTATSNOMINAL):   _FPE_ =_ASE_*(_DFT_+_DFM_)/_DFE_;
MPRINT(CALFITSTATSNOMINAL):   _RFPE_=sqrt(_FPE_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _AIC_=_ERR_+2*_DFM_;
MPRINT(CALFITSTATSNOMINAL):   if _DFT_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _SBC_=_ERR_+_DFM_*log(_DFT_);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.DMNeural5_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" _DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong
Classifications" _DISF_= "Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ _RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.DMNeural5_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
54383      data _tmpds1_;
MPRINT(EM_DIAGRAM):    data _tmpds1_;
54384      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
54385      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
54386      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
54387      STATISTICS = 'Sum of Square Errors';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Sum of Square Errors';
54388      KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _MEAN_;
54389      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
54390      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
54391      Label _MEAN_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _MEAN_ = "Statistic";
54392      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
54393      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
54394      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
54395      rename _MEAN_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _MEAN_ = VALUE;
54396      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._TMPDS1_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54397      data _tmpds2_;
MPRINT(EM_DIAGRAM):   data _tmpds2_;
54398      set EMWS8.DMNeural5_ESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_ESTIMATE;
54399      if _TYPE_ ^='_PARMS_' then delete;
MPRINT(EM_DIAGRAM):   if _TYPE_ ^='_PARMS_' then delete;
54400      length STATISTICS $30;
MPRINT(EM_DIAGRAM):   length STATISTICS $30;
54401      STATISTICS = 'Accuracy Percent';
MPRINT(EM_DIAGRAM):   STATISTICS = 'Accuracy Percent';
54402      KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
MPRINT(EM_DIAGRAM):   KEEP _NAME_ _STAGE_ STATISTICS _STDEV_;
54403      Label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_optfn, noquote))";
MPRINT(EM_DIAGRAM):   Label _NAME_ = "Optimization Function";
54404      Label _STAGE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stage, noquote))";
MPRINT(EM_DIAGRAM):   Label _STAGE_ = "Training Stage";
54405      Label _STDEV_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, noquote))";
MPRINT(EM_DIAGRAM):   Label _STDEV_ = "Statistic";
54406      Label STATISTICS = "%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stats, noquote))";
MPRINT(EM_DIAGRAM):   Label STATISTICS = "Statistics";
54407      rename _NAME_ =OPTIMIZATION;
MPRINT(EM_DIAGRAM):   rename _NAME_ =OPTIMIZATION;
54408      rename _STAGE_=STAGE;
MPRINT(EM_DIAGRAM):   rename _STAGE_=STAGE;
54409      rename _STDEV_ = VALUE;
MPRINT(EM_DIAGRAM):   rename _STDEV_ = VALUE;
54410      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 115 observations read from the data set EMWS8.DMNEURAL5_ESTIMATE.
NOTE: The data set WORK._TMPDS2_ has 80 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
54411      data EMWS8.DMNeural5_PLOTSTAGE;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_PLOTSTAGE;
54412      set _tmpds1_ _tmpds2_;
MPRINT(EM_DIAGRAM):   set _tmpds1_ _tmpds2_;
54413      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 80 observations read from the data set WORK._TMPDS1_.
NOTE: There were 80 observations read from the data set WORK._TMPDS2_.
NOTE: The data set EMWS8.DMNEURAL5_PLOTSTAGE has 160 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
54414      *------------------------------------------------------------*;
54415      * DMNeural5: Computing metadata for TRAIN data;
54416      *------------------------------------------------------------*;
 
NOTE: View EMWS8.DMNEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.DMNeural5_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.DMNeural5_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.DMNeural5_TRAIN out=WORK.M0YRM02E noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YRM02E;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YRM02E(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0YRM02E;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0YRM02E;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1BRYLZ0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35POSKI(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   set WORK.M1BRYLZ0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "DMNeural5";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "DMNeural5";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "DMNeural5";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * DMNeural5: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
54728      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
54729      set EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMINFO;
54730      where DATA='DMNeural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='DMNeural5' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
54731      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
      WHERE (DATA='DMNeural5') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54732      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMINFO;
54733      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
54734      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
54735      cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
54739      run;
54740      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMINFO;
54741      set EMWS8.DMNeural5_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMINFO WORK.MODELTEMP_INFO;
54742      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54743      proc sort data = EMWS8.DMNeural5_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.DMNeural5_EMINFO NOTHREADS;
54744      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54746      proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
54747      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54748      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54749      proc sort data = EMWS8.DMNeural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.DMNeural5_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
54750      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54751      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.DMNEURAL5_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
54752      data EMWS8.DMNeural5_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMINFO;
54753      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
54754      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
54755      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.DMNEURAL5_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54756      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
54757      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
54758      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
54759      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.DMNEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: View EMWS8.DMNEURAL5_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "15.48 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                15.48 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3KW3959 "C:\\predictive-models-project\Workspaces\EMWS8\DMNeural5\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3KW3959 new;
MPRINT(EM_DIAGRAM):   run;
54783      data EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMOUTFIT;
54784      set EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMOUTFIT;
54785      length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
54786      label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
54787      if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
54788      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL5_EMOUTFIT.
NOTE: The data set EMWS8.DMNEURAL5_EMOUTFIT has 1 observations and 31 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54789      proc sort data=EMWS8.DMNeural5_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.DMNeural5_EMREPORTFIT nothreads;
54790      by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
54791      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS8.DMNEURAL5_EMREPORTFIT.
NOTE: The data set EMWS8.DMNEURAL5_EMREPORTFIT has 20 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
54792      %let _EMwarndup = 0;
54793      %let _EMtargetdup =;
54794      %let _EMASEtargetdup =;
54795      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
54796      set EMWS8.DMNeural5_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMOUTFIT;
54797      if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
54798      call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
54799      call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
54800      call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
54801      end;
MPRINT(EM_DIAGRAM):   end;
54802      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.DMNEURAL5_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54803      proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Varsel_CMeta_TRAIN out=WORK.SUBSETINMETA;
54804      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54805      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 10 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
54806      proc sort data=EMWS8.DMNeural5_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.DMNeural5_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
54807      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54808      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL5_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 7 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54809      data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
54810      merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
54811      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
54812      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 7 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 10 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
54813      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
54814      set EMWS8.DMNeural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_CMeta_TRAIN;
54815      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST');
54816      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL5_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
54817      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
54818      set EMWS8.DMNeural5_TRAIN(keep=
54819      F_DepVar
54820      I_DepVar
54821      P_DepVar0
54822      P_DepVar1
54823      R_DepVar0
54824      R_DepVar1
54825      _WARN_
54826      DepVar
54827      );
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1 R_DepVar0 R_DepVar1 _WARN_ DepVar );
54828      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _NORMFMT_ is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.DMNEURAL5_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.DMNEURAL5_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.DMNeural5_35EP_9V nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.DMNeural5_35EP_9V;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32 CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.DMNeural5_35EP_9V(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural5_35EP_9V;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural5_35EP_9V;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_ _LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE = (NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT
MAXPROB MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST (KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS
SCR_CP_EVENTS SCR_P_NONEVENTS SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0 NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0 FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 -
EVENTS100 NONEVENTS1 - NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359 _NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1 SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100 SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP / NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS)) - 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 - SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 - SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 - SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 - SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 - SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 - SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 - SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 - SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 - SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 - SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 - SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 - SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 - SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 - SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 - SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 - SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 - SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 - SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 - SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
59094      data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
59095      set EMWS8.DMNeural5_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_CMeta_TRAIN;
59096      where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
59096    ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
59097      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS8.DMNEURAL5_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 7 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
59098      data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
59099      set EMWS8.DMNeural5_VALIDATE(keep=
59100      F_DepVar
59101      I_DepVar
59102      P_DepVar0
59103      P_DepVar1
59104      R_DepVar0
59105      R_DepVar1
59106      _WARN_
59107      DepVar
59108      );
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 _WARN_ DepVar );
59109      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable _NORMFMT_ is uninitialized.
NOTE: Variable _WARN_ is uninitialized.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.DMNEURAL5_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.DMNEURAL5_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.DMNeural5_2NU6F6U nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.DMNeural5_2NU6F6U;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.DMNeural5_2NU6F6U(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMCLASSIFICATION WORK.DMNeural5_2NU6F6U;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.DMNeural5_2NU6F6U;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.DMNeural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0 OVLMAX 1 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
63384      %let _cn = %sysfunc(getoption(CENTER));
63385      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
63386      proc print data=EMWS8.DMNeural5_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural5_EMREPORTFIT noobs label;
63387      var STAT LABEL TRAIN
63388      VALIDATE
63389      ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
63390      by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
63391      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
63392      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
63393      run;
 
NOTE: There were 20 observations read from the data set EMWS8.DMNEURAL5_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 86.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
63394      title10;
MPRINT(EM_DIAGRAM):   title10;
63395      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
63396      proc sort data=EMWS8.DMNeural5_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.DMNeural5_EMCLASSIFICATION nothreads;
63397      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
63398      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.DMNEURAL5_EMCLASSIFICATION.
NOTE: The data set EMWS8.DMNEURAL5_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
63399      %let _cn = %sysfunc(getoption(CENTER));
63400      options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
63401      proc print data=EMWS8.DMNeural5_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural5_EMCLASSIFICATION noobs label;
63402      var from into pct_row pct_col count percent
63403      ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
63404      by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
63405      label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
63406      label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
63407      label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
63408      label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
63409      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
63410      label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
63411      where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
63412      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
63413      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
63414      run;
 
NOTE: There were 8 observations read from the data set EMWS8.DMNEURAL5_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 87.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
63415      title9;
MPRINT(EM_DIAGRAM):   title9;
63416      title10;
MPRINT(EM_DIAGRAM):   title10;
63417      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
63418      %let _cn = %sysfunc(getoption(CENTER));
63419      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
63420      data EMWS8.DMNeural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.DMNeural5_EMEVENTREPORT;
63421      length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
63421    ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
63422      label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
63422    !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
63422    ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
63422    ! FALSEEVENT
63423      = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
63423    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
63423    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
63424         "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
63425      FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
63426      FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
63427      TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
63428      TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
63429      set EMWS8.DMNeural5_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.DMNeural5_EMEVENTREPORT;
63430      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL5_EMEVENTREPORT.
NOTE: The data set EMWS8.DMNEURAL5_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
63431      proc print data=EMWS8.DMNeural5_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural5_EMEVENTREPORT noobs label;
63432      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
63433      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
63434      by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
63435      run;
 
NOTE: There were 2 observations read from the data set EMWS8.DMNEURAL5_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 88.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
63436      title10;
MPRINT(EM_DIAGRAM):   title10;
63437      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
63438      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
63439      modify DMNeural5_EMRANK;
MPRINT(EM_DIAGRAM):   modify DMNeural5_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
63440      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
63441      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
63441    ! ;
MPRINT(EM_DIAGRAM):   run;
63442      run;
 
NOTE: MODIFY was successful for EMWS8.DMNEURAL5_EMRANK.DATA.
63443      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.20 seconds
      cpu time            0.15 seconds
 
 
63444      %let _cn = %sysfunc(getoption(CENTER));
63445      options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
63446      proc print data=EMWS8.DMNeural5_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural5_EMRANK label noobs;
63447      var
63448      decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
63449      by
63450      notsorted DATAROLE
63451      notsorted TARGET
63452      notsorted TARGETLABEL
63453      ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
63454      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
63455      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
63456      run;
 
NOTE: There were 40 observations read from the data set EMWS8.DMNEURAL5_EMRANK.
NOTE: The PROCEDURE PRINT printed page 89.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
63457      title10;
MPRINT(EM_DIAGRAM):   title10;
63458      options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
63459      proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
63460      modify DMNeural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify DMNeural5_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
63461      label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
63461    ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
63462      label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
63462    ! ;
MPRINT(EM_DIAGRAM):   run;
63463      run;
 
NOTE: MODIFY was successful for EMWS8.DMNEURAL5_EMSCOREDIST.DATA.
63464      quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.DMNeural5_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
