MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.52 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.52 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O14YGKQH 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O14YGKQH new;
MPRINT(EM_DIAGRAM):   run;
697217     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
697218     set EMWS8.Neural15_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural15_OUTKEY;
697219     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
697220     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL15_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

697221     filename emflow
697221   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural15: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
697222     *------------------------------------------------------------*;
697223     * Neural15: Scoring DATA data;
697224     *------------------------------------------------------------*;
697225     data EMWS8.Neural15_TRAIN
697226     / view=EMWS8.Neural15_TRAIN
697227     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_TRAIN / view=EMWS8.Neural15_TRAIN ;
697228     set EMWS8.PRINCOMP_TRAIN
697229     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
697230     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas.
697231    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697232    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
697233    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697234    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
697235    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
697236    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
697237    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
697238    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
697239    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
697240    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
697241    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
697242    +LENGTH _WARN_ $4
697243    +      F_DepVar  $ 12
697244    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
697245    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
697246    +
697247    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
697248    +
697249    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
697250    +
697251    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
697252    +
697253    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
697254    +
697255    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
697256    +
697257    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
697258    +
697259    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
697260    +
697261    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
697262    +
697263    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
697264    +
697265    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
697266    +
697267    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
697268    +
697269    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
697270    +
697271    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
697272    +
697273    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
697274    +
697275    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
697276    +
697277    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
697278    +
697279    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
697280    +
697281    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
697282    +
697283    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
697284    +
697285    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
697286    +
697287    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
697288    +
697289    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
697290    +
697291    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697292    +
697293    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
697294    +
697295    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
697296    +
697297    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
697298    +
697299    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
697300    +
697301    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
697302    +
697303    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
697304    +
697305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697306    +*** Checking missing input Interval
697307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
697308    +
697309    +IF NMISS(
697310    +   PC_1 ,
697311    +   PC_10 ,
697312    +   PC_11 ,
697313    +   PC_12 ,
697314    +   PC_13 ,
697315    +   PC_14 ,
697316    +   PC_15 ,
697317    +   PC_16 ,
697318    +   PC_17 ,
697319    +   PC_2 ,
697320    +   PC_3 ,
697321    +   PC_4 ,
697322    +   PC_5 ,
697323    +   PC_6 ,
697324    +   PC_7 ,
697325    +   PC_8 ,
697326    +   PC_9 ,
697327    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
697328    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
697329    +
697330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
697331    +END;
MPRINT(EM_DIAGRAM):   END;
697332    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697333    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
697334    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697335    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697336    +   S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
697337    +   S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
697338    +   S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
697339    +   S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
697340    +   S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
697341    +   S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
697342    +   S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
697343    +   S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
697344    +   S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
697345    +   S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
697346    +   S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
697347    +   S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
697348    +   S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
697349    +   S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
697350    +   S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
697351    +   S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
697352    +   S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
697353    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697354    +END;
MPRINT(EM_DIAGRAM):   END;
697355    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697356    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
697357    +   ELSE S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
697358    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
697359    +   ELSE S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
697360    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
697361    +   ELSE S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
697362    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
697363    +   ELSE S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
697364    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
697365    +   ELSE S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
697366    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
697367    +   ELSE S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
697368    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
697369    +   ELSE S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
697370    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
697371    +   ELSE S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
697372    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
697373    +   ELSE S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
697374    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
697375    +   ELSE S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
697376    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
697377    +   ELSE S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
697378    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
697379    +   ELSE S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
697380    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
697381    +   ELSE S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
697382    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
697383    +   ELSE S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
697384    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
697385    +   ELSE S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
697386    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
697387    +   ELSE S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
697388    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
697389    +   ELSE S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
697390    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
697391    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
697392    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697393    +END;
MPRINT(EM_DIAGRAM):   END;
697394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697395    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
697396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697397    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697398    +   H11  =     0.21916437094975 * S_PC_1  +     0.46895145057244 * S_PC_10
697399    +          +     0.69761531323014 * S_PC_11  +    -0.30533094236753 * S_PC_12
697400    +          +    -0.36327982586722 * S_PC_13  +     0.19077464191003 * S_PC_14
697401    +          +    -0.21149083974554 * S_PC_15  +     0.01556863915224 * S_PC_16
697402    +          +    -0.16565778772884 * S_PC_17  +    -0.47244513640232 * S_PC_2
697403    +          +    -0.48362143582746 * S_PC_3  +     -0.6605280181533 * S_PC_4
697404    +          +     1.75291826116994 * S_PC_5  +    -0.14058141705537 * S_PC_6
697405    +          +     0.57374810834101 * S_PC_7  +    -1.68225303594881 * S_PC_8
697406    +          +    -0.28316700480518 * S_PC_9  +     0.13982759935686 *
697407    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.21916437094975 * S_PC_1 + 0.46895145057244 * S_PC_10 + 
0.69761531323014 * S_PC_11 + -0.30533094236753 * S_PC_12 + -0.36327982586722 * S_PC_13 + 
0.19077464191003 * S_PC_14 + -0.21149083974554 * S_PC_15 + 0.01556863915224 * S_PC_16 + 
-0.16565778772884 * S_PC_17 + -0.47244513640232 * S_PC_2 + -0.48362143582746 * S_PC_3 + 
-0.6605280181533 * S_PC_4 + 1.75291826116994 * S_PC_5 + -0.14058141705537 * S_PC_6 + 
0.57374810834101 * S_PC_7 + -1.68225303594881 * S_PC_8 + -0.28316700480518 * S_PC_9 + 
0.13982759935686 * S_Year_Birth ;
697408    +   H12  =     0.12101363568223 * S_PC_1  +    -0.31241856262881 * S_PC_10
697409    +          +     0.27517795843322 * S_PC_11  +     0.30784385281478 * S_PC_12
697410    +          +    -0.68118348953077 * S_PC_13  +     0.38168910932118 * S_PC_14
697411    +          +    -0.24780681116297 * S_PC_15  +     0.17546547375236 * S_PC_16
697412    +          +    -0.07928517707643 * S_PC_17  +    -0.38048211293088 * S_PC_2
697413    +          +    -0.32652116779986 * S_PC_3  +      0.1905705021635 * S_PC_4
697414    +          +     0.12972604290011 * S_PC_5  +      0.0372364587024 * S_PC_6
697415    +          +     0.05952907527719 * S_PC_7  +     0.26219877622748 * S_PC_8
697416    +          +     0.14791742323382 * S_PC_9  +     0.26135521159879 *
697417    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.12101363568223 * S_PC_1 + -0.31241856262881 * S_PC_10 + 
0.27517795843322 * S_PC_11 + 0.30784385281478 * S_PC_12 + -0.68118348953077 * S_PC_13 + 
0.38168910932118 * S_PC_14 + -0.24780681116297 * S_PC_15 + 0.17546547375236 * S_PC_16 + 
-0.07928517707643 * S_PC_17 + -0.38048211293088 * S_PC_2 + -0.32652116779986 * S_PC_3 + 
0.1905705021635 * S_PC_4 + 0.12972604290011 * S_PC_5 + 0.0372364587024 * S_PC_6 + 
0.05952907527719 * S_PC_7 + 0.26219877622748 * S_PC_8 + 0.14791742323382 * S_PC_9 + 
0.26135521159879 * S_Year_Birth ;
697418    +   H13  =     0.64533167919436 * S_PC_1  +    -0.72127290093209 * S_PC_10
697419    +          +     0.89051319575822 * S_PC_11  +     0.97129300386918 * S_PC_12
697420    +          +    -1.18593762568769 * S_PC_13  +     0.47068229576395 * S_PC_14
697421    +          +    -0.69039875931197 * S_PC_15  +    -0.00791179223736 * S_PC_16
697422    +          +    -0.78504365089536 * S_PC_17  +    -0.59206299847209 * S_PC_2
697423    +          +    -0.12379110893706 * S_PC_3  +    -0.05437594004394 * S_PC_4
697424    +          +    -0.65391054090833 * S_PC_5  +      0.2995761236398 * S_PC_6
697425    +          +    -0.55231380268006 * S_PC_7  +    -0.21239257615541 * S_PC_8
697426    +          +    -0.11441544666014 * S_PC_9  +    -0.23347547419068 *
697427    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.64533167919436 * S_PC_1 + -0.72127290093209 * S_PC_10 + 
0.89051319575822 * S_PC_11 + 0.97129300386918 * S_PC_12 + -1.18593762568769 * S_PC_13 + 
0.47068229576395 * S_PC_14 + -0.69039875931197 * S_PC_15 + -0.00791179223736 * S_PC_16 + 
-0.78504365089536 * S_PC_17 + -0.59206299847209 * S_PC_2 + -0.12379110893706 * S_PC_3 + 
-0.05437594004394 * S_PC_4 + -0.65391054090833 * S_PC_5 + 0.2995761236398 * S_PC_6 + 
-0.55231380268006 * S_PC_7 + -0.21239257615541 * S_PC_8 + -0.11441544666014 * S_PC_9 + 
-0.23347547419068 * S_Year_Birth ;
697428    +   H14  =      1.0360241934974 * S_PC_1  +    -0.39202225240717 * S_PC_10
697429    +          +    -0.32200625669175 * S_PC_11  +    -0.61609290980998 * S_PC_12
697430    +          +    -0.31436369432897 * S_PC_13  +    -0.00486117515969 * S_PC_14
697431    +          +    -0.02713823284007 * S_PC_15  +      0.0791834118799 * S_PC_16
697432    +          +     0.20897685763318 * S_PC_17  +    -0.22176247499996 * S_PC_2
697433    +          +      0.4739224953207 * S_PC_3  +     -0.3176011848773 * S_PC_4
697434    +          +     0.05774699044917 * S_PC_5  +    -0.05726336170428 * S_PC_6
697435    +          +     -0.0914058382418 * S_PC_7  +    -0.31886775814838 * S_PC_8
697436    +          +     0.43994345953404 * S_PC_9  +     0.10106394892699 *
697437    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 1.0360241934974 * S_PC_1 + -0.39202225240717 * S_PC_10 + 
-0.32200625669175 * S_PC_11 + -0.61609290980998 * S_PC_12 + -0.31436369432897 * S_PC_13 + 
-0.00486117515969 * S_PC_14 + -0.02713823284007 * S_PC_15 + 0.0791834118799 * S_PC_16 + 
0.20897685763318 * S_PC_17 + -0.22176247499996 * S_PC_2 + 0.4739224953207 * S_PC_3 + 
-0.3176011848773 * S_PC_4 + 0.05774699044917 * S_PC_5 + -0.05726336170428 * S_PC_6 + 
-0.0914058382418 * S_PC_7 + -0.31886775814838 * S_PC_8 + 0.43994345953404 * S_PC_9 + 
0.10106394892699 * S_Year_Birth ;
697438    +   H11  =    -0.55123213858302 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.55123213858302 + H11 ;
697439    +   H12  =    -0.75869313709114 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.75869313709114 + H12 ;
697440    +   H13  =     1.40273224689344 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.40273224689344 + H13 ;
697441    +   H14  =    -2.25765100137563 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.25765100137563 + H14 ;
697442    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
697443    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
697444    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
697445    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
697446    +END;
MPRINT(EM_DIAGRAM):   END;
697447    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697448    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
697449    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
697450    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
697451    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
697452    +END;
MPRINT(EM_DIAGRAM):   END;
697453    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697454    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
697455    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697456    +
697457    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
697458    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
697459    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697460    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
697461    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
697462    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
697463    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
697464    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697465    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697466    +end;
MPRINT(EM_DIAGRAM):   end;
697467    +else do;
MPRINT(EM_DIAGRAM):   else do;
697468    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
697469    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
697470    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
697471    +   end;
MPRINT(EM_DIAGRAM):   end;
697472    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
697473    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
697474    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
697475    +   end;
MPRINT(EM_DIAGRAM):   end;
697476    +   else do;
MPRINT(EM_DIAGRAM):   else do;
697477    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697478    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697479    +   end;
MPRINT(EM_DIAGRAM):   end;
697480    +end;
MPRINT(EM_DIAGRAM):   end;
697481    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697482    +   P_DepVar1  =    -2.64261520585079 * H11  +     2.97929850273952 * H12
697483    +          +      1.9009978796506 * H13  +      2.8189101465563 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.64261520585079 * H11 + 2.97929850273952 * H12 + 
1.9009978796506 * H13 + 2.8189101465563 * H14 ;
697484    +   P_DepVar1  =     -1.5309097146626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5309097146626 + P_DepVar1 ;
697485    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
697486    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
697487    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
697488    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
697489    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
697490    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
697491    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
697492    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
697493    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
697494    +END;
MPRINT(EM_DIAGRAM):   END;
697495    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697496    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
697497    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
697498    +END;
MPRINT(EM_DIAGRAM):   END;
697499    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
697500    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
697501    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
697502    +END;
MPRINT(EM_DIAGRAM):   END;
697503    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
697504    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
697505    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
697506    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
697507    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
697508    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
697509    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
697510    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697511    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
697512    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697513    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
697514    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
697515    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
697516    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
697517    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
697518    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
697519    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
697520    +END;
MPRINT(EM_DIAGRAM):   END;
697521    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697522    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
697523    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697524    +drop
697525    +H11
697526    +H12
697527    +H13
697528    +H14
697529    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
697530    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
697531     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL15_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
697532     quit;
697533     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
697534     filename emflow
697534   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural15: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
697535     *------------------------------------------------------------*;
697536     * Neural15: Scoring VALIDATE data;
697537     *------------------------------------------------------------*;
697538     data EMWS8.Neural15_VALIDATE
697539     / view=EMWS8.Neural15_VALIDATE
697540     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_VALIDATE / view=EMWS8.Neural15_VALIDATE ;
697541     set EMWS8.PRINCOMP_VALIDATE
697542     ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
697543     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas.
697544    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697545    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
697546    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
697547    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
697548    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
697549    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
697550    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
697551    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
697552    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
697553    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
697554    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
697555    +LENGTH _WARN_ $4
697556    +      F_DepVar  $ 12
697557    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
697558    +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
697559    +
697560    +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
697561    +
697562    +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
697563    +
697564    +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
697565    +
697566    +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
697567    +
697568    +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
697569    +
697570    +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
697571    +
697572    +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
697573    +
697574    +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
697575    +
697576    +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
697577    +
697578    +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
697579    +
697580    +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
697581    +
697582    +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
697583    +
697584    +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
697585    +
697586    +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
697587    +
697588    +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
697589    +
697590    +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
697591    +
697592    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
697593    +
697594    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
697595    +
697596    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
697597    +
697598    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
697599    +
697600    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
697601    +
697602    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
697603    +
697604    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697605    +
697606    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
697607    +
697608    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
697609    +
697610    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
697611    +
697612    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
697613    +
697614    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
697615    +
697616    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
697617    +
697618    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697619    +*** Checking missing input Interval
697620    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
697621    +
697622    +IF NMISS(
697623    +   PC_1 ,
697624    +   PC_10 ,
697625    +   PC_11 ,
697626    +   PC_12 ,
697627    +   PC_13 ,
697628    +   PC_14 ,
697629    +   PC_15 ,
697630    +   PC_16 ,
697631    +   PC_17 ,
697632    +   PC_2 ,
697633    +   PC_3 ,
697634    +   PC_4 ,
697635    +   PC_5 ,
697636    +   PC_6 ,
697637    +   PC_7 ,
697638    +   PC_8 ,
697639    +   PC_9 ,
697640    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
697641    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
697642    +
697643    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
697644    +END;
MPRINT(EM_DIAGRAM):   END;
697645    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697646    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
697647    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697648    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697649    +   S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
697650    +   S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
697651    +   S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
697652    +   S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
697653    +   S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
697654    +   S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
697655    +   S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
697656    +   S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
697657    +   S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
697658    +   S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
697659    +   S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
697660    +   S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
697661    +   S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
697662    +   S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
697663    +   S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
697664    +   S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
697665    +   S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
697666    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697667    +END;
MPRINT(EM_DIAGRAM):   END;
697668    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697669    +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
697670    +   ELSE S_PC_1  = -3.6294364555292E-15 +     0.29892679459111 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.6294364555292E-15 + 0.29892679459111 * PC_1 ;
697671    +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
697672    +   ELSE S_PC_10  = -6.2815536802709E-15 +     0.82177445188012 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.2815536802709E-15 + 0.82177445188012 * PC_10 ;
697673    +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
697674    +   ELSE S_PC_11  =  5.2785706580609E-15 +     0.85631006900792 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 5.2785706580609E-15 + 0.85631006900792 * PC_11 ;
697675    +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
697676    +   ELSE S_PC_12  = -4.1387290416389E-15 +     0.88807871240911 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -4.1387290416389E-15 + 0.88807871240911 * PC_12 ;
697677    +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
697678    +   ELSE S_PC_13  =  1.4589830727918E-15 +     0.89679107329648 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4589830727918E-15 + 0.89679107329648 * PC_13 ;
697679    +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
697680    +   ELSE S_PC_14  = -6.2822189123966E-15 +     0.90339654117007 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.2822189123966E-15 + 0.90339654117007 * PC_14 ;
697681    +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
697682    +   ELSE S_PC_15  = -5.2248121649466E-16 +     0.92993702465165 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -5.2248121649466E-16 + 0.92993702465165 * PC_15 ;
697683    +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
697684    +   ELSE S_PC_16  = -2.6897046725231E-15 +     0.95121394314649 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.6897046725231E-15 + 0.95121394314649 * PC_16 ;
697685    +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
697686    +   ELSE S_PC_17  =  3.5787742074362E-15 +     0.99887425068205 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 3.5787742074362E-15 + 0.99887425068205 * PC_17 ;
697687    +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
697688    +   ELSE S_PC_2  =  6.4113141631876E-15 +     0.54372869580717 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4113141631876E-15 + 0.54372869580717 * PC_2 ;
697689    +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
697690    +   ELSE S_PC_3  =  2.2104329668238E-15 +     0.55367221144899 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2104329668238E-15 + 0.55367221144899 * PC_3 ;
697691    +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
697692    +   ELSE S_PC_4  = -3.9509679191637E-15 +     0.63694139531868 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.9509679191637E-15 + 0.63694139531868 * PC_4 ;
697693    +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
697694    +   ELSE S_PC_5  = -4.7850489168894E-15 +     0.66667841601593 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.7850489168894E-15 + 0.66667841601593 * PC_5 ;
697695    +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
697696    +   ELSE S_PC_6  =  1.5058392834001E-15 +     0.70535593591745 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5058392834001E-15 + 0.70535593591745 * PC_6 ;
697697    +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
697698    +   ELSE S_PC_7  =  2.9182665890544E-16 +     0.74929827240347 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 2.9182665890544E-16 + 0.74929827240347 * PC_7 ;
697699    +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
697700    +   ELSE S_PC_8  = -2.3914410530745E-15 +     0.77166055611422 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3914410530745E-15 + 0.77166055611422 * PC_8 ;
697701    +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
697702    +   ELSE S_PC_9  = -4.1831576010329E-15 +     0.80828482156853 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -4.1831576010329E-15 + 0.80828482156853 * PC_9 ;
697703    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
697704    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
697705    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
697706    +END;
MPRINT(EM_DIAGRAM):   END;
697707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697708    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
697709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697710    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697711    +   H11  =     0.21916437094975 * S_PC_1  +     0.46895145057244 * S_PC_10
697712    +          +     0.69761531323014 * S_PC_11  +    -0.30533094236753 * S_PC_12
697713    +          +    -0.36327982586722 * S_PC_13  +     0.19077464191003 * S_PC_14
697714    +          +    -0.21149083974554 * S_PC_15  +     0.01556863915224 * S_PC_16
697715    +          +    -0.16565778772884 * S_PC_17  +    -0.47244513640232 * S_PC_2
697716    +          +    -0.48362143582746 * S_PC_3  +     -0.6605280181533 * S_PC_4
697717    +          +     1.75291826116994 * S_PC_5  +    -0.14058141705537 * S_PC_6
697718    +          +     0.57374810834101 * S_PC_7  +    -1.68225303594881 * S_PC_8
697719    +          +    -0.28316700480518 * S_PC_9  +     0.13982759935686 *
697720    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.21916437094975 * S_PC_1 + 0.46895145057244 * S_PC_10 + 
0.69761531323014 * S_PC_11 + -0.30533094236753 * S_PC_12 + -0.36327982586722 * S_PC_13 + 
0.19077464191003 * S_PC_14 + -0.21149083974554 * S_PC_15 + 0.01556863915224 * S_PC_16 + 
-0.16565778772884 * S_PC_17 + -0.47244513640232 * S_PC_2 + -0.48362143582746 * S_PC_3 + 
-0.6605280181533 * S_PC_4 + 1.75291826116994 * S_PC_5 + -0.14058141705537 * S_PC_6 + 
0.57374810834101 * S_PC_7 + -1.68225303594881 * S_PC_8 + -0.28316700480518 * S_PC_9 + 
0.13982759935686 * S_Year_Birth ;
697721    +   H12  =     0.12101363568223 * S_PC_1  +    -0.31241856262881 * S_PC_10
697722    +          +     0.27517795843322 * S_PC_11  +     0.30784385281478 * S_PC_12
697723    +          +    -0.68118348953077 * S_PC_13  +     0.38168910932118 * S_PC_14
697724    +          +    -0.24780681116297 * S_PC_15  +     0.17546547375236 * S_PC_16
697725    +          +    -0.07928517707643 * S_PC_17  +    -0.38048211293088 * S_PC_2
697726    +          +    -0.32652116779986 * S_PC_3  +      0.1905705021635 * S_PC_4
697727    +          +     0.12972604290011 * S_PC_5  +      0.0372364587024 * S_PC_6
697728    +          +     0.05952907527719 * S_PC_7  +     0.26219877622748 * S_PC_8
697729    +          +     0.14791742323382 * S_PC_9  +     0.26135521159879 *
697730    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.12101363568223 * S_PC_1 + -0.31241856262881 * S_PC_10 + 
0.27517795843322 * S_PC_11 + 0.30784385281478 * S_PC_12 + -0.68118348953077 * S_PC_13 + 
0.38168910932118 * S_PC_14 + -0.24780681116297 * S_PC_15 + 0.17546547375236 * S_PC_16 + 
-0.07928517707643 * S_PC_17 + -0.38048211293088 * S_PC_2 + -0.32652116779986 * S_PC_3 + 
0.1905705021635 * S_PC_4 + 0.12972604290011 * S_PC_5 + 0.0372364587024 * S_PC_6 + 
0.05952907527719 * S_PC_7 + 0.26219877622748 * S_PC_8 + 0.14791742323382 * S_PC_9 + 
0.26135521159879 * S_Year_Birth ;
697731    +   H13  =     0.64533167919436 * S_PC_1  +    -0.72127290093209 * S_PC_10
697732    +          +     0.89051319575822 * S_PC_11  +     0.97129300386918 * S_PC_12
697733    +          +    -1.18593762568769 * S_PC_13  +     0.47068229576395 * S_PC_14
697734    +          +    -0.69039875931197 * S_PC_15  +    -0.00791179223736 * S_PC_16
697735    +          +    -0.78504365089536 * S_PC_17  +    -0.59206299847209 * S_PC_2
697736    +          +    -0.12379110893706 * S_PC_3  +    -0.05437594004394 * S_PC_4
697737    +          +    -0.65391054090833 * S_PC_5  +      0.2995761236398 * S_PC_6
697738    +          +    -0.55231380268006 * S_PC_7  +    -0.21239257615541 * S_PC_8
697739    +          +    -0.11441544666014 * S_PC_9  +    -0.23347547419068 *
697740    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.64533167919436 * S_PC_1 + -0.72127290093209 * S_PC_10 + 
0.89051319575822 * S_PC_11 + 0.97129300386918 * S_PC_12 + -1.18593762568769 * S_PC_13 + 
0.47068229576395 * S_PC_14 + -0.69039875931197 * S_PC_15 + -0.00791179223736 * S_PC_16 + 
-0.78504365089536 * S_PC_17 + -0.59206299847209 * S_PC_2 + -0.12379110893706 * S_PC_3 + 
-0.05437594004394 * S_PC_4 + -0.65391054090833 * S_PC_5 + 0.2995761236398 * S_PC_6 + 
-0.55231380268006 * S_PC_7 + -0.21239257615541 * S_PC_8 + -0.11441544666014 * S_PC_9 + 
-0.23347547419068 * S_Year_Birth ;
697741    +   H14  =      1.0360241934974 * S_PC_1  +    -0.39202225240717 * S_PC_10
697742    +          +    -0.32200625669175 * S_PC_11  +    -0.61609290980998 * S_PC_12
697743    +          +    -0.31436369432897 * S_PC_13  +    -0.00486117515969 * S_PC_14
697744    +          +    -0.02713823284007 * S_PC_15  +      0.0791834118799 * S_PC_16
697745    +          +     0.20897685763318 * S_PC_17  +    -0.22176247499996 * S_PC_2
697746    +          +      0.4739224953207 * S_PC_3  +     -0.3176011848773 * S_PC_4
697747    +          +     0.05774699044917 * S_PC_5  +    -0.05726336170428 * S_PC_6
697748    +          +     -0.0914058382418 * S_PC_7  +    -0.31886775814838 * S_PC_8
697749    +          +     0.43994345953404 * S_PC_9  +     0.10106394892699 *
697750    +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 1.0360241934974 * S_PC_1 + -0.39202225240717 * S_PC_10 + 
-0.32200625669175 * S_PC_11 + -0.61609290980998 * S_PC_12 + -0.31436369432897 * S_PC_13 + 
-0.00486117515969 * S_PC_14 + -0.02713823284007 * S_PC_15 + 0.0791834118799 * S_PC_16 + 
0.20897685763318 * S_PC_17 + -0.22176247499996 * S_PC_2 + 0.4739224953207 * S_PC_3 + 
-0.3176011848773 * S_PC_4 + 0.05774699044917 * S_PC_5 + -0.05726336170428 * S_PC_6 + 
-0.0914058382418 * S_PC_7 + -0.31886775814838 * S_PC_8 + 0.43994345953404 * S_PC_9 + 
0.10106394892699 * S_Year_Birth ;
697751    +   H11  =    -0.55123213858302 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.55123213858302 + H11 ;
697752    +   H12  =    -0.75869313709114 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.75869313709114 + H12 ;
697753    +   H13  =     1.40273224689344 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.40273224689344 + H13 ;
697754    +   H14  =    -2.25765100137563 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.25765100137563 + H14 ;
697755    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
697756    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
697757    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
697758    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
697759    +END;
MPRINT(EM_DIAGRAM):   END;
697760    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697761    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
697762    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
697763    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
697764    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
697765    +END;
MPRINT(EM_DIAGRAM):   END;
697766    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697767    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
697768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697769    +
697770    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
697771    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
697772    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
697773    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
697774    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
697775    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
697776    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
697777    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697778    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697779    +end;
MPRINT(EM_DIAGRAM):   end;
697780    +else do;
MPRINT(EM_DIAGRAM):   else do;
697781    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
697782    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
697783    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
697784    +   end;
MPRINT(EM_DIAGRAM):   end;
697785    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
697786    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
697787    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
697788    +   end;
MPRINT(EM_DIAGRAM):   end;
697789    +   else do;
MPRINT(EM_DIAGRAM):   else do;
697790    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
697791    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
697792    +   end;
MPRINT(EM_DIAGRAM):   end;
697793    +end;
MPRINT(EM_DIAGRAM):   end;
697794    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
697795    +   P_DepVar1  =    -2.64261520585079 * H11  +     2.97929850273952 * H12
697796    +          +      1.9009978796506 * H13  +      2.8189101465563 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.64261520585079 * H11 + 2.97929850273952 * H12 + 
1.9009978796506 * H13 + 2.8189101465563 * H14 ;
697797    +   P_DepVar1  =     -1.5309097146626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.5309097146626 + P_DepVar1 ;
697798    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
697799    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
697800    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
697801    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
697802    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
697803    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
697804    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
697805    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
697806    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
697807    +END;
MPRINT(EM_DIAGRAM):   END;
697808    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
697809    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
697810    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
697811    +END;
MPRINT(EM_DIAGRAM):   END;
697812    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
697813    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
697814    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
697815    +END;
MPRINT(EM_DIAGRAM):   END;
697816    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
697817    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
697818    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
697819    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
697820    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
697821    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
697822    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
697823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697824    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
697825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
697826    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
697827    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
697828    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
697829    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
697830    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
697831    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
697832    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
697833    +END;
MPRINT(EM_DIAGRAM):   END;
697834    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697835    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
697836    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
697837    +drop
697838    +H11
697839    +H12
697840    +H13
697841    +H14
697842    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
697843    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
697844     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL15_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
697845     quit;
697846     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
697847     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
697848     * Neural15: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural15: Computing metadata for TRAIN data;
697849     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL15_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural15_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural15_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural15_TRAIN out=WORK.M2JGB6T5 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JGB6T5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JGB6T5(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2JGB6T5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2JGB6T5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M35N9MWF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35N9MWF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M35N9MWF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19P50YB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M35N9MWF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35N9MWF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M35N9MWF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M35N9MWF;
MPRINT(EMADVISECOLUMNS):   set WORK.M35N9MWF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural15";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural15";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural15: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
698161     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
698162     set EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural15_EMINFO;
698163     where DATA='Neural15' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural15' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
698164     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL15_EMINFO.
      WHERE (DATA='Neural15') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698165     data EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural15_EMINFO;
698166     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
698167     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
698168     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
698172     run;
698173     data EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_EMINFO;
698174     set EMWS8.Neural15_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural15_EMINFO WORK.MODELTEMP_INFO;
698175     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL15_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698176     proc sort data = EMWS8.Neural15_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural15_EMINFO NOTHREADS;
698177     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL15_EMINFO.
NOTE: The data set EMWS8.NEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698179     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
698180     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

698182     proc sort data = EMWS8.Neural15_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural15_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
698183     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698184     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL15_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698185     data EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_EMINFO;
698186     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
698187     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
698188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL15_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

698189     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
698190     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
698191     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
698192     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL15_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL15_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
