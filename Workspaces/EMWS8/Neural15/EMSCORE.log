MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "09.25 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                09.25 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O16YI0Y0 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O16YI0Y0 new;
MPRINT(EM_DIAGRAM):   run;
1554160    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1554161    set EMWS8.Neural15_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural15_OUTKEY;
1554162    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1554163    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL15_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1554164    filename emflow
1554164  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural15: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554165    *------------------------------------------------------------*;
1554166    * Neural15: Scoring DATA data;
1554167    *------------------------------------------------------------*;
1554168    data EMWS8.Neural15_TRAIN
1554169    / view=EMWS8.Neural15_TRAIN
1554170    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_TRAIN / view=EMWS8.Neural15_TRAIN ;
1554171    set EMWS8.PRINCOMP_TRAIN
1554172    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_TRAIN ;
1554173    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas.
1554174   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554175   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1554176   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554177   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1554178   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1554179   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1554180   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1554181   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1554182   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1554183   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1554184   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1554185   +LENGTH _WARN_ $4
1554186   +      F_DepVar  $ 12
1554187   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1554188   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1554189   +
1554190   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1554191   +
1554192   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1554193   +
1554194   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1554195   +
1554196   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1554197   +
1554198   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1554199   +
1554200   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1554201   +
1554202   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1554203   +
1554204   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1554205   +
1554206   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1554207   +
1554208   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1554209   +
1554210   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1554211   +
1554212   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1554213   +
1554214   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1554215   +
1554216   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1554217   +
1554218   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1554219   +
1554220   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1554221   +
1554222   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1554223   +
1554224   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1554225   +
1554226   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1554227   +
1554228   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1554229   +
1554230   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1554231   +
1554232   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1554233   +
1554234   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1554235   +
1554236   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1554237   +
1554238   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1554239   +
1554240   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1554241   +
1554242   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1554243   +
1554244   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1554245   +
1554246   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1554247   +
1554248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554249   +*** Checking missing input Interval
1554250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1554251   +
1554252   +IF NMISS(
1554253   +   PC_1 ,
1554254   +   PC_10 ,
1554255   +   PC_11 ,
1554256   +   PC_12 ,
1554257   +   PC_13 ,
1554258   +   PC_14 ,
1554259   +   PC_15 ,
1554260   +   PC_16 ,
1554261   +   PC_17 ,
1554262   +   PC_2 ,
1554263   +   PC_3 ,
1554264   +   PC_4 ,
1554265   +   PC_5 ,
1554266   +   PC_6 ,
1554267   +   PC_7 ,
1554268   +   PC_8 ,
1554269   +   PC_9 ,
1554270   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1554271   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1554272   +
1554273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554274   +END;
MPRINT(EM_DIAGRAM):   END;
1554275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554276   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1554277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554278   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554279   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1554280   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1554281   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1554282   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1554283   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1554284   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1554285   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1554286   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1554287   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1554288   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1554289   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1554290   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1554291   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1554292   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1554293   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1554294   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1554295   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1554296   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1554297   +END;
MPRINT(EM_DIAGRAM):   END;
1554298   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554299   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1554300   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1554301   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1554302   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1554303   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1554304   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1554305   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1554306   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1554307   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1554308   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1554309   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1554310   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1554311   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1554312   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1554313   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1554314   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1554315   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1554316   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1554317   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1554318   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1554319   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1554320   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1554321   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1554322   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1554323   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1554324   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1554325   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1554326   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1554327   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1554328   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1554329   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1554330   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1554331   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1554332   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1554333   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1554334   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1554335   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1554336   +END;
MPRINT(EM_DIAGRAM):   END;
1554337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554338   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1554339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554340   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554341   +   H11  =      0.2142022960337 * S_PC_1  +     0.45958481274618 * S_PC_10
1554342   +          +     0.69707764460073 * S_PC_11  +    -0.28731584859801 * S_PC_12
1554343   +          +    -0.36950107897164 * S_PC_13  +     0.18809798735641 * S_PC_14
1554344   +          +     -0.2130015500898 * S_PC_15  +      0.0071701964964 * S_PC_16
1554345   +          +    -0.16484342463114 * S_PC_17  +    -0.45239110771446 * S_PC_2
1554346   +          +    -0.46983508200606 * S_PC_3  +    -0.66796376673143 * S_PC_4
1554347   +          +     1.74809683790662 * S_PC_5  +    -0.13522760990537 * S_PC_6
1554348   +          +     0.55932520504169 * S_PC_7  +     -1.6522575410041 * S_PC_8
1554349   +          +    -0.27156327412277 * S_PC_9  +     0.13502580420273 *
1554350   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.2142022960337 * S_PC_1 + 0.45958481274618 * S_PC_10 + 
0.69707764460073 * S_PC_11 + -0.28731584859801 * S_PC_12 + -0.36950107897164 * S_PC_13 + 
0.18809798735641 * S_PC_14 + -0.2130015500898 * S_PC_15 + 0.0071701964964 * S_PC_16 + 
-0.16484342463114 * S_PC_17 + -0.45239110771446 * S_PC_2 + -0.46983508200606 * S_PC_3 + 
-0.66796376673143 * S_PC_4 + 1.74809683790662 * S_PC_5 + -0.13522760990537 * S_PC_6 + 
0.55932520504169 * S_PC_7 + -1.6522575410041 * S_PC_8 + -0.27156327412277 * S_PC_9 + 
0.13502580420273 * S_Year_Birth ;
1554351   +   H12  =     0.11812229131662 * S_PC_1  +    -0.30871683896859 * S_PC_10
1554352   +          +     0.27201131036585 * S_PC_11  +     0.30251258127641 * S_PC_12
1554353   +          +    -0.67346016770754 * S_PC_13  +     0.37176061574683 * S_PC_14
1554354   +          +    -0.23991822296987 * S_PC_15  +     0.16688456482026 * S_PC_16
1554355   +          +    -0.07997426604796 * S_PC_17  +    -0.37489008231683 * S_PC_2
1554356   +          +    -0.31917168095976 * S_PC_3  +      0.1852305444751 * S_PC_4
1554357   +          +     0.12292563944212 * S_PC_5  +       0.040943627574 * S_PC_6
1554358   +          +     0.06243182785513 * S_PC_7  +      0.2576666765474 * S_PC_8
1554359   +          +     0.14669869508947 * S_PC_9  +     0.25287680510356 *
1554360   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.11812229131662 * S_PC_1 + -0.30871683896859 * S_PC_10 + 
0.27201131036585 * S_PC_11 + 0.30251258127641 * S_PC_12 + -0.67346016770754 * S_PC_13 + 
0.37176061574683 * S_PC_14 + -0.23991822296987 * S_PC_15 + 0.16688456482026 * S_PC_16 + 
-0.07997426604796 * S_PC_17 + -0.37489008231683 * S_PC_2 + -0.31917168095976 * S_PC_3 + 
0.1852305444751 * S_PC_4 + 0.12292563944212 * S_PC_5 + 0.040943627574 * S_PC_6 + 
0.06243182785513 * S_PC_7 + 0.2576666765474 * S_PC_8 + 0.14669869508947 * S_PC_9 + 
0.25287680510356 * S_Year_Birth ;
1554361   +   H13  =     0.64343224615395 * S_PC_1  +    -0.70988675774855 * S_PC_10
1554362   +          +     0.88271581211552 * S_PC_11  +     0.96991990033944 * S_PC_12
1554363   +          +    -1.17246354807186 * S_PC_13  +     0.46319326792627 * S_PC_14
1554364   +          +    -0.68647913740539 * S_PC_15  +    -0.01341897678398 * S_PC_16
1554365   +          +    -0.77351032460481 * S_PC_17  +    -0.57723175268209 * S_PC_2
1554366   +          +    -0.11732850831905 * S_PC_3  +    -0.04783645844047 * S_PC_4
1554367   +          +    -0.64916508516345 * S_PC_5  +     0.29343176558715 * S_PC_6
1554368   +          +    -0.54745345702111 * S_PC_7  +    -0.21360252466545 * S_PC_8
1554369   +          +    -0.12601782119443 * S_PC_9  +    -0.23396269663696 *
1554370   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.64343224615395 * S_PC_1 + -0.70988675774855 * S_PC_10 + 
0.88271581211552 * S_PC_11 + 0.96991990033944 * S_PC_12 + -1.17246354807186 * S_PC_13 + 
0.46319326792627 * S_PC_14 + -0.68647913740539 * S_PC_15 + -0.01341897678398 * S_PC_16 + 
-0.77351032460481 * S_PC_17 + -0.57723175268209 * S_PC_2 + -0.11732850831905 * S_PC_3 + 
-0.04783645844047 * S_PC_4 + -0.64916508516345 * S_PC_5 + 0.29343176558715 * S_PC_6 + 
-0.54745345702111 * S_PC_7 + -0.21360252466545 * S_PC_8 + -0.12601782119443 * S_PC_9 + 
-0.23396269663696 * S_Year_Birth ;
1554371   +   H14  =      1.0341215312277 * S_PC_1  +    -0.39415731025938 * S_PC_10
1554372   +          +    -0.32060014638152 * S_PC_11  +    -0.61669234969925 * S_PC_12
1554373   +          +    -0.31179815348792 * S_PC_13  +    -0.00798094231062 * S_PC_14
1554374   +          +    -0.02653679285646 * S_PC_15  +     0.07670313502809 * S_PC_16
1554375   +          +     0.21136382302776 * S_PC_17  +    -0.22154119624002 * S_PC_2
1554376   +          +     0.47642619465816 * S_PC_3  +    -0.31672307688174 * S_PC_4
1554377   +          +     0.05874501739573 * S_PC_5  +    -0.05897167931726 * S_PC_6
1554378   +          +    -0.09671465231304 * S_PC_7  +    -0.31597714355748 * S_PC_8
1554379   +          +     0.43891531065352 * S_PC_9  +     0.09716703238388 *
1554380   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 1.0341215312277 * S_PC_1 + -0.39415731025938 * S_PC_10 + 
-0.32060014638152 * S_PC_11 + -0.61669234969925 * S_PC_12 + -0.31179815348792 * S_PC_13 + 
-0.00798094231062 * S_PC_14 + -0.02653679285646 * S_PC_15 + 0.07670313502809 * S_PC_16 + 
0.21136382302776 * S_PC_17 + -0.22154119624002 * S_PC_2 + 0.47642619465816 * S_PC_3 + 
-0.31672307688174 * S_PC_4 + 0.05874501739573 * S_PC_5 + -0.05897167931726 * S_PC_6 + 
-0.09671465231304 * S_PC_7 + -0.31597714355748 * S_PC_8 + 0.43891531065352 * S_PC_9 + 
0.09716703238388 * S_Year_Birth ;
1554381   +   H11  =    -0.54498134015293 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.54498134015293 + H11 ;
1554382   +   H12  =    -0.74199857282203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.74199857282203 + H12 ;
1554383   +   H13  =     1.38839834700907 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.38839834700907 + H13 ;
1554384   +   H14  =     -2.2533612485392 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.2533612485392 + H14 ;
1554385   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1554386   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1554387   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1554388   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1554389   +END;
MPRINT(EM_DIAGRAM):   END;
1554390   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554391   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1554392   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1554393   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1554394   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1554395   +END;
MPRINT(EM_DIAGRAM):   END;
1554396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554397   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1554398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554399   +
1554400   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1554401   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1554402   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1554403   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1554404   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1554405   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554406   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1554407   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1554408   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1554409   +end;
MPRINT(EM_DIAGRAM):   end;
1554410   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554411   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1554412   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1554413   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1554414   +   end;
MPRINT(EM_DIAGRAM):   end;
1554415   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1554416   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1554417   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1554418   +   end;
MPRINT(EM_DIAGRAM):   end;
1554419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554420   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1554421   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1554422   +   end;
MPRINT(EM_DIAGRAM):   end;
1554423   +end;
MPRINT(EM_DIAGRAM):   end;
1554424   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554425   +   P_DepVar1  =    -2.60708041357943 * H11  +     3.00483048817261 * H12
1554426   +          +     1.87856416825462 * H13  +      2.8062260938905 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.60708041357943 * H11 + 3.00483048817261 * H12 + 
1.87856416825462 * H13 + 2.8062260938905 * H14 ;
1554427   +   P_DepVar1  =    -1.50175498849739 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.50175498849739 + P_DepVar1 ;
1554428   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1554429   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1554430   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1554431   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1554432   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1554433   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1554434   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1554435   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1554436   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1554437   +END;
MPRINT(EM_DIAGRAM):   END;
1554438   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554439   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1554440   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1554441   +END;
MPRINT(EM_DIAGRAM):   END;
1554442   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1554443   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1554444   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1554445   +END;
MPRINT(EM_DIAGRAM):   END;
1554446   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1554447   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1554448   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1554449   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1554450   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1554451   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1554452   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1554453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554454   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1554455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554456   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1554457   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1554458   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1554459   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1554460   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1554461   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1554462   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1554463   +END;
MPRINT(EM_DIAGRAM):   END;
1554464   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554465   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1554466   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554467   +drop
1554468   +H11
1554469   +H12
1554470   +H13
1554471   +H14
1554472   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1554473   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1554474    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL15_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1554475    quit;
1554476    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1554477    filename emflow
1554477  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural15: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1554478    *------------------------------------------------------------*;
1554479    * Neural15: Scoring VALIDATE data;
1554480    *------------------------------------------------------------*;
1554481    data EMWS8.Neural15_VALIDATE
1554482    / view=EMWS8.Neural15_VALIDATE
1554483    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_VALIDATE / view=EMWS8.Neural15_VALIDATE ;
1554484    set EMWS8.PRINCOMP_VALIDATE
1554485    ;
MPRINT(EM_DIAGRAM):   set EMWS8.PRINCOMP_VALIDATE ;
1554486    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural15\EMFLOWSCORE.sas.
1554487   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554488   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1554489   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1554490   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1554491   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1554492   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1554493   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1554494   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1554495   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1554496   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1554497   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1554498   +LENGTH _WARN_ $4
1554499   +      F_DepVar  $ 12
1554500   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1554501   +      label S_PC_1 = 'Standard: PC_1' ;
MPRINT(EM_DIAGRAM):   label S_PC_1 = 'Standard: PC_1' ;
1554502   +
1554503   +      label S_PC_10 = 'Standard: PC_10' ;
MPRINT(EM_DIAGRAM):   label S_PC_10 = 'Standard: PC_10' ;
1554504   +
1554505   +      label S_PC_11 = 'Standard: PC_11' ;
MPRINT(EM_DIAGRAM):   label S_PC_11 = 'Standard: PC_11' ;
1554506   +
1554507   +      label S_PC_12 = 'Standard: PC_12' ;
MPRINT(EM_DIAGRAM):   label S_PC_12 = 'Standard: PC_12' ;
1554508   +
1554509   +      label S_PC_13 = 'Standard: PC_13' ;
MPRINT(EM_DIAGRAM):   label S_PC_13 = 'Standard: PC_13' ;
1554510   +
1554511   +      label S_PC_14 = 'Standard: PC_14' ;
MPRINT(EM_DIAGRAM):   label S_PC_14 = 'Standard: PC_14' ;
1554512   +
1554513   +      label S_PC_15 = 'Standard: PC_15' ;
MPRINT(EM_DIAGRAM):   label S_PC_15 = 'Standard: PC_15' ;
1554514   +
1554515   +      label S_PC_16 = 'Standard: PC_16' ;
MPRINT(EM_DIAGRAM):   label S_PC_16 = 'Standard: PC_16' ;
1554516   +
1554517   +      label S_PC_17 = 'Standard: PC_17' ;
MPRINT(EM_DIAGRAM):   label S_PC_17 = 'Standard: PC_17' ;
1554518   +
1554519   +      label S_PC_2 = 'Standard: PC_2' ;
MPRINT(EM_DIAGRAM):   label S_PC_2 = 'Standard: PC_2' ;
1554520   +
1554521   +      label S_PC_3 = 'Standard: PC_3' ;
MPRINT(EM_DIAGRAM):   label S_PC_3 = 'Standard: PC_3' ;
1554522   +
1554523   +      label S_PC_4 = 'Standard: PC_4' ;
MPRINT(EM_DIAGRAM):   label S_PC_4 = 'Standard: PC_4' ;
1554524   +
1554525   +      label S_PC_5 = 'Standard: PC_5' ;
MPRINT(EM_DIAGRAM):   label S_PC_5 = 'Standard: PC_5' ;
1554526   +
1554527   +      label S_PC_6 = 'Standard: PC_6' ;
MPRINT(EM_DIAGRAM):   label S_PC_6 = 'Standard: PC_6' ;
1554528   +
1554529   +      label S_PC_7 = 'Standard: PC_7' ;
MPRINT(EM_DIAGRAM):   label S_PC_7 = 'Standard: PC_7' ;
1554530   +
1554531   +      label S_PC_8 = 'Standard: PC_8' ;
MPRINT(EM_DIAGRAM):   label S_PC_8 = 'Standard: PC_8' ;
1554532   +
1554533   +      label S_PC_9 = 'Standard: PC_9' ;
MPRINT(EM_DIAGRAM):   label S_PC_9 = 'Standard: PC_9' ;
1554534   +
1554535   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1554536   +
1554537   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1554538   +
1554539   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1554540   +
1554541   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1554542   +
1554543   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1554544   +
1554545   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1554546   +
1554547   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1554548   +
1554549   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1554550   +
1554551   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1554552   +
1554553   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1554554   +
1554555   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1554556   +
1554557   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1554558   +
1554559   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1554560   +
1554561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554562   +*** Checking missing input Interval
1554563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1554564   +
1554565   +IF NMISS(
1554566   +   PC_1 ,
1554567   +   PC_10 ,
1554568   +   PC_11 ,
1554569   +   PC_12 ,
1554570   +   PC_13 ,
1554571   +   PC_14 ,
1554572   +   PC_15 ,
1554573   +   PC_16 ,
1554574   +   PC_17 ,
1554575   +   PC_2 ,
1554576   +   PC_3 ,
1554577   +   PC_4 ,
1554578   +   PC_5 ,
1554579   +   PC_6 ,
1554580   +   PC_7 ,
1554581   +   PC_8 ,
1554582   +   PC_9 ,
1554583   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( PC_1 , PC_10 , PC_11 , PC_12 , PC_13 , PC_14 , PC_15 , PC_16 , 
PC_17 , PC_2 , PC_3 , PC_4 , PC_5 , PC_6 , PC_7 , PC_8 , PC_9 , Year_Birth ) THEN DO;
1554584   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1554585   +
1554586   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1554587   +END;
MPRINT(EM_DIAGRAM):   END;
1554588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554589   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1554590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554591   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554592   +   S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1554593   +   S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1554594   +   S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1554595   +   S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1554596   +   S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1554597   +   S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1554598   +   S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1554599   +   S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1554600   +   S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1554601   +   S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1554602   +   S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1554603   +   S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1554604   +   S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1554605   +   S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1554606   +   S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1554607   +   S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1554608   +   S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1554609   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1554610   +END;
MPRINT(EM_DIAGRAM):   END;
1554611   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554612   +   IF MISSING( PC_1 ) THEN S_PC_1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_1 ) THEN S_PC_1 = . ;
1554613   +   ELSE S_PC_1  =  -3.567597872154E-15 +     0.29892739052271 * PC_1 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_1 = -3.567597872154E-15 + 0.29892739052271 * PC_1 ;
1554614   +   IF MISSING( PC_10 ) THEN S_PC_10  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_10 ) THEN S_PC_10 = . ;
1554615   +   ELSE S_PC_10  = -6.0346468636081E-15 +     0.82173953858445 * PC_10 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_10 = -6.0346468636081E-15 + 0.82173953858445 * PC_10 ;
1554616   +   IF MISSING( PC_11 ) THEN S_PC_11  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_11 ) THEN S_PC_11 = . ;
1554617   +   ELSE S_PC_11  =   6.055841017477E-15 +     0.85619046033275 * PC_11 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_11 = 6.055841017477E-15 + 0.85619046033275 * PC_11 ;
1554618   +   IF MISSING( PC_12 ) THEN S_PC_12  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_12 ) THEN S_PC_12 = . ;
1554619   +   ELSE S_PC_12  = -3.9570415662911E-15 +     0.88816580619395 * PC_12 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_12 = -3.9570415662911E-15 + 0.88816580619395 * PC_12 ;
1554620   +   IF MISSING( PC_13 ) THEN S_PC_13  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_13 ) THEN S_PC_13 = . ;
1554621   +   ELSE S_PC_13  =  1.4807903817941E-15 +     0.89679040249719 * PC_13 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_13 = 1.4807903817941E-15 + 0.89679040249719 * PC_13 ;
1554622   +   IF MISSING( PC_14 ) THEN S_PC_14  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_14 ) THEN S_PC_14 = . ;
1554623   +   ELSE S_PC_14  = -6.1940871521205E-15 +     0.90336543119982 * PC_14 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_14 = -6.1940871521205E-15 + 0.90336543119982 * PC_14 ;
1554624   +   IF MISSING( PC_15 ) THEN S_PC_15  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_15 ) THEN S_PC_15 = . ;
1554625   +   ELSE S_PC_15  =   -3.45147395417E-16 +     0.92997960877389 * PC_15 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_15 = -3.45147395417E-16 + 0.92997960877389 * PC_15 ;
1554626   +   IF MISSING( PC_16 ) THEN S_PC_16  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_16 ) THEN S_PC_16 = . ;
1554627   +   ELSE S_PC_16  = -2.0832890955173E-15 +     0.95096832834142 * PC_16 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_16 = -2.0832890955173E-15 + 0.95096832834142 * PC_16 ;
1554628   +   IF MISSING( PC_17 ) THEN S_PC_17  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_17 ) THEN S_PC_17 = . ;
1554629   +   ELSE S_PC_17  =  4.0710461992609E-15 +     0.99882451143041 * PC_17 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_17 = 4.0710461992609E-15 + 0.99882451143041 * PC_17 ;
1554630   +   IF MISSING( PC_2 ) THEN S_PC_2  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_2 ) THEN S_PC_2 = . ;
1554631   +   ELSE S_PC_2  =  6.4589631283016E-15 +      0.5437311140029 * PC_2 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_2 = 6.4589631283016E-15 + 0.5437311140029 * PC_2 ;
1554632   +   IF MISSING( PC_3 ) THEN S_PC_3  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_3 ) THEN S_PC_3 = . ;
1554633   +   ELSE S_PC_3  =  2.2833690425384E-15 +     0.55367740285547 * PC_3 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_3 = 2.2833690425384E-15 + 0.55367740285547 * PC_3 ;
1554634   +   IF MISSING( PC_4 ) THEN S_PC_4  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_4 ) THEN S_PC_4 = . ;
1554635   +   ELSE S_PC_4  = -3.6725092169592E-15 +     0.63698127005552 * PC_4 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_4 = -3.6725092169592E-15 + 0.63698127005552 * PC_4 ;
1554636   +   IF MISSING( PC_5 ) THEN S_PC_5  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_5 ) THEN S_PC_5 = . ;
1554637   +   ELSE S_PC_5  = -4.6355038408768E-15 +     0.66670299180006 * PC_5 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_5 = -4.6355038408768E-15 + 0.66670299180006 * PC_5 ;
1554638   +   IF MISSING( PC_6 ) THEN S_PC_6  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_6 ) THEN S_PC_6 = . ;
1554639   +   ELSE S_PC_6  =  1.5846922792836E-15 +     0.70534791664737 * PC_6 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_6 = 1.5846922792836E-15 + 0.70534791664737 * PC_6 ;
1554640   +   IF MISSING( PC_7 ) THEN S_PC_7  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_7 ) THEN S_PC_7 = . ;
1554641   +   ELSE S_PC_7  =  6.7268179657212E-16 +     0.74932361381713 * PC_7 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_7 = 6.7268179657212E-16 + 0.74932361381713 * PC_7 ;
1554642   +   IF MISSING( PC_8 ) THEN S_PC_8  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_8 ) THEN S_PC_8 = . ;
1554643   +   ELSE S_PC_8  = -2.3246545307055E-15 +     0.77161638976627 * PC_8 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_8 = -2.3246545307055E-15 + 0.77161638976627 * PC_8 ;
1554644   +   IF MISSING( PC_9 ) THEN S_PC_9  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( PC_9 ) THEN S_PC_9 = . ;
1554645   +   ELSE S_PC_9  = -3.7729896578756E-15 +     0.80831761659605 * PC_9 ;
MPRINT(EM_DIAGRAM):   ELSE S_PC_9 = -3.7729896578756E-15 + 0.80831761659605 * PC_9 ;
1554646   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1554647   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1554648   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1554649   +END;
MPRINT(EM_DIAGRAM):   END;
1554650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554651   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1554652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554653   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554654   +   H11  =      0.2142022960337 * S_PC_1  +     0.45958481274618 * S_PC_10
1554655   +          +     0.69707764460073 * S_PC_11  +    -0.28731584859801 * S_PC_12
1554656   +          +    -0.36950107897164 * S_PC_13  +     0.18809798735641 * S_PC_14
1554657   +          +     -0.2130015500898 * S_PC_15  +      0.0071701964964 * S_PC_16
1554658   +          +    -0.16484342463114 * S_PC_17  +    -0.45239110771446 * S_PC_2
1554659   +          +    -0.46983508200606 * S_PC_3  +    -0.66796376673143 * S_PC_4
1554660   +          +     1.74809683790662 * S_PC_5  +    -0.13522760990537 * S_PC_6
1554661   +          +     0.55932520504169 * S_PC_7  +     -1.6522575410041 * S_PC_8
1554662   +          +    -0.27156327412277 * S_PC_9  +     0.13502580420273 *
1554663   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.2142022960337 * S_PC_1 + 0.45958481274618 * S_PC_10 + 
0.69707764460073 * S_PC_11 + -0.28731584859801 * S_PC_12 + -0.36950107897164 * S_PC_13 + 
0.18809798735641 * S_PC_14 + -0.2130015500898 * S_PC_15 + 0.0071701964964 * S_PC_16 + 
-0.16484342463114 * S_PC_17 + -0.45239110771446 * S_PC_2 + -0.46983508200606 * S_PC_3 + 
-0.66796376673143 * S_PC_4 + 1.74809683790662 * S_PC_5 + -0.13522760990537 * S_PC_6 + 
0.55932520504169 * S_PC_7 + -1.6522575410041 * S_PC_8 + -0.27156327412277 * S_PC_9 + 
0.13502580420273 * S_Year_Birth ;
1554664   +   H12  =     0.11812229131662 * S_PC_1  +    -0.30871683896859 * S_PC_10
1554665   +          +     0.27201131036585 * S_PC_11  +     0.30251258127641 * S_PC_12
1554666   +          +    -0.67346016770754 * S_PC_13  +     0.37176061574683 * S_PC_14
1554667   +          +    -0.23991822296987 * S_PC_15  +     0.16688456482026 * S_PC_16
1554668   +          +    -0.07997426604796 * S_PC_17  +    -0.37489008231683 * S_PC_2
1554669   +          +    -0.31917168095976 * S_PC_3  +      0.1852305444751 * S_PC_4
1554670   +          +     0.12292563944212 * S_PC_5  +       0.040943627574 * S_PC_6
1554671   +          +     0.06243182785513 * S_PC_7  +      0.2576666765474 * S_PC_8
1554672   +          +     0.14669869508947 * S_PC_9  +     0.25287680510356 *
1554673   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.11812229131662 * S_PC_1 + -0.30871683896859 * S_PC_10 + 
0.27201131036585 * S_PC_11 + 0.30251258127641 * S_PC_12 + -0.67346016770754 * S_PC_13 + 
0.37176061574683 * S_PC_14 + -0.23991822296987 * S_PC_15 + 0.16688456482026 * S_PC_16 + 
-0.07997426604796 * S_PC_17 + -0.37489008231683 * S_PC_2 + -0.31917168095976 * S_PC_3 + 
0.1852305444751 * S_PC_4 + 0.12292563944212 * S_PC_5 + 0.040943627574 * S_PC_6 + 
0.06243182785513 * S_PC_7 + 0.2576666765474 * S_PC_8 + 0.14669869508947 * S_PC_9 + 
0.25287680510356 * S_Year_Birth ;
1554674   +   H13  =     0.64343224615395 * S_PC_1  +    -0.70988675774855 * S_PC_10
1554675   +          +     0.88271581211552 * S_PC_11  +     0.96991990033944 * S_PC_12
1554676   +          +    -1.17246354807186 * S_PC_13  +     0.46319326792627 * S_PC_14
1554677   +          +    -0.68647913740539 * S_PC_15  +    -0.01341897678398 * S_PC_16
1554678   +          +    -0.77351032460481 * S_PC_17  +    -0.57723175268209 * S_PC_2
1554679   +          +    -0.11732850831905 * S_PC_3  +    -0.04783645844047 * S_PC_4
1554680   +          +    -0.64916508516345 * S_PC_5  +     0.29343176558715 * S_PC_6
1554681   +          +    -0.54745345702111 * S_PC_7  +    -0.21360252466545 * S_PC_8
1554682   +          +    -0.12601782119443 * S_PC_9  +    -0.23396269663696 *
1554683   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.64343224615395 * S_PC_1 + -0.70988675774855 * S_PC_10 + 
0.88271581211552 * S_PC_11 + 0.96991990033944 * S_PC_12 + -1.17246354807186 * S_PC_13 + 
0.46319326792627 * S_PC_14 + -0.68647913740539 * S_PC_15 + -0.01341897678398 * S_PC_16 + 
-0.77351032460481 * S_PC_17 + -0.57723175268209 * S_PC_2 + -0.11732850831905 * S_PC_3 + 
-0.04783645844047 * S_PC_4 + -0.64916508516345 * S_PC_5 + 0.29343176558715 * S_PC_6 + 
-0.54745345702111 * S_PC_7 + -0.21360252466545 * S_PC_8 + -0.12601782119443 * S_PC_9 + 
-0.23396269663696 * S_Year_Birth ;
1554684   +   H14  =      1.0341215312277 * S_PC_1  +    -0.39415731025938 * S_PC_10
1554685   +          +    -0.32060014638152 * S_PC_11  +    -0.61669234969925 * S_PC_12
1554686   +          +    -0.31179815348792 * S_PC_13  +    -0.00798094231062 * S_PC_14
1554687   +          +    -0.02653679285646 * S_PC_15  +     0.07670313502809 * S_PC_16
1554688   +          +     0.21136382302776 * S_PC_17  +    -0.22154119624002 * S_PC_2
1554689   +          +     0.47642619465816 * S_PC_3  +    -0.31672307688174 * S_PC_4
1554690   +          +     0.05874501739573 * S_PC_5  +    -0.05897167931726 * S_PC_6
1554691   +          +    -0.09671465231304 * S_PC_7  +    -0.31597714355748 * S_PC_8
1554692   +          +     0.43891531065352 * S_PC_9  +     0.09716703238388 *
1554693   +        S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 1.0341215312277 * S_PC_1 + -0.39415731025938 * S_PC_10 + 
-0.32060014638152 * S_PC_11 + -0.61669234969925 * S_PC_12 + -0.31179815348792 * S_PC_13 + 
-0.00798094231062 * S_PC_14 + -0.02653679285646 * S_PC_15 + 0.07670313502809 * S_PC_16 + 
0.21136382302776 * S_PC_17 + -0.22154119624002 * S_PC_2 + 0.47642619465816 * S_PC_3 + 
-0.31672307688174 * S_PC_4 + 0.05874501739573 * S_PC_5 + -0.05897167931726 * S_PC_6 + 
-0.09671465231304 * S_PC_7 + -0.31597714355748 * S_PC_8 + 0.43891531065352 * S_PC_9 + 
0.09716703238388 * S_Year_Birth ;
1554694   +   H11  =    -0.54498134015293 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.54498134015293 + H11 ;
1554695   +   H12  =    -0.74199857282203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.74199857282203 + H12 ;
1554696   +   H13  =     1.38839834700907 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.38839834700907 + H13 ;
1554697   +   H14  =     -2.2533612485392 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.2533612485392 + H14 ;
1554698   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1554699   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1554700   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1554701   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1554702   +END;
MPRINT(EM_DIAGRAM):   END;
1554703   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554704   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1554705   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1554706   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1554707   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1554708   +END;
MPRINT(EM_DIAGRAM):   END;
1554709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554710   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1554711   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554712   +
1554713   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1554714   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1554715   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1554716   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1554717   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1554718   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1554719   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1554720   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1554721   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1554722   +end;
MPRINT(EM_DIAGRAM):   end;
1554723   +else do;
MPRINT(EM_DIAGRAM):   else do;
1554724   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1554725   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1554726   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1554727   +   end;
MPRINT(EM_DIAGRAM):   end;
1554728   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1554729   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1554730   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1554731   +   end;
MPRINT(EM_DIAGRAM):   end;
1554732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1554733   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1554734   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1554735   +   end;
MPRINT(EM_DIAGRAM):   end;
1554736   +end;
MPRINT(EM_DIAGRAM):   end;
1554737   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1554738   +   P_DepVar1  =    -2.60708041357943 * H11  +     3.00483048817261 * H12
1554739   +          +     1.87856416825462 * H13  +      2.8062260938905 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.60708041357943 * H11 + 3.00483048817261 * H12 + 
1.87856416825462 * H13 + 2.8062260938905 * H14 ;
1554740   +   P_DepVar1  =    -1.50175498849739 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.50175498849739 + P_DepVar1 ;
1554741   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1554742   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1554743   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1554744   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1554745   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1554746   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1554747   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1554748   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1554749   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1554750   +END;
MPRINT(EM_DIAGRAM):   END;
1554751   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1554752   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1554753   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1554754   +END;
MPRINT(EM_DIAGRAM):   END;
1554755   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1554756   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1554757   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1554758   +END;
MPRINT(EM_DIAGRAM):   END;
1554759   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1554760   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1554761   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1554762   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1554763   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1554764   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1554765   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1554766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554767   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1554768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1554769   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1554770   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1554771   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1554772   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1554773   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1554774   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1554775   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1554776   +END;
MPRINT(EM_DIAGRAM):   END;
1554777   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554778   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1554779   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1554780   +drop
1554781   +H11
1554782   +H12
1554783   +H13
1554784   +H14
1554785   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1554786   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1554787    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL15_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.PRINCOMP_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1554788    quit;
1554789    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1554790    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1554791    * Neural15: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural15: Computing metadata for TRAIN data;
1554792    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL15_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural15\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural15_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural15_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural15_TRAIN out=WORK.M0N81P3O noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0N81P3O;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0N81P3O(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0N81P3O;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0N81P3O;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0PTWPNA NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PTWPNA;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PTWPNA;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2EK7L92(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PTWPNA;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PTWPNA;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PTWPNA;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0PTWPNA;
MPRINT(EMADVISECOLUMNS):   set WORK.M0PTWPNA;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.PRINCOMP_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.PRINCOMP_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural15";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural15";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural15";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural15: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1555104    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1555105    set EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural15_EMINFO;
1555106    where DATA='Neural15' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural15' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1555107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL15_EMINFO.
      WHERE (DATA='Neural15') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1555108    data EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural15_EMINFO;
1555109    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1555110    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1555111    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1555115    run;
1555116    data EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_EMINFO;
1555117    set EMWS8.Neural15_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural15_EMINFO WORK.MODELTEMP_INFO;
1555118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL15_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1555119    proc sort data = EMWS8.Neural15_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural15_EMINFO NOTHREADS;
1555120    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1555121    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL15_EMINFO.
NOTE: The data set EMWS8.NEURAL15_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1555122    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1555123    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1555124    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1555125    proc sort data = EMWS8.Neural15_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural15_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1555126    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1555127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL15_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1555128    data EMWS8.Neural15_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural15_EMINFO;
1555129    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1555130    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1555131    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL15_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1555132    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1555133    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1555134    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1555135    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.NEURAL15_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL15_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
