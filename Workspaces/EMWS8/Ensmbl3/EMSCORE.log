MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.15 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.15 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O31V4JKE 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O31V4JKE new;
MPRINT(EM_DIAGRAM):   run;
760326     filename emflow
760326   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring NEURAL20_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760327     *------------------------------------------------------------*;
760328     * Ensmbl3: Scoring NEURAL20_TRAIN data;
760329     *------------------------------------------------------------*;
760330     data EMWS8.Ensmbl3_TRAIN
760331     / view=EMWS8.Ensmbl3_TRAIN
760332     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_TRAIN / view=EMWS8.Ensmbl3_TRAIN ;
760333     set EMWS8.Neural20_TRAIN
760334     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural20_TRAIN ;
760335     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas.
760336    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760337    +* Ensmbl3: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Combine model for DepVar;
760338    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760339    +* Ensmbl3: Scoring Code of model 1 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 1 of 9;
760340    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760341    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760342    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
760343    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
760344    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
760345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760346    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760347    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
760348    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
760349    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
760350    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760351    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760352    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
760353    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
760354    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
760355    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760357    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
760358    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
760359    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
760360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760361    +
760362    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
760363    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
760363   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
760364    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
760365    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
760366    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
760367    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
760368    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
760369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760370    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
760371    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
760372    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
760373    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760375    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
760376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760377    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
760378    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
760379    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
760380    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760381    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
760382    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
760383    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
760384    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760385    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760386    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
760387    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
760388    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
760389    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760390    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
760391    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
760392    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
760393    +
760394    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760395    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
760396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760397    +LABEL GRP_AcceptedCmp5 =
760398    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
760399    +
760400    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
760401    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
760402    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
760403    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
760404    +end;
MPRINT(EM_DIAGRAM):   end;
760405    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
760406    +if (_UFORMAT eq '0'
760407    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
760408    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
760409    +end;
MPRINT(EM_DIAGRAM):   end;
760410    +else
760411    +if (_UFORMAT eq '1'
760412    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
760413    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
760414    +end;
MPRINT(EM_DIAGRAM):   end;
760415    +else do;
MPRINT(EM_DIAGRAM):   else do;
760416    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
760417    +end;
MPRINT(EM_DIAGRAM):   end;
760418    +end;
MPRINT(EM_DIAGRAM):   end;
760419    +
760420    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760421    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
760422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760423    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
760424    +
760425    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
760426    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
760427    +end;
MPRINT(EM_DIAGRAM):   end;
760428    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
760429    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
760430    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
760431    +end;
MPRINT(EM_DIAGRAM):   end;
760432    +else
760433    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
760434    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
760435    +end;
MPRINT(EM_DIAGRAM):   end;
760436    +else
760437    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
760438    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
760439    +end;
MPRINT(EM_DIAGRAM):   end;
760440    +else
760441    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
760442    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
760443    +end;
MPRINT(EM_DIAGRAM):   end;
760444    +end;
MPRINT(EM_DIAGRAM):   end;
760445    +
760446    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760447    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
760448    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760449    +LABEL GRP_Income =
760450    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
760451    +
760452    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
760453    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
760454    +end;
MPRINT(EM_DIAGRAM):   end;
760455    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
760456    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
760457    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
760458    +end;
MPRINT(EM_DIAGRAM):   end;
760459    +else
760460    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
760461    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
760462    +end;
MPRINT(EM_DIAGRAM):   end;
760463    +else
760464    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
760465    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
760466    +end;
MPRINT(EM_DIAGRAM):   end;
760467    +else
760468    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
760469    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
760470    +end;
MPRINT(EM_DIAGRAM):   end;
760471    +end;
MPRINT(EM_DIAGRAM):   end;
760472    +
760473    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760474    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
760475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760476    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
760477    +
760478    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
760479    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
760480    +end;
MPRINT(EM_DIAGRAM):   end;
760481    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
760482    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
760483    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
760484    +end;
MPRINT(EM_DIAGRAM):   end;
760485    +else
760486    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
760487    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
760488    +end;
MPRINT(EM_DIAGRAM):   end;
760489    +else
760490    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
760491    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
760492    +end;
MPRINT(EM_DIAGRAM):   end;
760493    +else
760494    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
760495    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
760496    +end;
MPRINT(EM_DIAGRAM):   end;
760497    +end;
MPRINT(EM_DIAGRAM):   end;
760498    +
760499    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760500    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
760501    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760502    +LABEL GRP_MntFishProducts =
760503    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
760504    +
760505    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
760506    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
760507    +end;
MPRINT(EM_DIAGRAM):   end;
760508    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
760509    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
760510    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
760511    +end;
MPRINT(EM_DIAGRAM):   end;
760512    +else
760513    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
760514    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
760515    +end;
MPRINT(EM_DIAGRAM):   end;
760516    +else
760517    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
760518    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
760519    +end;
MPRINT(EM_DIAGRAM):   end;
760520    +else
760521    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
760522    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
760523    +end;
MPRINT(EM_DIAGRAM):   end;
760524    +end;
MPRINT(EM_DIAGRAM):   end;
760525    +
760526    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760527    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
760528    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760529    +LABEL GRP_MntGoldProds =
760530    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
760531    +
760532    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
760533    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
760534    +end;
MPRINT(EM_DIAGRAM):   end;
760535    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
760536    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
760537    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
760538    +end;
MPRINT(EM_DIAGRAM):   end;
760539    +else
760540    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
760541    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
760542    +end;
MPRINT(EM_DIAGRAM):   end;
760543    +else
760544    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
760545    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
760546    +end;
MPRINT(EM_DIAGRAM):   end;
760547    +else
760548    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
760549    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
760550    +end;
MPRINT(EM_DIAGRAM):   end;
760551    +end;
MPRINT(EM_DIAGRAM):   end;
760552    +
760553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760554    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
760555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760556    +LABEL GRP_MntMeatProducts =
760557    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
760558    +
760559    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
760560    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
760561    +end;
MPRINT(EM_DIAGRAM):   end;
760562    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
760563    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
760564    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
760565    +end;
MPRINT(EM_DIAGRAM):   end;
760566    +else
760567    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
760568    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
760569    +end;
MPRINT(EM_DIAGRAM):   end;
760570    +else
760571    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
760572    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
760573    +end;
MPRINT(EM_DIAGRAM):   end;
760574    +else
760575    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
760576    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
760577    +end;
MPRINT(EM_DIAGRAM):   end;
760578    +end;
MPRINT(EM_DIAGRAM):   end;
760579    +
760580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760581    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
760582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760583    +LABEL GRP_MntWines =
760584    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
760585    +
760586    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
760587    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
760588    +end;
MPRINT(EM_DIAGRAM):   end;
760589    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
760590    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
760591    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
760592    +end;
MPRINT(EM_DIAGRAM):   end;
760593    +else
760594    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
760595    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
760596    +end;
MPRINT(EM_DIAGRAM):   end;
760597    +else
760598    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
760599    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
760600    +end;
MPRINT(EM_DIAGRAM):   end;
760601    +else
760602    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
760603    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
760604    +end;
MPRINT(EM_DIAGRAM):   end;
760605    +end;
MPRINT(EM_DIAGRAM):   end;
760606    +
760607    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760608    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
760609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760610    +LABEL GRP_NumCatalogPurchases =
760611    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
760612    +
760613    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
760614    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
760615    +end;
MPRINT(EM_DIAGRAM):   end;
760616    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
760617    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
760618    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
760619    +end;
MPRINT(EM_DIAGRAM):   end;
760620    +else
760621    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
760622    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
760623    +end;
MPRINT(EM_DIAGRAM):   end;
760624    +else
760625    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
760626    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
760627    +end;
MPRINT(EM_DIAGRAM):   end;
760628    +else
760629    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
760630    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
760631    +end;
MPRINT(EM_DIAGRAM):   end;
760632    +end;
MPRINT(EM_DIAGRAM):   end;
760633    +
760634    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760635    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
760636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760637    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
760638    +
760639    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
760640    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
760641    +end;
MPRINT(EM_DIAGRAM):   end;
760642    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
760643    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
760644    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
760645    +end;
MPRINT(EM_DIAGRAM):   end;
760646    +else
760647    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
760648    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
760649    +end;
MPRINT(EM_DIAGRAM):   end;
760650    +else
760651    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
760652    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
760653    +end;
MPRINT(EM_DIAGRAM):   end;
760654    +else
760655    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
760656    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
760657    +end;
MPRINT(EM_DIAGRAM):   end;
760658    +end;
MPRINT(EM_DIAGRAM):   end;
760659    +
760660    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760661    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
760662    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760663    +LABEL GRP_NumWebPurchases =
760664    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
760665    +
760666    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
760667    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
760668    +end;
MPRINT(EM_DIAGRAM):   end;
760669    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
760670    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
760671    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
760672    +end;
MPRINT(EM_DIAGRAM):   end;
760673    +else
760674    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
760675    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
760676    +end;
MPRINT(EM_DIAGRAM):   end;
760677    +else
760678    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
760679    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
760680    +end;
MPRINT(EM_DIAGRAM):   end;
760681    +else
760682    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
760683    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
760684    +end;
MPRINT(EM_DIAGRAM):   end;
760685    +end;
MPRINT(EM_DIAGRAM):   end;
760686    +
760687    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760688    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
760689    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760690    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
760691    +
760692    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
760693    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
760694    +end;
MPRINT(EM_DIAGRAM):   end;
760695    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
760696    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
760697    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
760698    +end;
MPRINT(EM_DIAGRAM):   end;
760699    +else
760700    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
760701    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
760702    +end;
MPRINT(EM_DIAGRAM):   end;
760703    +else
760704    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
760705    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
760706    +end;
MPRINT(EM_DIAGRAM):   end;
760707    +else
760708    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
760709    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
760710    +end;
MPRINT(EM_DIAGRAM):   end;
760711    +end;
MPRINT(EM_DIAGRAM):   end;
760712    +
760713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760714    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
760715    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760716    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
760717    +
760718    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
760719    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
760720    +end;
MPRINT(EM_DIAGRAM):   end;
760721    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
760722    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
760723    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
760724    +end;
MPRINT(EM_DIAGRAM):   end;
760725    +else
760726    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
760727    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
760728    +end;
MPRINT(EM_DIAGRAM):   end;
760729    +else
760730    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
760731    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
760732    +end;
MPRINT(EM_DIAGRAM):   end;
760733    +else
760734    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
760735    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
760736    +end;
MPRINT(EM_DIAGRAM):   end;
760737    +end;
MPRINT(EM_DIAGRAM):   end;
760738    +
760739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760740    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
760741    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760742    +LABEL GRP_Recency =
760743    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
760744    +
760745    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
760746    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
760747    +end;
MPRINT(EM_DIAGRAM):   end;
760748    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
760749    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
760750    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
760751    +end;
MPRINT(EM_DIAGRAM):   end;
760752    +else
760753    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
760754    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
760755    +end;
MPRINT(EM_DIAGRAM):   end;
760756    +else
760757    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
760758    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
760759    +end;
MPRINT(EM_DIAGRAM):   end;
760760    +else
760761    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
760762    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
760763    +end;
MPRINT(EM_DIAGRAM):   end;
760764    +end;
MPRINT(EM_DIAGRAM):   end;
760765    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760766    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
760767    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
760768    +* NODE: Neural20;
MPRINT(EM_DIAGRAM):   * NODE: Neural20;
760769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
760770    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
760771    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
760772    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
760773    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
760774    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
760775    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
760776    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
760777    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
760778    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
760779    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
760780    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
760781    +LENGTH _WARN_ $4
760782    +      F_DepVar  $ 12
760783    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
760784    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
760785    +
760786    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
760787    +
760788    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
760789    +
760790    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
760791    +
760792    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
760793    +
760794    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
760795    +
760796    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
760797    +
760798    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
760799    +
760800    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
760801    +
760802    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
760803    +
760804    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
760805    +
760806    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
760807    +
760808    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
760809    +
760810    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
760811    +
760812    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
760813    +
760814    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
760815    +
760816    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
760817    +
760818    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
760819    +
760820    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
760821    +
760822    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
760823    +
760824    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
760825    +
760826    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
760827    +
760828    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
760829    +
760830    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
760831    +
760832    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
760833    +
760834    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
760835    +
760836    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
760837    +
760838    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
760839    +
760840    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
760841    +
760842    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
760843    +
760844    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
760845    +
760846    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
760847    +
760848    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
760849    +
760850    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
760851    +
760852    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
760853    +
760854    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
760855    +
760856    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
760857    +
760858    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
760859    +
760860    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
760861    +
760862    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
760863    +
760864    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
760865    +
760866    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
760867    +
760868    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
760869    +
760870    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
760871    +
760872    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
760873    +
760874    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
760875    +
760876    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
760877    +
760878    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
760879    +
760880    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
760881    +
760882    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
760883    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
760884    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
760885    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
760886    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
760887    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
760888    +end;
MPRINT(EM_DIAGRAM):   end;
760889    +else do;
MPRINT(EM_DIAGRAM):   else do;
760890    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
760891    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
760892    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
760893    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
760894    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
760895    +   end;
MPRINT(EM_DIAGRAM):   end;
760896    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
760897    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
760898    +   end;
MPRINT(EM_DIAGRAM):   end;
760899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
760900    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
760901    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
760902    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
760903    +   end;
MPRINT(EM_DIAGRAM):   end;
760904    +end;
MPRINT(EM_DIAGRAM):   end;
760905    +
760906    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
760907    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
760908    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
760909    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
760910    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
760911    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
760912    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
760913    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
760914    +end;
MPRINT(EM_DIAGRAM):   end;
760915    +else do;
MPRINT(EM_DIAGRAM):   else do;
760916    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
760917    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
760918    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
760919    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
760920    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
760921    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
760922    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
760923    +   end;
MPRINT(EM_DIAGRAM):   end;
760924    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
760925    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
760926    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
760927    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
760928    +   end;
MPRINT(EM_DIAGRAM):   end;
760929    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
760930    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
760931    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
760932    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
760933    +   end;
MPRINT(EM_DIAGRAM):   end;
760934    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
760935    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
760936    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
760937    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
760938    +   end;
MPRINT(EM_DIAGRAM):   end;
760939    +   else do;
MPRINT(EM_DIAGRAM):   else do;
760940    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
760941    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
760942    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
760943    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
760944    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
760945    +   end;
MPRINT(EM_DIAGRAM):   end;
760946    +end;
MPRINT(EM_DIAGRAM):   end;
760947    +
760948    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
760949    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
760950    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
760951    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
The SAS System

760952    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
760953    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
760954    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
760955    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
760956    +end;
MPRINT(EM_DIAGRAM):   end;
760957    +else do;
MPRINT(EM_DIAGRAM):   else do;
760958    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
760959    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
760960    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
760961    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
760962    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
760963    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
760964    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
760965    +   end;
MPRINT(EM_DIAGRAM):   end;
760966    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
760967    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
760968    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
760969    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
760970    +   end;
MPRINT(EM_DIAGRAM):   end;
760971    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
760972    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
760973    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
760974    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
760975    +   end;
MPRINT(EM_DIAGRAM):   end;
760976    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
760977    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
760978    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
760979    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
760980    +   end;
MPRINT(EM_DIAGRAM):   end;
760981    +   else do;
MPRINT(EM_DIAGRAM):   else do;
760982    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
760983    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
760984    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
760985    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
760986    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
760987    +   end;
MPRINT(EM_DIAGRAM):   end;
760988    +end;
MPRINT(EM_DIAGRAM):   end;
760989    +
760990    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
760991    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
760992    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
760993    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
760994    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
760995    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
760996    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
760997    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
760998    +end;
MPRINT(EM_DIAGRAM):   end;
760999    +else do;
MPRINT(EM_DIAGRAM):   else do;
761000    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761001    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
761002    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761003    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761004    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
761005    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
761006    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
761007    +   end;
MPRINT(EM_DIAGRAM):   end;
761008    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761009    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
761010    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
761011    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
761012    +   end;
MPRINT(EM_DIAGRAM):   end;
761013    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761014    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
761015    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
761016    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
761017    +   end;
MPRINT(EM_DIAGRAM):   end;
761018    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761019    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
761020    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
761021    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
761022    +   end;
MPRINT(EM_DIAGRAM):   end;
761023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761024    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
761025    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
761026    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
761027    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761028    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761029    +   end;
MPRINT(EM_DIAGRAM):   end;
761030    +end;
MPRINT(EM_DIAGRAM):   end;
761031    +
761032    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
761033    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
761034    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
761035    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
761036    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
761037    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
761038    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761039    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761040    +end;
MPRINT(EM_DIAGRAM):   end;
761041    +else do;
MPRINT(EM_DIAGRAM):   else do;
761042    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761043    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
761044    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761045    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761046    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
761047    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
761048    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
761049    +   end;
MPRINT(EM_DIAGRAM):   end;
761050    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761051    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
761052    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
761053    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
761054    +   end;
MPRINT(EM_DIAGRAM):   end;
761055    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761056    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
761057    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
761058    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
761059    +   end;
MPRINT(EM_DIAGRAM):   end;
761060    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761061    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
761062    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
761063    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
761064    +   end;
MPRINT(EM_DIAGRAM):   end;
761065    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761066    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
761067    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
761068    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
761069    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761070    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761071    +   end;
MPRINT(EM_DIAGRAM):   end;
761072    +end;
MPRINT(EM_DIAGRAM):   end;
761073    +
761074    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
761075    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
761076    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
761077    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
761078    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
761079    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
761080    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761081    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761082    +end;
MPRINT(EM_DIAGRAM):   end;
761083    +else do;
MPRINT(EM_DIAGRAM):   else do;
761084    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761085    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
761086    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761087    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761088    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
761089    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
761090    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
761091    +   end;
MPRINT(EM_DIAGRAM):   end;
761092    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761093    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
761094    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
761095    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
761096    +   end;
MPRINT(EM_DIAGRAM):   end;
761097    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761098    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
761099    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
761100    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
761101    +   end;
MPRINT(EM_DIAGRAM):   end;
761102    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761103    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
761104    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
761105    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
761106    +   end;
MPRINT(EM_DIAGRAM):   end;
761107    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761108    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
761109    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
761110    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
761111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761113    +   end;
MPRINT(EM_DIAGRAM):   end;
761114    +end;
MPRINT(EM_DIAGRAM):   end;
761115    +
761116    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
761117    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
761118    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
761119    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
761120    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
761121    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
761122    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761123    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761124    +end;
MPRINT(EM_DIAGRAM):   end;
761125    +else do;
MPRINT(EM_DIAGRAM):   else do;
761126    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761127    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
761128    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761129    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761130    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
761131    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
761132    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
761133    +   end;
MPRINT(EM_DIAGRAM):   end;
761134    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761135    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
761136    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
761137    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
761138    +   end;
MPRINT(EM_DIAGRAM):   end;
761139    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761140    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
761141    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
761142    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
761143    +   end;
MPRINT(EM_DIAGRAM):   end;
761144    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761145    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
761146    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
761147    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
761148    +   end;
MPRINT(EM_DIAGRAM):   end;
761149    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761150    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
761151    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
761152    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
761153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761155    +   end;
MPRINT(EM_DIAGRAM):   end;
761156    +end;
MPRINT(EM_DIAGRAM):   end;
761157    +
761158    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
761159    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
761160    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
761161    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
761162    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
761163    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
761164    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761166    +end;
MPRINT(EM_DIAGRAM):   end;
761167    +else do;
MPRINT(EM_DIAGRAM):   else do;
761168    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761169    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
761170    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761171    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761172    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
761173    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
761174    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
761175    +   end;
MPRINT(EM_DIAGRAM):   end;
761176    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761177    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
761178    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
761179    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
761180    +   end;
MPRINT(EM_DIAGRAM):   end;
761181    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761182    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
761183    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
761184    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
761185    +   end;
MPRINT(EM_DIAGRAM):   end;
761186    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761187    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
761188    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
761189    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
761190    +   end;
MPRINT(EM_DIAGRAM):   end;
761191    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761192    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
761193    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
761194    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
761195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761197    +   end;
MPRINT(EM_DIAGRAM):   end;
761198    +end;
MPRINT(EM_DIAGRAM):   end;
761199    +
761200    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
761201    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
761202    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
761203    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
761204    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
761205    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761206    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761207    +end;
MPRINT(EM_DIAGRAM):   end;
761208    +else do;
MPRINT(EM_DIAGRAM):   else do;
761209    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761210    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
761211    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761212    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761213    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
761214    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
761215    +   end;
MPRINT(EM_DIAGRAM):   end;
761216    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761217    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
761218    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
761219    +   end;
MPRINT(EM_DIAGRAM):   end;
761220    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761221    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
761222    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
761223    +   end;
MPRINT(EM_DIAGRAM):   end;
761224    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761225    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
761226    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
761227    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761228    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761229    +   end;
MPRINT(EM_DIAGRAM):   end;
761230    +end;
MPRINT(EM_DIAGRAM):   end;
761231    +
761232    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
761233    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
761234    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
761235    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
761236    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
761237    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
761238    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761239    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761240    +end;
MPRINT(EM_DIAGRAM):   end;
761241    +else do;
MPRINT(EM_DIAGRAM):   else do;
761242    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761243    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
761244    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761245    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
761246    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
761247    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
761248    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
761249    +   end;
MPRINT(EM_DIAGRAM):   end;
761250    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761251    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
761252    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
761253    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
761254    +   end;
MPRINT(EM_DIAGRAM):   end;
761255    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761256    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
761257    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
761258    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
761259    +   end;
MPRINT(EM_DIAGRAM):   end;
761260    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
761261    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
761262    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
761263    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
761264    +   end;
MPRINT(EM_DIAGRAM):   end;
761265    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761266    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
761267    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
761268    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
761269    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761270    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761271    +   end;
MPRINT(EM_DIAGRAM):   end;
761272    +end;
MPRINT(EM_DIAGRAM):   end;
761273    +
761274    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
761275    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
761276    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
761277    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
761278    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
761279    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
761280    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761281    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761282    +end;
MPRINT(EM_DIAGRAM):   end;
761283    +else do;
MPRINT(EM_DIAGRAM):   else do;
761284    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761285    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
761286    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761287    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761288    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
761289    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
761290    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
761291    +   end;
MPRINT(EM_DIAGRAM):   end;
761292    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761293    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
761294    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
761295    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
761296    +   end;
MPRINT(EM_DIAGRAM):   end;
761297    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761298    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
761299    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
761300    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
761301    +   end;
MPRINT(EM_DIAGRAM):   end;
761302    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761303    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
761304    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
761305    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
761306    +   end;
MPRINT(EM_DIAGRAM):   end;
761307    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761308    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
761309    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
761310    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
761311    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761312    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761313    +   end;
MPRINT(EM_DIAGRAM):   end;
761314    +end;
MPRINT(EM_DIAGRAM):   end;
761315    +
761316    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
761317    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
761318    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
761319    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
761320    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
761321    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
761322    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761323    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761324    +end;
MPRINT(EM_DIAGRAM):   end;
761325    +else do;
MPRINT(EM_DIAGRAM):   else do;
761326    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761327    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
761328    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761329    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
761330    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
761331    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
761332    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
761333    +   end;
MPRINT(EM_DIAGRAM):   end;
761334    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
761335    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
761336    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
761337    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
761338    +   end;
MPRINT(EM_DIAGRAM):   end;
761339    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761340    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
761341    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
761342    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
761343    +   end;
MPRINT(EM_DIAGRAM):   end;
761344    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761345    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
761346    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
761347    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
761348    +   end;
MPRINT(EM_DIAGRAM):   end;
761349    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761350    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
761351    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
761352    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
761353    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761354    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761355    +   end;
MPRINT(EM_DIAGRAM):   end;
761356    +end;
MPRINT(EM_DIAGRAM):   end;
761357    +
761358    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
761359    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
761360    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
761361    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
761362    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
761363    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
761364    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761365    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761366    +end;
MPRINT(EM_DIAGRAM):   end;
761367    +else do;
MPRINT(EM_DIAGRAM):   else do;
761368    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761369    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
761370    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761371    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761372    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
761373    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
761374    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
761375    +   end;
MPRINT(EM_DIAGRAM):   end;
761376    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761377    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
761378    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
761379    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
761380    +   end;
MPRINT(EM_DIAGRAM):   end;
761381    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761382    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
761383    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
761384    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
761385    +   end;
MPRINT(EM_DIAGRAM):   end;
761386    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761387    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
761388    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
761389    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
761390    +   end;
MPRINT(EM_DIAGRAM):   end;
761391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761392    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
761393    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
761394    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
761395    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761396    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761397    +   end;
MPRINT(EM_DIAGRAM):   end;
761398    +end;
MPRINT(EM_DIAGRAM):   end;
761399    +
761400    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
761401    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
761402    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
761403    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
761404    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
761405    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
761406    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761408    +end;
MPRINT(EM_DIAGRAM):   end;
761409    +else do;
MPRINT(EM_DIAGRAM):   else do;
761410    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761411    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
761412    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761413    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
761414    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
761415    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
761416    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
761417    +   end;
MPRINT(EM_DIAGRAM):   end;
761418    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761419    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
761420    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
761421    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
761422    +   end;
MPRINT(EM_DIAGRAM):   end;
761423    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
761424    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
761425    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
761426    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
761427    +   end;
MPRINT(EM_DIAGRAM):   end;
761428    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761429    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
761430    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
761431    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
761432    +   end;
MPRINT(EM_DIAGRAM):   end;
761433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761434    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
761435    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
761436    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
761437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761439    +   end;
MPRINT(EM_DIAGRAM):   end;
761440    +end;
MPRINT(EM_DIAGRAM):   end;
761441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761442    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
761443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761445    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
761446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761447    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
761448    +   H11  =    -0.20808401117374 * GRP_AcceptedCmp52  +      1.5952064946991 *
761449    +        GRP_Frq2  +    -0.01225273525848 * GRP_Frq3  +    -0.62835698024634 *
761450    +        GRP_Frq4  +     0.44314401678348 * GRP_Income2
761451    +          +     0.89646769323205 * GRP_Income3  +    -0.90649183264259 *
761452    +        GRP_Income4  +    -0.55176085229947 * GRP_Mnt2
761453    +          +    -0.28020133968753 * GRP_Mnt3  +     0.17871933677614 * GRP_Mnt4
761454    +          +     0.38585041088838 * GRP_MntFishProducts2
761455    +          +    -0.22597951859521 * GRP_MntFishProducts3
761456    +          +    -0.12591354177724 * GRP_MntFishProducts4
761457    +          +     0.41517790727814 * GRP_MntGoldProds2
761458    +          +    -0.01783554546067 * GRP_MntGoldProds3
761459    +          +    -0.05254364640808 * GRP_MntGoldProds4
761460    +          +     0.11041766264422 * GRP_MntMeatProducts2
761461    +          +     0.80734417241917 * GRP_MntMeatProducts3
761462    +          +    -0.58385299076265 * GRP_MntMeatProducts4
761463    +          +     0.63351163942796 * GRP_MntWines2  +      0.4938617622427 *
761464    +        GRP_MntWines3  +     0.02607762678073 * GRP_MntWines4
761465    +          +    -1.43194573733764 * GRP_NumCatalogPurchases3
761466    +          +     0.55178119754186 * GRP_NumCatalogPurchases4
761467    +          +      -1.830671366144 * GRP_NumDistPurchases2
761468    +          +    -1.17053785506362 * GRP_NumDistPurchases3
761469    +          +     0.98564208160287 * GRP_NumDistPurchases4
761470    +          +    -0.22019170543618 * GRP_NumWebPurchases2
761471    +          +     0.12596691753667 * GRP_NumWebPurchases3
761472    +          +    -0.02882568244969 * GRP_NumWebPurchases4
761473    +          +    -0.21302125337044 * GRP_RFMstat2  +     0.08158805477511 *
761474    +        GRP_RFMstat3  +     -0.2631946184422 * GRP_RFMstat4
761475    +          +      0.1161399236304 * GRP_RMntFrq2  +     0.60576408771811 *
761476    +        GRP_RMntFrq3  +    -0.25254086880004 * GRP_RMntFrq4
761477    +          +      0.8664956591594 * GRP_Recency2  +     0.06243974875226 *
761478    +        GRP_Recency3  +    -0.38266930051466 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20808401117374 * GRP_AcceptedCmp52 + 1.5952064946991 * GRP_Frq2 
+ -0.01225273525848 * GRP_Frq3 + -0.62835698024634 * GRP_Frq4 + 0.44314401678348 * GRP_Income2 
+ 0.89646769323205 * GRP_Income3 + -0.90649183264259 * GRP_Income4 + -0.55176085229947 * 
GRP_Mnt2 + -0.28020133968753 * GRP_Mnt3 + 0.17871933677614 * GRP_Mnt4 + 0.38585041088838 * 
GRP_MntFishProducts2 + -0.22597951859521 * GRP_MntFishProducts3 + -0.12591354177724 * 
GRP_MntFishProducts4 + 0.41517790727814 * GRP_MntGoldProds2 + -0.01783554546067 * 
GRP_MntGoldProds3 + -0.05254364640808 * GRP_MntGoldProds4 + 0.11041766264422 * 
GRP_MntMeatProducts2 + 0.80734417241917 * GRP_MntMeatProducts3 + -0.58385299076265 * 
GRP_MntMeatProducts4 + 0.63351163942796 * GRP_MntWines2 + 0.4938617622427 * GRP_MntWines3 + 
0.02607762678073 * GRP_MntWines4 + -1.43194573733764 * GRP_NumCatalogPurchases3 + 
0.55178119754186 * GRP_NumCatalogPurchases4 + -1.830671366144 * GRP_NumDistPurchases2 + 
-1.17053785506362 * GRP_NumDistPurchases3 + 0.98564208160287 * GRP_NumDistPurchases4 + 
-0.22019170543618 * GRP_NumWebPurchases2 + 0.12596691753667 * GRP_NumWebPurchases3 + 
-0.02882568244969 * GRP_NumWebPurchases4 + -0.21302125337044 * GRP_RFMstat2 + 0.08158805477511 
* GRP_RFMstat3 + -0.2631946184422 * GRP_RFMstat4 + 0.1161399236304 * GRP_RMntFrq2 + 
0.60576408771811 * GRP_RMntFrq3 + -0.25254086880004 * GRP_RMntFrq4 + 0.8664956591594 * 
GRP_Recency2 + 0.06243974875226 * GRP_Recency3 + -0.38266930051466 * GRP_Recency4 ;
761479    +   H12  =    -1.49044065215331 * GRP_AcceptedCmp52  +     0.29747214763886 *
761480    +        GRP_Frq2  +     0.25845091468379 * GRP_Frq3  +    -0.12253400308729 *
761481    +        GRP_Frq4  +     0.67026230943159 * GRP_Income2
761482    +          +    -0.07529723714567 * GRP_Income3  +    -0.00656076113338 *
761483    +        GRP_Income4  +     0.11866607313287 * GRP_Mnt2
761484    +          +     0.50886534936331 * GRP_Mnt3  +    -0.40624874712256 * GRP_Mnt4
761485    +          +     0.07903512198302 * GRP_MntFishProducts2
761486    +          +     0.30094355054178 * GRP_MntFishProducts3
761487    +          +      0.1592854004233 * GRP_MntFishProducts4
761488    +          +    -0.71778183892118 * GRP_MntGoldProds2
761489    +          +    -0.00758784099151 * GRP_MntGoldProds3
761490    +          +    -0.05641788275636 * GRP_MntGoldProds4
761491    +          +    -1.00661051196007 * GRP_MntMeatProducts2
761492    +          +     -0.7897102230697 * GRP_MntMeatProducts3
761493    +          +     0.82643513947121 * GRP_MntMeatProducts4
761494    +          +     0.29396736594116 * GRP_MntWines2  +    -0.23616802309365 *
761495    +        GRP_MntWines3  +    -0.53754288840118 * GRP_MntWines4
761496    +          +     0.51299707442487 * GRP_NumCatalogPurchases3
761497    +          +    -0.50131971617023 * GRP_NumCatalogPurchases4
761498    +          +     -1.0244605634362 * GRP_NumDistPurchases2
761499    +          +     0.62371418531403 * GRP_NumDistPurchases3
761500    +          +     0.01028523337025 * GRP_NumDistPurchases4
761501    +          +     0.57550765494375 * GRP_NumWebPurchases2
761502    +          +     0.06426605759446 * GRP_NumWebPurchases3
761503    +          +     -0.0925907148366 * GRP_NumWebPurchases4
761504    +          +    -0.38247659021772 * GRP_RFMstat2  +    -0.19029293671326 *
761505    +        GRP_RFMstat3  +     0.43474715375598 * GRP_RFMstat4
761506    +          +     0.50016038621788 * GRP_RMntFrq2  +    -0.67187730592002 *
761507    +        GRP_RMntFrq3  +    -0.23217968284532 * GRP_RMntFrq4
761508    +          +     0.58211670962274 * GRP_Recency2  +     0.40065427673317 *
761509    +        GRP_Recency3  +     0.03489926907231 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -1.49044065215331 * GRP_AcceptedCmp52 + 0.29747214763886 * 
GRP_Frq2 + 0.25845091468379 * GRP_Frq3 + -0.12253400308729 * GRP_Frq4 + 0.67026230943159 * 
GRP_Income2 + -0.07529723714567 * GRP_Income3 + -0.00656076113338 * GRP_Income4 + 
0.11866607313287 * GRP_Mnt2 + 0.50886534936331 * GRP_Mnt3 + -0.40624874712256 * GRP_Mnt4 + 
0.07903512198302 * GRP_MntFishProducts2 + 0.30094355054178 * GRP_MntFishProducts3 + 
0.1592854004233 * GRP_MntFishProducts4 + -0.71778183892118 * GRP_MntGoldProds2 + 
-0.00758784099151 * GRP_MntGoldProds3 + -0.05641788275636 * GRP_MntGoldProds4 + 
-1.00661051196007 * GRP_MntMeatProducts2 + -0.7897102230697 * GRP_MntMeatProducts3 + 
0.82643513947121 * GRP_MntMeatProducts4 + 0.29396736594116 * GRP_MntWines2 + -0.23616802309365 
* GRP_MntWines3 + -0.53754288840118 * GRP_MntWines4 + 0.51299707442487 * 
GRP_NumCatalogPurchases3 + -0.50131971617023 * GRP_NumCatalogPurchases4 + -1.0244605634362 * 
GRP_NumDistPurchases2 + 0.62371418531403 * GRP_NumDistPurchases3 + 0.01028523337025 * 
GRP_NumDistPurchases4 + 0.57550765494375 * GRP_NumWebPurchases2 + 0.06426605759446 * 
GRP_NumWebPurchases3 + -0.0925907148366 * GRP_NumWebPurchases4 + -0.38247659021772 * 
GRP_RFMstat2 + -0.19029293671326 * GRP_RFMstat3 + 0.43474715375598 * GRP_RFMstat4 + 
0.50016038621788 * GRP_RMntFrq2 + -0.67187730592002 * GRP_RMntFrq3 + -0.23217968284532 * 
GRP_RMntFrq4 + 0.58211670962274 * GRP_Recency2 + 0.40065427673317 * GRP_Recency3 + 
0.03489926907231 * GRP_Recency4 ;
761510    +   H11  =    -0.62541132065477 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.62541132065477 + H11 ;
761511    +   H12  =     1.33919796685016 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.33919796685016 + H12 ;
761512    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
761513    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
761514    +END;
MPRINT(EM_DIAGRAM):   END;
761515    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
761516    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
761517    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
761518    +END;
MPRINT(EM_DIAGRAM):   END;
761519    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761520    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
761521    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761522    +
761523    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
761524    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
761525    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
761526    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
761527    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
761528    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761529    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
761530    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
761531    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
761532    +end;
MPRINT(EM_DIAGRAM):   end;
761533    +else do;
MPRINT(EM_DIAGRAM):   else do;
761534    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
761535    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
761536    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
761537    +   end;
MPRINT(EM_DIAGRAM):   end;
761538    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
761539    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
761540    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
761541    +   end;
MPRINT(EM_DIAGRAM):   end;
761542    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761543    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
761544    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
761545    +   end;
MPRINT(EM_DIAGRAM):   end;
761546    +end;
MPRINT(EM_DIAGRAM):   end;
761547    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
761548    +   P_DepVar1  =     2.63836588308478 * H11  +     2.61621667267981 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.63836588308478 * H11 + 2.61621667267981 * H12 ;
761549    +   P_DepVar1  =    -1.97856411598138 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97856411598138 + P_DepVar1 ;
761550    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
761551    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
761552    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
761553    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
761554    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
761555    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
761556    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
761557    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
761558    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
761559    +END;
MPRINT(EM_DIAGRAM):   END;
761560    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
761561    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
761562    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
761563    +END;
MPRINT(EM_DIAGRAM):   END;
761564    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
761565    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
761566    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
761567    +END;
MPRINT(EM_DIAGRAM):   END;
761568    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
761569    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
761570    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
761571    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
761572    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
761573    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
761574    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
761575    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761576    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
761577    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
761578    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
761579    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
761580    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
761581    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
761582    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
761583    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
761584    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
761585    +END;
MPRINT(EM_DIAGRAM):   END;
761586    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
761587    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
761588    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
761589    +drop
761590    +H11
761591    +H12
761592    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
761593    +* Renaming variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural20;
761594    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761595    +* Renaming Posterior variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural20;
761596    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761597    +drop Neural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar1;
761598    +Neural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar1 = P_DepVar1;
761599    +drop Neural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar0;
761600    +Neural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar0 = P_DepVar0;
761601    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761602    +* Renaming _WARN_ variable for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural20;
761603    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761604    +length Neural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural20_WARN_ $4;
761605    +drop Neural20_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural20_WARN_;
761606    +Neural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural20_WARN_ = _WARN_;
761607    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761608    +* Ensmbl3: Scoring Code of model 2 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 2 of 9;
761609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761610    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761611    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
761612    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
761613    +* NODE: Neural19;
MPRINT(EM_DIAGRAM):   * NODE: Neural19;
761614    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
761615    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
761616    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
761617    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
761618    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
761619    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
761620    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
761621    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
761622    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
761623    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
761624    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
761625    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
761626    +LENGTH _WARN_ $4
761627    +      F_DepVar  $ 12
761628    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
761629    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
761630    +
761631    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
761632    +
761633    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
761634    +
761635    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
761636    +
761637    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
761638    +
761639    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
761640    +
761641    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
761642    +
761643    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
761644    +
761645    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
761646    +
761647    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
761648    +
761649    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
761650    +
761651    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
761652    +
761653    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
761654    +
761655    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
761656    +
761657    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
761658    +
761659    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
761660    +
761661    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
761662    +
761663    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
761664    +
761665    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
761666    +
761667    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
761668    +
761669    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
761670    +
761671    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
761672    +
761673    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
761674    +
761675    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
761676    +
761677    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
761678    +
761679    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
761680    +
761681    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
761682    +
761683    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
761684    +
761685    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
761686    +
761687    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
761688    +
761689    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
761690    +
761691    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
761692    +
761693    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
761694    +
761695    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
761696    +
761697    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
761698    +
761699    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
761700    +
761701    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
761702    +
761703    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
761704    +
761705    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
761706    +
761707    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
761708    +
761709    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
761710    +
761711    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
761712    +
761713    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
761714    +
761715    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
761716    +
761717    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
761718    +
761719    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
761720    +
761721    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
761722    +
761723    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
761724    +
761725    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
761726    +
761727    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
761728    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
761729    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
761730    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
761731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761733    +end;
MPRINT(EM_DIAGRAM):   end;
761734    +else do;
MPRINT(EM_DIAGRAM):   else do;
761735    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761736    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
761737    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761738    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
761739    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
761740    +   end;
MPRINT(EM_DIAGRAM):   end;
761741    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
761742    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
761743    +   end;
MPRINT(EM_DIAGRAM):   end;
761744    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761745    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
761746    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761747    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761748    +   end;
MPRINT(EM_DIAGRAM):   end;
761749    +end;
MPRINT(EM_DIAGRAM):   end;
761750    +
761751    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
761752    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
761753    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
761754    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
761755    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
761756    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
761757    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761758    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761759    +end;
MPRINT(EM_DIAGRAM):   end;
761760    +else do;
MPRINT(EM_DIAGRAM):   else do;
761761    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761762    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
761763    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761764    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
761765    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
761766    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
761767    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
761768    +   end;
MPRINT(EM_DIAGRAM):   end;
761769    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
761770    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
761771    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
761772    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
761773    +   end;
MPRINT(EM_DIAGRAM):   end;
761774    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761775    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
761776    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
761777    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
761778    +   end;
MPRINT(EM_DIAGRAM):   end;
761779    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761780    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
761781    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
761782    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
761783    +   end;
MPRINT(EM_DIAGRAM):   end;
761784    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761785    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
761786    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
761787    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
761788    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761789    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761790    +   end;
MPRINT(EM_DIAGRAM):   end;
761791    +end;
MPRINT(EM_DIAGRAM):   end;
761792    +
761793    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
761794    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
761795    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
761796    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
761797    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
761798    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
761799    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761800    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761801    +end;
MPRINT(EM_DIAGRAM):   end;
761802    +else do;
MPRINT(EM_DIAGRAM):   else do;
761803    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761804    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
761805    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761806    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
761807    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
761808    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
761809    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
761810    +   end;
MPRINT(EM_DIAGRAM):   end;
761811    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761812    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
761813    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
761814    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
761815    +   end;
MPRINT(EM_DIAGRAM):   end;
761816    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
761817    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
761818    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
761819    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
761820    +   end;
MPRINT(EM_DIAGRAM):   end;
761821    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761822    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
761823    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
761824    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
761825    +   end;
MPRINT(EM_DIAGRAM):   end;
761826    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761827    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
761828    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
761829    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
761830    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761831    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761832    +   end;
MPRINT(EM_DIAGRAM):   end;
761833    +end;
MPRINT(EM_DIAGRAM):   end;
761834    +
761835    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
761836    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
761837    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
761838    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
761839    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
761840    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
761841    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761842    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761843    +end;
MPRINT(EM_DIAGRAM):   end;
761844    +else do;
MPRINT(EM_DIAGRAM):   else do;
761845    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761846    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
761847    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761848    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761849    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
761850    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
761851    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
761852    +   end;
MPRINT(EM_DIAGRAM):   end;
761853    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761854    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
761855    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
761856    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
761857    +   end;
MPRINT(EM_DIAGRAM):   end;
761858    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761859    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
761860    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
761861    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
761862    +   end;
MPRINT(EM_DIAGRAM):   end;
761863    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761864    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
761865    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
761866    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
761867    +   end;
MPRINT(EM_DIAGRAM):   end;
761868    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761869    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
761870    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
761871    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
761872    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761873    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761874    +   end;
MPRINT(EM_DIAGRAM):   end;
761875    +end;
MPRINT(EM_DIAGRAM):   end;
761876    +
761877    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
761878    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
761879    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
761880    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
761881    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
761882    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
761883    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761884    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761885    +end;
MPRINT(EM_DIAGRAM):   end;
761886    +else do;
MPRINT(EM_DIAGRAM):   else do;
761887    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761888    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
761889    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761890    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761891    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
761892    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
761893    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
761894    +   end;
MPRINT(EM_DIAGRAM):   end;
761895    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761896    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
761897    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
761898    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
761899    +   end;
MPRINT(EM_DIAGRAM):   end;
761900    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761901    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
761902    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
761903    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
761904    +   end;
MPRINT(EM_DIAGRAM):   end;
761905    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761906    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
761907    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
761908    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
761909    +   end;
MPRINT(EM_DIAGRAM):   end;
761910    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761911    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
761912    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
761913    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
761914    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761915    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761916    +   end;
MPRINT(EM_DIAGRAM):   end;
761917    +end;
MPRINT(EM_DIAGRAM):   end;
761918    +
761919    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
761920    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
761921    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
761922    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
761923    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
761924    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
761925    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761926    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761927    +end;
MPRINT(EM_DIAGRAM):   end;
761928    +else do;
MPRINT(EM_DIAGRAM):   else do;
761929    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761930    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
761931    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761932    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761933    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
761934    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
761935    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
761936    +   end;
MPRINT(EM_DIAGRAM):   end;
761937    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761938    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
761939    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
761940    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
761941    +   end;
MPRINT(EM_DIAGRAM):   end;
761942    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761943    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
761944    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
761945    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
761946    +   end;
MPRINT(EM_DIAGRAM):   end;
761947    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761948    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
761949    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
761950    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
761951    +   end;
MPRINT(EM_DIAGRAM):   end;
761952    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761953    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
761954    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
761955    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
761956    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761957    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761958    +   end;
MPRINT(EM_DIAGRAM):   end;
761959    +end;
MPRINT(EM_DIAGRAM):   end;
761960    +
761961    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
761962    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
761963    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
761964    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
761965    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
761966    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
761967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
761968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
761969    +end;
MPRINT(EM_DIAGRAM):   end;
761970    +else do;
MPRINT(EM_DIAGRAM):   else do;
761971    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
761972    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
761973    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
761974    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
761975    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
761976    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
761977    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
761978    +   end;
MPRINT(EM_DIAGRAM):   end;
761979    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
761980    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
761981    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
761982    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
761983    +   end;
MPRINT(EM_DIAGRAM):   end;
761984    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
761985    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
761986    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
761987    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
761988    +   end;
MPRINT(EM_DIAGRAM):   end;
761989    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
761990    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
761991    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
761992    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
761993    +   end;
MPRINT(EM_DIAGRAM):   end;
761994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
761995    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
761996    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
761997    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
761998    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
761999    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762000    +   end;
MPRINT(EM_DIAGRAM):   end;
762001    +end;
MPRINT(EM_DIAGRAM):   end;
762002    +
762003    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
762004    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
762005    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
762006    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
762007    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
762008    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
762009    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762010    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762011    +end;
MPRINT(EM_DIAGRAM):   end;
762012    +else do;
MPRINT(EM_DIAGRAM):   else do;
762013    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762014    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
762015    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762016    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762017    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
762018    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
762019    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
762020    +   end;
MPRINT(EM_DIAGRAM):   end;
762021    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762022    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
762023    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
762024    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
762025    +   end;
MPRINT(EM_DIAGRAM):   end;
762026    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762027    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
762028    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
762029    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
762030    +   end;
MPRINT(EM_DIAGRAM):   end;
762031    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762032    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
762033    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
762034    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
762035    +   end;
MPRINT(EM_DIAGRAM):   end;
762036    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762037    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
762038    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
762039    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
762040    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762041    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762042    +   end;
MPRINT(EM_DIAGRAM):   end;
762043    +end;
MPRINT(EM_DIAGRAM):   end;
762044    +
762045    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
762046    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
762047    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
762048    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
762049    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
762050    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762051    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762052    +end;
MPRINT(EM_DIAGRAM):   end;
762053    +else do;
MPRINT(EM_DIAGRAM):   else do;
762054    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762055    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
762056    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762057    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762058    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
762059    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
762060    +   end;
MPRINT(EM_DIAGRAM):   end;
762061    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762062    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
762063    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
762064    +   end;
MPRINT(EM_DIAGRAM):   end;
762065    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762066    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
762067    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
762068    +   end;
MPRINT(EM_DIAGRAM):   end;
762069    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762070    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
762071    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
762072    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762073    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762074    +   end;
MPRINT(EM_DIAGRAM):   end;
762075    +end;
MPRINT(EM_DIAGRAM):   end;
762076    +
762077    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
762078    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
762079    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
762080    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
762081    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
762082    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
762083    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762084    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762085    +end;
MPRINT(EM_DIAGRAM):   end;
762086    +else do;
MPRINT(EM_DIAGRAM):   else do;
762087    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762088    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
762089    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762090    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
762091    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
762092    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
762093    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
762094    +   end;
MPRINT(EM_DIAGRAM):   end;
762095    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762096    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
762097    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
762098    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
762099    +   end;
MPRINT(EM_DIAGRAM):   end;
762100    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762101    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
762102    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
762103    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
762104    +   end;
MPRINT(EM_DIAGRAM):   end;
762105    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
762106    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
762107    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
762108    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
762109    +   end;
MPRINT(EM_DIAGRAM):   end;
762110    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762111    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
762112    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
762113    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
762114    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762115    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762116    +   end;
MPRINT(EM_DIAGRAM):   end;
762117    +end;
MPRINT(EM_DIAGRAM):   end;
762118    +
762119    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
762120    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
762121    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
762122    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
762123    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
762124    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
762125    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762126    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762127    +end;
MPRINT(EM_DIAGRAM):   end;
762128    +else do;
MPRINT(EM_DIAGRAM):   else do;
762129    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762130    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
762131    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762132    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762133    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
762134    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
762135    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
762136    +   end;
MPRINT(EM_DIAGRAM):   end;
762137    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762138    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
762139    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
762140    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
762141    +   end;
MPRINT(EM_DIAGRAM):   end;
762142    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762143    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
762144    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
762145    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
762146    +   end;
MPRINT(EM_DIAGRAM):   end;
762147    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762148    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
762149    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
762150    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
762151    +   end;
MPRINT(EM_DIAGRAM):   end;
762152    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762153    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
762154    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
762155    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
762156    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762157    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762158    +   end;
MPRINT(EM_DIAGRAM):   end;
762159    +end;
MPRINT(EM_DIAGRAM):   end;
762160    +
762161    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
762162    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
762163    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
762164    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
762165    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
762166    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
762167    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762168    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762169    +end;
MPRINT(EM_DIAGRAM):   end;
762170    +else do;
MPRINT(EM_DIAGRAM):   else do;
762171    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762172    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
762173    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762174    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
762175    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
762176    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
762177    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
762178    +   end;
MPRINT(EM_DIAGRAM):   end;
762179    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
762180    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
762181    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
762182    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
762183    +   end;
MPRINT(EM_DIAGRAM):   end;
762184    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762185    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
762186    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
762187    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
762188    +   end;
MPRINT(EM_DIAGRAM):   end;
762189    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762190    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
762191    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
762192    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
762193    +   end;
MPRINT(EM_DIAGRAM):   end;
762194    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762195    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
762196    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
762197    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
762198    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762199    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762200    +   end;
MPRINT(EM_DIAGRAM):   end;
762201    +end;
MPRINT(EM_DIAGRAM):   end;
762202    +
762203    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
762204    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
762205    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
762206    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
762207    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
762208    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
762209    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762210    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762211    +end;
MPRINT(EM_DIAGRAM):   end;
762212    +else do;
MPRINT(EM_DIAGRAM):   else do;
762213    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762214    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
762215    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762216    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762217    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
762218    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
762219    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
762220    +   end;
MPRINT(EM_DIAGRAM):   end;
762221    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762222    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
762223    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
762224    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
762225    +   end;
MPRINT(EM_DIAGRAM):   end;
762226    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762227    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
762228    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
762229    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
762230    +   end;
MPRINT(EM_DIAGRAM):   end;
762231    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762232    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
762233    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
762234    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
762235    +   end;
MPRINT(EM_DIAGRAM):   end;
762236    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762237    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
762238    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
762239    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
762240    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762241    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762242    +   end;
MPRINT(EM_DIAGRAM):   end;
762243    +end;
MPRINT(EM_DIAGRAM):   end;
762244    +
762245    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
762246    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
762247    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
762248    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
762249    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
762250    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
762251    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762252    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762253    +end;
MPRINT(EM_DIAGRAM):   end;
762254    +else do;
MPRINT(EM_DIAGRAM):   else do;
762255    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762256    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
762257    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762258    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
762259    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
762260    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
762261    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
762262    +   end;
MPRINT(EM_DIAGRAM):   end;
762263    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762264    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
762265    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
762266    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
762267    +   end;
MPRINT(EM_DIAGRAM):   end;
762268    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
762269    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
762270    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
762271    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
762272    +   end;
MPRINT(EM_DIAGRAM):   end;
762273    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762274    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
762275    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
762276    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
762277    +   end;
MPRINT(EM_DIAGRAM):   end;
762278    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762279    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
762280    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
762281    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
762282    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762283    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762284    +   end;
MPRINT(EM_DIAGRAM):   end;
762285    +end;
MPRINT(EM_DIAGRAM):   end;
762286    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762287    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
762288    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762289    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762290    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
762291    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762292    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
762293    +   H11  =    -0.20808401117374 * GRP_AcceptedCmp52  +      1.5952064946991 *
762294    +        GRP_Frq2  +    -0.01225273525848 * GRP_Frq3  +    -0.62835698024634 *
762295    +        GRP_Frq4  +     0.44314401678348 * GRP_Income2
762296    +          +     0.89646769323205 * GRP_Income3  +    -0.90649183264259 *
762297    +        GRP_Income4  +    -0.55176085229947 * GRP_Mnt2
762298    +          +    -0.28020133968753 * GRP_Mnt3  +     0.17871933677614 * GRP_Mnt4
762299    +          +     0.38585041088838 * GRP_MntFishProducts2
762300    +          +    -0.22597951859521 * GRP_MntFishProducts3
762301    +          +    -0.12591354177724 * GRP_MntFishProducts4
762302    +          +     0.41517790727814 * GRP_MntGoldProds2
762303    +          +    -0.01783554546067 * GRP_MntGoldProds3
762304    +          +    -0.05254364640808 * GRP_MntGoldProds4
762305    +          +     0.11041766264422 * GRP_MntMeatProducts2
762306    +          +     0.80734417241917 * GRP_MntMeatProducts3
762307    +          +    -0.58385299076265 * GRP_MntMeatProducts4
762308    +          +     0.63351163942796 * GRP_MntWines2  +      0.4938617622427 *
762309    +        GRP_MntWines3  +     0.02607762678073 * GRP_MntWines4
762310    +          +    -1.43194573733764 * GRP_NumCatalogPurchases3
762311    +          +     0.55178119754186 * GRP_NumCatalogPurchases4
762312    +          +      -1.830671366144 * GRP_NumDistPurchases2
762313    +          +    -1.17053785506362 * GRP_NumDistPurchases3
762314    +          +     0.98564208160287 * GRP_NumDistPurchases4
762315    +          +    -0.22019170543618 * GRP_NumWebPurchases2
762316    +          +     0.12596691753667 * GRP_NumWebPurchases3
762317    +          +    -0.02882568244969 * GRP_NumWebPurchases4
762318    +          +    -0.21302125337044 * GRP_RFMstat2  +     0.08158805477511 *
762319    +        GRP_RFMstat3  +     -0.2631946184422 * GRP_RFMstat4
762320    +          +      0.1161399236304 * GRP_RMntFrq2  +     0.60576408771811 *
762321    +        GRP_RMntFrq3  +    -0.25254086880004 * GRP_RMntFrq4
762322    +          +      0.8664956591594 * GRP_Recency2  +     0.06243974875226 *
762323    +        GRP_Recency3  +    -0.38266930051466 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20808401117374 * GRP_AcceptedCmp52 + 1.5952064946991 * GRP_Frq2 
+ -0.01225273525848 * GRP_Frq3 + -0.62835698024634 * GRP_Frq4 + 0.44314401678348 * GRP_Income2 
+ 0.89646769323205 * GRP_Income3 + -0.90649183264259 * GRP_Income4 + -0.55176085229947 * 
GRP_Mnt2 + -0.28020133968753 * GRP_Mnt3 + 0.17871933677614 * GRP_Mnt4 + 0.38585041088838 * 
GRP_MntFishProducts2 + -0.22597951859521 * GRP_MntFishProducts3 + -0.12591354177724 * 
GRP_MntFishProducts4 + 0.41517790727814 * GRP_MntGoldProds2 + -0.01783554546067 * 
GRP_MntGoldProds3 + -0.05254364640808 * GRP_MntGoldProds4 + 0.11041766264422 * 
GRP_MntMeatProducts2 + 0.80734417241917 * GRP_MntMeatProducts3 + -0.58385299076265 * 
GRP_MntMeatProducts4 + 0.63351163942796 * GRP_MntWines2 + 0.4938617622427 * GRP_MntWines3 + 
0.02607762678073 * GRP_MntWines4 + -1.43194573733764 * GRP_NumCatalogPurchases3 + 
0.55178119754186 * GRP_NumCatalogPurchases4 + -1.830671366144 * GRP_NumDistPurchases2 + 
-1.17053785506362 * GRP_NumDistPurchases3 + 0.98564208160287 * GRP_NumDistPurchases4 + 
-0.22019170543618 * GRP_NumWebPurchases2 + 0.12596691753667 * GRP_NumWebPurchases3 + 
-0.02882568244969 * GRP_NumWebPurchases4 + -0.21302125337044 * GRP_RFMstat2 + 0.08158805477511 
* GRP_RFMstat3 + -0.2631946184422 * GRP_RFMstat4 + 0.1161399236304 * GRP_RMntFrq2 + 
0.60576408771811 * GRP_RMntFrq3 + -0.25254086880004 * GRP_RMntFrq4 + 0.8664956591594 * 
GRP_Recency2 + 0.06243974875226 * GRP_Recency3 + -0.38266930051466 * GRP_Recency4 ;
762324    +   H12  =    -1.49044065215331 * GRP_AcceptedCmp52  +     0.29747214763886 *
762325    +        GRP_Frq2  +     0.25845091468379 * GRP_Frq3  +    -0.12253400308729 *
762326    +        GRP_Frq4  +     0.67026230943159 * GRP_Income2
762327    +          +    -0.07529723714567 * GRP_Income3  +    -0.00656076113338 *
762328    +        GRP_Income4  +     0.11866607313287 * GRP_Mnt2
762329    +          +     0.50886534936331 * GRP_Mnt3  +    -0.40624874712256 * GRP_Mnt4
762330    +          +     0.07903512198302 * GRP_MntFishProducts2
762331    +          +     0.30094355054178 * GRP_MntFishProducts3
762332    +          +      0.1592854004233 * GRP_MntFishProducts4
762333    +          +    -0.71778183892118 * GRP_MntGoldProds2
762334    +          +    -0.00758784099151 * GRP_MntGoldProds3
762335    +          +    -0.05641788275636 * GRP_MntGoldProds4
762336    +          +    -1.00661051196007 * GRP_MntMeatProducts2
762337    +          +     -0.7897102230697 * GRP_MntMeatProducts3
762338    +          +     0.82643513947121 * GRP_MntMeatProducts4
762339    +          +     0.29396736594116 * GRP_MntWines2  +    -0.23616802309365 *
762340    +        GRP_MntWines3  +    -0.53754288840118 * GRP_MntWines4
762341    +          +     0.51299707442487 * GRP_NumCatalogPurchases3
762342    +          +    -0.50131971617023 * GRP_NumCatalogPurchases4
762343    +          +     -1.0244605634362 * GRP_NumDistPurchases2
762344    +          +     0.62371418531403 * GRP_NumDistPurchases3
762345    +          +     0.01028523337025 * GRP_NumDistPurchases4
762346    +          +     0.57550765494375 * GRP_NumWebPurchases2
762347    +          +     0.06426605759446 * GRP_NumWebPurchases3
762348    +          +     -0.0925907148366 * GRP_NumWebPurchases4
762349    +          +    -0.38247659021772 * GRP_RFMstat2  +    -0.19029293671326 *
762350    +        GRP_RFMstat3  +     0.43474715375598 * GRP_RFMstat4
762351    +          +     0.50016038621788 * GRP_RMntFrq2  +    -0.67187730592002 *
762352    +        GRP_RMntFrq3  +    -0.23217968284532 * GRP_RMntFrq4
762353    +          +     0.58211670962274 * GRP_Recency2  +     0.40065427673317 *
762354    +        GRP_Recency3  +     0.03489926907231 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -1.49044065215331 * GRP_AcceptedCmp52 + 0.29747214763886 * 
GRP_Frq2 + 0.25845091468379 * GRP_Frq3 + -0.12253400308729 * GRP_Frq4 + 0.67026230943159 * 
GRP_Income2 + -0.07529723714567 * GRP_Income3 + -0.00656076113338 * GRP_Income4 + 
0.11866607313287 * GRP_Mnt2 + 0.50886534936331 * GRP_Mnt3 + -0.40624874712256 * GRP_Mnt4 + 
0.07903512198302 * GRP_MntFishProducts2 + 0.30094355054178 * GRP_MntFishProducts3 + 
0.1592854004233 * GRP_MntFishProducts4 + -0.71778183892118 * GRP_MntGoldProds2 + 
-0.00758784099151 * GRP_MntGoldProds3 + -0.05641788275636 * GRP_MntGoldProds4 + 
-1.00661051196007 * GRP_MntMeatProducts2 + -0.7897102230697 * GRP_MntMeatProducts3 + 
0.82643513947121 * GRP_MntMeatProducts4 + 0.29396736594116 * GRP_MntWines2 + -0.23616802309365 
* GRP_MntWines3 + -0.53754288840118 * GRP_MntWines4 + 0.51299707442487 * 
GRP_NumCatalogPurchases3 + -0.50131971617023 * GRP_NumCatalogPurchases4 + -1.0244605634362 * 
GRP_NumDistPurchases2 + 0.62371418531403 * GRP_NumDistPurchases3 + 0.01028523337025 * 
GRP_NumDistPurchases4 + 0.57550765494375 * GRP_NumWebPurchases2 + 0.06426605759446 * 
GRP_NumWebPurchases3 + -0.0925907148366 * GRP_NumWebPurchases4 + -0.38247659021772 * 
GRP_RFMstat2 + -0.19029293671326 * GRP_RFMstat3 + 0.43474715375598 * GRP_RFMstat4 + 
0.50016038621788 * GRP_RMntFrq2 + -0.67187730592002 * GRP_RMntFrq3 + -0.23217968284532 * 
GRP_RMntFrq4 + 0.58211670962274 * GRP_Recency2 + 0.40065427673317 * GRP_Recency3 + 
0.03489926907231 * GRP_Recency4 ;
762355    +   H11  =    -0.62541132065477 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.62541132065477 + H11 ;
762356    +   H12  =     1.33919796685016 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.33919796685016 + H12 ;
762357    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
762358    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
762359    +END;
MPRINT(EM_DIAGRAM):   END;
762360    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
762361    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
762362    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
762363    +END;
MPRINT(EM_DIAGRAM):   END;
762364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762365    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
762366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762367    +
762368    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
762369    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
762370    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
762371    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
762372    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
762373    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762374    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
762375    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
762376    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
762377    +end;
MPRINT(EM_DIAGRAM):   end;
762378    +else do;
MPRINT(EM_DIAGRAM):   else do;
762379    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
762380    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
762381    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
762382    +   end;
MPRINT(EM_DIAGRAM):   end;
762383    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
762384    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
762385    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
762386    +   end;
MPRINT(EM_DIAGRAM):   end;
762387    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762388    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
762389    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
762390    +   end;
MPRINT(EM_DIAGRAM):   end;
762391    +end;
MPRINT(EM_DIAGRAM):   end;
762392    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
762393    +   P_DepVar1  =     2.63836588308478 * H11  +     2.61621667267981 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.63836588308478 * H11 + 2.61621667267981 * H12 ;
762394    +   P_DepVar1  =    -1.97856411598138 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97856411598138 + P_DepVar1 ;
762395    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
762396    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
762397    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
762398    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
762399    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
762400    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
762401    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
762402    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
762403    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
762404    +END;
MPRINT(EM_DIAGRAM):   END;
762405    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
762406    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
762407    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
762408    +END;
MPRINT(EM_DIAGRAM):   END;
762409    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
762410    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
762411    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
762412    +END;
MPRINT(EM_DIAGRAM):   END;
762413    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
762414    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
762415    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
762416    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
762417    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
762418    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
762419    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
762420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762421    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
762422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
762423    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
762424    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
762425    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
762426    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
762427    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
762428    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
762429    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
762430    +END;
MPRINT(EM_DIAGRAM):   END;
762431    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
762432    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
762433    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
762434    +drop
762435    +H11
762436    +H12
762437    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
762438    +* Renaming variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural19;
762439    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762440    +* Renaming Posterior variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural19;
762441    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762442    +drop Neural19_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar1;
762443    +Neural19_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar1 = P_DepVar1;
762444    +drop Neural19_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar0;
762445    +Neural19_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar0 = P_DepVar0;
762446    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762447    +* Renaming _WARN_ variable for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural19;
762448    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762449    +length Neural19_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural19_WARN_ $4;
762450    +drop Neural19_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural19_WARN_;
762451    +Neural19_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural19_WARN_ = _WARN_;
762452    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762453    +* Ensmbl3: Scoring Code of model 3 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 3 of 9;
762454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762455    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762456    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
762457    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
762458    +* NODE: Neural5;
MPRINT(EM_DIAGRAM):   * NODE: Neural5;
762459    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
762460    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
762461    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
762462    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
762463    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
762464    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
762465    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
762466    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
762467    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
762468    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
762469    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
762470    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
762471    +LENGTH _WARN_ $4
762472    +      F_DepVar  $ 12
762473    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
762474    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
762475    +
762476    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
762477    +
762478    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
762479    +
762480    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
762481    +
762482    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
762483    +
762484    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
762485    +
762486    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
762487    +
762488    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
762489    +
762490    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
762491    +
762492    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
762493    +
762494    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
762495    +
762496    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
762497    +
762498    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
762499    +
762500    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
762501    +
762502    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
762503    +
762504    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
762505    +
762506    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
762507    +
762508    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
762509    +
762510    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
762511    +
762512    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
762513    +
762514    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
762515    +
762516    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
762517    +
762518    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
762519    +
762520    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
762521    +
762522    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
762523    +
762524    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
762525    +
762526    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
762527    +
762528    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
762529    +
762530    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
762531    +
762532    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
762533    +
762534    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
762535    +
762536    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
762537    +
762538    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
762539    +
762540    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
762541    +
762542    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
762543    +
762544    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
762545    +
762546    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
762547    +
762548    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
762549    +
762550    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
762551    +
762552    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
762553    +
762554    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
762555    +
762556    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
762557    +
762558    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
762559    +
762560    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
762561    +
762562    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
762563    +
762564    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
762565    +
762566    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
762567    +
762568    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
762569    +
762570    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
762571    +
762572    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
762573    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
762574    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
762575    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
762576    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762577    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762578    +end;
MPRINT(EM_DIAGRAM):   end;
762579    +else do;
MPRINT(EM_DIAGRAM):   else do;
762580    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762581    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
762582    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762583    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
762584    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
762585    +   end;
MPRINT(EM_DIAGRAM):   end;
762586    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
762587    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
762588    +   end;
MPRINT(EM_DIAGRAM):   end;
762589    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762590    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
762591    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762592    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762593    +   end;
MPRINT(EM_DIAGRAM):   end;
762594    +end;
MPRINT(EM_DIAGRAM):   end;
762595    +
762596    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
762597    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
762598    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
762599    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
762600    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
762601    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
762602    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762603    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762604    +end;
MPRINT(EM_DIAGRAM):   end;
762605    +else do;
MPRINT(EM_DIAGRAM):   else do;
762606    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762607    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
762608    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762609    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
762610    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
762611    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
762612    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
762613    +   end;
MPRINT(EM_DIAGRAM):   end;
762614    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
762615    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
762616    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
762617    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
762618    +   end;
MPRINT(EM_DIAGRAM):   end;
762619    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762620    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
762621    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
762622    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
762623    +   end;
MPRINT(EM_DIAGRAM):   end;
762624    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762625    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
762626    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
762627    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
762628    +   end;
MPRINT(EM_DIAGRAM):   end;
762629    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762630    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
762631    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
762632    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
762633    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762634    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762635    +   end;
MPRINT(EM_DIAGRAM):   end;
762636    +end;
MPRINT(EM_DIAGRAM):   end;
762637    +
762638    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
762639    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
762640    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
762641    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
762642    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
762643    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
762644    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762645    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762646    +end;
MPRINT(EM_DIAGRAM):   end;
762647    +else do;
MPRINT(EM_DIAGRAM):   else do;
762648    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762649    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
762650    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762651    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
762652    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
762653    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
762654    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
762655    +   end;
MPRINT(EM_DIAGRAM):   end;
762656    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762657    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
762658    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
762659    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
762660    +   end;
MPRINT(EM_DIAGRAM):   end;
762661    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
762662    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
762663    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
762664    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
762665    +   end;
MPRINT(EM_DIAGRAM):   end;
762666    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762667    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
762668    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
762669    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
762670    +   end;
MPRINT(EM_DIAGRAM):   end;
762671    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762672    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
762673    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
762674    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
762675    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762676    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762677    +   end;
MPRINT(EM_DIAGRAM):   end;
762678    +end;
MPRINT(EM_DIAGRAM):   end;
762679    +
762680    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
762681    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
762682    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
762683    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
762684    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
762685    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
762686    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762687    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762688    +end;
MPRINT(EM_DIAGRAM):   end;
762689    +else do;
MPRINT(EM_DIAGRAM):   else do;
762690    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762691    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
762692    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762693    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762694    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
762695    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
762696    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
762697    +   end;
MPRINT(EM_DIAGRAM):   end;
762698    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762699    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
762700    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
762701    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
762702    +   end;
MPRINT(EM_DIAGRAM):   end;
762703    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762704    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
762705    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
762706    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
762707    +   end;
MPRINT(EM_DIAGRAM):   end;
762708    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762709    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
762710    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
762711    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
762712    +   end;
MPRINT(EM_DIAGRAM):   end;
762713    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762714    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
762715    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
762716    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
762717    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762718    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762719    +   end;
MPRINT(EM_DIAGRAM):   end;
762720    +end;
MPRINT(EM_DIAGRAM):   end;
762721    +
762722    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
762723    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
762724    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
762725    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
762726    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
762727    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
762728    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762729    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762730    +end;
MPRINT(EM_DIAGRAM):   end;
762731    +else do;
MPRINT(EM_DIAGRAM):   else do;
762732    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762733    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
762734    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762735    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762736    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
762737    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
762738    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
762739    +   end;
MPRINT(EM_DIAGRAM):   end;
762740    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762741    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
762742    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
762743    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
762744    +   end;
MPRINT(EM_DIAGRAM):   end;
762745    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762746    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
762747    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
762748    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
762749    +   end;
MPRINT(EM_DIAGRAM):   end;
762750    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762751    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
762752    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
762753    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
762754    +   end;
MPRINT(EM_DIAGRAM):   end;
762755    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762756    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
762757    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
762758    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
762759    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762760    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762761    +   end;
MPRINT(EM_DIAGRAM):   end;
762762    +end;
MPRINT(EM_DIAGRAM):   end;
762763    +
762764    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
762765    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
762766    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
762767    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
762768    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
762769    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
762770    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762771    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762772    +end;
MPRINT(EM_DIAGRAM):   end;
762773    +else do;
MPRINT(EM_DIAGRAM):   else do;
762774    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762775    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
762776    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762777    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762778    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
762779    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
762780    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
762781    +   end;
MPRINT(EM_DIAGRAM):   end;
762782    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762783    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
762784    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
762785    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
762786    +   end;
MPRINT(EM_DIAGRAM):   end;
762787    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762788    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
762789    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
762790    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
762791    +   end;
MPRINT(EM_DIAGRAM):   end;
762792    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762793    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
762794    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
762795    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
762796    +   end;
MPRINT(EM_DIAGRAM):   end;
762797    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762798    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
762799    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
762800    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
762801    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762802    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762803    +   end;
MPRINT(EM_DIAGRAM):   end;
762804    +end;
MPRINT(EM_DIAGRAM):   end;
762805    +
762806    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
762807    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
762808    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
762809    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
762810    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
762811    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
762812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762814    +end;
MPRINT(EM_DIAGRAM):   end;
762815    +else do;
MPRINT(EM_DIAGRAM):   else do;
762816    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762817    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
762818    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762819    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762820    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
762821    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
762822    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
762823    +   end;
MPRINT(EM_DIAGRAM):   end;
762824    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762825    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
762826    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
762827    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
762828    +   end;
MPRINT(EM_DIAGRAM):   end;
762829    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762830    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
762831    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
762832    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
762833    +   end;
MPRINT(EM_DIAGRAM):   end;
762834    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762835    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
762836    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
762837    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
762838    +   end;
MPRINT(EM_DIAGRAM):   end;
762839    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762840    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
762841    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
762842    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
762843    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762844    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762845    +   end;
MPRINT(EM_DIAGRAM):   end;
762846    +end;
MPRINT(EM_DIAGRAM):   end;
762847    +
762848    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
762849    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
762850    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
762851    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
762852    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
762853    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
762854    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762855    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762856    +end;
MPRINT(EM_DIAGRAM):   end;
762857    +else do;
MPRINT(EM_DIAGRAM):   else do;
762858    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762859    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
762860    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762861    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762862    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
762863    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
762864    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
762865    +   end;
MPRINT(EM_DIAGRAM):   end;
762866    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762867    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
762868    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
762869    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
762870    +   end;
MPRINT(EM_DIAGRAM):   end;
762871    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762872    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
762873    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
762874    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
762875    +   end;
MPRINT(EM_DIAGRAM):   end;
762876    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762877    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
762878    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
762879    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
762880    +   end;
MPRINT(EM_DIAGRAM):   end;
762881    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762882    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
762883    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
762884    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
762885    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762886    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762887    +   end;
MPRINT(EM_DIAGRAM):   end;
762888    +end;
MPRINT(EM_DIAGRAM):   end;
762889    +
762890    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
762891    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
762892    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
762893    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
762894    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
762895    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762896    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762897    +end;
MPRINT(EM_DIAGRAM):   end;
762898    +else do;
MPRINT(EM_DIAGRAM):   else do;
762899    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762900    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
762901    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762902    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762903    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
762904    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
762905    +   end;
MPRINT(EM_DIAGRAM):   end;
762906    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762907    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
762908    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
762909    +   end;
MPRINT(EM_DIAGRAM):   end;
762910    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762911    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
762912    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
762913    +   end;
MPRINT(EM_DIAGRAM):   end;
762914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762915    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
762916    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
762917    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762918    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762919    +   end;
MPRINT(EM_DIAGRAM):   end;
762920    +end;
MPRINT(EM_DIAGRAM):   end;
762921    +
762922    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
762923    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
762924    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
762925    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
762926    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
762927    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
762928    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762929    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762930    +end;
MPRINT(EM_DIAGRAM):   end;
762931    +else do;
MPRINT(EM_DIAGRAM):   else do;
762932    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762933    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
762934    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762935    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
762936    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
762937    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
762938    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
762939    +   end;
MPRINT(EM_DIAGRAM):   end;
762940    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762941    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
762942    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
762943    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
762944    +   end;
MPRINT(EM_DIAGRAM):   end;
762945    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762946    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
762947    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
762948    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
762949    +   end;
MPRINT(EM_DIAGRAM):   end;
762950    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
762951    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
762952    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
762953    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
762954    +   end;
MPRINT(EM_DIAGRAM):   end;
762955    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762956    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
762957    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
762958    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
762959    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
762960    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762961    +   end;
MPRINT(EM_DIAGRAM):   end;
762962    +end;
MPRINT(EM_DIAGRAM):   end;
762963    +
762964    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
762965    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
762966    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
762967    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
762968    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
762969    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
762970    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
762971    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
762972    +end;
MPRINT(EM_DIAGRAM):   end;
762973    +else do;
MPRINT(EM_DIAGRAM):   else do;
762974    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
762975    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
762976    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
762977    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
762978    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
762979    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
762980    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
762981    +   end;
MPRINT(EM_DIAGRAM):   end;
762982    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
762983    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
762984    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
762985    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
762986    +   end;
MPRINT(EM_DIAGRAM):   end;
762987    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
762988    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
762989    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
762990    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
762991    +   end;
MPRINT(EM_DIAGRAM):   end;
762992    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
762993    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
762994    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
762995    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
762996    +   end;
MPRINT(EM_DIAGRAM):   end;
762997    +   else do;
MPRINT(EM_DIAGRAM):   else do;
762998    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
762999    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
763000    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
763001    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763002    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763003    +   end;
MPRINT(EM_DIAGRAM):   end;
763004    +end;
MPRINT(EM_DIAGRAM):   end;
763005    +
763006    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
763007    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
763008    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
763009    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
763010    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
763011    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
763012    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763013    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763014    +end;
MPRINT(EM_DIAGRAM):   end;
763015    +else do;
MPRINT(EM_DIAGRAM):   else do;
763016    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763017    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
763018    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763019    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
763020    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
763021    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
763022    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
763023    +   end;
MPRINT(EM_DIAGRAM):   end;
763024    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763025    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
763026    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
763027    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
763028    +   end;
MPRINT(EM_DIAGRAM):   end;
763029    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763030    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
763031    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
763032    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
763033    +   end;
MPRINT(EM_DIAGRAM):   end;
763034    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763035    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
763036    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
763037    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
763038    +   end;
MPRINT(EM_DIAGRAM):   end;
763039    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763040    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
763041    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
763042    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
763043    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763044    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763045    +   end;
MPRINT(EM_DIAGRAM):   end;
763046    +end;
MPRINT(EM_DIAGRAM):   end;
763047    +
763048    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
763049    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
763050    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
763051    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
763052    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
763053    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
763054    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763055    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763056    +end;
MPRINT(EM_DIAGRAM):   end;
763057    +else do;
MPRINT(EM_DIAGRAM):   else do;
763058    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763059    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
763060    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763061    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763062    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
763063    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
763064    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
763065    +   end;
MPRINT(EM_DIAGRAM):   end;
763066    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763067    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
763068    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
763069    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
763070    +   end;
MPRINT(EM_DIAGRAM):   end;
763071    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763072    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
763073    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
763074    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
763075    +   end;
MPRINT(EM_DIAGRAM):   end;
763076    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763077    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
763078    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
763079    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
763080    +   end;
MPRINT(EM_DIAGRAM):   end;
763081    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763082    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
763083    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
763084    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
763085    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763086    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763087    +   end;
MPRINT(EM_DIAGRAM):   end;
763088    +end;
MPRINT(EM_DIAGRAM):   end;
763089    +
763090    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
763091    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
763092    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
763093    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
763094    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
763095    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
763096    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763097    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763098    +end;
MPRINT(EM_DIAGRAM):   end;
763099    +else do;
MPRINT(EM_DIAGRAM):   else do;
763100    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763101    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
763102    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763103    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
763104    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
763105    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
763106    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
763107    +   end;
MPRINT(EM_DIAGRAM):   end;
763108    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763109    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
763110    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
763111    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
763112    +   end;
MPRINT(EM_DIAGRAM):   end;
763113    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763114    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
763115    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
763116    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
763117    +   end;
MPRINT(EM_DIAGRAM):   end;
763118    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763119    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
763120    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
763121    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
763122    +   end;
MPRINT(EM_DIAGRAM):   end;
763123    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763124    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
763125    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
763126    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
763127    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763128    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763129    +   end;
MPRINT(EM_DIAGRAM):   end;
763130    +end;
MPRINT(EM_DIAGRAM):   end;
763131    +
763132    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763133    +*** Checking missing input Interval
763134    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
763135    +
763136    +IF NMISS(
763137    +   Mnt   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Mnt ) THEN DO;
763138    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
763139    +
763140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763141    +END;
MPRINT(EM_DIAGRAM):   END;
763142    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763143    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
763144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763145    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
763146    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
763147    +END;
MPRINT(EM_DIAGRAM):   END;
763148    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
763149    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
763150    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
763151    +END;
MPRINT(EM_DIAGRAM):   END;
763152    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763153    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
763154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763156    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
763157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763158    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
763159    +   H11  =    -0.05639626836962 * S_Mnt ;
MPRINT(EM_DIAGRAM):   H11 = -0.05639626836962 * S_Mnt ;
763160    +   H11  = H11  +      0.0860559154003 * GRP_AcceptedCmp52
763161    +          +    -0.19758814669075 * GRP_Frq2  +    -0.02279576157687 * GRP_Frq3
763162    +          +     0.07251746297433 * GRP_Frq4  +    -0.09591494883083 *
763163    +        GRP_Income2  +    -0.08058752115004 * GRP_Income3
763164    +          +     0.08588060203033 * GRP_Income4  +     0.05055584750276 *
763165    +        GRP_Mnt2  +     0.02545024725796 * GRP_Mnt3  +    -0.03224681694037 *
763166    +        GRP_Mnt4  +    -0.06357865903392 * GRP_MntFishProducts2
763167    +          +      -0.010948485075 * GRP_MntFishProducts3
763168    +          +     0.00472964640535 * GRP_MntFishProducts4
763169    +          +     0.02165833203111 * GRP_MntGoldProds2
763170    +          +     0.00197757925658 * GRP_MntGoldProds3
763171    +          +    -0.00068547899434 * GRP_MntGoldProds4
763172    +          +      0.1194292184341 * GRP_MntMeatProducts2
763173    +          +     0.01684568280033 * GRP_MntMeatProducts3
763174    +          +    -0.05297956014628 * GRP_MntMeatProducts4
763175    +          +    -0.11059672251142 * GRP_MntWines2  +     -0.0539431379238 *
763176    +        GRP_MntWines3  +     0.05538795967941 * GRP_MntWines4
763177    +          +     0.08963126282705 * GRP_NumCatalogPurchases3
763178    +          +    -0.00118154367452 * GRP_NumCatalogPurchases4
763179    +          +     0.23032337382095 * GRP_NumDistPurchases2
763180    +          +    -0.00108441464763 * GRP_NumDistPurchases3
763181    +          +    -0.04458982753158 * GRP_NumDistPurchases4
763182    +          +    -0.01380938735738 * GRP_NumWebPurchases2
763183    +          +    -0.01095215304735 * GRP_NumWebPurchases3
763184    +          +      0.0023394125329 * GRP_NumWebPurchases4
763185    +          +     0.05201697043713 * GRP_RFMstat2  +     0.00763917877705 *
763186    +        GRP_RFMstat3  +    -0.01926793167425 * GRP_RFMstat4
763187    +          +      -0.050495884949 * GRP_RMntFrq2  +    -0.03144438155835 *
763188    +        GRP_RMntFrq3  +     0.06453623203831 * GRP_RMntFrq4
763189    +          +    -0.15989883925465 * GRP_Recency2  +    -0.04220884971315 *
763190    +        GRP_Recency3  +     0.04819510617026 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0860559154003 * GRP_AcceptedCmp52 + -0.19758814669075 * 
GRP_Frq2 + -0.02279576157687 * GRP_Frq3 + 0.07251746297433 * GRP_Frq4 + -0.09591494883083 * 
GRP_Income2 + -0.08058752115004 * GRP_Income3 + 0.08588060203033 * GRP_Income4 + 
0.05055584750276 * GRP_Mnt2 + 0.02545024725796 * GRP_Mnt3 + -0.03224681694037 * GRP_Mnt4 + 
-0.06357865903392 * GRP_MntFishProducts2 + -0.010948485075 * GRP_MntFishProducts3 + 
0.00472964640535 * GRP_MntFishProducts4 + 0.02165833203111 * GRP_MntGoldProds2 + 
0.00197757925658 * GRP_MntGoldProds3 + -0.00068547899434 * GRP_MntGoldProds4 + 0.1194292184341 
* GRP_MntMeatProducts2 + 0.01684568280033 * GRP_MntMeatProducts3 + -0.05297956014628 * 
GRP_MntMeatProducts4 + -0.11059672251142 * GRP_MntWines2 + -0.0539431379238 * GRP_MntWines3 + 
0.05538795967941 * GRP_MntWines4 + 0.08963126282705 * GRP_NumCatalogPurchases3 + 
-0.00118154367452 * GRP_NumCatalogPurchases4 + 0.23032337382095 * GRP_NumDistPurchases2 + 
-0.00108441464763 * GRP_NumDistPurchases3 + -0.04458982753158 * GRP_NumDistPurchases4 + 
-0.01380938735738 * GRP_NumWebPurchases2 + -0.01095215304735 * GRP_NumWebPurchases3 + 
0.0023394125329 * GRP_NumWebPurchases4 + 0.05201697043713 * GRP_RFMstat2 + 0.00763917877705 * 
GRP_RFMstat3 + -0.01926793167425 * GRP_RFMstat4 + -0.050495884949 * GRP_RMntFrq2 + 
-0.03144438155835 * GRP_RMntFrq3 + 0.06453623203831 * GRP_RMntFrq4 + -0.15989883925465 * 
GRP_Recency2 + -0.04220884971315 * GRP_Recency3 + 0.04819510617026 * GRP_Recency4 ;
763191    +   H11  =    -0.23141403821803 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.23141403821803 + H11 ;
763192    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
763193    +END;
MPRINT(EM_DIAGRAM):   END;
763194    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
763195    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
763196    +END;
MPRINT(EM_DIAGRAM):   END;
763197    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763198    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
763199    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763200    +
763201    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
763202    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
763203    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
763204    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
763205    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
763206    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763207    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
763208    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
763209    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
763210    +end;
MPRINT(EM_DIAGRAM):   end;
763211    +else do;
MPRINT(EM_DIAGRAM):   else do;
763212    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
763213    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
763214    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
763215    +   end;
MPRINT(EM_DIAGRAM):   end;
763216    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
763217    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
763218    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
763219    +   end;
MPRINT(EM_DIAGRAM):   end;
763220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763221    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
763222    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
763223    +   end;
MPRINT(EM_DIAGRAM):   end;
763224    +end;
MPRINT(EM_DIAGRAM):   end;
763225    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
763226    +   P_DepVar1  =    -12.3989198958755 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3989198958755 * H11 ;
763227    +   P_DepVar1  =    -4.61569089751973 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.61569089751973 + P_DepVar1 ;
763228    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
763229    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
763230    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
763231    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
763232    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
763233    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
763234    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
763235    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
763236    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
763237    +END;
MPRINT(EM_DIAGRAM):   END;
763238    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
763239    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
763240    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
763241    +END;
MPRINT(EM_DIAGRAM):   END;
763242    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
763243    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
763244    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
763245    +END;
MPRINT(EM_DIAGRAM):   END;
763246    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
763247    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
763248    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
763249    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
763250    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
763251    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
763252    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
763253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763254    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
763255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763256    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
763257    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
763258    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
763259    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
763260    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
763261    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
763262    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
763263    +END;
MPRINT(EM_DIAGRAM):   END;
763264    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
763265    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
763266    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
763267    +drop
763268    +H11
763269    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
763270    +* Renaming variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural5;
763271    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763272    +* Renaming Posterior variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural5;
763273    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763274    +drop Neural5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar1;
763275    +Neural5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar1 = P_DepVar1;
763276    +drop Neural5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar0;
763277    +Neural5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar0 = P_DepVar0;
763278    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763279    +* Renaming _WARN_ variable for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural5;
763280    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763281    +length Neural5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural5_WARN_ $4;
763282    +drop Neural5_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural5_WARN_;
763283    +Neural5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural5_WARN_ = _WARN_;
763284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763285    +* Ensmbl3: Scoring Code of model 4 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 4 of 9;
763286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763287    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763288    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
763289    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
763290    +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
763291    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
763292    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
763293    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
763294    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
763295    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
763296    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
763297    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
763298    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
763299    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
763300    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
763301    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
763302    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
763303    +LENGTH _WARN_ $4
763304    +      F_DepVar  $ 12
763305    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
763306    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
763307    +
763308    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
763309    +
763310    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
763311    +
763312    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
763313    +
763314    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
763315    +
763316    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
763317    +
763318    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
763319    +
763320    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
763321    +
763322    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
763323    +
763324    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
763325    +
763326    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
763327    +
763328    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
763329    +
763330    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
763331    +
763332    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
763333    +
763334    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
763335    +
763336    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
763337    +
763338    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
763339    +
763340    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
763341    +
763342    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
763343    +
763344    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
763345    +
763346    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
763347    +
763348    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
763349    +
763350    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
763351    +
763352    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
763353    +
763354    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
763355    +
763356    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
763357    +
763358    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
763359    +
763360    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
763361    +
763362    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
763363    +
763364    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
763365    +
763366    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
763367    +
763368    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
763369    +
763370    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
763371    +
763372    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
763373    +
763374    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
763375    +
763376    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
763377    +
763378    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
763379    +
763380    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
763381    +
763382    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
763383    +
763384    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
763385    +
763386    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
763387    +
763388    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
763389    +
763390    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
763391    +
763392    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
763393    +
763394    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
763395    +
763396    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
763397    +
763398    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
763399    +
763400    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
763401    +
763402    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
763403    +
763404    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
763405    +
763406    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
763407    +
763408    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
763409    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
763410    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
763411    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
763412    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763413    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763414    +end;
MPRINT(EM_DIAGRAM):   end;
763415    +else do;
MPRINT(EM_DIAGRAM):   else do;
763416    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763417    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
763418    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763419    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
763420    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
763421    +   end;
MPRINT(EM_DIAGRAM):   end;
763422    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763423    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
763424    +   end;
MPRINT(EM_DIAGRAM):   end;
763425    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763426    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
763427    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763428    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763429    +   end;
MPRINT(EM_DIAGRAM):   end;
763430    +end;
MPRINT(EM_DIAGRAM):   end;
763431    +
763432    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
763433    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
763434    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
763435    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
763436    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
763437    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
763438    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763439    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763440    +end;
MPRINT(EM_DIAGRAM):   end;
763441    +else do;
MPRINT(EM_DIAGRAM):   else do;
763442    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763443    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
763444    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763445    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
763446    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
763447    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
763448    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
763449    +   end;
MPRINT(EM_DIAGRAM):   end;
763450    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763451    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
763452    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
763453    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
763454    +   end;
MPRINT(EM_DIAGRAM):   end;
763455    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763456    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
763457    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
763458    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
763459    +   end;
MPRINT(EM_DIAGRAM):   end;
763460    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763461    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
763462    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
763463    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
763464    +   end;
MPRINT(EM_DIAGRAM):   end;
763465    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763466    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
763467    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
763468    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
763469    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763470    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763471    +   end;
MPRINT(EM_DIAGRAM):   end;
763472    +end;
MPRINT(EM_DIAGRAM):   end;
763473    +
763474    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
763475    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
763476    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
763477    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
763478    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
763479    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
763480    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763481    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763482    +end;
MPRINT(EM_DIAGRAM):   end;
763483    +else do;
MPRINT(EM_DIAGRAM):   else do;
763484    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763485    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
763486    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763487    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
763488    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
763489    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
763490    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
763491    +   end;
MPRINT(EM_DIAGRAM):   end;
763492    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763493    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
763494    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
763495    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
763496    +   end;
MPRINT(EM_DIAGRAM):   end;
763497    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763498    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
763499    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
763500    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
763501    +   end;
MPRINT(EM_DIAGRAM):   end;
763502    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763503    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
763504    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
763505    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
763506    +   end;
MPRINT(EM_DIAGRAM):   end;
763507    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763508    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
763509    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
763510    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
763511    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763512    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763513    +   end;
MPRINT(EM_DIAGRAM):   end;
763514    +end;
MPRINT(EM_DIAGRAM):   end;
763515    +
763516    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
763517    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
763518    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
763519    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
763520    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
763521    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
763522    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763523    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763524    +end;
MPRINT(EM_DIAGRAM):   end;
763525    +else do;
MPRINT(EM_DIAGRAM):   else do;
763526    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763527    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
763528    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763529    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763530    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
763531    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
763532    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
763533    +   end;
MPRINT(EM_DIAGRAM):   end;
763534    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763535    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
763536    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
763537    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
763538    +   end;
MPRINT(EM_DIAGRAM):   end;
763539    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763540    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
763541    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
763542    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
763543    +   end;
MPRINT(EM_DIAGRAM):   end;
763544    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763545    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
763546    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
763547    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
763548    +   end;
MPRINT(EM_DIAGRAM):   end;
763549    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763550    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
763551    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
763552    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
763553    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763554    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763555    +   end;
MPRINT(EM_DIAGRAM):   end;
763556    +end;
MPRINT(EM_DIAGRAM):   end;
763557    +
763558    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
763559    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
763560    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
763561    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
763562    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
763563    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
763564    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763565    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763566    +end;
MPRINT(EM_DIAGRAM):   end;
763567    +else do;
MPRINT(EM_DIAGRAM):   else do;
763568    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763569    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
763570    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763571    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763572    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
763573    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
763574    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
763575    +   end;
MPRINT(EM_DIAGRAM):   end;
763576    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763577    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
763578    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
763579    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
763580    +   end;
MPRINT(EM_DIAGRAM):   end;
763581    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763582    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
763583    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
763584    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
763585    +   end;
MPRINT(EM_DIAGRAM):   end;
763586    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763587    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
763588    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
763589    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
763590    +   end;
MPRINT(EM_DIAGRAM):   end;
763591    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763592    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
763593    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
763594    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
763595    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763596    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763597    +   end;
MPRINT(EM_DIAGRAM):   end;
763598    +end;
MPRINT(EM_DIAGRAM):   end;
763599    +
763600    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
763601    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
763602    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
763603    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
763604    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
763605    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
763606    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763607    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763608    +end;
MPRINT(EM_DIAGRAM):   end;
763609    +else do;
MPRINT(EM_DIAGRAM):   else do;
763610    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763611    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
763612    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763613    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763614    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
763615    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
763616    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
763617    +   end;
MPRINT(EM_DIAGRAM):   end;
763618    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763619    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
763620    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
763621    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
763622    +   end;
MPRINT(EM_DIAGRAM):   end;
763623    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763624    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
763625    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
763626    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
763627    +   end;
MPRINT(EM_DIAGRAM):   end;
763628    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763629    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
763630    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
763631    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
763632    +   end;
MPRINT(EM_DIAGRAM):   end;
763633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763634    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
763635    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
763636    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
763637    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763638    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763639    +   end;
MPRINT(EM_DIAGRAM):   end;
763640    +end;
MPRINT(EM_DIAGRAM):   end;
763641    +
763642    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
763643    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
763644    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
763645    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
763646    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
763647    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
763648    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763649    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763650    +end;
MPRINT(EM_DIAGRAM):   end;
763651    +else do;
MPRINT(EM_DIAGRAM):   else do;
763652    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763653    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
763654    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763655    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763656    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
763657    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
763658    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
763659    +   end;
MPRINT(EM_DIAGRAM):   end;
763660    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763661    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
763662    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
763663    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
763664    +   end;
MPRINT(EM_DIAGRAM):   end;
763665    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763666    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
763667    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
763668    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
763669    +   end;
MPRINT(EM_DIAGRAM):   end;
763670    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763671    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
763672    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
763673    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
763674    +   end;
MPRINT(EM_DIAGRAM):   end;
763675    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763676    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
763677    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
763678    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
763679    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763680    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763681    +   end;
MPRINT(EM_DIAGRAM):   end;
763682    +end;
MPRINT(EM_DIAGRAM):   end;
763683    +
763684    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
763685    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
763686    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
763687    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
763688    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
763689    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
763690    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763691    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763692    +end;
MPRINT(EM_DIAGRAM):   end;
763693    +else do;
MPRINT(EM_DIAGRAM):   else do;
763694    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763695    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
763696    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763697    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763698    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
763699    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
763700    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
763701    +   end;
MPRINT(EM_DIAGRAM):   end;
763702    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763703    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
763704    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
763705    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
763706    +   end;
MPRINT(EM_DIAGRAM):   end;
763707    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763708    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
763709    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
763710    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
763711    +   end;
MPRINT(EM_DIAGRAM):   end;
763712    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763713    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
763714    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
763715    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
763716    +   end;
MPRINT(EM_DIAGRAM):   end;
763717    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763718    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
763719    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
763720    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
763721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763723    +   end;
MPRINT(EM_DIAGRAM):   end;
763724    +end;
MPRINT(EM_DIAGRAM):   end;
763725    +
763726    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
763727    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
763728    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
763729    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
763730    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
763731    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763732    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763733    +end;
MPRINT(EM_DIAGRAM):   end;
763734    +else do;
MPRINT(EM_DIAGRAM):   else do;
763735    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763736    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
763737    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763738    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763739    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
763740    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
763741    +   end;
MPRINT(EM_DIAGRAM):   end;
763742    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763743    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
763744    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
763745    +   end;
MPRINT(EM_DIAGRAM):   end;
763746    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763747    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
763748    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
763749    +   end;
MPRINT(EM_DIAGRAM):   end;
763750    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763751    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
763752    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
763753    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763754    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763755    +   end;
MPRINT(EM_DIAGRAM):   end;
763756    +end;
MPRINT(EM_DIAGRAM):   end;
763757    +
763758    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
763759    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
763760    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
763761    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
763762    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
763763    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
763764    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763765    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763766    +end;
MPRINT(EM_DIAGRAM):   end;
763767    +else do;
MPRINT(EM_DIAGRAM):   else do;
763768    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763769    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
763770    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763771    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
763772    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
763773    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
763774    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
763775    +   end;
MPRINT(EM_DIAGRAM):   end;
763776    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763777    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
763778    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
763779    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
763780    +   end;
MPRINT(EM_DIAGRAM):   end;
763781    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763782    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
763783    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
763784    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
763785    +   end;
MPRINT(EM_DIAGRAM):   end;
763786    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763787    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
763788    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
763789    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
763790    +   end;
MPRINT(EM_DIAGRAM):   end;
763791    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763792    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
763793    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
763794    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
763795    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763796    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763797    +   end;
MPRINT(EM_DIAGRAM):   end;
763798    +end;
MPRINT(EM_DIAGRAM):   end;
763799    +
763800    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
763801    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
763802    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
763803    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
763804    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
763805    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
763806    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763807    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763808    +end;
MPRINT(EM_DIAGRAM):   end;
763809    +else do;
MPRINT(EM_DIAGRAM):   else do;
763810    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763811    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
763812    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763813    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763814    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
763815    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
763816    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
763817    +   end;
MPRINT(EM_DIAGRAM):   end;
763818    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763819    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
763820    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
763821    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
763822    +   end;
MPRINT(EM_DIAGRAM):   end;
763823    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763824    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
763825    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
763826    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
763827    +   end;
MPRINT(EM_DIAGRAM):   end;
763828    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763829    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
763830    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
763831    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
763832    +   end;
MPRINT(EM_DIAGRAM):   end;
763833    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763834    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
763835    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
763836    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
763837    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763838    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763839    +   end;
MPRINT(EM_DIAGRAM):   end;
763840    +end;
MPRINT(EM_DIAGRAM):   end;
763841    +
763842    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
763843    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
763844    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
763845    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
763846    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
763847    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
763848    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763849    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763850    +end;
MPRINT(EM_DIAGRAM):   end;
763851    +else do;
MPRINT(EM_DIAGRAM):   else do;
763852    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763853    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
763854    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763855    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
763856    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
763857    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
763858    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
763859    +   end;
MPRINT(EM_DIAGRAM):   end;
763860    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763861    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
763862    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
763863    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
763864    +   end;
MPRINT(EM_DIAGRAM):   end;
763865    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763866    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
763867    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
763868    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
763869    +   end;
MPRINT(EM_DIAGRAM):   end;
763870    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763871    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
763872    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
763873    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
763874    +   end;
MPRINT(EM_DIAGRAM):   end;
763875    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763876    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
763877    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
763878    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
763879    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763880    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763881    +   end;
MPRINT(EM_DIAGRAM):   end;
763882    +end;
MPRINT(EM_DIAGRAM):   end;
763883    +
763884    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
763885    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
763886    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
763887    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
763888    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
763889    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
763890    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763891    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763892    +end;
MPRINT(EM_DIAGRAM):   end;
763893    +else do;
MPRINT(EM_DIAGRAM):   else do;
763894    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763895    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
763896    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763897    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
763898    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
763899    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
763900    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
763901    +   end;
MPRINT(EM_DIAGRAM):   end;
763902    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
763903    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
763904    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
763905    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
763906    +   end;
MPRINT(EM_DIAGRAM):   end;
763907    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763908    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
763909    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
763910    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
763911    +   end;
MPRINT(EM_DIAGRAM):   end;
763912    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763913    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
763914    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
763915    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
763916    +   end;
MPRINT(EM_DIAGRAM):   end;
763917    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763918    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
763919    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
763920    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
763921    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763922    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763923    +   end;
MPRINT(EM_DIAGRAM):   end;
763924    +end;
MPRINT(EM_DIAGRAM):   end;
763925    +
763926    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
763927    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
763928    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
763929    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
763930    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
763931    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
763932    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
763933    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763934    +end;
MPRINT(EM_DIAGRAM):   end;
763935    +else do;
MPRINT(EM_DIAGRAM):   else do;
763936    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
763937    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
763938    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
763939    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
763940    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
763941    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
763942    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
763943    +   end;
MPRINT(EM_DIAGRAM):   end;
763944    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
763945    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
763946    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
763947    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
763948    +   end;
MPRINT(EM_DIAGRAM):   end;
763949    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
763950    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
763951    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
763952    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
763953    +   end;
MPRINT(EM_DIAGRAM):   end;
763954    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
763955    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
763956    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
763957    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
763958    +   end;
MPRINT(EM_DIAGRAM):   end;
763959    +   else do;
MPRINT(EM_DIAGRAM):   else do;
763960    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
763961    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
763962    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
763963    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
763964    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
763965    +   end;
MPRINT(EM_DIAGRAM):   end;
763966    +end;
MPRINT(EM_DIAGRAM):   end;
763967    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763968    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
763969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763971    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
763972    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
763973    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
763974    +   H11  =    -0.29083667179588 * GRP_AcceptedCmp52  +     0.25381514879511 *
763975    +        GRP_Frq2  +     0.24495490182169 * GRP_Frq3  +     0.08462614656895 *
763976    +        GRP_Frq4  +     0.42321493993551 * GRP_Income2
763977    +          +     0.73169928117081 * GRP_Income3  +    -0.05544320914832 *
763978    +        GRP_Income4  +    -0.24718669893416 * GRP_Mnt2
763979    +          +    -0.03207129144847 * GRP_Mnt3  +    -0.25388605829716 * GRP_Mnt4
763980    +          +     0.47035397187556 * GRP_MntFishProducts2
763981    +          +    -0.08037080105655 * GRP_MntFishProducts3
763982    +          +    -0.02398618871954 * GRP_MntFishProducts4
763983    +          +    -0.07937868050266 * GRP_MntGoldProds2
763984    +          +     0.05027448018004 * GRP_MntGoldProds3
763985    +          +     0.07901442033148 * GRP_MntGoldProds4
763986    +          +    -0.33936723350812 * GRP_MntMeatProducts2
763987    +          +    -0.04484529724292 * GRP_MntMeatProducts3
763988    +          +     -0.0415506520001 * GRP_MntMeatProducts4
763989    +          +     0.03804983893299 * GRP_MntWines2  +    -0.04512794010485 *
763990    +        GRP_MntWines3  +     0.13644345988766 * GRP_MntWines4
763991    +          +    -0.14757249557063 * GRP_NumCatalogPurchases3
763992    +          +     0.15425218359438 * GRP_NumCatalogPurchases4
763993    +          +    -0.29017371671497 * GRP_NumDistPurchases2
763994    +          +    -0.28697691933928 * GRP_NumDistPurchases3
763995    +          +    -0.14589186171246 * GRP_NumDistPurchases4
763996    +          +    -0.04161944892997 * GRP_NumWebPurchases2
763997    +          +     0.25846214028528 * GRP_NumWebPurchases3
763998    +          +    -0.05415601948083 * GRP_NumWebPurchases4
763999    +          +    -0.20357646739267 * GRP_RFMstat2  +    -0.63274902898209 *
764000    +        GRP_RFMstat3  +    -0.42178758375646 * GRP_RFMstat4
764001    +          +    -0.25050399122469 * GRP_RMntFrq2  +    -0.19112538807366 *
764002    +        GRP_RMntFrq3  +     0.09935328688472 * GRP_RMntFrq4
764003    +          +     0.87740211815385 * GRP_Recency2  +     0.02731074731084 *
764004    +        GRP_Recency3  +    -0.25335916751578 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.29083667179588 * GRP_AcceptedCmp52 + 0.25381514879511 * 
GRP_Frq2 + 0.24495490182169 * GRP_Frq3 + 0.08462614656895 * GRP_Frq4 + 0.42321493993551 * 
GRP_Income2 + 0.73169928117081 * GRP_Income3 + -0.05544320914832 * GRP_Income4 + 
-0.24718669893416 * GRP_Mnt2 + -0.03207129144847 * GRP_Mnt3 + -0.25388605829716 * GRP_Mnt4 + 
0.47035397187556 * GRP_MntFishProducts2 + -0.08037080105655 * GRP_MntFishProducts3 + 
-0.02398618871954 * GRP_MntFishProducts4 + -0.07937868050266 * GRP_MntGoldProds2 + 
0.05027448018004 * GRP_MntGoldProds3 + 0.07901442033148 * GRP_MntGoldProds4 + 
-0.33936723350812 * GRP_MntMeatProducts2 + -0.04484529724292 * GRP_MntMeatProducts3 + 
-0.0415506520001 * GRP_MntMeatProducts4 + 0.03804983893299 * GRP_MntWines2 + -0.04512794010485 
* GRP_MntWines3 + 0.13644345988766 * GRP_MntWines4 + -0.14757249557063 * 
GRP_NumCatalogPurchases3 + 0.15425218359438 * GRP_NumCatalogPurchases4 + -0.29017371671497 * 
GRP_NumDistPurchases2 + -0.28697691933928 * GRP_NumDistPurchases3 + -0.14589186171246 * 
GRP_NumDistPurchases4 + -0.04161944892997 * GRP_NumWebPurchases2 + 0.25846214028528 * 
GRP_NumWebPurchases3 + -0.05415601948083 * GRP_NumWebPurchases4 + -0.20357646739267 * 
GRP_RFMstat2 + -0.63274902898209 * GRP_RFMstat3 + -0.42178758375646 * GRP_RFMstat4 + 
-0.25050399122469 * GRP_RMntFrq2 + -0.19112538807366 * GRP_RMntFrq3 + 0.09935328688472 * 
GRP_RMntFrq4 + 0.87740211815385 * GRP_Recency2 + 0.02731074731084 * GRP_Recency3 + 
-0.25335916751578 * GRP_Recency4 ;
764005    +   H12  =    -0.77250325436995 * GRP_AcceptedCmp52  +     0.15992276693905 *
764006    +        GRP_Frq2  +     0.03865511556705 * GRP_Frq3  +    -0.20632943014927 *
764007    +        GRP_Frq4  +     0.33135316311494 * GRP_Income2
764008    +          +     0.29584600709267 * GRP_Income3  +    -0.42334990488598 *
764009    +        GRP_Income4  +     0.15943867910214 * GRP_Mnt2
764010    +          +     0.17793824624027 * GRP_Mnt3  +     0.02858905887957 * GRP_Mnt4
764011    +          +     0.01579175161385 * GRP_MntFishProducts2
764012    +          +     0.17282640703406 * GRP_MntFishProducts3
764013    +          +     0.01086096638671 * GRP_MntFishProducts4
764014    +          +    -0.18985444898682 * GRP_MntGoldProds2
764015    +          +     0.21160891964242 * GRP_MntGoldProds3
764016    +          +     0.19583511822565 * GRP_MntGoldProds4
764017    +          +     -0.3456806985278 * GRP_MntMeatProducts2
764018    +          +    -0.22537760201843 * GRP_MntMeatProducts3
764019    +          +     0.25001144882227 * GRP_MntMeatProducts4
764020    +          +     0.50922766710996 * GRP_MntWines2  +     0.39373033292339 *
764021    +        GRP_MntWines3  +     -0.0631684381291 * GRP_MntWines4
764022    +          +    -0.44406418897674 * GRP_NumCatalogPurchases3
764023    +          +     0.04067400721697 * GRP_NumCatalogPurchases4
764024    +          +    -0.31103378362217 * GRP_NumDistPurchases2
764025    +          +     -0.2871376672979 * GRP_NumDistPurchases3
764026    +          +    -0.17746737696028 * GRP_NumDistPurchases4
764027    +          +     0.10647221525263 * GRP_NumWebPurchases2
764028    +          +    -0.41586902546761 * GRP_NumWebPurchases3
764029    +          +     0.04660436676773 * GRP_NumWebPurchases4
764030    +          +     0.09917764215284 * GRP_RFMstat2  +       0.119759461983 *
764031    +        GRP_RFMstat3  +     0.21805558451713 * GRP_RFMstat4
764032    +          +     0.22815675287087 * GRP_RMntFrq2  +     0.19732571474618 *
764033    +        GRP_RMntFrq3  +     0.07767050452748 * GRP_RMntFrq4
764034    +          +     0.46140797631862 * GRP_Recency2  +     0.17265446560815 *
764035    +        GRP_Recency3  +    -0.13764246969761 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.77250325436995 * GRP_AcceptedCmp52 + 0.15992276693905 * 
GRP_Frq2 + 0.03865511556705 * GRP_Frq3 + -0.20632943014927 * GRP_Frq4 + 0.33135316311494 * 
GRP_Income2 + 0.29584600709267 * GRP_Income3 + -0.42334990488598 * GRP_Income4 + 
0.15943867910214 * GRP_Mnt2 + 0.17793824624027 * GRP_Mnt3 + 0.02858905887957 * GRP_Mnt4 + 
0.01579175161385 * GRP_MntFishProducts2 + 0.17282640703406 * GRP_MntFishProducts3 + 
0.01086096638671 * GRP_MntFishProducts4 + -0.18985444898682 * GRP_MntGoldProds2 + 
0.21160891964242 * GRP_MntGoldProds3 + 0.19583511822565 * GRP_MntGoldProds4 + -0.3456806985278 
* GRP_MntMeatProducts2 + -0.22537760201843 * GRP_MntMeatProducts3 + 0.25001144882227 * 
GRP_MntMeatProducts4 + 0.50922766710996 * GRP_MntWines2 + 0.39373033292339 * GRP_MntWines3 + 
-0.0631684381291 * GRP_MntWines4 + -0.44406418897674 * GRP_NumCatalogPurchases3 + 
0.04067400721697 * GRP_NumCatalogPurchases4 + -0.31103378362217 * GRP_NumDistPurchases2 + 
-0.2871376672979 * GRP_NumDistPurchases3 + -0.17746737696028 * GRP_NumDistPurchases4 + 
0.10647221525263 * GRP_NumWebPurchases2 + -0.41586902546761 * GRP_NumWebPurchases3 + 
0.04660436676773 * GRP_NumWebPurchases4 + 0.09917764215284 * GRP_RFMstat2 + 0.119759461983 * 
GRP_RFMstat3 + 0.21805558451713 * GRP_RFMstat4 + 0.22815675287087 * GRP_RMntFrq2 + 
0.19732571474618 * GRP_RMntFrq3 + 0.07767050452748 * GRP_RMntFrq4 + 0.46140797631862 * 
GRP_Recency2 + 0.17265446560815 * GRP_Recency3 + -0.13764246969761 * GRP_Recency4 ;
764036    +   H13  =     0.47605838497596 * GRP_AcceptedCmp52  +    -0.24247551747681 *
764037    +        GRP_Frq2  +    -0.12921683287602 * GRP_Frq3  +     0.09997146415468 *
764038    +        GRP_Frq4  +    -0.33897508851515 * GRP_Income2
764039    +          +     0.02013725470644 * GRP_Income3  +     0.62243331624454 *
764040    +        GRP_Income4  +    -0.07907139789023 * GRP_Mnt2
764041    +          +     0.02855056853431 * GRP_Mnt3  +      0.0571426807888 * GRP_Mnt4
764042    +          +    -0.22089400263658 * GRP_MntFishProducts2
764043    +          +     0.03415513165136 * GRP_MntFishProducts3
764044    +          +     0.11107459135953 * GRP_MntFishProducts4
764045    +          +      0.1200436606288 * GRP_MntGoldProds2
764046    +          +      0.1845414926618 * GRP_MntGoldProds3
764047    +          +     0.05336685345848 * GRP_MntGoldProds4
764048    +          +     0.17651888017403 * GRP_MntMeatProducts2
764049    +          +    -0.19581823794868 * GRP_MntMeatProducts3
764050    +          +    -0.32374735747971 * GRP_MntMeatProducts4
764051    +          +    -0.29496513381505 * GRP_MntWines2  +     -0.1846298613936 *
764052    +        GRP_MntWines3  +     0.25702620460325 * GRP_MntWines4
764053    +          +     0.52809435848016 * GRP_NumCatalogPurchases3
764054    +          +     0.22555872046312 * GRP_NumCatalogPurchases4
764055    +          +      0.5816615934847 * GRP_NumDistPurchases2
764056    +          +    -0.05454598802009 * GRP_NumDistPurchases3
764057    +          +     0.10061932097301 * GRP_NumDistPurchases4
764058    +          +     0.10350223951336 * GRP_NumWebPurchases2
764059    +          +    -0.10094008849705 * GRP_NumWebPurchases3
764060    +          +    -0.28943674138057 * GRP_NumWebPurchases4
764061    +          +     0.18167045555206 * GRP_RFMstat2  +     -0.2440987298479 *
764062    +        GRP_RFMstat3  +    -0.21852350431632 * GRP_RFMstat4
764063    +          +       0.048115710925 * GRP_RMntFrq2  +    -0.19258956732647 *
764064    +        GRP_RMntFrq3  +     0.21827295876984 * GRP_RMntFrq4
764065    +          +    -0.86473147264012 * GRP_Recency2  +    -0.38058925082706 *
764066    +        GRP_Recency3  +     0.45619624848066 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.47605838497596 * GRP_AcceptedCmp52 + -0.24247551747681 * 
GRP_Frq2 + -0.12921683287602 * GRP_Frq3 + 0.09997146415468 * GRP_Frq4 + -0.33897508851515 * 
GRP_Income2 + 0.02013725470644 * GRP_Income3 + 0.62243331624454 * GRP_Income4 + 
-0.07907139789023 * GRP_Mnt2 + 0.02855056853431 * GRP_Mnt3 + 0.0571426807888 * GRP_Mnt4 + 
-0.22089400263658 * GRP_MntFishProducts2 + 0.03415513165136 * GRP_MntFishProducts3 + 
0.11107459135953 * GRP_MntFishProducts4 + 0.1200436606288 * GRP_MntGoldProds2 + 
0.1845414926618 * GRP_MntGoldProds3 + 0.05336685345848 * GRP_MntGoldProds4 + 0.17651888017403 
* GRP_MntMeatProducts2 + -0.19581823794868 * GRP_MntMeatProducts3 + -0.32374735747971 * 
GRP_MntMeatProducts4 + -0.29496513381505 * GRP_MntWines2 + -0.1846298613936 * GRP_MntWines3 + 
0.25702620460325 * GRP_MntWines4 + 0.52809435848016 * GRP_NumCatalogPurchases3 + 
0.22555872046312 * GRP_NumCatalogPurchases4 + 0.5816615934847 * GRP_NumDistPurchases2 + 
-0.05454598802009 * GRP_NumDistPurchases3 + 0.10061932097301 * GRP_NumDistPurchases4 + 
0.10350223951336 * GRP_NumWebPurchases2 + -0.10094008849705 * GRP_NumWebPurchases3 + 
-0.28943674138057 * GRP_NumWebPurchases4 + 0.18167045555206 * GRP_RFMstat2 + -0.2440987298479 
* GRP_RFMstat3 + -0.21852350431632 * GRP_RFMstat4 + 0.048115710925 * GRP_RMntFrq2 + 
-0.19258956732647 * GRP_RMntFrq3 + 0.21827295876984 * GRP_RMntFrq4 + -0.86473147264012 * 
GRP_Recency2 + -0.38058925082706 * GRP_Recency3 + 0.45619624848066 * GRP_Recency4 ;
764067    +   H14  =    -0.20005149248892 * GRP_AcceptedCmp52  +      0.1416453143658 *
764068    +        GRP_Frq2  +     0.16615391028307 * GRP_Frq3  +     0.24067740846414 *
764069    +        GRP_Frq4  +     0.44252646861104 * GRP_Income2
764070    +          +     0.38184638238718 * GRP_Income3  +    -0.31867045455591 *
764071    +        GRP_Income4  +    -0.04762919001724 * GRP_Mnt2
764072    +          +    -0.00736030333746 * GRP_Mnt3  +    -0.11335269869741 * GRP_Mnt4
764073    +          +     0.11397099518618 * GRP_MntFishProducts2
764074    +          +     0.02038390970846 * GRP_MntFishProducts3
764075    +          +     0.04901565572006 * GRP_MntFishProducts4
764076    +          +    -0.26210451979183 * GRP_MntGoldProds2
764077    +          +    -0.01291376301388 * GRP_MntGoldProds3
764078    +          +    -0.06291397841763 * GRP_MntGoldProds4
764079    +          +    -0.28346673842937 * GRP_MntMeatProducts2
764080    +          +    -0.22838601011576 * GRP_MntMeatProducts3
764081    +          +    -0.35737823232225 * GRP_MntMeatProducts4
764082    +          +     0.38985456021102 * GRP_MntWines2  +     0.10061935074263 *
764083    +        GRP_MntWines3  +    -0.49094420474651 * GRP_MntWines4
764084    +          +    -0.30332072511255 * GRP_NumCatalogPurchases3
764085    +          +    -0.13066216416331 * GRP_NumCatalogPurchases4
764086    +          +    -0.17811481527528 * GRP_NumDistPurchases2
764087    +          +     0.07507990088147 * GRP_NumDistPurchases3
764088    +          +    -0.01562644766888 * GRP_NumDistPurchases4
764089    +          +    -0.28058368395312 * GRP_NumWebPurchases2
764090    +          +     0.06601211704617 * GRP_NumWebPurchases3
764091    +          +    -0.11209964154167 * GRP_NumWebPurchases4
764092    +          +    -0.24339392229609 * GRP_RFMstat2  +     0.36921551965975 *
764093    +        GRP_RFMstat3  +     0.16127058585623 * GRP_RFMstat4
764094    +          +     0.01095276184609 * GRP_RMntFrq2  +    -0.21651603975876 *
764095    +        GRP_RMntFrq3  +    -0.44785793778994 * GRP_RMntFrq4
764096    +          +     0.37654423654871 * GRP_Recency2  +     0.21584324326396 *
764097    +        GRP_Recency3  +     0.06923981469933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.20005149248892 * GRP_AcceptedCmp52 + 0.1416453143658 * GRP_Frq2 
+ 0.16615391028307 * GRP_Frq3 + 0.24067740846414 * GRP_Frq4 + 0.44252646861104 * GRP_Income2 + 
0.38184638238718 * GRP_Income3 + -0.31867045455591 * GRP_Income4 + -0.04762919001724 * 
GRP_Mnt2 + -0.00736030333746 * GRP_Mnt3 + -0.11335269869741 * GRP_Mnt4 + 0.11397099518618 * 
GRP_MntFishProducts2 + 0.02038390970846 * GRP_MntFishProducts3 + 0.04901565572006 * 
GRP_MntFishProducts4 + -0.26210451979183 * GRP_MntGoldProds2 + -0.01291376301388 * 
GRP_MntGoldProds3 + -0.06291397841763 * GRP_MntGoldProds4 + -0.28346673842937 * 
GRP_MntMeatProducts2 + -0.22838601011576 * GRP_MntMeatProducts3 + -0.35737823232225 * 
GRP_MntMeatProducts4 + 0.38985456021102 * GRP_MntWines2 + 0.10061935074263 * GRP_MntWines3 + 
-0.49094420474651 * GRP_MntWines4 + -0.30332072511255 * GRP_NumCatalogPurchases3 + 
-0.13066216416331 * GRP_NumCatalogPurchases4 + -0.17811481527528 * GRP_NumDistPurchases2 + 
0.07507990088147 * GRP_NumDistPurchases3 + -0.01562644766888 * GRP_NumDistPurchases4 + 
-0.28058368395312 * GRP_NumWebPurchases2 + 0.06601211704617 * GRP_NumWebPurchases3 + 
-0.11209964154167 * GRP_NumWebPurchases4 + -0.24339392229609 * GRP_RFMstat2 + 0.36921551965975 
* GRP_RFMstat3 + 0.16127058585623 * GRP_RFMstat4 + 0.01095276184609 * GRP_RMntFrq2 + 
-0.21651603975876 * GRP_RMntFrq3 + -0.44785793778994 * GRP_RMntFrq4 + 0.37654423654871 * 
GRP_Recency2 + 0.21584324326396 * GRP_Recency3 + 0.06923981469933 * GRP_Recency4 ;
764098    +   H11  =    -0.90507468819856 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.90507468819856 + H11 ;
764099    +   H12  =    -0.58382573328779 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58382573328779 + H12 ;
764100    +   H13  =     0.23395947148718 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.23395947148718 + H13 ;
764101    +   H14  =     0.78095059574137 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.78095059574137 + H14 ;
764102    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
764103    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
764104    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
764105    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
764106    +END;
MPRINT(EM_DIAGRAM):   END;
764107    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764108    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
764109    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
764110    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
764111    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
764112    +END;
MPRINT(EM_DIAGRAM):   END;
764113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
764114    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
764115    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
764116    +
764117    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
764118    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
764119    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
764120    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
764121    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
764122    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764123    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
764124    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
764125    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
764126    +end;
MPRINT(EM_DIAGRAM):   end;
764127    +else do;
MPRINT(EM_DIAGRAM):   else do;
764128    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
764129    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
764130    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
764131    +   end;
MPRINT(EM_DIAGRAM):   end;
764132    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
764133    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
764134    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
764135    +   end;
MPRINT(EM_DIAGRAM):   end;
764136    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764137    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
764138    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
764139    +   end;
MPRINT(EM_DIAGRAM):   end;
764140    +end;
MPRINT(EM_DIAGRAM):   end;
764141    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
764142    +   P_DepVar1  =     1.27226040722218 * H11  +     1.29072977611751 * H12
764143    +          +    -1.13529049624055 * H13  +     1.42363080191112 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.27226040722218 * H11 + 1.29072977611751 * H12 + 
-1.13529049624055 * H13 + 1.42363080191112 * H14 ;
764144    +   P_DepVar1  =    -1.11430363057808 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11430363057808 + P_DepVar1 ;
764145    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
764146    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
764147    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
764148    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
764149    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
764150    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
764151    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
764152    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
764153    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
764154    +END;
MPRINT(EM_DIAGRAM):   END;
764155    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764156    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
764157    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
764158    +END;
MPRINT(EM_DIAGRAM):   END;
764159    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
764160    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
764161    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
764162    +END;
MPRINT(EM_DIAGRAM):   END;
764163    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
764164    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
764165    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
764166    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
764167    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
764168    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
764169    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
764170    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
764171    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
764172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
764173    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
764174    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
764175    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
764176    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
764177    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
764178    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
764179    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
764180    +END;
MPRINT(EM_DIAGRAM):   END;
764181    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
764182    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
764183    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
764184    +drop
764185    +H11
764186    +H12
764187    +H13
764188    +H14
764189    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
764190    +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
764191    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764192    +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
764193    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764194    +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
764195    +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
764196    +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
764197    +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
764198    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764199    +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
764200    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764201    +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
764202    +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
764203    +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
764204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764205    +* Ensmbl3: Scoring Code of model 5 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 5 of 9;
764206    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764207    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764208    +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
764209    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
764210    +* NODE: Tree3;
MPRINT(EM_DIAGRAM):   * NODE: Tree3;
764211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764212    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
764213    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
764214    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
764215    +
764216    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
764217    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
764218    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
764219    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
764220    +
764221    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
764222    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
764223    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
764224    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
764225    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
764226    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
764227    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
764228    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
764229    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
764230    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
764231    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
764232    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
764233    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
764234    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
764235    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
764236    +
764237    +
764238    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
764239    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
764240    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
764241    +
764242    +
764243    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
764244    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
764245    +
764246    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
764247    +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
764248    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764249    +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
764250    +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
764251    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764252    +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
764253    +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
764254    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764255    +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
764256    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
764257    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
764258    +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
764259    +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
764260    +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
764261    +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
764262    +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
764263    +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
764264    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
764265    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
764266    +      END;
MPRINT(EM_DIAGRAM):   END;
764267    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764268    +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
764269    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
764270    +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
764271    +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
764272    +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
764273    +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
764274    +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
764275    +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
764276    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
764277    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
764278    +      END;
MPRINT(EM_DIAGRAM):   END;
764279    +    END;
MPRINT(EM_DIAGRAM):   END;
764280    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764281    +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
764282    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764283    +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
764284    +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
764285    +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
764286    +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
764287    +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
764288    +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
764289    +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
764290    +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
764291    +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
764292    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
764293    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
764294    +      END;
MPRINT(EM_DIAGRAM):   END;
764295    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764296    +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
764297    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764298    +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
764299    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
764300    +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
764301    +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
764302    +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
764303    +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
764304    +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
764305    +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
764306    +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
764307    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
764308    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
764309    +        END;
MPRINT(EM_DIAGRAM):   END;
764310    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764311    +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
764312    +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
764313    +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
764314    +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
764315    +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
764316    +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
764317    +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
764318    +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
764319    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
764320    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
764321    +        END;
MPRINT(EM_DIAGRAM):   END;
764322    +      END;
MPRINT(EM_DIAGRAM):   END;
764323    +    END;
MPRINT(EM_DIAGRAM):   END;
764324    +  END;
MPRINT(EM_DIAGRAM):   END;
764325    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764326    +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
764327    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764328    +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
764329    +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
764330    +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
764331    +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
764332    +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
764333    +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
764334    +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
764335    +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
764336    +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
764337    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
764338    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
764339    +    END;
MPRINT(EM_DIAGRAM):   END;
764340    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764341    +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
764342    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764343    +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
764344    +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
764345    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
764346    +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
764347    +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
764348    +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
764349    +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
764350    +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
764351    +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
764352    +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
764353    +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
764354    +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
764355    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
764356    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
764357    +        END;
MPRINT(EM_DIAGRAM):   END;
764358    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764359    +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
764360    +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
764361    +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
764362    +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
764363    +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
764364    +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
764365    +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
764366    +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
764367    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
764368    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
764369    +        END;
MPRINT(EM_DIAGRAM):   END;
764370    +      END;
MPRINT(EM_DIAGRAM):   END;
764371    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764372    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
764373    +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
764374    +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
764375    +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
764376    +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
764377    +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
764378    +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
764379    +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
764380    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
764381    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
764382    +      END;
MPRINT(EM_DIAGRAM):   END;
764383    +    END;
MPRINT(EM_DIAGRAM):   END;
764384    +  END;
MPRINT(EM_DIAGRAM):   END;
764385    +
764386    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
764387    +IF  F_DepVar  NE '0'
764388    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
764389    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
764390    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
764391    + END;
MPRINT(EM_DIAGRAM):   END;
764392    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
764393    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
764394    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
764395    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
764396    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
764397    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
764398    +       END;
MPRINT(EM_DIAGRAM):   END;
764399    + END;
MPRINT(EM_DIAGRAM):   END;
764400    +
764401    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
764402    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
764403    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
764404    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
764405    +* Renaming variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree3;
764406    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764407    +* Renaming Posterior variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree3;
764408    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764409    +drop Tree3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar1;
764410    +Tree3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar1 = P_DepVar1;
764411    +drop Tree3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar0;
764412    +Tree3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar0 = P_DepVar0;
764413    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764414    +* Renaming _WARN_ variable for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree3;
764415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764416    +length Tree3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree3_WARN_ $4;
764417    +drop Tree3_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree3_WARN_;
764418    +Tree3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree3_WARN_ = _WARN_;
764419    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764420    +* Ensmbl3: Scoring Code of model 6 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 6 of 9;
764421    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764423    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
764424    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
764425    +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
764426    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764427    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
764428    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
764429    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
764430    +
764431    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
764432    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
764433    +
764434    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
764435    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
764436    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
764437    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
764438    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
764439    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
764440    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
764441    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
764442    +
764443    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
764444    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
764445    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
764446    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
764447    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
764448    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764449    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
764450    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
764451    +end;
MPRINT(EM_DIAGRAM):   end;
764452    +else do;
MPRINT(EM_DIAGRAM):   else do;
764453    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
764454    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
764455    +   end;
MPRINT(EM_DIAGRAM):   end;
764456    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
764457    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
764458    +   end;
MPRINT(EM_DIAGRAM):   end;
764459    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764460    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
764461    +   end;
MPRINT(EM_DIAGRAM):   end;
764462    +end;
MPRINT(EM_DIAGRAM):   end;
764463    +
764464    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
764465    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
764466    +
764467    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
764468    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
764469    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
764470    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
764471    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764472    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764473    +end;
MPRINT(EM_DIAGRAM):   end;
764474    +else do;
MPRINT(EM_DIAGRAM):   else do;
764475    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764476    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
764477    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764478    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
764479    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
764480    +   end;
MPRINT(EM_DIAGRAM):   end;
764481    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
764482    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
764483    +   end;
MPRINT(EM_DIAGRAM):   end;
764484    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764485    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
764486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764488    +   end;
MPRINT(EM_DIAGRAM):   end;
764489    +end;
MPRINT(EM_DIAGRAM):   end;
764490    +
764491    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
764492    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
764493    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
764494    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
764495    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
764496    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
764497    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764498    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764499    +end;
MPRINT(EM_DIAGRAM):   end;
764500    +else do;
MPRINT(EM_DIAGRAM):   else do;
764501    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764502    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
764503    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764504    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
764505    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
764506    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
764507    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
764508    +   end;
MPRINT(EM_DIAGRAM):   end;
764509    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
764510    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
764511    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
764512    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
764513    +   end;
MPRINT(EM_DIAGRAM):   end;
764514    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764515    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
764516    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
764517    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
764518    +   end;
MPRINT(EM_DIAGRAM):   end;
764519    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764520    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
764521    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
764522    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
764523    +   end;
MPRINT(EM_DIAGRAM):   end;
764524    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764525    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
764526    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
764527    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
764528    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764529    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764530    +   end;
MPRINT(EM_DIAGRAM):   end;
764531    +end;
MPRINT(EM_DIAGRAM):   end;
764532    +
764533    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
764534    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
764535    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
764536    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
764537    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
764538    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
764539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764541    +end;
MPRINT(EM_DIAGRAM):   end;
764542    +else do;
MPRINT(EM_DIAGRAM):   else do;
764543    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764544    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
764545    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764546    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
764547    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
764548    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
764549    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
764550    +   end;
MPRINT(EM_DIAGRAM):   end;
764551    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764552    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
764553    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
764554    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
764555    +   end;
MPRINT(EM_DIAGRAM):   end;
764556    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
764557    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
764558    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
764559    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
764560    +   end;
MPRINT(EM_DIAGRAM):   end;
764561    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764562    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
764563    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
764564    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
764565    +   end;
MPRINT(EM_DIAGRAM):   end;
764566    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764567    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
764568    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
764569    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
764570    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764571    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764572    +   end;
MPRINT(EM_DIAGRAM):   end;
764573    +end;
MPRINT(EM_DIAGRAM):   end;
764574    +
764575    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
764576    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
764577    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
764578    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
764579    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
764580    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
764581    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764582    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764583    +end;
MPRINT(EM_DIAGRAM):   end;
764584    +else do;
MPRINT(EM_DIAGRAM):   else do;
764585    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764586    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
764587    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764588    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
764589    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
764590    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
764591    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
764592    +   end;
MPRINT(EM_DIAGRAM):   end;
764593    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
764594    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
764595    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
764596    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
764597    +   end;
MPRINT(EM_DIAGRAM):   end;
764598    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764599    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
764600    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
764601    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
764602    +   end;
MPRINT(EM_DIAGRAM):   end;
764603    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764604    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
764605    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
764606    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
764607    +   end;
MPRINT(EM_DIAGRAM):   end;
764608    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764609    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
764610    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
764611    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
764612    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764613    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764614    +   end;
MPRINT(EM_DIAGRAM):   end;
764615    +end;
MPRINT(EM_DIAGRAM):   end;
764616    +
764617    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
764618    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
764619    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
764620    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
764621    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
764622    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
764623    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764624    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764625    +end;
MPRINT(EM_DIAGRAM):   end;
764626    +else do;
MPRINT(EM_DIAGRAM):   else do;
764627    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764628    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
764629    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764630    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
764631    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
764632    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
764633    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
764634    +   end;
MPRINT(EM_DIAGRAM):   end;
764635    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764636    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
764637    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
764638    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
764639    +   end;
MPRINT(EM_DIAGRAM):   end;
764640    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
764641    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
764642    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
764643    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
764644    +   end;
MPRINT(EM_DIAGRAM):   end;
764645    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764646    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
764647    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
764648    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
764649    +   end;
MPRINT(EM_DIAGRAM):   end;
764650    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764651    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
764652    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
764653    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
764654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764656    +   end;
MPRINT(EM_DIAGRAM):   end;
764657    +end;
MPRINT(EM_DIAGRAM):   end;
764658    +
764659    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
764660    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
764661    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
764662    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
764663    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
764664    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
764665    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764666    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764667    +end;
MPRINT(EM_DIAGRAM):   end;
764668    +else do;
MPRINT(EM_DIAGRAM):   else do;
764669    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764670    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
764671    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764672    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
764673    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
764674    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
764675    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
764676    +   end;
MPRINT(EM_DIAGRAM):   end;
764677    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
764678    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
764679    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
764680    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
764681    +   end;
MPRINT(EM_DIAGRAM):   end;
764682    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764683    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
764684    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
764685    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
764686    +   end;
MPRINT(EM_DIAGRAM):   end;
764687    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764688    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
764689    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
764690    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
764691    +   end;
MPRINT(EM_DIAGRAM):   end;
764692    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764693    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
764694    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
764695    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
764696    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764697    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764698    +   end;
MPRINT(EM_DIAGRAM):   end;
764699    +end;
MPRINT(EM_DIAGRAM):   end;
764700    +
764701    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
764702    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
764703    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
764704    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
764705    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
764706    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764707    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764708    +end;
MPRINT(EM_DIAGRAM):   end;
764709    +else do;
MPRINT(EM_DIAGRAM):   else do;
764710    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764711    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
764712    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764713    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
764714    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
764715    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
764716    +   end;
MPRINT(EM_DIAGRAM):   end;
764717    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
764718    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
764719    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
764720    +   end;
MPRINT(EM_DIAGRAM):   end;
764721    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764722    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
764723    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
764724    +   end;
MPRINT(EM_DIAGRAM):   end;
764725    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764726    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
764727    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
764728    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764729    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764730    +   end;
MPRINT(EM_DIAGRAM):   end;
764731    +end;
MPRINT(EM_DIAGRAM):   end;
764732    +
764733    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
764734    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
764735    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
764736    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
764737    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
764738    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
764739    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764740    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764741    +end;
MPRINT(EM_DIAGRAM):   end;
764742    +else do;
MPRINT(EM_DIAGRAM):   else do;
764743    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764744    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
764745    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764746    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
764747    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
764748    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
764749    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
764750    +   end;
MPRINT(EM_DIAGRAM):   end;
764751    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764752    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
764753    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
764754    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
764755    +   end;
MPRINT(EM_DIAGRAM):   end;
764756    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764757    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
764758    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
764759    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
764760    +   end;
MPRINT(EM_DIAGRAM):   end;
764761    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
764762    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
764763    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
764764    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
764765    +   end;
MPRINT(EM_DIAGRAM):   end;
764766    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764767    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
764768    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
764769    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
764770    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764771    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764772    +   end;
MPRINT(EM_DIAGRAM):   end;
764773    +end;
MPRINT(EM_DIAGRAM):   end;
764774    +
764775    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
764776    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
764777    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
764778    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
764779    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
764780    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
764781    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764782    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764783    +end;
MPRINT(EM_DIAGRAM):   end;
764784    +else do;
MPRINT(EM_DIAGRAM):   else do;
764785    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764786    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
764787    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764788    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
764789    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
764790    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
764791    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
764792    +   end;
MPRINT(EM_DIAGRAM):   end;
764793    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
764794    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
764795    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
764796    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
764797    +   end;
MPRINT(EM_DIAGRAM):   end;
764798    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764799    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
764800    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
764801    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
764802    +   end;
MPRINT(EM_DIAGRAM):   end;
764803    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764804    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
764805    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
764806    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
764807    +   end;
MPRINT(EM_DIAGRAM):   end;
764808    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764809    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
764810    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
764811    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
764812    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764813    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764814    +   end;
MPRINT(EM_DIAGRAM):   end;
764815    +end;
MPRINT(EM_DIAGRAM):   end;
764816    +
764817    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
764818    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
764819    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
764820    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
764821    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
764822    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
764823    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
764824    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764825    +end;
MPRINT(EM_DIAGRAM):   end;
764826    +else do;
MPRINT(EM_DIAGRAM):   else do;
764827    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
764828    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
764829    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
764830    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
764831    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
764832    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
764833    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
764834    +   end;
MPRINT(EM_DIAGRAM):   end;
764835    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
764836    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
764837    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
764838    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
764839    +   end;
MPRINT(EM_DIAGRAM):   end;
764840    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
764841    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
764842    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
764843    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
764844    +   end;
MPRINT(EM_DIAGRAM):   end;
764845    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
764846    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
764847    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
764848    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
764849    +   end;
MPRINT(EM_DIAGRAM):   end;
764850    +   else do;
MPRINT(EM_DIAGRAM):   else do;
764851    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
764852    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
764853    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
764854    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
764855    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
764856    +   end;
MPRINT(EM_DIAGRAM):   end;
764857    +end;
MPRINT(EM_DIAGRAM):   end;
764858    +
764859    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
764860    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
764861    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
764862    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
764863    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
764864    +end;
MPRINT(EM_DIAGRAM):   end;
764865    +
764866    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
764867    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
764868    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
764869    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
764870    +
764871    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
764872    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764873    +_LP0 = _LP0 + (   -1.02877515677573) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.02877515677573) * _TEMP * _1_0;
764874    +
764875    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
764876    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764877    +_LP0 = _LP0 + (     1.9467311516595) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.9467311516595) * _TEMP * _2_0;
764878    +_LP0 = _LP0 + (    0.16734849497288) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16734849497288) * _TEMP * _2_1;
764879    +_LP0 = _LP0 + (   -0.71216043302912) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71216043302912) * _TEMP * _2_2;
764880    +
764881    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
764882    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764883    +_LP0 = _LP0 + (    1.00633080323166) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00633080323166) * _TEMP * _3_0;
764884    +_LP0 = _LP0 + (    0.85917878021713) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.85917878021713) * _TEMP * _3_1;
764885    +_LP0 = _LP0 + (   -0.97761167986152) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.97761167986152) * _TEMP * _3_2;
764886    +
764887    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
764888    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764889    +_LP0 = _LP0 + (    0.65248692594388) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.65248692594388) * _TEMP * _5_0;
764890    +_LP0 = _LP0 + (     0.0417259399181) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0417259399181) * _TEMP * _5_1;
764891    +_LP0 = _LP0 + (   -0.05258075832348) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05258075832348) * _TEMP * _5_2;
764892    +
764893    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
764894    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764895    +_LP0 = _LP0 + (   -1.48113569275309) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.48113569275309) * _TEMP * _7_0;
764896    +_LP0 = _LP0 + (   -0.22439832100882) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22439832100882) * _TEMP * _7_1;
764897    +_LP0 = _LP0 + (     0.5480751224945) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.5480751224945) * _TEMP * _7_2;
764898    +
764899    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
764900    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764901    +_LP0 = _LP0 + (    1.04449090892344) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04449090892344) * _TEMP * _8_0;
764902    +_LP0 = _LP0 + (    0.44337701613731) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.44337701613731) * _TEMP * _8_1;
764903    +_LP0 = _LP0 + (   -0.60815032674089) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.60815032674089) * _TEMP * _8_2;
764904    +
764905    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
764906    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764907    +_LP0 = _LP0 + (   -1.14772939970229) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.14772939970229) * _TEMP * _9_0;
764908    +_LP0 = _LP0 + (    0.01236638317437) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01236638317437) * _TEMP * _9_1;
764909    +
764910    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
764911    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764912    +_LP0 = _LP0 + (   -2.65515163278803) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65515163278803) * _TEMP * _10_0;
764913    +_LP0 = _LP0 + (    0.05356116501287) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05356116501287) * _TEMP * _10_1;
764914    +_LP0 = _LP0 + (    0.54048303369343) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54048303369343) * _TEMP * _10_2;
764915    +
764916    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
764917    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764918    +_LP0 = _LP0 + (   -0.25558521864842) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25558521864842) * _TEMP * _13_0;
764919    +_LP0 = _LP0 + (    0.02282756746923) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02282756746923) * _TEMP * _13_1;
764920    +_LP0 = _LP0 + (   -0.39418668032866) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39418668032866) * _TEMP * _13_2;
764921    +
764922    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
764923    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
764924    +_LP0 = _LP0 + (    1.93344839762718) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.93344839762718) * _TEMP * _14_0;
764925    +_LP0 = _LP0 + (    0.53898198413912) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53898198413912) * _TEMP * _14_1;
764926    +_LP0 = _LP0 + (   -0.59895640903963) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.59895640903963) * _TEMP * _14_2;
764927    +
764928    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
764929    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
764930    +_TEMP =    -1.75214170195592 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.75214170195592 + _LP0;
764931    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
764932    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
764933    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
764934    +end;
MPRINT(EM_DIAGRAM):   end;
764935    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
764936    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
764937    +
764938    +REG3DR1:
764939    +
764940    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
764941    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
764942    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
764943    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
764944    +end;
MPRINT(EM_DIAGRAM):   end;
764945    +else do;
MPRINT(EM_DIAGRAM):   else do;
764946    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
764947    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
764948    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
764949    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
764950    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
764951    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
764952    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
764953    +   end;
MPRINT(EM_DIAGRAM):   end;
764954    +end;
MPRINT(EM_DIAGRAM):   end;
764955    +
764956    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
764957    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
764958    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
764959    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
764960    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
764961    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
764962    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
764963    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
764964    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
764965    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
764966    +end;
MPRINT(EM_DIAGRAM):   end;
764967    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
764968    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
764969    +
764970    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
764971    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
764972    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
764973    +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
764974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764975    +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
764976    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764977    +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
764978    +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
764979    +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
764980    +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
764981    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764982    +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
764983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764984    +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
764985    +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
764986    +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
764987    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764988    +* Ensmbl3: Scoring Code of model 7 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 7 of 9;
764989    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764990    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764991    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
764992    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
764993    +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
764994    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
764995    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
764996    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
764997    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
764998    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
764999    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
765000    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
765001    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
765002    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
765003    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
765004    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
765005    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
765006    +LENGTH _WARN_ $4
765007    +      F_DepVar  $ 12
765008    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
765009    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
765010    +
765011    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
765012    +
765013    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
765014    +
765015    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
765016    +
765017    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
765018    +
765019    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
765020    +
765021    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
765022    +
765023    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
765024    +
765025    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
765026    +
765027    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
765028    +
765029    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
765030    +
765031    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
765032    +
765033    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
765034    +
765035    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
765036    +
765037    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
765038    +
765039    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
765040    +
765041    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
765042    +
765043    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
765044    +
765045    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
765046    +
765047    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
765048    +
765049    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
765050    +
765051    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
765052    +
765053    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
765054    +
765055    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
765056    +
765057    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
765058    +
765059    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
765060    +
765061    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
765062    +
765063    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
765064    +
765065    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
765066    +
765067    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
765068    +
765069    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
765070    +
765071    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
765072    +
765073    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
765074    +
765075    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
765076    +
765077    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
765078    +
765079    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
765080    +
765081    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
765082    +
765083    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
765084    +
765085    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
765086    +
765087    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
765088    +
765089    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
765090    +
765091    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
765092    +
765093    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
765094    +
765095    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
765096    +
765097    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
765098    +
765099    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
765100    +
765101    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
765102    +
765103    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
765104    +
765105    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
765106    +
765107    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
765108    +
765109    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
765110    +
765111    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
765112    +
765113    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
765114    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
765115    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
765116    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
765117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765119    +end;
MPRINT(EM_DIAGRAM):   end;
765120    +else do;
MPRINT(EM_DIAGRAM):   else do;
765121    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765122    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
765123    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765124    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
765125    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
765126    +   end;
MPRINT(EM_DIAGRAM):   end;
765127    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
765128    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
765129    +   end;
MPRINT(EM_DIAGRAM):   end;
765130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765131    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
765132    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765133    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765134    +   end;
MPRINT(EM_DIAGRAM):   end;
765135    +end;
MPRINT(EM_DIAGRAM):   end;
765136    +
765137    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
765138    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
765139    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
765140    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
765141    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
765142    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
765143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765145    +end;
MPRINT(EM_DIAGRAM):   end;
765146    +else do;
MPRINT(EM_DIAGRAM):   else do;
765147    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765148    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
765149    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765150    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
765151    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
765152    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
765153    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
765154    +   end;
MPRINT(EM_DIAGRAM):   end;
765155    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
765156    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
765157    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
765158    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
765159    +   end;
MPRINT(EM_DIAGRAM):   end;
765160    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765161    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
765162    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
765163    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
765164    +   end;
MPRINT(EM_DIAGRAM):   end;
765165    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765166    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
765167    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
765168    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
765169    +   end;
MPRINT(EM_DIAGRAM):   end;
765170    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765171    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
765172    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
765173    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
765174    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765175    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765176    +   end;
MPRINT(EM_DIAGRAM):   end;
765177    +end;
MPRINT(EM_DIAGRAM):   end;
765178    +
765179    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
765180    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
765181    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
765182    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
765183    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
765184    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
765185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765187    +end;
MPRINT(EM_DIAGRAM):   end;
765188    +else do;
MPRINT(EM_DIAGRAM):   else do;
765189    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765190    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
765191    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765192    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
765193    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
765194    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
765195    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
765196    +   end;
MPRINT(EM_DIAGRAM):   end;
765197    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765198    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
765199    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
765200    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
765201    +   end;
MPRINT(EM_DIAGRAM):   end;
765202    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
765203    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
765204    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
765205    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
765206    +   end;
MPRINT(EM_DIAGRAM):   end;
765207    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765208    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
765209    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
765210    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
765211    +   end;
MPRINT(EM_DIAGRAM):   end;
765212    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765213    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
765214    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
765215    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
765216    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765217    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765218    +   end;
MPRINT(EM_DIAGRAM):   end;
765219    +end;
MPRINT(EM_DIAGRAM):   end;
765220    +
765221    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
765222    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
765223    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
765224    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
765225    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
765226    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
765227    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765228    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765229    +end;
MPRINT(EM_DIAGRAM):   end;
765230    +else do;
MPRINT(EM_DIAGRAM):   else do;
765231    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765232    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
765233    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765234    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765235    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
765236    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
765237    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
765238    +   end;
MPRINT(EM_DIAGRAM):   end;
765239    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765240    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
765241    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
765242    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
765243    +   end;
MPRINT(EM_DIAGRAM):   end;
765244    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765245    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
765246    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
765247    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
765248    +   end;
MPRINT(EM_DIAGRAM):   end;
765249    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765250    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
765251    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
765252    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
765253    +   end;
MPRINT(EM_DIAGRAM):   end;
765254    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765255    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
765256    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
765257    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
765258    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765259    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765260    +   end;
MPRINT(EM_DIAGRAM):   end;
765261    +end;
MPRINT(EM_DIAGRAM):   end;
765262    +
765263    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
765264    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
765265    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
765266    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
765267    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
765268    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
765269    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765270    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765271    +end;
MPRINT(EM_DIAGRAM):   end;
765272    +else do;
MPRINT(EM_DIAGRAM):   else do;
765273    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765274    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
765275    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765276    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765277    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
765278    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
765279    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
765280    +   end;
MPRINT(EM_DIAGRAM):   end;
765281    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765282    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
765283    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
765284    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
765285    +   end;
MPRINT(EM_DIAGRAM):   end;
765286    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765287    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
765288    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
765289    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
765290    +   end;
MPRINT(EM_DIAGRAM):   end;
765291    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765292    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
765293    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
765294    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
765295    +   end;
MPRINT(EM_DIAGRAM):   end;
765296    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765297    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
765298    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
765299    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
765300    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765301    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765302    +   end;
MPRINT(EM_DIAGRAM):   end;
765303    +end;
MPRINT(EM_DIAGRAM):   end;
765304    +
765305    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
765306    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
765307    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
765308    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
765309    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
765310    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
765311    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765312    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765313    +end;
MPRINT(EM_DIAGRAM):   end;
765314    +else do;
MPRINT(EM_DIAGRAM):   else do;
765315    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765316    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
765317    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765318    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765319    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
765320    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
765321    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
765322    +   end;
MPRINT(EM_DIAGRAM):   end;
765323    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765324    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
765325    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
765326    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
765327    +   end;
MPRINT(EM_DIAGRAM):   end;
765328    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765329    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
765330    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
765331    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
765332    +   end;
MPRINT(EM_DIAGRAM):   end;
765333    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765334    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
765335    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
765336    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
765337    +   end;
MPRINT(EM_DIAGRAM):   end;
765338    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765339    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
765340    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
765341    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
765342    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765343    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765344    +   end;
MPRINT(EM_DIAGRAM):   end;
765345    +end;
MPRINT(EM_DIAGRAM):   end;
765346    +
765347    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
765348    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
765349    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
765350    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
765351    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
765352    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
765353    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765354    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765355    +end;
MPRINT(EM_DIAGRAM):   end;
765356    +else do;
MPRINT(EM_DIAGRAM):   else do;
765357    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765358    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
765359    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765360    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765361    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
765362    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
765363    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
765364    +   end;
MPRINT(EM_DIAGRAM):   end;
765365    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765366    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
765367    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
765368    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
765369    +   end;
MPRINT(EM_DIAGRAM):   end;
765370    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765371    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
765372    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
765373    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
765374    +   end;
MPRINT(EM_DIAGRAM):   end;
765375    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765376    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
765377    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
765378    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
765379    +   end;
MPRINT(EM_DIAGRAM):   end;
765380    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765381    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
765382    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
765383    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
765384    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765385    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765386    +   end;
MPRINT(EM_DIAGRAM):   end;
765387    +end;
MPRINT(EM_DIAGRAM):   end;
765388    +
765389    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
765390    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
765391    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
765392    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
765393    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
765394    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
765395    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765396    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765397    +end;
MPRINT(EM_DIAGRAM):   end;
765398    +else do;
MPRINT(EM_DIAGRAM):   else do;
765399    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765400    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
765401    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765402    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765403    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
765404    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
765405    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
765406    +   end;
MPRINT(EM_DIAGRAM):   end;
765407    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765408    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
765409    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
765410    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
765411    +   end;
MPRINT(EM_DIAGRAM):   end;
765412    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765413    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
765414    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
765415    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
765416    +   end;
MPRINT(EM_DIAGRAM):   end;
765417    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765418    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
765419    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
765420    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
765421    +   end;
MPRINT(EM_DIAGRAM):   end;
765422    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765423    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
765424    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
765425    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
765426    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765427    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765428    +   end;
MPRINT(EM_DIAGRAM):   end;
765429    +end;
MPRINT(EM_DIAGRAM):   end;
765430    +
765431    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
765432    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
765433    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
765434    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
765435    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
765436    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765437    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765438    +end;
MPRINT(EM_DIAGRAM):   end;
765439    +else do;
MPRINT(EM_DIAGRAM):   else do;
765440    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765441    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
765442    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765443    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765444    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
765445    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
765446    +   end;
MPRINT(EM_DIAGRAM):   end;
765447    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765448    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
765449    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
765450    +   end;
MPRINT(EM_DIAGRAM):   end;
765451    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765452    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
765453    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
765454    +   end;
MPRINT(EM_DIAGRAM):   end;
765455    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765456    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
765457    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
765458    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765459    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765460    +   end;
MPRINT(EM_DIAGRAM):   end;
765461    +end;
MPRINT(EM_DIAGRAM):   end;
765462    +
765463    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
765464    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
765465    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
765466    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
765467    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
765468    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
765469    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765470    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765471    +end;
MPRINT(EM_DIAGRAM):   end;
765472    +else do;
MPRINT(EM_DIAGRAM):   else do;
765473    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765474    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
765475    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765476    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
765477    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
765478    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
765479    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
765480    +   end;
MPRINT(EM_DIAGRAM):   end;
765481    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765482    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
765483    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
765484    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
765485    +   end;
MPRINT(EM_DIAGRAM):   end;
765486    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765487    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
765488    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
765489    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
765490    +   end;
MPRINT(EM_DIAGRAM):   end;
765491    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
765492    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
765493    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
765494    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
765495    +   end;
MPRINT(EM_DIAGRAM):   end;
765496    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765497    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
765498    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
765499    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
765500    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765501    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765502    +   end;
MPRINT(EM_DIAGRAM):   end;
765503    +end;
MPRINT(EM_DIAGRAM):   end;
765504    +
765505    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
765506    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
765507    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
765508    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
765509    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
765510    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
765511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765513    +end;
MPRINT(EM_DIAGRAM):   end;
765514    +else do;
MPRINT(EM_DIAGRAM):   else do;
765515    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765516    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
765517    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765518    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765519    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
765520    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
765521    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
765522    +   end;
MPRINT(EM_DIAGRAM):   end;
765523    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765524    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
765525    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
765526    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
765527    +   end;
MPRINT(EM_DIAGRAM):   end;
765528    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765529    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
765530    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
765531    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
765532    +   end;
MPRINT(EM_DIAGRAM):   end;
765533    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765534    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
765535    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
765536    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
765537    +   end;
MPRINT(EM_DIAGRAM):   end;
765538    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765539    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
765540    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
765541    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
765542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765544    +   end;
MPRINT(EM_DIAGRAM):   end;
765545    +end;
MPRINT(EM_DIAGRAM):   end;
765546    +
765547    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
765548    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
765549    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
765550    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
765551    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
765552    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
765553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765555    +end;
MPRINT(EM_DIAGRAM):   end;
765556    +else do;
MPRINT(EM_DIAGRAM):   else do;
765557    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765558    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
765559    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765560    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
765561    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
765562    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
765563    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
765564    +   end;
MPRINT(EM_DIAGRAM):   end;
765565    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
765566    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
765567    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
765568    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
765569    +   end;
MPRINT(EM_DIAGRAM):   end;
765570    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765571    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
765572    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
765573    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
765574    +   end;
MPRINT(EM_DIAGRAM):   end;
765575    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765576    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
765577    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
765578    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
765579    +   end;
MPRINT(EM_DIAGRAM):   end;
765580    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765581    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
765582    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
765583    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
765584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765586    +   end;
MPRINT(EM_DIAGRAM):   end;
765587    +end;
MPRINT(EM_DIAGRAM):   end;
765588    +
765589    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
765590    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
765591    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
765592    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
765593    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
765594    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
765595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765597    +end;
MPRINT(EM_DIAGRAM):   end;
765598    +else do;
MPRINT(EM_DIAGRAM):   else do;
765599    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765600    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
765601    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765602    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
765603    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
765604    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
765605    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
765606    +   end;
MPRINT(EM_DIAGRAM):   end;
765607    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
765608    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
765609    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
765610    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
765611    +   end;
MPRINT(EM_DIAGRAM):   end;
765612    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765613    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
765614    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
765615    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
765616    +   end;
MPRINT(EM_DIAGRAM):   end;
765617    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765618    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
765619    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
765620    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
765621    +   end;
MPRINT(EM_DIAGRAM):   end;
765622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765623    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
765624    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
765625    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
765626    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765627    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765628    +   end;
MPRINT(EM_DIAGRAM):   end;
765629    +end;
MPRINT(EM_DIAGRAM):   end;
765630    +
765631    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
765632    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
765633    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
765634    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
765635    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
765636    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
765637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
765638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765639    +end;
MPRINT(EM_DIAGRAM):   end;
765640    +else do;
MPRINT(EM_DIAGRAM):   else do;
765641    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
765642    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
765643    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765644    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
765645    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
765646    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
765647    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
765648    +   end;
MPRINT(EM_DIAGRAM):   end;
765649    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
765650    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
765651    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
765652    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
765653    +   end;
MPRINT(EM_DIAGRAM):   end;
765654    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
765655    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
765656    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
765657    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
765658    +   end;
MPRINT(EM_DIAGRAM):   end;
765659    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
765660    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
765661    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
765662    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
765663    +   end;
MPRINT(EM_DIAGRAM):   end;
765664    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765665    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
765666    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
765667    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
765668    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
765669    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
765670    +   end;
MPRINT(EM_DIAGRAM):   end;
765671    +end;
MPRINT(EM_DIAGRAM):   end;
765672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765673    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
765674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765675    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765676    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
765677    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765678    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
765679    +   H11  =    -0.47846451014473 * GRP_AcceptedCmp52  +     0.19123593876387 *
765680    +        GRP_Frq2  +     0.09643181492148 * GRP_Frq3  +     0.05144024674895 *
765681    +        GRP_Frq4  +     0.04295631018086 * GRP_Income2
765682    +          +     -0.1228594895838 * GRP_Income3  +    -0.24669259703155 *
765683    +        GRP_Income4  +    -0.12634710557505 * GRP_Mnt2
765684    +          +     0.06153848379201 * GRP_Mnt3  +    -0.25623825887978 * GRP_Mnt4
765685    +          +    -0.09885892988252 * GRP_MntFishProducts2
765686    +          +     0.08406776876431 * GRP_MntFishProducts3
765687    +          +    -0.01961506207304 * GRP_MntFishProducts4
765688    +          +     0.05865015349102 * GRP_MntGoldProds2
765689    +          +    -0.19025881153665 * GRP_MntGoldProds3
765690    +          +     0.11742267670165 * GRP_MntGoldProds4
765691    +          +    -0.48107725600014 * GRP_MntMeatProducts2
765692    +          +    -0.06405219545244 * GRP_MntMeatProducts3
765693    +          +    -0.28599597872655 * GRP_MntMeatProducts4
765694    +          +     0.09252331701173 * GRP_MntWines2  +    -0.01679973092371 *
765695    +        GRP_MntWines3  +    -0.28118765113398 * GRP_MntWines4
765696    +          +    -0.20589129984224 * GRP_NumCatalogPurchases3
765697    +          +     0.09269540062859 * GRP_NumCatalogPurchases4
765698    +          +    -0.21301173258264 * GRP_NumDistPurchases2
765699    +          +     0.02968077077204 * GRP_NumDistPurchases3
765700    +          +     0.37847518797466 * GRP_NumDistPurchases4
765701    +          +    -0.14460622553066 * GRP_NumWebPurchases2
765702    +          +     0.24087714617368 * GRP_NumWebPurchases3
765703    +          +     0.31645984538255 * GRP_NumWebPurchases4
765704    +          +    -0.21603366146166 * GRP_RFMstat2  +    -0.16662861409798 *
765705    +        GRP_RFMstat3  +     0.21007601365613 * GRP_RFMstat4
765706    +          +    -0.01443663304415 * GRP_RMntFrq2  +    -0.10326438582674 *
765707    +        GRP_RMntFrq3  +    -0.65474128199839 * GRP_RMntFrq4
765708    +          +     0.32165037855922 * GRP_Recency2  +     0.13838311684738 *
765709    +        GRP_Recency3  +     0.25495034500897 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47846451014473 * GRP_AcceptedCmp52 + 0.19123593876387 * 
GRP_Frq2 + 0.09643181492148 * GRP_Frq3 + 0.05144024674895 * GRP_Frq4 + 0.04295631018086 * 
GRP_Income2 + -0.1228594895838 * GRP_Income3 + -0.24669259703155 * GRP_Income4 + 
-0.12634710557505 * GRP_Mnt2 + 0.06153848379201 * GRP_Mnt3 + -0.25623825887978 * GRP_Mnt4 + 
-0.09885892988252 * GRP_MntFishProducts2 + 0.08406776876431 * GRP_MntFishProducts3 + 
-0.01961506207304 * GRP_MntFishProducts4 + 0.05865015349102 * GRP_MntGoldProds2 + 
-0.19025881153665 * GRP_MntGoldProds3 + 0.11742267670165 * GRP_MntGoldProds4 + 
-0.48107725600014 * GRP_MntMeatProducts2 + -0.06405219545244 * GRP_MntMeatProducts3 + 
-0.28599597872655 * GRP_MntMeatProducts4 + 0.09252331701173 * GRP_MntWines2 + 
-0.01679973092371 * GRP_MntWines3 + -0.28118765113398 * GRP_MntWines4 + -0.20589129984224 * 
GRP_NumCatalogPurchases3 + 0.09269540062859 * GRP_NumCatalogPurchases4 + -0.21301173258264 * 
GRP_NumDistPurchases2 + 0.02968077077204 * GRP_NumDistPurchases3 + 0.37847518797466 * 
GRP_NumDistPurchases4 + -0.14460622553066 * GRP_NumWebPurchases2 + 0.24087714617368 * 
GRP_NumWebPurchases3 + 0.31645984538255 * GRP_NumWebPurchases4 + -0.21603366146166 * 
GRP_RFMstat2 + -0.16662861409798 * GRP_RFMstat3 + 0.21007601365613 * GRP_RFMstat4 + 
-0.01443663304415 * GRP_RMntFrq2 + -0.10326438582674 * GRP_RMntFrq3 + -0.65474128199839 * 
GRP_RMntFrq4 + 0.32165037855922 * GRP_Recency2 + 0.13838311684738 * GRP_Recency3 + 
0.25495034500897 * GRP_Recency4 ;
765710    +   H12  =     0.19980227701329 * GRP_AcceptedCmp52  +     0.35227413860542 *
765711    +        GRP_Frq2  +    -0.08132751965568 * GRP_Frq3  +     0.06274660992037 *
765712    +        GRP_Frq4  +     0.14609729670665 * GRP_Income2
765713    +          +     -0.0521158725468 * GRP_Income3  +     0.29485821055626 *
765714    +        GRP_Income4  +     0.11491631500511 * GRP_Mnt2
765715    +          +    -0.48249282197964 * GRP_Mnt3  +    -0.43275960999945 * GRP_Mnt4
765716    +          +     0.23372129286866 * GRP_MntFishProducts2
765717    +          +     0.08173006283377 * GRP_MntFishProducts3
765718    +          +    -0.26374451563307 * GRP_MntFishProducts4
765719    +          +    -0.05478986771486 * GRP_MntGoldProds2
765720    +          +     0.15674217490538 * GRP_MntGoldProds3
765721    +          +     -0.0970693263223 * GRP_MntGoldProds4
765722    +          +    -0.07551339114514 * GRP_MntMeatProducts2
765723    +          +     0.20520020022282 * GRP_MntMeatProducts3
765724    +          +     0.18185271543305 * GRP_MntMeatProducts4
765725    +          +     0.13372808101693 * GRP_MntWines2  +    -0.23508613293176 *
765726    +        GRP_MntWines3  +     0.03782283781196 * GRP_MntWines4
765727    +          +    -0.01759208575836 * GRP_NumCatalogPurchases3
765728    +          +     0.03228155996803 * GRP_NumCatalogPurchases4
765729    +          +    -0.16689756602171 * GRP_NumDistPurchases2
765730    +          +     0.23008084678616 * GRP_NumDistPurchases3
765731    +          +      0.1020080832353 * GRP_NumDistPurchases4
765732    +          +     0.00689419482794 * GRP_NumWebPurchases2
765733    +          +     0.45549724613494 * GRP_NumWebPurchases3
765734    +          +     0.21666691620434 * GRP_NumWebPurchases4
765735    +          +    -0.02464138218078 * GRP_RFMstat2  +     0.13412544784153 *
765736    +        GRP_RFMstat3  +    -0.09645970560405 * GRP_RFMstat4
765737    +          +     0.04270814348512 * GRP_RMntFrq2  +     -0.1501520967589 *
765738    +        GRP_RMntFrq3  +     -0.1772447013278 * GRP_RMntFrq4
765739    +          +      0.1223375687576 * GRP_Recency2  +      0.1019105028487 *
765740    +        GRP_Recency3  +     0.06326170958276 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19980227701329 * GRP_AcceptedCmp52 + 0.35227413860542 * GRP_Frq2 
+ -0.08132751965568 * GRP_Frq3 + 0.06274660992037 * GRP_Frq4 + 0.14609729670665 * GRP_Income2 
+ -0.0521158725468 * GRP_Income3 + 0.29485821055626 * GRP_Income4 + 0.11491631500511 * 
GRP_Mnt2 + -0.48249282197964 * GRP_Mnt3 + -0.43275960999945 * GRP_Mnt4 + 0.23372129286866 * 
GRP_MntFishProducts2 + 0.08173006283377 * GRP_MntFishProducts3 + -0.26374451563307 * 
GRP_MntFishProducts4 + -0.05478986771486 * GRP_MntGoldProds2 + 0.15674217490538 * 
GRP_MntGoldProds3 + -0.0970693263223 * GRP_MntGoldProds4 + -0.07551339114514 * 
GRP_MntMeatProducts2 + 0.20520020022282 * GRP_MntMeatProducts3 + 0.18185271543305 * 
GRP_MntMeatProducts4 + 0.13372808101693 * GRP_MntWines2 + -0.23508613293176 * GRP_MntWines3 + 
0.03782283781196 * GRP_MntWines4 + -0.01759208575836 * GRP_NumCatalogPurchases3 + 
0.03228155996803 * GRP_NumCatalogPurchases4 + -0.16689756602171 * GRP_NumDistPurchases2 + 
0.23008084678616 * GRP_NumDistPurchases3 + 0.1020080832353 * GRP_NumDistPurchases4 + 
0.00689419482794 * GRP_NumWebPurchases2 + 0.45549724613494 * GRP_NumWebPurchases3 + 
0.21666691620434 * GRP_NumWebPurchases4 + -0.02464138218078 * GRP_RFMstat2 + 0.13412544784153 
* GRP_RFMstat3 + -0.09645970560405 * GRP_RFMstat4 + 0.04270814348512 * GRP_RMntFrq2 + 
-0.1501520967589 * GRP_RMntFrq3 + -0.1772447013278 * GRP_RMntFrq4 + 0.1223375687576 * 
GRP_Recency2 + 0.1019105028487 * GRP_Recency3 + 0.06326170958276 * GRP_Recency4 ;
765741    +   H13  =    -0.47552326597307 * GRP_AcceptedCmp52  +     0.13942347151662 *
765742    +        GRP_Frq2  +     0.15792042601114 * GRP_Frq3  +    -0.31699137546772 *
765743    +        GRP_Frq4  +     0.31623959766757 * GRP_Income2
765744    +          +     0.51675448663341 * GRP_Income3  +    -0.28386096750656 *
765745    +        GRP_Income4  +    -0.19585257598596 * GRP_Mnt2
765746    +          +     0.03528129174811 * GRP_Mnt3  +     0.16020552351069 * GRP_Mnt4
765747    +          +     0.11549870508237 * GRP_MntFishProducts2
765748    +          +    -0.02472870244462 * GRP_MntFishProducts3
765749    +          +    -0.08397818027214 * GRP_MntFishProducts4
765750    +          +    -0.15352678487636 * GRP_MntGoldProds2
765751    +          +    -0.22936969994696 * GRP_MntGoldProds3
765752    +          +    -0.14955434708754 * GRP_MntGoldProds4
765753    +          +    -0.27851745198006 * GRP_MntMeatProducts2
765754    +          +    -0.20347624413948 * GRP_MntMeatProducts3
765755    +          +     0.22612412661729 * GRP_MntMeatProducts4
765756    +          +      0.0680550338972 * GRP_MntWines2  +     0.13605728094791 *
765757    +        GRP_MntWines3  +    -0.24233826362305 * GRP_MntWines4
765758    +          +    -0.51105265438413 * GRP_NumCatalogPurchases3
765759    +          +      0.3463181885617 * GRP_NumCatalogPurchases4
765760    +          +    -0.42061003686263 * GRP_NumDistPurchases2
765761    +          +     0.05694490202182 * GRP_NumDistPurchases3
765762    +          +    -0.05589065356183 * GRP_NumDistPurchases4
765763    +          +    -0.15004779907268 * GRP_NumWebPurchases2
765764    +          +    -0.03683214810286 * GRP_NumWebPurchases3
765765    +          +    -0.14152766915751 * GRP_NumWebPurchases4
765766    +          +    -0.34448387603605 * GRP_RFMstat2  +    -0.12678315363038 *
765767    +        GRP_RFMstat3  +    -0.17785766746488 * GRP_RFMstat4
765768    +          +    -0.12269367915474 * GRP_RMntFrq2  +     0.15261716486225 *
765769    +        GRP_RMntFrq3  +    -0.14834283523731 * GRP_RMntFrq4
765770    +          +     0.41906757309616 * GRP_Recency2  +     0.11383836551208 *
765771    +        GRP_Recency3  +    -0.50873022901358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.47552326597307 * GRP_AcceptedCmp52 + 0.13942347151662 * 
GRP_Frq2 + 0.15792042601114 * GRP_Frq3 + -0.31699137546772 * GRP_Frq4 + 0.31623959766757 * 
GRP_Income2 + 0.51675448663341 * GRP_Income3 + -0.28386096750656 * GRP_Income4 + 
-0.19585257598596 * GRP_Mnt2 + 0.03528129174811 * GRP_Mnt3 + 0.16020552351069 * GRP_Mnt4 + 
0.11549870508237 * GRP_MntFishProducts2 + -0.02472870244462 * GRP_MntFishProducts3 + 
-0.08397818027214 * GRP_MntFishProducts4 + -0.15352678487636 * GRP_MntGoldProds2 + 
-0.22936969994696 * GRP_MntGoldProds3 + -0.14955434708754 * GRP_MntGoldProds4 + 
-0.27851745198006 * GRP_MntMeatProducts2 + -0.20347624413948 * GRP_MntMeatProducts3 + 
0.22612412661729 * GRP_MntMeatProducts4 + 0.0680550338972 * GRP_MntWines2 + 0.13605728094791 * 
GRP_MntWines3 + -0.24233826362305 * GRP_MntWines4 + -0.51105265438413 * 
GRP_NumCatalogPurchases3 + 0.3463181885617 * GRP_NumCatalogPurchases4 + -0.42061003686263 * 
GRP_NumDistPurchases2 + 0.05694490202182 * GRP_NumDistPurchases3 + -0.05589065356183 * 
GRP_NumDistPurchases4 + -0.15004779907268 * GRP_NumWebPurchases2 + -0.03683214810286 * 
GRP_NumWebPurchases3 + -0.14152766915751 * GRP_NumWebPurchases4 + -0.34448387603605 * 
GRP_RFMstat2 + -0.12678315363038 * GRP_RFMstat3 + -0.17785766746488 * GRP_RFMstat4 + 
-0.12269367915474 * GRP_RMntFrq2 + 0.15261716486225 * GRP_RMntFrq3 + -0.14834283523731 * 
GRP_RMntFrq4 + 0.41906757309616 * GRP_Recency2 + 0.11383836551208 * GRP_Recency3 + 
-0.50873022901358 * GRP_Recency4 ;
765772    +   H14  =     0.47487308000188 * GRP_AcceptedCmp52  +    -0.20783874293801 *
765773    +        GRP_Frq2  +     -0.2262487293265 * GRP_Frq3  +    -0.24497015722444 *
765774    +        GRP_Frq4  +    -0.41352416374349 * GRP_Income2
765775    +          +    -0.19029917786221 * GRP_Income3  +     0.44371774186743 *
765776    +        GRP_Income4  +     0.03966957052109 * GRP_Mnt2
765777    +          +     0.21041258864544 * GRP_Mnt3  +    -0.03545115071009 * GRP_Mnt4
765778    +          +     -0.3523117475999 * GRP_MntFishProducts2
765779    +          +     0.01075749365425 * GRP_MntFishProducts3
765780    +          +    -0.19220397921061 * GRP_MntFishProducts4
765781    +          +     0.24691019907326 * GRP_MntGoldProds2
765782    +          +    -0.36269131170152 * GRP_MntGoldProds3
765783    +          +    -0.07442729340208 * GRP_MntGoldProds4
765784    +          +     0.14166838567576 * GRP_MntMeatProducts2
765785    +          +     -0.0573636128895 * GRP_MntMeatProducts3
765786    +          +     0.11782684497872 * GRP_MntMeatProducts4
765787    +          +    -0.58306293735162 * GRP_MntWines2  +     -0.1332347200661 *
765788    +        GRP_MntWines3  +     -0.0491151521812 * GRP_MntWines4
765789    +          +     0.19217394838443 * GRP_NumCatalogPurchases3
765790    +          +     0.30242368378572 * GRP_NumCatalogPurchases4
765791    +          +      0.5631335040028 * GRP_NumDistPurchases2
765792    +          +      0.2833277493575 * GRP_NumDistPurchases3
765793    +          +     0.15501991757103 * GRP_NumDistPurchases4
765794    +          +     0.06522663204791 * GRP_NumWebPurchases2
765795    +          +    -0.24250508241812 * GRP_NumWebPurchases3
765796    +          +    -0.14936719392927 * GRP_NumWebPurchases4
765797    +          +     0.07538326365237 * GRP_RFMstat2  +    -0.11207708467015 *
765798    +        GRP_RFMstat3  +    -0.03495013261696 * GRP_RFMstat4
765799    +          +    -0.07948642963964 * GRP_RMntFrq2  +     -0.3740993499425 *
765800    +        GRP_RMntFrq3  +      0.1224880912483 * GRP_RMntFrq4
765801    +          +    -1.20234498415322 * GRP_Recency2  +    -0.15277267671243 *
765802    +        GRP_Recency3  +     0.17498175973385 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.47487308000188 * GRP_AcceptedCmp52 + -0.20783874293801 * 
GRP_Frq2 + -0.2262487293265 * GRP_Frq3 + -0.24497015722444 * GRP_Frq4 + -0.41352416374349 * 
GRP_Income2 + -0.19029917786221 * GRP_Income3 + 0.44371774186743 * GRP_Income4 + 
0.03966957052109 * GRP_Mnt2 + 0.21041258864544 * GRP_Mnt3 + -0.03545115071009 * GRP_Mnt4 + 
-0.3523117475999 * GRP_MntFishProducts2 + 0.01075749365425 * GRP_MntFishProducts3 + 
-0.19220397921061 * GRP_MntFishProducts4 + 0.24691019907326 * GRP_MntGoldProds2 + 
-0.36269131170152 * GRP_MntGoldProds3 + -0.07442729340208 * GRP_MntGoldProds4 + 
0.14166838567576 * GRP_MntMeatProducts2 + -0.0573636128895 * GRP_MntMeatProducts3 + 
0.11782684497872 * GRP_MntMeatProducts4 + -0.58306293735162 * GRP_MntWines2 + -0.1332347200661 
* GRP_MntWines3 + -0.0491151521812 * GRP_MntWines4 + 0.19217394838443 * 
GRP_NumCatalogPurchases3 + 0.30242368378572 * GRP_NumCatalogPurchases4 + 0.5631335040028 * 
GRP_NumDistPurchases2 + 0.2833277493575 * GRP_NumDistPurchases3 + 0.15501991757103 * 
GRP_NumDistPurchases4 + 0.06522663204791 * GRP_NumWebPurchases2 + -0.24250508241812 * 
GRP_NumWebPurchases3 + -0.14936719392927 * GRP_NumWebPurchases4 + 0.07538326365237 * 
GRP_RFMstat2 + -0.11207708467015 * GRP_RFMstat3 + -0.03495013261696 * GRP_RFMstat4 + 
-0.07948642963964 * GRP_RMntFrq2 + -0.3740993499425 * GRP_RMntFrq3 + 0.1224880912483 * 
GRP_RMntFrq4 + -1.20234498415322 * GRP_Recency2 + -0.15277267671243 * GRP_Recency3 + 
0.17498175973385 * GRP_Recency4 ;
765803    +   H15  =     0.31607756545434 * GRP_AcceptedCmp52  +    -0.39938983779344 *
765804    +        GRP_Frq2  +     0.14190381114364 * GRP_Frq3  +    -0.04654073105991 *
765805    +        GRP_Frq4  +    -0.46847099915399 * GRP_Income2
765806    +          +    -0.24521056791482 * GRP_Income3  +     0.29673900247528 *
765807    +        GRP_Income4  +    -0.24347594694596 * GRP_Mnt2
765808    +          +    -0.25470417967356 * GRP_Mnt3  +     -0.3155333752807 * GRP_Mnt4
765809    +          +    -0.16164851437662 * GRP_MntFishProducts2
765810    +          +    -0.07507872874942 * GRP_MntFishProducts3
765811    +          +     -0.0000128165366 * GRP_MntFishProducts4
765812    +          +    -0.13003975496355 * GRP_MntGoldProds2
765813    +          +     0.10076462685161 * GRP_MntGoldProds3
765814    +          +     0.06823082371801 * GRP_MntGoldProds4
765815    +          +    -0.06661203056726 * GRP_MntMeatProducts2
765816    +          +     0.21135583081997 * GRP_MntMeatProducts3
765817    +          +     0.05317467469941 * GRP_MntMeatProducts4
765818    +          +     -0.6790577471338 * GRP_MntWines2  +    -0.29030845400198 *
765819    +        GRP_MntWines3  +     0.17538455641954 * GRP_MntWines4
765820    +          +     0.27411589551701 * GRP_NumCatalogPurchases3
765821    +          +     0.33639439802576 * GRP_NumCatalogPurchases4
765822    +          +     0.37202178791302 * GRP_NumDistPurchases2
765823    +          +     0.21242089259106 * GRP_NumDistPurchases3
765824    +          +     0.01745612539369 * GRP_NumDistPurchases4
765825    +          +     0.06417261665114 * GRP_NumWebPurchases2
765826    +          +     0.34302874594069 * GRP_NumWebPurchases3
765827    +          +     0.08556934131582 * GRP_NumWebPurchases4
765828    +          +    -0.01317484038203 * GRP_RFMstat2  +    -0.26798645102872 *
765829    +        GRP_RFMstat3  +    -0.23199496411354 * GRP_RFMstat4
765830    +          +    -0.36396476479849 * GRP_RMntFrq2  +    -0.16838193614715 *
765831    +        GRP_RMntFrq3  +       0.051807632343 * GRP_RMntFrq4
765832    +          +    -0.13014582685433 * GRP_Recency2  +     0.01537566565331 *
765833    +        GRP_Recency3  +      0.1365007617785 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.31607756545434 * GRP_AcceptedCmp52 + -0.39938983779344 * 
GRP_Frq2 + 0.14190381114364 * GRP_Frq3 + -0.04654073105991 * GRP_Frq4 + -0.46847099915399 * 
GRP_Income2 + -0.24521056791482 * GRP_Income3 + 0.29673900247528 * GRP_Income4 + 
-0.24347594694596 * GRP_Mnt2 + -0.25470417967356 * GRP_Mnt3 + -0.3155333752807 * GRP_Mnt4 + 
-0.16164851437662 * GRP_MntFishProducts2 + -0.07507872874942 * GRP_MntFishProducts3 + 
-0.0000128165366 * GRP_MntFishProducts4 + -0.13003975496355 * GRP_MntGoldProds2 + 
0.10076462685161 * GRP_MntGoldProds3 + 0.06823082371801 * GRP_MntGoldProds4 + 
-0.06661203056726 * GRP_MntMeatProducts2 + 0.21135583081997 * GRP_MntMeatProducts3 + 
0.05317467469941 * GRP_MntMeatProducts4 + -0.6790577471338 * GRP_MntWines2 + -0.29030845400198 
* GRP_MntWines3 + 0.17538455641954 * GRP_MntWines4 + 0.27411589551701 * 
GRP_NumCatalogPurchases3 + 0.33639439802576 * GRP_NumCatalogPurchases4 + 0.37202178791302 * 
GRP_NumDistPurchases2 + 0.21242089259106 * GRP_NumDistPurchases3 + 0.01745612539369 * 
GRP_NumDistPurchases4 + 0.06417261665114 * GRP_NumWebPurchases2 + 0.34302874594069 * 
GRP_NumWebPurchases3 + 0.08556934131582 * GRP_NumWebPurchases4 + -0.01317484038203 * 
GRP_RFMstat2 + -0.26798645102872 * GRP_RFMstat3 + -0.23199496411354 * GRP_RFMstat4 + 
-0.36396476479849 * GRP_RMntFrq2 + -0.16838193614715 * GRP_RMntFrq3 + 0.051807632343 * 
GRP_RMntFrq4 + -0.13014582685433 * GRP_Recency2 + 0.01537566565331 * GRP_Recency3 + 
0.1365007617785 * GRP_Recency4 ;
765834    +   H11  =    -0.02804722687441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02804722687441 + H11 ;
765835    +   H12  =    -1.15173994765723 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.15173994765723 + H12 ;
765836    +   H13  =     0.30124306509106 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30124306509106 + H13 ;
765837    +   H14  =    -0.37792609262463 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.37792609262463 + H14 ;
765838    +   H15  =     0.46405557098176 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.46405557098176 + H15 ;
765839    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
765840    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
765841    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
765842    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
765843    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
765844    +END;
MPRINT(EM_DIAGRAM):   END;
765845    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
765846    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
765847    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
765848    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
765849    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
765850    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
765851    +END;
MPRINT(EM_DIAGRAM):   END;
765852    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765853    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
765854    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765855    +
765856    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
765857    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
765858    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
765859    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
765860    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
765861    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
765862    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
765863    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
765864    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
765865    +end;
MPRINT(EM_DIAGRAM):   end;
765866    +else do;
MPRINT(EM_DIAGRAM):   else do;
765867    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
765868    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
765869    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
765870    +   end;
MPRINT(EM_DIAGRAM):   end;
765871    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
765872    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
765873    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
765874    +   end;
MPRINT(EM_DIAGRAM):   end;
765875    +   else do;
MPRINT(EM_DIAGRAM):   else do;
765876    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
765877    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
765878    +   end;
MPRINT(EM_DIAGRAM):   end;
765879    +end;
MPRINT(EM_DIAGRAM):   end;
765880    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
765881    +   P_DepVar1  =     1.14388401268032 * H11  +      0.6001876010487 * H12
765882    +          +     2.09526498410663 * H13  +    -1.84849014758118 * H14
765883    +          +    -1.09009016441951 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.14388401268032 * H11 + 0.6001876010487 * H12 + 
2.09526498410663 * H13 + -1.84849014758118 * H14 + -1.09009016441951 * H15 ;
765884    +   P_DepVar1  =    -1.61414772995986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.61414772995986 + P_DepVar1 ;
765885    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
765886    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
765887    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
765888    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
765889    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
765890    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
765891    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
765892    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
765893    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
765894    +END;
MPRINT(EM_DIAGRAM):   END;
765895    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
765896    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
765897    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
765898    +END;
MPRINT(EM_DIAGRAM):   END;
765899    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
765900    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
765901    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
765902    +END;
MPRINT(EM_DIAGRAM):   END;
765903    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
765904    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
765905    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
765906    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
765907    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
765908    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
765909    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
765910    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765911    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
765912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
765913    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
765914    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
765915    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
765916    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
765917    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
765918    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
765919    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
765920    +END;
MPRINT(EM_DIAGRAM):   END;
765921    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
765922    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
765923    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
765924    +drop
765925    +H11
765926    +H12
765927    +H13
765928    +H14
765929    +H15
765930    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
765931    +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
765932    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765933    +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
765934    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765935    +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
765936    +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
765937    +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
765938    +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
765939    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765940    +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
765941    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765942    +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
765943    +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
765944    +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
765945    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765946    +* Ensmbl3: Scoring Code of model 8 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 8 of 9;
765947    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765948    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765949    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
765950    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
765951    +* NODE: Neural23;
MPRINT(EM_DIAGRAM):   * NODE: Neural23;
765952    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
765953    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
765954    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
765955    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
765956    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
765957    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
765958    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
765959    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
765960    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
765961    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
765962    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
765963    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
765964    +LENGTH _WARN_ $4
765965    +      F_DepVar  $ 12
765966    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
765967    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
765968    +
765969    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
765970    +
765971    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
765972    +
765973    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
765974    +
765975    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
765976    +
765977    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
765978    +
765979    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
765980    +
765981    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
765982    +
765983    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
765984    +
765985    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
765986    +
765987    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
765988    +
765989    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
765990    +
765991    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
765992    +
765993    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
765994    +
765995    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
765996    +
765997    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
765998    +
765999    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
766000    +
766001    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
766002    +
766003    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
766004    +
766005    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
766006    +
766007    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
766008    +
766009    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
766010    +
766011    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
766012    +
766013    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
766014    +
766015    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
766016    +
766017    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
766018    +
766019    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
766020    +
766021    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
766022    +
766023    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
766024    +
766025    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
766026    +
766027    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
766028    +
766029    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
766030    +
766031    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
766032    +
766033    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
766034    +
766035    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
766036    +
766037    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
766038    +
766039    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
766040    +
766041    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
766042    +
766043    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
766044    +
766045    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
766046    +
766047    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
766048    +
766049    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
766050    +
766051    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
766052    +
766053    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
766054    +
766055    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
766056    +
766057    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
766058    +
766059    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
766060    +
766061    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
766062    +
766063    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
766064    +
766065    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
766066    +
766067    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
766068    +
766069    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
766070    +
766071    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
766072    +
766073    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
766074    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
766075    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
766076    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
766077    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766079    +end;
MPRINT(EM_DIAGRAM):   end;
766080    +else do;
MPRINT(EM_DIAGRAM):   else do;
766081    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766082    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
766083    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766084    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
766085    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
766086    +   end;
MPRINT(EM_DIAGRAM):   end;
766087    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
766088    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
766089    +   end;
MPRINT(EM_DIAGRAM):   end;
766090    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766091    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
766092    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766093    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766094    +   end;
MPRINT(EM_DIAGRAM):   end;
766095    +end;
MPRINT(EM_DIAGRAM):   end;
766096    +
766097    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
766098    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
766099    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
766100    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
766101    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
766102    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
766103    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766104    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766105    +end;
MPRINT(EM_DIAGRAM):   end;
766106    +else do;
MPRINT(EM_DIAGRAM):   else do;
The SAS System

766107    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766108    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
766109    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766110    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
766111    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
766112    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
766113    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
766114    +   end;
MPRINT(EM_DIAGRAM):   end;
766115    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
766116    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
766117    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
766118    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
766119    +   end;
MPRINT(EM_DIAGRAM):   end;
766120    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766121    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
766122    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
766123    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
766124    +   end;
MPRINT(EM_DIAGRAM):   end;
766125    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766126    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
766127    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
766128    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
766129    +   end;
MPRINT(EM_DIAGRAM):   end;
766130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766131    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
766132    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
766133    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
766134    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766135    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766136    +   end;
MPRINT(EM_DIAGRAM):   end;
766137    +end;
MPRINT(EM_DIAGRAM):   end;
766138    +
766139    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
766140    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
766141    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
766142    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
766143    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
766144    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
766145    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766146    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766147    +end;
MPRINT(EM_DIAGRAM):   end;
766148    +else do;
MPRINT(EM_DIAGRAM):   else do;
766149    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766150    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
766151    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766152    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
766153    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
766154    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
766155    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
766156    +   end;
MPRINT(EM_DIAGRAM):   end;
766157    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766158    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
766159    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
766160    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
766161    +   end;
MPRINT(EM_DIAGRAM):   end;
766162    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
766163    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
766164    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
766165    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
766166    +   end;
MPRINT(EM_DIAGRAM):   end;
766167    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766168    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
766169    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
766170    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
766171    +   end;
MPRINT(EM_DIAGRAM):   end;
766172    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766173    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
766174    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
766175    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
766176    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766177    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766178    +   end;
MPRINT(EM_DIAGRAM):   end;
766179    +end;
MPRINT(EM_DIAGRAM):   end;
766180    +
766181    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
766182    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
766183    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
766184    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
766185    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
766186    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
766187    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766189    +end;
MPRINT(EM_DIAGRAM):   end;
766190    +else do;
MPRINT(EM_DIAGRAM):   else do;
766191    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766192    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
766193    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766194    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766195    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
766196    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
766197    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
766198    +   end;
MPRINT(EM_DIAGRAM):   end;
766199    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766200    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
766201    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
766202    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
766203    +   end;
MPRINT(EM_DIAGRAM):   end;
766204    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766205    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
766206    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
766207    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
766208    +   end;
MPRINT(EM_DIAGRAM):   end;
766209    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766210    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
766211    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
766212    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
766213    +   end;
MPRINT(EM_DIAGRAM):   end;
766214    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766215    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
766216    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
766217    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
766218    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766219    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766220    +   end;
MPRINT(EM_DIAGRAM):   end;
766221    +end;
MPRINT(EM_DIAGRAM):   end;
766222    +
766223    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
766224    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
766225    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
766226    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
766227    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
766228    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
766229    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766230    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766231    +end;
MPRINT(EM_DIAGRAM):   end;
766232    +else do;
MPRINT(EM_DIAGRAM):   else do;
766233    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766234    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
766235    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766236    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766237    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
766238    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
766239    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
766240    +   end;
MPRINT(EM_DIAGRAM):   end;
766241    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766242    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
766243    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
766244    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
766245    +   end;
MPRINT(EM_DIAGRAM):   end;
766246    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766247    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
766248    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
766249    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
766250    +   end;
MPRINT(EM_DIAGRAM):   end;
766251    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766252    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
766253    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
766254    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
766255    +   end;
MPRINT(EM_DIAGRAM):   end;
766256    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766257    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
766258    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
766259    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
766260    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766261    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766262    +   end;
MPRINT(EM_DIAGRAM):   end;
766263    +end;
MPRINT(EM_DIAGRAM):   end;
766264    +
766265    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
766266    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
766267    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
766268    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
766269    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
766270    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
766271    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766272    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766273    +end;
MPRINT(EM_DIAGRAM):   end;
766274    +else do;
MPRINT(EM_DIAGRAM):   else do;
766275    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766276    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
766277    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766278    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766279    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
766280    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
766281    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
766282    +   end;
MPRINT(EM_DIAGRAM):   end;
766283    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766284    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
766285    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
766286    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
766287    +   end;
MPRINT(EM_DIAGRAM):   end;
766288    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766289    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
766290    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
766291    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
766292    +   end;
MPRINT(EM_DIAGRAM):   end;
766293    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766294    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
766295    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
766296    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
766297    +   end;
MPRINT(EM_DIAGRAM):   end;
766298    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766299    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
766300    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
766301    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
766302    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766303    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766304    +   end;
MPRINT(EM_DIAGRAM):   end;
766305    +end;
MPRINT(EM_DIAGRAM):   end;
766306    +
766307    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
766308    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
766309    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
766310    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
766311    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
766312    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
766313    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766314    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766315    +end;
MPRINT(EM_DIAGRAM):   end;
766316    +else do;
MPRINT(EM_DIAGRAM):   else do;
766317    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766318    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
766319    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766320    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766321    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
766322    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
766323    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
766324    +   end;
MPRINT(EM_DIAGRAM):   end;
766325    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766326    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
766327    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
766328    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
766329    +   end;
MPRINT(EM_DIAGRAM):   end;
766330    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766331    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
766332    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
766333    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
766334    +   end;
MPRINT(EM_DIAGRAM):   end;
766335    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766336    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
766337    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
766338    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
766339    +   end;
MPRINT(EM_DIAGRAM):   end;
766340    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766341    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
766342    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
766343    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
766344    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766345    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766346    +   end;
MPRINT(EM_DIAGRAM):   end;
766347    +end;
MPRINT(EM_DIAGRAM):   end;
766348    +
766349    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
766350    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
766351    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
766352    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
766353    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
766354    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
766355    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766356    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766357    +end;
MPRINT(EM_DIAGRAM):   end;
766358    +else do;
MPRINT(EM_DIAGRAM):   else do;
766359    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766360    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
766361    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766362    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766363    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
766364    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
766365    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
766366    +   end;
MPRINT(EM_DIAGRAM):   end;
766367    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766368    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
766369    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
766370    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
766371    +   end;
MPRINT(EM_DIAGRAM):   end;
766372    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766373    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
766374    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
766375    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
766376    +   end;
MPRINT(EM_DIAGRAM):   end;
766377    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766378    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
766379    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
766380    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
766381    +   end;
MPRINT(EM_DIAGRAM):   end;
766382    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766383    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
766384    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
766385    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
766386    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766387    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766388    +   end;
MPRINT(EM_DIAGRAM):   end;
766389    +end;
MPRINT(EM_DIAGRAM):   end;
766390    +
766391    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
766392    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
766393    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
766394    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
766395    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
766396    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766397    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766398    +end;
MPRINT(EM_DIAGRAM):   end;
766399    +else do;
MPRINT(EM_DIAGRAM):   else do;
766400    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766401    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
766402    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766403    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766404    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
766405    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
766406    +   end;
MPRINT(EM_DIAGRAM):   end;
766407    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766408    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
766409    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
766410    +   end;
MPRINT(EM_DIAGRAM):   end;
766411    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766412    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
766413    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
766414    +   end;
MPRINT(EM_DIAGRAM):   end;
766415    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766416    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
766417    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
766418    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766419    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766420    +   end;
MPRINT(EM_DIAGRAM):   end;
766421    +end;
MPRINT(EM_DIAGRAM):   end;
766422    +
766423    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
766424    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
766425    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
766426    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
766427    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
766428    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
766429    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766430    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766431    +end;
MPRINT(EM_DIAGRAM):   end;
766432    +else do;
MPRINT(EM_DIAGRAM):   else do;
766433    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766434    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
766435    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766436    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
766437    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
766438    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
766439    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
766440    +   end;
MPRINT(EM_DIAGRAM):   end;
766441    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766442    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
766443    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
766444    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
766445    +   end;
MPRINT(EM_DIAGRAM):   end;
766446    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766447    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
766448    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
766449    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
766450    +   end;
MPRINT(EM_DIAGRAM):   end;
766451    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
766452    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
766453    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
766454    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
766455    +   end;
MPRINT(EM_DIAGRAM):   end;
766456    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766457    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
766458    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
766459    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
766460    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766461    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766462    +   end;
MPRINT(EM_DIAGRAM):   end;
766463    +end;
MPRINT(EM_DIAGRAM):   end;
766464    +
766465    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
766466    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
766467    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
766468    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
766469    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
766470    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
766471    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766472    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766473    +end;
MPRINT(EM_DIAGRAM):   end;
766474    +else do;
MPRINT(EM_DIAGRAM):   else do;
766475    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766476    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
766477    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766478    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766479    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
766480    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
766481    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
766482    +   end;
MPRINT(EM_DIAGRAM):   end;
766483    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766484    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
766485    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
766486    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
766487    +   end;
MPRINT(EM_DIAGRAM):   end;
766488    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766489    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
766490    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
766491    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
766492    +   end;
MPRINT(EM_DIAGRAM):   end;
766493    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766494    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
766495    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
766496    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
766497    +   end;
MPRINT(EM_DIAGRAM):   end;
766498    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766499    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
766500    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
766501    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
766502    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766503    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766504    +   end;
MPRINT(EM_DIAGRAM):   end;
766505    +end;
MPRINT(EM_DIAGRAM):   end;
766506    +
766507    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
766508    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
766509    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
766510    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
766511    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
766512    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
766513    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766514    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766515    +end;
MPRINT(EM_DIAGRAM):   end;
766516    +else do;
MPRINT(EM_DIAGRAM):   else do;
766517    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766518    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
766519    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766520    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
766521    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
766522    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
766523    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
766524    +   end;
MPRINT(EM_DIAGRAM):   end;
766525    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
766526    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
766527    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
766528    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
766529    +   end;
MPRINT(EM_DIAGRAM):   end;
766530    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766531    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
766532    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
766533    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
766534    +   end;
MPRINT(EM_DIAGRAM):   end;
766535    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766536    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
766537    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
766538    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
766539    +   end;
MPRINT(EM_DIAGRAM):   end;
766540    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766541    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
766542    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
766543    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
766544    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766545    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766546    +   end;
MPRINT(EM_DIAGRAM):   end;
766547    +end;
MPRINT(EM_DIAGRAM):   end;
766548    +
766549    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
766550    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
766551    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
766552    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
766553    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
766554    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
766555    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766556    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766557    +end;
MPRINT(EM_DIAGRAM):   end;
766558    +else do;
MPRINT(EM_DIAGRAM):   else do;
766559    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766560    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
766561    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766562    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
766563    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
766564    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
766565    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
766566    +   end;
MPRINT(EM_DIAGRAM):   end;
766567    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
766568    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
766569    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
766570    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
766571    +   end;
MPRINT(EM_DIAGRAM):   end;
766572    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766573    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
766574    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
766575    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
766576    +   end;
MPRINT(EM_DIAGRAM):   end;
766577    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766578    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
766579    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
766580    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
766581    +   end;
MPRINT(EM_DIAGRAM):   end;
766582    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766583    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
766584    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
766585    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
766586    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766587    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766588    +   end;
MPRINT(EM_DIAGRAM):   end;
766589    +end;
MPRINT(EM_DIAGRAM):   end;
766590    +
766591    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
766592    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
766593    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
766594    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
766595    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
766596    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
766597    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
766598    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766599    +end;
MPRINT(EM_DIAGRAM):   end;
766600    +else do;
MPRINT(EM_DIAGRAM):   else do;
766601    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
766602    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
766603    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766604    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
766605    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
766606    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
766607    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
766608    +   end;
MPRINT(EM_DIAGRAM):   end;
766609    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
766610    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
766611    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
766612    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
766613    +   end;
MPRINT(EM_DIAGRAM):   end;
766614    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
766615    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
766616    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
766617    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
766618    +   end;
MPRINT(EM_DIAGRAM):   end;
766619    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
766620    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
766621    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
766622    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
766623    +   end;
MPRINT(EM_DIAGRAM):   end;
766624    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766625    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
766626    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
766627    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
766628    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
766629    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
766630    +   end;
MPRINT(EM_DIAGRAM):   end;
766631    +end;
MPRINT(EM_DIAGRAM):   end;
766632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766633    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
766634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766635    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766636    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
766637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766638    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
766639    +   H11  =     0.33640101965956 * GRP_AcceptedCmp52  +    -0.09458866011332 *
766640    +        GRP_Frq2  +     0.08165112288668 * GRP_Frq3  +      0.0098569396377 *
766641    +        GRP_Frq4  +    -0.10718097600137 * GRP_Income2
766642    +          +     0.24913133317457 * GRP_Income3  +     0.08606607454597 *
766643    +        GRP_Income4  +    -0.43083911296417 * GRP_Mnt2
766644    +          +    -0.35952383025836 * GRP_Mnt3  +     0.15746774085254 * GRP_Mnt4
766645    +          +     0.03496490321939 * GRP_MntFishProducts2
766646    +          +     -0.1386775704024 * GRP_MntFishProducts3
766647    +          +     0.08185130088727 * GRP_MntFishProducts4
766648    +          +     0.20666000615395 * GRP_MntGoldProds2
766649    +          +     0.02513603537885 * GRP_MntGoldProds3
766650    +          +     0.04518515377846 * GRP_MntGoldProds4
766651    +          +     0.14564741446952 * GRP_MntMeatProducts2
766652    +          +      0.0921407018606 * GRP_MntMeatProducts3
766653    +          +     0.03964574584898 * GRP_MntMeatProducts4
766654    +          +    -0.10395279216819 * GRP_MntWines2  +     0.12929231428625 *
766655    +        GRP_MntWines3  +     0.00045903854959 * GRP_MntWines4
766656    +          +    -0.03496333349231 * GRP_NumCatalogPurchases3
766657    +          +    -0.18329339773791 * GRP_NumCatalogPurchases4
766658    +          +     0.25535533392017 * GRP_NumDistPurchases2
766659    +          +     0.03881117716273 * GRP_NumDistPurchases3
766660    +          +    -0.02565551941415 * GRP_NumDistPurchases4
766661    +          +     0.31760052513768 * GRP_NumWebPurchases2
766662    +          +     0.09995149350563 * GRP_NumWebPurchases3
766663    +          +    -0.03267834031943 * GRP_NumWebPurchases4
766664    +          +     0.20523977712748 * GRP_RFMstat2  +    -0.05606160362426 *
766665    +        GRP_RFMstat3  +     0.08166835774422 * GRP_RFMstat4
766666    +          +    -0.02802261136507 * GRP_RMntFrq2  +     0.04530681268814 *
766667    +        GRP_RMntFrq3  +     0.17075869124019 * GRP_RMntFrq4
766668    +          +    -0.07437386313878 * GRP_Recency2  +    -0.03620176560114 *
766669    +        GRP_Recency3  +     -0.1829690397052 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.33640101965956 * GRP_AcceptedCmp52 + -0.09458866011332 * 
GRP_Frq2 + 0.08165112288668 * GRP_Frq3 + 0.0098569396377 * GRP_Frq4 + -0.10718097600137 * 
GRP_Income2 + 0.24913133317457 * GRP_Income3 + 0.08606607454597 * GRP_Income4 + 
-0.43083911296417 * GRP_Mnt2 + -0.35952383025836 * GRP_Mnt3 + 0.15746774085254 * GRP_Mnt4 + 
0.03496490321939 * GRP_MntFishProducts2 + -0.1386775704024 * GRP_MntFishProducts3 + 
0.08185130088727 * GRP_MntFishProducts4 + 0.20666000615395 * GRP_MntGoldProds2 + 
0.02513603537885 * GRP_MntGoldProds3 + 0.04518515377846 * GRP_MntGoldProds4 + 0.14564741446952 
* GRP_MntMeatProducts2 + 0.0921407018606 * GRP_MntMeatProducts3 + 0.03964574584898 * 
GRP_MntMeatProducts4 + -0.10395279216819 * GRP_MntWines2 + 0.12929231428625 * GRP_MntWines3 + 
0.00045903854959 * GRP_MntWines4 + -0.03496333349231 * GRP_NumCatalogPurchases3 + 
-0.18329339773791 * GRP_NumCatalogPurchases4 + 0.25535533392017 * GRP_NumDistPurchases2 + 
0.03881117716273 * GRP_NumDistPurchases3 + -0.02565551941415 * GRP_NumDistPurchases4 + 
0.31760052513768 * GRP_NumWebPurchases2 + 0.09995149350563 * GRP_NumWebPurchases3 + 
-0.03267834031943 * GRP_NumWebPurchases4 + 0.20523977712748 * GRP_RFMstat2 + -0.05606160362426 
* GRP_RFMstat3 + 0.08166835774422 * GRP_RFMstat4 + -0.02802261136507 * GRP_RMntFrq2 + 
0.04530681268814 * GRP_RMntFrq3 + 0.17075869124019 * GRP_RMntFrq4 + -0.07437386313878 * 
GRP_Recency2 + -0.03620176560114 * GRP_Recency3 + -0.1829690397052 * GRP_Recency4 ;
766670    +   H12  =    -0.44053040668419 * GRP_AcceptedCmp52  +     0.39130488780547 *
766671    +        GRP_Frq2  +    -0.05339083882864 * GRP_Frq3  +     0.00231451089906 *
766672    +        GRP_Frq4  +      0.5831587240061 * GRP_Income2
766673    +          +     0.54852848249408 * GRP_Income3  +     -0.4598479622494 *
766674    +        GRP_Income4  +     0.04804779326921 * GRP_Mnt2
766675    +          +    -0.18484356222731 * GRP_Mnt3  +     0.03549703658034 * GRP_Mnt4
766676    +          +     0.39885742453554 * GRP_MntFishProducts2
766677    +          +     0.15761355687754 * GRP_MntFishProducts3
766678    +          +    -0.21271471925571 * GRP_MntFishProducts4
766679    +          +     -0.1972927903123 * GRP_MntGoldProds2
766680    +          +     0.03399122417272 * GRP_MntGoldProds3
766681    +          +    -0.02558670857298 * GRP_MntGoldProds4
766682    +          +    -0.41984327217018 * GRP_MntMeatProducts2
766683    +          +     0.05051071020912 * GRP_MntMeatProducts3
766684    +          +     0.02213191751142 * GRP_MntMeatProducts4
766685    +          +     0.27725513562646 * GRP_MntWines2  +    -0.13825638111274 *
766686    +        GRP_MntWines3  +     0.10174302336793 * GRP_MntWines4
766687    +          +    -0.13050806508623 * GRP_NumCatalogPurchases3
766688    +          +     0.18000903281461 * GRP_NumCatalogPurchases4
766689    +          +     -0.5134802042985 * GRP_NumDistPurchases2
766690    +          +     -0.0517830924312 * GRP_NumDistPurchases3
766691    +          +    -0.16980153882394 * GRP_NumDistPurchases4
766692    +          +     0.03868274112159 * GRP_NumWebPurchases2
766693    +          +     0.16193614709489 * GRP_NumWebPurchases3
766694    +          +      0.0269423998237 * GRP_NumWebPurchases4
766695    +          +    -0.32452106975443 * GRP_RFMstat2  +    -0.21611965835421 *
766696    +        GRP_RFMstat3  +    -0.11926055719327 * GRP_RFMstat4
766697    +          +     0.21187682021828 * GRP_RMntFrq2  +     0.08976835265364 *
766698    +        GRP_RMntFrq3  +    -0.20787348857522 * GRP_RMntFrq4
766699    +          +     0.68804853934306 * GRP_Recency2  +     0.17422440486451 *
766700    +        GRP_Recency3  +    -0.18452599729833 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.44053040668419 * GRP_AcceptedCmp52 + 0.39130488780547 * 
GRP_Frq2 + -0.05339083882864 * GRP_Frq3 + 0.00231451089906 * GRP_Frq4 + 0.5831587240061 * 
GRP_Income2 + 0.54852848249408 * GRP_Income3 + -0.4598479622494 * GRP_Income4 + 
0.04804779326921 * GRP_Mnt2 + -0.18484356222731 * GRP_Mnt3 + 0.03549703658034 * GRP_Mnt4 + 
0.39885742453554 * GRP_MntFishProducts2 + 0.15761355687754 * GRP_MntFishProducts3 + 
-0.21271471925571 * GRP_MntFishProducts4 + -0.1972927903123 * GRP_MntGoldProds2 + 
0.03399122417272 * GRP_MntGoldProds3 + -0.02558670857298 * GRP_MntGoldProds4 + 
-0.41984327217018 * GRP_MntMeatProducts2 + 0.05051071020912 * GRP_MntMeatProducts3 + 
0.02213191751142 * GRP_MntMeatProducts4 + 0.27725513562646 * GRP_MntWines2 + -0.13825638111274 
* GRP_MntWines3 + 0.10174302336793 * GRP_MntWines4 + -0.13050806508623 * 
GRP_NumCatalogPurchases3 + 0.18000903281461 * GRP_NumCatalogPurchases4 + -0.5134802042985 * 
GRP_NumDistPurchases2 + -0.0517830924312 * GRP_NumDistPurchases3 + -0.16980153882394 * 
GRP_NumDistPurchases4 + 0.03868274112159 * GRP_NumWebPurchases2 + 0.16193614709489 * 
GRP_NumWebPurchases3 + 0.0269423998237 * GRP_NumWebPurchases4 + -0.32452106975443 * 
GRP_RFMstat2 + -0.21611965835421 * GRP_RFMstat3 + -0.11926055719327 * GRP_RFMstat4 + 
0.21187682021828 * GRP_RMntFrq2 + 0.08976835265364 * GRP_RMntFrq3 + -0.20787348857522 * 
GRP_RMntFrq4 + 0.68804853934306 * GRP_Recency2 + 0.17422440486451 * GRP_Recency3 + 
-0.18452599729833 * GRP_Recency4 ;
766701    +   H13  =      0.0874014291812 * GRP_AcceptedCmp52  +     0.17304198694157 *
766702    +        GRP_Frq2  +    -0.11491629051719 * GRP_Frq3  +      0.2483225021197 *
766703    +        GRP_Frq4  +    -0.05989120739582 * GRP_Income2
766704    +          +    -0.02732012571019 * GRP_Income3  +     0.20807069048689 *
766705    +        GRP_Income4  +     0.33666649935924 * GRP_Mnt2
766706    +          +      0.0642358727731 * GRP_Mnt3  +    -0.22568229208697 * GRP_Mnt4
766707    +          +    -0.12147573127033 * GRP_MntFishProducts2
766708    +          +    -0.19323607018295 * GRP_MntFishProducts3
766709    +          +     0.25863847748437 * GRP_MntFishProducts4
766710    +          +     -0.0126645668436 * GRP_MntGoldProds2
766711    +          +    -0.11323357258997 * GRP_MntGoldProds3
766712    +          +    -0.11250689806163 * GRP_MntGoldProds4
766713    +          +    -0.12545641044895 * GRP_MntMeatProducts2
766714    +          +    -0.04305442792903 * GRP_MntMeatProducts3
766715    +          +    -0.32146302728834 * GRP_MntMeatProducts4
766716    +          +    -0.00148263872712 * GRP_MntWines2  +     0.11028478479749 *
766717    +        GRP_MntWines3  +    -0.02542826671873 * GRP_MntWines4
766718    +          +    -0.03468933342665 * GRP_NumCatalogPurchases3
766719    +          +     0.06081255664838 * GRP_NumCatalogPurchases4
766720    +          +     0.09115957554684 * GRP_NumDistPurchases2
766721    +          +    -0.19448624046951 * GRP_NumDistPurchases3
766722    +          +     0.18401866660579 * GRP_NumDistPurchases4
766723    +          +    -0.30934548179162 * GRP_NumWebPurchases2
766724    +          +    -0.15569430268918 * GRP_NumWebPurchases3
766725    +          +    -0.15912290396059 * GRP_NumWebPurchases4
766726    +          +      0.3307600563141 * GRP_RFMstat2  +    -0.22709032656384 *
766727    +        GRP_RFMstat3  +      0.0673885738463 * GRP_RFMstat4
766728    +          +    -0.34782658221729 * GRP_RMntFrq2  +    -0.37292996378384 *
766729    +        GRP_RMntFrq3  +    -0.19656647007955 * GRP_RMntFrq4
766730    +          +    -0.48292133112766 * GRP_Recency2  +    -0.19998163272412 *
766731    +        GRP_Recency3  +     0.04020306752703 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.0874014291812 * GRP_AcceptedCmp52 + 0.17304198694157 * GRP_Frq2 
+ -0.11491629051719 * GRP_Frq3 + 0.2483225021197 * GRP_Frq4 + -0.05989120739582 * GRP_Income2 
+ -0.02732012571019 * GRP_Income3 + 0.20807069048689 * GRP_Income4 + 0.33666649935924 * 
GRP_Mnt2 + 0.0642358727731 * GRP_Mnt3 + -0.22568229208697 * GRP_Mnt4 + -0.12147573127033 * 
GRP_MntFishProducts2 + -0.19323607018295 * GRP_MntFishProducts3 + 0.25863847748437 * 
GRP_MntFishProducts4 + -0.0126645668436 * GRP_MntGoldProds2 + -0.11323357258997 * 
GRP_MntGoldProds3 + -0.11250689806163 * GRP_MntGoldProds4 + -0.12545641044895 * 
GRP_MntMeatProducts2 + -0.04305442792903 * GRP_MntMeatProducts3 + -0.32146302728834 * 
GRP_MntMeatProducts4 + -0.00148263872712 * GRP_MntWines2 + 0.11028478479749 * GRP_MntWines3 + 
-0.02542826671873 * GRP_MntWines4 + -0.03468933342665 * GRP_NumCatalogPurchases3 + 
0.06081255664838 * GRP_NumCatalogPurchases4 + 0.09115957554684 * GRP_NumDistPurchases2 + 
-0.19448624046951 * GRP_NumDistPurchases3 + 0.18401866660579 * GRP_NumDistPurchases4 + 
-0.30934548179162 * GRP_NumWebPurchases2 + -0.15569430268918 * GRP_NumWebPurchases3 + 
-0.15912290396059 * GRP_NumWebPurchases4 + 0.3307600563141 * GRP_RFMstat2 + -0.22709032656384 
* GRP_RFMstat3 + 0.0673885738463 * GRP_RFMstat4 + -0.34782658221729 * GRP_RMntFrq2 + 
-0.37292996378384 * GRP_RMntFrq3 + -0.19656647007955 * GRP_RMntFrq4 + -0.48292133112766 * 
GRP_Recency2 + -0.19998163272412 * GRP_Recency3 + 0.04020306752703 * GRP_Recency4 ;
766732    +   H14  =    -0.06535462604618 * GRP_AcceptedCmp52  +    -0.02538966501603 *
766733    +        GRP_Frq2  +    -0.37465930862485 * GRP_Frq3  +    -0.09115714895281 *
766734    +        GRP_Frq4  +    -0.19377207233976 * GRP_Income2
766735    +          +     0.19699955617479 * GRP_Income3  +     0.18620312701109 *
766736    +        GRP_Income4  +    -0.07918752617024 * GRP_Mnt2
766737    +          +    -0.15791729955854 * GRP_Mnt3  +     0.05785915035978 * GRP_Mnt4
766738    +          +    -0.15621920593365 * GRP_MntFishProducts2
766739    +          +     0.18156570239129 * GRP_MntFishProducts3
766740    +          +    -0.19268366331472 * GRP_MntFishProducts4
766741    +          +     0.17003324763884 * GRP_MntGoldProds2
766742    +          +    -0.24315925332299 * GRP_MntGoldProds3
766743    +          +    -0.19433542142509 * GRP_MntGoldProds4
766744    +          +     0.48300099715349 * GRP_MntMeatProducts2
766745    +          +     0.04287374992788 * GRP_MntMeatProducts3
766746    +          +    -0.14772483570864 * GRP_MntMeatProducts4
766747    +          +    -0.35939710533055 * GRP_MntWines2  +      0.0814263252657 *
766748    +        GRP_MntWines3  +     0.11455106831693 * GRP_MntWines4
766749    +          +     0.28909689894797 * GRP_NumCatalogPurchases3
766750    +          +     0.35798075318799 * GRP_NumCatalogPurchases4
766751    +          +     0.26175622277157 * GRP_NumDistPurchases2
766752    +          +    -0.28134203235556 * GRP_NumDistPurchases3
766753    +          +     -0.0849885153607 * GRP_NumDistPurchases4
766754    +          +    -0.00363026409862 * GRP_NumWebPurchases2
766755    +          +    -0.18458881565534 * GRP_NumWebPurchases3
766756    +          +    -0.00054495066636 * GRP_NumWebPurchases4
766757    +          +     0.02464665365087 * GRP_RFMstat2  +    -0.04709787167688 *
766758    +        GRP_RFMstat3  +    -0.21485621631981 * GRP_RFMstat4
766759    +          +      0.0421527075159 * GRP_RMntFrq2  +     0.12266531817421 *
766760    +        GRP_RMntFrq3  +     0.34319246452663 * GRP_RMntFrq4
766761    +          +    -0.42128751178743 * GRP_Recency2  +    -0.03341002800803 *
766762    +        GRP_Recency3  +    -0.00550102888585 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.06535462604618 * GRP_AcceptedCmp52 + -0.02538966501603 * 
GRP_Frq2 + -0.37465930862485 * GRP_Frq3 + -0.09115714895281 * GRP_Frq4 + -0.19377207233976 * 
GRP_Income2 + 0.19699955617479 * GRP_Income3 + 0.18620312701109 * GRP_Income4 + 
-0.07918752617024 * GRP_Mnt2 + -0.15791729955854 * GRP_Mnt3 + 0.05785915035978 * GRP_Mnt4 + 
-0.15621920593365 * GRP_MntFishProducts2 + 0.18156570239129 * GRP_MntFishProducts3 + 
-0.19268366331472 * GRP_MntFishProducts4 + 0.17003324763884 * GRP_MntGoldProds2 + 
-0.24315925332299 * GRP_MntGoldProds3 + -0.19433542142509 * GRP_MntGoldProds4 + 
0.48300099715349 * GRP_MntMeatProducts2 + 0.04287374992788 * GRP_MntMeatProducts3 + 
-0.14772483570864 * GRP_MntMeatProducts4 + -0.35939710533055 * GRP_MntWines2 + 0.0814263252657 
* GRP_MntWines3 + 0.11455106831693 * GRP_MntWines4 + 0.28909689894797 * 
GRP_NumCatalogPurchases3 + 0.35798075318799 * GRP_NumCatalogPurchases4 + 0.26175622277157 * 
GRP_NumDistPurchases2 + -0.28134203235556 * GRP_NumDistPurchases3 + -0.0849885153607 * 
GRP_NumDistPurchases4 + -0.00363026409862 * GRP_NumWebPurchases2 + -0.18458881565534 * 
GRP_NumWebPurchases3 + -0.00054495066636 * GRP_NumWebPurchases4 + 0.02464665365087 * 
GRP_RFMstat2 + -0.04709787167688 * GRP_RFMstat3 + -0.21485621631981 * GRP_RFMstat4 + 
0.0421527075159 * GRP_RMntFrq2 + 0.12266531817421 * GRP_RMntFrq3 + 0.34319246452663 * 
GRP_RMntFrq4 + -0.42128751178743 * GRP_Recency2 + -0.03341002800803 * GRP_Recency3 + 
-0.00550102888585 * GRP_Recency4 ;
766763    +   H15  =     0.20080324976316 * GRP_AcceptedCmp52  +     0.03346464595946 *
766764    +        GRP_Frq2  +    -0.46550936235158 * GRP_Frq3  +     0.11038114045006 *
766765    +        GRP_Frq4  +     0.10073875117437 * GRP_Income2
766766    +          +    -0.22683871345668 * GRP_Income3  +    -0.09384548786395 *
766767    +        GRP_Income4  +     0.43323607707701 * GRP_Mnt2
766768    +          +     0.27829480348267 * GRP_Mnt3  +     0.12638599389415 * GRP_Mnt4
766769    +          +     0.02417129110075 * GRP_MntFishProducts2
766770    +          +      0.2545897829616 * GRP_MntFishProducts3
766771    +          +    -0.29458064807823 * GRP_MntFishProducts4
766772    +          +    -0.15364697476117 * GRP_MntGoldProds2
766773    +          +      0.3170384910511 * GRP_MntGoldProds3
766774    +          +     0.43731794737697 * GRP_MntGoldProds4
766775    +          +     0.51501086483907 * GRP_MntMeatProducts2
766776    +          +     0.15231215210229 * GRP_MntMeatProducts3
766777    +          +    -0.05381144096743 * GRP_MntMeatProducts4
766778    +          +     0.13508510112509 * GRP_MntWines2  +    -0.33096430220175 *
766779    +        GRP_MntWines3  +     0.49248642584759 * GRP_MntWines4
766780    +          +     0.25386528096127 * GRP_NumCatalogPurchases3
766781    +          +     0.31775128798882 * GRP_NumCatalogPurchases4
766782    +          +     0.26152832976302 * GRP_NumDistPurchases2
766783    +          +     0.00160473771196 * GRP_NumDistPurchases3
766784    +          +      0.0013330753294 * GRP_NumDistPurchases4
766785    +          +     0.23697025371136 * GRP_NumWebPurchases2
766786    +          +     0.12394312604839 * GRP_NumWebPurchases3
766787    +          +     0.29358944454399 * GRP_NumWebPurchases4
766788    +          +      0.2711027918467 * GRP_RFMstat2  +    -0.07642391618094 *
766789    +        GRP_RFMstat3  +     0.14712184054126 * GRP_RFMstat4
766790    +          +     0.11431001806439 * GRP_RMntFrq2  +     0.06273949214332 *
766791    +        GRP_RMntFrq3  +     0.44954334169592 * GRP_RMntFrq4
766792    +          +    -0.10299484961132 * GRP_Recency2  +    -0.00660050077332 *
766793    +        GRP_Recency3  +     0.10477819043432 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.20080324976316 * GRP_AcceptedCmp52 + 0.03346464595946 * GRP_Frq2 
+ -0.46550936235158 * GRP_Frq3 + 0.11038114045006 * GRP_Frq4 + 0.10073875117437 * GRP_Income2 
+ -0.22683871345668 * GRP_Income3 + -0.09384548786395 * GRP_Income4 + 0.43323607707701 * 
GRP_Mnt2 + 0.27829480348267 * GRP_Mnt3 + 0.12638599389415 * GRP_Mnt4 + 0.02417129110075 * 
GRP_MntFishProducts2 + 0.2545897829616 * GRP_MntFishProducts3 + -0.29458064807823 * 
GRP_MntFishProducts4 + -0.15364697476117 * GRP_MntGoldProds2 + 0.3170384910511 * 
GRP_MntGoldProds3 + 0.43731794737697 * GRP_MntGoldProds4 + 0.51501086483907 * 
GRP_MntMeatProducts2 + 0.15231215210229 * GRP_MntMeatProducts3 + -0.05381144096743 * 
GRP_MntMeatProducts4 + 0.13508510112509 * GRP_MntWines2 + -0.33096430220175 * GRP_MntWines3 + 
0.49248642584759 * GRP_MntWines4 + 0.25386528096127 * GRP_NumCatalogPurchases3 + 
0.31775128798882 * GRP_NumCatalogPurchases4 + 0.26152832976302 * GRP_NumDistPurchases2 + 
0.00160473771196 * GRP_NumDistPurchases3 + 0.0013330753294 * GRP_NumDistPurchases4 + 
0.23697025371136 * GRP_NumWebPurchases2 + 0.12394312604839 * GRP_NumWebPurchases3 + 
0.29358944454399 * GRP_NumWebPurchases4 + 0.2711027918467 * GRP_RFMstat2 + -0.07642391618094 * 
GRP_RFMstat3 + 0.14712184054126 * GRP_RFMstat4 + 0.11431001806439 * GRP_RMntFrq2 + 
0.06273949214332 * GRP_RMntFrq3 + 0.44954334169592 * GRP_RMntFrq4 + -0.10299484961132 * 
GRP_Recency2 + -0.00660050077332 * GRP_Recency3 + 0.10477819043432 * GRP_Recency4 ;
766794    +   H16  =      0.7597594494859 * GRP_AcceptedCmp52  +    -0.32376689593056 *
766795    +        GRP_Frq2  +    -0.07779183366163 * GRP_Frq3  +     0.11273534310895 *
766796    +        GRP_Frq4  +    -0.36089895624306 * GRP_Income2
766797    +          +    -0.38271011363759 * GRP_Income3  +     0.33282176047548 *
766798    +        GRP_Income4  +    -0.13854310872224 * GRP_Mnt2
766799    +          +    -0.31005746238746 * GRP_Mnt3  +     0.02082673800287 * GRP_Mnt4
766800    +          +     0.01224737349632 * GRP_MntFishProducts2
766801    +          +    -0.19458526368147 * GRP_MntFishProducts3
766802    +          +    -0.25187479317784 * GRP_MntFishProducts4
766803    +          +     0.01924229245332 * GRP_MntGoldProds2
766804    +          +     0.01852658027428 * GRP_MntGoldProds3
766805    +          +    -0.23305256947549 * GRP_MntGoldProds4
766806    +          +     0.13401051842966 * GRP_MntMeatProducts2
766807    +          +     0.27193108385041 * GRP_MntMeatProducts3
766808    +          +     0.01379422261623 * GRP_MntMeatProducts4
766809    +          +    -0.57181882470311 * GRP_MntWines2  +    -0.57187059852098 *
766810    +        GRP_MntWines3  +     0.30882985081217 * GRP_MntWines4
766811    +          +     0.49912000555763 * GRP_NumCatalogPurchases3
766812    +          +    -0.04354876738665 * GRP_NumCatalogPurchases4
766813    +          +     0.34941540707612 * GRP_NumDistPurchases2
766814    +          +     0.32691169055841 * GRP_NumDistPurchases3
766815    +          +    -0.09211947503636 * GRP_NumDistPurchases4
766816    +          +     0.23482266977456 * GRP_NumWebPurchases2
766817    +          +     0.33507315521476 * GRP_NumWebPurchases3
766818    +          +    -0.08817191120299 * GRP_NumWebPurchases4
766819    +          +     0.02374098589478 * GRP_RFMstat2  +    -0.23629328969151 *
766820    +        GRP_RFMstat3  +    -0.52724215414655 * GRP_RFMstat4
766821    +          +    -0.11172774703142 * GRP_RMntFrq2  +    -0.23930023577086 *
766822    +        GRP_RMntFrq3  +    -0.17783974029566 * GRP_RMntFrq4
766823    +          +    -0.09948595230391 * GRP_Recency2  +    -0.15957779348689 *
766824    +        GRP_Recency3  +     0.12430840578537 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = 0.7597594494859 * GRP_AcceptedCmp52 + -0.32376689593056 * GRP_Frq2 
+ -0.07779183366163 * GRP_Frq3 + 0.11273534310895 * GRP_Frq4 + -0.36089895624306 * GRP_Income2 
+ -0.38271011363759 * GRP_Income3 + 0.33282176047548 * GRP_Income4 + -0.13854310872224 * 
GRP_Mnt2 + -0.31005746238746 * GRP_Mnt3 + 0.02082673800287 * GRP_Mnt4 + 0.01224737349632 * 
GRP_MntFishProducts2 + -0.19458526368147 * GRP_MntFishProducts3 + -0.25187479317784 * 
GRP_MntFishProducts4 + 0.01924229245332 * GRP_MntGoldProds2 + 0.01852658027428 * 
GRP_MntGoldProds3 + -0.23305256947549 * GRP_MntGoldProds4 + 0.13401051842966 * 
GRP_MntMeatProducts2 + 0.27193108385041 * GRP_MntMeatProducts3 + 0.01379422261623 * 
GRP_MntMeatProducts4 + -0.57181882470311 * GRP_MntWines2 + -0.57187059852098 * GRP_MntWines3 + 
0.30882985081217 * GRP_MntWines4 + 0.49912000555763 * GRP_NumCatalogPurchases3 + 
-0.04354876738665 * GRP_NumCatalogPurchases4 + 0.34941540707612 * GRP_NumDistPurchases2 + 
0.32691169055841 * GRP_NumDistPurchases3 + -0.09211947503636 * GRP_NumDistPurchases4 + 
0.23482266977456 * GRP_NumWebPurchases2 + 0.33507315521476 * GRP_NumWebPurchases3 + 
-0.08817191120299 * GRP_NumWebPurchases4 + 0.02374098589478 * GRP_RFMstat2 + -0.23629328969151 
* GRP_RFMstat3 + -0.52724215414655 * GRP_RFMstat4 + -0.11172774703142 * GRP_RMntFrq2 + 
-0.23930023577086 * GRP_RMntFrq3 + -0.17783974029566 * GRP_RMntFrq4 + -0.09948595230391 * 
GRP_Recency2 + -0.15957779348689 * GRP_Recency3 + 0.12430840578537 * GRP_Recency4 ;
766825    +   H11  =    -0.83610777610194 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.83610777610194 + H11 ;
766826    +   H12  =     0.10079183797017 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.10079183797017 + H12 ;
766827    +   H13  =    -1.02827583788856 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.02827583788856 + H13 ;
766828    +   H14  =    -0.61336153955727 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.61336153955727 + H14 ;
766829    +   H15  =      0.2253118259528 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.2253118259528 + H15 ;
766830    +   H16  =     0.92538506927963 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.92538506927963 + H16 ;
766831    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
766832    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
766833    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
766834    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
766835    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
766836    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
766837    +END;
MPRINT(EM_DIAGRAM):   END;
766838    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
766839    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
766840    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
766841    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
766842    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
766843    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
766844    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
766845    +END;
MPRINT(EM_DIAGRAM):   END;
766846    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766847    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
766848    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766849    +
766850    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
766851    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
766852    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
766853    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
766854    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
766855    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
766856    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
766857    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
766858    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
766859    +end;
MPRINT(EM_DIAGRAM):   end;
766860    +else do;
MPRINT(EM_DIAGRAM):   else do;
766861    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
766862    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
766863    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
766864    +   end;
MPRINT(EM_DIAGRAM):   end;
766865    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
766866    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
766867    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
766868    +   end;
MPRINT(EM_DIAGRAM):   end;
766869    +   else do;
MPRINT(EM_DIAGRAM):   else do;
766870    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
766871    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
766872    +   end;
MPRINT(EM_DIAGRAM):   end;
766873    +end;
MPRINT(EM_DIAGRAM):   end;
766874    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
766875    +   P_DepVar1  =    -0.23603747173409 * H11  +     2.21167504352097 * H12
766876    +          +    -0.73919409105284 * H13  +     -1.1148994433356 * H14
766877    +          +    -1.58525957527132 * H15  +    -1.77364534531332 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23603747173409 * H11 + 2.21167504352097 * H12 + 
-0.73919409105284 * H13 + -1.1148994433356 * H14 + -1.58525957527132 * H15 + -1.77364534531332 
* H16 ;
766878    +   P_DepVar1  =    -1.69291771072924 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69291771072924 + P_DepVar1 ;
766879    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
766880    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
766881    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
766882    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
766883    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
766884    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
766885    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
766886    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
766887    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
766888    +END;
MPRINT(EM_DIAGRAM):   END;
766889    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
766890    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
766891    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
766892    +END;
MPRINT(EM_DIAGRAM):   END;
766893    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
766894    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
766895    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
766896    +END;
MPRINT(EM_DIAGRAM):   END;
766897    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
766898    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
766899    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
766900    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
766901    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
766902    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
766903    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
766904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766905    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
766906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
766907    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
766908    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
766909    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
766910    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
766911    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
766912    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
766913    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
766914    +END;
MPRINT(EM_DIAGRAM):   END;
766915    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
766916    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
766917    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
766918    +drop
766919    +H11
766920    +H12
766921    +H13
766922    +H14
766923    +H15
766924    +H16
766925    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
766926    +* Renaming variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural23;
766927    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766928    +* Renaming Posterior variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural23;
766929    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766930    +drop Neural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar1;
766931    +Neural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar1 = P_DepVar1;
766932    +drop Neural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar0;
766933    +Neural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar0 = P_DepVar0;
766934    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766935    +* Renaming _WARN_ variable for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural23;
766936    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766937    +length Neural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural23_WARN_ $4;
766938    +drop Neural23_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural23_WARN_;
766939    +Neural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural23_WARN_ = _WARN_;
766940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766941    +* Ensmbl3: Scoring Code of model 9 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 9 of 9;
766942    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766943    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766944    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
766945    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
766946    +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
766947    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
766948    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
766949    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
766950    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
766951    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
766952    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
766953    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
766954    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
766955    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
766956    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
766957    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
766958    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
766959    +LENGTH _WARN_ $4
766960    +      F_DepVar  $ 12
766961    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
766962    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
766963    +
766964    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
766965    +
766966    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
766967    +
766968    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
766969    +
766970    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
766971    +
766972    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
766973    +
766974    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
766975    +
766976    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
766977    +
766978    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
766979    +
766980    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
766981    +
766982    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
766983    +
766984    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
766985    +
766986    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
766987    +
766988    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
766989    +
766990    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
766991    +
766992    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
766993    +
766994    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
766995    +
766996    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
766997    +
766998    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
766999    +
767000    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
767001    +
767002    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
767003    +
767004    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
767005    +
767006    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
767007    +
767008    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
767009    +
767010    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
767011    +
767012    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
767013    +
767014    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
767015    +
767016    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
767017    +
767018    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
767019    +
767020    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
767021    +
767022    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
767023    +
767024    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
767025    +
767026    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
767027    +
767028    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
767029    +
767030    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
767031    +
767032    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
767033    +
767034    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
767035    +
767036    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
767037    +
767038    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
767039    +
767040    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
767041    +
767042    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
767043    +
767044    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
767045    +
767046    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
767047    +
767048    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
767049    +
767050    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
767051    +
767052    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
767053    +
767054    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
767055    +
767056    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
767057    +
767058    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
767059    +
767060    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
767061    +
767062    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
767063    +
767064    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
767065    +
767066    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
767067    +
767068    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
767069    +
767070    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
767071    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
767072    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
767073    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
767074    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767075    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767076    +end;
MPRINT(EM_DIAGRAM):   end;
767077    +else do;
MPRINT(EM_DIAGRAM):   else do;
767078    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767079    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
767080    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767081    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
767082    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
767083    +   end;
MPRINT(EM_DIAGRAM):   end;
767084    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
767085    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
767086    +   end;
MPRINT(EM_DIAGRAM):   end;
767087    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767088    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
767089    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767090    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767091    +   end;
MPRINT(EM_DIAGRAM):   end;
767092    +end;
MPRINT(EM_DIAGRAM):   end;
767093    +
767094    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
767095    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
767096    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
767097    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
767098    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
767099    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
767100    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767101    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767102    +end;
MPRINT(EM_DIAGRAM):   end;
767103    +else do;
MPRINT(EM_DIAGRAM):   else do;
767104    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767105    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
767106    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767107    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
767108    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
767109    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
767110    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
767111    +   end;
MPRINT(EM_DIAGRAM):   end;
767112    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
767113    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
767114    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
767115    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
767116    +   end;
MPRINT(EM_DIAGRAM):   end;
767117    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767118    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
767119    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
767120    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
767121    +   end;
MPRINT(EM_DIAGRAM):   end;
767122    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767123    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
767124    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
767125    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
767126    +   end;
MPRINT(EM_DIAGRAM):   end;
767127    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767128    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
767129    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
767130    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
767131    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767132    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767133    +   end;
MPRINT(EM_DIAGRAM):   end;
767134    +end;
MPRINT(EM_DIAGRAM):   end;
767135    +
767136    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
767137    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
767138    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
767139    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
767140    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
767141    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
767142    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767143    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767144    +end;
MPRINT(EM_DIAGRAM):   end;
767145    +else do;
MPRINT(EM_DIAGRAM):   else do;
767146    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767147    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
767148    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767149    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
767150    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
767151    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
767152    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
767153    +   end;
MPRINT(EM_DIAGRAM):   end;
767154    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767155    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
767156    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
767157    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
767158    +   end;
MPRINT(EM_DIAGRAM):   end;
767159    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
767160    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
767161    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
767162    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
767163    +   end;
MPRINT(EM_DIAGRAM):   end;
767164    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767165    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
767166    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
767167    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
767168    +   end;
MPRINT(EM_DIAGRAM):   end;
767169    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767170    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
767171    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
767172    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
767173    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767174    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767175    +   end;
MPRINT(EM_DIAGRAM):   end;
767176    +end;
MPRINT(EM_DIAGRAM):   end;
767177    +
767178    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
767179    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
767180    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
767181    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
767182    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
767183    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
767184    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767185    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767186    +end;
MPRINT(EM_DIAGRAM):   end;
767187    +else do;
MPRINT(EM_DIAGRAM):   else do;
767188    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767189    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
767190    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767191    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767192    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
767193    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
767194    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
767195    +   end;
MPRINT(EM_DIAGRAM):   end;
767196    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767197    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
767198    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
767199    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
767200    +   end;
MPRINT(EM_DIAGRAM):   end;
767201    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767202    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
767203    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
767204    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
767205    +   end;
MPRINT(EM_DIAGRAM):   end;
767206    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767207    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
767208    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
767209    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
767210    +   end;
MPRINT(EM_DIAGRAM):   end;
767211    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767212    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
767213    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
767214    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
767215    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767216    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767217    +   end;
MPRINT(EM_DIAGRAM):   end;
767218    +end;
MPRINT(EM_DIAGRAM):   end;
767219    +
767220    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
767221    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
767222    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
767223    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
767224    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
767225    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
767226    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767227    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767228    +end;
MPRINT(EM_DIAGRAM):   end;
767229    +else do;
MPRINT(EM_DIAGRAM):   else do;
767230    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767231    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
767232    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767233    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767234    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
767235    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
767236    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
767237    +   end;
MPRINT(EM_DIAGRAM):   end;
767238    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767239    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
767240    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
767241    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
767242    +   end;
MPRINT(EM_DIAGRAM):   end;
767243    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767244    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
767245    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
767246    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
767247    +   end;
MPRINT(EM_DIAGRAM):   end;
767248    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767249    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
767250    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
767251    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
767252    +   end;
MPRINT(EM_DIAGRAM):   end;
767253    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767254    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
767255    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
767256    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
767257    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767258    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767259    +   end;
MPRINT(EM_DIAGRAM):   end;
767260    +end;
MPRINT(EM_DIAGRAM):   end;
767261    +
767262    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
767263    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
767264    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
767265    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
767266    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
767267    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
767268    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767269    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767270    +end;
MPRINT(EM_DIAGRAM):   end;
767271    +else do;
MPRINT(EM_DIAGRAM):   else do;
767272    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767273    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
767274    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767275    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767276    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
767277    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
767278    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
767279    +   end;
MPRINT(EM_DIAGRAM):   end;
767280    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767281    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
767282    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
767283    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
767284    +   end;
MPRINT(EM_DIAGRAM):   end;
767285    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767286    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
767287    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
767288    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
767289    +   end;
MPRINT(EM_DIAGRAM):   end;
767290    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767291    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
767292    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
767293    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
767294    +   end;
MPRINT(EM_DIAGRAM):   end;
767295    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767296    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
767297    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
767298    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
767299    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767300    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767301    +   end;
MPRINT(EM_DIAGRAM):   end;
767302    +end;
MPRINT(EM_DIAGRAM):   end;
767303    +
767304    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
767305    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
767306    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
767307    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
767308    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
767309    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
767310    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767311    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767312    +end;
MPRINT(EM_DIAGRAM):   end;
767313    +else do;
MPRINT(EM_DIAGRAM):   else do;
767314    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767315    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
767316    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767317    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767318    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
767319    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
767320    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
767321    +   end;
MPRINT(EM_DIAGRAM):   end;
767322    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767323    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
767324    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
767325    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
767326    +   end;
MPRINT(EM_DIAGRAM):   end;
767327    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767328    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
767329    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
767330    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
767331    +   end;
MPRINT(EM_DIAGRAM):   end;
767332    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767333    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
767334    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
767335    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
767336    +   end;
MPRINT(EM_DIAGRAM):   end;
767337    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767338    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
767339    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
767340    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
767341    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767342    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767343    +   end;
MPRINT(EM_DIAGRAM):   end;
767344    +end;
MPRINT(EM_DIAGRAM):   end;
767345    +
767346    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
767347    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
767348    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
767349    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
767350    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
767351    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
767352    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767353    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767354    +end;
MPRINT(EM_DIAGRAM):   end;
767355    +else do;
MPRINT(EM_DIAGRAM):   else do;
767356    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767357    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
767358    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767359    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767360    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
767361    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
767362    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
767363    +   end;
MPRINT(EM_DIAGRAM):   end;
767364    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767365    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
767366    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
767367    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
767368    +   end;
MPRINT(EM_DIAGRAM):   end;
767369    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767370    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
767371    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
767372    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
767373    +   end;
MPRINT(EM_DIAGRAM):   end;
767374    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767375    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
767376    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
767377    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
767378    +   end;
MPRINT(EM_DIAGRAM):   end;
767379    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767380    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
767381    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
767382    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
767383    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767384    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767385    +   end;
MPRINT(EM_DIAGRAM):   end;
767386    +end;
MPRINT(EM_DIAGRAM):   end;
767387    +
767388    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
767389    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
767390    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
767391    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
767392    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
767393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767395    +end;
MPRINT(EM_DIAGRAM):   end;
767396    +else do;
MPRINT(EM_DIAGRAM):   else do;
767397    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767398    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
767399    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767400    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767401    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
767402    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
767403    +   end;
MPRINT(EM_DIAGRAM):   end;
767404    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767405    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
767406    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
767407    +   end;
MPRINT(EM_DIAGRAM):   end;
767408    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767409    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
767410    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
767411    +   end;
MPRINT(EM_DIAGRAM):   end;
767412    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767413    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
767414    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
767415    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767416    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767417    +   end;
MPRINT(EM_DIAGRAM):   end;
767418    +end;
MPRINT(EM_DIAGRAM):   end;
767419    +
767420    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
767421    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
767422    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
767423    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
767424    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
767425    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
767426    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767427    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767428    +end;
MPRINT(EM_DIAGRAM):   end;
767429    +else do;
MPRINT(EM_DIAGRAM):   else do;
767430    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767431    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
767432    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767433    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
767434    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
767435    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
767436    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
767437    +   end;
MPRINT(EM_DIAGRAM):   end;
767438    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767439    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
767440    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
767441    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
767442    +   end;
MPRINT(EM_DIAGRAM):   end;
767443    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767444    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
767445    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
767446    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
767447    +   end;
MPRINT(EM_DIAGRAM):   end;
767448    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
767449    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
767450    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
767451    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
767452    +   end;
MPRINT(EM_DIAGRAM):   end;
767453    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767454    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
767455    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
767456    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
767457    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767458    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767459    +   end;
MPRINT(EM_DIAGRAM):   end;
767460    +end;
MPRINT(EM_DIAGRAM):   end;
767461    +
767462    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
767463    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
767464    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
767465    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
767466    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
767467    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
767468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767470    +end;
MPRINT(EM_DIAGRAM):   end;
767471    +else do;
MPRINT(EM_DIAGRAM):   else do;
767472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767473    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
767474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767475    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767476    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
767477    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
767478    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
767479    +   end;
MPRINT(EM_DIAGRAM):   end;
767480    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767481    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
767482    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
767483    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
767484    +   end;
MPRINT(EM_DIAGRAM):   end;
767485    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767486    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
767487    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
767488    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
767489    +   end;
MPRINT(EM_DIAGRAM):   end;
767490    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767491    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
767492    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
767493    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
767494    +   end;
MPRINT(EM_DIAGRAM):   end;
767495    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767496    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
767497    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
767498    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
767499    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767500    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767501    +   end;
MPRINT(EM_DIAGRAM):   end;
767502    +end;
MPRINT(EM_DIAGRAM):   end;
767503    +
767504    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
767505    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
767506    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
767507    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
767508    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
767509    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
767510    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767511    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767512    +end;
MPRINT(EM_DIAGRAM):   end;
767513    +else do;
MPRINT(EM_DIAGRAM):   else do;
767514    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767515    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
767516    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767517    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
767518    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
767519    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
767520    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
767521    +   end;
MPRINT(EM_DIAGRAM):   end;
767522    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
767523    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
767524    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
767525    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
767526    +   end;
MPRINT(EM_DIAGRAM):   end;
767527    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767528    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
767529    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
767530    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
767531    +   end;
MPRINT(EM_DIAGRAM):   end;
767532    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767533    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
767534    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
767535    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
767536    +   end;
MPRINT(EM_DIAGRAM):   end;
767537    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767538    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
767539    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
767540    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
767541    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767542    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767543    +   end;
MPRINT(EM_DIAGRAM):   end;
767544    +end;
MPRINT(EM_DIAGRAM):   end;
767545    +
767546    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
767547    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
767548    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
767549    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
767550    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
767551    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
767552    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767553    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767554    +end;
MPRINT(EM_DIAGRAM):   end;
767555    +else do;
MPRINT(EM_DIAGRAM):   else do;
767556    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767557    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
767558    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767559    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
767560    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
767561    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
767562    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
767563    +   end;
MPRINT(EM_DIAGRAM):   end;
767564    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
767565    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
767566    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
767567    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
767568    +   end;
MPRINT(EM_DIAGRAM):   end;
767569    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767570    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
767571    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
767572    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
767573    +   end;
MPRINT(EM_DIAGRAM):   end;
767574    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767575    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
767576    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
767577    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
767578    +   end;
MPRINT(EM_DIAGRAM):   end;
767579    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767580    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
767581    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
767582    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
767583    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767584    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767585    +   end;
MPRINT(EM_DIAGRAM):   end;
767586    +end;
MPRINT(EM_DIAGRAM):   end;
767587    +
767588    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
767589    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
767590    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
767591    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
767592    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
767593    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
767594    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
767595    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767596    +end;
MPRINT(EM_DIAGRAM):   end;
767597    +else do;
MPRINT(EM_DIAGRAM):   else do;
767598    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
767599    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
767600    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767601    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
767602    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
767603    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
767604    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
767605    +   end;
MPRINT(EM_DIAGRAM):   end;
767606    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
767607    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
767608    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
767609    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
767610    +   end;
MPRINT(EM_DIAGRAM):   end;
767611    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
767612    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
767613    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
767614    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
767615    +   end;
MPRINT(EM_DIAGRAM):   end;
767616    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
767617    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
767618    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
767619    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
767620    +   end;
MPRINT(EM_DIAGRAM):   end;
767621    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767622    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
767623    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
767624    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
767625    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
767626    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
767627    +   end;
MPRINT(EM_DIAGRAM):   end;
767628    +end;
MPRINT(EM_DIAGRAM):   end;
767629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767630    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
767631    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767633    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
767634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767635    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
767636    +   H11  =     0.04711628818085 * GRP_AcceptedCmp52  +    -0.13027365748107 *
767637    +        GRP_Frq2  +    -0.04632677563882 * GRP_Frq3  +    -0.08320341313947 *
767638    +        GRP_Frq4  +     0.15407011801643 * GRP_Income2
767639    +          +    -0.10383560943317 * GRP_Income3  +    -0.40582360882321 *
767640    +        GRP_Income4  +    -0.00866872751194 * GRP_Mnt2
767641    +          +     0.03835423241766 * GRP_Mnt3  +     0.10111653307734 * GRP_Mnt4
767642    +          +     0.27649544705807 * GRP_MntFishProducts2
767643    +          +     0.03806617200527 * GRP_MntFishProducts3
767644    +          +    -0.14924458232763 * GRP_MntFishProducts4
767645    +          +    -0.61470593668196 * GRP_MntGoldProds2
767646    +          +      0.3229990608995 * GRP_MntGoldProds3
767647    +          +    -0.38604519701302 * GRP_MntGoldProds4
767648    +          +    -0.16788745104812 * GRP_MntMeatProducts2
767649    +          +    -0.02411102582134 * GRP_MntMeatProducts3
767650    +          +     0.20999119459991 * GRP_MntMeatProducts4
767651    +          +     0.00013023256115 * GRP_MntWines2  +    -0.19154805414183 *
767652    +        GRP_MntWines3  +     0.10487287927665 * GRP_MntWines4
767653    +          +    -0.18385399575632 * GRP_NumCatalogPurchases3
767654    +          +     0.26139870297501 * GRP_NumCatalogPurchases4
767655    +          +    -0.45516424216634 * GRP_NumDistPurchases2
767656    +          +    -0.02821228922166 * GRP_NumDistPurchases3
767657    +          +     -0.0277463007541 * GRP_NumDistPurchases4
767658    +          +    -0.20089085216463 * GRP_NumWebPurchases2
767659    +          +     0.25653821989992 * GRP_NumWebPurchases3
767660    +          +    -0.28787845842774 * GRP_NumWebPurchases4
767661    +          +    -0.55935702240721 * GRP_RFMstat2  +     0.06115264011229 *
767662    +        GRP_RFMstat3  +     0.23395576453228 * GRP_RFMstat4
767663    +          +     0.14575536355828 * GRP_RMntFrq2  +    -0.17534689953321 *
767664    +        GRP_RMntFrq3  +     0.02136609987453 * GRP_RMntFrq4
767665    +          +       0.198287170399 * GRP_Recency2  +     0.20837384647001 *
767666    +        GRP_Recency3  +    -0.03491976754069 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.04711628818085 * GRP_AcceptedCmp52 + -0.13027365748107 * 
GRP_Frq2 + -0.04632677563882 * GRP_Frq3 + -0.08320341313947 * GRP_Frq4 + 0.15407011801643 * 
GRP_Income2 + -0.10383560943317 * GRP_Income3 + -0.40582360882321 * GRP_Income4 + 
-0.00866872751194 * GRP_Mnt2 + 0.03835423241766 * GRP_Mnt3 + 0.10111653307734 * GRP_Mnt4 + 
0.27649544705807 * GRP_MntFishProducts2 + 0.03806617200527 * GRP_MntFishProducts3 + 
-0.14924458232763 * GRP_MntFishProducts4 + -0.61470593668196 * GRP_MntGoldProds2 + 
0.3229990608995 * GRP_MntGoldProds3 + -0.38604519701302 * GRP_MntGoldProds4 + 
-0.16788745104812 * GRP_MntMeatProducts2 + -0.02411102582134 * GRP_MntMeatProducts3 + 
0.20999119459991 * GRP_MntMeatProducts4 + 0.00013023256115 * GRP_MntWines2 + -0.19154805414183 
* GRP_MntWines3 + 0.10487287927665 * GRP_MntWines4 + -0.18385399575632 * 
GRP_NumCatalogPurchases3 + 0.26139870297501 * GRP_NumCatalogPurchases4 + -0.45516424216634 * 
GRP_NumDistPurchases2 + -0.02821228922166 * GRP_NumDistPurchases3 + -0.0277463007541 * 
GRP_NumDistPurchases4 + -0.20089085216463 * GRP_NumWebPurchases2 + 0.25653821989992 * 
GRP_NumWebPurchases3 + -0.28787845842774 * GRP_NumWebPurchases4 + -0.55935702240721 * 
GRP_RFMstat2 + 0.06115264011229 * GRP_RFMstat3 + 0.23395576453228 * GRP_RFMstat4 + 
0.14575536355828 * GRP_RMntFrq2 + -0.17534689953321 * GRP_RMntFrq3 + 0.02136609987453 * 
GRP_RMntFrq4 + 0.198287170399 * GRP_Recency2 + 0.20837384647001 * GRP_Recency3 + 
-0.03491976754069 * GRP_Recency4 ;
767667    +   H12  =     0.27125178346152 * GRP_AcceptedCmp52  +     0.39367144184074 *
767668    +        GRP_Frq2  +     0.47183329287273 * GRP_Frq3  +     0.06075107930837 *
767669    +        GRP_Frq4  +     0.77794746315957 * GRP_Income2
767670    +          +     0.86453663986099 * GRP_Income3  +    -0.24014105964843 *
767671    +        GRP_Income4  +     0.18332391092776 * GRP_Mnt2
767672    +          +    -0.05132712807258 * GRP_Mnt3  +    -0.12150106989075 * GRP_Mnt4
767673    +          +     0.37088160406221 * GRP_MntFishProducts2
767674    +          +     0.16511263167544 * GRP_MntFishProducts3
767675    +          +    -0.25696902575665 * GRP_MntFishProducts4
767676    +          +    -0.25511966497767 * GRP_MntGoldProds2
767677    +          +     0.10357155941955 * GRP_MntGoldProds3
767678    +          +    -0.04921872016349 * GRP_MntGoldProds4
767679    +          +    -0.11063359070508 * GRP_MntMeatProducts2
767680    +          +    -0.08379163747059 * GRP_MntMeatProducts3
767681    +          +     0.18893182644469 * GRP_MntMeatProducts4
767682    +          +     0.41618237258351 * GRP_MntWines2  +    -0.00683285266538 *
767683    +        GRP_MntWines3  +    -0.12347598430406 * GRP_MntWines4
767684    +          +    -0.28043452635336 * GRP_NumCatalogPurchases3
767685    +          +     0.19010019257459 * GRP_NumCatalogPurchases4
767686    +          +    -0.29362124038326 * GRP_NumDistPurchases2
767687    +          +    -0.03304017306295 * GRP_NumDistPurchases3
767688    +          +    -0.11165609534026 * GRP_NumDistPurchases4
767689    +          +      0.1536111955491 * GRP_NumWebPurchases2
767690    +          +     0.14856361677069 * GRP_NumWebPurchases3
767691    +          +      0.0385282170017 * GRP_NumWebPurchases4
767692    +          +    -0.42245587008719 * GRP_RFMstat2  +     0.15962543914936 *
767693    +        GRP_RFMstat3  +    -0.39342058803069 * GRP_RFMstat4
767694    +          +    -0.28590254800789 * GRP_RMntFrq2  +    -0.21564130946407 *
767695    +        GRP_RMntFrq3  +    -0.22044591524393 * GRP_RMntFrq4
767696    +          +      1.1127849486131 * GRP_Recency2  +     0.37451568388848 *
767697    +        GRP_Recency3  +    -0.33640572843758 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.27125178346152 * GRP_AcceptedCmp52 + 0.39367144184074 * GRP_Frq2 
+ 0.47183329287273 * GRP_Frq3 + 0.06075107930837 * GRP_Frq4 + 0.77794746315957 * GRP_Income2 + 
0.86453663986099 * GRP_Income3 + -0.24014105964843 * GRP_Income4 + 0.18332391092776 * GRP_Mnt2 
+ -0.05132712807258 * GRP_Mnt3 + -0.12150106989075 * GRP_Mnt4 + 0.37088160406221 * 
GRP_MntFishProducts2 + 0.16511263167544 * GRP_MntFishProducts3 + -0.25696902575665 * 
GRP_MntFishProducts4 + -0.25511966497767 * GRP_MntGoldProds2 + 0.10357155941955 * 
GRP_MntGoldProds3 + -0.04921872016349 * GRP_MntGoldProds4 + -0.11063359070508 * 
GRP_MntMeatProducts2 + -0.08379163747059 * GRP_MntMeatProducts3 + 0.18893182644469 * 
GRP_MntMeatProducts4 + 0.41618237258351 * GRP_MntWines2 + -0.00683285266538 * GRP_MntWines3 + 
-0.12347598430406 * GRP_MntWines4 + -0.28043452635336 * GRP_NumCatalogPurchases3 + 
0.19010019257459 * GRP_NumCatalogPurchases4 + -0.29362124038326 * GRP_NumDistPurchases2 + 
-0.03304017306295 * GRP_NumDistPurchases3 + -0.11165609534026 * GRP_NumDistPurchases4 + 
0.1536111955491 * GRP_NumWebPurchases2 + 0.14856361677069 * GRP_NumWebPurchases3 + 
0.0385282170017 * GRP_NumWebPurchases4 + -0.42245587008719 * GRP_RFMstat2 + 0.15962543914936 * 
GRP_RFMstat3 + -0.39342058803069 * GRP_RFMstat4 + -0.28590254800789 * GRP_RMntFrq2 + 
-0.21564130946407 * GRP_RMntFrq3 + -0.22044591524393 * GRP_RMntFrq4 + 1.1127849486131 * 
GRP_Recency2 + 0.37451568388848 * GRP_Recency3 + -0.33640572843758 * GRP_Recency4 ;
767698    +   H13  =    -0.00640066603747 * GRP_AcceptedCmp52  +    -0.11333647417979 *
767699    +        GRP_Frq2  +    -0.11647952262542 * GRP_Frq3  +    -0.14006488881524 *
767700    +        GRP_Frq4  +     0.27728124026233 * GRP_Income2
767701    +          +     0.05697521068764 * GRP_Income3  +    -0.37633026358792 *
767702    +        GRP_Income4  +    -0.17440692689662 * GRP_Mnt2
767703    +          +    -0.10036881667196 * GRP_Mnt3  +    -0.13642140412399 * GRP_Mnt4
767704    +          +      0.2081380258467 * GRP_MntFishProducts2
767705    +          +    -0.08668229639505 * GRP_MntFishProducts3
767706    +          +     0.14081019578955 * GRP_MntFishProducts4
767707    +          +    -0.17027561298255 * GRP_MntGoldProds2
767708    +          +    -0.34742776244059 * GRP_MntGoldProds3
767709    +          +     0.12168590176726 * GRP_MntGoldProds4
767710    +          +    -0.05512121591373 * GRP_MntMeatProducts2
767711    +          +    -0.34519642935258 * GRP_MntMeatProducts3
767712    +          +    -0.13168847945689 * GRP_MntMeatProducts4
767713    +          +     0.28193282372353 * GRP_MntWines2  +     0.14946457186192 *
767714    +        GRP_MntWines3  +     0.06804391722409 * GRP_MntWines4
767715    +          +    -0.08346399909028 * GRP_NumCatalogPurchases3
767716    +          +    -0.15880621701951 * GRP_NumCatalogPurchases4
767717    +          +    -0.25528445685452 * GRP_NumDistPurchases2
767718    +          +    -0.10526630829598 * GRP_NumDistPurchases3
767719    +          +    -0.03726952062424 * GRP_NumDistPurchases4
767720    +          +    -0.05938919871449 * GRP_NumWebPurchases2
767721    +          +     0.18366019558751 * GRP_NumWebPurchases3
767722    +          +    -0.19335960904254 * GRP_NumWebPurchases4
767723    +          +     0.15283900648967 * GRP_RFMstat2  +    -0.03738648354517 *
767724    +        GRP_RFMstat3  +      0.0780054343538 * GRP_RFMstat4
767725    +          +     0.08482465227003 * GRP_RMntFrq2  +    -0.04156217601701 *
767726    +        GRP_RMntFrq3  +    -0.27972469674532 * GRP_RMntFrq4
767727    +          +     0.20311018978803 * GRP_Recency2  +     0.02026894035212 *
767728    +        GRP_Recency3  +    -0.22461335805045 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.00640066603747 * GRP_AcceptedCmp52 + -0.11333647417979 * 
GRP_Frq2 + -0.11647952262542 * GRP_Frq3 + -0.14006488881524 * GRP_Frq4 + 0.27728124026233 * 
GRP_Income2 + 0.05697521068764 * GRP_Income3 + -0.37633026358792 * GRP_Income4 + 
-0.17440692689662 * GRP_Mnt2 + -0.10036881667196 * GRP_Mnt3 + -0.13642140412399 * GRP_Mnt4 + 
0.2081380258467 * GRP_MntFishProducts2 + -0.08668229639505 * GRP_MntFishProducts3 + 
0.14081019578955 * GRP_MntFishProducts4 + -0.17027561298255 * GRP_MntGoldProds2 + 
-0.34742776244059 * GRP_MntGoldProds3 + 0.12168590176726 * GRP_MntGoldProds4 + 
-0.05512121591373 * GRP_MntMeatProducts2 + -0.34519642935258 * GRP_MntMeatProducts3 + 
-0.13168847945689 * GRP_MntMeatProducts4 + 0.28193282372353 * GRP_MntWines2 + 0.14946457186192 
* GRP_MntWines3 + 0.06804391722409 * GRP_MntWines4 + -0.08346399909028 * 
GRP_NumCatalogPurchases3 + -0.15880621701951 * GRP_NumCatalogPurchases4 + -0.25528445685452 * 
GRP_NumDistPurchases2 + -0.10526630829598 * GRP_NumDistPurchases3 + -0.03726952062424 * 
GRP_NumDistPurchases4 + -0.05938919871449 * GRP_NumWebPurchases2 + 0.18366019558751 * 
GRP_NumWebPurchases3 + -0.19335960904254 * GRP_NumWebPurchases4 + 0.15283900648967 * 
GRP_RFMstat2 + -0.03738648354517 * GRP_RFMstat3 + 0.0780054343538 * GRP_RFMstat4 + 
0.08482465227003 * GRP_RMntFrq2 + -0.04156217601701 * GRP_RMntFrq3 + -0.27972469674532 * 
GRP_RMntFrq4 + 0.20311018978803 * GRP_Recency2 + 0.02026894035212 * GRP_Recency3 + 
-0.22461335805045 * GRP_Recency4 ;
767729    +   H14  =     0.84759844370999 * GRP_AcceptedCmp52  +    -0.40207108050785 *
767730    +        GRP_Frq2  +    -0.11957926267486 * GRP_Frq3  +     0.39764041522616 *
767731    +        GRP_Frq4  +    -0.21133467357887 * GRP_Income2
767732    +          +    -0.37600727819569 * GRP_Income3  +     0.61191321060217 *
767733    +        GRP_Income4  +    -0.01918945699115 * GRP_Mnt2
767734    +          +    -0.28923187120656 * GRP_Mnt3  +     0.20590552102477 * GRP_Mnt4
767735    +          +     0.03194734131194 * GRP_MntFishProducts2
767736    +          +    -0.08555244396388 * GRP_MntFishProducts3
767737    +          +     -0.1294949057865 * GRP_MntFishProducts4
767738    +          +    -0.28742848639985 * GRP_MntGoldProds2
767739    +          +    -0.00435260781733 * GRP_MntGoldProds3
767740    +          +    -0.12007613875856 * GRP_MntGoldProds4
767741    +          +     0.36325039255643 * GRP_MntMeatProducts2
767742    +          +    -0.08728922471846 * GRP_MntMeatProducts3
767743    +          +    -0.19062123750322 * GRP_MntMeatProducts4
767744    +          +    -0.54694203087226 * GRP_MntWines2  +    -0.63189775838668 *
767745    +        GRP_MntWines3  +      0.3957291463714 * GRP_MntWines4
767746    +          +       0.435944756052 * GRP_NumCatalogPurchases3
767747    +          +      0.2205855993165 * GRP_NumCatalogPurchases4
767748    +          +     0.59192262496927 * GRP_NumDistPurchases2
767749    +          +     0.04008128670209 * GRP_NumDistPurchases3
767750    +          +    -0.00330725734446 * GRP_NumDistPurchases4
767751    +          +     0.18235346155154 * GRP_NumWebPurchases2
767752    +          +     0.06863306934707 * GRP_NumWebPurchases3
767753    +          +     0.06339667504979 * GRP_NumWebPurchases4
767754    +          +     0.09545179117637 * GRP_RFMstat2  +     0.14008923310046 *
767755    +        GRP_RFMstat3  +    -0.26191188327872 * GRP_RFMstat4
767756    +          +    -0.21341781402946 * GRP_RMntFrq2  +    -0.16158721892261 *
767757    +        GRP_RMntFrq3  +    -0.03125612925483 * GRP_RMntFrq4
767758    +          +    -0.57136536034562 * GRP_Recency2  +    -0.28843025104868 *
767759    +        GRP_Recency3  +     0.23682927566038 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84759844370999 * GRP_AcceptedCmp52 + -0.40207108050785 * 
GRP_Frq2 + -0.11957926267486 * GRP_Frq3 + 0.39764041522616 * GRP_Frq4 + -0.21133467357887 * 
GRP_Income2 + -0.37600727819569 * GRP_Income3 + 0.61191321060217 * GRP_Income4 + 
-0.01918945699115 * GRP_Mnt2 + -0.28923187120656 * GRP_Mnt3 + 0.20590552102477 * GRP_Mnt4 + 
0.03194734131194 * GRP_MntFishProducts2 + -0.08555244396388 * GRP_MntFishProducts3 + 
-0.1294949057865 * GRP_MntFishProducts4 + -0.28742848639985 * GRP_MntGoldProds2 + 
-0.00435260781733 * GRP_MntGoldProds3 + -0.12007613875856 * GRP_MntGoldProds4 + 
0.36325039255643 * GRP_MntMeatProducts2 + -0.08728922471846 * GRP_MntMeatProducts3 + 
-0.19062123750322 * GRP_MntMeatProducts4 + -0.54694203087226 * GRP_MntWines2 + 
-0.63189775838668 * GRP_MntWines3 + 0.3957291463714 * GRP_MntWines4 + 0.435944756052 * 
GRP_NumCatalogPurchases3 + 0.2205855993165 * GRP_NumCatalogPurchases4 + 0.59192262496927 * 
GRP_NumDistPurchases2 + 0.04008128670209 * GRP_NumDistPurchases3 + -0.00330725734446 * 
GRP_NumDistPurchases4 + 0.18235346155154 * GRP_NumWebPurchases2 + 0.06863306934707 * 
GRP_NumWebPurchases3 + 0.06339667504979 * GRP_NumWebPurchases4 + 0.09545179117637 * 
GRP_RFMstat2 + 0.14008923310046 * GRP_RFMstat3 + -0.26191188327872 * GRP_RFMstat4 + 
-0.21341781402946 * GRP_RMntFrq2 + -0.16158721892261 * GRP_RMntFrq3 + -0.03125612925483 * 
GRP_RMntFrq4 + -0.57136536034562 * GRP_Recency2 + -0.28843025104868 * GRP_Recency3 + 
0.23682927566038 * GRP_Recency4 ;
767760    +   H15  =      -0.270075163047 * GRP_AcceptedCmp52  +     0.12329750151184 *
767761    +        GRP_Frq2  +    -0.00636074237745 * GRP_Frq3  +     0.06125360704983 *
767762    +        GRP_Frq4  +    -0.02221726738608 * GRP_Income2
767763    +          +     0.02831089386274 * GRP_Income3  +    -0.14245161962732 *
767764    +        GRP_Income4  +    -0.33215929968734 * GRP_Mnt2
767765    +          +    -0.12990224977804 * GRP_Mnt3  +     0.01224047316232 * GRP_Mnt4
767766    +          +     0.43021866757807 * GRP_MntFishProducts2
767767    +          +    -0.27483945374498 * GRP_MntFishProducts3
767768    +          +     0.35053639451726 * GRP_MntFishProducts4
767769    +          +    -0.00509900753344 * GRP_MntGoldProds2
767770    +          +     -0.2114201518265 * GRP_MntGoldProds3
767771    +          +    -0.13970354632794 * GRP_MntGoldProds4
767772    +          +     0.08840789662233 * GRP_MntMeatProducts2
767773    +          +    -0.00365357432837 * GRP_MntMeatProducts3
767774    +          +    -0.17124615615804 * GRP_MntMeatProducts4
767775    +          +     -0.3149461311814 * GRP_MntWines2  +     0.13173264925134 *
767776    +        GRP_MntWines3  +    -0.11604679382146 * GRP_MntWines4
767777    +          +     -0.5316533346484 * GRP_NumCatalogPurchases3
767778    +          +    -0.29157679545376 * GRP_NumCatalogPurchases4
767779    +          +    -0.08055861305066 * GRP_NumDistPurchases2
767780    +          +    -0.08674081531395 * GRP_NumDistPurchases3
767781    +          +    -0.17551921835199 * GRP_NumDistPurchases4
767782    +          +    -0.03222539166367 * GRP_NumWebPurchases2
767783    +          +    -0.13811302108485 * GRP_NumWebPurchases3
767784    +          +     0.06646439445075 * GRP_NumWebPurchases4
767785    +          +    -0.07079122602276 * GRP_RFMstat2  +    -0.39615424117539 *
767786    +        GRP_RFMstat3  +     0.04146636703929 * GRP_RFMstat4
767787    +          +     -0.0853308883886 * GRP_RMntFrq2  +    -0.13702404280363 *
767788    +        GRP_RMntFrq3  +    -0.27355720177265 * GRP_RMntFrq4
767789    +          +     0.33867777321903 * GRP_Recency2  +    -0.09253457902218 *
767790    +        GRP_Recency3  +    -0.05897210090797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = -0.270075163047 * GRP_AcceptedCmp52 + 0.12329750151184 * GRP_Frq2 
+ -0.00636074237745 * GRP_Frq3 + 0.06125360704983 * GRP_Frq4 + -0.02221726738608 * GRP_Income2 
+ 0.02831089386274 * GRP_Income3 + -0.14245161962732 * GRP_Income4 + -0.33215929968734 * 
GRP_Mnt2 + -0.12990224977804 * GRP_Mnt3 + 0.01224047316232 * GRP_Mnt4 + 0.43021866757807 * 
GRP_MntFishProducts2 + -0.27483945374498 * GRP_MntFishProducts3 + 0.35053639451726 * 
GRP_MntFishProducts4 + -0.00509900753344 * GRP_MntGoldProds2 + -0.2114201518265 * 
GRP_MntGoldProds3 + -0.13970354632794 * GRP_MntGoldProds4 + 0.08840789662233 * 
GRP_MntMeatProducts2 + -0.00365357432837 * GRP_MntMeatProducts3 + -0.17124615615804 * 
GRP_MntMeatProducts4 + -0.3149461311814 * GRP_MntWines2 + 0.13173264925134 * GRP_MntWines3 + 
-0.11604679382146 * GRP_MntWines4 + -0.5316533346484 * GRP_NumCatalogPurchases3 + 
-0.29157679545376 * GRP_NumCatalogPurchases4 + -0.08055861305066 * GRP_NumDistPurchases2 + 
-0.08674081531395 * GRP_NumDistPurchases3 + -0.17551921835199 * GRP_NumDistPurchases4 + 
-0.03222539166367 * GRP_NumWebPurchases2 + -0.13811302108485 * GRP_NumWebPurchases3 + 
0.06646439445075 * GRP_NumWebPurchases4 + -0.07079122602276 * GRP_RFMstat2 + -0.39615424117539 
* GRP_RFMstat3 + 0.04146636703929 * GRP_RFMstat4 + -0.0853308883886 * GRP_RMntFrq2 + 
-0.13702404280363 * GRP_RMntFrq3 + -0.27355720177265 * GRP_RMntFrq4 + 0.33867777321903 * 
GRP_Recency2 + -0.09253457902218 * GRP_Recency3 + -0.05897210090797 * GRP_Recency4 ;
767791    +   H16  =    -0.30271284676983 * GRP_AcceptedCmp52  +     0.03117199224725 *
767792    +        GRP_Frq2  +    -0.26799382098604 * GRP_Frq3  +    -0.13070336759958 *
767793    +        GRP_Frq4  +     0.12672160649087 * GRP_Income2
767794    +          +    -0.21150829323326 * GRP_Income3  +    -0.15720750294685 *
767795    +        GRP_Income4  +     0.09905728950306 * GRP_Mnt2
767796    +          +    -0.43923284882193 * GRP_Mnt3  +     0.03431635930451 * GRP_Mnt4
767797    +          +     0.06947673564935 * GRP_MntFishProducts2
767798    +          +     -0.2220161944842 * GRP_MntFishProducts3
767799    +          +      -0.115965454808 * GRP_MntFishProducts4
767800    +          +    -0.01957355844265 * GRP_MntGoldProds2
767801    +          +     0.29129268161925 * GRP_MntGoldProds3
767802    +          +     0.06228256145252 * GRP_MntGoldProds4
767803    +          +    -0.09695386874195 * GRP_MntMeatProducts2
767804    +          +    -0.15864685727366 * GRP_MntMeatProducts3
767805    +          +    -0.49032797729016 * GRP_MntMeatProducts4
767806    +          +     0.37470089287985 * GRP_MntWines2  +     0.36115743239288 *
767807    +        GRP_MntWines3  +    -0.34359138002961 * GRP_MntWines4
767808    +          +    -0.19461285131827 * GRP_NumCatalogPurchases3
767809    +          +     0.04513674368784 * GRP_NumCatalogPurchases4
767810    +          +    -0.03507865895925 * GRP_NumDistPurchases2
767811    +          +     0.09915485245283 * GRP_NumDistPurchases3
767812    +          +    -0.33100664342194 * GRP_NumDistPurchases4
767813    +          +     0.13724527126482 * GRP_NumWebPurchases2
767814    +          +    -0.02356592443136 * GRP_NumWebPurchases3
767815    +          +      0.2573229592217 * GRP_NumWebPurchases4
767816    +          +     0.05747809528111 * GRP_RFMstat2  +     0.09535983705402 *
767817    +        GRP_RFMstat3  +    -0.10249907985488 * GRP_RFMstat4
767818    +          +     0.08979004612339 * GRP_RMntFrq2  +     0.21152228987437 *
767819    +        GRP_RMntFrq3  +     0.01345639991803 * GRP_RMntFrq4
767820    +          +     0.52890036744064 * GRP_Recency2  +    -0.04507648861408 *
767821    +        GRP_Recency3  +    -0.03669931738284 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = -0.30271284676983 * GRP_AcceptedCmp52 + 0.03117199224725 * 
GRP_Frq2 + -0.26799382098604 * GRP_Frq3 + -0.13070336759958 * GRP_Frq4 + 0.12672160649087 * 
GRP_Income2 + -0.21150829323326 * GRP_Income3 + -0.15720750294685 * GRP_Income4 + 
0.09905728950306 * GRP_Mnt2 + -0.43923284882193 * GRP_Mnt3 + 0.03431635930451 * GRP_Mnt4 + 
0.06947673564935 * GRP_MntFishProducts2 + -0.2220161944842 * GRP_MntFishProducts3 + 
-0.115965454808 * GRP_MntFishProducts4 + -0.01957355844265 * GRP_MntGoldProds2 + 
0.29129268161925 * GRP_MntGoldProds3 + 0.06228256145252 * GRP_MntGoldProds4 + 
-0.09695386874195 * GRP_MntMeatProducts2 + -0.15864685727366 * GRP_MntMeatProducts3 + 
-0.49032797729016 * GRP_MntMeatProducts4 + 0.37470089287985 * GRP_MntWines2 + 0.36115743239288 
* GRP_MntWines3 + -0.34359138002961 * GRP_MntWines4 + -0.19461285131827 * 
GRP_NumCatalogPurchases3 + 0.04513674368784 * GRP_NumCatalogPurchases4 + -0.03507865895925 * 
GRP_NumDistPurchases2 + 0.09915485245283 * GRP_NumDistPurchases3 + -0.33100664342194 * 
GRP_NumDistPurchases4 + 0.13724527126482 * GRP_NumWebPurchases2 + -0.02356592443136 * 
GRP_NumWebPurchases3 + 0.2573229592217 * GRP_NumWebPurchases4 + 0.05747809528111 * 
GRP_RFMstat2 + 0.09535983705402 * GRP_RFMstat3 + -0.10249907985488 * GRP_RFMstat4 + 
0.08979004612339 * GRP_RMntFrq2 + 0.21152228987437 * GRP_RMntFrq3 + 0.01345639991803 * 
GRP_RMntFrq4 + 0.52890036744064 * GRP_Recency2 + -0.04507648861408 * GRP_Recency3 + 
-0.03669931738284 * GRP_Recency4 ;
767822    +   H17  =    -0.24394616675587 * GRP_AcceptedCmp52  +     0.28964856194613 *
767823    +        GRP_Frq2  +    -0.08289613695725 * GRP_Frq3  +     0.21998897095553 *
767824    +        GRP_Frq4  +     0.18107497199311 * GRP_Income2
767825    +          +      0.1107558510921 * GRP_Income3  +    -0.36116869826735 *
767826    +        GRP_Income4  +     0.02424010270897 * GRP_Mnt2
767827    +          +    -0.15852275336702 * GRP_Mnt3  +    -0.35418266455505 * GRP_Mnt4
767828    +          +     0.20869043565167 * GRP_MntFishProducts2
767829    +          +     0.10833559681607 * GRP_MntFishProducts3
767830    +          +    -0.10347776442631 * GRP_MntFishProducts4
767831    +          +    -0.32065428276511 * GRP_MntGoldProds2
767832    +          +    -0.43926899233496 * GRP_MntGoldProds3
767833    +          +    -0.10606506374615 * GRP_MntGoldProds4
767834    +          +    -0.31984276315874 * GRP_MntMeatProducts2
767835    +          +    -0.10334364706061 * GRP_MntMeatProducts3
767836    +          +    -0.00884354140504 * GRP_MntMeatProducts4
767837    +          +     0.23600639890053 * GRP_MntWines2  +    -0.29934386684584 *
767838    +        GRP_MntWines3  +     0.16274179248724 * GRP_MntWines4
767839    +          +    -0.32950762391869 * GRP_NumCatalogPurchases3
767840    +          +     0.01712392556947 * GRP_NumCatalogPurchases4
767841    +          +    -0.34220067420996 * GRP_NumDistPurchases2
767842    +          +    -0.15410597036596 * GRP_NumDistPurchases3
767843    +          +    -0.05769918195545 * GRP_NumDistPurchases4
767844    +          +    -0.03929570019271 * GRP_NumWebPurchases2
767845    +          +    -0.30647973770852 * GRP_NumWebPurchases3
767846    +          +    -0.09809448516146 * GRP_NumWebPurchases4
767847    +          +     0.02199652262588 * GRP_RFMstat2  +    -0.18677191406874 *
767848    +        GRP_RFMstat3  +    -0.06022520470141 * GRP_RFMstat4
767849    +          +    -0.14995521360575 * GRP_RMntFrq2  +     0.00512207268691 *
767850    +        GRP_RMntFrq3  +    -0.58308661640325 * GRP_RMntFrq4
767851    +          +     0.09125052186965 * GRP_Recency2  +    -0.01605996390173 *
767852    +        GRP_Recency3  +     0.09260166797685 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = -0.24394616675587 * GRP_AcceptedCmp52 + 0.28964856194613 * 
GRP_Frq2 + -0.08289613695725 * GRP_Frq3 + 0.21998897095553 * GRP_Frq4 + 0.18107497199311 * 
GRP_Income2 + 0.1107558510921 * GRP_Income3 + -0.36116869826735 * GRP_Income4 + 
0.02424010270897 * GRP_Mnt2 + -0.15852275336702 * GRP_Mnt3 + -0.35418266455505 * GRP_Mnt4 + 
0.20869043565167 * GRP_MntFishProducts2 + 0.10833559681607 * GRP_MntFishProducts3 + 
-0.10347776442631 * GRP_MntFishProducts4 + -0.32065428276511 * GRP_MntGoldProds2 + 
-0.43926899233496 * GRP_MntGoldProds3 + -0.10606506374615 * GRP_MntGoldProds4 + 
-0.31984276315874 * GRP_MntMeatProducts2 + -0.10334364706061 * GRP_MntMeatProducts3 + 
-0.00884354140504 * GRP_MntMeatProducts4 + 0.23600639890053 * GRP_MntWines2 + 
-0.29934386684584 * GRP_MntWines3 + 0.16274179248724 * GRP_MntWines4 + -0.32950762391869 * 
GRP_NumCatalogPurchases3 + 0.01712392556947 * GRP_NumCatalogPurchases4 + -0.34220067420996 * 
GRP_NumDistPurchases2 + -0.15410597036596 * GRP_NumDistPurchases3 + -0.05769918195545 * 
GRP_NumDistPurchases4 + -0.03929570019271 * GRP_NumWebPurchases2 + -0.30647973770852 * 
GRP_NumWebPurchases3 + -0.09809448516146 * GRP_NumWebPurchases4 + 0.02199652262588 * 
GRP_RFMstat2 + -0.18677191406874 * GRP_RFMstat3 + -0.06022520470141 * GRP_RFMstat4 + 
-0.14995521360575 * GRP_RMntFrq2 + 0.00512207268691 * GRP_RMntFrq3 + -0.58308661640325 * 
GRP_RMntFrq4 + 0.09125052186965 * GRP_Recency2 + -0.01605996390173 * GRP_Recency3 + 
0.09260166797685 * GRP_Recency4 ;
767853    +   H11  =     1.47536864687001 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.47536864687001 + H11 ;
767854    +   H12  =    -0.03796823184366 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03796823184366 + H12 ;
767855    +   H13  =     0.20545721254095 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.20545721254095 + H13 ;
767856    +   H14  =     0.82513531048516 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82513531048516 + H14 ;
767857    +   H15  =    -0.86531822153621 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.86531822153621 + H15 ;
767858    +   H16  =    -1.63588460642984 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.63588460642984 + H16 ;
767859    +   H17  =     1.27216054538203 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.27216054538203 + H17 ;
767860    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
767861    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
767862    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
767863    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
767864    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
767865    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
767866    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
767867    +END;
MPRINT(EM_DIAGRAM):   END;
767868    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
767869    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
767870    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
767871    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
767872    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
767873    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
767874    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
767875    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
767876    +END;
MPRINT(EM_DIAGRAM):   END;
767877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767878    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
767879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767880    +
767881    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
767882    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
767883    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
767884    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
767885    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
767886    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
767887    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
767888    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
767889    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
767890    +end;
MPRINT(EM_DIAGRAM):   end;
767891    +else do;
MPRINT(EM_DIAGRAM):   else do;
767892    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
767893    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
767894    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
767895    +   end;
MPRINT(EM_DIAGRAM):   end;
767896    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
767897    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
767898    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
767899    +   end;
MPRINT(EM_DIAGRAM):   end;
767900    +   else do;
MPRINT(EM_DIAGRAM):   else do;
767901    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
767902    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
767903    +   end;
MPRINT(EM_DIAGRAM):   end;
767904    +end;
MPRINT(EM_DIAGRAM):   end;
767905    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
767906    +   P_DepVar1  =     1.96524348977009 * H11  +     1.80437226064293 * H12
767907    +          +     0.26614818926491 * H13  +     -2.3095876381555 * H14
767908    +          +     0.55402099095215 * H15  +     1.54522449582288 * H16
767909    +          +     1.13845442289883 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.96524348977009 * H11 + 1.80437226064293 * H12 + 
0.26614818926491 * H13 + -2.3095876381555 * H14 + 0.55402099095215 * H15 + 1.54522449582288 * 
H16 + 1.13845442289883 * H17 ;
767910    +   P_DepVar1  =    -1.53783202740594 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53783202740594 + P_DepVar1 ;
767911    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
767912    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
767913    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
767914    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
767915    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
767916    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
767917    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
767918    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
767919    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
767920    +END;
MPRINT(EM_DIAGRAM):   END;
767921    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
767922    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
767923    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
767924    +END;
MPRINT(EM_DIAGRAM):   END;
767925    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
767926    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
767927    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
767928    +END;
MPRINT(EM_DIAGRAM):   END;
767929    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
767930    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
767931    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
767932    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
767933    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
767934    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
767935    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
767936    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767937    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
767938    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
767939    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
767940    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
767941    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
767942    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
767943    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
767944    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
767945    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
767946    +END;
MPRINT(EM_DIAGRAM):   END;
767947    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
767948    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
767949    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
767950    +drop
767951    +H11
767952    +H12
767953    +H13
767954    +H14
767955    +H15
767956    +H16
767957    +H17
767958    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
767959    +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
767960    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
767961    +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
767962    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
767963    +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
767964    +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
767965    +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
767966    +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
767967    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
767968    +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
767969    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
767970    +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
767971    +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
767972    +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
767973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
767974    +* Ensmbl3: Average Posteriors of 9 models;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Average Posteriors of 9 models;
767975    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
767976    +P_DepVar1 = (
767977    +Neural20_P_DepVar1 +
767978    +Neural19_P_DepVar1 +
767979    +Neural5_P_DepVar1 +
767980    +Neural21_P_DepVar1 +
767981    +Tree3_P_DepVar1 +
767982    +Reg3_P_DepVar1 +
767983    +Neural22_P_DepVar1 +
767984    +Neural23_P_DepVar1 +
767985    +Neural18_P_DepVar1
767986    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural20_P_DepVar1 + Neural19_P_DepVar1 + 
Neural5_P_DepVar1 + Neural21_P_DepVar1 + Tree3_P_DepVar1 + Reg3_P_DepVar1 + Neural22_P_DepVar1 
+ Neural23_P_DepVar1 + Neural18_P_DepVar1 )/9;
767987    +P_DepVar0 = (
767988    +Neural20_P_DepVar0 +
767989    +Neural19_P_DepVar0 +
767990    +Neural5_P_DepVar0 +
767991    +Neural21_P_DepVar0 +
767992    +Tree3_P_DepVar0 +
767993    +Reg3_P_DepVar0 +
767994    +Neural22_P_DepVar0 +
767995    +Neural23_P_DepVar0 +
767996    +Neural18_P_DepVar0
767997    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural20_P_DepVar0 + Neural19_P_DepVar0 + 
Neural5_P_DepVar0 + Neural21_P_DepVar0 + Tree3_P_DepVar0 + Reg3_P_DepVar0 + Neural22_P_DepVar0 
+ Neural23_P_DepVar0 + Neural18_P_DepVar0 )/9;
767998    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
767999    +* Ensmbl3: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Classification Vars;
768000    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768001    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
768002    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
768003    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
768004    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
768005    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
768006    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
768007    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
768008    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
768009    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
768010    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
768011    +end;
MPRINT(EM_DIAGRAM):   end;
768012    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
768013    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
768014    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
768015    +end;
MPRINT(EM_DIAGRAM):   end;
768016    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
768017    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768018    +* Ensmbl3: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Producing Unformatted variable;
768019    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768020    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
768021    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
768022    +else
768023    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
768024    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768025    +* Ensmbl3: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing _WARN_ Variable;
768026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768027    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
768028    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
768029    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
768030    +if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
768030   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
768031    +if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
768031   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
768032    +if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
768032   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
768033    +if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
768033   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
768034    +if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
768034   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
768035    +if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
768035   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
768036    +if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
768036   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
768037    +if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
768037   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
768038    +if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
768039    +if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
768040    +if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
768041    +if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
768042    +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
768042   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
768043    +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
768043   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
768044    +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
768044   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
768045    +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
768045   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
768046    +if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
768047    +if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
768048    +if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
768049    +if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
768050    +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
768051    +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
768052    +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
768053    +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
768054    +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
768054   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
768055    +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
768055   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
768056    +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
768056   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
768057    +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
768057   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
768058    +if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
768058   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
768059    +if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
768059   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
768060    +if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
768060   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
768061    +if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
768061   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
768062    +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
768062   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
768063    +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
768063   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
768064    +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
768064   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
768065    +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
768065   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
768066    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768067    +* Ensmbl3: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Residual Vars;
768068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768069    +if
768070    +F_DepVar NE '1'
768071    +AND F_DepVar NE '0'
768072    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
768073    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
768074    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
768075    +end;
MPRINT(EM_DIAGRAM):   end;
768076    +else do;
MPRINT(EM_DIAGRAM):   else do;
768077    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
768078    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
768079    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
768080    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
768081    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
768082    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
768083    +END;
MPRINT(EM_DIAGRAM):   END;
768084    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
768085     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL20_TRAIN.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
768086     quit;
768087     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
768088     filename emflow
768088   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring NEURAL20_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768089     *------------------------------------------------------------*;
768090     * Ensmbl3: Scoring NEURAL20_VALIDATE data;
768091     *------------------------------------------------------------*;
768092     data EMWS8.Ensmbl3_VALIDATE
768093     / view=EMWS8.Ensmbl3_VALIDATE
768094     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_VALIDATE / view=EMWS8.Ensmbl3_VALIDATE ;
768095     set EMWS8.Neural20_VALIDATE
768096     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural20_VALIDATE ;
768097     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas.
768098    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768099    +* Ensmbl3: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Combine model for DepVar;
768100    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768101    +* Ensmbl3: Scoring Code of model 1 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 1 of 9;
768102    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768104    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
768105    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
768106    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
768107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768108    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768109    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
768110    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
768111    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
768112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768113    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768114    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
768115    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
768116    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
768117    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768118    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768119    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
768120    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
768121    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
768122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768123    +
768124    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
768125    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
768125   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
768126    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
768127    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
768128    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
768129    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
768130    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
768131    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768132    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
768133    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
768134    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
768135    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768137    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
768138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768139    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
768140    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
768141    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
768142    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768143    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
768144    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
768145    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
768146    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768148    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
768149    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
768150    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
768151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768152    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
768153    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
768154    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
768155    +
768156    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768157    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
768158    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768159    +LABEL GRP_AcceptedCmp5 =
768160    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
768161    +
768162    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
768163    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
768164    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
768165    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
768166    +end;
MPRINT(EM_DIAGRAM):   end;
768167    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
768168    +if (_UFORMAT eq '0'
768169    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
768170    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
768171    +end;
MPRINT(EM_DIAGRAM):   end;
768172    +else
768173    +if (_UFORMAT eq '1'
768174    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
768175    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
768176    +end;
MPRINT(EM_DIAGRAM):   end;
768177    +else do;
MPRINT(EM_DIAGRAM):   else do;
768178    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
768179    +end;
MPRINT(EM_DIAGRAM):   end;
768180    +end;
MPRINT(EM_DIAGRAM):   end;
768181    +
768182    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768183    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
768184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768185    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
768186    +
768187    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
768188    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
768189    +end;
MPRINT(EM_DIAGRAM):   end;
768190    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
768191    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
768192    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
768193    +end;
MPRINT(EM_DIAGRAM):   end;
768194    +else
768195    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
768196    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
768197    +end;
MPRINT(EM_DIAGRAM):   end;
768198    +else
768199    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
768200    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
768201    +end;
MPRINT(EM_DIAGRAM):   end;
768202    +else
768203    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
768204    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
768205    +end;
MPRINT(EM_DIAGRAM):   end;
768206    +end;
MPRINT(EM_DIAGRAM):   end;
768207    +
768208    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768209    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
768210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768211    +LABEL GRP_Income =
768212    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
768213    +
768214    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
768215    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
768216    +end;
MPRINT(EM_DIAGRAM):   end;
768217    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
768218    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
768219    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
768220    +end;
MPRINT(EM_DIAGRAM):   end;
768221    +else
768222    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
768223    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
768224    +end;
MPRINT(EM_DIAGRAM):   end;
768225    +else
768226    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
768227    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
768228    +end;
MPRINT(EM_DIAGRAM):   end;
768229    +else
768230    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
768231    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
768232    +end;
MPRINT(EM_DIAGRAM):   end;
768233    +end;
MPRINT(EM_DIAGRAM):   end;
768234    +
768235    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768236    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
768237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768238    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
768239    +
768240    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
768241    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
768242    +end;
MPRINT(EM_DIAGRAM):   end;
768243    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
768244    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
768245    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
768246    +end;
MPRINT(EM_DIAGRAM):   end;
768247    +else
768248    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
768249    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
768250    +end;
MPRINT(EM_DIAGRAM):   end;
768251    +else
768252    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
768253    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
768254    +end;
MPRINT(EM_DIAGRAM):   end;
768255    +else
768256    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
768257    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
768258    +end;
MPRINT(EM_DIAGRAM):   end;
768259    +end;
MPRINT(EM_DIAGRAM):   end;
768260    +
768261    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768262    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
768263    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768264    +LABEL GRP_MntFishProducts =
768265    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
768266    +
768267    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
768268    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
768269    +end;
MPRINT(EM_DIAGRAM):   end;
768270    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
768271    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
768272    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
768273    +end;
MPRINT(EM_DIAGRAM):   end;
768274    +else
768275    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
768276    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
768277    +end;
MPRINT(EM_DIAGRAM):   end;
768278    +else
768279    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
768280    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
768281    +end;
MPRINT(EM_DIAGRAM):   end;
768282    +else
768283    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
768284    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
768285    +end;
MPRINT(EM_DIAGRAM):   end;
768286    +end;
MPRINT(EM_DIAGRAM):   end;
768287    +
768288    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768289    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
768290    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768291    +LABEL GRP_MntGoldProds =
768292    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
768293    +
768294    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
768295    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
768296    +end;
MPRINT(EM_DIAGRAM):   end;
768297    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
768298    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
768299    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
768300    +end;
MPRINT(EM_DIAGRAM):   end;
768301    +else
768302    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
768303    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
768304    +end;
MPRINT(EM_DIAGRAM):   end;
768305    +else
768306    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
768307    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
768308    +end;
MPRINT(EM_DIAGRAM):   end;
768309    +else
768310    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
768311    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
768312    +end;
MPRINT(EM_DIAGRAM):   end;
768313    +end;
MPRINT(EM_DIAGRAM):   end;
768314    +
768315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768316    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
768317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768318    +LABEL GRP_MntMeatProducts =
768319    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
768320    +
768321    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
768322    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
768323    +end;
MPRINT(EM_DIAGRAM):   end;
768324    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
768325    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
768326    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
768327    +end;
MPRINT(EM_DIAGRAM):   end;
768328    +else
768329    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
768330    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
768331    +end;
MPRINT(EM_DIAGRAM):   end;
768332    +else
768333    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
768334    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
768335    +end;
MPRINT(EM_DIAGRAM):   end;
768336    +else
768337    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
768338    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
768339    +end;
MPRINT(EM_DIAGRAM):   end;
768340    +end;
MPRINT(EM_DIAGRAM):   end;
768341    +
768342    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768343    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
768344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768345    +LABEL GRP_MntWines =
768346    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
768347    +
768348    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
768349    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
768350    +end;
MPRINT(EM_DIAGRAM):   end;
768351    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
768352    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
768353    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
768354    +end;
MPRINT(EM_DIAGRAM):   end;
768355    +else
768356    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
768357    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
768358    +end;
MPRINT(EM_DIAGRAM):   end;
768359    +else
768360    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
768361    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
768362    +end;
MPRINT(EM_DIAGRAM):   end;
768363    +else
768364    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
768365    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
768366    +end;
MPRINT(EM_DIAGRAM):   end;
768367    +end;
MPRINT(EM_DIAGRAM):   end;
768368    +
768369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768370    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
768371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768372    +LABEL GRP_NumCatalogPurchases =
768373    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
768374    +
768375    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
768376    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
768377    +end;
MPRINT(EM_DIAGRAM):   end;
768378    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
768379    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
768380    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
768381    +end;
MPRINT(EM_DIAGRAM):   end;
768382    +else
768383    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
768384    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
768385    +end;
MPRINT(EM_DIAGRAM):   end;
768386    +else
768387    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
768388    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
768389    +end;
MPRINT(EM_DIAGRAM):   end;
768390    +else
768391    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
768392    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
768393    +end;
MPRINT(EM_DIAGRAM):   end;
768394    +end;
MPRINT(EM_DIAGRAM):   end;
768395    +
768396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768397    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
768398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768399    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
768400    +
768401    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
768402    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
768403    +end;
MPRINT(EM_DIAGRAM):   end;
768404    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
768405    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
768406    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
768407    +end;
MPRINT(EM_DIAGRAM):   end;
768408    +else
768409    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
768410    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
768411    +end;
MPRINT(EM_DIAGRAM):   end;
768412    +else
768413    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
768414    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
768415    +end;
MPRINT(EM_DIAGRAM):   end;
768416    +else
768417    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
768418    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
768419    +end;
MPRINT(EM_DIAGRAM):   end;
768420    +end;
MPRINT(EM_DIAGRAM):   end;
768421    +
768422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768423    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
768424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768425    +LABEL GRP_NumWebPurchases =
768426    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
768427    +
768428    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
768429    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
768430    +end;
MPRINT(EM_DIAGRAM):   end;
768431    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
768432    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
768433    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
768434    +end;
MPRINT(EM_DIAGRAM):   end;
768435    +else
768436    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
768437    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
768438    +end;
MPRINT(EM_DIAGRAM):   end;
768439    +else
768440    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
768441    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
768442    +end;
MPRINT(EM_DIAGRAM):   end;
768443    +else
768444    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
768445    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
768446    +end;
MPRINT(EM_DIAGRAM):   end;
768447    +end;
MPRINT(EM_DIAGRAM):   end;
768448    +
768449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768450    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
768451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768452    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
768453    +
768454    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
768455    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
768456    +end;
MPRINT(EM_DIAGRAM):   end;
768457    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
768458    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
768459    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
768460    +end;
MPRINT(EM_DIAGRAM):   end;
768461    +else
768462    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
768463    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
768464    +end;
MPRINT(EM_DIAGRAM):   end;
768465    +else
768466    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
768467    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
768468    +end;
MPRINT(EM_DIAGRAM):   end;
768469    +else
768470    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
768471    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
768472    +end;
MPRINT(EM_DIAGRAM):   end;
768473    +end;
MPRINT(EM_DIAGRAM):   end;
768474    +
768475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768476    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
768477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768478    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
768479    +
768480    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
768481    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
768482    +end;
MPRINT(EM_DIAGRAM):   end;
768483    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
768484    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
768485    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
768486    +end;
MPRINT(EM_DIAGRAM):   end;
768487    +else
768488    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
768489    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
768490    +end;
MPRINT(EM_DIAGRAM):   end;
768491    +else
768492    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
768493    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
768494    +end;
MPRINT(EM_DIAGRAM):   end;
768495    +else
768496    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
768497    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
768498    +end;
MPRINT(EM_DIAGRAM):   end;
768499    +end;
MPRINT(EM_DIAGRAM):   end;
768500    +
768501    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768502    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
768503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768504    +LABEL GRP_Recency =
768505    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
768506    +
768507    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
768508    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
768509    +end;
MPRINT(EM_DIAGRAM):   end;
768510    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
768511    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
768512    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
768513    +end;
MPRINT(EM_DIAGRAM):   end;
768514    +else
768515    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
768516    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
768517    +end;
MPRINT(EM_DIAGRAM):   end;
768518    +else
768519    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
768520    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
768521    +end;
MPRINT(EM_DIAGRAM):   end;
768522    +else
768523    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
768524    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
768525    +end;
MPRINT(EM_DIAGRAM):   end;
768526    +end;
MPRINT(EM_DIAGRAM):   end;
768527    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768528    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
768529    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
768530    +* NODE: Neural20;
MPRINT(EM_DIAGRAM):   * NODE: Neural20;
768531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
768532    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
768533    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
768534    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
768535    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
768536    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
768537    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
768538    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
768539    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
768540    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
768541    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
768542    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
768543    +LENGTH _WARN_ $4
768544    +      F_DepVar  $ 12
768545    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
768546    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
768547    +
768548    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
768549    +
768550    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
768551    +
768552    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
768553    +
768554    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
768555    +
768556    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
768557    +
768558    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
768559    +
768560    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
768561    +
768562    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
768563    +
768564    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
768565    +
768566    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
768567    +
768568    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
768569    +
768570    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
768571    +
768572    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
768573    +
768574    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
768575    +
768576    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
768577    +
768578    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
768579    +
768580    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
768581    +
768582    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
768583    +
768584    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
768585    +
768586    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
768587    +
768588    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
768589    +
768590    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
768591    +
768592    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
768593    +
768594    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
768595    +
768596    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
768597    +
768598    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
768599    +
768600    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
768601    +
768602    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
768603    +
768604    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
768605    +
768606    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
768607    +
768608    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
768609    +
768610    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
768611    +
768612    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
768613    +
768614    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
768615    +
768616    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
768617    +
768618    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
768619    +
768620    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
768621    +
768622    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
768623    +
768624    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
768625    +
768626    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
768627    +
768628    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
768629    +
768630    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
768631    +
768632    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
768633    +
768634    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
768635    +
768636    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
768637    +
768638    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
768639    +
768640    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
768641    +
768642    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
768643    +
768644    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
768645    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
768646    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
768647    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
768648    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768649    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768650    +end;
MPRINT(EM_DIAGRAM):   end;
768651    +else do;
MPRINT(EM_DIAGRAM):   else do;
768652    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768653    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
768654    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768655    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
768656    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
768657    +   end;
MPRINT(EM_DIAGRAM):   end;
768658    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
768659    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
768660    +   end;
MPRINT(EM_DIAGRAM):   end;
768661    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768662    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
768663    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768664    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768665    +   end;
MPRINT(EM_DIAGRAM):   end;
768666    +end;
MPRINT(EM_DIAGRAM):   end;
768667    +
768668    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
768669    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
768670    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
768671    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
768672    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
768673    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
768674    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768675    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768676    +end;
MPRINT(EM_DIAGRAM):   end;
768677    +else do;
MPRINT(EM_DIAGRAM):   else do;
768678    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768679    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
768680    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768681    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
768682    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
768683    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
768684    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
768685    +   end;
MPRINT(EM_DIAGRAM):   end;
768686    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
768687    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
768688    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
768689    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
768690    +   end;
MPRINT(EM_DIAGRAM):   end;
768691    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768692    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
768693    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
768694    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
768695    +   end;
MPRINT(EM_DIAGRAM):   end;
768696    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
768697    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
768698    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
768699    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
768700    +   end;
MPRINT(EM_DIAGRAM):   end;
768701    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768702    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
768703    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
768704    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
768705    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768706    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768707    +   end;
MPRINT(EM_DIAGRAM):   end;
768708    +end;
MPRINT(EM_DIAGRAM):   end;
768709    +
768710    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
768711    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
768712    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
768713    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
768714    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
768715    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
768716    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768717    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768718    +end;
MPRINT(EM_DIAGRAM):   end;
768719    +else do;
MPRINT(EM_DIAGRAM):   else do;
768720    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768721    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
768722    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768723    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
768724    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
768725    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
768726    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
768727    +   end;
MPRINT(EM_DIAGRAM):   end;
768728    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768729    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
768730    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
768731    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
768732    +   end;
MPRINT(EM_DIAGRAM):   end;
768733    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
768734    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
768735    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
768736    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
768737    +   end;
MPRINT(EM_DIAGRAM):   end;
768738    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
768739    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
768740    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
768741    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
768742    +   end;
MPRINT(EM_DIAGRAM):   end;
768743    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768744    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
768745    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
768746    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
768747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768749    +   end;
MPRINT(EM_DIAGRAM):   end;
768750    +end;
MPRINT(EM_DIAGRAM):   end;
768751    +
768752    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
768753    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
768754    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
768755    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
768756    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
768757    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
768758    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768759    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768760    +end;
MPRINT(EM_DIAGRAM):   end;
768761    +else do;
MPRINT(EM_DIAGRAM):   else do;
768762    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768763    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
768764    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768765    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
768766    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
768767    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
768768    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
768769    +   end;
MPRINT(EM_DIAGRAM):   end;
768770    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
768771    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
768772    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
768773    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
768774    +   end;
MPRINT(EM_DIAGRAM):   end;
768775    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768776    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
768777    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
768778    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
768779    +   end;
MPRINT(EM_DIAGRAM):   end;
768780    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
768781    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
768782    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
768783    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
768784    +   end;
MPRINT(EM_DIAGRAM):   end;
768785    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768786    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
768787    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
768788    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
768789    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768790    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768791    +   end;
MPRINT(EM_DIAGRAM):   end;
768792    +end;
MPRINT(EM_DIAGRAM):   end;
768793    +
768794    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
768795    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
768796    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
768797    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
768798    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
768799    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
768800    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768801    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768802    +end;
MPRINT(EM_DIAGRAM):   end;
768803    +else do;
MPRINT(EM_DIAGRAM):   else do;
768804    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768805    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
768806    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768807    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
768808    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
768809    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
768810    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
768811    +   end;
MPRINT(EM_DIAGRAM):   end;
768812    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
768813    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
768814    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
768815    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
768816    +   end;
MPRINT(EM_DIAGRAM):   end;
768817    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768818    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
768819    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
768820    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
768821    +   end;
MPRINT(EM_DIAGRAM):   end;
768822    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
768823    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
768824    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
768825    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
768826    +   end;
MPRINT(EM_DIAGRAM):   end;
768827    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768828    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
768829    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
768830    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
768831    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768832    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768833    +   end;
MPRINT(EM_DIAGRAM):   end;
768834    +end;
MPRINT(EM_DIAGRAM):   end;
768835    +
768836    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
768837    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
768838    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
768839    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
768840    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
768841    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
768842    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768843    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768844    +end;
MPRINT(EM_DIAGRAM):   end;
768845    +else do;
MPRINT(EM_DIAGRAM):   else do;
768846    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768847    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
768848    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768849    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
768850    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
768851    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
768852    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
768853    +   end;
MPRINT(EM_DIAGRAM):   end;
768854    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768855    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
768856    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
768857    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
768858    +   end;
MPRINT(EM_DIAGRAM):   end;
768859    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
768860    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
768861    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
768862    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
768863    +   end;
MPRINT(EM_DIAGRAM):   end;
768864    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
768865    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
768866    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
768867    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
768868    +   end;
MPRINT(EM_DIAGRAM):   end;
768869    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768870    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
768871    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
768872    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
768873    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768874    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768875    +   end;
MPRINT(EM_DIAGRAM):   end;
768876    +end;
MPRINT(EM_DIAGRAM):   end;
768877    +
768878    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
768879    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
768880    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
768881    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
768882    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
768883    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
768884    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768885    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768886    +end;
MPRINT(EM_DIAGRAM):   end;
768887    +else do;
MPRINT(EM_DIAGRAM):   else do;
768888    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768889    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
768890    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768891    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
768892    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
768893    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
768894    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
768895    +   end;
MPRINT(EM_DIAGRAM):   end;
768896    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768897    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
768898    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
768899    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
768900    +   end;
MPRINT(EM_DIAGRAM):   end;
768901    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
768902    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
768903    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
768904    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
768905    +   end;
MPRINT(EM_DIAGRAM):   end;
768906    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
768907    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
768908    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
768909    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
768910    +   end;
MPRINT(EM_DIAGRAM):   end;
768911    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768912    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
768913    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
768914    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
768915    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768916    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768917    +   end;
MPRINT(EM_DIAGRAM):   end;
768918    +end;
MPRINT(EM_DIAGRAM):   end;
768919    +
768920    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
768921    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
768922    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
768923    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
768924    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
768925    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
768926    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768927    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768928    +end;
MPRINT(EM_DIAGRAM):   end;
768929    +else do;
MPRINT(EM_DIAGRAM):   else do;
768930    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768931    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
768932    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768933    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
768934    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
768935    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
768936    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
768937    +   end;
MPRINT(EM_DIAGRAM):   end;
768938    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
768939    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
768940    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
768941    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
768942    +   end;
MPRINT(EM_DIAGRAM):   end;
768943    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768944    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
768945    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
768946    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
768947    +   end;
MPRINT(EM_DIAGRAM):   end;
768948    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
768949    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
768950    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
768951    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
768952    +   end;
MPRINT(EM_DIAGRAM):   end;
768953    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768954    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
768955    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
768956    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
768957    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768958    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768959    +   end;
MPRINT(EM_DIAGRAM):   end;
768960    +end;
MPRINT(EM_DIAGRAM):   end;
768961    +
768962    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
768963    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
768964    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
768965    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
768966    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
768967    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
768968    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768969    +end;
MPRINT(EM_DIAGRAM):   end;
768970    +else do;
MPRINT(EM_DIAGRAM):   else do;
768971    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
768972    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
768973    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
768974    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
768975    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
768976    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
768977    +   end;
MPRINT(EM_DIAGRAM):   end;
768978    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
768979    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
768980    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
768981    +   end;
MPRINT(EM_DIAGRAM):   end;
768982    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
768983    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
768984    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
768985    +   end;
MPRINT(EM_DIAGRAM):   end;
768986    +   else do;
MPRINT(EM_DIAGRAM):   else do;
768987    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
768988    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
768989    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
768990    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
768991    +   end;
MPRINT(EM_DIAGRAM):   end;
768992    +end;
MPRINT(EM_DIAGRAM):   end;
768993    +
768994    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
768995    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
768996    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
768997    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
768998    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
768999    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
769000    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769001    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769002    +end;
MPRINT(EM_DIAGRAM):   end;
769003    +else do;
MPRINT(EM_DIAGRAM):   else do;
769004    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769005    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
769006    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769007    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
769008    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
769009    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
769010    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
769011    +   end;
MPRINT(EM_DIAGRAM):   end;
769012    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769013    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
769014    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
769015    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
769016    +   end;
MPRINT(EM_DIAGRAM):   end;
769017    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769018    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
769019    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
769020    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
769021    +   end;
MPRINT(EM_DIAGRAM):   end;
769022    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769023    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
769024    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
769025    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
769026    +   end;
MPRINT(EM_DIAGRAM):   end;
769027    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769028    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
769029    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
769030    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
769031    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769032    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769033    +   end;
MPRINT(EM_DIAGRAM):   end;
769034    +end;
MPRINT(EM_DIAGRAM):   end;
769035    +
769036    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
769037    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
769038    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
769039    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
769040    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
769041    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
769042    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769043    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769044    +end;
MPRINT(EM_DIAGRAM):   end;
769045    +else do;
MPRINT(EM_DIAGRAM):   else do;
769046    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769047    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
769048    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769049    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769050    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
769051    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
769052    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
769053    +   end;
MPRINT(EM_DIAGRAM):   end;
769054    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769055    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
769056    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
769057    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
769058    +   end;
MPRINT(EM_DIAGRAM):   end;
769059    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769060    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
769061    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
769062    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
769063    +   end;
MPRINT(EM_DIAGRAM):   end;
769064    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769065    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
769066    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
769067    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
769068    +   end;
MPRINT(EM_DIAGRAM):   end;
769069    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769070    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
769071    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
769072    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
769073    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769074    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769075    +   end;
MPRINT(EM_DIAGRAM):   end;
769076    +end;
MPRINT(EM_DIAGRAM):   end;
769077    +
769078    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
769079    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
769080    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
769081    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
769082    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
769083    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
769084    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769085    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769086    +end;
MPRINT(EM_DIAGRAM):   end;
769087    +else do;
MPRINT(EM_DIAGRAM):   else do;
769088    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769089    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
769090    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769091    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
769092    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
769093    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
769094    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
769095    +   end;
MPRINT(EM_DIAGRAM):   end;
769096    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769097    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
769098    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
769099    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
769100    +   end;
MPRINT(EM_DIAGRAM):   end;
769101    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769102    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
769103    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
769104    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
769105    +   end;
MPRINT(EM_DIAGRAM):   end;
769106    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769107    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
769108    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
769109    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
769110    +   end;
MPRINT(EM_DIAGRAM):   end;
769111    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769112    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
769113    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
769114    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
769115    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769116    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769117    +   end;
MPRINT(EM_DIAGRAM):   end;
769118    +end;
MPRINT(EM_DIAGRAM):   end;
769119    +
769120    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
769121    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
769122    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
769123    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
769124    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
769125    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
769126    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769127    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769128    +end;
MPRINT(EM_DIAGRAM):   end;
769129    +else do;
MPRINT(EM_DIAGRAM):   else do;
769130    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769131    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
769132    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769133    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769134    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
769135    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
769136    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
769137    +   end;
MPRINT(EM_DIAGRAM):   end;
769138    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769139    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
769140    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
769141    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
769142    +   end;
MPRINT(EM_DIAGRAM):   end;
769143    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769144    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
769145    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
769146    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
769147    +   end;
MPRINT(EM_DIAGRAM):   end;
769148    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769149    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
769150    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
769151    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
769152    +   end;
MPRINT(EM_DIAGRAM):   end;
769153    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769154    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
769155    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
769156    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
769157    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769158    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769159    +   end;
MPRINT(EM_DIAGRAM):   end;
769160    +end;
MPRINT(EM_DIAGRAM):   end;
769161    +
769162    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
769163    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
769164    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
769165    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
769166    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
769167    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
769168    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769169    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769170    +end;
MPRINT(EM_DIAGRAM):   end;
769171    +else do;
MPRINT(EM_DIAGRAM):   else do;
769172    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769173    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
769174    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769175    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
769176    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
769177    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
769178    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
769179    +   end;
MPRINT(EM_DIAGRAM):   end;
769180    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769181    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
769182    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
769183    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
769184    +   end;
MPRINT(EM_DIAGRAM):   end;
769185    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769186    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
769187    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
769188    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
769189    +   end;
MPRINT(EM_DIAGRAM):   end;
769190    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769191    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
769192    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
769193    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
769194    +   end;
MPRINT(EM_DIAGRAM):   end;
769195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769196    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
769197    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
769198    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
769199    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769200    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769201    +   end;
MPRINT(EM_DIAGRAM):   end;
769202    +end;
MPRINT(EM_DIAGRAM):   end;
769203    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769204    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
769205    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769207    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
769208    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769209    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
769210    +   H11  =    -0.20808401117374 * GRP_AcceptedCmp52  +      1.5952064946991 *
769211    +        GRP_Frq2  +    -0.01225273525848 * GRP_Frq3  +    -0.62835698024634 *
769212    +        GRP_Frq4  +     0.44314401678348 * GRP_Income2
769213    +          +     0.89646769323205 * GRP_Income3  +    -0.90649183264259 *
769214    +        GRP_Income4  +    -0.55176085229947 * GRP_Mnt2
769215    +          +    -0.28020133968753 * GRP_Mnt3  +     0.17871933677614 * GRP_Mnt4
769216    +          +     0.38585041088838 * GRP_MntFishProducts2
769217    +          +    -0.22597951859521 * GRP_MntFishProducts3
769218    +          +    -0.12591354177724 * GRP_MntFishProducts4
769219    +          +     0.41517790727814 * GRP_MntGoldProds2
769220    +          +    -0.01783554546067 * GRP_MntGoldProds3
769221    +          +    -0.05254364640808 * GRP_MntGoldProds4
769222    +          +     0.11041766264422 * GRP_MntMeatProducts2
769223    +          +     0.80734417241917 * GRP_MntMeatProducts3
769224    +          +    -0.58385299076265 * GRP_MntMeatProducts4
769225    +          +     0.63351163942796 * GRP_MntWines2  +      0.4938617622427 *
769226    +        GRP_MntWines3  +     0.02607762678073 * GRP_MntWines4
769227    +          +    -1.43194573733764 * GRP_NumCatalogPurchases3
769228    +          +     0.55178119754186 * GRP_NumCatalogPurchases4
769229    +          +      -1.830671366144 * GRP_NumDistPurchases2
769230    +          +    -1.17053785506362 * GRP_NumDistPurchases3
769231    +          +     0.98564208160287 * GRP_NumDistPurchases4
769232    +          +    -0.22019170543618 * GRP_NumWebPurchases2
769233    +          +     0.12596691753667 * GRP_NumWebPurchases3
769234    +          +    -0.02882568244969 * GRP_NumWebPurchases4
769235    +          +    -0.21302125337044 * GRP_RFMstat2  +     0.08158805477511 *
769236    +        GRP_RFMstat3  +     -0.2631946184422 * GRP_RFMstat4
769237    +          +      0.1161399236304 * GRP_RMntFrq2  +     0.60576408771811 *
769238    +        GRP_RMntFrq3  +    -0.25254086880004 * GRP_RMntFrq4
769239    +          +      0.8664956591594 * GRP_Recency2  +     0.06243974875226 *
769240    +        GRP_Recency3  +    -0.38266930051466 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20808401117374 * GRP_AcceptedCmp52 + 1.5952064946991 * GRP_Frq2 
+ -0.01225273525848 * GRP_Frq3 + -0.62835698024634 * GRP_Frq4 + 0.44314401678348 * GRP_Income2 
+ 0.89646769323205 * GRP_Income3 + -0.90649183264259 * GRP_Income4 + -0.55176085229947 * 
GRP_Mnt2 + -0.28020133968753 * GRP_Mnt3 + 0.17871933677614 * GRP_Mnt4 + 0.38585041088838 * 
GRP_MntFishProducts2 + -0.22597951859521 * GRP_MntFishProducts3 + -0.12591354177724 * 
GRP_MntFishProducts4 + 0.41517790727814 * GRP_MntGoldProds2 + -0.01783554546067 * 
GRP_MntGoldProds3 + -0.05254364640808 * GRP_MntGoldProds4 + 0.11041766264422 * 
GRP_MntMeatProducts2 + 0.80734417241917 * GRP_MntMeatProducts3 + -0.58385299076265 * 
GRP_MntMeatProducts4 + 0.63351163942796 * GRP_MntWines2 + 0.4938617622427 * GRP_MntWines3 + 
0.02607762678073 * GRP_MntWines4 + -1.43194573733764 * GRP_NumCatalogPurchases3 + 
0.55178119754186 * GRP_NumCatalogPurchases4 + -1.830671366144 * GRP_NumDistPurchases2 + 
-1.17053785506362 * GRP_NumDistPurchases3 + 0.98564208160287 * GRP_NumDistPurchases4 + 
-0.22019170543618 * GRP_NumWebPurchases2 + 0.12596691753667 * GRP_NumWebPurchases3 + 
-0.02882568244969 * GRP_NumWebPurchases4 + -0.21302125337044 * GRP_RFMstat2 + 0.08158805477511 
* GRP_RFMstat3 + -0.2631946184422 * GRP_RFMstat4 + 0.1161399236304 * GRP_RMntFrq2 + 
0.60576408771811 * GRP_RMntFrq3 + -0.25254086880004 * GRP_RMntFrq4 + 0.8664956591594 * 
GRP_Recency2 + 0.06243974875226 * GRP_Recency3 + -0.38266930051466 * GRP_Recency4 ;
769241    +   H12  =    -1.49044065215331 * GRP_AcceptedCmp52  +     0.29747214763886 *
769242    +        GRP_Frq2  +     0.25845091468379 * GRP_Frq3  +    -0.12253400308729 *
769243    +        GRP_Frq4  +     0.67026230943159 * GRP_Income2
769244    +          +    -0.07529723714567 * GRP_Income3  +    -0.00656076113338 *
769245    +        GRP_Income4  +     0.11866607313287 * GRP_Mnt2
769246    +          +     0.50886534936331 * GRP_Mnt3  +    -0.40624874712256 * GRP_Mnt4
769247    +          +     0.07903512198302 * GRP_MntFishProducts2
769248    +          +     0.30094355054178 * GRP_MntFishProducts3
769249    +          +      0.1592854004233 * GRP_MntFishProducts4
769250    +          +    -0.71778183892118 * GRP_MntGoldProds2
769251    +          +    -0.00758784099151 * GRP_MntGoldProds3
769252    +          +    -0.05641788275636 * GRP_MntGoldProds4
769253    +          +    -1.00661051196007 * GRP_MntMeatProducts2
769254    +          +     -0.7897102230697 * GRP_MntMeatProducts3
769255    +          +     0.82643513947121 * GRP_MntMeatProducts4
769256    +          +     0.29396736594116 * GRP_MntWines2  +    -0.23616802309365 *
769257    +        GRP_MntWines3  +    -0.53754288840118 * GRP_MntWines4
769258    +          +     0.51299707442487 * GRP_NumCatalogPurchases3
769259    +          +    -0.50131971617023 * GRP_NumCatalogPurchases4
769260    +          +     -1.0244605634362 * GRP_NumDistPurchases2
769261    +          +     0.62371418531403 * GRP_NumDistPurchases3
769262    +          +     0.01028523337025 * GRP_NumDistPurchases4
769263    +          +     0.57550765494375 * GRP_NumWebPurchases2
769264    +          +     0.06426605759446 * GRP_NumWebPurchases3
769265    +          +     -0.0925907148366 * GRP_NumWebPurchases4
769266    +          +    -0.38247659021772 * GRP_RFMstat2  +    -0.19029293671326 *
769267    +        GRP_RFMstat3  +     0.43474715375598 * GRP_RFMstat4
769268    +          +     0.50016038621788 * GRP_RMntFrq2  +    -0.67187730592002 *
769269    +        GRP_RMntFrq3  +    -0.23217968284532 * GRP_RMntFrq4
769270    +          +     0.58211670962274 * GRP_Recency2  +     0.40065427673317 *
769271    +        GRP_Recency3  +     0.03489926907231 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -1.49044065215331 * GRP_AcceptedCmp52 + 0.29747214763886 * 
GRP_Frq2 + 0.25845091468379 * GRP_Frq3 + -0.12253400308729 * GRP_Frq4 + 0.67026230943159 * 
GRP_Income2 + -0.07529723714567 * GRP_Income3 + -0.00656076113338 * GRP_Income4 + 
0.11866607313287 * GRP_Mnt2 + 0.50886534936331 * GRP_Mnt3 + -0.40624874712256 * GRP_Mnt4 + 
0.07903512198302 * GRP_MntFishProducts2 + 0.30094355054178 * GRP_MntFishProducts3 + 
0.1592854004233 * GRP_MntFishProducts4 + -0.71778183892118 * GRP_MntGoldProds2 + 
-0.00758784099151 * GRP_MntGoldProds3 + -0.05641788275636 * GRP_MntGoldProds4 + 
-1.00661051196007 * GRP_MntMeatProducts2 + -0.7897102230697 * GRP_MntMeatProducts3 + 
0.82643513947121 * GRP_MntMeatProducts4 + 0.29396736594116 * GRP_MntWines2 + -0.23616802309365 
* GRP_MntWines3 + -0.53754288840118 * GRP_MntWines4 + 0.51299707442487 * 
GRP_NumCatalogPurchases3 + -0.50131971617023 * GRP_NumCatalogPurchases4 + -1.0244605634362 * 
GRP_NumDistPurchases2 + 0.62371418531403 * GRP_NumDistPurchases3 + 0.01028523337025 * 
GRP_NumDistPurchases4 + 0.57550765494375 * GRP_NumWebPurchases2 + 0.06426605759446 * 
GRP_NumWebPurchases3 + -0.0925907148366 * GRP_NumWebPurchases4 + -0.38247659021772 * 
GRP_RFMstat2 + -0.19029293671326 * GRP_RFMstat3 + 0.43474715375598 * GRP_RFMstat4 + 
0.50016038621788 * GRP_RMntFrq2 + -0.67187730592002 * GRP_RMntFrq3 + -0.23217968284532 * 
GRP_RMntFrq4 + 0.58211670962274 * GRP_Recency2 + 0.40065427673317 * GRP_Recency3 + 
0.03489926907231 * GRP_Recency4 ;
769272    +   H11  =    -0.62541132065477 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.62541132065477 + H11 ;
769273    +   H12  =     1.33919796685016 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.33919796685016 + H12 ;
769274    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
769275    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
769276    +END;
MPRINT(EM_DIAGRAM):   END;
769277    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
769278    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
769279    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
769280    +END;
MPRINT(EM_DIAGRAM):   END;
769281    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769282    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
769283    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769284    +
769285    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
769286    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
769287    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
769288    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
769289    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
769290    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769291    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
769292    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
769293    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
769294    +end;
MPRINT(EM_DIAGRAM):   end;
769295    +else do;
MPRINT(EM_DIAGRAM):   else do;
769296    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
769297    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
769298    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
769299    +   end;
MPRINT(EM_DIAGRAM):   end;
769300    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
769301    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
769302    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
769303    +   end;
MPRINT(EM_DIAGRAM):   end;
769304    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769305    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
769306    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
769307    +   end;
MPRINT(EM_DIAGRAM):   end;
769308    +end;
MPRINT(EM_DIAGRAM):   end;
769309    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
769310    +   P_DepVar1  =     2.63836588308478 * H11  +     2.61621667267981 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.63836588308478 * H11 + 2.61621667267981 * H12 ;
769311    +   P_DepVar1  =    -1.97856411598138 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97856411598138 + P_DepVar1 ;
769312    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
769313    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
769314    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
769315    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
769316    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
769317    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
769318    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
769319    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
769320    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
769321    +END;
MPRINT(EM_DIAGRAM):   END;
769322    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
769323    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
769324    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
769325    +END;
MPRINT(EM_DIAGRAM):   END;
769326    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
769327    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
769328    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
769329    +END;
MPRINT(EM_DIAGRAM):   END;
769330    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
769331    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
769332    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
769333    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
769334    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
769335    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
769336    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
769337    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769338    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
769339    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
769340    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
769341    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
769342    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
769343    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
769344    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
769345    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
769346    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
769347    +END;
MPRINT(EM_DIAGRAM):   END;
769348    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
769349    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
769350    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
769351    +drop
769352    +H11
769353    +H12
769354    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
769355    +* Renaming variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural20;
769356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769357    +* Renaming Posterior variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural20;
769358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769359    +drop Neural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar1;
769360    +Neural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar1 = P_DepVar1;
769361    +drop Neural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar0;
769362    +Neural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar0 = P_DepVar0;
769363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769364    +* Renaming _WARN_ variable for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural20;
769365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769366    +length Neural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural20_WARN_ $4;
769367    +drop Neural20_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural20_WARN_;
769368    +Neural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural20_WARN_ = _WARN_;
769369    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769370    +* Ensmbl3: Scoring Code of model 2 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 2 of 9;
769371    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769373    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
769374    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
769375    +* NODE: Neural19;
MPRINT(EM_DIAGRAM):   * NODE: Neural19;
769376    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
769377    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
769378    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
769379    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
769380    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
769381    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
769382    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
769383    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
769384    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
769385    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
769386    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
769387    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
769388    +LENGTH _WARN_ $4
769389    +      F_DepVar  $ 12
769390    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
769391    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
769392    +
769393    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
769394    +
769395    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
769396    +
769397    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
769398    +
769399    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
769400    +
769401    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
769402    +
769403    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
769404    +
769405    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
769406    +
769407    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
769408    +
769409    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
769410    +
769411    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
769412    +
769413    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
769414    +
769415    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
769416    +
769417    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
769418    +
769419    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
769420    +
769421    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
769422    +
769423    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
769424    +
769425    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
769426    +
769427    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
769428    +
769429    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
769430    +
769431    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
769432    +
769433    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
769434    +
769435    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
769436    +
769437    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
769438    +
769439    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
769440    +
769441    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
769442    +
769443    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
769444    +
769445    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
769446    +
769447    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
769448    +
769449    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
769450    +
769451    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
769452    +
769453    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
769454    +
769455    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
769456    +
769457    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
769458    +
769459    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
769460    +
769461    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
769462    +
769463    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
769464    +
769465    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
769466    +
769467    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
769468    +
769469    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
769470    +
769471    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
769472    +
769473    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
769474    +
769475    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
769476    +
769477    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
769478    +
769479    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
769480    +
769481    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
769482    +
769483    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
769484    +
769485    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
769486    +
769487    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
769488    +
769489    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
769490    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
769491    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
769492    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
769493    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769495    +end;
MPRINT(EM_DIAGRAM):   end;
769496    +else do;
MPRINT(EM_DIAGRAM):   else do;
769497    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769498    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
769499    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769500    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
769501    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
769502    +   end;
MPRINT(EM_DIAGRAM):   end;
769503    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769504    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
769505    +   end;
MPRINT(EM_DIAGRAM):   end;
769506    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769507    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
769508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769510    +   end;
MPRINT(EM_DIAGRAM):   end;
769511    +end;
MPRINT(EM_DIAGRAM):   end;
769512    +
769513    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
769514    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
769515    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
769516    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
769517    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
769518    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
769519    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769520    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769521    +end;
MPRINT(EM_DIAGRAM):   end;
769522    +else do;
MPRINT(EM_DIAGRAM):   else do;
769523    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769524    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
769525    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769526    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
769527    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
769528    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
769529    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
769530    +   end;
MPRINT(EM_DIAGRAM):   end;
769531    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769532    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
769533    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
769534    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
769535    +   end;
MPRINT(EM_DIAGRAM):   end;
769536    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769537    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
769538    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
769539    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
769540    +   end;
MPRINT(EM_DIAGRAM):   end;
769541    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769542    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
769543    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
769544    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
769545    +   end;
MPRINT(EM_DIAGRAM):   end;
769546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769547    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
769548    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
769549    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
769550    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769551    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769552    +   end;
MPRINT(EM_DIAGRAM):   end;
769553    +end;
MPRINT(EM_DIAGRAM):   end;
769554    +
769555    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
769556    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
769557    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
769558    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
769559    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
769560    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
769561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769563    +end;
MPRINT(EM_DIAGRAM):   end;
769564    +else do;
MPRINT(EM_DIAGRAM):   else do;
769565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769566    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
769567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769568    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
769569    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
769570    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
769571    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
769572    +   end;
MPRINT(EM_DIAGRAM):   end;
769573    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769574    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
769575    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
769576    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
769577    +   end;
MPRINT(EM_DIAGRAM):   end;
769578    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769579    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
769580    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
769581    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
769582    +   end;
MPRINT(EM_DIAGRAM):   end;
769583    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769584    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
769585    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
769586    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
769587    +   end;
MPRINT(EM_DIAGRAM):   end;
769588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769589    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
769590    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
769591    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
769592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769594    +   end;
MPRINT(EM_DIAGRAM):   end;
769595    +end;
MPRINT(EM_DIAGRAM):   end;
769596    +
769597    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
769598    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
769599    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
769600    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
769601    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
769602    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
769603    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769604    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769605    +end;
MPRINT(EM_DIAGRAM):   end;
769606    +else do;
MPRINT(EM_DIAGRAM):   else do;
769607    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769608    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
769609    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769610    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769611    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
769612    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
769613    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
769614    +   end;
MPRINT(EM_DIAGRAM):   end;
769615    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769616    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
769617    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
769618    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
769619    +   end;
MPRINT(EM_DIAGRAM):   end;
769620    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769621    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
769622    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
769623    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
769624    +   end;
MPRINT(EM_DIAGRAM):   end;
769625    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769626    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
769627    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
769628    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
769629    +   end;
MPRINT(EM_DIAGRAM):   end;
769630    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769631    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
769632    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
769633    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
769634    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769635    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769636    +   end;
MPRINT(EM_DIAGRAM):   end;
769637    +end;
MPRINT(EM_DIAGRAM):   end;
769638    +
769639    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
769640    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
769641    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
769642    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
769643    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
769644    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
769645    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769646    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769647    +end;
MPRINT(EM_DIAGRAM):   end;
769648    +else do;
MPRINT(EM_DIAGRAM):   else do;
769649    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769650    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
769651    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769652    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769653    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
769654    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
769655    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
769656    +   end;
MPRINT(EM_DIAGRAM):   end;
769657    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769658    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
769659    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
769660    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
769661    +   end;
MPRINT(EM_DIAGRAM):   end;
769662    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769663    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
769664    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
769665    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
769666    +   end;
MPRINT(EM_DIAGRAM):   end;
769667    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769668    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
769669    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
769670    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
769671    +   end;
MPRINT(EM_DIAGRAM):   end;
769672    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769673    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
769674    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
769675    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
769676    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769677    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769678    +   end;
MPRINT(EM_DIAGRAM):   end;
769679    +end;
MPRINT(EM_DIAGRAM):   end;
769680    +
769681    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
769682    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
769683    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
769684    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
769685    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
769686    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
769687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769689    +end;
MPRINT(EM_DIAGRAM):   end;
769690    +else do;
MPRINT(EM_DIAGRAM):   else do;
769691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769692    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
769693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769694    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769695    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
769696    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
769697    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
769698    +   end;
MPRINT(EM_DIAGRAM):   end;
769699    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769700    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
769701    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
769702    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
769703    +   end;
MPRINT(EM_DIAGRAM):   end;
769704    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769705    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
769706    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
769707    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
769708    +   end;
MPRINT(EM_DIAGRAM):   end;
769709    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769710    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
769711    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
769712    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
769713    +   end;
MPRINT(EM_DIAGRAM):   end;
769714    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769715    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
769716    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
769717    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
769718    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769719    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769720    +   end;
MPRINT(EM_DIAGRAM):   end;
769721    +end;
MPRINT(EM_DIAGRAM):   end;
769722    +
769723    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
769724    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
769725    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
769726    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
769727    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
769728    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
769729    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769730    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769731    +end;
MPRINT(EM_DIAGRAM):   end;
769732    +else do;
MPRINT(EM_DIAGRAM):   else do;
769733    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769734    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
769735    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769736    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769737    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
769738    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
769739    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
769740    +   end;
MPRINT(EM_DIAGRAM):   end;
769741    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769742    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
769743    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
769744    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
769745    +   end;
MPRINT(EM_DIAGRAM):   end;
769746    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769747    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
769748    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
769749    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
769750    +   end;
MPRINT(EM_DIAGRAM):   end;
769751    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769752    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
769753    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
769754    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
769755    +   end;
MPRINT(EM_DIAGRAM):   end;
769756    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769757    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
769758    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
769759    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
769760    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769761    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769762    +   end;
MPRINT(EM_DIAGRAM):   end;
769763    +end;
MPRINT(EM_DIAGRAM):   end;
769764    +
769765    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
769766    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
769767    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
769768    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
769769    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
769770    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
769771    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769772    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769773    +end;
MPRINT(EM_DIAGRAM):   end;
769774    +else do;
MPRINT(EM_DIAGRAM):   else do;
769775    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769776    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
769777    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769778    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769779    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
769780    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
769781    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
769782    +   end;
MPRINT(EM_DIAGRAM):   end;
769783    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769784    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
769785    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
769786    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
769787    +   end;
MPRINT(EM_DIAGRAM):   end;
769788    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769789    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
769790    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
769791    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
769792    +   end;
MPRINT(EM_DIAGRAM):   end;
769793    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769794    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
769795    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
769796    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
769797    +   end;
MPRINT(EM_DIAGRAM):   end;
769798    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769799    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
769800    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
769801    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
769802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769804    +   end;
MPRINT(EM_DIAGRAM):   end;
769805    +end;
MPRINT(EM_DIAGRAM):   end;
769806    +
769807    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
769808    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
769809    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
769810    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
769811    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
769812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769814    +end;
MPRINT(EM_DIAGRAM):   end;
769815    +else do;
MPRINT(EM_DIAGRAM):   else do;
769816    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769817    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
769818    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769819    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769820    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
769821    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
769822    +   end;
MPRINT(EM_DIAGRAM):   end;
769823    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769824    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
769825    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
769826    +   end;
MPRINT(EM_DIAGRAM):   end;
769827    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769828    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
769829    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
769830    +   end;
MPRINT(EM_DIAGRAM):   end;
769831    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769832    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
769833    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
769834    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769835    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769836    +   end;
MPRINT(EM_DIAGRAM):   end;
769837    +end;
MPRINT(EM_DIAGRAM):   end;
769838    +
769839    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
769840    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
769841    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
769842    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
769843    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
769844    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
769845    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769846    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769847    +end;
MPRINT(EM_DIAGRAM):   end;
769848    +else do;
MPRINT(EM_DIAGRAM):   else do;
769849    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769850    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
769851    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769852    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
769853    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
769854    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
769855    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
769856    +   end;
MPRINT(EM_DIAGRAM):   end;
769857    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769858    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
769859    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
769860    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
769861    +   end;
MPRINT(EM_DIAGRAM):   end;
769862    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769863    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
769864    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
769865    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
769866    +   end;
MPRINT(EM_DIAGRAM):   end;
769867    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769868    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
769869    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
769870    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
769871    +   end;
MPRINT(EM_DIAGRAM):   end;
769872    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769873    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
769874    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
769875    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
769876    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769877    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769878    +   end;
MPRINT(EM_DIAGRAM):   end;
769879    +end;
MPRINT(EM_DIAGRAM):   end;
769880    +
769881    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
769882    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
769883    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
769884    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
769885    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
769886    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
769887    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769888    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769889    +end;
MPRINT(EM_DIAGRAM):   end;
769890    +else do;
MPRINT(EM_DIAGRAM):   else do;
769891    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769892    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
769893    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769894    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769895    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
769896    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
769897    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
769898    +   end;
MPRINT(EM_DIAGRAM):   end;
769899    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769900    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
769901    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
769902    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
769903    +   end;
MPRINT(EM_DIAGRAM):   end;
769904    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769905    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
769906    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
769907    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
769908    +   end;
MPRINT(EM_DIAGRAM):   end;
769909    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769910    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
769911    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
769912    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
769913    +   end;
MPRINT(EM_DIAGRAM):   end;
769914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769915    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
769916    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
769917    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
769918    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769919    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769920    +   end;
MPRINT(EM_DIAGRAM):   end;
769921    +end;
MPRINT(EM_DIAGRAM):   end;
769922    +
769923    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
769924    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
769925    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
769926    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
769927    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
769928    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
769929    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769931    +end;
MPRINT(EM_DIAGRAM):   end;
769932    +else do;
MPRINT(EM_DIAGRAM):   else do;
769933    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769934    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
769935    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769936    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
769937    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
769938    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
769939    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
769940    +   end;
MPRINT(EM_DIAGRAM):   end;
769941    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
769942    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
769943    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
769944    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
769945    +   end;
MPRINT(EM_DIAGRAM):   end;
769946    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769947    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
769948    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
769949    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
769950    +   end;
MPRINT(EM_DIAGRAM):   end;
769951    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769952    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
769953    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
769954    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
769955    +   end;
MPRINT(EM_DIAGRAM):   end;
769956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769957    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
769958    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
769959    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
769960    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
769961    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769962    +   end;
MPRINT(EM_DIAGRAM):   end;
769963    +end;
MPRINT(EM_DIAGRAM):   end;
769964    +
769965    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
769966    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
769967    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
769968    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
769969    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
769970    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
769971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
769972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
769973    +end;
MPRINT(EM_DIAGRAM):   end;
769974    +else do;
MPRINT(EM_DIAGRAM):   else do;
769975    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
769976    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
769977    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
769978    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
769979    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
769980    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
769981    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
769982    +   end;
MPRINT(EM_DIAGRAM):   end;
769983    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
769984    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
769985    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
769986    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
769987    +   end;
MPRINT(EM_DIAGRAM):   end;
769988    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
769989    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
769990    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
769991    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
769992    +   end;
MPRINT(EM_DIAGRAM):   end;
769993    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
769994    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
769995    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
769996    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
769997    +   end;
MPRINT(EM_DIAGRAM):   end;
769998    +   else do;
MPRINT(EM_DIAGRAM):   else do;
769999    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
770000    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
770001    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
770002    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770003    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770004    +   end;
MPRINT(EM_DIAGRAM):   end;
770005    +end;
MPRINT(EM_DIAGRAM):   end;
770006    +
770007    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
770008    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
770009    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
770010    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
770011    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
770012    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
770013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770015    +end;
MPRINT(EM_DIAGRAM):   end;
770016    +else do;
MPRINT(EM_DIAGRAM):   else do;
770017    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770018    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
770019    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770020    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
770021    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
770022    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
770023    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
770024    +   end;
MPRINT(EM_DIAGRAM):   end;
770025    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770026    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
770027    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
770028    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
770029    +   end;
MPRINT(EM_DIAGRAM):   end;
770030    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
770031    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
770032    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
770033    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
770034    +   end;
MPRINT(EM_DIAGRAM):   end;
770035    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770036    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
770037    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
770038    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
770039    +   end;
MPRINT(EM_DIAGRAM):   end;
770040    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770041    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
770042    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
770043    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
770044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770046    +   end;
MPRINT(EM_DIAGRAM):   end;
770047    +end;
MPRINT(EM_DIAGRAM):   end;
770048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770049    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
770050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770052    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
770053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770054    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
770055    +   H11  =    -0.20808401117374 * GRP_AcceptedCmp52  +      1.5952064946991 *
770056    +        GRP_Frq2  +    -0.01225273525848 * GRP_Frq3  +    -0.62835698024634 *
770057    +        GRP_Frq4  +     0.44314401678348 * GRP_Income2
770058    +          +     0.89646769323205 * GRP_Income3  +    -0.90649183264259 *
770059    +        GRP_Income4  +    -0.55176085229947 * GRP_Mnt2
770060    +          +    -0.28020133968753 * GRP_Mnt3  +     0.17871933677614 * GRP_Mnt4
770061    +          +     0.38585041088838 * GRP_MntFishProducts2
770062    +          +    -0.22597951859521 * GRP_MntFishProducts3
770063    +          +    -0.12591354177724 * GRP_MntFishProducts4
770064    +          +     0.41517790727814 * GRP_MntGoldProds2
770065    +          +    -0.01783554546067 * GRP_MntGoldProds3
770066    +          +    -0.05254364640808 * GRP_MntGoldProds4
770067    +          +     0.11041766264422 * GRP_MntMeatProducts2
770068    +          +     0.80734417241917 * GRP_MntMeatProducts3
770069    +          +    -0.58385299076265 * GRP_MntMeatProducts4
770070    +          +     0.63351163942796 * GRP_MntWines2  +      0.4938617622427 *
770071    +        GRP_MntWines3  +     0.02607762678073 * GRP_MntWines4
770072    +          +    -1.43194573733764 * GRP_NumCatalogPurchases3
770073    +          +     0.55178119754186 * GRP_NumCatalogPurchases4
770074    +          +      -1.830671366144 * GRP_NumDistPurchases2
770075    +          +    -1.17053785506362 * GRP_NumDistPurchases3
770076    +          +     0.98564208160287 * GRP_NumDistPurchases4
770077    +          +    -0.22019170543618 * GRP_NumWebPurchases2
770078    +          +     0.12596691753667 * GRP_NumWebPurchases3
770079    +          +    -0.02882568244969 * GRP_NumWebPurchases4
770080    +          +    -0.21302125337044 * GRP_RFMstat2  +     0.08158805477511 *
770081    +        GRP_RFMstat3  +     -0.2631946184422 * GRP_RFMstat4
770082    +          +      0.1161399236304 * GRP_RMntFrq2  +     0.60576408771811 *
770083    +        GRP_RMntFrq3  +    -0.25254086880004 * GRP_RMntFrq4
770084    +          +      0.8664956591594 * GRP_Recency2  +     0.06243974875226 *
770085    +        GRP_Recency3  +    -0.38266930051466 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20808401117374 * GRP_AcceptedCmp52 + 1.5952064946991 * GRP_Frq2 
+ -0.01225273525848 * GRP_Frq3 + -0.62835698024634 * GRP_Frq4 + 0.44314401678348 * GRP_Income2 
+ 0.89646769323205 * GRP_Income3 + -0.90649183264259 * GRP_Income4 + -0.55176085229947 * 
GRP_Mnt2 + -0.28020133968753 * GRP_Mnt3 + 0.17871933677614 * GRP_Mnt4 + 0.38585041088838 * 
GRP_MntFishProducts2 + -0.22597951859521 * GRP_MntFishProducts3 + -0.12591354177724 * 
GRP_MntFishProducts4 + 0.41517790727814 * GRP_MntGoldProds2 + -0.01783554546067 * 
GRP_MntGoldProds3 + -0.05254364640808 * GRP_MntGoldProds4 + 0.11041766264422 * 
GRP_MntMeatProducts2 + 0.80734417241917 * GRP_MntMeatProducts3 + -0.58385299076265 * 
GRP_MntMeatProducts4 + 0.63351163942796 * GRP_MntWines2 + 0.4938617622427 * GRP_MntWines3 + 
0.02607762678073 * GRP_MntWines4 + -1.43194573733764 * GRP_NumCatalogPurchases3 + 
0.55178119754186 * GRP_NumCatalogPurchases4 + -1.830671366144 * GRP_NumDistPurchases2 + 
-1.17053785506362 * GRP_NumDistPurchases3 + 0.98564208160287 * GRP_NumDistPurchases4 + 
-0.22019170543618 * GRP_NumWebPurchases2 + 0.12596691753667 * GRP_NumWebPurchases3 + 
-0.02882568244969 * GRP_NumWebPurchases4 + -0.21302125337044 * GRP_RFMstat2 + 0.08158805477511 
* GRP_RFMstat3 + -0.2631946184422 * GRP_RFMstat4 + 0.1161399236304 * GRP_RMntFrq2 + 
0.60576408771811 * GRP_RMntFrq3 + -0.25254086880004 * GRP_RMntFrq4 + 0.8664956591594 * 
GRP_Recency2 + 0.06243974875226 * GRP_Recency3 + -0.38266930051466 * GRP_Recency4 ;
770086    +   H12  =    -1.49044065215331 * GRP_AcceptedCmp52  +     0.29747214763886 *
770087    +        GRP_Frq2  +     0.25845091468379 * GRP_Frq3  +    -0.12253400308729 *
770088    +        GRP_Frq4  +     0.67026230943159 * GRP_Income2
770089    +          +    -0.07529723714567 * GRP_Income3  +    -0.00656076113338 *
770090    +        GRP_Income4  +     0.11866607313287 * GRP_Mnt2
770091    +          +     0.50886534936331 * GRP_Mnt3  +    -0.40624874712256 * GRP_Mnt4
770092    +          +     0.07903512198302 * GRP_MntFishProducts2
770093    +          +     0.30094355054178 * GRP_MntFishProducts3
770094    +          +      0.1592854004233 * GRP_MntFishProducts4
770095    +          +    -0.71778183892118 * GRP_MntGoldProds2
770096    +          +    -0.00758784099151 * GRP_MntGoldProds3
770097    +          +    -0.05641788275636 * GRP_MntGoldProds4
770098    +          +    -1.00661051196007 * GRP_MntMeatProducts2
770099    +          +     -0.7897102230697 * GRP_MntMeatProducts3
770100    +          +     0.82643513947121 * GRP_MntMeatProducts4
770101    +          +     0.29396736594116 * GRP_MntWines2  +    -0.23616802309365 *
770102    +        GRP_MntWines3  +    -0.53754288840118 * GRP_MntWines4
770103    +          +     0.51299707442487 * GRP_NumCatalogPurchases3
770104    +          +    -0.50131971617023 * GRP_NumCatalogPurchases4
770105    +          +     -1.0244605634362 * GRP_NumDistPurchases2
770106    +          +     0.62371418531403 * GRP_NumDistPurchases3
770107    +          +     0.01028523337025 * GRP_NumDistPurchases4
770108    +          +     0.57550765494375 * GRP_NumWebPurchases2
770109    +          +     0.06426605759446 * GRP_NumWebPurchases3
770110    +          +     -0.0925907148366 * GRP_NumWebPurchases4
770111    +          +    -0.38247659021772 * GRP_RFMstat2  +    -0.19029293671326 *
770112    +        GRP_RFMstat3  +     0.43474715375598 * GRP_RFMstat4
770113    +          +     0.50016038621788 * GRP_RMntFrq2  +    -0.67187730592002 *
770114    +        GRP_RMntFrq3  +    -0.23217968284532 * GRP_RMntFrq4
770115    +          +     0.58211670962274 * GRP_Recency2  +     0.40065427673317 *
770116    +        GRP_Recency3  +     0.03489926907231 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -1.49044065215331 * GRP_AcceptedCmp52 + 0.29747214763886 * 
GRP_Frq2 + 0.25845091468379 * GRP_Frq3 + -0.12253400308729 * GRP_Frq4 + 0.67026230943159 * 
GRP_Income2 + -0.07529723714567 * GRP_Income3 + -0.00656076113338 * GRP_Income4 + 
0.11866607313287 * GRP_Mnt2 + 0.50886534936331 * GRP_Mnt3 + -0.40624874712256 * GRP_Mnt4 + 
0.07903512198302 * GRP_MntFishProducts2 + 0.30094355054178 * GRP_MntFishProducts3 + 
0.1592854004233 * GRP_MntFishProducts4 + -0.71778183892118 * GRP_MntGoldProds2 + 
-0.00758784099151 * GRP_MntGoldProds3 + -0.05641788275636 * GRP_MntGoldProds4 + 
-1.00661051196007 * GRP_MntMeatProducts2 + -0.7897102230697 * GRP_MntMeatProducts3 + 
0.82643513947121 * GRP_MntMeatProducts4 + 0.29396736594116 * GRP_MntWines2 + -0.23616802309365 
* GRP_MntWines3 + -0.53754288840118 * GRP_MntWines4 + 0.51299707442487 * 
GRP_NumCatalogPurchases3 + -0.50131971617023 * GRP_NumCatalogPurchases4 + -1.0244605634362 * 
GRP_NumDistPurchases2 + 0.62371418531403 * GRP_NumDistPurchases3 + 0.01028523337025 * 
GRP_NumDistPurchases4 + 0.57550765494375 * GRP_NumWebPurchases2 + 0.06426605759446 * 
GRP_NumWebPurchases3 + -0.0925907148366 * GRP_NumWebPurchases4 + -0.38247659021772 * 
GRP_RFMstat2 + -0.19029293671326 * GRP_RFMstat3 + 0.43474715375598 * GRP_RFMstat4 + 
0.50016038621788 * GRP_RMntFrq2 + -0.67187730592002 * GRP_RMntFrq3 + -0.23217968284532 * 
GRP_RMntFrq4 + 0.58211670962274 * GRP_Recency2 + 0.40065427673317 * GRP_Recency3 + 
0.03489926907231 * GRP_Recency4 ;
770117    +   H11  =    -0.62541132065477 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.62541132065477 + H11 ;
770118    +   H12  =     1.33919796685016 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.33919796685016 + H12 ;
770119    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
770120    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
770121    +END;
MPRINT(EM_DIAGRAM):   END;
770122    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
770123    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
770124    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
770125    +END;
MPRINT(EM_DIAGRAM):   END;
770126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770127    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
770128    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770129    +
770130    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
770131    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
770132    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
770133    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
770134    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
770135    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770136    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
770137    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
770138    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
770139    +end;
MPRINT(EM_DIAGRAM):   end;
770140    +else do;
MPRINT(EM_DIAGRAM):   else do;
770141    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
770142    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
770143    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
770144    +   end;
MPRINT(EM_DIAGRAM):   end;
770145    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
770146    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
770147    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
770148    +   end;
MPRINT(EM_DIAGRAM):   end;
770149    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770150    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
770151    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
770152    +   end;
MPRINT(EM_DIAGRAM):   end;
770153    +end;
MPRINT(EM_DIAGRAM):   end;
770154    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
770155    +   P_DepVar1  =     2.63836588308478 * H11  +     2.61621667267981 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.63836588308478 * H11 + 2.61621667267981 * H12 ;
770156    +   P_DepVar1  =    -1.97856411598138 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97856411598138 + P_DepVar1 ;
770157    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
770158    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
770159    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
770160    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
770161    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
770162    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
770163    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
770164    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
770165    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
770166    +END;
MPRINT(EM_DIAGRAM):   END;
770167    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
770168    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
770169    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
770170    +END;
MPRINT(EM_DIAGRAM):   END;
770171    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
770172    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
770173    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
770174    +END;
MPRINT(EM_DIAGRAM):   END;
770175    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
770176    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
770177    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
770178    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
770179    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
770180    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
770181    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
770182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770183    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
770184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770185    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
770186    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
770187    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
770188    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
770189    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
770190    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
770191    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
770192    +END;
MPRINT(EM_DIAGRAM):   END;
770193    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
770194    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
770195    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
770196    +drop
770197    +H11
770198    +H12
770199    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
770200    +* Renaming variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural19;
770201    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770202    +* Renaming Posterior variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural19;
770203    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770204    +drop Neural19_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar1;
770205    +Neural19_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar1 = P_DepVar1;
770206    +drop Neural19_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar0;
770207    +Neural19_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar0 = P_DepVar0;
770208    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770209    +* Renaming _WARN_ variable for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural19;
770210    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770211    +length Neural19_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural19_WARN_ $4;
770212    +drop Neural19_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural19_WARN_;
770213    +Neural19_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural19_WARN_ = _WARN_;
770214    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770215    +* Ensmbl3: Scoring Code of model 3 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 3 of 9;
770216    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770217    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770218    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
770219    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
770220    +* NODE: Neural5;
MPRINT(EM_DIAGRAM):   * NODE: Neural5;
770221    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
770222    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
770223    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
770224    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
770225    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
770226    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
770227    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
770228    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
770229    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
770230    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
770231    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
770232    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
770233    +LENGTH _WARN_ $4
770234    +      F_DepVar  $ 12
770235    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
770236    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
770237    +
770238    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
770239    +
770240    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
770241    +
770242    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
770243    +
770244    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
770245    +
770246    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
770247    +
770248    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
770249    +
770250    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
770251    +
770252    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
770253    +
770254    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
770255    +
770256    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
770257    +
770258    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
770259    +
770260    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
770261    +
770262    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
770263    +
770264    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
770265    +
770266    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
770267    +
770268    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
770269    +
770270    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
770271    +
770272    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
770273    +
770274    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
770275    +
770276    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
770277    +
770278    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
770279    +
770280    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
770281    +
770282    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
770283    +
770284    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
770285    +
770286    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
770287    +
770288    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
770289    +
770290    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
770291    +
770292    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
770293    +
770294    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
770295    +
770296    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
770297    +
770298    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
770299    +
770300    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
770301    +
770302    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
770303    +
770304    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
770305    +
770306    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
770307    +
770308    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
770309    +
770310    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
770311    +
770312    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
770313    +
770314    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
770315    +
770316    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
770317    +
770318    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
770319    +
770320    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
770321    +
770322    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
770323    +
770324    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
770325    +
770326    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
770327    +
770328    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
770329    +
770330    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
770331    +
770332    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
770333    +
770334    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
770335    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
770336    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
770337    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
770338    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770339    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770340    +end;
MPRINT(EM_DIAGRAM):   end;
770341    +else do;
MPRINT(EM_DIAGRAM):   else do;
770342    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770343    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
770344    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770345    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
770346    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
770347    +   end;
MPRINT(EM_DIAGRAM):   end;
770348    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
770349    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
770350    +   end;
MPRINT(EM_DIAGRAM):   end;
770351    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770352    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
770353    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770354    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770355    +   end;
MPRINT(EM_DIAGRAM):   end;
770356    +end;
MPRINT(EM_DIAGRAM):   end;
770357    +
770358    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
770359    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
770360    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
770361    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
770362    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
770363    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
770364    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770365    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770366    +end;
MPRINT(EM_DIAGRAM):   end;
770367    +else do;
MPRINT(EM_DIAGRAM):   else do;
770368    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770369    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
770370    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770371    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
770372    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
770373    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
770374    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
770375    +   end;
MPRINT(EM_DIAGRAM):   end;
770376    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
770377    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
770378    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
770379    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
770380    +   end;
MPRINT(EM_DIAGRAM):   end;
770381    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770382    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
770383    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
770384    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
770385    +   end;
MPRINT(EM_DIAGRAM):   end;
770386    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770387    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
770388    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
770389    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
770390    +   end;
MPRINT(EM_DIAGRAM):   end;
770391    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770392    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
770393    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
770394    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
770395    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770396    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770397    +   end;
MPRINT(EM_DIAGRAM):   end;
770398    +end;
MPRINT(EM_DIAGRAM):   end;
770399    +
770400    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
770401    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
770402    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
770403    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
770404    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
770405    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
770406    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770407    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770408    +end;
MPRINT(EM_DIAGRAM):   end;
770409    +else do;
MPRINT(EM_DIAGRAM):   else do;
770410    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770411    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
770412    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770413    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
770414    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
770415    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
770416    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
770417    +   end;
MPRINT(EM_DIAGRAM):   end;
770418    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770419    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
770420    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
770421    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
770422    +   end;
MPRINT(EM_DIAGRAM):   end;
770423    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
770424    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
770425    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
770426    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
770427    +   end;
MPRINT(EM_DIAGRAM):   end;
770428    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770429    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
770430    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
770431    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
770432    +   end;
MPRINT(EM_DIAGRAM):   end;
770433    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770434    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
770435    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
770436    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
770437    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770438    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770439    +   end;
MPRINT(EM_DIAGRAM):   end;
770440    +end;
MPRINT(EM_DIAGRAM):   end;
770441    +
770442    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
770443    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
770444    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
770445    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
770446    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
770447    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
770448    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770449    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770450    +end;
MPRINT(EM_DIAGRAM):   end;
770451    +else do;
MPRINT(EM_DIAGRAM):   else do;
770452    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770453    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
770454    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770455    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770456    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
770457    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
770458    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
770459    +   end;
MPRINT(EM_DIAGRAM):   end;
770460    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770461    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
770462    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
770463    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
770464    +   end;
MPRINT(EM_DIAGRAM):   end;
770465    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770466    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
770467    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
770468    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
770469    +   end;
MPRINT(EM_DIAGRAM):   end;
770470    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770471    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
770472    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
770473    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
770474    +   end;
MPRINT(EM_DIAGRAM):   end;
770475    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770476    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
770477    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
770478    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
770479    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770480    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770481    +   end;
MPRINT(EM_DIAGRAM):   end;
770482    +end;
MPRINT(EM_DIAGRAM):   end;
770483    +
770484    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
770485    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
770486    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
770487    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
770488    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
770489    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
770490    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770491    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770492    +end;
MPRINT(EM_DIAGRAM):   end;
770493    +else do;
MPRINT(EM_DIAGRAM):   else do;
770494    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770495    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
770496    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770497    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770498    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
770499    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
770500    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
770501    +   end;
MPRINT(EM_DIAGRAM):   end;
770502    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770503    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
770504    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
770505    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
770506    +   end;
MPRINT(EM_DIAGRAM):   end;
770507    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770508    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
770509    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
770510    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
770511    +   end;
MPRINT(EM_DIAGRAM):   end;
770512    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770513    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
770514    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
770515    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
770516    +   end;
MPRINT(EM_DIAGRAM):   end;
770517    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770518    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
770519    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
770520    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
770521    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770522    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770523    +   end;
MPRINT(EM_DIAGRAM):   end;
770524    +end;
MPRINT(EM_DIAGRAM):   end;
770525    +
770526    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
770527    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
770528    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
770529    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
770530    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
770531    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
770532    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770533    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770534    +end;
MPRINT(EM_DIAGRAM):   end;
770535    +else do;
MPRINT(EM_DIAGRAM):   else do;
770536    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770537    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
770538    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770539    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770540    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
770541    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
770542    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
770543    +   end;
MPRINT(EM_DIAGRAM):   end;
770544    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770545    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
770546    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
770547    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
770548    +   end;
MPRINT(EM_DIAGRAM):   end;
770549    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770550    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
770551    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
770552    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
770553    +   end;
MPRINT(EM_DIAGRAM):   end;
770554    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770555    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
770556    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
770557    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
770558    +   end;
MPRINT(EM_DIAGRAM):   end;
770559    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770560    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
770561    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
770562    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
770563    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770564    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770565    +   end;
MPRINT(EM_DIAGRAM):   end;
770566    +end;
MPRINT(EM_DIAGRAM):   end;
770567    +
770568    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
770569    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
770570    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
770571    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
770572    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
770573    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
770574    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770575    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770576    +end;
MPRINT(EM_DIAGRAM):   end;
770577    +else do;
MPRINT(EM_DIAGRAM):   else do;
770578    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770579    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
770580    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770581    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770582    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
770583    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
770584    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
770585    +   end;
MPRINT(EM_DIAGRAM):   end;
770586    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770587    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
770588    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
770589    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
770590    +   end;
MPRINT(EM_DIAGRAM):   end;
770591    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770592    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
770593    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
770594    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
770595    +   end;
MPRINT(EM_DIAGRAM):   end;
770596    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770597    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
770598    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
770599    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
770600    +   end;
MPRINT(EM_DIAGRAM):   end;
770601    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770602    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
770603    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
770604    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
770605    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770606    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770607    +   end;
MPRINT(EM_DIAGRAM):   end;
770608    +end;
MPRINT(EM_DIAGRAM):   end;
770609    +
770610    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
770611    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
770612    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
770613    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
770614    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
770615    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
770616    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770617    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770618    +end;
MPRINT(EM_DIAGRAM):   end;
770619    +else do;
MPRINT(EM_DIAGRAM):   else do;
770620    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770621    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
770622    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770623    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770624    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
770625    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
770626    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
770627    +   end;
MPRINT(EM_DIAGRAM):   end;
770628    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770629    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
770630    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
770631    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
770632    +   end;
MPRINT(EM_DIAGRAM):   end;
770633    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770634    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
770635    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
770636    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
770637    +   end;
MPRINT(EM_DIAGRAM):   end;
770638    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770639    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
770640    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
770641    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
770642    +   end;
MPRINT(EM_DIAGRAM):   end;
770643    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770644    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
770645    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
770646    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
770647    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770648    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770649    +   end;
MPRINT(EM_DIAGRAM):   end;
770650    +end;
MPRINT(EM_DIAGRAM):   end;
770651    +
770652    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
770653    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
770654    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
770655    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
770656    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
770657    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770658    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770659    +end;
MPRINT(EM_DIAGRAM):   end;
770660    +else do;
MPRINT(EM_DIAGRAM):   else do;
770661    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770662    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
770663    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770664    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770665    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
770666    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
770667    +   end;
MPRINT(EM_DIAGRAM):   end;
770668    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770669    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
770670    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
770671    +   end;
MPRINT(EM_DIAGRAM):   end;
770672    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770673    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
770674    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
770675    +   end;
MPRINT(EM_DIAGRAM):   end;
770676    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770677    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
770678    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
770679    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770680    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770681    +   end;
MPRINT(EM_DIAGRAM):   end;
770682    +end;
MPRINT(EM_DIAGRAM):   end;
770683    +
770684    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
770685    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
770686    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
770687    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
770688    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
770689    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
770690    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770691    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770692    +end;
MPRINT(EM_DIAGRAM):   end;
770693    +else do;
MPRINT(EM_DIAGRAM):   else do;
770694    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770695    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
770696    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770697    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
770698    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
770699    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
770700    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
770701    +   end;
MPRINT(EM_DIAGRAM):   end;
770702    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770703    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
770704    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
770705    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
770706    +   end;
MPRINT(EM_DIAGRAM):   end;
770707    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770708    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
770709    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
770710    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
770711    +   end;
MPRINT(EM_DIAGRAM):   end;
770712    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
770713    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
770714    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
770715    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
770716    +   end;
MPRINT(EM_DIAGRAM):   end;
770717    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770718    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
770719    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
770720    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
770721    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770722    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770723    +   end;
MPRINT(EM_DIAGRAM):   end;
770724    +end;
MPRINT(EM_DIAGRAM):   end;
770725    +
770726    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
770727    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
770728    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
770729    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
770730    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
770731    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
770732    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770733    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770734    +end;
MPRINT(EM_DIAGRAM):   end;
770735    +else do;
MPRINT(EM_DIAGRAM):   else do;
770736    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770737    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
770738    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770739    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770740    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
770741    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
770742    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
770743    +   end;
MPRINT(EM_DIAGRAM):   end;
770744    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770745    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
770746    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
770747    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
770748    +   end;
MPRINT(EM_DIAGRAM):   end;
770749    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770750    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
770751    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
770752    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
770753    +   end;
MPRINT(EM_DIAGRAM):   end;
770754    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770755    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
770756    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
770757    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
770758    +   end;
MPRINT(EM_DIAGRAM):   end;
770759    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770760    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
770761    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
770762    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
770763    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770764    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770765    +   end;
MPRINT(EM_DIAGRAM):   end;
770766    +end;
MPRINT(EM_DIAGRAM):   end;
770767    +
770768    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
770769    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
770770    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
770771    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
770772    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
770773    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
770774    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770775    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770776    +end;
MPRINT(EM_DIAGRAM):   end;
770777    +else do;
MPRINT(EM_DIAGRAM):   else do;
770778    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770779    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
770780    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770781    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
770782    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
770783    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
770784    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
770785    +   end;
MPRINT(EM_DIAGRAM):   end;
770786    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
770787    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
770788    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
770789    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
770790    +   end;
MPRINT(EM_DIAGRAM):   end;
770791    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770792    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
770793    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
770794    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
770795    +   end;
MPRINT(EM_DIAGRAM):   end;
770796    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770797    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
770798    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
770799    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
770800    +   end;
MPRINT(EM_DIAGRAM):   end;
770801    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770802    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
770803    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
770804    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
770805    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770806    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770807    +   end;
MPRINT(EM_DIAGRAM):   end;
770808    +end;
MPRINT(EM_DIAGRAM):   end;
770809    +
770810    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
770811    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
770812    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
770813    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
770814    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
770815    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
770816    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770817    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770818    +end;
MPRINT(EM_DIAGRAM):   end;
770819    +else do;
MPRINT(EM_DIAGRAM):   else do;
770820    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770821    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
770822    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770823    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
770824    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
770825    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
770826    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
770827    +   end;
MPRINT(EM_DIAGRAM):   end;
770828    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
770829    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
770830    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
770831    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
770832    +   end;
MPRINT(EM_DIAGRAM):   end;
770833    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770834    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
770835    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
770836    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
770837    +   end;
MPRINT(EM_DIAGRAM):   end;
770838    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770839    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
770840    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
770841    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
770842    +   end;
MPRINT(EM_DIAGRAM):   end;
770843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770844    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
770845    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
770846    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
770847    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770848    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770849    +   end;
MPRINT(EM_DIAGRAM):   end;
770850    +end;
MPRINT(EM_DIAGRAM):   end;
770851    +
770852    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
770853    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
770854    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
770855    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
770856    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
770857    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
770858    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
770859    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770860    +end;
MPRINT(EM_DIAGRAM):   end;
770861    +else do;
MPRINT(EM_DIAGRAM):   else do;
770862    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
770863    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
770864    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770865    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
770866    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
770867    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
770868    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
770869    +   end;
MPRINT(EM_DIAGRAM):   end;
770870    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
770871    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
770872    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
770873    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
770874    +   end;
MPRINT(EM_DIAGRAM):   end;
770875    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
770876    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
770877    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
770878    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
770879    +   end;
MPRINT(EM_DIAGRAM):   end;
770880    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
770881    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
770882    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
770883    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
770884    +   end;
MPRINT(EM_DIAGRAM):   end;
770885    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770886    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
770887    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
770888    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
770889    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
770890    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770891    +   end;
MPRINT(EM_DIAGRAM):   end;
770892    +end;
MPRINT(EM_DIAGRAM):   end;
770893    +
770894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770895    +*** Checking missing input Interval
770896    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
770897    +
770898    +IF NMISS(
770899    +   Mnt   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Mnt ) THEN DO;
770900    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
770901    +
770902    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
770903    +END;
MPRINT(EM_DIAGRAM):   END;
770904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770905    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
770906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770907    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
770908    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
770909    +END;
MPRINT(EM_DIAGRAM):   END;
770910    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
770911    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
770912    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
770913    +END;
MPRINT(EM_DIAGRAM):   END;
770914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770915    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
770916    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770918    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
770919    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770920    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
770921    +   H11  =    -0.05639626836962 * S_Mnt ;
MPRINT(EM_DIAGRAM):   H11 = -0.05639626836962 * S_Mnt ;
770922    +   H11  = H11  +      0.0860559154003 * GRP_AcceptedCmp52
770923    +          +    -0.19758814669075 * GRP_Frq2  +    -0.02279576157687 * GRP_Frq3
770924    +          +     0.07251746297433 * GRP_Frq4  +    -0.09591494883083 *
770925    +        GRP_Income2  +    -0.08058752115004 * GRP_Income3
770926    +          +     0.08588060203033 * GRP_Income4  +     0.05055584750276 *
770927    +        GRP_Mnt2  +     0.02545024725796 * GRP_Mnt3  +    -0.03224681694037 *
770928    +        GRP_Mnt4  +    -0.06357865903392 * GRP_MntFishProducts2
770929    +          +      -0.010948485075 * GRP_MntFishProducts3
770930    +          +     0.00472964640535 * GRP_MntFishProducts4
770931    +          +     0.02165833203111 * GRP_MntGoldProds2
770932    +          +     0.00197757925658 * GRP_MntGoldProds3
770933    +          +    -0.00068547899434 * GRP_MntGoldProds4
770934    +          +      0.1194292184341 * GRP_MntMeatProducts2
770935    +          +     0.01684568280033 * GRP_MntMeatProducts3
770936    +          +    -0.05297956014628 * GRP_MntMeatProducts4
770937    +          +    -0.11059672251142 * GRP_MntWines2  +     -0.0539431379238 *
770938    +        GRP_MntWines3  +     0.05538795967941 * GRP_MntWines4
770939    +          +     0.08963126282705 * GRP_NumCatalogPurchases3
770940    +          +    -0.00118154367452 * GRP_NumCatalogPurchases4
770941    +          +     0.23032337382095 * GRP_NumDistPurchases2
770942    +          +    -0.00108441464763 * GRP_NumDistPurchases3
770943    +          +    -0.04458982753158 * GRP_NumDistPurchases4
770944    +          +    -0.01380938735738 * GRP_NumWebPurchases2
770945    +          +    -0.01095215304735 * GRP_NumWebPurchases3
770946    +          +      0.0023394125329 * GRP_NumWebPurchases4
770947    +          +     0.05201697043713 * GRP_RFMstat2  +     0.00763917877705 *
770948    +        GRP_RFMstat3  +    -0.01926793167425 * GRP_RFMstat4
770949    +          +      -0.050495884949 * GRP_RMntFrq2  +    -0.03144438155835 *
770950    +        GRP_RMntFrq3  +     0.06453623203831 * GRP_RMntFrq4
770951    +          +    -0.15989883925465 * GRP_Recency2  +    -0.04220884971315 *
770952    +        GRP_Recency3  +     0.04819510617026 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0860559154003 * GRP_AcceptedCmp52 + -0.19758814669075 * 
GRP_Frq2 + -0.02279576157687 * GRP_Frq3 + 0.07251746297433 * GRP_Frq4 + -0.09591494883083 * 
GRP_Income2 + -0.08058752115004 * GRP_Income3 + 0.08588060203033 * GRP_Income4 + 
0.05055584750276 * GRP_Mnt2 + 0.02545024725796 * GRP_Mnt3 + -0.03224681694037 * GRP_Mnt4 + 
-0.06357865903392 * GRP_MntFishProducts2 + -0.010948485075 * GRP_MntFishProducts3 + 
0.00472964640535 * GRP_MntFishProducts4 + 0.02165833203111 * GRP_MntGoldProds2 + 
0.00197757925658 * GRP_MntGoldProds3 + -0.00068547899434 * GRP_MntGoldProds4 + 0.1194292184341 
* GRP_MntMeatProducts2 + 0.01684568280033 * GRP_MntMeatProducts3 + -0.05297956014628 * 
GRP_MntMeatProducts4 + -0.11059672251142 * GRP_MntWines2 + -0.0539431379238 * GRP_MntWines3 + 
0.05538795967941 * GRP_MntWines4 + 0.08963126282705 * GRP_NumCatalogPurchases3 + 
-0.00118154367452 * GRP_NumCatalogPurchases4 + 0.23032337382095 * GRP_NumDistPurchases2 + 
-0.00108441464763 * GRP_NumDistPurchases3 + -0.04458982753158 * GRP_NumDistPurchases4 + 
-0.01380938735738 * GRP_NumWebPurchases2 + -0.01095215304735 * GRP_NumWebPurchases3 + 
0.0023394125329 * GRP_NumWebPurchases4 + 0.05201697043713 * GRP_RFMstat2 + 0.00763917877705 * 
GRP_RFMstat3 + -0.01926793167425 * GRP_RFMstat4 + -0.050495884949 * GRP_RMntFrq2 + 
-0.03144438155835 * GRP_RMntFrq3 + 0.06453623203831 * GRP_RMntFrq4 + -0.15989883925465 * 
GRP_Recency2 + -0.04220884971315 * GRP_Recency3 + 0.04819510617026 * GRP_Recency4 ;
770953    +   H11  =    -0.23141403821803 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.23141403821803 + H11 ;
770954    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
770955    +END;
MPRINT(EM_DIAGRAM):   END;
770956    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
770957    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
770958    +END;
MPRINT(EM_DIAGRAM):   END;
770959    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770960    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
770961    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
770962    +
770963    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
770964    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
770965    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
770966    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
770967    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
770968    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
770969    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
770970    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
770971    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
770972    +end;
MPRINT(EM_DIAGRAM):   end;
770973    +else do;
MPRINT(EM_DIAGRAM):   else do;
770974    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
770975    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
770976    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
770977    +   end;
MPRINT(EM_DIAGRAM):   end;
770978    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
770979    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
770980    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
770981    +   end;
MPRINT(EM_DIAGRAM):   end;
770982    +   else do;
MPRINT(EM_DIAGRAM):   else do;
770983    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
770984    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
770985    +   end;
MPRINT(EM_DIAGRAM):   end;
770986    +end;
MPRINT(EM_DIAGRAM):   end;
770987    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
770988    +   P_DepVar1  =    -12.3989198958755 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3989198958755 * H11 ;
770989    +   P_DepVar1  =    -4.61569089751973 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.61569089751973 + P_DepVar1 ;
770990    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
770991    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
770992    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
770993    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
770994    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
770995    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
770996    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
770997    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
770998    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
770999    +END;
MPRINT(EM_DIAGRAM):   END;
771000    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
771001    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
771002    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
771003    +END;
MPRINT(EM_DIAGRAM):   END;
771004    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
771005    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
771006    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
771007    +END;
MPRINT(EM_DIAGRAM):   END;
771008    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
771009    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
771010    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
771011    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
771012    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
771013    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
771014    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
771015    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771016    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
771017    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771018    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
771019    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
771020    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
771021    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
771022    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
771023    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
771024    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
771025    +END;
MPRINT(EM_DIAGRAM):   END;
771026    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
771027    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
771028    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
771029    +drop
771030    +H11
771031    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
771032    +* Renaming variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural5;
771033    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771034    +* Renaming Posterior variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural5;
771035    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771036    +drop Neural5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar1;
771037    +Neural5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar1 = P_DepVar1;
771038    +drop Neural5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar0;
771039    +Neural5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar0 = P_DepVar0;
771040    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771041    +* Renaming _WARN_ variable for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural5;
771042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771043    +length Neural5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural5_WARN_ $4;
771044    +drop Neural5_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural5_WARN_;
771045    +Neural5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural5_WARN_ = _WARN_;
771046    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771047    +* Ensmbl3: Scoring Code of model 4 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 4 of 9;
771048    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771049    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771050    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
771051    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
771052    +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
771053    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771054    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
771055    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
771056    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
771057    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
771058    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
771059    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
771060    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
771061    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
771062    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
771063    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
771064    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
771065    +LENGTH _WARN_ $4
771066    +      F_DepVar  $ 12
771067    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
771068    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
771069    +
771070    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
771071    +
771072    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
771073    +
771074    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
771075    +
771076    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
771077    +
771078    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
771079    +
771080    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
771081    +
771082    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
771083    +
771084    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
771085    +
771086    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
771087    +
771088    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
771089    +
771090    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
771091    +
771092    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
771093    +
771094    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
771095    +
771096    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
771097    +
771098    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
771099    +
771100    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
771101    +
771102    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
771103    +
771104    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
771105    +
771106    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
771107    +
771108    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
771109    +
771110    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
771111    +
771112    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
771113    +
771114    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
771115    +
771116    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
771117    +
771118    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
771119    +
771120    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
771121    +
771122    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
771123    +
771124    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
771125    +
771126    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
771127    +
771128    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
771129    +
771130    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
771131    +
771132    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
771133    +
771134    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
771135    +
771136    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
771137    +
771138    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
771139    +
771140    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
771141    +
771142    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
771143    +
771144    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
771145    +
771146    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
771147    +
771148    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
771149    +
771150    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
771151    +
771152    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
771153    +
771154    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
771155    +
771156    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
771157    +
771158    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
771159    +
771160    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
771161    +
771162    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
771163    +
771164    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
771165    +
771166    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
771167    +
771168    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
771169    +
771170    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
771171    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
771172    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
771173    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
771174    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771175    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771176    +end;
MPRINT(EM_DIAGRAM):   end;
771177    +else do;
MPRINT(EM_DIAGRAM):   else do;
771178    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771179    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
771180    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771181    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
771182    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
771183    +   end;
MPRINT(EM_DIAGRAM):   end;
771184    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
771185    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
771186    +   end;
MPRINT(EM_DIAGRAM):   end;
771187    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771188    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
771189    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771190    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771191    +   end;
MPRINT(EM_DIAGRAM):   end;
771192    +end;
MPRINT(EM_DIAGRAM):   end;
771193    +
771194    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
771195    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
771196    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
771197    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
771198    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
771199    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
771200    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771201    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771202    +end;
MPRINT(EM_DIAGRAM):   end;
771203    +else do;
MPRINT(EM_DIAGRAM):   else do;
771204    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771205    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
771206    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771207    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
771208    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
771209    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
771210    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
771211    +   end;
MPRINT(EM_DIAGRAM):   end;
771212    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
771213    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
771214    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
771215    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
771216    +   end;
MPRINT(EM_DIAGRAM):   end;
771217    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771218    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
771219    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
771220    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
771221    +   end;
MPRINT(EM_DIAGRAM):   end;
771222    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771223    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
771224    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
771225    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
771226    +   end;
MPRINT(EM_DIAGRAM):   end;
771227    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771228    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
771229    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
771230    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
771231    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771232    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771233    +   end;
MPRINT(EM_DIAGRAM):   end;
771234    +end;
MPRINT(EM_DIAGRAM):   end;
771235    +
771236    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
771237    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
771238    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
771239    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
771240    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
771241    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
771242    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771243    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771244    +end;
MPRINT(EM_DIAGRAM):   end;
771245    +else do;
MPRINT(EM_DIAGRAM):   else do;
771246    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771247    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
771248    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771249    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
771250    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
771251    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
771252    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
771253    +   end;
MPRINT(EM_DIAGRAM):   end;
771254    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771255    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
771256    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
771257    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
771258    +   end;
MPRINT(EM_DIAGRAM):   end;
771259    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
771260    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
771261    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
771262    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
771263    +   end;
MPRINT(EM_DIAGRAM):   end;
771264    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771265    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
771266    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
771267    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
771268    +   end;
MPRINT(EM_DIAGRAM):   end;
771269    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771270    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
771271    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
771272    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
771273    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771274    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771275    +   end;
MPRINT(EM_DIAGRAM):   end;
771276    +end;
MPRINT(EM_DIAGRAM):   end;
771277    +
771278    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
771279    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
771280    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
771281    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
771282    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
771283    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
771284    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771285    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771286    +end;
MPRINT(EM_DIAGRAM):   end;
771287    +else do;
MPRINT(EM_DIAGRAM):   else do;
771288    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771289    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
771290    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771291    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771292    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
771293    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
771294    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
771295    +   end;
MPRINT(EM_DIAGRAM):   end;
771296    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771297    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
771298    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
771299    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
771300    +   end;
MPRINT(EM_DIAGRAM):   end;
771301    +   else if _dm12 = '4'  then do;
The SAS System

MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771302    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
771303    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
771304    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
771305    +   end;
MPRINT(EM_DIAGRAM):   end;
771306    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771307    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
771308    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
771309    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
771310    +   end;
MPRINT(EM_DIAGRAM):   end;
771311    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771312    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
771313    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
771314    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
771315    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771316    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771317    +   end;
MPRINT(EM_DIAGRAM):   end;
771318    +end;
MPRINT(EM_DIAGRAM):   end;
771319    +
771320    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
771321    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
771322    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
771323    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
771324    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
771325    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
771326    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771328    +end;
MPRINT(EM_DIAGRAM):   end;
771329    +else do;
MPRINT(EM_DIAGRAM):   else do;
771330    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771331    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
771332    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771333    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771334    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
771335    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
771336    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
771337    +   end;
MPRINT(EM_DIAGRAM):   end;
771338    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771339    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
771340    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
771341    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
771342    +   end;
MPRINT(EM_DIAGRAM):   end;
771343    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771344    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
771345    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
771346    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
771347    +   end;
MPRINT(EM_DIAGRAM):   end;
771348    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771349    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
771350    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
771351    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
771352    +   end;
MPRINT(EM_DIAGRAM):   end;
771353    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771354    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
771355    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
771356    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
771357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771359    +   end;
MPRINT(EM_DIAGRAM):   end;
771360    +end;
MPRINT(EM_DIAGRAM):   end;
771361    +
771362    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
771363    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
771364    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
771365    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
771366    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
771367    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
771368    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771369    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771370    +end;
MPRINT(EM_DIAGRAM):   end;
771371    +else do;
MPRINT(EM_DIAGRAM):   else do;
771372    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771373    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
771374    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771375    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771376    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
771377    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
771378    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
771379    +   end;
MPRINT(EM_DIAGRAM):   end;
771380    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771381    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
771382    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
771383    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
771384    +   end;
MPRINT(EM_DIAGRAM):   end;
771385    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771386    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
771387    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
771388    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
771389    +   end;
MPRINT(EM_DIAGRAM):   end;
771390    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771391    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
771392    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
771393    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
771394    +   end;
MPRINT(EM_DIAGRAM):   end;
771395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771396    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
771397    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
771398    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
771399    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771400    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771401    +   end;
MPRINT(EM_DIAGRAM):   end;
771402    +end;
MPRINT(EM_DIAGRAM):   end;
771403    +
771404    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
771405    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
771406    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
771407    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
771408    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
771409    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
771410    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771411    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771412    +end;
MPRINT(EM_DIAGRAM):   end;
771413    +else do;
MPRINT(EM_DIAGRAM):   else do;
771414    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771415    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
771416    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771417    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771418    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
771419    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
771420    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
771421    +   end;
MPRINT(EM_DIAGRAM):   end;
771422    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771423    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
771424    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
771425    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
771426    +   end;
MPRINT(EM_DIAGRAM):   end;
771427    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771428    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
771429    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
771430    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
771431    +   end;
MPRINT(EM_DIAGRAM):   end;
771432    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771433    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
771434    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
771435    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
771436    +   end;
MPRINT(EM_DIAGRAM):   end;
771437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771438    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
771439    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
771440    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
771441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771443    +   end;
MPRINT(EM_DIAGRAM):   end;
771444    +end;
MPRINT(EM_DIAGRAM):   end;
771445    +
771446    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
771447    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
771448    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
771449    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
771450    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
771451    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
771452    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771453    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771454    +end;
MPRINT(EM_DIAGRAM):   end;
771455    +else do;
MPRINT(EM_DIAGRAM):   else do;
771456    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771457    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
771458    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771459    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771460    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
771461    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
771462    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
771463    +   end;
MPRINT(EM_DIAGRAM):   end;
771464    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771465    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
771466    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
771467    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
771468    +   end;
MPRINT(EM_DIAGRAM):   end;
771469    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771470    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
771471    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
771472    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
771473    +   end;
MPRINT(EM_DIAGRAM):   end;
771474    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771475    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
771476    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
771477    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
771478    +   end;
MPRINT(EM_DIAGRAM):   end;
771479    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771480    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
771481    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
771482    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
771483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771485    +   end;
MPRINT(EM_DIAGRAM):   end;
771486    +end;
MPRINT(EM_DIAGRAM):   end;
771487    +
771488    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
771489    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
771490    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
771491    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
771492    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
771493    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771494    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771495    +end;
MPRINT(EM_DIAGRAM):   end;
771496    +else do;
MPRINT(EM_DIAGRAM):   else do;
771497    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771498    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
771499    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771500    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771501    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
771502    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
771503    +   end;
MPRINT(EM_DIAGRAM):   end;
771504    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771505    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
771506    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
771507    +   end;
MPRINT(EM_DIAGRAM):   end;
771508    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771509    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
771510    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
771511    +   end;
MPRINT(EM_DIAGRAM):   end;
771512    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771513    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
771514    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
771515    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771516    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771517    +   end;
MPRINT(EM_DIAGRAM):   end;
771518    +end;
MPRINT(EM_DIAGRAM):   end;
771519    +
771520    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
771521    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
771522    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
771523    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
771524    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
771525    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
771526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771528    +end;
MPRINT(EM_DIAGRAM):   end;
771529    +else do;
MPRINT(EM_DIAGRAM):   else do;
771530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771531    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
771532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771533    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
771534    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
771535    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
771536    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
771537    +   end;
MPRINT(EM_DIAGRAM):   end;
771538    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771539    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
771540    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
771541    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
771542    +   end;
MPRINT(EM_DIAGRAM):   end;
771543    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771544    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
771545    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
771546    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
771547    +   end;
MPRINT(EM_DIAGRAM):   end;
771548    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
771549    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
771550    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
771551    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
771552    +   end;
MPRINT(EM_DIAGRAM):   end;
771553    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771554    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
771555    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
771556    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
771557    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771558    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771559    +   end;
MPRINT(EM_DIAGRAM):   end;
771560    +end;
MPRINT(EM_DIAGRAM):   end;
771561    +
771562    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
771563    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
771564    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
771565    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
771566    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
771567    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
771568    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771569    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771570    +end;
MPRINT(EM_DIAGRAM):   end;
771571    +else do;
MPRINT(EM_DIAGRAM):   else do;
771572    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771573    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
771574    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771575    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771576    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
771577    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
771578    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
771579    +   end;
MPRINT(EM_DIAGRAM):   end;
771580    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771581    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
771582    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
771583    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
771584    +   end;
MPRINT(EM_DIAGRAM):   end;
771585    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771586    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
771587    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
771588    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
771589    +   end;
MPRINT(EM_DIAGRAM):   end;
771590    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771591    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
771592    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
771593    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
771594    +   end;
MPRINT(EM_DIAGRAM):   end;
771595    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771596    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
771597    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
771598    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
771599    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771600    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771601    +   end;
MPRINT(EM_DIAGRAM):   end;
771602    +end;
MPRINT(EM_DIAGRAM):   end;
771603    +
771604    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
771605    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
771606    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
771607    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
771608    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
771609    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
771610    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771611    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771612    +end;
MPRINT(EM_DIAGRAM):   end;
771613    +else do;
MPRINT(EM_DIAGRAM):   else do;
771614    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771615    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
771616    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771617    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
771618    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
771619    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
771620    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
771621    +   end;
MPRINT(EM_DIAGRAM):   end;
771622    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
771623    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
771624    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
771625    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
771626    +   end;
MPRINT(EM_DIAGRAM):   end;
771627    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771628    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
771629    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
771630    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
771631    +   end;
MPRINT(EM_DIAGRAM):   end;
771632    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771633    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
771634    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
771635    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
771636    +   end;
MPRINT(EM_DIAGRAM):   end;
771637    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771638    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
771639    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
771640    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
771641    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771642    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771643    +   end;
MPRINT(EM_DIAGRAM):   end;
771644    +end;
MPRINT(EM_DIAGRAM):   end;
771645    +
771646    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
771647    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
771648    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
771649    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
771650    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
771651    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
771652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771654    +end;
MPRINT(EM_DIAGRAM):   end;
771655    +else do;
MPRINT(EM_DIAGRAM):   else do;
771656    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771657    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
771658    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771659    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
771660    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
771661    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
771662    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
771663    +   end;
MPRINT(EM_DIAGRAM):   end;
771664    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
771665    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
771666    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
771667    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
771668    +   end;
MPRINT(EM_DIAGRAM):   end;
771669    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771670    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
771671    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
771672    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
771673    +   end;
MPRINT(EM_DIAGRAM):   end;
771674    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771675    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
771676    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
771677    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
771678    +   end;
MPRINT(EM_DIAGRAM):   end;
771679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771680    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
771681    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
771682    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
771683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771685    +   end;
MPRINT(EM_DIAGRAM):   end;
771686    +end;
MPRINT(EM_DIAGRAM):   end;
771687    +
771688    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
771689    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
771690    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
771691    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
771692    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
771693    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
771694    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
771695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771696    +end;
MPRINT(EM_DIAGRAM):   end;
771697    +else do;
MPRINT(EM_DIAGRAM):   else do;
771698    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
771699    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
771700    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771701    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
771702    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
771703    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
771704    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
771705    +   end;
MPRINT(EM_DIAGRAM):   end;
771706    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
771707    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
771708    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
771709    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
771710    +   end;
MPRINT(EM_DIAGRAM):   end;
771711    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
771712    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
771713    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
771714    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
771715    +   end;
MPRINT(EM_DIAGRAM):   end;
771716    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
771717    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
771718    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
771719    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
771720    +   end;
MPRINT(EM_DIAGRAM):   end;
771721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771722    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
771723    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
771724    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
771725    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
771726    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
771727    +   end;
MPRINT(EM_DIAGRAM):   end;
771728    +end;
MPRINT(EM_DIAGRAM):   end;
771729    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771730    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
771731    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771732    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771733    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
771734    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771735    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
771736    +   H11  =    -0.29083667179588 * GRP_AcceptedCmp52  +     0.25381514879511 *
771737    +        GRP_Frq2  +     0.24495490182169 * GRP_Frq3  +     0.08462614656895 *
771738    +        GRP_Frq4  +     0.42321493993551 * GRP_Income2
771739    +          +     0.73169928117081 * GRP_Income3  +    -0.05544320914832 *
771740    +        GRP_Income4  +    -0.24718669893416 * GRP_Mnt2
771741    +          +    -0.03207129144847 * GRP_Mnt3  +    -0.25388605829716 * GRP_Mnt4
771742    +          +     0.47035397187556 * GRP_MntFishProducts2
771743    +          +    -0.08037080105655 * GRP_MntFishProducts3
771744    +          +    -0.02398618871954 * GRP_MntFishProducts4
771745    +          +    -0.07937868050266 * GRP_MntGoldProds2
771746    +          +     0.05027448018004 * GRP_MntGoldProds3
771747    +          +     0.07901442033148 * GRP_MntGoldProds4
771748    +          +    -0.33936723350812 * GRP_MntMeatProducts2
771749    +          +    -0.04484529724292 * GRP_MntMeatProducts3
771750    +          +     -0.0415506520001 * GRP_MntMeatProducts4
771751    +          +     0.03804983893299 * GRP_MntWines2  +    -0.04512794010485 *
771752    +        GRP_MntWines3  +     0.13644345988766 * GRP_MntWines4
771753    +          +    -0.14757249557063 * GRP_NumCatalogPurchases3
771754    +          +     0.15425218359438 * GRP_NumCatalogPurchases4
771755    +          +    -0.29017371671497 * GRP_NumDistPurchases2
771756    +          +    -0.28697691933928 * GRP_NumDistPurchases3
771757    +          +    -0.14589186171246 * GRP_NumDistPurchases4
771758    +          +    -0.04161944892997 * GRP_NumWebPurchases2
771759    +          +     0.25846214028528 * GRP_NumWebPurchases3
771760    +          +    -0.05415601948083 * GRP_NumWebPurchases4
771761    +          +    -0.20357646739267 * GRP_RFMstat2  +    -0.63274902898209 *
771762    +        GRP_RFMstat3  +    -0.42178758375646 * GRP_RFMstat4
771763    +          +    -0.25050399122469 * GRP_RMntFrq2  +    -0.19112538807366 *
771764    +        GRP_RMntFrq3  +     0.09935328688472 * GRP_RMntFrq4
771765    +          +     0.87740211815385 * GRP_Recency2  +     0.02731074731084 *
771766    +        GRP_Recency3  +    -0.25335916751578 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.29083667179588 * GRP_AcceptedCmp52 + 0.25381514879511 * 
GRP_Frq2 + 0.24495490182169 * GRP_Frq3 + 0.08462614656895 * GRP_Frq4 + 0.42321493993551 * 
GRP_Income2 + 0.73169928117081 * GRP_Income3 + -0.05544320914832 * GRP_Income4 + 
-0.24718669893416 * GRP_Mnt2 + -0.03207129144847 * GRP_Mnt3 + -0.25388605829716 * GRP_Mnt4 + 
0.47035397187556 * GRP_MntFishProducts2 + -0.08037080105655 * GRP_MntFishProducts3 + 
-0.02398618871954 * GRP_MntFishProducts4 + -0.07937868050266 * GRP_MntGoldProds2 + 
0.05027448018004 * GRP_MntGoldProds3 + 0.07901442033148 * GRP_MntGoldProds4 + 
-0.33936723350812 * GRP_MntMeatProducts2 + -0.04484529724292 * GRP_MntMeatProducts3 + 
-0.0415506520001 * GRP_MntMeatProducts4 + 0.03804983893299 * GRP_MntWines2 + -0.04512794010485 
* GRP_MntWines3 + 0.13644345988766 * GRP_MntWines4 + -0.14757249557063 * 
GRP_NumCatalogPurchases3 + 0.15425218359438 * GRP_NumCatalogPurchases4 + -0.29017371671497 * 
GRP_NumDistPurchases2 + -0.28697691933928 * GRP_NumDistPurchases3 + -0.14589186171246 * 
GRP_NumDistPurchases4 + -0.04161944892997 * GRP_NumWebPurchases2 + 0.25846214028528 * 
GRP_NumWebPurchases3 + -0.05415601948083 * GRP_NumWebPurchases4 + -0.20357646739267 * 
GRP_RFMstat2 + -0.63274902898209 * GRP_RFMstat3 + -0.42178758375646 * GRP_RFMstat4 + 
-0.25050399122469 * GRP_RMntFrq2 + -0.19112538807366 * GRP_RMntFrq3 + 0.09935328688472 * 
GRP_RMntFrq4 + 0.87740211815385 * GRP_Recency2 + 0.02731074731084 * GRP_Recency3 + 
-0.25335916751578 * GRP_Recency4 ;
771767    +   H12  =    -0.77250325436995 * GRP_AcceptedCmp52  +     0.15992276693905 *
771768    +        GRP_Frq2  +     0.03865511556705 * GRP_Frq3  +    -0.20632943014927 *
771769    +        GRP_Frq4  +     0.33135316311494 * GRP_Income2
771770    +          +     0.29584600709267 * GRP_Income3  +    -0.42334990488598 *
771771    +        GRP_Income4  +     0.15943867910214 * GRP_Mnt2
771772    +          +     0.17793824624027 * GRP_Mnt3  +     0.02858905887957 * GRP_Mnt4
771773    +          +     0.01579175161385 * GRP_MntFishProducts2
771774    +          +     0.17282640703406 * GRP_MntFishProducts3
771775    +          +     0.01086096638671 * GRP_MntFishProducts4
771776    +          +    -0.18985444898682 * GRP_MntGoldProds2
771777    +          +     0.21160891964242 * GRP_MntGoldProds3
771778    +          +     0.19583511822565 * GRP_MntGoldProds4
771779    +          +     -0.3456806985278 * GRP_MntMeatProducts2
771780    +          +    -0.22537760201843 * GRP_MntMeatProducts3
771781    +          +     0.25001144882227 * GRP_MntMeatProducts4
771782    +          +     0.50922766710996 * GRP_MntWines2  +     0.39373033292339 *
771783    +        GRP_MntWines3  +     -0.0631684381291 * GRP_MntWines4
771784    +          +    -0.44406418897674 * GRP_NumCatalogPurchases3
771785    +          +     0.04067400721697 * GRP_NumCatalogPurchases4
771786    +          +    -0.31103378362217 * GRP_NumDistPurchases2
771787    +          +     -0.2871376672979 * GRP_NumDistPurchases3
771788    +          +    -0.17746737696028 * GRP_NumDistPurchases4
771789    +          +     0.10647221525263 * GRP_NumWebPurchases2
771790    +          +    -0.41586902546761 * GRP_NumWebPurchases3
771791    +          +     0.04660436676773 * GRP_NumWebPurchases4
771792    +          +     0.09917764215284 * GRP_RFMstat2  +       0.119759461983 *
771793    +        GRP_RFMstat3  +     0.21805558451713 * GRP_RFMstat4
771794    +          +     0.22815675287087 * GRP_RMntFrq2  +     0.19732571474618 *
771795    +        GRP_RMntFrq3  +     0.07767050452748 * GRP_RMntFrq4
771796    +          +     0.46140797631862 * GRP_Recency2  +     0.17265446560815 *
771797    +        GRP_Recency3  +    -0.13764246969761 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.77250325436995 * GRP_AcceptedCmp52 + 0.15992276693905 * 
GRP_Frq2 + 0.03865511556705 * GRP_Frq3 + -0.20632943014927 * GRP_Frq4 + 0.33135316311494 * 
GRP_Income2 + 0.29584600709267 * GRP_Income3 + -0.42334990488598 * GRP_Income4 + 
0.15943867910214 * GRP_Mnt2 + 0.17793824624027 * GRP_Mnt3 + 0.02858905887957 * GRP_Mnt4 + 
0.01579175161385 * GRP_MntFishProducts2 + 0.17282640703406 * GRP_MntFishProducts3 + 
0.01086096638671 * GRP_MntFishProducts4 + -0.18985444898682 * GRP_MntGoldProds2 + 
0.21160891964242 * GRP_MntGoldProds3 + 0.19583511822565 * GRP_MntGoldProds4 + -0.3456806985278 
* GRP_MntMeatProducts2 + -0.22537760201843 * GRP_MntMeatProducts3 + 0.25001144882227 * 
GRP_MntMeatProducts4 + 0.50922766710996 * GRP_MntWines2 + 0.39373033292339 * GRP_MntWines3 + 
-0.0631684381291 * GRP_MntWines4 + -0.44406418897674 * GRP_NumCatalogPurchases3 + 
0.04067400721697 * GRP_NumCatalogPurchases4 + -0.31103378362217 * GRP_NumDistPurchases2 + 
-0.2871376672979 * GRP_NumDistPurchases3 + -0.17746737696028 * GRP_NumDistPurchases4 + 
0.10647221525263 * GRP_NumWebPurchases2 + -0.41586902546761 * GRP_NumWebPurchases3 + 
0.04660436676773 * GRP_NumWebPurchases4 + 0.09917764215284 * GRP_RFMstat2 + 0.119759461983 * 
GRP_RFMstat3 + 0.21805558451713 * GRP_RFMstat4 + 0.22815675287087 * GRP_RMntFrq2 + 
0.19732571474618 * GRP_RMntFrq3 + 0.07767050452748 * GRP_RMntFrq4 + 0.46140797631862 * 
GRP_Recency2 + 0.17265446560815 * GRP_Recency3 + -0.13764246969761 * GRP_Recency4 ;
771798    +   H13  =     0.47605838497596 * GRP_AcceptedCmp52  +    -0.24247551747681 *
771799    +        GRP_Frq2  +    -0.12921683287602 * GRP_Frq3  +     0.09997146415468 *
771800    +        GRP_Frq4  +    -0.33897508851515 * GRP_Income2
771801    +          +     0.02013725470644 * GRP_Income3  +     0.62243331624454 *
771802    +        GRP_Income4  +    -0.07907139789023 * GRP_Mnt2
771803    +          +     0.02855056853431 * GRP_Mnt3  +      0.0571426807888 * GRP_Mnt4
771804    +          +    -0.22089400263658 * GRP_MntFishProducts2
771805    +          +     0.03415513165136 * GRP_MntFishProducts3
771806    +          +     0.11107459135953 * GRP_MntFishProducts4
771807    +          +      0.1200436606288 * GRP_MntGoldProds2
771808    +          +      0.1845414926618 * GRP_MntGoldProds3
771809    +          +     0.05336685345848 * GRP_MntGoldProds4
771810    +          +     0.17651888017403 * GRP_MntMeatProducts2
771811    +          +    -0.19581823794868 * GRP_MntMeatProducts3
771812    +          +    -0.32374735747971 * GRP_MntMeatProducts4
771813    +          +    -0.29496513381505 * GRP_MntWines2  +     -0.1846298613936 *
771814    +        GRP_MntWines3  +     0.25702620460325 * GRP_MntWines4
771815    +          +     0.52809435848016 * GRP_NumCatalogPurchases3
771816    +          +     0.22555872046312 * GRP_NumCatalogPurchases4
771817    +          +      0.5816615934847 * GRP_NumDistPurchases2
771818    +          +    -0.05454598802009 * GRP_NumDistPurchases3
771819    +          +     0.10061932097301 * GRP_NumDistPurchases4
771820    +          +     0.10350223951336 * GRP_NumWebPurchases2
771821    +          +    -0.10094008849705 * GRP_NumWebPurchases3
771822    +          +    -0.28943674138057 * GRP_NumWebPurchases4
771823    +          +     0.18167045555206 * GRP_RFMstat2  +     -0.2440987298479 *
771824    +        GRP_RFMstat3  +    -0.21852350431632 * GRP_RFMstat4
771825    +          +       0.048115710925 * GRP_RMntFrq2  +    -0.19258956732647 *
771826    +        GRP_RMntFrq3  +     0.21827295876984 * GRP_RMntFrq4
771827    +          +    -0.86473147264012 * GRP_Recency2  +    -0.38058925082706 *
771828    +        GRP_Recency3  +     0.45619624848066 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.47605838497596 * GRP_AcceptedCmp52 + -0.24247551747681 * 
GRP_Frq2 + -0.12921683287602 * GRP_Frq3 + 0.09997146415468 * GRP_Frq4 + -0.33897508851515 * 
GRP_Income2 + 0.02013725470644 * GRP_Income3 + 0.62243331624454 * GRP_Income4 + 
-0.07907139789023 * GRP_Mnt2 + 0.02855056853431 * GRP_Mnt3 + 0.0571426807888 * GRP_Mnt4 + 
-0.22089400263658 * GRP_MntFishProducts2 + 0.03415513165136 * GRP_MntFishProducts3 + 
0.11107459135953 * GRP_MntFishProducts4 + 0.1200436606288 * GRP_MntGoldProds2 + 
0.1845414926618 * GRP_MntGoldProds3 + 0.05336685345848 * GRP_MntGoldProds4 + 0.17651888017403 
* GRP_MntMeatProducts2 + -0.19581823794868 * GRP_MntMeatProducts3 + -0.32374735747971 * 
GRP_MntMeatProducts4 + -0.29496513381505 * GRP_MntWines2 + -0.1846298613936 * GRP_MntWines3 + 
0.25702620460325 * GRP_MntWines4 + 0.52809435848016 * GRP_NumCatalogPurchases3 + 
0.22555872046312 * GRP_NumCatalogPurchases4 + 0.5816615934847 * GRP_NumDistPurchases2 + 
-0.05454598802009 * GRP_NumDistPurchases3 + 0.10061932097301 * GRP_NumDistPurchases4 + 
0.10350223951336 * GRP_NumWebPurchases2 + -0.10094008849705 * GRP_NumWebPurchases3 + 
-0.28943674138057 * GRP_NumWebPurchases4 + 0.18167045555206 * GRP_RFMstat2 + -0.2440987298479 
* GRP_RFMstat3 + -0.21852350431632 * GRP_RFMstat4 + 0.048115710925 * GRP_RMntFrq2 + 
-0.19258956732647 * GRP_RMntFrq3 + 0.21827295876984 * GRP_RMntFrq4 + -0.86473147264012 * 
GRP_Recency2 + -0.38058925082706 * GRP_Recency3 + 0.45619624848066 * GRP_Recency4 ;
771829    +   H14  =    -0.20005149248892 * GRP_AcceptedCmp52  +      0.1416453143658 *
771830    +        GRP_Frq2  +     0.16615391028307 * GRP_Frq3  +     0.24067740846414 *
771831    +        GRP_Frq4  +     0.44252646861104 * GRP_Income2
771832    +          +     0.38184638238718 * GRP_Income3  +    -0.31867045455591 *
771833    +        GRP_Income4  +    -0.04762919001724 * GRP_Mnt2
771834    +          +    -0.00736030333746 * GRP_Mnt3  +    -0.11335269869741 * GRP_Mnt4
771835    +          +     0.11397099518618 * GRP_MntFishProducts2
771836    +          +     0.02038390970846 * GRP_MntFishProducts3
771837    +          +     0.04901565572006 * GRP_MntFishProducts4
771838    +          +    -0.26210451979183 * GRP_MntGoldProds2
771839    +          +    -0.01291376301388 * GRP_MntGoldProds3
771840    +          +    -0.06291397841763 * GRP_MntGoldProds4
771841    +          +    -0.28346673842937 * GRP_MntMeatProducts2
771842    +          +    -0.22838601011576 * GRP_MntMeatProducts3
771843    +          +    -0.35737823232225 * GRP_MntMeatProducts4
771844    +          +     0.38985456021102 * GRP_MntWines2  +     0.10061935074263 *
771845    +        GRP_MntWines3  +    -0.49094420474651 * GRP_MntWines4
771846    +          +    -0.30332072511255 * GRP_NumCatalogPurchases3
771847    +          +    -0.13066216416331 * GRP_NumCatalogPurchases4
771848    +          +    -0.17811481527528 * GRP_NumDistPurchases2
771849    +          +     0.07507990088147 * GRP_NumDistPurchases3
771850    +          +    -0.01562644766888 * GRP_NumDistPurchases4
771851    +          +    -0.28058368395312 * GRP_NumWebPurchases2
771852    +          +     0.06601211704617 * GRP_NumWebPurchases3
771853    +          +    -0.11209964154167 * GRP_NumWebPurchases4
771854    +          +    -0.24339392229609 * GRP_RFMstat2  +     0.36921551965975 *
771855    +        GRP_RFMstat3  +     0.16127058585623 * GRP_RFMstat4
771856    +          +     0.01095276184609 * GRP_RMntFrq2  +    -0.21651603975876 *
771857    +        GRP_RMntFrq3  +    -0.44785793778994 * GRP_RMntFrq4
771858    +          +     0.37654423654871 * GRP_Recency2  +     0.21584324326396 *
771859    +        GRP_Recency3  +     0.06923981469933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.20005149248892 * GRP_AcceptedCmp52 + 0.1416453143658 * GRP_Frq2 
+ 0.16615391028307 * GRP_Frq3 + 0.24067740846414 * GRP_Frq4 + 0.44252646861104 * GRP_Income2 + 
0.38184638238718 * GRP_Income3 + -0.31867045455591 * GRP_Income4 + -0.04762919001724 * 
GRP_Mnt2 + -0.00736030333746 * GRP_Mnt3 + -0.11335269869741 * GRP_Mnt4 + 0.11397099518618 * 
GRP_MntFishProducts2 + 0.02038390970846 * GRP_MntFishProducts3 + 0.04901565572006 * 
GRP_MntFishProducts4 + -0.26210451979183 * GRP_MntGoldProds2 + -0.01291376301388 * 
GRP_MntGoldProds3 + -0.06291397841763 * GRP_MntGoldProds4 + -0.28346673842937 * 
GRP_MntMeatProducts2 + -0.22838601011576 * GRP_MntMeatProducts3 + -0.35737823232225 * 
GRP_MntMeatProducts4 + 0.38985456021102 * GRP_MntWines2 + 0.10061935074263 * GRP_MntWines3 + 
-0.49094420474651 * GRP_MntWines4 + -0.30332072511255 * GRP_NumCatalogPurchases3 + 
-0.13066216416331 * GRP_NumCatalogPurchases4 + -0.17811481527528 * GRP_NumDistPurchases2 + 
0.07507990088147 * GRP_NumDistPurchases3 + -0.01562644766888 * GRP_NumDistPurchases4 + 
-0.28058368395312 * GRP_NumWebPurchases2 + 0.06601211704617 * GRP_NumWebPurchases3 + 
-0.11209964154167 * GRP_NumWebPurchases4 + -0.24339392229609 * GRP_RFMstat2 + 0.36921551965975 
* GRP_RFMstat3 + 0.16127058585623 * GRP_RFMstat4 + 0.01095276184609 * GRP_RMntFrq2 + 
-0.21651603975876 * GRP_RMntFrq3 + -0.44785793778994 * GRP_RMntFrq4 + 0.37654423654871 * 
GRP_Recency2 + 0.21584324326396 * GRP_Recency3 + 0.06923981469933 * GRP_Recency4 ;
771860    +   H11  =    -0.90507468819856 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.90507468819856 + H11 ;
771861    +   H12  =    -0.58382573328779 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58382573328779 + H12 ;
771862    +   H13  =     0.23395947148718 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.23395947148718 + H13 ;
771863    +   H14  =     0.78095059574137 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.78095059574137 + H14 ;
771864    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
771865    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
771866    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
771867    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
771868    +END;
MPRINT(EM_DIAGRAM):   END;
771869    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
771870    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
771871    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
771872    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
771873    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
771874    +END;
MPRINT(EM_DIAGRAM):   END;
771875    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771876    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
771877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771878    +
771879    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
771880    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
771881    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
771882    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
771883    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
771884    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
771885    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
771886    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
771887    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
771888    +end;
MPRINT(EM_DIAGRAM):   end;
771889    +else do;
MPRINT(EM_DIAGRAM):   else do;
771890    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
771891    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
771892    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
771893    +   end;
MPRINT(EM_DIAGRAM):   end;
771894    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
771895    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
771896    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
771897    +   end;
MPRINT(EM_DIAGRAM):   end;
771898    +   else do;
MPRINT(EM_DIAGRAM):   else do;
771899    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
771900    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
771901    +   end;
MPRINT(EM_DIAGRAM):   end;
771902    +end;
MPRINT(EM_DIAGRAM):   end;
771903    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
771904    +   P_DepVar1  =     1.27226040722218 * H11  +     1.29072977611751 * H12
771905    +          +    -1.13529049624055 * H13  +     1.42363080191112 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.27226040722218 * H11 + 1.29072977611751 * H12 + 
-1.13529049624055 * H13 + 1.42363080191112 * H14 ;
771906    +   P_DepVar1  =    -1.11430363057808 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11430363057808 + P_DepVar1 ;
771907    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
771908    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
771909    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
771910    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
771911    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
771912    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
771913    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
771914    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
771915    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
771916    +END;
MPRINT(EM_DIAGRAM):   END;
771917    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
771918    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
771919    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
771920    +END;
MPRINT(EM_DIAGRAM):   END;
771921    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
771922    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
771923    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
771924    +END;
MPRINT(EM_DIAGRAM):   END;
771925    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
771926    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
771927    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
771928    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
771929    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
771930    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
771931    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
771932    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771933    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
771934    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
771935    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
771936    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
771937    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
771938    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
771939    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
771940    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
771941    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
771942    +END;
MPRINT(EM_DIAGRAM):   END;
771943    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
771944    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
771945    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
771946    +drop
771947    +H11
771948    +H12
771949    +H13
771950    +H14
771951    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
771952    +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
771953    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771954    +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
771955    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771956    +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
771957    +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
771958    +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
771959    +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
771960    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771961    +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
771962    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771963    +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
771964    +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
771965    +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
771966    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771967    +* Ensmbl3: Scoring Code of model 5 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 5 of 9;
771968    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771969    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771970    +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
771971    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
771972    +* NODE: Tree3;
MPRINT(EM_DIAGRAM):   * NODE: Tree3;
771973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
771974    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
771975    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
771976    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
771977    +
771978    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
771979    +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
771980    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
771981    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
771982    +
771983    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
771984    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
771985    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
771986    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
771987    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
771988    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
771989    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
771990    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
771991    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
771992    +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
771993    +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
771994    +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
771995    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
771996    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
771997    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
771998    +
771999    +
772000    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
772001    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
772002    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
772003    +
772004    +
772005    +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
772006    + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
772007    +
772008    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
772009    +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
772010    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772011    +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
772012    +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
772013    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772014    +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
772015    +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
772016    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772017    +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
772018    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
772019    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
772020    +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
772021    +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
772022    +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
772023    +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
772024    +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
772025    +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
772026    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
772027    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
772028    +      END;
MPRINT(EM_DIAGRAM):   END;
772029    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772030    +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
772031    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
772032    +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
772033    +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
772034    +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
772035    +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
772036    +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
772037    +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
772038    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
772039    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
772040    +      END;
MPRINT(EM_DIAGRAM):   END;
772041    +    END;
MPRINT(EM_DIAGRAM):   END;
772042    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772043    +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
772044    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772045    +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
772046    +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
772047    +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
772048    +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
772049    +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
772050    +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
772051    +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
772052    +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
772053    +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
772054    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
772055    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
772056    +      END;
MPRINT(EM_DIAGRAM):   END;
772057    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772058    +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
772059    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772060    +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
772061    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
772062    +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
772063    +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
772064    +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
772065    +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
772066    +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
772067    +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
772068    +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
772069    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
772070    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
772071    +        END;
MPRINT(EM_DIAGRAM):   END;
772072    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772073    +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
772074    +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
772075    +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
772076    +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
772077    +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
772078    +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
772079    +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
772080    +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
772081    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
772082    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
772083    +        END;
MPRINT(EM_DIAGRAM):   END;
772084    +      END;
MPRINT(EM_DIAGRAM):   END;
772085    +    END;
MPRINT(EM_DIAGRAM):   END;
772086    +  END;
MPRINT(EM_DIAGRAM):   END;
772087    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772088    +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
772089    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772090    +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
772091    +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
772092    +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
772093    +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
772094    +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
772095    +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
772096    +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
772097    +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
772098    +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
772099    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
772100    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
772101    +    END;
MPRINT(EM_DIAGRAM):   END;
772102    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772103    +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
772104    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772105    +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
772106    +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
772107    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
772108    +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
772109    +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
772110    +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
772111    +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
772112    +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
772113    +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
772114    +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
772115    +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
772116    +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
772117    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
772118    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
772119    +        END;
MPRINT(EM_DIAGRAM):   END;
772120    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772121    +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
772122    +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
772123    +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
772124    +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
772125    +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
772126    +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
772127    +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
772128    +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
772129    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
772130    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
772131    +        END;
MPRINT(EM_DIAGRAM):   END;
772132    +      END;
MPRINT(EM_DIAGRAM):   END;
772133    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772134    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
772135    +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
772136    +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
772137    +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
772138    +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
772139    +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
772140    +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
772141    +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
772142    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
772143    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
772144    +      END;
MPRINT(EM_DIAGRAM):   END;
772145    +    END;
MPRINT(EM_DIAGRAM):   END;
772146    +  END;
MPRINT(EM_DIAGRAM):   END;
772147    +
772148    +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
772149    +IF  F_DepVar  NE '0'
772150    +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
772151    +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
772152    +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
772153    + END;
MPRINT(EM_DIAGRAM):   END;
772154    + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
772155    +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
772156    +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
772157    +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
772158    +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
772159    +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
772160    +       END;
MPRINT(EM_DIAGRAM):   END;
772161    + END;
MPRINT(EM_DIAGRAM):   END;
772162    +
772163    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
772164    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
772165    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
772166    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
772167    +* Renaming variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree3;
772168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772169    +* Renaming Posterior variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree3;
772170    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772171    +drop Tree3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar1;
772172    +Tree3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar1 = P_DepVar1;
772173    +drop Tree3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar0;
772174    +Tree3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar0 = P_DepVar0;
772175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772176    +* Renaming _WARN_ variable for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree3;
772177    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772178    +length Tree3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree3_WARN_ $4;
772179    +drop Tree3_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree3_WARN_;
772180    +Tree3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree3_WARN_ = _WARN_;
772181    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772182    +* Ensmbl3: Scoring Code of model 6 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 6 of 9;
772183    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772185    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
772186    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
772187    +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
772188    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772189    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
772190    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
772191    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
772192    +
772193    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
772194    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
772195    +
772196    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
772197    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
772198    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
772199    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
772200    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
772201    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
772202    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
772203    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
772204    +
772205    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
772206    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
772207    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
772208    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
772209    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
772210    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772211    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
772212    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
772213    +end;
MPRINT(EM_DIAGRAM):   end;
772214    +else do;
MPRINT(EM_DIAGRAM):   else do;
772215    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
772216    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
772217    +   end;
MPRINT(EM_DIAGRAM):   end;
772218    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
772219    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
772220    +   end;
MPRINT(EM_DIAGRAM):   end;
772221    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772222    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
772223    +   end;
MPRINT(EM_DIAGRAM):   end;
772224    +end;
MPRINT(EM_DIAGRAM):   end;
772225    +
772226    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
772227    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
772228    +
772229    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
772230    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
772231    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
772232    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
772233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772235    +end;
MPRINT(EM_DIAGRAM):   end;
772236    +else do;
MPRINT(EM_DIAGRAM):   else do;
772237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772238    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
772239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772240    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
772241    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
772242    +   end;
MPRINT(EM_DIAGRAM):   end;
772243    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772244    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
772245    +   end;
MPRINT(EM_DIAGRAM):   end;
772246    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772247    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
772248    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772249    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772250    +   end;
MPRINT(EM_DIAGRAM):   end;
772251    +end;
MPRINT(EM_DIAGRAM):   end;
772252    +
772253    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
772254    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
772255    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
772256    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
772257    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
772258    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
772259    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772260    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772261    +end;
MPRINT(EM_DIAGRAM):   end;
772262    +else do;
MPRINT(EM_DIAGRAM):   else do;
772263    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772264    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
772265    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772266    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
772267    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
772268    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
772269    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
772270    +   end;
MPRINT(EM_DIAGRAM):   end;
772271    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772272    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
772273    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
772274    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
772275    +   end;
MPRINT(EM_DIAGRAM):   end;
772276    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772277    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
772278    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
772279    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
772280    +   end;
MPRINT(EM_DIAGRAM):   end;
772281    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772282    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
772283    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
772284    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
772285    +   end;
MPRINT(EM_DIAGRAM):   end;
772286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772287    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
772288    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
772289    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
772290    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772291    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772292    +   end;
MPRINT(EM_DIAGRAM):   end;
772293    +end;
MPRINT(EM_DIAGRAM):   end;
772294    +
772295    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
772296    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
772297    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
772298    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
772299    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
772300    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
772301    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772302    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772303    +end;
MPRINT(EM_DIAGRAM):   end;
772304    +else do;
MPRINT(EM_DIAGRAM):   else do;
772305    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772306    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
772307    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772308    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
772309    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
772310    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
772311    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
772312    +   end;
MPRINT(EM_DIAGRAM):   end;
772313    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772314    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
772315    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
772316    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
772317    +   end;
MPRINT(EM_DIAGRAM):   end;
772318    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772319    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
772320    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
772321    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
772322    +   end;
MPRINT(EM_DIAGRAM):   end;
772323    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772324    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
772325    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
772326    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
772327    +   end;
MPRINT(EM_DIAGRAM):   end;
772328    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772329    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
772330    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
772331    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
772332    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772333    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772334    +   end;
MPRINT(EM_DIAGRAM):   end;
772335    +end;
MPRINT(EM_DIAGRAM):   end;
772336    +
772337    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
772338    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
772339    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
772340    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
772341    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
772342    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
772343    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772344    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772345    +end;
MPRINT(EM_DIAGRAM):   end;
772346    +else do;
MPRINT(EM_DIAGRAM):   else do;
772347    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772348    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
772349    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772350    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
772351    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
772352    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
772353    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
772354    +   end;
MPRINT(EM_DIAGRAM):   end;
772355    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
772356    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
772357    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
772358    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
772359    +   end;
MPRINT(EM_DIAGRAM):   end;
772360    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772361    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
772362    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
772363    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
772364    +   end;
MPRINT(EM_DIAGRAM):   end;
772365    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772366    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
772367    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
772368    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
772369    +   end;
MPRINT(EM_DIAGRAM):   end;
772370    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772371    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
772372    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
772373    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
772374    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772375    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772376    +   end;
MPRINT(EM_DIAGRAM):   end;
772377    +end;
MPRINT(EM_DIAGRAM):   end;
772378    +
772379    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
772380    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
772381    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
772382    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
772383    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
772384    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
772385    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772386    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772387    +end;
MPRINT(EM_DIAGRAM):   end;
772388    +else do;
MPRINT(EM_DIAGRAM):   else do;
772389    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772390    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
772391    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772392    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
772393    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
772394    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
772395    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
772396    +   end;
MPRINT(EM_DIAGRAM):   end;
772397    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772398    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
772399    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
772400    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
772401    +   end;
MPRINT(EM_DIAGRAM):   end;
772402    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
772403    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
772404    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
772405    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
772406    +   end;
MPRINT(EM_DIAGRAM):   end;
772407    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772408    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
772409    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
772410    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
772411    +   end;
MPRINT(EM_DIAGRAM):   end;
772412    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772413    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
772414    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
772415    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
772416    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772417    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772418    +   end;
MPRINT(EM_DIAGRAM):   end;
772419    +end;
MPRINT(EM_DIAGRAM):   end;
772420    +
772421    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
772422    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
772423    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
772424    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
772425    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
772426    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
772427    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772428    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772429    +end;
MPRINT(EM_DIAGRAM):   end;
772430    +else do;
MPRINT(EM_DIAGRAM):   else do;
772431    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772432    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
772433    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772434    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
772435    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
772436    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
772437    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
772438    +   end;
MPRINT(EM_DIAGRAM):   end;
772439    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
772440    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
772441    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
772442    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
772443    +   end;
MPRINT(EM_DIAGRAM):   end;
772444    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772445    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
772446    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
772447    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
772448    +   end;
MPRINT(EM_DIAGRAM):   end;
772449    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772450    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
772451    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
772452    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
772453    +   end;
MPRINT(EM_DIAGRAM):   end;
772454    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772455    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
772456    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
772457    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
772458    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772459    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772460    +   end;
MPRINT(EM_DIAGRAM):   end;
772461    +end;
MPRINT(EM_DIAGRAM):   end;
772462    +
772463    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
772464    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
772465    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
772466    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
772467    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
772468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772470    +end;
MPRINT(EM_DIAGRAM):   end;
772471    +else do;
MPRINT(EM_DIAGRAM):   else do;
772472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772473    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
772474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772475    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
772476    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
772477    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
772478    +   end;
MPRINT(EM_DIAGRAM):   end;
772479    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
772480    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
772481    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
772482    +   end;
MPRINT(EM_DIAGRAM):   end;
772483    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772484    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
772485    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
772486    +   end;
MPRINT(EM_DIAGRAM):   end;
772487    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772488    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
772489    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
772490    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772491    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772492    +   end;
MPRINT(EM_DIAGRAM):   end;
772493    +end;
MPRINT(EM_DIAGRAM):   end;
772494    +
772495    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
772496    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
772497    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
772498    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
772499    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
772500    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
772501    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772502    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772503    +end;
MPRINT(EM_DIAGRAM):   end;
772504    +else do;
MPRINT(EM_DIAGRAM):   else do;
772505    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772506    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
772507    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772508    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
772509    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
772510    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
772511    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
772512    +   end;
MPRINT(EM_DIAGRAM):   end;
772513    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772514    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
772515    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
772516    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
772517    +   end;
MPRINT(EM_DIAGRAM):   end;
772518    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772519    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
772520    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
772521    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
772522    +   end;
MPRINT(EM_DIAGRAM):   end;
772523    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772524    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
772525    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
772526    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
772527    +   end;
MPRINT(EM_DIAGRAM):   end;
772528    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772529    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
772530    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
772531    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
772532    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772533    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772534    +   end;
MPRINT(EM_DIAGRAM):   end;
772535    +end;
MPRINT(EM_DIAGRAM):   end;
772536    +
772537    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
772538    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
772539    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
772540    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
772541    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
772542    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
772543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772545    +end;
MPRINT(EM_DIAGRAM):   end;
772546    +else do;
MPRINT(EM_DIAGRAM):   else do;
772547    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772548    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
772549    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772550    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
772551    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
772552    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
772553    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
772554    +   end;
MPRINT(EM_DIAGRAM):   end;
772555    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
772556    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
772557    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
772558    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
772559    +   end;
MPRINT(EM_DIAGRAM):   end;
772560    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772561    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
772562    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
772563    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
772564    +   end;
MPRINT(EM_DIAGRAM):   end;
772565    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772566    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
772567    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
772568    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
772569    +   end;
MPRINT(EM_DIAGRAM):   end;
772570    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772571    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
772572    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
772573    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
772574    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772575    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772576    +   end;
MPRINT(EM_DIAGRAM):   end;
772577    +end;
MPRINT(EM_DIAGRAM):   end;
772578    +
772579    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
772580    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
772581    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
772582    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
772583    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
772584    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
772585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772587    +end;
MPRINT(EM_DIAGRAM):   end;
772588    +else do;
MPRINT(EM_DIAGRAM):   else do;
772589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772590    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
772591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772592    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
772593    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
772594    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
772595    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
772596    +   end;
MPRINT(EM_DIAGRAM):   end;
772597    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772598    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
772599    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
772600    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
772601    +   end;
MPRINT(EM_DIAGRAM):   end;
772602    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772603    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
772604    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
772605    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
772606    +   end;
MPRINT(EM_DIAGRAM):   end;
772607    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772608    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
772609    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
772610    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
772611    +   end;
MPRINT(EM_DIAGRAM):   end;
772612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772613    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
772614    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
772615    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
772616    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772617    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772618    +   end;
MPRINT(EM_DIAGRAM):   end;
772619    +end;
MPRINT(EM_DIAGRAM):   end;
772620    +
772621    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
772622    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
772623    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
772624    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
772625    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
772626    +end;
MPRINT(EM_DIAGRAM):   end;
772627    +
772628    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
772629    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
772630    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
772631    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
772632    +
772633    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
772634    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772635    +_LP0 = _LP0 + (   -1.02877515677573) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.02877515677573) * _TEMP * _1_0;
772636    +
772637    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
772638    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772639    +_LP0 = _LP0 + (     1.9467311516595) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.9467311516595) * _TEMP * _2_0;
772640    +_LP0 = _LP0 + (    0.16734849497288) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16734849497288) * _TEMP * _2_1;
772641    +_LP0 = _LP0 + (   -0.71216043302912) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71216043302912) * _TEMP * _2_2;
772642    +
772643    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
772644    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772645    +_LP0 = _LP0 + (    1.00633080323166) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00633080323166) * _TEMP * _3_0;
772646    +_LP0 = _LP0 + (    0.85917878021713) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.85917878021713) * _TEMP * _3_1;
772647    +_LP0 = _LP0 + (   -0.97761167986152) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.97761167986152) * _TEMP * _3_2;
772648    +
772649    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
772650    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772651    +_LP0 = _LP0 + (    0.65248692594388) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.65248692594388) * _TEMP * _5_0;
772652    +_LP0 = _LP0 + (     0.0417259399181) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0417259399181) * _TEMP * _5_1;
772653    +_LP0 = _LP0 + (   -0.05258075832348) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05258075832348) * _TEMP * _5_2;
772654    +
772655    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
772656    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772657    +_LP0 = _LP0 + (   -1.48113569275309) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.48113569275309) * _TEMP * _7_0;
772658    +_LP0 = _LP0 + (   -0.22439832100882) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22439832100882) * _TEMP * _7_1;
772659    +_LP0 = _LP0 + (     0.5480751224945) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.5480751224945) * _TEMP * _7_2;
772660    +
772661    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
772662    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772663    +_LP0 = _LP0 + (    1.04449090892344) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04449090892344) * _TEMP * _8_0;
772664    +_LP0 = _LP0 + (    0.44337701613731) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.44337701613731) * _TEMP * _8_1;
772665    +_LP0 = _LP0 + (   -0.60815032674089) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.60815032674089) * _TEMP * _8_2;
772666    +
772667    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
772668    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772669    +_LP0 = _LP0 + (   -1.14772939970229) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.14772939970229) * _TEMP * _9_0;
772670    +_LP0 = _LP0 + (    0.01236638317437) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01236638317437) * _TEMP * _9_1;
772671    +
772672    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
772673    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772674    +_LP0 = _LP0 + (   -2.65515163278803) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65515163278803) * _TEMP * _10_0;
772675    +_LP0 = _LP0 + (    0.05356116501287) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05356116501287) * _TEMP * _10_1;
772676    +_LP0 = _LP0 + (    0.54048303369343) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54048303369343) * _TEMP * _10_2;
772677    +
772678    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
772679    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772680    +_LP0 = _LP0 + (   -0.25558521864842) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25558521864842) * _TEMP * _13_0;
772681    +_LP0 = _LP0 + (    0.02282756746923) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02282756746923) * _TEMP * _13_1;
772682    +_LP0 = _LP0 + (   -0.39418668032866) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39418668032866) * _TEMP * _13_2;
772683    +
772684    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
772685    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
772686    +_LP0 = _LP0 + (    1.93344839762718) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.93344839762718) * _TEMP * _14_0;
772687    +_LP0 = _LP0 + (    0.53898198413912) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53898198413912) * _TEMP * _14_1;
772688    +_LP0 = _LP0 + (   -0.59895640903963) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.59895640903963) * _TEMP * _14_2;
772689    +
772690    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
772691    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
772692    +_TEMP =    -1.75214170195592 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.75214170195592 + _LP0;
772693    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
772694    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
772695    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
772696    +end;
MPRINT(EM_DIAGRAM):   end;
772697    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
772698    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
772699    +
772700    +REG3DR1:
772701    +
772702    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
772703    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
772704    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
772705    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
772706    +end;
MPRINT(EM_DIAGRAM):   end;
772707    +else do;
MPRINT(EM_DIAGRAM):   else do;
772708    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
772709    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
772710    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
772711    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
772712    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
772713    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
772714    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
772715    +   end;
MPRINT(EM_DIAGRAM):   end;
772716    +end;
MPRINT(EM_DIAGRAM):   end;
772717    +
772718    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
772719    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
772720    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
772721    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
772722    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
772723    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
772724    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
772725    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
772726    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
772727    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
772728    +end;
MPRINT(EM_DIAGRAM):   end;
772729    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
772730    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
772731    +
772732    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
772733    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
772734    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
772735    +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
772736    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772737    +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
772738    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772739    +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
772740    +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
772741    +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
772742    +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
772743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772744    +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
772745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772746    +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
772747    +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
772748    +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
772749    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772750    +* Ensmbl3: Scoring Code of model 7 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 7 of 9;
772751    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772752    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772753    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
772754    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
772755    +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
772756    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
772757    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
772758    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
772759    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
772760    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
772761    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
772762    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
772763    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
772764    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
772765    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
772766    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
772767    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
772768    +LENGTH _WARN_ $4
772769    +      F_DepVar  $ 12
772770    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
772771    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
772772    +
772773    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
772774    +
772775    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
772776    +
772777    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
772778    +
772779    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
772780    +
772781    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
772782    +
772783    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
772784    +
772785    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
772786    +
772787    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
772788    +
772789    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
772790    +
772791    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
772792    +
772793    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
772794    +
772795    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
772796    +
772797    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
772798    +
772799    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
772800    +
772801    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
772802    +
772803    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
772804    +
772805    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
772806    +
772807    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
772808    +
772809    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
772810    +
772811    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
772812    +
772813    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
772814    +
772815    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
772816    +
772817    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
772818    +
772819    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
772820    +
772821    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
772822    +
772823    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
772824    +
772825    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
772826    +
772827    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
772828    +
772829    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
772830    +
772831    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
772832    +
772833    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
772834    +
772835    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
772836    +
772837    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
772838    +
772839    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
772840    +
772841    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
772842    +
772843    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
772844    +
772845    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
772846    +
772847    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
772848    +
772849    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
772850    +
772851    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
772852    +
772853    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
772854    +
772855    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
772856    +
772857    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
772858    +
772859    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
772860    +
772861    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
772862    +
772863    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
772864    +
772865    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
772866    +
772867    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
772868    +
772869    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
772870    +
772871    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
772872    +
772873    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
772874    +
772875    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
772876    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
772877    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
772878    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
772879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772881    +end;
MPRINT(EM_DIAGRAM):   end;
772882    +else do;
MPRINT(EM_DIAGRAM):   else do;
772883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772884    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
772885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772886    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
772887    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
772888    +   end;
MPRINT(EM_DIAGRAM):   end;
772889    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772890    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
772891    +   end;
MPRINT(EM_DIAGRAM):   end;
772892    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772893    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
772894    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772895    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772896    +   end;
MPRINT(EM_DIAGRAM):   end;
772897    +end;
MPRINT(EM_DIAGRAM):   end;
772898    +
772899    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
772900    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
772901    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
772902    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
772903    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
772904    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
772905    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772906    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772907    +end;
MPRINT(EM_DIAGRAM):   end;
772908    +else do;
MPRINT(EM_DIAGRAM):   else do;
772909    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772910    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
772911    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772912    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
772913    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
772914    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
772915    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
772916    +   end;
MPRINT(EM_DIAGRAM):   end;
772917    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772918    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
772919    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
772920    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
772921    +   end;
MPRINT(EM_DIAGRAM):   end;
772922    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772923    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
772924    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
772925    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
772926    +   end;
MPRINT(EM_DIAGRAM):   end;
772927    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772928    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
772929    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
772930    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
772931    +   end;
MPRINT(EM_DIAGRAM):   end;
772932    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772933    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
772934    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
772935    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
772936    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772937    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772938    +   end;
MPRINT(EM_DIAGRAM):   end;
772939    +end;
MPRINT(EM_DIAGRAM):   end;
772940    +
772941    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
772942    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
772943    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
772944    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
772945    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
772946    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
772947    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772948    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772949    +end;
MPRINT(EM_DIAGRAM):   end;
772950    +else do;
MPRINT(EM_DIAGRAM):   else do;
772951    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772952    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
772953    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772954    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
772955    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
772956    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
772957    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
772958    +   end;
MPRINT(EM_DIAGRAM):   end;
772959    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
772960    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
772961    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
772962    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
772963    +   end;
MPRINT(EM_DIAGRAM):   end;
772964    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
772965    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
772966    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
772967    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
772968    +   end;
MPRINT(EM_DIAGRAM):   end;
772969    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
772970    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
772971    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
772972    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
772973    +   end;
MPRINT(EM_DIAGRAM):   end;
772974    +   else do;
MPRINT(EM_DIAGRAM):   else do;
772975    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
772976    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
772977    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
772978    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
772979    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772980    +   end;
MPRINT(EM_DIAGRAM):   end;
772981    +end;
MPRINT(EM_DIAGRAM):   end;
772982    +
772983    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
772984    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
772985    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
772986    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
772987    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
772988    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
772989    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
772990    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
772991    +end;
MPRINT(EM_DIAGRAM):   end;
772992    +else do;
MPRINT(EM_DIAGRAM):   else do;
772993    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
772994    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
772995    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
772996    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
772997    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
772998    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
772999    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
773000    +   end;
MPRINT(EM_DIAGRAM):   end;
773001    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773002    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
773003    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
773004    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
773005    +   end;
MPRINT(EM_DIAGRAM):   end;
773006    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773007    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
773008    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
773009    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
773010    +   end;
MPRINT(EM_DIAGRAM):   end;
773011    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773012    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
773013    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
773014    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
773015    +   end;
MPRINT(EM_DIAGRAM):   end;
773016    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773017    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
773018    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
773019    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
773020    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773021    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773022    +   end;
MPRINT(EM_DIAGRAM):   end;
773023    +end;
MPRINT(EM_DIAGRAM):   end;
773024    +
773025    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
773026    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
773027    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
773028    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
773029    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
773030    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
773031    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773032    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773033    +end;
MPRINT(EM_DIAGRAM):   end;
773034    +else do;
MPRINT(EM_DIAGRAM):   else do;
773035    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773036    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
773037    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773038    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773039    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
773040    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
773041    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
773042    +   end;
MPRINT(EM_DIAGRAM):   end;
773043    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773044    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
773045    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
773046    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
773047    +   end;
MPRINT(EM_DIAGRAM):   end;
773048    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773049    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
773050    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
773051    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
773052    +   end;
MPRINT(EM_DIAGRAM):   end;
773053    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773054    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
773055    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
773056    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
773057    +   end;
MPRINT(EM_DIAGRAM):   end;
773058    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773059    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
773060    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
773061    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
773062    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773063    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773064    +   end;
MPRINT(EM_DIAGRAM):   end;
773065    +end;
MPRINT(EM_DIAGRAM):   end;
773066    +
773067    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
773068    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
773069    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
773070    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
773071    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
773072    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
773073    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773074    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773075    +end;
MPRINT(EM_DIAGRAM):   end;
773076    +else do;
MPRINT(EM_DIAGRAM):   else do;
773077    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773078    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
773079    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773080    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773081    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
773082    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
773083    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
773084    +   end;
MPRINT(EM_DIAGRAM):   end;
773085    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773086    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
773087    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
773088    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
773089    +   end;
MPRINT(EM_DIAGRAM):   end;
773090    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773091    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
773092    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
773093    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
773094    +   end;
MPRINT(EM_DIAGRAM):   end;
773095    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773096    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
773097    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
773098    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
773099    +   end;
MPRINT(EM_DIAGRAM):   end;
773100    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773101    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
773102    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
773103    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
773104    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773105    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773106    +   end;
MPRINT(EM_DIAGRAM):   end;
773107    +end;
MPRINT(EM_DIAGRAM):   end;
773108    +
773109    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
773110    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
773111    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
773112    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
773113    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
773114    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
773115    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773116    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773117    +end;
MPRINT(EM_DIAGRAM):   end;
773118    +else do;
MPRINT(EM_DIAGRAM):   else do;
773119    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773120    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
773121    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773122    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773123    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
773124    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
773125    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
773126    +   end;
MPRINT(EM_DIAGRAM):   end;
773127    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773128    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
773129    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
773130    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
773131    +   end;
MPRINT(EM_DIAGRAM):   end;
773132    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773133    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
773134    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
773135    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
773136    +   end;
MPRINT(EM_DIAGRAM):   end;
773137    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773138    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
773139    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
773140    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
773141    +   end;
MPRINT(EM_DIAGRAM):   end;
773142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773143    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
773144    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
773145    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
773146    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773147    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773148    +   end;
MPRINT(EM_DIAGRAM):   end;
773149    +end;
MPRINT(EM_DIAGRAM):   end;
773150    +
773151    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
773152    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
773153    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
773154    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
773155    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
773156    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
773157    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773158    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773159    +end;
MPRINT(EM_DIAGRAM):   end;
773160    +else do;
MPRINT(EM_DIAGRAM):   else do;
773161    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773162    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
773163    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773164    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773165    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
773166    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
773167    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
773168    +   end;
MPRINT(EM_DIAGRAM):   end;
773169    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773170    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
773171    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
773172    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
773173    +   end;
MPRINT(EM_DIAGRAM):   end;
773174    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773175    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
773176    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
773177    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
773178    +   end;
MPRINT(EM_DIAGRAM):   end;
773179    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773180    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
773181    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
773182    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
773183    +   end;
MPRINT(EM_DIAGRAM):   end;
773184    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773185    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
773186    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
773187    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
773188    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773189    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773190    +   end;
MPRINT(EM_DIAGRAM):   end;
773191    +end;
MPRINT(EM_DIAGRAM):   end;
773192    +
773193    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
773194    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
773195    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
773196    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
773197    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
773198    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773199    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773200    +end;
MPRINT(EM_DIAGRAM):   end;
773201    +else do;
MPRINT(EM_DIAGRAM):   else do;
773202    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773203    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
773204    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773205    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773206    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
773207    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
773208    +   end;
MPRINT(EM_DIAGRAM):   end;
773209    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773210    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
773211    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
773212    +   end;
MPRINT(EM_DIAGRAM):   end;
773213    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773214    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
773215    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
773216    +   end;
MPRINT(EM_DIAGRAM):   end;
773217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773218    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
773219    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
773220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773222    +   end;
MPRINT(EM_DIAGRAM):   end;
773223    +end;
MPRINT(EM_DIAGRAM):   end;
773224    +
773225    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
773226    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
773227    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
773228    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
773229    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
773230    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
773231    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773232    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773233    +end;
MPRINT(EM_DIAGRAM):   end;
773234    +else do;
MPRINT(EM_DIAGRAM):   else do;
773235    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773236    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
773237    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773238    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
773239    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
773240    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
773241    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
773242    +   end;
MPRINT(EM_DIAGRAM):   end;
773243    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773244    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
773245    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
773246    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
773247    +   end;
MPRINT(EM_DIAGRAM):   end;
773248    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773249    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
773250    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
773251    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
773252    +   end;
MPRINT(EM_DIAGRAM):   end;
773253    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
773254    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
773255    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
773256    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
773257    +   end;
MPRINT(EM_DIAGRAM):   end;
773258    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773259    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
773260    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
773261    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
773262    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773263    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773264    +   end;
MPRINT(EM_DIAGRAM):   end;
773265    +end;
MPRINT(EM_DIAGRAM):   end;
773266    +
773267    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
773268    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
773269    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
773270    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
773271    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
773272    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
773273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773275    +end;
MPRINT(EM_DIAGRAM):   end;
773276    +else do;
MPRINT(EM_DIAGRAM):   else do;
773277    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773278    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
773279    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773280    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773281    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
773282    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
773283    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
773284    +   end;
MPRINT(EM_DIAGRAM):   end;
773285    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773286    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
773287    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
773288    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
773289    +   end;
MPRINT(EM_DIAGRAM):   end;
773290    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773291    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
773292    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
773293    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
773294    +   end;
MPRINT(EM_DIAGRAM):   end;
773295    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773296    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
773297    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
773298    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
773299    +   end;
MPRINT(EM_DIAGRAM):   end;
773300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773301    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
773302    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
773303    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
773304    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773305    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773306    +   end;
MPRINT(EM_DIAGRAM):   end;
773307    +end;
MPRINT(EM_DIAGRAM):   end;
773308    +
773309    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
773310    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
773311    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
773312    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
773313    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
773314    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
773315    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773316    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773317    +end;
MPRINT(EM_DIAGRAM):   end;
773318    +else do;
MPRINT(EM_DIAGRAM):   else do;
773319    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773320    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
773321    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773322    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
773323    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
773324    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
773325    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
773326    +   end;
MPRINT(EM_DIAGRAM):   end;
773327    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
773328    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
773329    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
773330    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
773331    +   end;
MPRINT(EM_DIAGRAM):   end;
773332    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773333    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
773334    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
773335    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
773336    +   end;
MPRINT(EM_DIAGRAM):   end;
773337    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773338    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
773339    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
773340    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
773341    +   end;
MPRINT(EM_DIAGRAM):   end;
773342    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773343    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
773344    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
773345    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
773346    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773347    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773348    +   end;
MPRINT(EM_DIAGRAM):   end;
773349    +end;
MPRINT(EM_DIAGRAM):   end;
773350    +
773351    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
773352    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
773353    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
773354    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
773355    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
773356    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
773357    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773358    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773359    +end;
MPRINT(EM_DIAGRAM):   end;
773360    +else do;
MPRINT(EM_DIAGRAM):   else do;
773361    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773362    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
773363    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773364    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773365    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
773366    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
773367    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
773368    +   end;
MPRINT(EM_DIAGRAM):   end;
773369    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773370    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
773371    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
773372    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
773373    +   end;
MPRINT(EM_DIAGRAM):   end;
773374    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773375    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
773376    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
773377    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
773378    +   end;
MPRINT(EM_DIAGRAM):   end;
773379    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773380    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
773381    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
773382    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
773383    +   end;
MPRINT(EM_DIAGRAM):   end;
773384    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773385    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
773386    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
773387    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
773388    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773389    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773390    +   end;
MPRINT(EM_DIAGRAM):   end;
773391    +end;
MPRINT(EM_DIAGRAM):   end;
773392    +
773393    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
773394    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
773395    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
773396    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
773397    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
773398    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
773399    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773400    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773401    +end;
MPRINT(EM_DIAGRAM):   end;
773402    +else do;
MPRINT(EM_DIAGRAM):   else do;
773403    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773404    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
773405    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773406    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
773407    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
773408    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
773409    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
773410    +   end;
MPRINT(EM_DIAGRAM):   end;
773411    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773412    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
773413    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
773414    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
773415    +   end;
MPRINT(EM_DIAGRAM):   end;
773416    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
773417    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
773418    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
773419    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
773420    +   end;
MPRINT(EM_DIAGRAM):   end;
773421    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773422    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
773423    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
773424    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
773425    +   end;
MPRINT(EM_DIAGRAM):   end;
773426    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773427    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
773428    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
773429    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
773430    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773431    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773432    +   end;
MPRINT(EM_DIAGRAM):   end;
773433    +end;
MPRINT(EM_DIAGRAM):   end;
773434    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773435    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
773436    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773437    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773438    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
773439    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773440    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
773441    +   H11  =    -0.47846451014473 * GRP_AcceptedCmp52  +     0.19123593876387 *
773442    +        GRP_Frq2  +     0.09643181492148 * GRP_Frq3  +     0.05144024674895 *
773443    +        GRP_Frq4  +     0.04295631018086 * GRP_Income2
773444    +          +     -0.1228594895838 * GRP_Income3  +    -0.24669259703155 *
773445    +        GRP_Income4  +    -0.12634710557505 * GRP_Mnt2
773446    +          +     0.06153848379201 * GRP_Mnt3  +    -0.25623825887978 * GRP_Mnt4
773447    +          +    -0.09885892988252 * GRP_MntFishProducts2
773448    +          +     0.08406776876431 * GRP_MntFishProducts3
773449    +          +    -0.01961506207304 * GRP_MntFishProducts4
773450    +          +     0.05865015349102 * GRP_MntGoldProds2
773451    +          +    -0.19025881153665 * GRP_MntGoldProds3
773452    +          +     0.11742267670165 * GRP_MntGoldProds4
773453    +          +    -0.48107725600014 * GRP_MntMeatProducts2
773454    +          +    -0.06405219545244 * GRP_MntMeatProducts3
773455    +          +    -0.28599597872655 * GRP_MntMeatProducts4
773456    +          +     0.09252331701173 * GRP_MntWines2  +    -0.01679973092371 *
773457    +        GRP_MntWines3  +    -0.28118765113398 * GRP_MntWines4
773458    +          +    -0.20589129984224 * GRP_NumCatalogPurchases3
773459    +          +     0.09269540062859 * GRP_NumCatalogPurchases4
773460    +          +    -0.21301173258264 * GRP_NumDistPurchases2
773461    +          +     0.02968077077204 * GRP_NumDistPurchases3
773462    +          +     0.37847518797466 * GRP_NumDistPurchases4
773463    +          +    -0.14460622553066 * GRP_NumWebPurchases2
773464    +          +     0.24087714617368 * GRP_NumWebPurchases3
773465    +          +     0.31645984538255 * GRP_NumWebPurchases4
773466    +          +    -0.21603366146166 * GRP_RFMstat2  +    -0.16662861409798 *
773467    +        GRP_RFMstat3  +     0.21007601365613 * GRP_RFMstat4
773468    +          +    -0.01443663304415 * GRP_RMntFrq2  +    -0.10326438582674 *
773469    +        GRP_RMntFrq3  +    -0.65474128199839 * GRP_RMntFrq4
773470    +          +     0.32165037855922 * GRP_Recency2  +     0.13838311684738 *
773471    +        GRP_Recency3  +     0.25495034500897 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47846451014473 * GRP_AcceptedCmp52 + 0.19123593876387 * 
GRP_Frq2 + 0.09643181492148 * GRP_Frq3 + 0.05144024674895 * GRP_Frq4 + 0.04295631018086 * 
GRP_Income2 + -0.1228594895838 * GRP_Income3 + -0.24669259703155 * GRP_Income4 + 
-0.12634710557505 * GRP_Mnt2 + 0.06153848379201 * GRP_Mnt3 + -0.25623825887978 * GRP_Mnt4 + 
-0.09885892988252 * GRP_MntFishProducts2 + 0.08406776876431 * GRP_MntFishProducts3 + 
-0.01961506207304 * GRP_MntFishProducts4 + 0.05865015349102 * GRP_MntGoldProds2 + 
-0.19025881153665 * GRP_MntGoldProds3 + 0.11742267670165 * GRP_MntGoldProds4 + 
-0.48107725600014 * GRP_MntMeatProducts2 + -0.06405219545244 * GRP_MntMeatProducts3 + 
-0.28599597872655 * GRP_MntMeatProducts4 + 0.09252331701173 * GRP_MntWines2 + 
-0.01679973092371 * GRP_MntWines3 + -0.28118765113398 * GRP_MntWines4 + -0.20589129984224 * 
GRP_NumCatalogPurchases3 + 0.09269540062859 * GRP_NumCatalogPurchases4 + -0.21301173258264 * 
GRP_NumDistPurchases2 + 0.02968077077204 * GRP_NumDistPurchases3 + 0.37847518797466 * 
GRP_NumDistPurchases4 + -0.14460622553066 * GRP_NumWebPurchases2 + 0.24087714617368 * 
GRP_NumWebPurchases3 + 0.31645984538255 * GRP_NumWebPurchases4 + -0.21603366146166 * 
GRP_RFMstat2 + -0.16662861409798 * GRP_RFMstat3 + 0.21007601365613 * GRP_RFMstat4 + 
-0.01443663304415 * GRP_RMntFrq2 + -0.10326438582674 * GRP_RMntFrq3 + -0.65474128199839 * 
GRP_RMntFrq4 + 0.32165037855922 * GRP_Recency2 + 0.13838311684738 * GRP_Recency3 + 
0.25495034500897 * GRP_Recency4 ;
773472    +   H12  =     0.19980227701329 * GRP_AcceptedCmp52  +     0.35227413860542 *
773473    +        GRP_Frq2  +    -0.08132751965568 * GRP_Frq3  +     0.06274660992037 *
773474    +        GRP_Frq4  +     0.14609729670665 * GRP_Income2
773475    +          +     -0.0521158725468 * GRP_Income3  +     0.29485821055626 *
773476    +        GRP_Income4  +     0.11491631500511 * GRP_Mnt2
773477    +          +    -0.48249282197964 * GRP_Mnt3  +    -0.43275960999945 * GRP_Mnt4
773478    +          +     0.23372129286866 * GRP_MntFishProducts2
773479    +          +     0.08173006283377 * GRP_MntFishProducts3
773480    +          +    -0.26374451563307 * GRP_MntFishProducts4
773481    +          +    -0.05478986771486 * GRP_MntGoldProds2
773482    +          +     0.15674217490538 * GRP_MntGoldProds3
773483    +          +     -0.0970693263223 * GRP_MntGoldProds4
773484    +          +    -0.07551339114514 * GRP_MntMeatProducts2
773485    +          +     0.20520020022282 * GRP_MntMeatProducts3
773486    +          +     0.18185271543305 * GRP_MntMeatProducts4
773487    +          +     0.13372808101693 * GRP_MntWines2  +    -0.23508613293176 *
773488    +        GRP_MntWines3  +     0.03782283781196 * GRP_MntWines4
773489    +          +    -0.01759208575836 * GRP_NumCatalogPurchases3
773490    +          +     0.03228155996803 * GRP_NumCatalogPurchases4
773491    +          +    -0.16689756602171 * GRP_NumDistPurchases2
773492    +          +     0.23008084678616 * GRP_NumDistPurchases3
773493    +          +      0.1020080832353 * GRP_NumDistPurchases4
773494    +          +     0.00689419482794 * GRP_NumWebPurchases2
773495    +          +     0.45549724613494 * GRP_NumWebPurchases3
773496    +          +     0.21666691620434 * GRP_NumWebPurchases4
773497    +          +    -0.02464138218078 * GRP_RFMstat2  +     0.13412544784153 *
773498    +        GRP_RFMstat3  +    -0.09645970560405 * GRP_RFMstat4
773499    +          +     0.04270814348512 * GRP_RMntFrq2  +     -0.1501520967589 *
773500    +        GRP_RMntFrq3  +     -0.1772447013278 * GRP_RMntFrq4
773501    +          +      0.1223375687576 * GRP_Recency2  +      0.1019105028487 *
773502    +        GRP_Recency3  +     0.06326170958276 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19980227701329 * GRP_AcceptedCmp52 + 0.35227413860542 * GRP_Frq2 
+ -0.08132751965568 * GRP_Frq3 + 0.06274660992037 * GRP_Frq4 + 0.14609729670665 * GRP_Income2 
+ -0.0521158725468 * GRP_Income3 + 0.29485821055626 * GRP_Income4 + 0.11491631500511 * 
GRP_Mnt2 + -0.48249282197964 * GRP_Mnt3 + -0.43275960999945 * GRP_Mnt4 + 0.23372129286866 * 
GRP_MntFishProducts2 + 0.08173006283377 * GRP_MntFishProducts3 + -0.26374451563307 * 
GRP_MntFishProducts4 + -0.05478986771486 * GRP_MntGoldProds2 + 0.15674217490538 * 
GRP_MntGoldProds3 + -0.0970693263223 * GRP_MntGoldProds4 + -0.07551339114514 * 
GRP_MntMeatProducts2 + 0.20520020022282 * GRP_MntMeatProducts3 + 0.18185271543305 * 
GRP_MntMeatProducts4 + 0.13372808101693 * GRP_MntWines2 + -0.23508613293176 * GRP_MntWines3 + 
0.03782283781196 * GRP_MntWines4 + -0.01759208575836 * GRP_NumCatalogPurchases3 + 
0.03228155996803 * GRP_NumCatalogPurchases4 + -0.16689756602171 * GRP_NumDistPurchases2 + 
0.23008084678616 * GRP_NumDistPurchases3 + 0.1020080832353 * GRP_NumDistPurchases4 + 
0.00689419482794 * GRP_NumWebPurchases2 + 0.45549724613494 * GRP_NumWebPurchases3 + 
0.21666691620434 * GRP_NumWebPurchases4 + -0.02464138218078 * GRP_RFMstat2 + 0.13412544784153 
* GRP_RFMstat3 + -0.09645970560405 * GRP_RFMstat4 + 0.04270814348512 * GRP_RMntFrq2 + 
-0.1501520967589 * GRP_RMntFrq3 + -0.1772447013278 * GRP_RMntFrq4 + 0.1223375687576 * 
GRP_Recency2 + 0.1019105028487 * GRP_Recency3 + 0.06326170958276 * GRP_Recency4 ;
773503    +   H13  =    -0.47552326597307 * GRP_AcceptedCmp52  +     0.13942347151662 *
773504    +        GRP_Frq2  +     0.15792042601114 * GRP_Frq3  +    -0.31699137546772 *
773505    +        GRP_Frq4  +     0.31623959766757 * GRP_Income2
773506    +          +     0.51675448663341 * GRP_Income3  +    -0.28386096750656 *
773507    +        GRP_Income4  +    -0.19585257598596 * GRP_Mnt2
773508    +          +     0.03528129174811 * GRP_Mnt3  +     0.16020552351069 * GRP_Mnt4
773509    +          +     0.11549870508237 * GRP_MntFishProducts2
773510    +          +    -0.02472870244462 * GRP_MntFishProducts3
773511    +          +    -0.08397818027214 * GRP_MntFishProducts4
773512    +          +    -0.15352678487636 * GRP_MntGoldProds2
773513    +          +    -0.22936969994696 * GRP_MntGoldProds3
773514    +          +    -0.14955434708754 * GRP_MntGoldProds4
773515    +          +    -0.27851745198006 * GRP_MntMeatProducts2
773516    +          +    -0.20347624413948 * GRP_MntMeatProducts3
773517    +          +     0.22612412661729 * GRP_MntMeatProducts4
773518    +          +      0.0680550338972 * GRP_MntWines2  +     0.13605728094791 *
773519    +        GRP_MntWines3  +    -0.24233826362305 * GRP_MntWines4
773520    +          +    -0.51105265438413 * GRP_NumCatalogPurchases3
773521    +          +      0.3463181885617 * GRP_NumCatalogPurchases4
773522    +          +    -0.42061003686263 * GRP_NumDistPurchases2
773523    +          +     0.05694490202182 * GRP_NumDistPurchases3
773524    +          +    -0.05589065356183 * GRP_NumDistPurchases4
773525    +          +    -0.15004779907268 * GRP_NumWebPurchases2
773526    +          +    -0.03683214810286 * GRP_NumWebPurchases3
773527    +          +    -0.14152766915751 * GRP_NumWebPurchases4
773528    +          +    -0.34448387603605 * GRP_RFMstat2  +    -0.12678315363038 *
773529    +        GRP_RFMstat3  +    -0.17785766746488 * GRP_RFMstat4
773530    +          +    -0.12269367915474 * GRP_RMntFrq2  +     0.15261716486225 *
773531    +        GRP_RMntFrq3  +    -0.14834283523731 * GRP_RMntFrq4
773532    +          +     0.41906757309616 * GRP_Recency2  +     0.11383836551208 *
773533    +        GRP_Recency3  +    -0.50873022901358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.47552326597307 * GRP_AcceptedCmp52 + 0.13942347151662 * 
GRP_Frq2 + 0.15792042601114 * GRP_Frq3 + -0.31699137546772 * GRP_Frq4 + 0.31623959766757 * 
GRP_Income2 + 0.51675448663341 * GRP_Income3 + -0.28386096750656 * GRP_Income4 + 
-0.19585257598596 * GRP_Mnt2 + 0.03528129174811 * GRP_Mnt3 + 0.16020552351069 * GRP_Mnt4 + 
0.11549870508237 * GRP_MntFishProducts2 + -0.02472870244462 * GRP_MntFishProducts3 + 
-0.08397818027214 * GRP_MntFishProducts4 + -0.15352678487636 * GRP_MntGoldProds2 + 
-0.22936969994696 * GRP_MntGoldProds3 + -0.14955434708754 * GRP_MntGoldProds4 + 
-0.27851745198006 * GRP_MntMeatProducts2 + -0.20347624413948 * GRP_MntMeatProducts3 + 
0.22612412661729 * GRP_MntMeatProducts4 + 0.0680550338972 * GRP_MntWines2 + 0.13605728094791 * 
GRP_MntWines3 + -0.24233826362305 * GRP_MntWines4 + -0.51105265438413 * 
GRP_NumCatalogPurchases3 + 0.3463181885617 * GRP_NumCatalogPurchases4 + -0.42061003686263 * 
GRP_NumDistPurchases2 + 0.05694490202182 * GRP_NumDistPurchases3 + -0.05589065356183 * 
GRP_NumDistPurchases4 + -0.15004779907268 * GRP_NumWebPurchases2 + -0.03683214810286 * 
GRP_NumWebPurchases3 + -0.14152766915751 * GRP_NumWebPurchases4 + -0.34448387603605 * 
GRP_RFMstat2 + -0.12678315363038 * GRP_RFMstat3 + -0.17785766746488 * GRP_RFMstat4 + 
-0.12269367915474 * GRP_RMntFrq2 + 0.15261716486225 * GRP_RMntFrq3 + -0.14834283523731 * 
GRP_RMntFrq4 + 0.41906757309616 * GRP_Recency2 + 0.11383836551208 * GRP_Recency3 + 
-0.50873022901358 * GRP_Recency4 ;
773534    +   H14  =     0.47487308000188 * GRP_AcceptedCmp52  +    -0.20783874293801 *
773535    +        GRP_Frq2  +     -0.2262487293265 * GRP_Frq3  +    -0.24497015722444 *
773536    +        GRP_Frq4  +    -0.41352416374349 * GRP_Income2
773537    +          +    -0.19029917786221 * GRP_Income3  +     0.44371774186743 *
773538    +        GRP_Income4  +     0.03966957052109 * GRP_Mnt2
773539    +          +     0.21041258864544 * GRP_Mnt3  +    -0.03545115071009 * GRP_Mnt4
773540    +          +     -0.3523117475999 * GRP_MntFishProducts2
773541    +          +     0.01075749365425 * GRP_MntFishProducts3
773542    +          +    -0.19220397921061 * GRP_MntFishProducts4
773543    +          +     0.24691019907326 * GRP_MntGoldProds2
773544    +          +    -0.36269131170152 * GRP_MntGoldProds3
773545    +          +    -0.07442729340208 * GRP_MntGoldProds4
773546    +          +     0.14166838567576 * GRP_MntMeatProducts2
773547    +          +     -0.0573636128895 * GRP_MntMeatProducts3
773548    +          +     0.11782684497872 * GRP_MntMeatProducts4
773549    +          +    -0.58306293735162 * GRP_MntWines2  +     -0.1332347200661 *
773550    +        GRP_MntWines3  +     -0.0491151521812 * GRP_MntWines4
773551    +          +     0.19217394838443 * GRP_NumCatalogPurchases3
773552    +          +     0.30242368378572 * GRP_NumCatalogPurchases4
773553    +          +      0.5631335040028 * GRP_NumDistPurchases2
773554    +          +      0.2833277493575 * GRP_NumDistPurchases3
773555    +          +     0.15501991757103 * GRP_NumDistPurchases4
773556    +          +     0.06522663204791 * GRP_NumWebPurchases2
773557    +          +    -0.24250508241812 * GRP_NumWebPurchases3
773558    +          +    -0.14936719392927 * GRP_NumWebPurchases4
773559    +          +     0.07538326365237 * GRP_RFMstat2  +    -0.11207708467015 *
773560    +        GRP_RFMstat3  +    -0.03495013261696 * GRP_RFMstat4
773561    +          +    -0.07948642963964 * GRP_RMntFrq2  +     -0.3740993499425 *
773562    +        GRP_RMntFrq3  +      0.1224880912483 * GRP_RMntFrq4
773563    +          +    -1.20234498415322 * GRP_Recency2  +    -0.15277267671243 *
773564    +        GRP_Recency3  +     0.17498175973385 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.47487308000188 * GRP_AcceptedCmp52 + -0.20783874293801 * 
GRP_Frq2 + -0.2262487293265 * GRP_Frq3 + -0.24497015722444 * GRP_Frq4 + -0.41352416374349 * 
GRP_Income2 + -0.19029917786221 * GRP_Income3 + 0.44371774186743 * GRP_Income4 + 
0.03966957052109 * GRP_Mnt2 + 0.21041258864544 * GRP_Mnt3 + -0.03545115071009 * GRP_Mnt4 + 
-0.3523117475999 * GRP_MntFishProducts2 + 0.01075749365425 * GRP_MntFishProducts3 + 
-0.19220397921061 * GRP_MntFishProducts4 + 0.24691019907326 * GRP_MntGoldProds2 + 
-0.36269131170152 * GRP_MntGoldProds3 + -0.07442729340208 * GRP_MntGoldProds4 + 
0.14166838567576 * GRP_MntMeatProducts2 + -0.0573636128895 * GRP_MntMeatProducts3 + 
0.11782684497872 * GRP_MntMeatProducts4 + -0.58306293735162 * GRP_MntWines2 + -0.1332347200661 
* GRP_MntWines3 + -0.0491151521812 * GRP_MntWines4 + 0.19217394838443 * 
GRP_NumCatalogPurchases3 + 0.30242368378572 * GRP_NumCatalogPurchases4 + 0.5631335040028 * 
GRP_NumDistPurchases2 + 0.2833277493575 * GRP_NumDistPurchases3 + 0.15501991757103 * 
GRP_NumDistPurchases4 + 0.06522663204791 * GRP_NumWebPurchases2 + -0.24250508241812 * 
GRP_NumWebPurchases3 + -0.14936719392927 * GRP_NumWebPurchases4 + 0.07538326365237 * 
GRP_RFMstat2 + -0.11207708467015 * GRP_RFMstat3 + -0.03495013261696 * GRP_RFMstat4 + 
-0.07948642963964 * GRP_RMntFrq2 + -0.3740993499425 * GRP_RMntFrq3 + 0.1224880912483 * 
GRP_RMntFrq4 + -1.20234498415322 * GRP_Recency2 + -0.15277267671243 * GRP_Recency3 + 
0.17498175973385 * GRP_Recency4 ;
773565    +   H15  =     0.31607756545434 * GRP_AcceptedCmp52  +    -0.39938983779344 *
773566    +        GRP_Frq2  +     0.14190381114364 * GRP_Frq3  +    -0.04654073105991 *
773567    +        GRP_Frq4  +    -0.46847099915399 * GRP_Income2
773568    +          +    -0.24521056791482 * GRP_Income3  +     0.29673900247528 *
773569    +        GRP_Income4  +    -0.24347594694596 * GRP_Mnt2
773570    +          +    -0.25470417967356 * GRP_Mnt3  +     -0.3155333752807 * GRP_Mnt4
773571    +          +    -0.16164851437662 * GRP_MntFishProducts2
773572    +          +    -0.07507872874942 * GRP_MntFishProducts3
773573    +          +     -0.0000128165366 * GRP_MntFishProducts4
773574    +          +    -0.13003975496355 * GRP_MntGoldProds2
773575    +          +     0.10076462685161 * GRP_MntGoldProds3
773576    +          +     0.06823082371801 * GRP_MntGoldProds4
773577    +          +    -0.06661203056726 * GRP_MntMeatProducts2
773578    +          +     0.21135583081997 * GRP_MntMeatProducts3
773579    +          +     0.05317467469941 * GRP_MntMeatProducts4
773580    +          +     -0.6790577471338 * GRP_MntWines2  +    -0.29030845400198 *
773581    +        GRP_MntWines3  +     0.17538455641954 * GRP_MntWines4
773582    +          +     0.27411589551701 * GRP_NumCatalogPurchases3
773583    +          +     0.33639439802576 * GRP_NumCatalogPurchases4
773584    +          +     0.37202178791302 * GRP_NumDistPurchases2
773585    +          +     0.21242089259106 * GRP_NumDistPurchases3
773586    +          +     0.01745612539369 * GRP_NumDistPurchases4
773587    +          +     0.06417261665114 * GRP_NumWebPurchases2
773588    +          +     0.34302874594069 * GRP_NumWebPurchases3
773589    +          +     0.08556934131582 * GRP_NumWebPurchases4
773590    +          +    -0.01317484038203 * GRP_RFMstat2  +    -0.26798645102872 *
773591    +        GRP_RFMstat3  +    -0.23199496411354 * GRP_RFMstat4
773592    +          +    -0.36396476479849 * GRP_RMntFrq2  +    -0.16838193614715 *
773593    +        GRP_RMntFrq3  +       0.051807632343 * GRP_RMntFrq4
773594    +          +    -0.13014582685433 * GRP_Recency2  +     0.01537566565331 *
773595    +        GRP_Recency3  +      0.1365007617785 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.31607756545434 * GRP_AcceptedCmp52 + -0.39938983779344 * 
GRP_Frq2 + 0.14190381114364 * GRP_Frq3 + -0.04654073105991 * GRP_Frq4 + -0.46847099915399 * 
GRP_Income2 + -0.24521056791482 * GRP_Income3 + 0.29673900247528 * GRP_Income4 + 
-0.24347594694596 * GRP_Mnt2 + -0.25470417967356 * GRP_Mnt3 + -0.3155333752807 * GRP_Mnt4 + 
-0.16164851437662 * GRP_MntFishProducts2 + -0.07507872874942 * GRP_MntFishProducts3 + 
-0.0000128165366 * GRP_MntFishProducts4 + -0.13003975496355 * GRP_MntGoldProds2 + 
0.10076462685161 * GRP_MntGoldProds3 + 0.06823082371801 * GRP_MntGoldProds4 + 
-0.06661203056726 * GRP_MntMeatProducts2 + 0.21135583081997 * GRP_MntMeatProducts3 + 
0.05317467469941 * GRP_MntMeatProducts4 + -0.6790577471338 * GRP_MntWines2 + -0.29030845400198 
* GRP_MntWines3 + 0.17538455641954 * GRP_MntWines4 + 0.27411589551701 * 
GRP_NumCatalogPurchases3 + 0.33639439802576 * GRP_NumCatalogPurchases4 + 0.37202178791302 * 
GRP_NumDistPurchases2 + 0.21242089259106 * GRP_NumDistPurchases3 + 0.01745612539369 * 
GRP_NumDistPurchases4 + 0.06417261665114 * GRP_NumWebPurchases2 + 0.34302874594069 * 
GRP_NumWebPurchases3 + 0.08556934131582 * GRP_NumWebPurchases4 + -0.01317484038203 * 
GRP_RFMstat2 + -0.26798645102872 * GRP_RFMstat3 + -0.23199496411354 * GRP_RFMstat4 + 
-0.36396476479849 * GRP_RMntFrq2 + -0.16838193614715 * GRP_RMntFrq3 + 0.051807632343 * 
GRP_RMntFrq4 + -0.13014582685433 * GRP_Recency2 + 0.01537566565331 * GRP_Recency3 + 
0.1365007617785 * GRP_Recency4 ;
773596    +   H11  =    -0.02804722687441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02804722687441 + H11 ;
773597    +   H12  =    -1.15173994765723 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.15173994765723 + H12 ;
773598    +   H13  =     0.30124306509106 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30124306509106 + H13 ;
773599    +   H14  =    -0.37792609262463 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.37792609262463 + H14 ;
773600    +   H15  =     0.46405557098176 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.46405557098176 + H15 ;
773601    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
773602    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
773603    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
773604    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
773605    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
773606    +END;
MPRINT(EM_DIAGRAM):   END;
773607    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
773608    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
773609    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
773610    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
773611    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
773612    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
773613    +END;
MPRINT(EM_DIAGRAM):   END;
773614    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773615    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
773616    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773617    +
773618    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
773619    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
773620    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
773621    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
773622    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
773623    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773624    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
773625    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
773626    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
773627    +end;
MPRINT(EM_DIAGRAM):   end;
773628    +else do;
MPRINT(EM_DIAGRAM):   else do;
773629    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
773630    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
773631    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
773632    +   end;
MPRINT(EM_DIAGRAM):   end;
773633    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
773634    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
773635    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
773636    +   end;
MPRINT(EM_DIAGRAM):   end;
773637    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773638    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
773639    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
773640    +   end;
MPRINT(EM_DIAGRAM):   end;
773641    +end;
MPRINT(EM_DIAGRAM):   end;
773642    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
773643    +   P_DepVar1  =     1.14388401268032 * H11  +      0.6001876010487 * H12
773644    +          +     2.09526498410663 * H13  +    -1.84849014758118 * H14
773645    +          +    -1.09009016441951 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.14388401268032 * H11 + 0.6001876010487 * H12 + 
2.09526498410663 * H13 + -1.84849014758118 * H14 + -1.09009016441951 * H15 ;
773646    +   P_DepVar1  =    -1.61414772995986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.61414772995986 + P_DepVar1 ;
773647    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
773648    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
773649    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
773650    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
773651    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
773652    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
773653    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
773654    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
773655    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
773656    +END;
MPRINT(EM_DIAGRAM):   END;
773657    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
773658    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
773659    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
773660    +END;
MPRINT(EM_DIAGRAM):   END;
773661    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
773662    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
773663    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
773664    +END;
MPRINT(EM_DIAGRAM):   END;
773665    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
773666    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
773667    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
773668    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
773669    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
773670    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
773671    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
773672    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773673    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
773674    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
773675    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
773676    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
773677    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
773678    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
773679    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
773680    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
773681    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
773682    +END;
MPRINT(EM_DIAGRAM):   END;
773683    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
773684    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
773685    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
773686    +drop
773687    +H11
773688    +H12
773689    +H13
773690    +H14
773691    +H15
773692    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
773693    +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
773694    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773695    +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
773696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773697    +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
773698    +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
773699    +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
773700    +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
773701    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773702    +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
773703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773704    +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
773705    +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
773706    +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
773707    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773708    +* Ensmbl3: Scoring Code of model 8 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 8 of 9;
773709    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773710    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773711    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
773712    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
773713    +* NODE: Neural23;
MPRINT(EM_DIAGRAM):   * NODE: Neural23;
773714    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
773715    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
773716    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
773717    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
773718    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
773719    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
773720    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
773721    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
773722    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
773723    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
773724    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
773725    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
773726    +LENGTH _WARN_ $4
773727    +      F_DepVar  $ 12
773728    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
773729    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
773730    +
773731    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
773732    +
773733    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
773734    +
773735    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
773736    +
773737    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
773738    +
773739    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
773740    +
773741    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
773742    +
773743    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
773744    +
773745    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
773746    +
773747    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
773748    +
773749    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
773750    +
773751    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
773752    +
773753    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
773754    +
773755    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
773756    +
773757    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
773758    +
773759    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
773760    +
773761    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
773762    +
773763    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
773764    +
773765    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
773766    +
773767    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
773768    +
773769    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
773770    +
773771    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
773772    +
773773    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
773774    +
773775    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
773776    +
773777    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
773778    +
773779    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
773780    +
773781    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
773782    +
773783    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
773784    +
773785    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
773786    +
773787    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
773788    +
773789    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
773790    +
773791    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
773792    +
773793    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
773794    +
773795    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
773796    +
773797    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
773798    +
773799    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
773800    +
773801    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
773802    +
773803    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
773804    +
773805    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
773806    +
773807    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
773808    +
773809    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
773810    +
773811    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
773812    +
773813    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
773814    +
773815    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
773816    +
773817    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
773818    +
773819    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
773820    +
773821    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
773822    +
773823    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
773824    +
773825    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
773826    +
773827    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
773828    +
773829    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
773830    +
773831    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
773832    +
773833    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
773834    +
773835    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
773836    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
773837    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
773838    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
773839    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773840    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773841    +end;
MPRINT(EM_DIAGRAM):   end;
773842    +else do;
MPRINT(EM_DIAGRAM):   else do;
773843    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773844    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
773845    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773846    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
773847    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
773848    +   end;
MPRINT(EM_DIAGRAM):   end;
773849    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
773850    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
773851    +   end;
MPRINT(EM_DIAGRAM):   end;
773852    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773853    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
773854    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773855    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773856    +   end;
MPRINT(EM_DIAGRAM):   end;
773857    +end;
MPRINT(EM_DIAGRAM):   end;
773858    +
773859    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
773860    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
773861    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
773862    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
773863    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
773864    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
773865    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773867    +end;
MPRINT(EM_DIAGRAM):   end;
773868    +else do;
MPRINT(EM_DIAGRAM):   else do;
773869    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773870    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
773871    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773872    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
773873    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
773874    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
773875    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
773876    +   end;
MPRINT(EM_DIAGRAM):   end;
773877    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
773878    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
773879    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
773880    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
773881    +   end;
MPRINT(EM_DIAGRAM):   end;
773882    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773883    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
773884    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
773885    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
773886    +   end;
MPRINT(EM_DIAGRAM):   end;
773887    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773888    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
773889    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
773890    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
773891    +   end;
MPRINT(EM_DIAGRAM):   end;
773892    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773893    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
773894    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
773895    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
773896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773898    +   end;
MPRINT(EM_DIAGRAM):   end;
773899    +end;
MPRINT(EM_DIAGRAM):   end;
773900    +
773901    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
773902    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
773903    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
773904    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
773905    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
773906    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
773907    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773908    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773909    +end;
MPRINT(EM_DIAGRAM):   end;
773910    +else do;
MPRINT(EM_DIAGRAM):   else do;
773911    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773912    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
773913    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773914    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
773915    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
773916    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
773917    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
773918    +   end;
MPRINT(EM_DIAGRAM):   end;
773919    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773920    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
773921    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
773922    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
773923    +   end;
MPRINT(EM_DIAGRAM):   end;
773924    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
773925    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
773926    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
773927    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
773928    +   end;
MPRINT(EM_DIAGRAM):   end;
773929    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773930    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
773931    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
773932    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
773933    +   end;
MPRINT(EM_DIAGRAM):   end;
773934    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773935    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
773936    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
773937    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
773938    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773939    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773940    +   end;
MPRINT(EM_DIAGRAM):   end;
773941    +end;
MPRINT(EM_DIAGRAM):   end;
773942    +
773943    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
773944    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
773945    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
773946    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
773947    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
773948    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
773949    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773950    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773951    +end;
MPRINT(EM_DIAGRAM):   end;
773952    +else do;
MPRINT(EM_DIAGRAM):   else do;
773953    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773954    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
773955    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773956    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773957    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
773958    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
773959    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
773960    +   end;
MPRINT(EM_DIAGRAM):   end;
773961    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
773962    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
773963    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
773964    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
773965    +   end;
MPRINT(EM_DIAGRAM):   end;
773966    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
773967    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
773968    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
773969    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
773970    +   end;
MPRINT(EM_DIAGRAM):   end;
773971    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
773972    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
773973    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
773974    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
773975    +   end;
MPRINT(EM_DIAGRAM):   end;
773976    +   else do;
MPRINT(EM_DIAGRAM):   else do;
773977    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
773978    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
773979    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
773980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
773981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773982    +   end;
MPRINT(EM_DIAGRAM):   end;
773983    +end;
MPRINT(EM_DIAGRAM):   end;
773984    +
773985    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
773986    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
773987    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
773988    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
773989    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
773990    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
773991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
773992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
773993    +end;
MPRINT(EM_DIAGRAM):   end;
773994    +else do;
MPRINT(EM_DIAGRAM):   else do;
773995    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
773996    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
773997    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
773998    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
773999    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
774000    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
774001    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
774002    +   end;
MPRINT(EM_DIAGRAM):   end;
774003    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774004    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
774005    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
774006    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
774007    +   end;
MPRINT(EM_DIAGRAM):   end;
774008    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774009    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
774010    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
774011    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
774012    +   end;
MPRINT(EM_DIAGRAM):   end;
774013    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774014    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
774015    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
774016    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
774017    +   end;
MPRINT(EM_DIAGRAM):   end;
774018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774019    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
774020    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
774021    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
774022    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774023    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774024    +   end;
MPRINT(EM_DIAGRAM):   end;
774025    +end;
MPRINT(EM_DIAGRAM):   end;
774026    +
774027    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
774028    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
774029    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
774030    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
774031    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
774032    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
774033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774035    +end;
MPRINT(EM_DIAGRAM):   end;
774036    +else do;
MPRINT(EM_DIAGRAM):   else do;
774037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774038    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
774039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774040    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774041    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
774042    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
774043    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
774044    +   end;
MPRINT(EM_DIAGRAM):   end;
774045    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774046    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
774047    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
774048    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
774049    +   end;
MPRINT(EM_DIAGRAM):   end;
774050    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774051    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
774052    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
774053    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
774054    +   end;
MPRINT(EM_DIAGRAM):   end;
774055    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774056    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
774057    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
774058    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
774059    +   end;
MPRINT(EM_DIAGRAM):   end;
774060    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774061    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
774062    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
774063    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
774064    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774065    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774066    +   end;
MPRINT(EM_DIAGRAM):   end;
774067    +end;
MPRINT(EM_DIAGRAM):   end;
774068    +
774069    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
774070    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
774071    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
774072    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
774073    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
774074    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
774075    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774076    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774077    +end;
MPRINT(EM_DIAGRAM):   end;
774078    +else do;
MPRINT(EM_DIAGRAM):   else do;
774079    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774080    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
774081    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774082    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774083    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
774084    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
774085    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
774086    +   end;
MPRINT(EM_DIAGRAM):   end;
774087    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774088    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
774089    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
774090    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
774091    +   end;
MPRINT(EM_DIAGRAM):   end;
774092    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774093    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
774094    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
774095    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
774096    +   end;
MPRINT(EM_DIAGRAM):   end;
774097    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774098    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
774099    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
774100    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
774101    +   end;
MPRINT(EM_DIAGRAM):   end;
774102    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774103    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
774104    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
774105    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
774106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774108    +   end;
MPRINT(EM_DIAGRAM):   end;
774109    +end;
MPRINT(EM_DIAGRAM):   end;
774110    +
774111    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
774112    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
774113    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
774114    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
774115    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
774116    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
774117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774119    +end;
MPRINT(EM_DIAGRAM):   end;
774120    +else do;
MPRINT(EM_DIAGRAM):   else do;
774121    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774122    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
774123    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774124    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774125    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
774126    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
774127    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
774128    +   end;
MPRINT(EM_DIAGRAM):   end;
774129    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774130    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
774131    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
774132    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
774133    +   end;
MPRINT(EM_DIAGRAM):   end;
774134    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774135    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
774136    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
774137    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
774138    +   end;
MPRINT(EM_DIAGRAM):   end;
774139    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774140    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
774141    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
774142    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
774143    +   end;
MPRINT(EM_DIAGRAM):   end;
774144    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774145    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
774146    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
774147    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
774148    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774149    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774150    +   end;
MPRINT(EM_DIAGRAM):   end;
774151    +end;
MPRINT(EM_DIAGRAM):   end;
774152    +
774153    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
774154    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
774155    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
774156    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
774157    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
774158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774160    +end;
MPRINT(EM_DIAGRAM):   end;
774161    +else do;
MPRINT(EM_DIAGRAM):   else do;
774162    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774163    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
774164    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774165    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774166    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
774167    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
774168    +   end;
MPRINT(EM_DIAGRAM):   end;
774169    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774170    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
774171    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
774172    +   end;
MPRINT(EM_DIAGRAM):   end;
774173    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774174    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
774175    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
774176    +   end;
MPRINT(EM_DIAGRAM):   end;
774177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774178    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
774179    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
774180    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774181    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774182    +   end;
MPRINT(EM_DIAGRAM):   end;
774183    +end;
MPRINT(EM_DIAGRAM):   end;
774184    +
774185    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
774186    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
774187    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
774188    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
774189    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
774190    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
774191    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774192    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774193    +end;
MPRINT(EM_DIAGRAM):   end;
774194    +else do;
MPRINT(EM_DIAGRAM):   else do;
774195    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774196    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
774197    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774198    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
774199    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
774200    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
774201    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
774202    +   end;
MPRINT(EM_DIAGRAM):   end;
774203    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774204    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
774205    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
774206    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
774207    +   end;
MPRINT(EM_DIAGRAM):   end;
774208    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774209    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
774210    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
774211    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
774212    +   end;
MPRINT(EM_DIAGRAM):   end;
774213    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
774214    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
774215    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
774216    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
774217    +   end;
MPRINT(EM_DIAGRAM):   end;
774218    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774219    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
774220    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
774221    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
774222    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774223    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774224    +   end;
MPRINT(EM_DIAGRAM):   end;
774225    +end;
MPRINT(EM_DIAGRAM):   end;
774226    +
774227    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
774228    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
774229    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
774230    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
774231    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
774232    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
774233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774235    +end;
MPRINT(EM_DIAGRAM):   end;
774236    +else do;
MPRINT(EM_DIAGRAM):   else do;
774237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774238    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
774239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774240    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774241    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
774242    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
774243    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
774244    +   end;
MPRINT(EM_DIAGRAM):   end;
774245    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774246    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
774247    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
774248    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
774249    +   end;
MPRINT(EM_DIAGRAM):   end;
774250    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774251    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
774252    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
774253    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
774254    +   end;
MPRINT(EM_DIAGRAM):   end;
774255    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774256    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
774257    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
774258    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
774259    +   end;
MPRINT(EM_DIAGRAM):   end;
774260    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774261    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
774262    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
774263    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
774264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774266    +   end;
MPRINT(EM_DIAGRAM):   end;
774267    +end;
MPRINT(EM_DIAGRAM):   end;
774268    +
774269    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
774270    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
774271    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
774272    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
774273    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
774274    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
774275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774277    +end;
MPRINT(EM_DIAGRAM):   end;
774278    +else do;
MPRINT(EM_DIAGRAM):   else do;
774279    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774280    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
774281    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774282    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
774283    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
774284    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
774285    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
774286    +   end;
MPRINT(EM_DIAGRAM):   end;
774287    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
774288    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
774289    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
774290    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
774291    +   end;
MPRINT(EM_DIAGRAM):   end;
774292    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774293    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
774294    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
774295    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
774296    +   end;
MPRINT(EM_DIAGRAM):   end;
774297    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774298    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
774299    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
774300    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
774301    +   end;
MPRINT(EM_DIAGRAM):   end;
774302    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774303    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
774304    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
774305    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
774306    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774307    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774308    +   end;
MPRINT(EM_DIAGRAM):   end;
774309    +end;
MPRINT(EM_DIAGRAM):   end;
774310    +
774311    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
774312    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
774313    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
774314    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
774315    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
774316    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
774317    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774319    +end;
MPRINT(EM_DIAGRAM):   end;
774320    +else do;
MPRINT(EM_DIAGRAM):   else do;
774321    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774322    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
774323    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774324    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774325    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
774326    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
774327    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
774328    +   end;
MPRINT(EM_DIAGRAM):   end;
774329    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774330    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
774331    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
774332    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
774333    +   end;
MPRINT(EM_DIAGRAM):   end;
774334    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774335    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
774336    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
774337    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
774338    +   end;
MPRINT(EM_DIAGRAM):   end;
774339    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774340    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
774341    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
774342    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
774343    +   end;
MPRINT(EM_DIAGRAM):   end;
774344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774345    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
774346    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
774347    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
774348    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774349    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774350    +   end;
MPRINT(EM_DIAGRAM):   end;
774351    +end;
MPRINT(EM_DIAGRAM):   end;
774352    +
774353    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
774354    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
774355    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
774356    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
774357    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
774358    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
774359    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774361    +end;
MPRINT(EM_DIAGRAM):   end;
774362    +else do;
MPRINT(EM_DIAGRAM):   else do;
774363    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774364    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
774365    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774366    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
774367    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
774368    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
774369    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
774370    +   end;
MPRINT(EM_DIAGRAM):   end;
774371    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774372    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
774373    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
774374    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
774375    +   end;
MPRINT(EM_DIAGRAM):   end;
774376    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
774377    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
774378    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
774379    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
774380    +   end;
MPRINT(EM_DIAGRAM):   end;
774381    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774382    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
774383    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
774384    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
774385    +   end;
MPRINT(EM_DIAGRAM):   end;
774386    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774387    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
774388    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
774389    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
774390    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774391    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774392    +   end;
MPRINT(EM_DIAGRAM):   end;
774393    +end;
MPRINT(EM_DIAGRAM):   end;
774394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774395    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
774396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774398    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
774399    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774400    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
774401    +   H11  =     0.33640101965956 * GRP_AcceptedCmp52  +    -0.09458866011332 *
774402    +        GRP_Frq2  +     0.08165112288668 * GRP_Frq3  +      0.0098569396377 *
774403    +        GRP_Frq4  +    -0.10718097600137 * GRP_Income2
774404    +          +     0.24913133317457 * GRP_Income3  +     0.08606607454597 *
774405    +        GRP_Income4  +    -0.43083911296417 * GRP_Mnt2
774406    +          +    -0.35952383025836 * GRP_Mnt3  +     0.15746774085254 * GRP_Mnt4
774407    +          +     0.03496490321939 * GRP_MntFishProducts2
774408    +          +     -0.1386775704024 * GRP_MntFishProducts3
774409    +          +     0.08185130088727 * GRP_MntFishProducts4
774410    +          +     0.20666000615395 * GRP_MntGoldProds2
774411    +          +     0.02513603537885 * GRP_MntGoldProds3
774412    +          +     0.04518515377846 * GRP_MntGoldProds4
774413    +          +     0.14564741446952 * GRP_MntMeatProducts2
774414    +          +      0.0921407018606 * GRP_MntMeatProducts3
774415    +          +     0.03964574584898 * GRP_MntMeatProducts4
774416    +          +    -0.10395279216819 * GRP_MntWines2  +     0.12929231428625 *
774417    +        GRP_MntWines3  +     0.00045903854959 * GRP_MntWines4
774418    +          +    -0.03496333349231 * GRP_NumCatalogPurchases3
774419    +          +    -0.18329339773791 * GRP_NumCatalogPurchases4
774420    +          +     0.25535533392017 * GRP_NumDistPurchases2
774421    +          +     0.03881117716273 * GRP_NumDistPurchases3
774422    +          +    -0.02565551941415 * GRP_NumDistPurchases4
774423    +          +     0.31760052513768 * GRP_NumWebPurchases2
774424    +          +     0.09995149350563 * GRP_NumWebPurchases3
774425    +          +    -0.03267834031943 * GRP_NumWebPurchases4
774426    +          +     0.20523977712748 * GRP_RFMstat2  +    -0.05606160362426 *
774427    +        GRP_RFMstat3  +     0.08166835774422 * GRP_RFMstat4
774428    +          +    -0.02802261136507 * GRP_RMntFrq2  +     0.04530681268814 *
774429    +        GRP_RMntFrq3  +     0.17075869124019 * GRP_RMntFrq4
774430    +          +    -0.07437386313878 * GRP_Recency2  +    -0.03620176560114 *
774431    +        GRP_Recency3  +     -0.1829690397052 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.33640101965956 * GRP_AcceptedCmp52 + -0.09458866011332 * 
GRP_Frq2 + 0.08165112288668 * GRP_Frq3 + 0.0098569396377 * GRP_Frq4 + -0.10718097600137 * 
GRP_Income2 + 0.24913133317457 * GRP_Income3 + 0.08606607454597 * GRP_Income4 + 
-0.43083911296417 * GRP_Mnt2 + -0.35952383025836 * GRP_Mnt3 + 0.15746774085254 * GRP_Mnt4 + 
0.03496490321939 * GRP_MntFishProducts2 + -0.1386775704024 * GRP_MntFishProducts3 + 
0.08185130088727 * GRP_MntFishProducts4 + 0.20666000615395 * GRP_MntGoldProds2 + 
0.02513603537885 * GRP_MntGoldProds3 + 0.04518515377846 * GRP_MntGoldProds4 + 0.14564741446952 
* GRP_MntMeatProducts2 + 0.0921407018606 * GRP_MntMeatProducts3 + 0.03964574584898 * 
GRP_MntMeatProducts4 + -0.10395279216819 * GRP_MntWines2 + 0.12929231428625 * GRP_MntWines3 + 
0.00045903854959 * GRP_MntWines4 + -0.03496333349231 * GRP_NumCatalogPurchases3 + 
-0.18329339773791 * GRP_NumCatalogPurchases4 + 0.25535533392017 * GRP_NumDistPurchases2 + 
0.03881117716273 * GRP_NumDistPurchases3 + -0.02565551941415 * GRP_NumDistPurchases4 + 
0.31760052513768 * GRP_NumWebPurchases2 + 0.09995149350563 * GRP_NumWebPurchases3 + 
-0.03267834031943 * GRP_NumWebPurchases4 + 0.20523977712748 * GRP_RFMstat2 + -0.05606160362426 
* GRP_RFMstat3 + 0.08166835774422 * GRP_RFMstat4 + -0.02802261136507 * GRP_RMntFrq2 + 
0.04530681268814 * GRP_RMntFrq3 + 0.17075869124019 * GRP_RMntFrq4 + -0.07437386313878 * 
GRP_Recency2 + -0.03620176560114 * GRP_Recency3 + -0.1829690397052 * GRP_Recency4 ;
774432    +   H12  =    -0.44053040668419 * GRP_AcceptedCmp52  +     0.39130488780547 *
774433    +        GRP_Frq2  +    -0.05339083882864 * GRP_Frq3  +     0.00231451089906 *
774434    +        GRP_Frq4  +      0.5831587240061 * GRP_Income2
774435    +          +     0.54852848249408 * GRP_Income3  +     -0.4598479622494 *
774436    +        GRP_Income4  +     0.04804779326921 * GRP_Mnt2
774437    +          +    -0.18484356222731 * GRP_Mnt3  +     0.03549703658034 * GRP_Mnt4
774438    +          +     0.39885742453554 * GRP_MntFishProducts2
774439    +          +     0.15761355687754 * GRP_MntFishProducts3
774440    +          +    -0.21271471925571 * GRP_MntFishProducts4
774441    +          +     -0.1972927903123 * GRP_MntGoldProds2
774442    +          +     0.03399122417272 * GRP_MntGoldProds3
774443    +          +    -0.02558670857298 * GRP_MntGoldProds4
774444    +          +    -0.41984327217018 * GRP_MntMeatProducts2
774445    +          +     0.05051071020912 * GRP_MntMeatProducts3
774446    +          +     0.02213191751142 * GRP_MntMeatProducts4
774447    +          +     0.27725513562646 * GRP_MntWines2  +    -0.13825638111274 *
774448    +        GRP_MntWines3  +     0.10174302336793 * GRP_MntWines4
774449    +          +    -0.13050806508623 * GRP_NumCatalogPurchases3
774450    +          +     0.18000903281461 * GRP_NumCatalogPurchases4
774451    +          +     -0.5134802042985 * GRP_NumDistPurchases2
774452    +          +     -0.0517830924312 * GRP_NumDistPurchases3
774453    +          +    -0.16980153882394 * GRP_NumDistPurchases4
774454    +          +     0.03868274112159 * GRP_NumWebPurchases2
774455    +          +     0.16193614709489 * GRP_NumWebPurchases3
774456    +          +      0.0269423998237 * GRP_NumWebPurchases4
774457    +          +    -0.32452106975443 * GRP_RFMstat2  +    -0.21611965835421 *
774458    +        GRP_RFMstat3  +    -0.11926055719327 * GRP_RFMstat4
774459    +          +     0.21187682021828 * GRP_RMntFrq2  +     0.08976835265364 *
774460    +        GRP_RMntFrq3  +    -0.20787348857522 * GRP_RMntFrq4
774461    +          +     0.68804853934306 * GRP_Recency2  +     0.17422440486451 *
774462    +        GRP_Recency3  +    -0.18452599729833 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.44053040668419 * GRP_AcceptedCmp52 + 0.39130488780547 * 
GRP_Frq2 + -0.05339083882864 * GRP_Frq3 + 0.00231451089906 * GRP_Frq4 + 0.5831587240061 * 
GRP_Income2 + 0.54852848249408 * GRP_Income3 + -0.4598479622494 * GRP_Income4 + 
0.04804779326921 * GRP_Mnt2 + -0.18484356222731 * GRP_Mnt3 + 0.03549703658034 * GRP_Mnt4 + 
0.39885742453554 * GRP_MntFishProducts2 + 0.15761355687754 * GRP_MntFishProducts3 + 
-0.21271471925571 * GRP_MntFishProducts4 + -0.1972927903123 * GRP_MntGoldProds2 + 
0.03399122417272 * GRP_MntGoldProds3 + -0.02558670857298 * GRP_MntGoldProds4 + 
-0.41984327217018 * GRP_MntMeatProducts2 + 0.05051071020912 * GRP_MntMeatProducts3 + 
0.02213191751142 * GRP_MntMeatProducts4 + 0.27725513562646 * GRP_MntWines2 + -0.13825638111274 
* GRP_MntWines3 + 0.10174302336793 * GRP_MntWines4 + -0.13050806508623 * 
GRP_NumCatalogPurchases3 + 0.18000903281461 * GRP_NumCatalogPurchases4 + -0.5134802042985 * 
GRP_NumDistPurchases2 + -0.0517830924312 * GRP_NumDistPurchases3 + -0.16980153882394 * 
GRP_NumDistPurchases4 + 0.03868274112159 * GRP_NumWebPurchases2 + 0.16193614709489 * 
GRP_NumWebPurchases3 + 0.0269423998237 * GRP_NumWebPurchases4 + -0.32452106975443 * 
GRP_RFMstat2 + -0.21611965835421 * GRP_RFMstat3 + -0.11926055719327 * GRP_RFMstat4 + 
0.21187682021828 * GRP_RMntFrq2 + 0.08976835265364 * GRP_RMntFrq3 + -0.20787348857522 * 
GRP_RMntFrq4 + 0.68804853934306 * GRP_Recency2 + 0.17422440486451 * GRP_Recency3 + 
-0.18452599729833 * GRP_Recency4 ;
774463    +   H13  =      0.0874014291812 * GRP_AcceptedCmp52  +     0.17304198694157 *
774464    +        GRP_Frq2  +    -0.11491629051719 * GRP_Frq3  +      0.2483225021197 *
774465    +        GRP_Frq4  +    -0.05989120739582 * GRP_Income2
774466    +          +    -0.02732012571019 * GRP_Income3  +     0.20807069048689 *
774467    +        GRP_Income4  +     0.33666649935924 * GRP_Mnt2
774468    +          +      0.0642358727731 * GRP_Mnt3  +    -0.22568229208697 * GRP_Mnt4
774469    +          +    -0.12147573127033 * GRP_MntFishProducts2
774470    +          +    -0.19323607018295 * GRP_MntFishProducts3
774471    +          +     0.25863847748437 * GRP_MntFishProducts4
774472    +          +     -0.0126645668436 * GRP_MntGoldProds2
774473    +          +    -0.11323357258997 * GRP_MntGoldProds3
774474    +          +    -0.11250689806163 * GRP_MntGoldProds4
774475    +          +    -0.12545641044895 * GRP_MntMeatProducts2
774476    +          +    -0.04305442792903 * GRP_MntMeatProducts3
774477    +          +    -0.32146302728834 * GRP_MntMeatProducts4
774478    +          +    -0.00148263872712 * GRP_MntWines2  +     0.11028478479749 *
774479    +        GRP_MntWines3  +    -0.02542826671873 * GRP_MntWines4
774480    +          +    -0.03468933342665 * GRP_NumCatalogPurchases3
774481    +          +     0.06081255664838 * GRP_NumCatalogPurchases4
774482    +          +     0.09115957554684 * GRP_NumDistPurchases2
774483    +          +    -0.19448624046951 * GRP_NumDistPurchases3
774484    +          +     0.18401866660579 * GRP_NumDistPurchases4
774485    +          +    -0.30934548179162 * GRP_NumWebPurchases2
774486    +          +    -0.15569430268918 * GRP_NumWebPurchases3
774487    +          +    -0.15912290396059 * GRP_NumWebPurchases4
774488    +          +      0.3307600563141 * GRP_RFMstat2  +    -0.22709032656384 *
774489    +        GRP_RFMstat3  +      0.0673885738463 * GRP_RFMstat4
774490    +          +    -0.34782658221729 * GRP_RMntFrq2  +    -0.37292996378384 *
774491    +        GRP_RMntFrq3  +    -0.19656647007955 * GRP_RMntFrq4
774492    +          +    -0.48292133112766 * GRP_Recency2  +    -0.19998163272412 *
774493    +        GRP_Recency3  +     0.04020306752703 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.0874014291812 * GRP_AcceptedCmp52 + 0.17304198694157 * GRP_Frq2 
+ -0.11491629051719 * GRP_Frq3 + 0.2483225021197 * GRP_Frq4 + -0.05989120739582 * GRP_Income2 
+ -0.02732012571019 * GRP_Income3 + 0.20807069048689 * GRP_Income4 + 0.33666649935924 * 
GRP_Mnt2 + 0.0642358727731 * GRP_Mnt3 + -0.22568229208697 * GRP_Mnt4 + -0.12147573127033 * 
GRP_MntFishProducts2 + -0.19323607018295 * GRP_MntFishProducts3 + 0.25863847748437 * 
GRP_MntFishProducts4 + -0.0126645668436 * GRP_MntGoldProds2 + -0.11323357258997 * 
GRP_MntGoldProds3 + -0.11250689806163 * GRP_MntGoldProds4 + -0.12545641044895 * 
GRP_MntMeatProducts2 + -0.04305442792903 * GRP_MntMeatProducts3 + -0.32146302728834 * 
GRP_MntMeatProducts4 + -0.00148263872712 * GRP_MntWines2 + 0.11028478479749 * GRP_MntWines3 + 
-0.02542826671873 * GRP_MntWines4 + -0.03468933342665 * GRP_NumCatalogPurchases3 + 
0.06081255664838 * GRP_NumCatalogPurchases4 + 0.09115957554684 * GRP_NumDistPurchases2 + 
-0.19448624046951 * GRP_NumDistPurchases3 + 0.18401866660579 * GRP_NumDistPurchases4 + 
-0.30934548179162 * GRP_NumWebPurchases2 + -0.15569430268918 * GRP_NumWebPurchases3 + 
-0.15912290396059 * GRP_NumWebPurchases4 + 0.3307600563141 * GRP_RFMstat2 + -0.22709032656384 
* GRP_RFMstat3 + 0.0673885738463 * GRP_RFMstat4 + -0.34782658221729 * GRP_RMntFrq2 + 
-0.37292996378384 * GRP_RMntFrq3 + -0.19656647007955 * GRP_RMntFrq4 + -0.48292133112766 * 
GRP_Recency2 + -0.19998163272412 * GRP_Recency3 + 0.04020306752703 * GRP_Recency4 ;
774494    +   H14  =    -0.06535462604618 * GRP_AcceptedCmp52  +    -0.02538966501603 *
774495    +        GRP_Frq2  +    -0.37465930862485 * GRP_Frq3  +    -0.09115714895281 *
774496    +        GRP_Frq4  +    -0.19377207233976 * GRP_Income2
774497    +          +     0.19699955617479 * GRP_Income3  +     0.18620312701109 *
774498    +        GRP_Income4  +    -0.07918752617024 * GRP_Mnt2
774499    +          +    -0.15791729955854 * GRP_Mnt3  +     0.05785915035978 * GRP_Mnt4
774500    +          +    -0.15621920593365 * GRP_MntFishProducts2
774501    +          +     0.18156570239129 * GRP_MntFishProducts3
774502    +          +    -0.19268366331472 * GRP_MntFishProducts4
774503    +          +     0.17003324763884 * GRP_MntGoldProds2
774504    +          +    -0.24315925332299 * GRP_MntGoldProds3
774505    +          +    -0.19433542142509 * GRP_MntGoldProds4
774506    +          +     0.48300099715349 * GRP_MntMeatProducts2
774507    +          +     0.04287374992788 * GRP_MntMeatProducts3
774508    +          +    -0.14772483570864 * GRP_MntMeatProducts4
774509    +          +    -0.35939710533055 * GRP_MntWines2  +      0.0814263252657 *
774510    +        GRP_MntWines3  +     0.11455106831693 * GRP_MntWines4
774511    +          +     0.28909689894797 * GRP_NumCatalogPurchases3
774512    +          +     0.35798075318799 * GRP_NumCatalogPurchases4
774513    +          +     0.26175622277157 * GRP_NumDistPurchases2
774514    +          +    -0.28134203235556 * GRP_NumDistPurchases3
774515    +          +     -0.0849885153607 * GRP_NumDistPurchases4
774516    +          +    -0.00363026409862 * GRP_NumWebPurchases2
774517    +          +    -0.18458881565534 * GRP_NumWebPurchases3
774518    +          +    -0.00054495066636 * GRP_NumWebPurchases4
774519    +          +     0.02464665365087 * GRP_RFMstat2  +    -0.04709787167688 *
774520    +        GRP_RFMstat3  +    -0.21485621631981 * GRP_RFMstat4
774521    +          +      0.0421527075159 * GRP_RMntFrq2  +     0.12266531817421 *
774522    +        GRP_RMntFrq3  +     0.34319246452663 * GRP_RMntFrq4
774523    +          +    -0.42128751178743 * GRP_Recency2  +    -0.03341002800803 *
774524    +        GRP_Recency3  +    -0.00550102888585 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.06535462604618 * GRP_AcceptedCmp52 + -0.02538966501603 * 
GRP_Frq2 + -0.37465930862485 * GRP_Frq3 + -0.09115714895281 * GRP_Frq4 + -0.19377207233976 * 
GRP_Income2 + 0.19699955617479 * GRP_Income3 + 0.18620312701109 * GRP_Income4 + 
-0.07918752617024 * GRP_Mnt2 + -0.15791729955854 * GRP_Mnt3 + 0.05785915035978 * GRP_Mnt4 + 
-0.15621920593365 * GRP_MntFishProducts2 + 0.18156570239129 * GRP_MntFishProducts3 + 
-0.19268366331472 * GRP_MntFishProducts4 + 0.17003324763884 * GRP_MntGoldProds2 + 
-0.24315925332299 * GRP_MntGoldProds3 + -0.19433542142509 * GRP_MntGoldProds4 + 
0.48300099715349 * GRP_MntMeatProducts2 + 0.04287374992788 * GRP_MntMeatProducts3 + 
-0.14772483570864 * GRP_MntMeatProducts4 + -0.35939710533055 * GRP_MntWines2 + 0.0814263252657 
* GRP_MntWines3 + 0.11455106831693 * GRP_MntWines4 + 0.28909689894797 * 
GRP_NumCatalogPurchases3 + 0.35798075318799 * GRP_NumCatalogPurchases4 + 0.26175622277157 * 
GRP_NumDistPurchases2 + -0.28134203235556 * GRP_NumDistPurchases3 + -0.0849885153607 * 
GRP_NumDistPurchases4 + -0.00363026409862 * GRP_NumWebPurchases2 + -0.18458881565534 * 
GRP_NumWebPurchases3 + -0.00054495066636 * GRP_NumWebPurchases4 + 0.02464665365087 * 
GRP_RFMstat2 + -0.04709787167688 * GRP_RFMstat3 + -0.21485621631981 * GRP_RFMstat4 + 
0.0421527075159 * GRP_RMntFrq2 + 0.12266531817421 * GRP_RMntFrq3 + 0.34319246452663 * 
GRP_RMntFrq4 + -0.42128751178743 * GRP_Recency2 + -0.03341002800803 * GRP_Recency3 + 
-0.00550102888585 * GRP_Recency4 ;
774525    +   H15  =     0.20080324976316 * GRP_AcceptedCmp52  +     0.03346464595946 *
774526    +        GRP_Frq2  +    -0.46550936235158 * GRP_Frq3  +     0.11038114045006 *
774527    +        GRP_Frq4  +     0.10073875117437 * GRP_Income2
774528    +          +    -0.22683871345668 * GRP_Income3  +    -0.09384548786395 *
774529    +        GRP_Income4  +     0.43323607707701 * GRP_Mnt2
774530    +          +     0.27829480348267 * GRP_Mnt3  +     0.12638599389415 * GRP_Mnt4
774531    +          +     0.02417129110075 * GRP_MntFishProducts2
774532    +          +      0.2545897829616 * GRP_MntFishProducts3
774533    +          +    -0.29458064807823 * GRP_MntFishProducts4
774534    +          +    -0.15364697476117 * GRP_MntGoldProds2
774535    +          +      0.3170384910511 * GRP_MntGoldProds3
774536    +          +     0.43731794737697 * GRP_MntGoldProds4
774537    +          +     0.51501086483907 * GRP_MntMeatProducts2
774538    +          +     0.15231215210229 * GRP_MntMeatProducts3
774539    +          +    -0.05381144096743 * GRP_MntMeatProducts4
774540    +          +     0.13508510112509 * GRP_MntWines2  +    -0.33096430220175 *
774541    +        GRP_MntWines3  +     0.49248642584759 * GRP_MntWines4
774542    +          +     0.25386528096127 * GRP_NumCatalogPurchases3
774543    +          +     0.31775128798882 * GRP_NumCatalogPurchases4
774544    +          +     0.26152832976302 * GRP_NumDistPurchases2
774545    +          +     0.00160473771196 * GRP_NumDistPurchases3
774546    +          +      0.0013330753294 * GRP_NumDistPurchases4
774547    +          +     0.23697025371136 * GRP_NumWebPurchases2
774548    +          +     0.12394312604839 * GRP_NumWebPurchases3
774549    +          +     0.29358944454399 * GRP_NumWebPurchases4
774550    +          +      0.2711027918467 * GRP_RFMstat2  +    -0.07642391618094 *
774551    +        GRP_RFMstat3  +     0.14712184054126 * GRP_RFMstat4
774552    +          +     0.11431001806439 * GRP_RMntFrq2  +     0.06273949214332 *
774553    +        GRP_RMntFrq3  +     0.44954334169592 * GRP_RMntFrq4
774554    +          +    -0.10299484961132 * GRP_Recency2  +    -0.00660050077332 *
774555    +        GRP_Recency3  +     0.10477819043432 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.20080324976316 * GRP_AcceptedCmp52 + 0.03346464595946 * GRP_Frq2 
+ -0.46550936235158 * GRP_Frq3 + 0.11038114045006 * GRP_Frq4 + 0.10073875117437 * GRP_Income2 
+ -0.22683871345668 * GRP_Income3 + -0.09384548786395 * GRP_Income4 + 0.43323607707701 * 
GRP_Mnt2 + 0.27829480348267 * GRP_Mnt3 + 0.12638599389415 * GRP_Mnt4 + 0.02417129110075 * 
GRP_MntFishProducts2 + 0.2545897829616 * GRP_MntFishProducts3 + -0.29458064807823 * 
GRP_MntFishProducts4 + -0.15364697476117 * GRP_MntGoldProds2 + 0.3170384910511 * 
GRP_MntGoldProds3 + 0.43731794737697 * GRP_MntGoldProds4 + 0.51501086483907 * 
GRP_MntMeatProducts2 + 0.15231215210229 * GRP_MntMeatProducts3 + -0.05381144096743 * 
GRP_MntMeatProducts4 + 0.13508510112509 * GRP_MntWines2 + -0.33096430220175 * GRP_MntWines3 + 
0.49248642584759 * GRP_MntWines4 + 0.25386528096127 * GRP_NumCatalogPurchases3 + 
0.31775128798882 * GRP_NumCatalogPurchases4 + 0.26152832976302 * GRP_NumDistPurchases2 + 
0.00160473771196 * GRP_NumDistPurchases3 + 0.0013330753294 * GRP_NumDistPurchases4 + 
0.23697025371136 * GRP_NumWebPurchases2 + 0.12394312604839 * GRP_NumWebPurchases3 + 
0.29358944454399 * GRP_NumWebPurchases4 + 0.2711027918467 * GRP_RFMstat2 + -0.07642391618094 * 
GRP_RFMstat3 + 0.14712184054126 * GRP_RFMstat4 + 0.11431001806439 * GRP_RMntFrq2 + 
0.06273949214332 * GRP_RMntFrq3 + 0.44954334169592 * GRP_RMntFrq4 + -0.10299484961132 * 
GRP_Recency2 + -0.00660050077332 * GRP_Recency3 + 0.10477819043432 * GRP_Recency4 ;
774556    +   H16  =      0.7597594494859 * GRP_AcceptedCmp52  +    -0.32376689593056 *
774557    +        GRP_Frq2  +    -0.07779183366163 * GRP_Frq3  +     0.11273534310895 *
774558    +        GRP_Frq4  +    -0.36089895624306 * GRP_Income2
774559    +          +    -0.38271011363759 * GRP_Income3  +     0.33282176047548 *
774560    +        GRP_Income4  +    -0.13854310872224 * GRP_Mnt2
774561    +          +    -0.31005746238746 * GRP_Mnt3  +     0.02082673800287 * GRP_Mnt4
774562    +          +     0.01224737349632 * GRP_MntFishProducts2
774563    +          +    -0.19458526368147 * GRP_MntFishProducts3
774564    +          +    -0.25187479317784 * GRP_MntFishProducts4
774565    +          +     0.01924229245332 * GRP_MntGoldProds2
774566    +          +     0.01852658027428 * GRP_MntGoldProds3
774567    +          +    -0.23305256947549 * GRP_MntGoldProds4
774568    +          +     0.13401051842966 * GRP_MntMeatProducts2
774569    +          +     0.27193108385041 * GRP_MntMeatProducts3
774570    +          +     0.01379422261623 * GRP_MntMeatProducts4
774571    +          +    -0.57181882470311 * GRP_MntWines2  +    -0.57187059852098 *
774572    +        GRP_MntWines3  +     0.30882985081217 * GRP_MntWines4
774573    +          +     0.49912000555763 * GRP_NumCatalogPurchases3
774574    +          +    -0.04354876738665 * GRP_NumCatalogPurchases4
774575    +          +     0.34941540707612 * GRP_NumDistPurchases2
774576    +          +     0.32691169055841 * GRP_NumDistPurchases3
774577    +          +    -0.09211947503636 * GRP_NumDistPurchases4
774578    +          +     0.23482266977456 * GRP_NumWebPurchases2
774579    +          +     0.33507315521476 * GRP_NumWebPurchases3
774580    +          +    -0.08817191120299 * GRP_NumWebPurchases4
774581    +          +     0.02374098589478 * GRP_RFMstat2  +    -0.23629328969151 *
774582    +        GRP_RFMstat3  +    -0.52724215414655 * GRP_RFMstat4
774583    +          +    -0.11172774703142 * GRP_RMntFrq2  +    -0.23930023577086 *
774584    +        GRP_RMntFrq3  +    -0.17783974029566 * GRP_RMntFrq4
774585    +          +    -0.09948595230391 * GRP_Recency2  +    -0.15957779348689 *
774586    +        GRP_Recency3  +     0.12430840578537 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = 0.7597594494859 * GRP_AcceptedCmp52 + -0.32376689593056 * GRP_Frq2 
+ -0.07779183366163 * GRP_Frq3 + 0.11273534310895 * GRP_Frq4 + -0.36089895624306 * GRP_Income2 
+ -0.38271011363759 * GRP_Income3 + 0.33282176047548 * GRP_Income4 + -0.13854310872224 * 
GRP_Mnt2 + -0.31005746238746 * GRP_Mnt3 + 0.02082673800287 * GRP_Mnt4 + 0.01224737349632 * 
GRP_MntFishProducts2 + -0.19458526368147 * GRP_MntFishProducts3 + -0.25187479317784 * 
GRP_MntFishProducts4 + 0.01924229245332 * GRP_MntGoldProds2 + 0.01852658027428 * 
GRP_MntGoldProds3 + -0.23305256947549 * GRP_MntGoldProds4 + 0.13401051842966 * 
GRP_MntMeatProducts2 + 0.27193108385041 * GRP_MntMeatProducts3 + 0.01379422261623 * 
GRP_MntMeatProducts4 + -0.57181882470311 * GRP_MntWines2 + -0.57187059852098 * GRP_MntWines3 + 
0.30882985081217 * GRP_MntWines4 + 0.49912000555763 * GRP_NumCatalogPurchases3 + 
-0.04354876738665 * GRP_NumCatalogPurchases4 + 0.34941540707612 * GRP_NumDistPurchases2 + 
0.32691169055841 * GRP_NumDistPurchases3 + -0.09211947503636 * GRP_NumDistPurchases4 + 
0.23482266977456 * GRP_NumWebPurchases2 + 0.33507315521476 * GRP_NumWebPurchases3 + 
-0.08817191120299 * GRP_NumWebPurchases4 + 0.02374098589478 * GRP_RFMstat2 + -0.23629328969151 
* GRP_RFMstat3 + -0.52724215414655 * GRP_RFMstat4 + -0.11172774703142 * GRP_RMntFrq2 + 
-0.23930023577086 * GRP_RMntFrq3 + -0.17783974029566 * GRP_RMntFrq4 + -0.09948595230391 * 
GRP_Recency2 + -0.15957779348689 * GRP_Recency3 + 0.12430840578537 * GRP_Recency4 ;
774587    +   H11  =    -0.83610777610194 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.83610777610194 + H11 ;
774588    +   H12  =     0.10079183797017 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.10079183797017 + H12 ;
774589    +   H13  =    -1.02827583788856 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.02827583788856 + H13 ;
774590    +   H14  =    -0.61336153955727 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.61336153955727 + H14 ;
774591    +   H15  =      0.2253118259528 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.2253118259528 + H15 ;
774592    +   H16  =     0.92538506927963 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.92538506927963 + H16 ;
774593    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
774594    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
774595    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
774596    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
774597    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
774598    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
774599    +END;
MPRINT(EM_DIAGRAM):   END;
774600    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
774601    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
774602    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
774603    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
774604    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
774605    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
774606    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
774607    +END;
MPRINT(EM_DIAGRAM):   END;
774608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774609    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
774610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774611    +
774612    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
774613    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
774614    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
774615    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
774616    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
774617    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774618    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
774619    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
774620    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
774621    +end;
MPRINT(EM_DIAGRAM):   end;
774622    +else do;
MPRINT(EM_DIAGRAM):   else do;
774623    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
774624    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
774625    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
774626    +   end;
MPRINT(EM_DIAGRAM):   end;
774627    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
774628    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
774629    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
774630    +   end;
MPRINT(EM_DIAGRAM):   end;
774631    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774632    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
774633    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
774634    +   end;
MPRINT(EM_DIAGRAM):   end;
774635    +end;
MPRINT(EM_DIAGRAM):   end;
774636    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
774637    +   P_DepVar1  =    -0.23603747173409 * H11  +     2.21167504352097 * H12
774638    +          +    -0.73919409105284 * H13  +     -1.1148994433356 * H14
774639    +          +    -1.58525957527132 * H15  +    -1.77364534531332 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23603747173409 * H11 + 2.21167504352097 * H12 + 
-0.73919409105284 * H13 + -1.1148994433356 * H14 + -1.58525957527132 * H15 + -1.77364534531332 
* H16 ;
774640    +   P_DepVar1  =    -1.69291771072924 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69291771072924 + P_DepVar1 ;
774641    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
774642    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
774643    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
774644    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
774645    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
774646    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
774647    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
774648    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
774649    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
774650    +END;
MPRINT(EM_DIAGRAM):   END;
774651    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
774652    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
774653    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
774654    +END;
MPRINT(EM_DIAGRAM):   END;
774655    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
774656    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
774657    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
774658    +END;
MPRINT(EM_DIAGRAM):   END;
774659    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
774660    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
774661    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
774662    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
774663    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
774664    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
774665    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
774666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774667    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
774668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
774669    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
774670    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
774671    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
774672    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
774673    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
774674    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
774675    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
774676    +END;
MPRINT(EM_DIAGRAM):   END;
774677    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
774678    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
774679    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
774680    +drop
774681    +H11
774682    +H12
774683    +H13
774684    +H14
774685    +H15
774686    +H16
774687    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
774688    +* Renaming variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural23;
774689    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774690    +* Renaming Posterior variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural23;
774691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774692    +drop Neural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar1;
774693    +Neural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar1 = P_DepVar1;
774694    +drop Neural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar0;
774695    +Neural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar0 = P_DepVar0;
774696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774697    +* Renaming _WARN_ variable for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural23;
774698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774699    +length Neural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural23_WARN_ $4;
774700    +drop Neural23_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural23_WARN_;
774701    +Neural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural23_WARN_ = _WARN_;
774702    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774703    +* Ensmbl3: Scoring Code of model 9 of 9;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 9 of 9;
774704    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774706    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
774707    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
774708    +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
774709    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
774710    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
774711    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
774712    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
774713    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
774714    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
774715    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
774716    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
774717    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
774718    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
774719    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
774720    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
774721    +LENGTH _WARN_ $4
774722    +      F_DepVar  $ 12
774723    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
774724    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
774725    +
774726    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
774727    +
774728    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
774729    +
774730    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
774731    +
774732    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
774733    +
774734    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
774735    +
774736    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
774737    +
774738    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
774739    +
774740    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
774741    +
774742    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
774743    +
774744    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
774745    +
774746    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
774747    +
774748    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
774749    +
774750    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
774751    +
774752    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
774753    +
774754    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
774755    +
774756    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
774757    +
774758    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
774759    +
774760    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
774761    +
774762    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
774763    +
774764    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
774765    +
774766    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
774767    +
774768    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
774769    +
774770    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
774771    +
774772    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
774773    +
774774    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
774775    +
774776    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
774777    +
774778    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
774779    +
774780    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
774781    +
774782    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
774783    +
774784    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
774785    +
774786    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
774787    +
774788    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
774789    +
774790    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
774791    +
774792    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
774793    +
774794    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
774795    +
774796    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
774797    +
774798    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
774799    +
774800    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
774801    +
774802    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
774803    +
774804    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
774805    +
774806    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
774807    +
774808    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
774809    +
774810    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
774811    +
774812    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
774813    +
774814    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
774815    +
774816    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
774817    +
774818    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
774819    +
774820    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
774821    +
774822    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
774823    +
774824    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
774825    +
774826    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
774827    +
774828    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
774829    +
774830    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
774831    +
774832    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
774833    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
774834    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
774835    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
774836    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774837    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774838    +end;
MPRINT(EM_DIAGRAM):   end;
774839    +else do;
MPRINT(EM_DIAGRAM):   else do;
774840    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774841    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
774842    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774843    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
774844    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
774845    +   end;
MPRINT(EM_DIAGRAM):   end;
774846    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
774847    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
774848    +   end;
MPRINT(EM_DIAGRAM):   end;
774849    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774850    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
774851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774853    +   end;
MPRINT(EM_DIAGRAM):   end;
774854    +end;
MPRINT(EM_DIAGRAM):   end;
774855    +
774856    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
774857    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
774858    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
774859    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
774860    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
774861    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
774862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774864    +end;
MPRINT(EM_DIAGRAM):   end;
774865    +else do;
MPRINT(EM_DIAGRAM):   else do;
774866    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774867    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
774868    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774869    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
774870    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
774871    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
774872    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
774873    +   end;
MPRINT(EM_DIAGRAM):   end;
774874    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
774875    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
774876    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
774877    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
774878    +   end;
MPRINT(EM_DIAGRAM):   end;
774879    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774880    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
774881    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
774882    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
774883    +   end;
MPRINT(EM_DIAGRAM):   end;
774884    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774885    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
774886    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
774887    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
774888    +   end;
MPRINT(EM_DIAGRAM):   end;
774889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774890    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
774891    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
774892    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
774893    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774894    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774895    +   end;
MPRINT(EM_DIAGRAM):   end;
774896    +end;
MPRINT(EM_DIAGRAM):   end;
774897    +
774898    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
774899    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
774900    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
774901    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
774902    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
774903    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
774904    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774906    +end;
MPRINT(EM_DIAGRAM):   end;
774907    +else do;
MPRINT(EM_DIAGRAM):   else do;
774908    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774909    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
774910    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774911    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
774912    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
774913    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
774914    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
774915    +   end;
MPRINT(EM_DIAGRAM):   end;
774916    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774917    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
774918    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
774919    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
774920    +   end;
MPRINT(EM_DIAGRAM):   end;
774921    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
774922    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
774923    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
774924    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
774925    +   end;
MPRINT(EM_DIAGRAM):   end;
774926    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774927    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
774928    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
774929    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
774930    +   end;
MPRINT(EM_DIAGRAM):   end;
774931    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774932    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
774933    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
774934    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
774935    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774936    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774937    +   end;
MPRINT(EM_DIAGRAM):   end;
774938    +end;
MPRINT(EM_DIAGRAM):   end;
774939    +
774940    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
774941    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
774942    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
774943    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
774944    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
774945    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
774946    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774947    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774948    +end;
MPRINT(EM_DIAGRAM):   end;
774949    +else do;
MPRINT(EM_DIAGRAM):   else do;
774950    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774951    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
774952    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774953    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774954    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
774955    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
774956    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
774957    +   end;
MPRINT(EM_DIAGRAM):   end;
774958    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
774959    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
774960    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
774961    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
774962    +   end;
MPRINT(EM_DIAGRAM):   end;
774963    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
774964    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
774965    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
774966    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
774967    +   end;
MPRINT(EM_DIAGRAM):   end;
774968    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
774969    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
774970    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
774971    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
774972    +   end;
MPRINT(EM_DIAGRAM):   end;
774973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
774974    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
774975    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
774976    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
774977    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
774978    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774979    +   end;
MPRINT(EM_DIAGRAM):   end;
774980    +end;
MPRINT(EM_DIAGRAM):   end;
774981    +
774982    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
774983    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
774984    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
774985    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
774986    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
774987    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
774988    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
774989    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
774990    +end;
MPRINT(EM_DIAGRAM):   end;
774991    +else do;
MPRINT(EM_DIAGRAM):   else do;
774992    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
774993    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
774994    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
774995    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
774996    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
774997    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
774998    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
774999    +   end;
MPRINT(EM_DIAGRAM):   end;
775000    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775001    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
775002    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
775003    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
775004    +   end;
MPRINT(EM_DIAGRAM):   end;
775005    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775006    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
775007    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
775008    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
775009    +   end;
MPRINT(EM_DIAGRAM):   end;
775010    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775011    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
775012    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
775013    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
775014    +   end;
MPRINT(EM_DIAGRAM):   end;
775015    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775016    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
775017    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
775018    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
775019    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775020    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775021    +   end;
MPRINT(EM_DIAGRAM):   end;
775022    +end;
MPRINT(EM_DIAGRAM):   end;
775023    +
775024    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
775025    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
775026    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
775027    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
775028    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
775029    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
775030    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775031    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775032    +end;
MPRINT(EM_DIAGRAM):   end;
775033    +else do;
MPRINT(EM_DIAGRAM):   else do;
775034    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775035    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
775036    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775037    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
775038    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
775039    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
775040    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
775041    +   end;
MPRINT(EM_DIAGRAM):   end;
775042    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775043    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
775044    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
775045    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
775046    +   end;
MPRINT(EM_DIAGRAM):   end;
775047    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775048    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
775049    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
775050    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
775051    +   end;
MPRINT(EM_DIAGRAM):   end;
775052    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775053    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
775054    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
775055    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
775056    +   end;
MPRINT(EM_DIAGRAM):   end;
775057    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775058    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
775059    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
775060    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
775061    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775062    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775063    +   end;
MPRINT(EM_DIAGRAM):   end;
775064    +end;
MPRINT(EM_DIAGRAM):   end;
775065    +
775066    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
775067    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
775068    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
775069    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
775070    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
775071    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
775072    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775073    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775074    +end;
MPRINT(EM_DIAGRAM):   end;
775075    +else do;
MPRINT(EM_DIAGRAM):   else do;
775076    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775077    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
775078    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775079    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
775080    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
775081    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
775082    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
775083    +   end;
MPRINT(EM_DIAGRAM):   end;
775084    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775085    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
775086    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
775087    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
775088    +   end;
MPRINT(EM_DIAGRAM):   end;
775089    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775090    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
775091    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
775092    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
775093    +   end;
MPRINT(EM_DIAGRAM):   end;
775094    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775095    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
775096    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
775097    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
775098    +   end;
MPRINT(EM_DIAGRAM):   end;
775099    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775100    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
775101    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
775102    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
775103    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775104    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775105    +   end;
MPRINT(EM_DIAGRAM):   end;
775106    +end;
MPRINT(EM_DIAGRAM):   end;
775107    +
775108    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
775109    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
775110    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
775111    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
775112    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
775113    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
775114    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775115    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775116    +end;
MPRINT(EM_DIAGRAM):   end;
775117    +else do;
MPRINT(EM_DIAGRAM):   else do;
775118    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775119    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
775120    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775121    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
775122    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
775123    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
775124    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
775125    +   end;
MPRINT(EM_DIAGRAM):   end;
775126    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775127    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
775128    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
775129    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
775130    +   end;
MPRINT(EM_DIAGRAM):   end;
775131    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775132    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
775133    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
775134    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
775135    +   end;
MPRINT(EM_DIAGRAM):   end;
775136    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775137    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
775138    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
775139    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
775140    +   end;
MPRINT(EM_DIAGRAM):   end;
775141    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775142    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
775143    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
775144    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
775145    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775146    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775147    +   end;
MPRINT(EM_DIAGRAM):   end;
775148    +end;
MPRINT(EM_DIAGRAM):   end;
775149    +
775150    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
775151    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
775152    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
775153    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
775154    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
775155    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775156    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775157    +end;
MPRINT(EM_DIAGRAM):   end;
775158    +else do;
MPRINT(EM_DIAGRAM):   else do;
775159    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775160    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
775161    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775162    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
775163    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
775164    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
775165    +   end;
MPRINT(EM_DIAGRAM):   end;
775166    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775167    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
775168    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
775169    +   end;
MPRINT(EM_DIAGRAM):   end;
775170    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775171    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
775172    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
775173    +   end;
MPRINT(EM_DIAGRAM):   end;
775174    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775175    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
775176    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
775177    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775178    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775179    +   end;
MPRINT(EM_DIAGRAM):   end;
775180    +end;
MPRINT(EM_DIAGRAM):   end;
775181    +
775182    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
775183    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
775184    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
775185    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
775186    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
775187    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
775188    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775189    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775190    +end;
MPRINT(EM_DIAGRAM):   end;
775191    +else do;
MPRINT(EM_DIAGRAM):   else do;
775192    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775193    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
775194    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775195    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
775196    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
775197    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
775198    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
775199    +   end;
MPRINT(EM_DIAGRAM):   end;
775200    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775201    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
775202    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
775203    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
775204    +   end;
MPRINT(EM_DIAGRAM):   end;
775205    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775206    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
775207    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
775208    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
775209    +   end;
MPRINT(EM_DIAGRAM):   end;
775210    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
775211    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
775212    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
775213    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
775214    +   end;
MPRINT(EM_DIAGRAM):   end;
775215    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775216    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
775217    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
775218    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
775219    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775220    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775221    +   end;
MPRINT(EM_DIAGRAM):   end;
775222    +end;
MPRINT(EM_DIAGRAM):   end;
775223    +
775224    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
775225    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
775226    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
775227    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
775228    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
775229    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
775230    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775231    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775232    +end;
MPRINT(EM_DIAGRAM):   end;
775233    +else do;
MPRINT(EM_DIAGRAM):   else do;
775234    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775235    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
775236    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775237    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
775238    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
775239    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
775240    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
775241    +   end;
MPRINT(EM_DIAGRAM):   end;
775242    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775243    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
775244    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
775245    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
775246    +   end;
MPRINT(EM_DIAGRAM):   end;
775247    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775248    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
775249    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
775250    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
775251    +   end;
MPRINT(EM_DIAGRAM):   end;
775252    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775253    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
775254    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
775255    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
775256    +   end;
MPRINT(EM_DIAGRAM):   end;
775257    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775258    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
775259    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
775260    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
775261    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775262    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775263    +   end;
MPRINT(EM_DIAGRAM):   end;
775264    +end;
MPRINT(EM_DIAGRAM):   end;
775265    +
775266    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
775267    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
775268    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
775269    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
775270    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
775271    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
775272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775274    +end;
MPRINT(EM_DIAGRAM):   end;
775275    +else do;
MPRINT(EM_DIAGRAM):   else do;
775276    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775277    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
775278    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775279    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
775280    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
775281    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
775282    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
775283    +   end;
MPRINT(EM_DIAGRAM):   end;
775284    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
775285    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
775286    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
775287    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
775288    +   end;
MPRINT(EM_DIAGRAM):   end;
775289    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775290    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
775291    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
775292    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
775293    +   end;
MPRINT(EM_DIAGRAM):   end;
775294    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775295    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
775296    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
775297    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
775298    +   end;
MPRINT(EM_DIAGRAM):   end;
775299    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775300    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
775301    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
775302    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
775303    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775304    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775305    +   end;
MPRINT(EM_DIAGRAM):   end;
775306    +end;
MPRINT(EM_DIAGRAM):   end;
775307    +
775308    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
775309    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
775310    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
775311    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
775312    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
775313    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
775314    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775315    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775316    +end;
MPRINT(EM_DIAGRAM):   end;
775317    +else do;
MPRINT(EM_DIAGRAM):   else do;
775318    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775319    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
775320    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775321    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
775322    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
775323    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
775324    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
775325    +   end;
MPRINT(EM_DIAGRAM):   end;
775326    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
775327    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
775328    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
775329    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
775330    +   end;
MPRINT(EM_DIAGRAM):   end;
775331    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775332    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
775333    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
775334    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
775335    +   end;
MPRINT(EM_DIAGRAM):   end;
775336    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775337    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
775338    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
775339    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
775340    +   end;
MPRINT(EM_DIAGRAM):   end;
775341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775342    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
775343    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
775344    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
775345    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775346    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775347    +   end;
MPRINT(EM_DIAGRAM):   end;
775348    +end;
MPRINT(EM_DIAGRAM):   end;
775349    +
775350    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
775351    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
775352    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
775353    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
775354    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
775355    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
775356    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
775357    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775358    +end;
MPRINT(EM_DIAGRAM):   end;
775359    +else do;
MPRINT(EM_DIAGRAM):   else do;
775360    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
775361    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
775362    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775363    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
775364    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
775365    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
775366    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
775367    +   end;
MPRINT(EM_DIAGRAM):   end;
775368    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
775369    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
775370    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
775371    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
775372    +   end;
MPRINT(EM_DIAGRAM):   end;
775373    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
775374    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
775375    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
775376    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
775377    +   end;
MPRINT(EM_DIAGRAM):   end;
775378    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
775379    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
775380    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
775381    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
775382    +   end;
MPRINT(EM_DIAGRAM):   end;
775383    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775384    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
775385    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
775386    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
775387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
775388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
775389    +   end;
MPRINT(EM_DIAGRAM):   end;
775390    +end;
MPRINT(EM_DIAGRAM):   end;
775391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775392    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
775393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775394    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775395    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
775396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775397    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
775398    +   H11  =     0.04711628818085 * GRP_AcceptedCmp52  +    -0.13027365748107 *
775399    +        GRP_Frq2  +    -0.04632677563882 * GRP_Frq3  +    -0.08320341313947 *
775400    +        GRP_Frq4  +     0.15407011801643 * GRP_Income2
775401    +          +    -0.10383560943317 * GRP_Income3  +    -0.40582360882321 *
775402    +        GRP_Income4  +    -0.00866872751194 * GRP_Mnt2
775403    +          +     0.03835423241766 * GRP_Mnt3  +     0.10111653307734 * GRP_Mnt4
775404    +          +     0.27649544705807 * GRP_MntFishProducts2
775405    +          +     0.03806617200527 * GRP_MntFishProducts3
775406    +          +    -0.14924458232763 * GRP_MntFishProducts4
775407    +          +    -0.61470593668196 * GRP_MntGoldProds2
775408    +          +      0.3229990608995 * GRP_MntGoldProds3
775409    +          +    -0.38604519701302 * GRP_MntGoldProds4
775410    +          +    -0.16788745104812 * GRP_MntMeatProducts2
775411    +          +    -0.02411102582134 * GRP_MntMeatProducts3
775412    +          +     0.20999119459991 * GRP_MntMeatProducts4
775413    +          +     0.00013023256115 * GRP_MntWines2  +    -0.19154805414183 *
775414    +        GRP_MntWines3  +     0.10487287927665 * GRP_MntWines4
775415    +          +    -0.18385399575632 * GRP_NumCatalogPurchases3
775416    +          +     0.26139870297501 * GRP_NumCatalogPurchases4
775417    +          +    -0.45516424216634 * GRP_NumDistPurchases2
775418    +          +    -0.02821228922166 * GRP_NumDistPurchases3
775419    +          +     -0.0277463007541 * GRP_NumDistPurchases4
775420    +          +    -0.20089085216463 * GRP_NumWebPurchases2
775421    +          +     0.25653821989992 * GRP_NumWebPurchases3
775422    +          +    -0.28787845842774 * GRP_NumWebPurchases4
775423    +          +    -0.55935702240721 * GRP_RFMstat2  +     0.06115264011229 *
775424    +        GRP_RFMstat3  +     0.23395576453228 * GRP_RFMstat4
775425    +          +     0.14575536355828 * GRP_RMntFrq2  +    -0.17534689953321 *
775426    +        GRP_RMntFrq3  +     0.02136609987453 * GRP_RMntFrq4
775427    +          +       0.198287170399 * GRP_Recency2  +     0.20837384647001 *
775428    +        GRP_Recency3  +    -0.03491976754069 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.04711628818085 * GRP_AcceptedCmp52 + -0.13027365748107 * 
GRP_Frq2 + -0.04632677563882 * GRP_Frq3 + -0.08320341313947 * GRP_Frq4 + 0.15407011801643 * 
GRP_Income2 + -0.10383560943317 * GRP_Income3 + -0.40582360882321 * GRP_Income4 + 
-0.00866872751194 * GRP_Mnt2 + 0.03835423241766 * GRP_Mnt3 + 0.10111653307734 * GRP_Mnt4 + 
0.27649544705807 * GRP_MntFishProducts2 + 0.03806617200527 * GRP_MntFishProducts3 + 
-0.14924458232763 * GRP_MntFishProducts4 + -0.61470593668196 * GRP_MntGoldProds2 + 
0.3229990608995 * GRP_MntGoldProds3 + -0.38604519701302 * GRP_MntGoldProds4 + 
-0.16788745104812 * GRP_MntMeatProducts2 + -0.02411102582134 * GRP_MntMeatProducts3 + 
0.20999119459991 * GRP_MntMeatProducts4 + 0.00013023256115 * GRP_MntWines2 + -0.19154805414183 
* GRP_MntWines3 + 0.10487287927665 * GRP_MntWines4 + -0.18385399575632 * 
GRP_NumCatalogPurchases3 + 0.26139870297501 * GRP_NumCatalogPurchases4 + -0.45516424216634 * 
GRP_NumDistPurchases2 + -0.02821228922166 * GRP_NumDistPurchases3 + -0.0277463007541 * 
GRP_NumDistPurchases4 + -0.20089085216463 * GRP_NumWebPurchases2 + 0.25653821989992 * 
GRP_NumWebPurchases3 + -0.28787845842774 * GRP_NumWebPurchases4 + -0.55935702240721 * 
GRP_RFMstat2 + 0.06115264011229 * GRP_RFMstat3 + 0.23395576453228 * GRP_RFMstat4 + 
0.14575536355828 * GRP_RMntFrq2 + -0.17534689953321 * GRP_RMntFrq3 + 0.02136609987453 * 
GRP_RMntFrq4 + 0.198287170399 * GRP_Recency2 + 0.20837384647001 * GRP_Recency3 + 
-0.03491976754069 * GRP_Recency4 ;
775429    +   H12  =     0.27125178346152 * GRP_AcceptedCmp52  +     0.39367144184074 *
775430    +        GRP_Frq2  +     0.47183329287273 * GRP_Frq3  +     0.06075107930837 *
775431    +        GRP_Frq4  +     0.77794746315957 * GRP_Income2
775432    +          +     0.86453663986099 * GRP_Income3  +    -0.24014105964843 *
775433    +        GRP_Income4  +     0.18332391092776 * GRP_Mnt2
775434    +          +    -0.05132712807258 * GRP_Mnt3  +    -0.12150106989075 * GRP_Mnt4
775435    +          +     0.37088160406221 * GRP_MntFishProducts2
775436    +          +     0.16511263167544 * GRP_MntFishProducts3
775437    +          +    -0.25696902575665 * GRP_MntFishProducts4
775438    +          +    -0.25511966497767 * GRP_MntGoldProds2
775439    +          +     0.10357155941955 * GRP_MntGoldProds3
775440    +          +    -0.04921872016349 * GRP_MntGoldProds4
775441    +          +    -0.11063359070508 * GRP_MntMeatProducts2
775442    +          +    -0.08379163747059 * GRP_MntMeatProducts3
775443    +          +     0.18893182644469 * GRP_MntMeatProducts4
775444    +          +     0.41618237258351 * GRP_MntWines2  +    -0.00683285266538 *
775445    +        GRP_MntWines3  +    -0.12347598430406 * GRP_MntWines4
775446    +          +    -0.28043452635336 * GRP_NumCatalogPurchases3
775447    +          +     0.19010019257459 * GRP_NumCatalogPurchases4
775448    +          +    -0.29362124038326 * GRP_NumDistPurchases2
775449    +          +    -0.03304017306295 * GRP_NumDistPurchases3
775450    +          +    -0.11165609534026 * GRP_NumDistPurchases4
775451    +          +      0.1536111955491 * GRP_NumWebPurchases2
775452    +          +     0.14856361677069 * GRP_NumWebPurchases3
775453    +          +      0.0385282170017 * GRP_NumWebPurchases4
775454    +          +    -0.42245587008719 * GRP_RFMstat2  +     0.15962543914936 *
775455    +        GRP_RFMstat3  +    -0.39342058803069 * GRP_RFMstat4
775456    +          +    -0.28590254800789 * GRP_RMntFrq2  +    -0.21564130946407 *
775457    +        GRP_RMntFrq3  +    -0.22044591524393 * GRP_RMntFrq4
775458    +          +      1.1127849486131 * GRP_Recency2  +     0.37451568388848 *
775459    +        GRP_Recency3  +    -0.33640572843758 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.27125178346152 * GRP_AcceptedCmp52 + 0.39367144184074 * GRP_Frq2 
+ 0.47183329287273 * GRP_Frq3 + 0.06075107930837 * GRP_Frq4 + 0.77794746315957 * GRP_Income2 + 
0.86453663986099 * GRP_Income3 + -0.24014105964843 * GRP_Income4 + 0.18332391092776 * GRP_Mnt2 
+ -0.05132712807258 * GRP_Mnt3 + -0.12150106989075 * GRP_Mnt4 + 0.37088160406221 * 
GRP_MntFishProducts2 + 0.16511263167544 * GRP_MntFishProducts3 + -0.25696902575665 * 
GRP_MntFishProducts4 + -0.25511966497767 * GRP_MntGoldProds2 + 0.10357155941955 * 
GRP_MntGoldProds3 + -0.04921872016349 * GRP_MntGoldProds4 + -0.11063359070508 * 
GRP_MntMeatProducts2 + -0.08379163747059 * GRP_MntMeatProducts3 + 0.18893182644469 * 
GRP_MntMeatProducts4 + 0.41618237258351 * GRP_MntWines2 + -0.00683285266538 * GRP_MntWines3 + 
-0.12347598430406 * GRP_MntWines4 + -0.28043452635336 * GRP_NumCatalogPurchases3 + 
0.19010019257459 * GRP_NumCatalogPurchases4 + -0.29362124038326 * GRP_NumDistPurchases2 + 
-0.03304017306295 * GRP_NumDistPurchases3 + -0.11165609534026 * GRP_NumDistPurchases4 + 
0.1536111955491 * GRP_NumWebPurchases2 + 0.14856361677069 * GRP_NumWebPurchases3 + 
0.0385282170017 * GRP_NumWebPurchases4 + -0.42245587008719 * GRP_RFMstat2 + 0.15962543914936 * 
GRP_RFMstat3 + -0.39342058803069 * GRP_RFMstat4 + -0.28590254800789 * GRP_RMntFrq2 + 
-0.21564130946407 * GRP_RMntFrq3 + -0.22044591524393 * GRP_RMntFrq4 + 1.1127849486131 * 
GRP_Recency2 + 0.37451568388848 * GRP_Recency3 + -0.33640572843758 * GRP_Recency4 ;
775460    +   H13  =    -0.00640066603747 * GRP_AcceptedCmp52  +    -0.11333647417979 *
775461    +        GRP_Frq2  +    -0.11647952262542 * GRP_Frq3  +    -0.14006488881524 *
775462    +        GRP_Frq4  +     0.27728124026233 * GRP_Income2
775463    +          +     0.05697521068764 * GRP_Income3  +    -0.37633026358792 *
775464    +        GRP_Income4  +    -0.17440692689662 * GRP_Mnt2
775465    +          +    -0.10036881667196 * GRP_Mnt3  +    -0.13642140412399 * GRP_Mnt4
775466    +          +      0.2081380258467 * GRP_MntFishProducts2
775467    +          +    -0.08668229639505 * GRP_MntFishProducts3
775468    +          +     0.14081019578955 * GRP_MntFishProducts4
775469    +          +    -0.17027561298255 * GRP_MntGoldProds2
775470    +          +    -0.34742776244059 * GRP_MntGoldProds3
775471    +          +     0.12168590176726 * GRP_MntGoldProds4
775472    +          +    -0.05512121591373 * GRP_MntMeatProducts2
775473    +          +    -0.34519642935258 * GRP_MntMeatProducts3
775474    +          +    -0.13168847945689 * GRP_MntMeatProducts4
775475    +          +     0.28193282372353 * GRP_MntWines2  +     0.14946457186192 *
775476    +        GRP_MntWines3  +     0.06804391722409 * GRP_MntWines4
775477    +          +    -0.08346399909028 * GRP_NumCatalogPurchases3
775478    +          +    -0.15880621701951 * GRP_NumCatalogPurchases4
775479    +          +    -0.25528445685452 * GRP_NumDistPurchases2
775480    +          +    -0.10526630829598 * GRP_NumDistPurchases3
775481    +          +    -0.03726952062424 * GRP_NumDistPurchases4
775482    +          +    -0.05938919871449 * GRP_NumWebPurchases2
775483    +          +     0.18366019558751 * GRP_NumWebPurchases3
775484    +          +    -0.19335960904254 * GRP_NumWebPurchases4
775485    +          +     0.15283900648967 * GRP_RFMstat2  +    -0.03738648354517 *
775486    +        GRP_RFMstat3  +      0.0780054343538 * GRP_RFMstat4
775487    +          +     0.08482465227003 * GRP_RMntFrq2  +    -0.04156217601701 *
775488    +        GRP_RMntFrq3  +    -0.27972469674532 * GRP_RMntFrq4
775489    +          +     0.20311018978803 * GRP_Recency2  +     0.02026894035212 *
775490    +        GRP_Recency3  +    -0.22461335805045 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.00640066603747 * GRP_AcceptedCmp52 + -0.11333647417979 * 
GRP_Frq2 + -0.11647952262542 * GRP_Frq3 + -0.14006488881524 * GRP_Frq4 + 0.27728124026233 * 
GRP_Income2 + 0.05697521068764 * GRP_Income3 + -0.37633026358792 * GRP_Income4 + 
-0.17440692689662 * GRP_Mnt2 + -0.10036881667196 * GRP_Mnt3 + -0.13642140412399 * GRP_Mnt4 + 
0.2081380258467 * GRP_MntFishProducts2 + -0.08668229639505 * GRP_MntFishProducts3 + 
0.14081019578955 * GRP_MntFishProducts4 + -0.17027561298255 * GRP_MntGoldProds2 + 
-0.34742776244059 * GRP_MntGoldProds3 + 0.12168590176726 * GRP_MntGoldProds4 + 
-0.05512121591373 * GRP_MntMeatProducts2 + -0.34519642935258 * GRP_MntMeatProducts3 + 
-0.13168847945689 * GRP_MntMeatProducts4 + 0.28193282372353 * GRP_MntWines2 + 0.14946457186192 
* GRP_MntWines3 + 0.06804391722409 * GRP_MntWines4 + -0.08346399909028 * 
GRP_NumCatalogPurchases3 + -0.15880621701951 * GRP_NumCatalogPurchases4 + -0.25528445685452 * 
GRP_NumDistPurchases2 + -0.10526630829598 * GRP_NumDistPurchases3 + -0.03726952062424 * 
GRP_NumDistPurchases4 + -0.05938919871449 * GRP_NumWebPurchases2 + 0.18366019558751 * 
GRP_NumWebPurchases3 + -0.19335960904254 * GRP_NumWebPurchases4 + 0.15283900648967 * 
GRP_RFMstat2 + -0.03738648354517 * GRP_RFMstat3 + 0.0780054343538 * GRP_RFMstat4 + 
0.08482465227003 * GRP_RMntFrq2 + -0.04156217601701 * GRP_RMntFrq3 + -0.27972469674532 * 
GRP_RMntFrq4 + 0.20311018978803 * GRP_Recency2 + 0.02026894035212 * GRP_Recency3 + 
-0.22461335805045 * GRP_Recency4 ;
775491    +   H14  =     0.84759844370999 * GRP_AcceptedCmp52  +    -0.40207108050785 *
775492    +        GRP_Frq2  +    -0.11957926267486 * GRP_Frq3  +     0.39764041522616 *
775493    +        GRP_Frq4  +    -0.21133467357887 * GRP_Income2
775494    +          +    -0.37600727819569 * GRP_Income3  +     0.61191321060217 *
775495    +        GRP_Income4  +    -0.01918945699115 * GRP_Mnt2
775496    +          +    -0.28923187120656 * GRP_Mnt3  +     0.20590552102477 * GRP_Mnt4
775497    +          +     0.03194734131194 * GRP_MntFishProducts2
775498    +          +    -0.08555244396388 * GRP_MntFishProducts3
775499    +          +     -0.1294949057865 * GRP_MntFishProducts4
775500    +          +    -0.28742848639985 * GRP_MntGoldProds2
775501    +          +    -0.00435260781733 * GRP_MntGoldProds3
775502    +          +    -0.12007613875856 * GRP_MntGoldProds4
775503    +          +     0.36325039255643 * GRP_MntMeatProducts2
775504    +          +    -0.08728922471846 * GRP_MntMeatProducts3
775505    +          +    -0.19062123750322 * GRP_MntMeatProducts4
775506    +          +    -0.54694203087226 * GRP_MntWines2  +    -0.63189775838668 *
775507    +        GRP_MntWines3  +      0.3957291463714 * GRP_MntWines4
775508    +          +       0.435944756052 * GRP_NumCatalogPurchases3
775509    +          +      0.2205855993165 * GRP_NumCatalogPurchases4
775510    +          +     0.59192262496927 * GRP_NumDistPurchases2
775511    +          +     0.04008128670209 * GRP_NumDistPurchases3
775512    +          +    -0.00330725734446 * GRP_NumDistPurchases4
775513    +          +     0.18235346155154 * GRP_NumWebPurchases2
775514    +          +     0.06863306934707 * GRP_NumWebPurchases3
775515    +          +     0.06339667504979 * GRP_NumWebPurchases4
775516    +          +     0.09545179117637 * GRP_RFMstat2  +     0.14008923310046 *
775517    +        GRP_RFMstat3  +    -0.26191188327872 * GRP_RFMstat4
775518    +          +    -0.21341781402946 * GRP_RMntFrq2  +    -0.16158721892261 *
775519    +        GRP_RMntFrq3  +    -0.03125612925483 * GRP_RMntFrq4
775520    +          +    -0.57136536034562 * GRP_Recency2  +    -0.28843025104868 *
775521    +        GRP_Recency3  +     0.23682927566038 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84759844370999 * GRP_AcceptedCmp52 + -0.40207108050785 * 
GRP_Frq2 + -0.11957926267486 * GRP_Frq3 + 0.39764041522616 * GRP_Frq4 + -0.21133467357887 * 
GRP_Income2 + -0.37600727819569 * GRP_Income3 + 0.61191321060217 * GRP_Income4 + 
-0.01918945699115 * GRP_Mnt2 + -0.28923187120656 * GRP_Mnt3 + 0.20590552102477 * GRP_Mnt4 + 
0.03194734131194 * GRP_MntFishProducts2 + -0.08555244396388 * GRP_MntFishProducts3 + 
-0.1294949057865 * GRP_MntFishProducts4 + -0.28742848639985 * GRP_MntGoldProds2 + 
-0.00435260781733 * GRP_MntGoldProds3 + -0.12007613875856 * GRP_MntGoldProds4 + 
0.36325039255643 * GRP_MntMeatProducts2 + -0.08728922471846 * GRP_MntMeatProducts3 + 
-0.19062123750322 * GRP_MntMeatProducts4 + -0.54694203087226 * GRP_MntWines2 + 
-0.63189775838668 * GRP_MntWines3 + 0.3957291463714 * GRP_MntWines4 + 0.435944756052 * 
GRP_NumCatalogPurchases3 + 0.2205855993165 * GRP_NumCatalogPurchases4 + 0.59192262496927 * 
GRP_NumDistPurchases2 + 0.04008128670209 * GRP_NumDistPurchases3 + -0.00330725734446 * 
GRP_NumDistPurchases4 + 0.18235346155154 * GRP_NumWebPurchases2 + 0.06863306934707 * 
GRP_NumWebPurchases3 + 0.06339667504979 * GRP_NumWebPurchases4 + 0.09545179117637 * 
GRP_RFMstat2 + 0.14008923310046 * GRP_RFMstat3 + -0.26191188327872 * GRP_RFMstat4 + 
-0.21341781402946 * GRP_RMntFrq2 + -0.16158721892261 * GRP_RMntFrq3 + -0.03125612925483 * 
GRP_RMntFrq4 + -0.57136536034562 * GRP_Recency2 + -0.28843025104868 * GRP_Recency3 + 
0.23682927566038 * GRP_Recency4 ;
775522    +   H15  =      -0.270075163047 * GRP_AcceptedCmp52  +     0.12329750151184 *
775523    +        GRP_Frq2  +    -0.00636074237745 * GRP_Frq3  +     0.06125360704983 *
775524    +        GRP_Frq4  +    -0.02221726738608 * GRP_Income2
775525    +          +     0.02831089386274 * GRP_Income3  +    -0.14245161962732 *
775526    +        GRP_Income4  +    -0.33215929968734 * GRP_Mnt2
775527    +          +    -0.12990224977804 * GRP_Mnt3  +     0.01224047316232 * GRP_Mnt4
775528    +          +     0.43021866757807 * GRP_MntFishProducts2
775529    +          +    -0.27483945374498 * GRP_MntFishProducts3
775530    +          +     0.35053639451726 * GRP_MntFishProducts4
775531    +          +    -0.00509900753344 * GRP_MntGoldProds2
775532    +          +     -0.2114201518265 * GRP_MntGoldProds3
775533    +          +    -0.13970354632794 * GRP_MntGoldProds4
775534    +          +     0.08840789662233 * GRP_MntMeatProducts2
775535    +          +    -0.00365357432837 * GRP_MntMeatProducts3
775536    +          +    -0.17124615615804 * GRP_MntMeatProducts4
775537    +          +     -0.3149461311814 * GRP_MntWines2  +     0.13173264925134 *
775538    +        GRP_MntWines3  +    -0.11604679382146 * GRP_MntWines4
775539    +          +     -0.5316533346484 * GRP_NumCatalogPurchases3
775540    +          +    -0.29157679545376 * GRP_NumCatalogPurchases4
775541    +          +    -0.08055861305066 * GRP_NumDistPurchases2
775542    +          +    -0.08674081531395 * GRP_NumDistPurchases3
775543    +          +    -0.17551921835199 * GRP_NumDistPurchases4
775544    +          +    -0.03222539166367 * GRP_NumWebPurchases2
775545    +          +    -0.13811302108485 * GRP_NumWebPurchases3
775546    +          +     0.06646439445075 * GRP_NumWebPurchases4
775547    +          +    -0.07079122602276 * GRP_RFMstat2  +    -0.39615424117539 *
775548    +        GRP_RFMstat3  +     0.04146636703929 * GRP_RFMstat4
775549    +          +     -0.0853308883886 * GRP_RMntFrq2  +    -0.13702404280363 *
775550    +        GRP_RMntFrq3  +    -0.27355720177265 * GRP_RMntFrq4
775551    +          +     0.33867777321903 * GRP_Recency2  +    -0.09253457902218 *
775552    +        GRP_Recency3  +    -0.05897210090797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = -0.270075163047 * GRP_AcceptedCmp52 + 0.12329750151184 * GRP_Frq2 
+ -0.00636074237745 * GRP_Frq3 + 0.06125360704983 * GRP_Frq4 + -0.02221726738608 * GRP_Income2 
+ 0.02831089386274 * GRP_Income3 + -0.14245161962732 * GRP_Income4 + -0.33215929968734 * 
GRP_Mnt2 + -0.12990224977804 * GRP_Mnt3 + 0.01224047316232 * GRP_Mnt4 + 0.43021866757807 * 
GRP_MntFishProducts2 + -0.27483945374498 * GRP_MntFishProducts3 + 0.35053639451726 * 
GRP_MntFishProducts4 + -0.00509900753344 * GRP_MntGoldProds2 + -0.2114201518265 * 
GRP_MntGoldProds3 + -0.13970354632794 * GRP_MntGoldProds4 + 0.08840789662233 * 
GRP_MntMeatProducts2 + -0.00365357432837 * GRP_MntMeatProducts3 + -0.17124615615804 * 
GRP_MntMeatProducts4 + -0.3149461311814 * GRP_MntWines2 + 0.13173264925134 * GRP_MntWines3 + 
-0.11604679382146 * GRP_MntWines4 + -0.5316533346484 * GRP_NumCatalogPurchases3 + 
-0.29157679545376 * GRP_NumCatalogPurchases4 + -0.08055861305066 * GRP_NumDistPurchases2 + 
-0.08674081531395 * GRP_NumDistPurchases3 + -0.17551921835199 * GRP_NumDistPurchases4 + 
-0.03222539166367 * GRP_NumWebPurchases2 + -0.13811302108485 * GRP_NumWebPurchases3 + 
0.06646439445075 * GRP_NumWebPurchases4 + -0.07079122602276 * GRP_RFMstat2 + -0.39615424117539 
* GRP_RFMstat3 + 0.04146636703929 * GRP_RFMstat4 + -0.0853308883886 * GRP_RMntFrq2 + 
-0.13702404280363 * GRP_RMntFrq3 + -0.27355720177265 * GRP_RMntFrq4 + 0.33867777321903 * 
GRP_Recency2 + -0.09253457902218 * GRP_Recency3 + -0.05897210090797 * GRP_Recency4 ;
775553    +   H16  =    -0.30271284676983 * GRP_AcceptedCmp52  +     0.03117199224725 *
775554    +        GRP_Frq2  +    -0.26799382098604 * GRP_Frq3  +    -0.13070336759958 *
775555    +        GRP_Frq4  +     0.12672160649087 * GRP_Income2
775556    +          +    -0.21150829323326 * GRP_Income3  +    -0.15720750294685 *
775557    +        GRP_Income4  +     0.09905728950306 * GRP_Mnt2
775558    +          +    -0.43923284882193 * GRP_Mnt3  +     0.03431635930451 * GRP_Mnt4
775559    +          +     0.06947673564935 * GRP_MntFishProducts2
775560    +          +     -0.2220161944842 * GRP_MntFishProducts3
775561    +          +      -0.115965454808 * GRP_MntFishProducts4
775562    +          +    -0.01957355844265 * GRP_MntGoldProds2
775563    +          +     0.29129268161925 * GRP_MntGoldProds3
775564    +          +     0.06228256145252 * GRP_MntGoldProds4
775565    +          +    -0.09695386874195 * GRP_MntMeatProducts2
775566    +          +    -0.15864685727366 * GRP_MntMeatProducts3
775567    +          +    -0.49032797729016 * GRP_MntMeatProducts4
775568    +          +     0.37470089287985 * GRP_MntWines2  +     0.36115743239288 *
775569    +        GRP_MntWines3  +    -0.34359138002961 * GRP_MntWines4
775570    +          +    -0.19461285131827 * GRP_NumCatalogPurchases3
775571    +          +     0.04513674368784 * GRP_NumCatalogPurchases4
775572    +          +    -0.03507865895925 * GRP_NumDistPurchases2
775573    +          +     0.09915485245283 * GRP_NumDistPurchases3
775574    +          +    -0.33100664342194 * GRP_NumDistPurchases4
775575    +          +     0.13724527126482 * GRP_NumWebPurchases2
775576    +          +    -0.02356592443136 * GRP_NumWebPurchases3
775577    +          +      0.2573229592217 * GRP_NumWebPurchases4
775578    +          +     0.05747809528111 * GRP_RFMstat2  +     0.09535983705402 *
775579    +        GRP_RFMstat3  +    -0.10249907985488 * GRP_RFMstat4
775580    +          +     0.08979004612339 * GRP_RMntFrq2  +     0.21152228987437 *
775581    +        GRP_RMntFrq3  +     0.01345639991803 * GRP_RMntFrq4
775582    +          +     0.52890036744064 * GRP_Recency2  +    -0.04507648861408 *
775583    +        GRP_Recency3  +    -0.03669931738284 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = -0.30271284676983 * GRP_AcceptedCmp52 + 0.03117199224725 * 
GRP_Frq2 + -0.26799382098604 * GRP_Frq3 + -0.13070336759958 * GRP_Frq4 + 0.12672160649087 * 
GRP_Income2 + -0.21150829323326 * GRP_Income3 + -0.15720750294685 * GRP_Income4 + 
0.09905728950306 * GRP_Mnt2 + -0.43923284882193 * GRP_Mnt3 + 0.03431635930451 * GRP_Mnt4 + 
0.06947673564935 * GRP_MntFishProducts2 + -0.2220161944842 * GRP_MntFishProducts3 + 
-0.115965454808 * GRP_MntFishProducts4 + -0.01957355844265 * GRP_MntGoldProds2 + 
0.29129268161925 * GRP_MntGoldProds3 + 0.06228256145252 * GRP_MntGoldProds4 + 
-0.09695386874195 * GRP_MntMeatProducts2 + -0.15864685727366 * GRP_MntMeatProducts3 + 
-0.49032797729016 * GRP_MntMeatProducts4 + 0.37470089287985 * GRP_MntWines2 + 0.36115743239288 
* GRP_MntWines3 + -0.34359138002961 * GRP_MntWines4 + -0.19461285131827 * 
GRP_NumCatalogPurchases3 + 0.04513674368784 * GRP_NumCatalogPurchases4 + -0.03507865895925 * 
GRP_NumDistPurchases2 + 0.09915485245283 * GRP_NumDistPurchases3 + -0.33100664342194 * 
GRP_NumDistPurchases4 + 0.13724527126482 * GRP_NumWebPurchases2 + -0.02356592443136 * 
GRP_NumWebPurchases3 + 0.2573229592217 * GRP_NumWebPurchases4 + 0.05747809528111 * 
GRP_RFMstat2 + 0.09535983705402 * GRP_RFMstat3 + -0.10249907985488 * GRP_RFMstat4 + 
0.08979004612339 * GRP_RMntFrq2 + 0.21152228987437 * GRP_RMntFrq3 + 0.01345639991803 * 
GRP_RMntFrq4 + 0.52890036744064 * GRP_Recency2 + -0.04507648861408 * GRP_Recency3 + 
-0.03669931738284 * GRP_Recency4 ;
775584    +   H17  =    -0.24394616675587 * GRP_AcceptedCmp52  +     0.28964856194613 *
775585    +        GRP_Frq2  +    -0.08289613695725 * GRP_Frq3  +     0.21998897095553 *
775586    +        GRP_Frq4  +     0.18107497199311 * GRP_Income2
775587    +          +      0.1107558510921 * GRP_Income3  +    -0.36116869826735 *
775588    +        GRP_Income4  +     0.02424010270897 * GRP_Mnt2
775589    +          +    -0.15852275336702 * GRP_Mnt3  +    -0.35418266455505 * GRP_Mnt4
775590    +          +     0.20869043565167 * GRP_MntFishProducts2
775591    +          +     0.10833559681607 * GRP_MntFishProducts3
775592    +          +    -0.10347776442631 * GRP_MntFishProducts4
775593    +          +    -0.32065428276511 * GRP_MntGoldProds2
775594    +          +    -0.43926899233496 * GRP_MntGoldProds3
775595    +          +    -0.10606506374615 * GRP_MntGoldProds4
775596    +          +    -0.31984276315874 * GRP_MntMeatProducts2
775597    +          +    -0.10334364706061 * GRP_MntMeatProducts3
775598    +          +    -0.00884354140504 * GRP_MntMeatProducts4
775599    +          +     0.23600639890053 * GRP_MntWines2  +    -0.29934386684584 *
775600    +        GRP_MntWines3  +     0.16274179248724 * GRP_MntWines4
775601    +          +    -0.32950762391869 * GRP_NumCatalogPurchases3
775602    +          +     0.01712392556947 * GRP_NumCatalogPurchases4
775603    +          +    -0.34220067420996 * GRP_NumDistPurchases2
775604    +          +    -0.15410597036596 * GRP_NumDistPurchases3
775605    +          +    -0.05769918195545 * GRP_NumDistPurchases4
775606    +          +    -0.03929570019271 * GRP_NumWebPurchases2
775607    +          +    -0.30647973770852 * GRP_NumWebPurchases3
775608    +          +    -0.09809448516146 * GRP_NumWebPurchases4
775609    +          +     0.02199652262588 * GRP_RFMstat2  +    -0.18677191406874 *
775610    +        GRP_RFMstat3  +    -0.06022520470141 * GRP_RFMstat4
775611    +          +    -0.14995521360575 * GRP_RMntFrq2  +     0.00512207268691 *
775612    +        GRP_RMntFrq3  +    -0.58308661640325 * GRP_RMntFrq4
775613    +          +     0.09125052186965 * GRP_Recency2  +    -0.01605996390173 *
775614    +        GRP_Recency3  +     0.09260166797685 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = -0.24394616675587 * GRP_AcceptedCmp52 + 0.28964856194613 * 
GRP_Frq2 + -0.08289613695725 * GRP_Frq3 + 0.21998897095553 * GRP_Frq4 + 0.18107497199311 * 
GRP_Income2 + 0.1107558510921 * GRP_Income3 + -0.36116869826735 * GRP_Income4 + 
0.02424010270897 * GRP_Mnt2 + -0.15852275336702 * GRP_Mnt3 + -0.35418266455505 * GRP_Mnt4 + 
0.20869043565167 * GRP_MntFishProducts2 + 0.10833559681607 * GRP_MntFishProducts3 + 
-0.10347776442631 * GRP_MntFishProducts4 + -0.32065428276511 * GRP_MntGoldProds2 + 
-0.43926899233496 * GRP_MntGoldProds3 + -0.10606506374615 * GRP_MntGoldProds4 + 
-0.31984276315874 * GRP_MntMeatProducts2 + -0.10334364706061 * GRP_MntMeatProducts3 + 
-0.00884354140504 * GRP_MntMeatProducts4 + 0.23600639890053 * GRP_MntWines2 + 
-0.29934386684584 * GRP_MntWines3 + 0.16274179248724 * GRP_MntWines4 + -0.32950762391869 * 
GRP_NumCatalogPurchases3 + 0.01712392556947 * GRP_NumCatalogPurchases4 + -0.34220067420996 * 
GRP_NumDistPurchases2 + -0.15410597036596 * GRP_NumDistPurchases3 + -0.05769918195545 * 
GRP_NumDistPurchases4 + -0.03929570019271 * GRP_NumWebPurchases2 + -0.30647973770852 * 
GRP_NumWebPurchases3 + -0.09809448516146 * GRP_NumWebPurchases4 + 0.02199652262588 * 
GRP_RFMstat2 + -0.18677191406874 * GRP_RFMstat3 + -0.06022520470141 * GRP_RFMstat4 + 
-0.14995521360575 * GRP_RMntFrq2 + 0.00512207268691 * GRP_RMntFrq3 + -0.58308661640325 * 
GRP_RMntFrq4 + 0.09125052186965 * GRP_Recency2 + -0.01605996390173 * GRP_Recency3 + 
0.09260166797685 * GRP_Recency4 ;
775615    +   H11  =     1.47536864687001 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.47536864687001 + H11 ;
775616    +   H12  =    -0.03796823184366 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03796823184366 + H12 ;
775617    +   H13  =     0.20545721254095 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.20545721254095 + H13 ;
775618    +   H14  =     0.82513531048516 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82513531048516 + H14 ;
775619    +   H15  =    -0.86531822153621 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.86531822153621 + H15 ;
775620    +   H16  =    -1.63588460642984 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.63588460642984 + H16 ;
775621    +   H17  =     1.27216054538203 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.27216054538203 + H17 ;
775622    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
775623    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
775624    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
775625    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
775626    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
775627    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
775628    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
775629    +END;
MPRINT(EM_DIAGRAM):   END;
775630    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
775631    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
775632    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
775633    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
775634    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
775635    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
775636    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
775637    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
775638    +END;
MPRINT(EM_DIAGRAM):   END;
775639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775640    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
775641    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775642    +
775643    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
775644    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
775645    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
775646    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
775647    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
775648    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
775649    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
775650    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
775651    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
775652    +end;
MPRINT(EM_DIAGRAM):   end;
775653    +else do;
MPRINT(EM_DIAGRAM):   else do;
775654    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
775655    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
775656    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
775657    +   end;
MPRINT(EM_DIAGRAM):   end;
775658    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
775659    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
775660    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
775661    +   end;
MPRINT(EM_DIAGRAM):   end;
775662    +   else do;
MPRINT(EM_DIAGRAM):   else do;
775663    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
775664    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
775665    +   end;
MPRINT(EM_DIAGRAM):   end;
775666    +end;
MPRINT(EM_DIAGRAM):   end;
775667    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
775668    +   P_DepVar1  =     1.96524348977009 * H11  +     1.80437226064293 * H12
775669    +          +     0.26614818926491 * H13  +     -2.3095876381555 * H14
775670    +          +     0.55402099095215 * H15  +     1.54522449582288 * H16
775671    +          +     1.13845442289883 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.96524348977009 * H11 + 1.80437226064293 * H12 + 
0.26614818926491 * H13 + -2.3095876381555 * H14 + 0.55402099095215 * H15 + 1.54522449582288 * 
H16 + 1.13845442289883 * H17 ;
775672    +   P_DepVar1  =    -1.53783202740594 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53783202740594 + P_DepVar1 ;
775673    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
775674    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
775675    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
775676    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
775677    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
775678    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
775679    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
775680    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
775681    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
775682    +END;
MPRINT(EM_DIAGRAM):   END;
775683    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
775684    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
775685    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
775686    +END;
MPRINT(EM_DIAGRAM):   END;
775687    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
775688    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
775689    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
775690    +END;
MPRINT(EM_DIAGRAM):   END;
775691    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
775692    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
775693    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
775694    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
775695    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
775696    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
775697    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
775698    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775699    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
775700    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
775701    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
775702    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
775703    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
775704    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
775705    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
775706    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
775707    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
775708    +END;
MPRINT(EM_DIAGRAM):   END;
775709    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
775710    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
775711    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
775712    +drop
775713    +H11
775714    +H12
775715    +H13
775716    +H14
775717    +H15
775718    +H16
775719    +H17
775720    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
775721    +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
775722    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775723    +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
775724    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775725    +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
775726    +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
775727    +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
775728    +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
775729    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775730    +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
775731    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775732    +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
775733    +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
775734    +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
775735    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775736    +* Ensmbl3: Average Posteriors of 9 models;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Average Posteriors of 9 models;
775737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775738    +P_DepVar1 = (
775739    +Neural20_P_DepVar1 +
775740    +Neural19_P_DepVar1 +
775741    +Neural5_P_DepVar1 +
775742    +Neural21_P_DepVar1 +
775743    +Tree3_P_DepVar1 +
775744    +Reg3_P_DepVar1 +
775745    +Neural22_P_DepVar1 +
775746    +Neural23_P_DepVar1 +
775747    +Neural18_P_DepVar1
775748    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural20_P_DepVar1 + Neural19_P_DepVar1 + 
Neural5_P_DepVar1 + Neural21_P_DepVar1 + Tree3_P_DepVar1 + Reg3_P_DepVar1 + Neural22_P_DepVar1 
+ Neural23_P_DepVar1 + Neural18_P_DepVar1 )/9;
775749    +P_DepVar0 = (
775750    +Neural20_P_DepVar0 +
775751    +Neural19_P_DepVar0 +
775752    +Neural5_P_DepVar0 +
775753    +Neural21_P_DepVar0 +
775754    +Tree3_P_DepVar0 +
775755    +Reg3_P_DepVar0 +
775756    +Neural22_P_DepVar0 +
775757    +Neural23_P_DepVar0 +
775758    +Neural18_P_DepVar0
775759    +)/9;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural20_P_DepVar0 + Neural19_P_DepVar0 + 
Neural5_P_DepVar0 + Neural21_P_DepVar0 + Tree3_P_DepVar0 + Reg3_P_DepVar0 + Neural22_P_DepVar0 
+ Neural23_P_DepVar0 + Neural18_P_DepVar0 )/9;
775760    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775761    +* Ensmbl3: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Classification Vars;
775762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775763    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
775764    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
775765    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
775766    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
775767    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
775768    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
775769    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
775770    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
775771    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
775772    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
775773    +end;
MPRINT(EM_DIAGRAM):   end;
775774    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
775775    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
775776    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
775777    +end;
MPRINT(EM_DIAGRAM):   end;
775778    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
775779    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775780    +* Ensmbl3: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Producing Unformatted variable;
775781    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775782    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
775783    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
775784    +else
775785    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
775786    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775787    +* Ensmbl3: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing _WARN_ Variable;
775788    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775789    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
775790    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
775791    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
775792    +if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
775792   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
775793    +if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
775793   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
775794    +if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
775794   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
775795    +if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
775795   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
775796    +if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
775796   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
775797    +if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
775797   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
775798    +if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
775798   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
775799    +if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
775799   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
775800    +if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
775801    +if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
775802    +if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
775803    +if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
775804    +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
775804   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
775805    +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
775805   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
775806    +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
775806   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
775807    +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
775807   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
775808    +if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
775809    +if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
775810    +if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
775811    +if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
775812    +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
775813    +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
775814    +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
775815    +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
775816    +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
775816   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
775817    +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
775817   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
775818    +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
775818   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
775819    +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
775819   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
775820    +if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
775820   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
775821    +if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
775821   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
775822    +if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
775822   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
775823    +if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
775823   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
775824    +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
775824   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
775825    +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
775825   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
775826    +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
775826   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
775827    +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
775827   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
775828    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775829    +* Ensmbl3: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Residual Vars;
775830    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
775831    +if
775832    +F_DepVar NE '1'
775833    +AND F_DepVar NE '0'
775834    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
775835    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
775836    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
775837    +end;
MPRINT(EM_DIAGRAM):   end;
775838    +else do;
MPRINT(EM_DIAGRAM):   else do;
775839    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
775840    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
775841    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
775842    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
775843    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
775844    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
775845    +END;
MPRINT(EM_DIAGRAM):   END;
775846    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
775847     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL20_VALIDATE.VIEW used (Total process time):
      real time           0.23 seconds
      cpu time            0.23 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.24 seconds
      cpu time            0.23 seconds
      

MPRINT(EM_DIAGRAM):   quit;
775848     quit;
775849     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl3_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl3_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl3_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
775909     filename _pref
775909   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMPUBLISHSCORE.sas";
775910     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
775911     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMPUBLISHSCORE.sas.
775912    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
775913    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
775914    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
775915    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
775916    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
775917    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
775918    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
775919    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
775920    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
775921    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
775922    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
775923    +LENGTH _WARN_ $4
775924    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
775925    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
775926    +
775927    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
775928    +
775929    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
775930    +
775931    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
775932    +
775933    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
775934    +
775935    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
775936    +
775937    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
775938    +
775939    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
775940    +
775941    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
775942    +
775943    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
775944    +
775945    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
775946    +
775947    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
775948    +
775949    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
775950    +
775951    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
775952    +
775953    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
775954    +
775955    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
775956    +
775957    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
775958    +
775959    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
775960    +
775961    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
775962    +
775963    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
775964    +
775965    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
775966    +
775967    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
775968    +
775969    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
775970    +
775971    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
775972    +
775973    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
775974    +
775975    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
775976    +
775977    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
775978    +
775979    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
775980    +
775981    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
775982    +
775983    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
775984    +
775985    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
775986    +
775987    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
775988    +
775989    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
775990    +
775991    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
775992    +
775993    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
775994    +
775995    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
775996    +
775997    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
775998    +
775999    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
776000    +
776001    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
776002    +
776003    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
776004    +
776005    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
776006    +
776007    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
776008    +
776009    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
776010    +
776011    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
776012    +
776013    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
776014    +
776015    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
776016    +
776017    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
776018    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
776019    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
776020    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
776021    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776022    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776023    +end;
MPRINT(EM_DIAGRAM):   end;
776024    +else do;
MPRINT(EM_DIAGRAM):   else do;
776025    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776026    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
776027    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776028    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
776029    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
776030    +   end;
MPRINT(EM_DIAGRAM):   end;
776031    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
776032    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
776033    +   end;
MPRINT(EM_DIAGRAM):   end;
776034    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776035    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
776036    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776037    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776038    +   end;
MPRINT(EM_DIAGRAM):   end;
776039    +end;
MPRINT(EM_DIAGRAM):   end;
776040    +
776041    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
776042    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
776043    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
776044    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
776045    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
776046    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
776047    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776049    +end;
MPRINT(EM_DIAGRAM):   end;
776050    +else do;
MPRINT(EM_DIAGRAM):   else do;
776051    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776052    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
776053    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776054    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
776055    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
776056    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
776057    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
776058    +   end;
MPRINT(EM_DIAGRAM):   end;
776059    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
776060    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
776061    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
776062    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
776063    +   end;
MPRINT(EM_DIAGRAM):   end;
776064    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776065    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
776066    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
776067    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
776068    +   end;
MPRINT(EM_DIAGRAM):   end;
776069    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776070    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
776071    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
776072    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
776073    +   end;
MPRINT(EM_DIAGRAM):   end;
776074    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776075    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
776076    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
776077    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
776078    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776079    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776080    +   end;
MPRINT(EM_DIAGRAM):   end;
776081    +end;
MPRINT(EM_DIAGRAM):   end;
776082    +
776083    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
776084    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
776085    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
776086    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
776087    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
776088    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
776089    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776091    +end;
MPRINT(EM_DIAGRAM):   end;
776092    +else do;
MPRINT(EM_DIAGRAM):   else do;
776093    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776094    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
776095    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776096    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
776097    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
776098    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
776099    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
776100    +   end;
MPRINT(EM_DIAGRAM):   end;
776101    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776102    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
776103    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
776104    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
776105    +   end;
MPRINT(EM_DIAGRAM):   end;
776106    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
776107    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
776108    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
776109    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
776110    +   end;
MPRINT(EM_DIAGRAM):   end;
776111    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776112    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
776113    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
776114    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
776115    +   end;
MPRINT(EM_DIAGRAM):   end;
776116    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776117    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
776118    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
776119    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
776120    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776121    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776122    +   end;
MPRINT(EM_DIAGRAM):   end;
776123    +end;
MPRINT(EM_DIAGRAM):   end;
776124    +
776125    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
776126    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
776127    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
776128    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
776129    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
776130    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
776131    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776132    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776133    +end;
MPRINT(EM_DIAGRAM):   end;
776134    +else do;
MPRINT(EM_DIAGRAM):   else do;
776135    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776136    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
776137    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776138    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776139    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
776140    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
776141    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
776142    +   end;
MPRINT(EM_DIAGRAM):   end;
776143    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776144    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
776145    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
776146    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
776147    +   end;
MPRINT(EM_DIAGRAM):   end;
776148    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776149    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
776150    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
776151    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
776152    +   end;
MPRINT(EM_DIAGRAM):   end;
776153    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776154    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
776155    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
776156    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
776157    +   end;
MPRINT(EM_DIAGRAM):   end;
776158    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776159    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
776160    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
776161    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
776162    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776163    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776164    +   end;
MPRINT(EM_DIAGRAM):   end;
776165    +end;
MPRINT(EM_DIAGRAM):   end;
776166    +
776167    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
776168    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
776169    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
776170    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
776171    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
776172    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
776173    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776174    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776175    +end;
MPRINT(EM_DIAGRAM):   end;
776176    +else do;
MPRINT(EM_DIAGRAM):   else do;
776177    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776178    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
776179    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776180    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776181    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
776182    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
776183    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
776184    +   end;
MPRINT(EM_DIAGRAM):   end;
776185    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776186    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
776187    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
776188    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
776189    +   end;
MPRINT(EM_DIAGRAM):   end;
776190    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776191    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
776192    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
776193    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
776194    +   end;
MPRINT(EM_DIAGRAM):   end;
776195    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776196    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
776197    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
776198    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
776199    +   end;
MPRINT(EM_DIAGRAM):   end;
776200    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776201    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
776202    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
776203    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
776204    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776205    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776206    +   end;
MPRINT(EM_DIAGRAM):   end;
776207    +end;
MPRINT(EM_DIAGRAM):   end;
776208    +
776209    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
776210    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
776211    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
776212    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
776213    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
776214    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
776215    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776216    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776217    +end;
MPRINT(EM_DIAGRAM):   end;
776218    +else do;
MPRINT(EM_DIAGRAM):   else do;
776219    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776220    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
776221    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776222    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776223    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
776224    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
776225    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
776226    +   end;
MPRINT(EM_DIAGRAM):   end;
776227    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776228    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
776229    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
776230    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
776231    +   end;
MPRINT(EM_DIAGRAM):   end;
776232    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776233    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
776234    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
776235    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
776236    +   end;
MPRINT(EM_DIAGRAM):   end;
776237    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776238    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
776239    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
776240    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
776241    +   end;
MPRINT(EM_DIAGRAM):   end;
776242    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776243    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
776244    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
776245    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
776246    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776247    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776248    +   end;
MPRINT(EM_DIAGRAM):   end;
776249    +end;
MPRINT(EM_DIAGRAM):   end;
776250    +
776251    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
776252    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
776253    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
776254    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
776255    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
776256    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
776257    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776258    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776259    +end;
MPRINT(EM_DIAGRAM):   end;
776260    +else do;
MPRINT(EM_DIAGRAM):   else do;
776261    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776262    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
776263    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776264    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776265    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
776266    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
776267    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
776268    +   end;
MPRINT(EM_DIAGRAM):   end;
776269    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776270    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
776271    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
776272    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
776273    +   end;
MPRINT(EM_DIAGRAM):   end;
776274    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776275    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
776276    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
776277    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
776278    +   end;
MPRINT(EM_DIAGRAM):   end;
776279    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776280    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
776281    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
776282    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
776283    +   end;
MPRINT(EM_DIAGRAM):   end;
776284    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776285    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
776286    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
776287    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
776288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776290    +   end;
MPRINT(EM_DIAGRAM):   end;
776291    +end;
MPRINT(EM_DIAGRAM):   end;
776292    +
776293    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
776294    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
776295    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
776296    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
776297    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
776298    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
776299    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776300    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776301    +end;
MPRINT(EM_DIAGRAM):   end;
776302    +else do;
MPRINT(EM_DIAGRAM):   else do;
776303    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776304    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
776305    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776306    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776307    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
776308    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
776309    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
776310    +   end;
MPRINT(EM_DIAGRAM):   end;
776311    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776312    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
776313    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
776314    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
776315    +   end;
MPRINT(EM_DIAGRAM):   end;
776316    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776317    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
776318    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
776319    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
776320    +   end;
MPRINT(EM_DIAGRAM):   end;
776321    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776322    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
776323    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
776324    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
776325    +   end;
MPRINT(EM_DIAGRAM):   end;
776326    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776327    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
776328    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
776329    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
776330    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776331    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776332    +   end;
MPRINT(EM_DIAGRAM):   end;
776333    +end;
MPRINT(EM_DIAGRAM):   end;
776334    +
776335    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
776336    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
776337    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
776338    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
776339    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
776340    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776341    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776342    +end;
MPRINT(EM_DIAGRAM):   end;
776343    +else do;
MPRINT(EM_DIAGRAM):   else do;
776344    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776345    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
776346    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776347    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776348    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
776349    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
776350    +   end;
MPRINT(EM_DIAGRAM):   end;
776351    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776352    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
776353    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
776354    +   end;
MPRINT(EM_DIAGRAM):   end;
776355    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776356    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
776357    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
776358    +   end;
MPRINT(EM_DIAGRAM):   end;
776359    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776360    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
776361    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
776362    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776363    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776364    +   end;
MPRINT(EM_DIAGRAM):   end;
776365    +end;
MPRINT(EM_DIAGRAM):   end;
776366    +
776367    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
776368    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
776369    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
776370    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
776371    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
776372    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
776373    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776374    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776375    +end;
MPRINT(EM_DIAGRAM):   end;
776376    +else do;
MPRINT(EM_DIAGRAM):   else do;
776377    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776378    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
776379    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776380    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
776381    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
776382    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
776383    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
776384    +   end;
MPRINT(EM_DIAGRAM):   end;
776385    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776386    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
776387    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
776388    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
776389    +   end;
MPRINT(EM_DIAGRAM):   end;
776390    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776391    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
776392    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
776393    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
776394    +   end;
MPRINT(EM_DIAGRAM):   end;
776395    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
776396    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
776397    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
776398    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
776399    +   end;
MPRINT(EM_DIAGRAM):   end;
776400    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776401    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
776402    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
776403    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
776404    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776405    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776406    +   end;
MPRINT(EM_DIAGRAM):   end;
776407    +end;
MPRINT(EM_DIAGRAM):   end;
776408    +
776409    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
776410    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
776411    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
776412    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
776413    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
776414    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
776415    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776416    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776417    +end;
MPRINT(EM_DIAGRAM):   end;
776418    +else do;
MPRINT(EM_DIAGRAM):   else do;
776419    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776420    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
776421    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776422    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776423    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
776424    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
776425    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
776426    +   end;
MPRINT(EM_DIAGRAM):   end;
776427    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776428    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
776429    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
776430    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
776431    +   end;
MPRINT(EM_DIAGRAM):   end;
776432    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776433    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
776434    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
776435    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
776436    +   end;
MPRINT(EM_DIAGRAM):   end;
776437    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776438    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
776439    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
776440    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
776441    +   end;
MPRINT(EM_DIAGRAM):   end;
776442    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776443    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
776444    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
776445    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
776446    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776447    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776448    +   end;
MPRINT(EM_DIAGRAM):   end;
776449    +end;
MPRINT(EM_DIAGRAM):   end;
776450    +
776451    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
776452    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
776453    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
776454    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
776455    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
776456    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
776457    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776458    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776459    +end;
MPRINT(EM_DIAGRAM):   end;
776460    +else do;
MPRINT(EM_DIAGRAM):   else do;
776461    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776462    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
776463    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776464    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
776465    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
776466    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
776467    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
The SAS System

776468    +   end;
MPRINT(EM_DIAGRAM):   end;
776469    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
776470    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
776471    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
776472    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
776473    +   end;
MPRINT(EM_DIAGRAM):   end;
776474    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776475    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
776476    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
776477    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
776478    +   end;
MPRINT(EM_DIAGRAM):   end;
776479    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776480    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
776481    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
776482    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
776483    +   end;
MPRINT(EM_DIAGRAM):   end;
776484    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776485    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
776486    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
776487    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
776488    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776489    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776490    +   end;
MPRINT(EM_DIAGRAM):   end;
776491    +end;
MPRINT(EM_DIAGRAM):   end;
776492    +
776493    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
776494    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
776495    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
776496    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
776497    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
776498    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
776499    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776500    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776501    +end;
MPRINT(EM_DIAGRAM):   end;
776502    +else do;
MPRINT(EM_DIAGRAM):   else do;
776503    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776504    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
776505    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776506    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
776507    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
776508    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
776509    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
776510    +   end;
MPRINT(EM_DIAGRAM):   end;
776511    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
776512    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
776513    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
776514    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
776515    +   end;
MPRINT(EM_DIAGRAM):   end;
776516    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776517    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
776518    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
776519    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
776520    +   end;
MPRINT(EM_DIAGRAM):   end;
776521    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776522    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
776523    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
776524    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
776525    +   end;
MPRINT(EM_DIAGRAM):   end;
776526    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776527    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
776528    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
776529    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
776530    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776531    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776532    +   end;
MPRINT(EM_DIAGRAM):   end;
776533    +end;
MPRINT(EM_DIAGRAM):   end;
776534    +
776535    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
776536    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
776537    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
776538    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
776539    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
776540    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
776541    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
776542    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776543    +end;
MPRINT(EM_DIAGRAM):   end;
776544    +else do;
MPRINT(EM_DIAGRAM):   else do;
776545    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
776546    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
776547    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
776548    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
776549    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
776550    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
776551    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
776552    +   end;
MPRINT(EM_DIAGRAM):   end;
776553    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
776554    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
776555    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
776556    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
776557    +   end;
MPRINT(EM_DIAGRAM):   end;
776558    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
776559    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
776560    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
776561    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
776562    +   end;
MPRINT(EM_DIAGRAM):   end;
776563    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
776564    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
776565    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
776566    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
776567    +   end;
MPRINT(EM_DIAGRAM):   end;
776568    +   else do;
MPRINT(EM_DIAGRAM):   else do;
776569    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
776570    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
776571    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
776572    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
776573    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
776574    +   end;
MPRINT(EM_DIAGRAM):   end;
776575    +end;
MPRINT(EM_DIAGRAM):   end;
776576    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776577    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
776578    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776579    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776580    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
776581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776582    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
776583    +   H11  =    -0.20808401117374 * GRP_AcceptedCmp52  +      1.5952064946991 *
776584    +        GRP_Frq2  +    -0.01225273525848 * GRP_Frq3  +    -0.62835698024634 *
776585    +        GRP_Frq4  +     0.44314401678348 * GRP_Income2
776586    +          +     0.89646769323205 * GRP_Income3  +    -0.90649183264259 *
776587    +        GRP_Income4  +    -0.55176085229947 * GRP_Mnt2
776588    +          +    -0.28020133968753 * GRP_Mnt3  +     0.17871933677614 * GRP_Mnt4
776589    +          +     0.38585041088838 * GRP_MntFishProducts2
776590    +          +    -0.22597951859521 * GRP_MntFishProducts3
776591    +          +    -0.12591354177724 * GRP_MntFishProducts4
776592    +          +     0.41517790727814 * GRP_MntGoldProds2
776593    +          +    -0.01783554546067 * GRP_MntGoldProds3
776594    +          +    -0.05254364640808 * GRP_MntGoldProds4
776595    +          +     0.11041766264422 * GRP_MntMeatProducts2
776596    +          +     0.80734417241917 * GRP_MntMeatProducts3
776597    +          +    -0.58385299076265 * GRP_MntMeatProducts4
776598    +          +     0.63351163942796 * GRP_MntWines2  +      0.4938617622427 *
776599    +        GRP_MntWines3  +     0.02607762678073 * GRP_MntWines4
776600    +          +    -1.43194573733764 * GRP_NumCatalogPurchases3
776601    +          +     0.55178119754186 * GRP_NumCatalogPurchases4
776602    +          +      -1.830671366144 * GRP_NumDistPurchases2
776603    +          +    -1.17053785506362 * GRP_NumDistPurchases3
776604    +          +     0.98564208160287 * GRP_NumDistPurchases4
776605    +          +    -0.22019170543618 * GRP_NumWebPurchases2
776606    +          +     0.12596691753667 * GRP_NumWebPurchases3
776607    +          +    -0.02882568244969 * GRP_NumWebPurchases4
776608    +          +    -0.21302125337044 * GRP_RFMstat2  +     0.08158805477511 *
776609    +        GRP_RFMstat3  +     -0.2631946184422 * GRP_RFMstat4
776610    +          +      0.1161399236304 * GRP_RMntFrq2  +     0.60576408771811 *
776611    +        GRP_RMntFrq3  +    -0.25254086880004 * GRP_RMntFrq4
776612    +          +      0.8664956591594 * GRP_Recency2  +     0.06243974875226 *
776613    +        GRP_Recency3  +    -0.38266930051466 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20808401117374 * GRP_AcceptedCmp52 + 1.5952064946991 * GRP_Frq2 
+ -0.01225273525848 * GRP_Frq3 + -0.62835698024634 * GRP_Frq4 + 0.44314401678348 * GRP_Income2 
+ 0.89646769323205 * GRP_Income3 + -0.90649183264259 * GRP_Income4 + -0.55176085229947 * 
GRP_Mnt2 + -0.28020133968753 * GRP_Mnt3 + 0.17871933677614 * GRP_Mnt4 + 0.38585041088838 * 
GRP_MntFishProducts2 + -0.22597951859521 * GRP_MntFishProducts3 + -0.12591354177724 * 
GRP_MntFishProducts4 + 0.41517790727814 * GRP_MntGoldProds2 + -0.01783554546067 * 
GRP_MntGoldProds3 + -0.05254364640808 * GRP_MntGoldProds4 + 0.11041766264422 * 
GRP_MntMeatProducts2 + 0.80734417241917 * GRP_MntMeatProducts3 + -0.58385299076265 * 
GRP_MntMeatProducts4 + 0.63351163942796 * GRP_MntWines2 + 0.4938617622427 * GRP_MntWines3 + 
0.02607762678073 * GRP_MntWines4 + -1.43194573733764 * GRP_NumCatalogPurchases3 + 
0.55178119754186 * GRP_NumCatalogPurchases4 + -1.830671366144 * GRP_NumDistPurchases2 + 
-1.17053785506362 * GRP_NumDistPurchases3 + 0.98564208160287 * GRP_NumDistPurchases4 + 
-0.22019170543618 * GRP_NumWebPurchases2 + 0.12596691753667 * GRP_NumWebPurchases3 + 
-0.02882568244969 * GRP_NumWebPurchases4 + -0.21302125337044 * GRP_RFMstat2 + 0.08158805477511 
* GRP_RFMstat3 + -0.2631946184422 * GRP_RFMstat4 + 0.1161399236304 * GRP_RMntFrq2 + 
0.60576408771811 * GRP_RMntFrq3 + -0.25254086880004 * GRP_RMntFrq4 + 0.8664956591594 * 
GRP_Recency2 + 0.06243974875226 * GRP_Recency3 + -0.38266930051466 * GRP_Recency4 ;
776614    +   H12  =    -1.49044065215331 * GRP_AcceptedCmp52  +     0.29747214763886 *
776615    +        GRP_Frq2  +     0.25845091468379 * GRP_Frq3  +    -0.12253400308729 *
776616    +        GRP_Frq4  +     0.67026230943159 * GRP_Income2
776617    +          +    -0.07529723714567 * GRP_Income3  +    -0.00656076113338 *
776618    +        GRP_Income4  +     0.11866607313287 * GRP_Mnt2
776619    +          +     0.50886534936331 * GRP_Mnt3  +    -0.40624874712256 * GRP_Mnt4
776620    +          +     0.07903512198302 * GRP_MntFishProducts2
776621    +          +     0.30094355054178 * GRP_MntFishProducts3
776622    +          +      0.1592854004233 * GRP_MntFishProducts4
776623    +          +    -0.71778183892118 * GRP_MntGoldProds2
776624    +          +    -0.00758784099151 * GRP_MntGoldProds3
776625    +          +    -0.05641788275636 * GRP_MntGoldProds4
776626    +          +    -1.00661051196007 * GRP_MntMeatProducts2
776627    +          +     -0.7897102230697 * GRP_MntMeatProducts3
776628    +          +     0.82643513947121 * GRP_MntMeatProducts4
776629    +          +     0.29396736594116 * GRP_MntWines2  +    -0.23616802309365 *
776630    +        GRP_MntWines3  +    -0.53754288840118 * GRP_MntWines4
776631    +          +     0.51299707442487 * GRP_NumCatalogPurchases3
776632    +          +    -0.50131971617023 * GRP_NumCatalogPurchases4
776633    +          +     -1.0244605634362 * GRP_NumDistPurchases2
776634    +          +     0.62371418531403 * GRP_NumDistPurchases3
776635    +          +     0.01028523337025 * GRP_NumDistPurchases4
776636    +          +     0.57550765494375 * GRP_NumWebPurchases2
776637    +          +     0.06426605759446 * GRP_NumWebPurchases3
776638    +          +     -0.0925907148366 * GRP_NumWebPurchases4
776639    +          +    -0.38247659021772 * GRP_RFMstat2  +    -0.19029293671326 *
776640    +        GRP_RFMstat3  +     0.43474715375598 * GRP_RFMstat4
776641    +          +     0.50016038621788 * GRP_RMntFrq2  +    -0.67187730592002 *
776642    +        GRP_RMntFrq3  +    -0.23217968284532 * GRP_RMntFrq4
776643    +          +     0.58211670962274 * GRP_Recency2  +     0.40065427673317 *
776644    +        GRP_Recency3  +     0.03489926907231 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -1.49044065215331 * GRP_AcceptedCmp52 + 0.29747214763886 * 
GRP_Frq2 + 0.25845091468379 * GRP_Frq3 + -0.12253400308729 * GRP_Frq4 + 0.67026230943159 * 
GRP_Income2 + -0.07529723714567 * GRP_Income3 + -0.00656076113338 * GRP_Income4 + 
0.11866607313287 * GRP_Mnt2 + 0.50886534936331 * GRP_Mnt3 + -0.40624874712256 * GRP_Mnt4 + 
0.07903512198302 * GRP_MntFishProducts2 + 0.30094355054178 * GRP_MntFishProducts3 + 
0.1592854004233 * GRP_MntFishProducts4 + -0.71778183892118 * GRP_MntGoldProds2 + 
-0.00758784099151 * GRP_MntGoldProds3 + -0.05641788275636 * GRP_MntGoldProds4 + 
-1.00661051196007 * GRP_MntMeatProducts2 + -0.7897102230697 * GRP_MntMeatProducts3 + 
0.82643513947121 * GRP_MntMeatProducts4 + 0.29396736594116 * GRP_MntWines2 + -0.23616802309365 
* GRP_MntWines3 + -0.53754288840118 * GRP_MntWines4 + 0.51299707442487 * 
GRP_NumCatalogPurchases3 + -0.50131971617023 * GRP_NumCatalogPurchases4 + -1.0244605634362 * 
GRP_NumDistPurchases2 + 0.62371418531403 * GRP_NumDistPurchases3 + 0.01028523337025 * 
GRP_NumDistPurchases4 + 0.57550765494375 * GRP_NumWebPurchases2 + 0.06426605759446 * 
GRP_NumWebPurchases3 + -0.0925907148366 * GRP_NumWebPurchases4 + -0.38247659021772 * 
GRP_RFMstat2 + -0.19029293671326 * GRP_RFMstat3 + 0.43474715375598 * GRP_RFMstat4 + 
0.50016038621788 * GRP_RMntFrq2 + -0.67187730592002 * GRP_RMntFrq3 + -0.23217968284532 * 
GRP_RMntFrq4 + 0.58211670962274 * GRP_Recency2 + 0.40065427673317 * GRP_Recency3 + 
0.03489926907231 * GRP_Recency4 ;
776645    +   H11  =    -0.62541132065477 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.62541132065477 + H11 ;
776646    +   H12  =     1.33919796685016 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.33919796685016 + H12 ;
776647    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
776648    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
776649    +END;
MPRINT(EM_DIAGRAM):   END;
776650    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
776651    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
776652    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
776653    +END;
MPRINT(EM_DIAGRAM):   END;
776654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776655    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
776656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776657    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
776658    +   P_DepVar1  =     2.63836588308478 * H11  +     2.61621667267981 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.63836588308478 * H11 + 2.61621667267981 * H12 ;
776659    +   P_DepVar1  =    -1.97856411598138 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97856411598138 + P_DepVar1 ;
776660    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
776661    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
776662    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
776663    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
776664    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
776665    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
776666    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
776667    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
776668    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
776669    +END;
MPRINT(EM_DIAGRAM):   END;
776670    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
776671    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
776672    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
776673    +END;
MPRINT(EM_DIAGRAM):   END;
776674    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
776675    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
776676    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
776677    +END;
MPRINT(EM_DIAGRAM):   END;
776678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776679    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
776680    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
776681    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
776682    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
776683    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
776684    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
776685    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
776686    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
776687    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
776688    +END;
MPRINT(EM_DIAGRAM):   END;
776689    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
776690    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
776691    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
776692    +drop
776693    +H11
776694    +H12
776695    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
776696     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
776697     quit;
776698     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
776699     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
776700     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
776701     retain ID 2 Node "Neural20";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural20";
776702     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
776703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1519 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1519 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

776704     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
776705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
776706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1519 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1519 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

776707     proc sort data=EMWS8.Neural20_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural20_variableset out=_temp2(keep=NAME CREATOR);
776708     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
776709     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL20_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

776710     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
776711     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
776712     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
776713     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

776714     proc contents data=EMWS8.Neural20_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural20_train out=_meta(keep=NAME) noprint;
776715     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

776716     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
776717     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
776718     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

776719     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
776720     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
776721     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
776722     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

776723     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
776724     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
776724   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 804 rows and 5 columns.

776725     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

776726     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
776727     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 804 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 804 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

776728     filename _pref
776728   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
776729     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
776730     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
776731    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
776732    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
776733    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
776734    +
776735    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776736    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
776737    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776738    +LABEL GRP_AcceptedCmp5 =
776739    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
776740    +
776741    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
776742    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
776743    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
776744    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
776745    +end;
MPRINT(EM_DIAGRAM):   end;
776746    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
776747    +if (_UFORMAT eq '0'
776748    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
776749    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
776750    +end;
MPRINT(EM_DIAGRAM):   end;
776751    +else
776752    +if (_UFORMAT eq '1'
776753    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
776754    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
776755    +end;
MPRINT(EM_DIAGRAM):   end;
776756    +else do;
MPRINT(EM_DIAGRAM):   else do;
776757    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
776758    +end;
MPRINT(EM_DIAGRAM):   end;
776759    +end;
MPRINT(EM_DIAGRAM):   end;
776760    +
776761    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776762    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
776763    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776764    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
776765    +
776766    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
776767    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
776768    +end;
MPRINT(EM_DIAGRAM):   end;
776769    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
776770    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
776771    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
776772    +end;
MPRINT(EM_DIAGRAM):   end;
776773    +else
776774    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
776775    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
776776    +end;
MPRINT(EM_DIAGRAM):   end;
776777    +else
776778    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
776779    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
776780    +end;
MPRINT(EM_DIAGRAM):   end;
776781    +else
776782    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
776783    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
776784    +end;
MPRINT(EM_DIAGRAM):   end;
776785    +end;
MPRINT(EM_DIAGRAM):   end;
776786    +
776787    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776788    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
776789    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776790    +LABEL GRP_Income =
776791    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
776792    +
776793    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
776794    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
776795    +end;
MPRINT(EM_DIAGRAM):   end;
776796    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
776797    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
776798    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
776799    +end;
MPRINT(EM_DIAGRAM):   end;
776800    +else
776801    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
776802    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
776803    +end;
MPRINT(EM_DIAGRAM):   end;
776804    +else
776805    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
776806    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
776807    +end;
MPRINT(EM_DIAGRAM):   end;
776808    +else
776809    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
776810    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
776811    +end;
MPRINT(EM_DIAGRAM):   end;
776812    +end;
MPRINT(EM_DIAGRAM):   end;
776813    +
776814    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776815    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
776816    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776817    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
776818    +
776819    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
776820    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
776821    +end;
MPRINT(EM_DIAGRAM):   end;
776822    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
776823    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
776824    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
776825    +end;
MPRINT(EM_DIAGRAM):   end;
776826    +else
776827    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
776828    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
776829    +end;
MPRINT(EM_DIAGRAM):   end;
776830    +else
776831    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
776832    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
776833    +end;
MPRINT(EM_DIAGRAM):   end;
776834    +else
776835    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
776836    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
776837    +end;
MPRINT(EM_DIAGRAM):   end;
776838    +end;
MPRINT(EM_DIAGRAM):   end;
776839    +
776840    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776841    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
776842    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776843    +LABEL GRP_MntFishProducts =
776844    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
776845    +
776846    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
776847    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
776848    +end;
MPRINT(EM_DIAGRAM):   end;
776849    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
776850    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
776851    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
776852    +end;
MPRINT(EM_DIAGRAM):   end;
776853    +else
776854    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
776855    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
776856    +end;
MPRINT(EM_DIAGRAM):   end;
776857    +else
776858    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
776859    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
776860    +end;
MPRINT(EM_DIAGRAM):   end;
776861    +else
776862    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
776863    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
776864    +end;
MPRINT(EM_DIAGRAM):   end;
776865    +end;
MPRINT(EM_DIAGRAM):   end;
776866    +
776867    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776868    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
776869    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776870    +LABEL GRP_MntGoldProds =
776871    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
776872    +
776873    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
776874    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
776875    +end;
MPRINT(EM_DIAGRAM):   end;
776876    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
776877    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
776878    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
776879    +end;
MPRINT(EM_DIAGRAM):   end;
776880    +else
776881    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
776882    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
776883    +end;
MPRINT(EM_DIAGRAM):   end;
776884    +else
776885    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
776886    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
776887    +end;
MPRINT(EM_DIAGRAM):   end;
776888    +else
776889    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
776890    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
776891    +end;
MPRINT(EM_DIAGRAM):   end;
776892    +end;
MPRINT(EM_DIAGRAM):   end;
776893    +
776894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776895    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
776896    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776897    +LABEL GRP_MntMeatProducts =
776898    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
776899    +
776900    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
776901    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
776902    +end;
MPRINT(EM_DIAGRAM):   end;
776903    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
776904    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
776905    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
776906    +end;
MPRINT(EM_DIAGRAM):   end;
776907    +else
776908    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
776909    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
776910    +end;
MPRINT(EM_DIAGRAM):   end;
776911    +else
776912    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
776913    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
776914    +end;
MPRINT(EM_DIAGRAM):   end;
776915    +else
776916    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
776917    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
776918    +end;
MPRINT(EM_DIAGRAM):   end;
776919    +end;
MPRINT(EM_DIAGRAM):   end;
776920    +
776921    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776922    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
776923    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776924    +LABEL GRP_MntWines =
776925    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
776926    +
776927    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
776928    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
776929    +end;
MPRINT(EM_DIAGRAM):   end;
776930    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
776931    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
776932    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
776933    +end;
MPRINT(EM_DIAGRAM):   end;
776934    +else
776935    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
776936    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
776937    +end;
MPRINT(EM_DIAGRAM):   end;
776938    +else
776939    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
776940    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
776941    +end;
MPRINT(EM_DIAGRAM):   end;
776942    +else
776943    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
776944    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
776945    +end;
MPRINT(EM_DIAGRAM):   end;
776946    +end;
MPRINT(EM_DIAGRAM):   end;
776947    +
776948    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776949    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
776950    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776951    +LABEL GRP_NumCatalogPurchases =
776952    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
776953    +
776954    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
776955    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
776956    +end;
MPRINT(EM_DIAGRAM):   end;
776957    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
776958    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
776959    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
776960    +end;
MPRINT(EM_DIAGRAM):   end;
776961    +else
776962    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
776963    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
776964    +end;
MPRINT(EM_DIAGRAM):   end;
776965    +else
776966    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
776967    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
776968    +end;
MPRINT(EM_DIAGRAM):   end;
776969    +else
776970    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
776971    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
776972    +end;
MPRINT(EM_DIAGRAM):   end;
776973    +end;
MPRINT(EM_DIAGRAM):   end;
776974    +
776975    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776976    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
776977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
776978    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
776979    +
776980    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
776981    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
776982    +end;
MPRINT(EM_DIAGRAM):   end;
776983    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
776984    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
776985    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
776986    +end;
MPRINT(EM_DIAGRAM):   end;
776987    +else
776988    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
776989    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
776990    +end;
MPRINT(EM_DIAGRAM):   end;
776991    +else
776992    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
776993    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
776994    +end;
MPRINT(EM_DIAGRAM):   end;
776995    +else
776996    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
776997    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
776998    +end;
MPRINT(EM_DIAGRAM):   end;
776999    +end;
MPRINT(EM_DIAGRAM):   end;
777000    +
777001    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777002    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
777003    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777004    +LABEL GRP_NumWebPurchases =
777005    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
777006    +
777007    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
777008    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
777009    +end;
MPRINT(EM_DIAGRAM):   end;
777010    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
777011    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
777012    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
777013    +end;
MPRINT(EM_DIAGRAM):   end;
777014    +else
777015    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
777016    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
777017    +end;
MPRINT(EM_DIAGRAM):   end;
777018    +else
777019    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
777020    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
777021    +end;
MPRINT(EM_DIAGRAM):   end;
777022    +else
777023    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
777024    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
777025    +end;
MPRINT(EM_DIAGRAM):   end;
777026    +end;
MPRINT(EM_DIAGRAM):   end;
777027    +
777028    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777029    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
777030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777031    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
777032    +
777033    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
777034    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
777035    +end;
MPRINT(EM_DIAGRAM):   end;
777036    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
777037    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
777038    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
777039    +end;
MPRINT(EM_DIAGRAM):   end;
777040    +else
777041    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
777042    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
777043    +end;
MPRINT(EM_DIAGRAM):   end;
777044    +else
777045    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
777046    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
777047    +end;
MPRINT(EM_DIAGRAM):   end;
777048    +else
777049    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
777050    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
777051    +end;
MPRINT(EM_DIAGRAM):   end;
777052    +end;
MPRINT(EM_DIAGRAM):   end;
777053    +
777054    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777055    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
777056    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777057    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
777058    +
777059    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
777060    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
777061    +end;
MPRINT(EM_DIAGRAM):   end;
777062    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
777063    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
777064    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
777065    +end;
MPRINT(EM_DIAGRAM):   end;
777066    +else
777067    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
777068    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
777069    +end;
MPRINT(EM_DIAGRAM):   end;
777070    +else
777071    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
777072    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
777073    +end;
MPRINT(EM_DIAGRAM):   end;
777074    +else
777075    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
777076    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
777077    +end;
MPRINT(EM_DIAGRAM):   end;
777078    +end;
MPRINT(EM_DIAGRAM):   end;
777079    +
777080    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777081    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
777082    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777083    +LABEL GRP_Recency =
777084    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
777085    +
777086    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
777087    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
777088    +end;
MPRINT(EM_DIAGRAM):   end;
777089    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
777090    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
777091    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
777092    +end;
MPRINT(EM_DIAGRAM):   end;
777093    +else
777094    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
777095    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
777096    +end;
MPRINT(EM_DIAGRAM):   end;
777097    +else
777098    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
777099    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
777100    +end;
MPRINT(EM_DIAGRAM):   end;
777101    +else
777102    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
777103    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
777104    +end;
MPRINT(EM_DIAGRAM):   end;
777105    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
777106     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
777107     quit;
777108     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
777109     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
777110     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
777111     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
777112     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
777113     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

777114     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
777115     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777116     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777117     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
777118     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777119     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777120     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777121     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
777122     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
777123     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777124     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
777125     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

777126     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
777127     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777128     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777129     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777130     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
777131     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777132     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

777133     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
777134     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
777134   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

777135     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777136     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
777137     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 819 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777138     filename _pref
777138   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
777139     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
777140     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
777141    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777142    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
777143    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
777144    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
777145    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
777146    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
777147     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
777148     quit;
777149     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
777150     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
777151     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
777152     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
777153     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
777154     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777155     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
777156     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777157     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

777158     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
777159     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777160     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777161     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777162     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
777163     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
777164     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777165     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
777166     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

777167     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
777168     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777169     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777170     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777171     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
777172     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777173     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777174     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
777175     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
777175   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

777176     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777177     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
777178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 823 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777179     filename _pref
777179   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
777180     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
777181     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
777182    +
777183    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
777184    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
777184   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
777185    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
777186    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
777187    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
777188    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
777189    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
777190     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
777191     quit;
777192     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
777193     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
777194     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
777195     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
777196     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
777197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777198     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
777199     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777200     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777201     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
777202     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777203     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777204     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777205     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
777206     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
777207     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777208     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
777209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777210     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
777211     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777212     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

777213     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777214     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
777215     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777216     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777217     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
777218     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
777218   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

777219     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777220     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
777221     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 862 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777222     filename _pref
777222   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
777223     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
777224     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
777225    +
777226    +
777227    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
777228    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
777229    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
777230    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
777231    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
777232    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777233    +
777234    +
777235    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
777236    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
777237    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
777238    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
777239    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
777240    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777241    +
777242    +
777243    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
777244    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
777245    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
777246    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
777247    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
777248    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777249    +
777250    +
777251    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
777252    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
777253    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
777254    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
777255    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
777256    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777257    +
777258    +
777259    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
777260    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
777261    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
777262    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
777263    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
777264    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777265    +
777266    +
777267    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
777268    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
777269    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
777270    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
777271    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
777272    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777273    +
777274    +
777275    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
777276    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
777277    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
777278    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
777279    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
777280    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777281    +
777282    +
777283    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
777284    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
777285    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
777286    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
777287    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
777288    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
777289    +if
777290    +_FILTERNORM1 not in ( '.')
777291    + and
777292    +_FILTERNORM2 not in ( '.')
777293    + and
777294    +_FILTERNORM3 not in ( '.')
777295    + and
777296    +_FILTERNORM4 not in ( '.')
777297    + and
777298    +_FILTERNORM5 not in ( '.')
777299    + and
777300    +_FILTERNORM6 not in ( '.')
777301    + and
777302    +_FILTERNORM7 not in ( ' ')
777303    + and
777304    +_FILTERNORM8 not in ( ' ')
777305    +and
777306    +( Dt_Customer ne .)
777307    +and ( Income ne . and (Income<=107000))
777308    +and ( Kidhome ne .)
777309    +and ( MntFishProducts ne .)
777310    +and ( MntFruits ne .)
777311    +and ( MntGoldProds ne .)
777312    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
777313    +and ( MntSweetProducts ne .)
777314    +and ( MntWines ne .)
777315    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
777316    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
777317    +and ( NumStorePurchases ne .)
777318    +and ( NumWebPurchases ne .)
777319    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
777320    +and ( Recency ne .)
777321    +and ( Teenhome ne .)
777322    +and ( Year_Birth ne .)
777323    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
777324    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
777325    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
777326    +end;
MPRINT(EM_DIAGRAM):   end;
777327    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
777328    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
777329     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
777330     quit;
777331     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
777332     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
777333     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
777334     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
777335     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
777336     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777337     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
777338     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777339     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777340     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
777341     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777342     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777343     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777344     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
777345     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
777346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777347     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
777348     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

777349     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
777350     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777351     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777352     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
777353     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
777354     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
777355     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777356     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
777357     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
777357   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

777358     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777359     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
777360     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

777361     %macro varDept(fcmpdata=,id=);
777362     %global nobs&id scoreFlag&id;
777363     %let scoreFlag&id = 0;
777364     %if &id=1 or ^&fcmpStart %then %do;
777365     proc sort data=&fcmpdata out=_temp&id nodupkey;
777366     by NAME;
777367     where id=&id and LHS in( %let j=1;
777368     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
777369     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
777370     "&var" %let j = %eval(&j+1);
777371     %end;
777372     );
777373     run;
777374     %let dsid = %sysfunc(open(_temp&id));
777375     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
777376     %let dsid = %sysfunc(close(&dsid));
777377     %if &&nobs&id %then %do;
777378     %let scoreFlag&id = 1;
777379     %let fcmpStart = 1;
777380     %end;
777381     %else %let fcmpStart = 0;
777382     %end;
777383     %else %do;
777384     proc sort data=&fcmpdata out=_tempid;
777385     where id=&id;
777386     by LHS;
777387     run;
777388     %let dsid = %sysfunc(open(_tempid));
777389     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
777390     %let dsid = %sysfunc(close(&dsid));
777391     %if ^&&nobs&id %then %do;
777392     proc datasets lib=work nolist;
777393     delete _tempid;
777394     run;
777395     quit;
777396     %end;
777397     %else %do;
777398     data _tempAll;
777399     set %let j=%eval(&id-1);
777400     %do x=1 %to &j;
777401     %if &&nobs&x %then %do;
777402     _temp&x %end;
777403     %end;
777404     ;
777405     run;
777406     proc sql;
777407     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
777407   ! work._tempid p2 where p.name=p2.lhs;
777408     quit;
777409     data _temp&id;
777410     set _temp&id;
777411     where LHS ne '' and NAME ne '' and Node ne '';
777412     run;
777413     proc datasets lib=work nolist;
777414     delete _tempAll;
777415     run;
777416     %let dsid = %sysfunc(open(_temp&id));
777417     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
777418     %let dsid = %sysfunc(close(&dsid));
777419     %if ^&&nobs&id %then %do;
777420     proc datasets lib=work nolist;
777421     delete _temp&id;
777422     run;
777423     quit;
777424     %end;
777425     %else %do;
777426     %let scoreFlag&id = 1;
777427     data _temp&id;
777428     set _temp&id;
777429     where LHS ne NAME and node ne '';
777430     run;
777431     %let dsid = %sysfunc(open(_temp&id));
777432     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
777433     %let dsid = %sysfunc(close(&dsid));
777434     %if ^&&nobs&id %then %do;
777435     proc datasets lib=work nolist;
777436     delete _temp&id;
777437     run;
777438     quit;
777439     %end;
777440     %else %do;
777441     proc sort data=_temp&id nodupkey;
777442     by LHS NAME;
777443     run;
777444     %end;
777445     %end;
777446     %end;
777447     %end;
777448     %mend varDept;
777449     %macro optCode(outdata=fcmpdata);
777450     %global fcmpStart;
777451     %let fcmpStart = 0;
777452     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
777453     %let NumNodes=9;
777454     %do k=1 %to &NumNodes;
777455     %vardept(fcmpdata=&outdata, id=&k);
777456     %end;
777457     %mend optCode;
777458     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

777459     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
777460     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
777461     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
777462     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777463     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
777464     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
777465     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
777466     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777467     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
777468     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
777468   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

777469     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

777470     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
777471     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
777472     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

777473     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
777474     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
777475     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
777476     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777477     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
777478     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
777479     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
777480     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777481     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
777482     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
777482   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

777483     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

777484     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
777485     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
777486     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

777487     filename _pref
777487   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural19\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural19\EMPUBLISHSCORE.sas";
777488     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
777489     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural19\EMPUBLISHSCORE.sas.
777490    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
777491    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
777492    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
777493    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
777494    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
777495    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
777496    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
777497    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
777498    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
777499    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
777500    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
777501    +LENGTH _WARN_ $4
777502    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
777503    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
777504    +
777505    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
777506    +
777507    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
777508    +
777509    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
777510    +
777511    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
777512    +
777513    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
777514    +
777515    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
777516    +
777517    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
777518    +
777519    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
777520    +
777521    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
777522    +
777523    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
777524    +
777525    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
777526    +
777527    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
777528    +
777529    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
777530    +
777531    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
777532    +
777533    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
777534    +
777535    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
777536    +
777537    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
777538    +
777539    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
777540    +
777541    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
777542    +
777543    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
777544    +
777545    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
777546    +
777547    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
777548    +
777549    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
777550    +
777551    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
777552    +
777553    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
777554    +
777555    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
777556    +
777557    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
777558    +
777559    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
777560    +
777561    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
777562    +
777563    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
777564    +
777565    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
777566    +
777567    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
777568    +
777569    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
777570    +
777571    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
777572    +
777573    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
777574    +
777575    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
777576    +
777577    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
777578    +
777579    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
777580    +
777581    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
777582    +
777583    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
777584    +
777585    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
777586    +
777587    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
777588    +
777589    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
777590    +
777591    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
777592    +
777593    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
777594    +
777595    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
777596    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
777597    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
777598    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
777599    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777600    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777601    +end;
MPRINT(EM_DIAGRAM):   end;
777602    +else do;
MPRINT(EM_DIAGRAM):   else do;
777603    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777604    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
777605    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777606    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
777607    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
777608    +   end;
MPRINT(EM_DIAGRAM):   end;
777609    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
777610    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
777611    +   end;
MPRINT(EM_DIAGRAM):   end;
777612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777613    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
777614    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777615    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777616    +   end;
MPRINT(EM_DIAGRAM):   end;
777617    +end;
MPRINT(EM_DIAGRAM):   end;
777618    +
777619    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
777620    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
777621    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
777622    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
777623    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
777624    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
777625    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777626    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777627    +end;
MPRINT(EM_DIAGRAM):   end;
777628    +else do;
MPRINT(EM_DIAGRAM):   else do;
777629    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777630    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
777631    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777632    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
777633    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
777634    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
777635    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
777636    +   end;
MPRINT(EM_DIAGRAM):   end;
777637    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
777638    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
777639    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
777640    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
777641    +   end;
MPRINT(EM_DIAGRAM):   end;
777642    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777643    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
777644    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
777645    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
777646    +   end;
MPRINT(EM_DIAGRAM):   end;
777647    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777648    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
777649    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
777650    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
777651    +   end;
MPRINT(EM_DIAGRAM):   end;
777652    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777653    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
777654    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
777655    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
777656    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777657    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777658    +   end;
MPRINT(EM_DIAGRAM):   end;
777659    +end;
MPRINT(EM_DIAGRAM):   end;
777660    +
777661    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
777662    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
777663    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
777664    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
777665    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
777666    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
777667    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777668    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777669    +end;
MPRINT(EM_DIAGRAM):   end;
777670    +else do;
MPRINT(EM_DIAGRAM):   else do;
777671    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777672    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
777673    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777674    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
777675    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
777676    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
777677    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
777678    +   end;
MPRINT(EM_DIAGRAM):   end;
777679    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777680    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
777681    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
777682    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
777683    +   end;
MPRINT(EM_DIAGRAM):   end;
777684    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
777685    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
777686    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
777687    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
777688    +   end;
MPRINT(EM_DIAGRAM):   end;
777689    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777690    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
777691    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
777692    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
777693    +   end;
MPRINT(EM_DIAGRAM):   end;
777694    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777695    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
777696    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
777697    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
777698    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777699    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777700    +   end;
MPRINT(EM_DIAGRAM):   end;
777701    +end;
MPRINT(EM_DIAGRAM):   end;
777702    +
777703    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
777704    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
777705    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
777706    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
777707    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
777708    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
777709    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777710    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777711    +end;
MPRINT(EM_DIAGRAM):   end;
777712    +else do;
MPRINT(EM_DIAGRAM):   else do;
777713    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777714    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
777715    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777716    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
777717    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
777718    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
777719    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
777720    +   end;
MPRINT(EM_DIAGRAM):   end;
777721    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
777722    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
777723    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
777724    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
777725    +   end;
MPRINT(EM_DIAGRAM):   end;
777726    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777727    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
777728    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
777729    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
777730    +   end;
MPRINT(EM_DIAGRAM):   end;
777731    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777732    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
777733    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
777734    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
777735    +   end;
MPRINT(EM_DIAGRAM):   end;
777736    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777737    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
777738    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
777739    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
777740    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777741    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777742    +   end;
MPRINT(EM_DIAGRAM):   end;
777743    +end;
MPRINT(EM_DIAGRAM):   end;
777744    +
777745    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
777746    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
777747    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
777748    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
777749    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
777750    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
777751    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777752    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777753    +end;
MPRINT(EM_DIAGRAM):   end;
777754    +else do;
MPRINT(EM_DIAGRAM):   else do;
777755    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777756    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
777757    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777758    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
777759    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
777760    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
777761    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
777762    +   end;
MPRINT(EM_DIAGRAM):   end;
777763    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
777764    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
777765    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
777766    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
777767    +   end;
MPRINT(EM_DIAGRAM):   end;
777768    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777769    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
777770    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
777771    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
777772    +   end;
MPRINT(EM_DIAGRAM):   end;
777773    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777774    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
777775    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
777776    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
777777    +   end;
MPRINT(EM_DIAGRAM):   end;
777778    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777779    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
777780    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
777781    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
777782    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777783    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777784    +   end;
MPRINT(EM_DIAGRAM):   end;
777785    +end;
MPRINT(EM_DIAGRAM):   end;
777786    +
777787    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
777788    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
777789    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
777790    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
777791    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
777792    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
777793    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777794    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777795    +end;
MPRINT(EM_DIAGRAM):   end;
777796    +else do;
MPRINT(EM_DIAGRAM):   else do;
777797    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777798    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
777799    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777800    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
777801    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
777802    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
777803    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
777804    +   end;
MPRINT(EM_DIAGRAM):   end;
777805    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777806    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
777807    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
777808    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
777809    +   end;
MPRINT(EM_DIAGRAM):   end;
777810    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
777811    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
777812    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
777813    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
777814    +   end;
MPRINT(EM_DIAGRAM):   end;
777815    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777816    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
777817    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
777818    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
777819    +   end;
MPRINT(EM_DIAGRAM):   end;
777820    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777821    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
777822    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
777823    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
777824    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777825    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777826    +   end;
MPRINT(EM_DIAGRAM):   end;
777827    +end;
MPRINT(EM_DIAGRAM):   end;
777828    +
777829    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
777830    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
777831    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
777832    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
777833    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
777834    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
777835    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777836    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777837    +end;
MPRINT(EM_DIAGRAM):   end;
777838    +else do;
MPRINT(EM_DIAGRAM):   else do;
777839    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777840    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
777841    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777842    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
777843    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
777844    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
777845    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
777846    +   end;
MPRINT(EM_DIAGRAM):   end;
777847    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777848    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
777849    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
777850    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
777851    +   end;
MPRINT(EM_DIAGRAM):   end;
777852    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
777853    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
777854    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
777855    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
777856    +   end;
MPRINT(EM_DIAGRAM):   end;
777857    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777858    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
777859    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
777860    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
777861    +   end;
MPRINT(EM_DIAGRAM):   end;
777862    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777863    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
777864    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
777865    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
777866    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777867    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777868    +   end;
MPRINT(EM_DIAGRAM):   end;
777869    +end;
MPRINT(EM_DIAGRAM):   end;
777870    +
777871    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
777872    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
777873    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
777874    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
777875    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
777876    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
777877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777879    +end;
MPRINT(EM_DIAGRAM):   end;
777880    +else do;
MPRINT(EM_DIAGRAM):   else do;
777881    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777882    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
777883    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777884    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
777885    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
777886    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
777887    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
777888    +   end;
MPRINT(EM_DIAGRAM):   end;
777889    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
777890    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
777891    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
777892    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
777893    +   end;
MPRINT(EM_DIAGRAM):   end;
777894    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777895    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
777896    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
777897    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
777898    +   end;
MPRINT(EM_DIAGRAM):   end;
777899    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777900    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
777901    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
777902    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
777903    +   end;
MPRINT(EM_DIAGRAM):   end;
777904    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777905    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
777906    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
777907    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
777908    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777909    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777910    +   end;
MPRINT(EM_DIAGRAM):   end;
777911    +end;
MPRINT(EM_DIAGRAM):   end;
777912    +
777913    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
777914    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
777915    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
777916    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
777917    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
777918    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777919    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777920    +end;
MPRINT(EM_DIAGRAM):   end;
777921    +else do;
MPRINT(EM_DIAGRAM):   else do;
777922    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777923    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
777924    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777925    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
777926    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
777927    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
777928    +   end;
MPRINT(EM_DIAGRAM):   end;
777929    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
777930    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
777931    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
777932    +   end;
MPRINT(EM_DIAGRAM):   end;
777933    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777934    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
777935    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
777936    +   end;
MPRINT(EM_DIAGRAM):   end;
777937    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777938    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
777939    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
777940    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777941    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777942    +   end;
MPRINT(EM_DIAGRAM):   end;
777943    +end;
MPRINT(EM_DIAGRAM):   end;
777944    +
777945    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
777946    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
777947    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
777948    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
777949    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
777950    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
777951    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777952    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777953    +end;
MPRINT(EM_DIAGRAM):   end;
777954    +else do;
MPRINT(EM_DIAGRAM):   else do;
777955    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777956    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
777957    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
777958    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
777959    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
777960    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
777961    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
777962    +   end;
MPRINT(EM_DIAGRAM):   end;
777963    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
777964    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
777965    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
777966    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
777967    +   end;
MPRINT(EM_DIAGRAM):   end;
777968    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
777969    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
777970    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
777971    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
777972    +   end;
MPRINT(EM_DIAGRAM):   end;
777973    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
777974    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
777975    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
777976    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
777977    +   end;
MPRINT(EM_DIAGRAM):   end;
777978    +   else do;
MPRINT(EM_DIAGRAM):   else do;
777979    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
777980    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
777981    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
777982    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
777983    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777984    +   end;
MPRINT(EM_DIAGRAM):   end;
777985    +end;
MPRINT(EM_DIAGRAM):   end;
777986    +
777987    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
777988    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
777989    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
777990    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
777991    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
777992    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
777993    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
777994    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
777995    +end;
MPRINT(EM_DIAGRAM):   end;
777996    +else do;
MPRINT(EM_DIAGRAM):   else do;
777997    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
777998    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
777999    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
778000    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
778001    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
778002    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
778003    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
778004    +   end;
MPRINT(EM_DIAGRAM):   end;
778005    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
778006    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
778007    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
778008    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
778009    +   end;
MPRINT(EM_DIAGRAM):   end;
778010    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
778011    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
778012    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
778013    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
778014    +   end;
MPRINT(EM_DIAGRAM):   end;
778015    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
778016    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
778017    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
778018    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
778019    +   end;
MPRINT(EM_DIAGRAM):   end;
778020    +   else do;
MPRINT(EM_DIAGRAM):   else do;
778021    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
778022    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
778023    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
778024    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
778025    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
778026    +   end;
MPRINT(EM_DIAGRAM):   end;
778027    +end;
MPRINT(EM_DIAGRAM):   end;
778028    +
778029    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
778030    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
778031    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
778032    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
778033    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
778034    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
778035    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
778036    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
778037    +end;
MPRINT(EM_DIAGRAM):   end;
778038    +else do;
MPRINT(EM_DIAGRAM):   else do;
778039    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
778040    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
778041    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
778042    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
778043    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
778044    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
778045    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
778046    +   end;
MPRINT(EM_DIAGRAM):   end;
778047    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
778048    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
778049    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
778050    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
778051    +   end;
MPRINT(EM_DIAGRAM):   end;
778052    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
778053    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
778054    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
778055    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
778056    +   end;
MPRINT(EM_DIAGRAM):   end;
778057    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
778058    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
778059    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
778060    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
778061    +   end;
MPRINT(EM_DIAGRAM):   end;
778062    +   else do;
MPRINT(EM_DIAGRAM):   else do;
778063    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
778064    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
778065    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
778066    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
778067    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
778068    +   end;
MPRINT(EM_DIAGRAM):   end;
778069    +end;
MPRINT(EM_DIAGRAM):   end;
778070    +
778071    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
778072    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
778073    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
778074    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
778075    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
778076    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
778077    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
778078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
778079    +end;
MPRINT(EM_DIAGRAM):   end;
778080    +else do;
MPRINT(EM_DIAGRAM):   else do;
778081    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
778082    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
778083    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
778084    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
778085    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
778086    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
778087    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
778088    +   end;
MPRINT(EM_DIAGRAM):   end;
778089    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
778090    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
778091    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
778092    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
778093    +   end;
MPRINT(EM_DIAGRAM):   end;
778094    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
778095    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
778096    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
778097    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
778098    +   end;
MPRINT(EM_DIAGRAM):   end;
778099    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
778100    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
778101    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
778102    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
778103    +   end;
MPRINT(EM_DIAGRAM):   end;
778104    +   else do;
MPRINT(EM_DIAGRAM):   else do;
778105    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
778106    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
778107    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
778108    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
778109    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
778110    +   end;
MPRINT(EM_DIAGRAM):   end;
778111    +end;
MPRINT(EM_DIAGRAM):   end;
778112    +
778113    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
778114    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
778115    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
778116    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
778117    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
778118    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
778119    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
778120    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
778121    +end;
MPRINT(EM_DIAGRAM):   end;
778122    +else do;
MPRINT(EM_DIAGRAM):   else do;
778123    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
778124    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
778125    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
778126    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
778127    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
778128    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
778129    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
778130    +   end;
MPRINT(EM_DIAGRAM):   end;
778131    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
778132    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
778133    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
778134    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
778135    +   end;
MPRINT(EM_DIAGRAM):   end;
778136    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
778137    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
778138    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
778139    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
778140    +   end;
MPRINT(EM_DIAGRAM):   end;
778141    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
778142    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
778143    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
778144    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
778145    +   end;
MPRINT(EM_DIAGRAM):   end;
778146    +   else do;
MPRINT(EM_DIAGRAM):   else do;
778147    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
778148    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
778149    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
778150    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
778151    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
778152    +   end;
MPRINT(EM_DIAGRAM):   end;
778153    +end;
MPRINT(EM_DIAGRAM):   end;
778154    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778155    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
778156    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778158    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
778159    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778160    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
778161    +   H11  =    -0.20808401117374 * GRP_AcceptedCmp52  +      1.5952064946991 *
778162    +        GRP_Frq2  +    -0.01225273525848 * GRP_Frq3  +    -0.62835698024634 *
778163    +        GRP_Frq4  +     0.44314401678348 * GRP_Income2
778164    +          +     0.89646769323205 * GRP_Income3  +    -0.90649183264259 *
778165    +        GRP_Income4  +    -0.55176085229947 * GRP_Mnt2
778166    +          +    -0.28020133968753 * GRP_Mnt3  +     0.17871933677614 * GRP_Mnt4
778167    +          +     0.38585041088838 * GRP_MntFishProducts2
778168    +          +    -0.22597951859521 * GRP_MntFishProducts3
778169    +          +    -0.12591354177724 * GRP_MntFishProducts4
778170    +          +     0.41517790727814 * GRP_MntGoldProds2
778171    +          +    -0.01783554546067 * GRP_MntGoldProds3
778172    +          +    -0.05254364640808 * GRP_MntGoldProds4
778173    +          +     0.11041766264422 * GRP_MntMeatProducts2
778174    +          +     0.80734417241917 * GRP_MntMeatProducts3
778175    +          +    -0.58385299076265 * GRP_MntMeatProducts4
778176    +          +     0.63351163942796 * GRP_MntWines2  +      0.4938617622427 *
778177    +        GRP_MntWines3  +     0.02607762678073 * GRP_MntWines4
778178    +          +    -1.43194573733764 * GRP_NumCatalogPurchases3
778179    +          +     0.55178119754186 * GRP_NumCatalogPurchases4
778180    +          +      -1.830671366144 * GRP_NumDistPurchases2
778181    +          +    -1.17053785506362 * GRP_NumDistPurchases3
778182    +          +     0.98564208160287 * GRP_NumDistPurchases4
778183    +          +    -0.22019170543618 * GRP_NumWebPurchases2
778184    +          +     0.12596691753667 * GRP_NumWebPurchases3
778185    +          +    -0.02882568244969 * GRP_NumWebPurchases4
778186    +          +    -0.21302125337044 * GRP_RFMstat2  +     0.08158805477511 *
778187    +        GRP_RFMstat3  +     -0.2631946184422 * GRP_RFMstat4
778188    +          +      0.1161399236304 * GRP_RMntFrq2  +     0.60576408771811 *
778189    +        GRP_RMntFrq3  +    -0.25254086880004 * GRP_RMntFrq4
778190    +          +      0.8664956591594 * GRP_Recency2  +     0.06243974875226 *
778191    +        GRP_Recency3  +    -0.38266930051466 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20808401117374 * GRP_AcceptedCmp52 + 1.5952064946991 * GRP_Frq2 
+ -0.01225273525848 * GRP_Frq3 + -0.62835698024634 * GRP_Frq4 + 0.44314401678348 * GRP_Income2 
+ 0.89646769323205 * GRP_Income3 + -0.90649183264259 * GRP_Income4 + -0.55176085229947 * 
GRP_Mnt2 + -0.28020133968753 * GRP_Mnt3 + 0.17871933677614 * GRP_Mnt4 + 0.38585041088838 * 
GRP_MntFishProducts2 + -0.22597951859521 * GRP_MntFishProducts3 + -0.12591354177724 * 
GRP_MntFishProducts4 + 0.41517790727814 * GRP_MntGoldProds2 + -0.01783554546067 * 
GRP_MntGoldProds3 + -0.05254364640808 * GRP_MntGoldProds4 + 0.11041766264422 * 
GRP_MntMeatProducts2 + 0.80734417241917 * GRP_MntMeatProducts3 + -0.58385299076265 * 
GRP_MntMeatProducts4 + 0.63351163942796 * GRP_MntWines2 + 0.4938617622427 * GRP_MntWines3 + 
0.02607762678073 * GRP_MntWines4 + -1.43194573733764 * GRP_NumCatalogPurchases3 + 
0.55178119754186 * GRP_NumCatalogPurchases4 + -1.830671366144 * GRP_NumDistPurchases2 + 
-1.17053785506362 * GRP_NumDistPurchases3 + 0.98564208160287 * GRP_NumDistPurchases4 + 
-0.22019170543618 * GRP_NumWebPurchases2 + 0.12596691753667 * GRP_NumWebPurchases3 + 
-0.02882568244969 * GRP_NumWebPurchases4 + -0.21302125337044 * GRP_RFMstat2 + 0.08158805477511 
* GRP_RFMstat3 + -0.2631946184422 * GRP_RFMstat4 + 0.1161399236304 * GRP_RMntFrq2 + 
0.60576408771811 * GRP_RMntFrq3 + -0.25254086880004 * GRP_RMntFrq4 + 0.8664956591594 * 
GRP_Recency2 + 0.06243974875226 * GRP_Recency3 + -0.38266930051466 * GRP_Recency4 ;
778192    +   H12  =    -1.49044065215331 * GRP_AcceptedCmp52  +     0.29747214763886 *
778193    +        GRP_Frq2  +     0.25845091468379 * GRP_Frq3  +    -0.12253400308729 *
778194    +        GRP_Frq4  +     0.67026230943159 * GRP_Income2
778195    +          +    -0.07529723714567 * GRP_Income3  +    -0.00656076113338 *
778196    +        GRP_Income4  +     0.11866607313287 * GRP_Mnt2
778197    +          +     0.50886534936331 * GRP_Mnt3  +    -0.40624874712256 * GRP_Mnt4
778198    +          +     0.07903512198302 * GRP_MntFishProducts2
778199    +          +     0.30094355054178 * GRP_MntFishProducts3
778200    +          +      0.1592854004233 * GRP_MntFishProducts4
778201    +          +    -0.71778183892118 * GRP_MntGoldProds2
778202    +          +    -0.00758784099151 * GRP_MntGoldProds3
778203    +          +    -0.05641788275636 * GRP_MntGoldProds4
778204    +          +    -1.00661051196007 * GRP_MntMeatProducts2
778205    +          +     -0.7897102230697 * GRP_MntMeatProducts3
778206    +          +     0.82643513947121 * GRP_MntMeatProducts4
778207    +          +     0.29396736594116 * GRP_MntWines2  +    -0.23616802309365 *
778208    +        GRP_MntWines3  +    -0.53754288840118 * GRP_MntWines4
778209    +          +     0.51299707442487 * GRP_NumCatalogPurchases3
778210    +          +    -0.50131971617023 * GRP_NumCatalogPurchases4
778211    +          +     -1.0244605634362 * GRP_NumDistPurchases2
778212    +          +     0.62371418531403 * GRP_NumDistPurchases3
778213    +          +     0.01028523337025 * GRP_NumDistPurchases4
778214    +          +     0.57550765494375 * GRP_NumWebPurchases2
778215    +          +     0.06426605759446 * GRP_NumWebPurchases3
778216    +          +     -0.0925907148366 * GRP_NumWebPurchases4
778217    +          +    -0.38247659021772 * GRP_RFMstat2  +    -0.19029293671326 *
778218    +        GRP_RFMstat3  +     0.43474715375598 * GRP_RFMstat4
778219    +          +     0.50016038621788 * GRP_RMntFrq2  +    -0.67187730592002 *
778220    +        GRP_RMntFrq3  +    -0.23217968284532 * GRP_RMntFrq4
778221    +          +     0.58211670962274 * GRP_Recency2  +     0.40065427673317 *
778222    +        GRP_Recency3  +     0.03489926907231 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -1.49044065215331 * GRP_AcceptedCmp52 + 0.29747214763886 * 
GRP_Frq2 + 0.25845091468379 * GRP_Frq3 + -0.12253400308729 * GRP_Frq4 + 0.67026230943159 * 
GRP_Income2 + -0.07529723714567 * GRP_Income3 + -0.00656076113338 * GRP_Income4 + 
0.11866607313287 * GRP_Mnt2 + 0.50886534936331 * GRP_Mnt3 + -0.40624874712256 * GRP_Mnt4 + 
0.07903512198302 * GRP_MntFishProducts2 + 0.30094355054178 * GRP_MntFishProducts3 + 
0.1592854004233 * GRP_MntFishProducts4 + -0.71778183892118 * GRP_MntGoldProds2 + 
-0.00758784099151 * GRP_MntGoldProds3 + -0.05641788275636 * GRP_MntGoldProds4 + 
-1.00661051196007 * GRP_MntMeatProducts2 + -0.7897102230697 * GRP_MntMeatProducts3 + 
0.82643513947121 * GRP_MntMeatProducts4 + 0.29396736594116 * GRP_MntWines2 + -0.23616802309365 
* GRP_MntWines3 + -0.53754288840118 * GRP_MntWines4 + 0.51299707442487 * 
GRP_NumCatalogPurchases3 + -0.50131971617023 * GRP_NumCatalogPurchases4 + -1.0244605634362 * 
GRP_NumDistPurchases2 + 0.62371418531403 * GRP_NumDistPurchases3 + 0.01028523337025 * 
GRP_NumDistPurchases4 + 0.57550765494375 * GRP_NumWebPurchases2 + 0.06426605759446 * 
GRP_NumWebPurchases3 + -0.0925907148366 * GRP_NumWebPurchases4 + -0.38247659021772 * 
GRP_RFMstat2 + -0.19029293671326 * GRP_RFMstat3 + 0.43474715375598 * GRP_RFMstat4 + 
0.50016038621788 * GRP_RMntFrq2 + -0.67187730592002 * GRP_RMntFrq3 + -0.23217968284532 * 
GRP_RMntFrq4 + 0.58211670962274 * GRP_Recency2 + 0.40065427673317 * GRP_Recency3 + 
0.03489926907231 * GRP_Recency4 ;
778223    +   H11  =    -0.62541132065477 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.62541132065477 + H11 ;
778224    +   H12  =     1.33919796685016 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.33919796685016 + H12 ;
778225    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
778226    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
778227    +END;
MPRINT(EM_DIAGRAM):   END;
778228    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
778229    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
778230    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
778231    +END;
MPRINT(EM_DIAGRAM):   END;
778232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778233    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
778234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778235    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
778236    +   P_DepVar1  =     2.63836588308478 * H11  +     2.61621667267981 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.63836588308478 * H11 + 2.61621667267981 * H12 ;
778237    +   P_DepVar1  =    -1.97856411598138 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.97856411598138 + P_DepVar1 ;
778238    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
778239    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
778240    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
778241    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
778242    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
778243    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
778244    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
778245    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
778246    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
778247    +END;
MPRINT(EM_DIAGRAM):   END;
778248    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
778249    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
778250    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
778251    +END;
MPRINT(EM_DIAGRAM):   END;
778252    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
778253    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
778254    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
778255    +END;
MPRINT(EM_DIAGRAM):   END;
778256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778257    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
778258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
778259    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
778260    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
778261    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
778262    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
778263    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
778264    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
778265    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
778266    +END;
MPRINT(EM_DIAGRAM):   END;
778267    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
778268    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
778269    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
778270    +drop
778271    +H11
778272    +H12
778273    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
778274     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
778275     quit;
778276     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
778277     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
778278     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
778279     retain ID 2 Node "Neural19";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural19";
778280     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
778281     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1519 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1519 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778282     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
778283     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778284     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1519 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1519 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778285     proc sort data=EMWS8.Neural19_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural19_variableset out=_temp2(keep=NAME CREATOR);
778286     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778287     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL19_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778288     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778289     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
778290     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
778291     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778292     proc contents data=EMWS8.Neural19_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural19_train out=_meta(keep=NAME) noprint;
778293     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

778294     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
778295     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778296     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778297     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778298     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
778299     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778300     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778301     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
778302     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
778302   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 804 rows and 5 columns.

778303     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778304     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
778305     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 804 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 804 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778306     filename _pref
778306   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
778307     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
778308     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
778309    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
778310    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
778311    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
778312    +
778313    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778314    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
778315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778316    +LABEL GRP_AcceptedCmp5 =
778317    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
778318    +
778319    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
778320    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
778321    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
778322    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
778323    +end;
MPRINT(EM_DIAGRAM):   end;
778324    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
778325    +if (_UFORMAT eq '0'
778326    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
778327    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
778328    +end;
MPRINT(EM_DIAGRAM):   end;
778329    +else
778330    +if (_UFORMAT eq '1'
778331    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
778332    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
778333    +end;
MPRINT(EM_DIAGRAM):   end;
778334    +else do;
MPRINT(EM_DIAGRAM):   else do;
778335    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
778336    +end;
MPRINT(EM_DIAGRAM):   end;
778337    +end;
MPRINT(EM_DIAGRAM):   end;
778338    +
778339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778340    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
778341    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778342    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
778343    +
778344    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
778345    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
778346    +end;
MPRINT(EM_DIAGRAM):   end;
778347    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
778348    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
778349    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
778350    +end;
MPRINT(EM_DIAGRAM):   end;
778351    +else
778352    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
778353    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
778354    +end;
MPRINT(EM_DIAGRAM):   end;
778355    +else
778356    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
778357    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
778358    +end;
MPRINT(EM_DIAGRAM):   end;
778359    +else
778360    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
778361    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
778362    +end;
MPRINT(EM_DIAGRAM):   end;
778363    +end;
MPRINT(EM_DIAGRAM):   end;
778364    +
778365    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778366    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
778367    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778368    +LABEL GRP_Income =
778369    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
778370    +
778371    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
778372    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
778373    +end;
MPRINT(EM_DIAGRAM):   end;
778374    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
778375    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
778376    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
778377    +end;
MPRINT(EM_DIAGRAM):   end;
778378    +else
778379    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
778380    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
778381    +end;
MPRINT(EM_DIAGRAM):   end;
778382    +else
778383    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
778384    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
778385    +end;
MPRINT(EM_DIAGRAM):   end;
778386    +else
778387    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
778388    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
778389    +end;
MPRINT(EM_DIAGRAM):   end;
778390    +end;
MPRINT(EM_DIAGRAM):   end;
778391    +
778392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778393    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
778394    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778395    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
778396    +
778397    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
778398    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
778399    +end;
MPRINT(EM_DIAGRAM):   end;
778400    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
778401    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
778402    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
778403    +end;
MPRINT(EM_DIAGRAM):   end;
778404    +else
778405    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
778406    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
778407    +end;
MPRINT(EM_DIAGRAM):   end;
778408    +else
778409    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
778410    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
778411    +end;
MPRINT(EM_DIAGRAM):   end;
778412    +else
778413    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
778414    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
778415    +end;
MPRINT(EM_DIAGRAM):   end;
778416    +end;
MPRINT(EM_DIAGRAM):   end;
778417    +
778418    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778419    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
778420    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778421    +LABEL GRP_MntFishProducts =
778422    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
778423    +
778424    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
778425    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
778426    +end;
MPRINT(EM_DIAGRAM):   end;
778427    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
778428    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
778429    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
778430    +end;
MPRINT(EM_DIAGRAM):   end;
778431    +else
778432    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
778433    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
778434    +end;
MPRINT(EM_DIAGRAM):   end;
778435    +else
778436    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
778437    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
778438    +end;
MPRINT(EM_DIAGRAM):   end;
778439    +else
778440    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
778441    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
778442    +end;
MPRINT(EM_DIAGRAM):   end;
778443    +end;
MPRINT(EM_DIAGRAM):   end;
778444    +
778445    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778446    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
778447    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778448    +LABEL GRP_MntGoldProds =
778449    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
778450    +
778451    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
778452    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
778453    +end;
MPRINT(EM_DIAGRAM):   end;
778454    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
778455    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
778456    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
778457    +end;
MPRINT(EM_DIAGRAM):   end;
778458    +else
778459    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
778460    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
778461    +end;
MPRINT(EM_DIAGRAM):   end;
778462    +else
778463    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
778464    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
778465    +end;
MPRINT(EM_DIAGRAM):   end;
778466    +else
778467    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
778468    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
778469    +end;
MPRINT(EM_DIAGRAM):   end;
778470    +end;
MPRINT(EM_DIAGRAM):   end;
778471    +
778472    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778473    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
778474    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778475    +LABEL GRP_MntMeatProducts =
778476    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
778477    +
778478    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
778479    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
778480    +end;
MPRINT(EM_DIAGRAM):   end;
778481    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
778482    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
778483    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
778484    +end;
MPRINT(EM_DIAGRAM):   end;
778485    +else
778486    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
778487    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
778488    +end;
MPRINT(EM_DIAGRAM):   end;
778489    +else
778490    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
778491    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
778492    +end;
MPRINT(EM_DIAGRAM):   end;
778493    +else
778494    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
778495    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
778496    +end;
MPRINT(EM_DIAGRAM):   end;
778497    +end;
MPRINT(EM_DIAGRAM):   end;
778498    +
778499    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778500    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
778501    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778502    +LABEL GRP_MntWines =
778503    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
778504    +
778505    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
778506    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
778507    +end;
MPRINT(EM_DIAGRAM):   end;
778508    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
778509    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
778510    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
778511    +end;
MPRINT(EM_DIAGRAM):   end;
778512    +else
778513    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
778514    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
778515    +end;
MPRINT(EM_DIAGRAM):   end;
778516    +else
778517    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
778518    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
778519    +end;
MPRINT(EM_DIAGRAM):   end;
778520    +else
778521    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
778522    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
778523    +end;
MPRINT(EM_DIAGRAM):   end;
778524    +end;
MPRINT(EM_DIAGRAM):   end;
778525    +
778526    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778527    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
778528    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778529    +LABEL GRP_NumCatalogPurchases =
778530    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
778531    +
778532    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
778533    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
778534    +end;
MPRINT(EM_DIAGRAM):   end;
778535    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
778536    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
778537    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
778538    +end;
MPRINT(EM_DIAGRAM):   end;
778539    +else
778540    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
778541    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
778542    +end;
MPRINT(EM_DIAGRAM):   end;
778543    +else
778544    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
778545    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
778546    +end;
MPRINT(EM_DIAGRAM):   end;
778547    +else
778548    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
778549    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
778550    +end;
MPRINT(EM_DIAGRAM):   end;
778551    +end;
MPRINT(EM_DIAGRAM):   end;
778552    +
778553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778554    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
778555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778556    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
778557    +
778558    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
778559    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
778560    +end;
MPRINT(EM_DIAGRAM):   end;
778561    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
778562    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
778563    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
778564    +end;
MPRINT(EM_DIAGRAM):   end;
778565    +else
778566    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
778567    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
778568    +end;
MPRINT(EM_DIAGRAM):   end;
778569    +else
778570    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
778571    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
778572    +end;
MPRINT(EM_DIAGRAM):   end;
778573    +else
778574    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
778575    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
778576    +end;
MPRINT(EM_DIAGRAM):   end;
778577    +end;
MPRINT(EM_DIAGRAM):   end;
778578    +
778579    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778580    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
778581    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778582    +LABEL GRP_NumWebPurchases =
778583    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
778584    +
778585    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
778586    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
778587    +end;
MPRINT(EM_DIAGRAM):   end;
778588    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
778589    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
778590    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
778591    +end;
MPRINT(EM_DIAGRAM):   end;
778592    +else
778593    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
778594    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
778595    +end;
MPRINT(EM_DIAGRAM):   end;
778596    +else
778597    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
778598    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
778599    +end;
MPRINT(EM_DIAGRAM):   end;
778600    +else
778601    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
778602    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
778603    +end;
MPRINT(EM_DIAGRAM):   end;
778604    +end;
MPRINT(EM_DIAGRAM):   end;
778605    +
778606    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778607    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
778608    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778609    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
778610    +
778611    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
778612    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
778613    +end;
MPRINT(EM_DIAGRAM):   end;
778614    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
778615    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
778616    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
778617    +end;
MPRINT(EM_DIAGRAM):   end;
778618    +else
778619    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
778620    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
778621    +end;
MPRINT(EM_DIAGRAM):   end;
778622    +else
778623    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
778624    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
778625    +end;
MPRINT(EM_DIAGRAM):   end;
778626    +else
778627    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
778628    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
778629    +end;
MPRINT(EM_DIAGRAM):   end;
778630    +end;
MPRINT(EM_DIAGRAM):   end;
778631    +
778632    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778633    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
778634    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778635    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
778636    +
778637    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
778638    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
778639    +end;
MPRINT(EM_DIAGRAM):   end;
778640    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
778641    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
778642    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
778643    +end;
MPRINT(EM_DIAGRAM):   end;
778644    +else
778645    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
778646    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
778647    +end;
MPRINT(EM_DIAGRAM):   end;
778648    +else
778649    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
778650    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
778651    +end;
MPRINT(EM_DIAGRAM):   end;
778652    +else
778653    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
778654    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
778655    +end;
MPRINT(EM_DIAGRAM):   end;
778656    +end;
MPRINT(EM_DIAGRAM):   end;
778657    +
778658    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778659    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
778660    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778661    +LABEL GRP_Recency =
778662    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
778663    +
778664    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
778665    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
778666    +end;
MPRINT(EM_DIAGRAM):   end;
778667    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
778668    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
778669    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
778670    +end;
MPRINT(EM_DIAGRAM):   end;
778671    +else
778672    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
778673    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
778674    +end;
MPRINT(EM_DIAGRAM):   end;
778675    +else
778676    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
778677    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
778678    +end;
MPRINT(EM_DIAGRAM):   end;
778679    +else
778680    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
778681    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
778682    +end;
MPRINT(EM_DIAGRAM):   end;
778683    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
778684     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
778685     quit;
778686     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
778687     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
778688     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
778689     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
778690     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
778691     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778692     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
778693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778694     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778695     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
778696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778698     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778699     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
778700     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
778701     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778702     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
778703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

778704     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
778705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778707     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778708     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
778709     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778710     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778711     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
778712     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
778712   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

778713     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778714     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
778715     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 819 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778716     filename _pref
778716   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
778717     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
778718     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
778719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778720    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
778721    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
778722    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
778723    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
778724    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
778725     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
778726     quit;
778727     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
778728     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
778729     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
778730     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
778731     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
778732     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778733     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
778734     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778735     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778736     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
778737     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778738     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778739     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778740     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
778741     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
778742     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778743     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
778744     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

778745     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
778746     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778747     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778748     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778749     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
778750     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778751     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778752     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
778753     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
778753   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

778754     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778755     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
778756     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 823 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778757     filename _pref
778757   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
778758     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
778759     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
778760    +
778761    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
778762    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
778762   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
778763    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
778764    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
778765    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
778766    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
778767    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
778768     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
778769     quit;
778770     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
778771     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
778772     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
778773     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
778774     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
778775     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778776     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
778777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778779     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
778780     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778781     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778782     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778783     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
778784     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
778785     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778786     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
778787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778788     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
778789     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778790     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778791     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778792     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
778793     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778794     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778795     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
778796     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
778796   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

778797     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778798     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
778799     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 862 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778800     filename _pref
778800   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
778801     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
778802     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
778803    +
778804    +
778805    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
778806    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
778807    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
778808    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
778809    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
778810    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778811    +
778812    +
778813    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
778814    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
778815    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
778816    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
778817    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
778818    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778819    +
778820    +
778821    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
778822    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
778823    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
778824    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
778825    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
778826    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778827    +
778828    +
778829    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
778830    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
778831    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
778832    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
778833    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
778834    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778835    +
778836    +
778837    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
778838    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
778839    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
778840    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
778841    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
778842    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778843    +
778844    +
778845    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
778846    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
778847    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
778848    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
778849    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
778850    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778851    +
778852    +
778853    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
778854    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
778855    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
778856    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
778857    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
778858    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778859    +
778860    +
778861    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
778862    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
778863    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
778864    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
778865    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
778866    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
778867    +if
778868    +_FILTERNORM1 not in ( '.')
778869    + and
778870    +_FILTERNORM2 not in ( '.')
778871    + and
778872    +_FILTERNORM3 not in ( '.')
778873    + and
778874    +_FILTERNORM4 not in ( '.')
778875    + and
778876    +_FILTERNORM5 not in ( '.')
778877    + and
778878    +_FILTERNORM6 not in ( '.')
778879    + and
778880    +_FILTERNORM7 not in ( ' ')
778881    + and
778882    +_FILTERNORM8 not in ( ' ')
778883    +and
778884    +( Dt_Customer ne .)
778885    +and ( Income ne . and (Income<=107000))
778886    +and ( Kidhome ne .)
778887    +and ( MntFishProducts ne .)
778888    +and ( MntFruits ne .)
778889    +and ( MntGoldProds ne .)
778890    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
778891    +and ( MntSweetProducts ne .)
778892    +and ( MntWines ne .)
778893    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
778894    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
778895    +and ( NumStorePurchases ne .)
778896    +and ( NumWebPurchases ne .)
778897    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
778898    +and ( Recency ne .)
778899    +and ( Teenhome ne .)
778900    +and ( Year_Birth ne .)
778901    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
778902    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
778903    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
778904    +end;
MPRINT(EM_DIAGRAM):   end;
778905    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
778906    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
778907     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
778908     quit;
778909     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
778910     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
778911     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
778912     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
778913     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
778914     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778915     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
778916     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778917     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778918     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
778919     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778921     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778922     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
778923     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
778924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778925     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
778926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

778927     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
778928     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778929     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778930     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
778931     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
778932     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
778933     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

778934     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
778935     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
778935   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

778936     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778937     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
778938     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

778939     %macro varDept(fcmpdata=,id=);
778940     %global nobs&id scoreFlag&id;
778941     %let scoreFlag&id = 0;
778942     %if &id=1 or ^&fcmpStart %then %do;
778943     proc sort data=&fcmpdata out=_temp&id nodupkey;
778944     by NAME;
778945     where id=&id and LHS in( %let j=1;
778946     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
778947     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
778948     "&var" %let j = %eval(&j+1);
778949     %end;
778950     );
778951     run;
778952     %let dsid = %sysfunc(open(_temp&id));
778953     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
778954     %let dsid = %sysfunc(close(&dsid));
778955     %if &&nobs&id %then %do;
778956     %let scoreFlag&id = 1;
778957     %let fcmpStart = 1;
778958     %end;
778959     %else %let fcmpStart = 0;
778960     %end;
778961     %else %do;
778962     proc sort data=&fcmpdata out=_tempid;
778963     where id=&id;
778964     by LHS;
778965     run;
778966     %let dsid = %sysfunc(open(_tempid));
778967     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
778968     %let dsid = %sysfunc(close(&dsid));
778969     %if ^&&nobs&id %then %do;
778970     proc datasets lib=work nolist;
778971     delete _tempid;
778972     run;
778973     quit;
778974     %end;
778975     %else %do;
778976     data _tempAll;
778977     set %let j=%eval(&id-1);
778978     %do x=1 %to &j;
778979     %if &&nobs&x %then %do;
778980     _temp&x %end;
778981     %end;
778982     ;
778983     run;
778984     proc sql;
778985     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
778985   ! work._tempid p2 where p.name=p2.lhs;
778986     quit;
778987     data _temp&id;
778988     set _temp&id;
778989     where LHS ne '' and NAME ne '' and Node ne '';
778990     run;
778991     proc datasets lib=work nolist;
778992     delete _tempAll;
778993     run;
778994     %let dsid = %sysfunc(open(_temp&id));
778995     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
778996     %let dsid = %sysfunc(close(&dsid));
778997     %if ^&&nobs&id %then %do;
778998     proc datasets lib=work nolist;
778999     delete _temp&id;
779000     run;
779001     quit;
779002     %end;
779003     %else %do;
779004     %let scoreFlag&id = 1;
779005     data _temp&id;
779006     set _temp&id;
779007     where LHS ne NAME and node ne '';
779008     run;
779009     %let dsid = %sysfunc(open(_temp&id));
779010     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
779011     %let dsid = %sysfunc(close(&dsid));
779012     %if ^&&nobs&id %then %do;
779013     proc datasets lib=work nolist;
779014     delete _temp&id;
779015     run;
779016     quit;
779017     %end;
779018     %else %do;
779019     proc sort data=_temp&id nodupkey;
779020     by LHS NAME;
779021     run;
779022     %end;
779023     %end;
779024     %end;
779025     %end;
779026     %mend varDept;
779027     %macro optCode(outdata=fcmpdata);
779028     %global fcmpStart;
779029     %let fcmpStart = 0;
779030     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
779031     %let NumNodes=9;
779032     %do k=1 %to &NumNodes;
779033     %vardept(fcmpdata=&outdata, id=&k);
779034     %end;
779035     %mend optCode;
779036     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

779037     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
779038     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
779039     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
779040     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

779041     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
779042     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
779043     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
779044     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779045     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
779046     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
779046   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

779047     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

779048     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
779049     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
779050     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779051     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
779052     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
779053     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
779054     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779055     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
779056     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
779057     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
779058     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

779059     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
779060     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
779060   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

779061     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779062     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
779063     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
779064     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

779065     filename _pref
779065   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas";
779066     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
779067     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas.
779068    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
779069    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
779070    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
779071    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
779072    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
779073    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
779074    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
779075    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
779076    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
779077    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
779078    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
779079    +LENGTH _WARN_ $4
779080    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
779081    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
779082    +
779083    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
779084    +
779085    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
779086    +
779087    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
779088    +
779089    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
779090    +
779091    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
779092    +
779093    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
779094    +
779095    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
779096    +
779097    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
779098    +
779099    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
779100    +
779101    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
779102    +
779103    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
779104    +
779105    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
779106    +
779107    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
779108    +
779109    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
779110    +
779111    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
779112    +
779113    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
779114    +
779115    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
779116    +
779117    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
779118    +
779119    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
779120    +
779121    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
779122    +
779123    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
779124    +
779125    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
779126    +
779127    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
779128    +
779129    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
779130    +
779131    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
779132    +
779133    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
779134    +
779135    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
779136    +
779137    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
779138    +
779139    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
779140    +
779141    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
779142    +
779143    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
779144    +
779145    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
779146    +
779147    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
779148    +
779149    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
779150    +
779151    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
779152    +
779153    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
779154    +
779155    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
779156    +
779157    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
779158    +
779159    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
779160    +
779161    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
779162    +
779163    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
779164    +
779165    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
779166    +
779167    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
779168    +
779169    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
779170    +
779171    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
779172    +
779173    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
779174    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
779175    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
779176    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
779177    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779179    +end;
MPRINT(EM_DIAGRAM):   end;
779180    +else do;
MPRINT(EM_DIAGRAM):   else do;
779181    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779182    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
779183    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779184    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
779185    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
779186    +   end;
MPRINT(EM_DIAGRAM):   end;
779187    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
779188    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
779189    +   end;
MPRINT(EM_DIAGRAM):   end;
779190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779191    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
779192    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779193    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779194    +   end;
MPRINT(EM_DIAGRAM):   end;
779195    +end;
MPRINT(EM_DIAGRAM):   end;
779196    +
779197    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
779198    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
779199    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
779200    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
779201    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
779202    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
779203    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779204    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779205    +end;
MPRINT(EM_DIAGRAM):   end;
779206    +else do;
MPRINT(EM_DIAGRAM):   else do;
779207    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779208    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
779209    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779210    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
779211    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
779212    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
779213    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
779214    +   end;
MPRINT(EM_DIAGRAM):   end;
779215    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
779216    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
779217    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
779218    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
779219    +   end;
MPRINT(EM_DIAGRAM):   end;
779220    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779221    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
779222    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
779223    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
779224    +   end;
MPRINT(EM_DIAGRAM):   end;
779225    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779226    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
779227    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
779228    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
779229    +   end;
MPRINT(EM_DIAGRAM):   end;
779230    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779231    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
779232    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
779233    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
779234    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779235    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779236    +   end;
MPRINT(EM_DIAGRAM):   end;
779237    +end;
MPRINT(EM_DIAGRAM):   end;
779238    +
779239    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
779240    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
779241    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
779242    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
779243    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
779244    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
779245    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779246    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779247    +end;
MPRINT(EM_DIAGRAM):   end;
779248    +else do;
MPRINT(EM_DIAGRAM):   else do;
779249    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779250    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
779251    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779252    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
779253    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
779254    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
779255    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
779256    +   end;
MPRINT(EM_DIAGRAM):   end;
779257    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779258    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
779259    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
779260    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
779261    +   end;
MPRINT(EM_DIAGRAM):   end;
779262    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
779263    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
779264    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
779265    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
779266    +   end;
MPRINT(EM_DIAGRAM):   end;
779267    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779268    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
779269    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
779270    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
779271    +   end;
MPRINT(EM_DIAGRAM):   end;
779272    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779273    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
779274    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
779275    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
779276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779278    +   end;
MPRINT(EM_DIAGRAM):   end;
779279    +end;
MPRINT(EM_DIAGRAM):   end;
779280    +
779281    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
779282    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
779283    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
779284    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
779285    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
779286    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
779287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779289    +end;
MPRINT(EM_DIAGRAM):   end;
779290    +else do;
MPRINT(EM_DIAGRAM):   else do;
779291    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779292    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
779293    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779294    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779295    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
779296    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
779297    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
779298    +   end;
MPRINT(EM_DIAGRAM):   end;
779299    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779300    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
779301    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
779302    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
779303    +   end;
MPRINT(EM_DIAGRAM):   end;
779304    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779305    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
779306    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
779307    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
779308    +   end;
MPRINT(EM_DIAGRAM):   end;
779309    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779310    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
779311    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
779312    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
779313    +   end;
MPRINT(EM_DIAGRAM):   end;
779314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779315    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
779316    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
779317    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
779318    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779319    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779320    +   end;
MPRINT(EM_DIAGRAM):   end;
779321    +end;
MPRINT(EM_DIAGRAM):   end;
779322    +
779323    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
779324    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
779325    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
779326    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
779327    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
779328    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
779329    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779331    +end;
MPRINT(EM_DIAGRAM):   end;
779332    +else do;
MPRINT(EM_DIAGRAM):   else do;
779333    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779334    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
779335    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779336    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779337    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
779338    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
779339    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
779340    +   end;
MPRINT(EM_DIAGRAM):   end;
779341    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779342    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
779343    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
779344    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
779345    +   end;
MPRINT(EM_DIAGRAM):   end;
779346    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779347    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
779348    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
779349    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
779350    +   end;
MPRINT(EM_DIAGRAM):   end;
779351    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779352    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
779353    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
779354    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
779355    +   end;
MPRINT(EM_DIAGRAM):   end;
779356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779357    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
779358    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
779359    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
779360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779362    +   end;
MPRINT(EM_DIAGRAM):   end;
779363    +end;
MPRINT(EM_DIAGRAM):   end;
779364    +
779365    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
779366    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
779367    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
779368    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
779369    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
779370    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
779371    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779372    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779373    +end;
MPRINT(EM_DIAGRAM):   end;
779374    +else do;
MPRINT(EM_DIAGRAM):   else do;
779375    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779376    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
779377    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779378    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779379    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
779380    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
779381    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
779382    +   end;
MPRINT(EM_DIAGRAM):   end;
779383    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779384    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
779385    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
779386    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
779387    +   end;
MPRINT(EM_DIAGRAM):   end;
779388    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779389    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
779390    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
779391    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
779392    +   end;
MPRINT(EM_DIAGRAM):   end;
779393    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779394    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
779395    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
779396    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
779397    +   end;
MPRINT(EM_DIAGRAM):   end;
779398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779399    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
779400    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
779401    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
779402    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779403    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779404    +   end;
MPRINT(EM_DIAGRAM):   end;
779405    +end;
MPRINT(EM_DIAGRAM):   end;
779406    +
779407    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
779408    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
779409    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
779410    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
779411    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
779412    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
779413    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779414    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779415    +end;
MPRINT(EM_DIAGRAM):   end;
779416    +else do;
MPRINT(EM_DIAGRAM):   else do;
779417    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779418    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
779419    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779420    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779421    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
779422    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
779423    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
779424    +   end;
MPRINT(EM_DIAGRAM):   end;
779425    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779426    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
779427    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
779428    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
779429    +   end;
MPRINT(EM_DIAGRAM):   end;
779430    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779431    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
779432    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
779433    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
779434    +   end;
MPRINT(EM_DIAGRAM):   end;
779435    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779436    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
779437    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
779438    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
779439    +   end;
MPRINT(EM_DIAGRAM):   end;
779440    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779441    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
779442    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
779443    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
779444    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779445    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779446    +   end;
MPRINT(EM_DIAGRAM):   end;
779447    +end;
MPRINT(EM_DIAGRAM):   end;
779448    +
779449    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
779450    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
779451    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
779452    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
779453    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
779454    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
779455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779457    +end;
MPRINT(EM_DIAGRAM):   end;
779458    +else do;
MPRINT(EM_DIAGRAM):   else do;
779459    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779460    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
779461    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779462    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779463    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
779464    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
779465    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
779466    +   end;
MPRINT(EM_DIAGRAM):   end;
779467    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779468    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
779469    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
779470    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
779471    +   end;
MPRINT(EM_DIAGRAM):   end;
779472    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779473    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
779474    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
779475    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
779476    +   end;
MPRINT(EM_DIAGRAM):   end;
779477    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779478    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
779479    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
779480    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
779481    +   end;
MPRINT(EM_DIAGRAM):   end;
779482    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779483    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
779484    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
779485    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
779486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779488    +   end;
MPRINT(EM_DIAGRAM):   end;
779489    +end;
MPRINT(EM_DIAGRAM):   end;
779490    +
779491    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
779492    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
779493    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
779494    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
779495    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
779496    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779497    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779498    +end;
MPRINT(EM_DIAGRAM):   end;
779499    +else do;
MPRINT(EM_DIAGRAM):   else do;
779500    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779501    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
779502    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779503    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779504    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
779505    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
779506    +   end;
MPRINT(EM_DIAGRAM):   end;
779507    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779508    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
779509    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
779510    +   end;
MPRINT(EM_DIAGRAM):   end;
779511    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779512    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
779513    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
779514    +   end;
MPRINT(EM_DIAGRAM):   end;
779515    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779516    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
779517    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
779518    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779519    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779520    +   end;
MPRINT(EM_DIAGRAM):   end;
779521    +end;
MPRINT(EM_DIAGRAM):   end;
779522    +
779523    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
779524    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
779525    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
779526    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
779527    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
779528    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
779529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779531    +end;
MPRINT(EM_DIAGRAM):   end;
779532    +else do;
MPRINT(EM_DIAGRAM):   else do;
779533    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779534    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
779535    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779536    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
779537    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
779538    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
779539    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
779540    +   end;
MPRINT(EM_DIAGRAM):   end;
779541    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779542    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
779543    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
779544    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
779545    +   end;
MPRINT(EM_DIAGRAM):   end;
779546    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779547    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
779548    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
779549    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
779550    +   end;
MPRINT(EM_DIAGRAM):   end;
779551    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
779552    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
779553    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
779554    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
779555    +   end;
MPRINT(EM_DIAGRAM):   end;
779556    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779557    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
779558    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
779559    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
779560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779562    +   end;
MPRINT(EM_DIAGRAM):   end;
779563    +end;
MPRINT(EM_DIAGRAM):   end;
779564    +
779565    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
779566    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
779567    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
779568    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
779569    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
779570    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
779571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779573    +end;
MPRINT(EM_DIAGRAM):   end;
779574    +else do;
MPRINT(EM_DIAGRAM):   else do;
779575    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779576    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
779577    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779578    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779579    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
779580    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
779581    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
779582    +   end;
MPRINT(EM_DIAGRAM):   end;
779583    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779584    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
779585    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
779586    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
779587    +   end;
MPRINT(EM_DIAGRAM):   end;
779588    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779589    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
779590    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
779591    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
779592    +   end;
MPRINT(EM_DIAGRAM):   end;
779593    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779594    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
779595    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
779596    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
779597    +   end;
MPRINT(EM_DIAGRAM):   end;
779598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779599    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
779600    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
779601    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
779602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779604    +   end;
MPRINT(EM_DIAGRAM):   end;
779605    +end;
MPRINT(EM_DIAGRAM):   end;
779606    +
779607    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
779608    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
779609    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
779610    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
779611    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
779612    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
779613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779615    +end;
MPRINT(EM_DIAGRAM):   end;
779616    +else do;
MPRINT(EM_DIAGRAM):   else do;
779617    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779618    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
779619    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779620    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
779621    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
779622    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
779623    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
779624    +   end;
MPRINT(EM_DIAGRAM):   end;
779625    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
779626    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
779627    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
779628    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
779629    +   end;
MPRINT(EM_DIAGRAM):   end;
779630    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779631    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
779632    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
779633    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
779634    +   end;
MPRINT(EM_DIAGRAM):   end;
779635    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779636    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
779637    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
779638    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
779639    +   end;
MPRINT(EM_DIAGRAM):   end;
779640    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779641    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
779642    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
779643    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
779644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779646    +   end;
MPRINT(EM_DIAGRAM):   end;
779647    +end;
MPRINT(EM_DIAGRAM):   end;
779648    +
779649    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
779650    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
779651    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
779652    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
779653    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
779654    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
779655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779657    +end;
MPRINT(EM_DIAGRAM):   end;
779658    +else do;
MPRINT(EM_DIAGRAM):   else do;
779659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779660    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
779661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779662    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
779663    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
779664    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
779665    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
779666    +   end;
MPRINT(EM_DIAGRAM):   end;
779667    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
779668    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
779669    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
779670    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
779671    +   end;
MPRINT(EM_DIAGRAM):   end;
779672    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779673    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
779674    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
779675    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
779676    +   end;
MPRINT(EM_DIAGRAM):   end;
779677    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779678    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
779679    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
779680    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
779681    +   end;
MPRINT(EM_DIAGRAM):   end;
779682    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779683    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
779684    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
779685    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
779686    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779687    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779688    +   end;
MPRINT(EM_DIAGRAM):   end;
779689    +end;
MPRINT(EM_DIAGRAM):   end;
779690    +
779691    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
779692    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
779693    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
779694    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
779695    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
779696    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
779697    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
779698    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779699    +end;
MPRINT(EM_DIAGRAM):   end;
779700    +else do;
MPRINT(EM_DIAGRAM):   else do;
779701    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
779702    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
779703    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
779704    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
779705    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
779706    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
779707    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
779708    +   end;
MPRINT(EM_DIAGRAM):   end;
779709    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
779710    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
779711    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
779712    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
779713    +   end;
MPRINT(EM_DIAGRAM):   end;
779714    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
779715    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
779716    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
779717    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
779718    +   end;
MPRINT(EM_DIAGRAM):   end;
779719    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
779720    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
779721    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
779722    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
779723    +   end;
MPRINT(EM_DIAGRAM):   end;
779724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
779725    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
779726    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
779727    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
779728    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
779729    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779730    +   end;
MPRINT(EM_DIAGRAM):   end;
779731    +end;
MPRINT(EM_DIAGRAM):   end;
779732    +
779733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779734    +*** Checking missing input Interval
779735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
779736    +
779737    +IF NMISS(
779738    +   Mnt   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Mnt ) THEN DO;
779739    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
779740    +
779741    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
779742    +END;
MPRINT(EM_DIAGRAM):   END;
779743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779744    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
779745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779746    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
779747    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
779748    +END;
MPRINT(EM_DIAGRAM):   END;
779749    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
779750    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
779751    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
779752    +END;
MPRINT(EM_DIAGRAM):   END;
779753    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779754    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
779755    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779757    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
779758    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779759    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
779760    +   H11  =    -0.05639626836962 * S_Mnt ;
MPRINT(EM_DIAGRAM):   H11 = -0.05639626836962 * S_Mnt ;
779761    +   H11  = H11  +      0.0860559154003 * GRP_AcceptedCmp52
779762    +          +    -0.19758814669075 * GRP_Frq2  +    -0.02279576157687 * GRP_Frq3
779763    +          +     0.07251746297433 * GRP_Frq4  +    -0.09591494883083 *
779764    +        GRP_Income2  +    -0.08058752115004 * GRP_Income3
779765    +          +     0.08588060203033 * GRP_Income4  +     0.05055584750276 *
779766    +        GRP_Mnt2  +     0.02545024725796 * GRP_Mnt3  +    -0.03224681694037 *
779767    +        GRP_Mnt4  +    -0.06357865903392 * GRP_MntFishProducts2
779768    +          +      -0.010948485075 * GRP_MntFishProducts3
779769    +          +     0.00472964640535 * GRP_MntFishProducts4
779770    +          +     0.02165833203111 * GRP_MntGoldProds2
779771    +          +     0.00197757925658 * GRP_MntGoldProds3
779772    +          +    -0.00068547899434 * GRP_MntGoldProds4
779773    +          +      0.1194292184341 * GRP_MntMeatProducts2
779774    +          +     0.01684568280033 * GRP_MntMeatProducts3
779775    +          +    -0.05297956014628 * GRP_MntMeatProducts4
779776    +          +    -0.11059672251142 * GRP_MntWines2  +     -0.0539431379238 *
779777    +        GRP_MntWines3  +     0.05538795967941 * GRP_MntWines4
779778    +          +     0.08963126282705 * GRP_NumCatalogPurchases3
779779    +          +    -0.00118154367452 * GRP_NumCatalogPurchases4
779780    +          +     0.23032337382095 * GRP_NumDistPurchases2
779781    +          +    -0.00108441464763 * GRP_NumDistPurchases3
779782    +          +    -0.04458982753158 * GRP_NumDistPurchases4
779783    +          +    -0.01380938735738 * GRP_NumWebPurchases2
779784    +          +    -0.01095215304735 * GRP_NumWebPurchases3
779785    +          +      0.0023394125329 * GRP_NumWebPurchases4
779786    +          +     0.05201697043713 * GRP_RFMstat2  +     0.00763917877705 *
779787    +        GRP_RFMstat3  +    -0.01926793167425 * GRP_RFMstat4
779788    +          +      -0.050495884949 * GRP_RMntFrq2  +    -0.03144438155835 *
779789    +        GRP_RMntFrq3  +     0.06453623203831 * GRP_RMntFrq4
779790    +          +    -0.15989883925465 * GRP_Recency2  +    -0.04220884971315 *
779791    +        GRP_Recency3  +     0.04819510617026 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.0860559154003 * GRP_AcceptedCmp52 + -0.19758814669075 * 
GRP_Frq2 + -0.02279576157687 * GRP_Frq3 + 0.07251746297433 * GRP_Frq4 + -0.09591494883083 * 
GRP_Income2 + -0.08058752115004 * GRP_Income3 + 0.08588060203033 * GRP_Income4 + 
0.05055584750276 * GRP_Mnt2 + 0.02545024725796 * GRP_Mnt3 + -0.03224681694037 * GRP_Mnt4 + 
-0.06357865903392 * GRP_MntFishProducts2 + -0.010948485075 * GRP_MntFishProducts3 + 
0.00472964640535 * GRP_MntFishProducts4 + 0.02165833203111 * GRP_MntGoldProds2 + 
0.00197757925658 * GRP_MntGoldProds3 + -0.00068547899434 * GRP_MntGoldProds4 + 0.1194292184341 
* GRP_MntMeatProducts2 + 0.01684568280033 * GRP_MntMeatProducts3 + -0.05297956014628 * 
GRP_MntMeatProducts4 + -0.11059672251142 * GRP_MntWines2 + -0.0539431379238 * GRP_MntWines3 + 
0.05538795967941 * GRP_MntWines4 + 0.08963126282705 * GRP_NumCatalogPurchases3 + 
-0.00118154367452 * GRP_NumCatalogPurchases4 + 0.23032337382095 * GRP_NumDistPurchases2 + 
-0.00108441464763 * GRP_NumDistPurchases3 + -0.04458982753158 * GRP_NumDistPurchases4 + 
-0.01380938735738 * GRP_NumWebPurchases2 + -0.01095215304735 * GRP_NumWebPurchases3 + 
0.0023394125329 * GRP_NumWebPurchases4 + 0.05201697043713 * GRP_RFMstat2 + 0.00763917877705 * 
GRP_RFMstat3 + -0.01926793167425 * GRP_RFMstat4 + -0.050495884949 * GRP_RMntFrq2 + 
-0.03144438155835 * GRP_RMntFrq3 + 0.06453623203831 * GRP_RMntFrq4 + -0.15989883925465 * 
GRP_Recency2 + -0.04220884971315 * GRP_Recency3 + 0.04819510617026 * GRP_Recency4 ;
779792    +   H11  =    -0.23141403821803 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.23141403821803 + H11 ;
779793    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
779794    +END;
MPRINT(EM_DIAGRAM):   END;
779795    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
779796    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
779797    +END;
MPRINT(EM_DIAGRAM):   END;
779798    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779799    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
779800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779801    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
779802    +   P_DepVar1  =    -12.3989198958755 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.3989198958755 * H11 ;
779803    +   P_DepVar1  =    -4.61569089751973 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.61569089751973 + P_DepVar1 ;
779804    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
779805    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
779806    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
779807    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
779808    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
779809    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
779810    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
779811    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
779812    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
779813    +END;
MPRINT(EM_DIAGRAM):   END;
779814    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
779815    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
779816    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
779817    +END;
MPRINT(EM_DIAGRAM):   END;
779818    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
779819    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
779820    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
779821    +END;
MPRINT(EM_DIAGRAM):   END;
779822    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779823    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
779824    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
779825    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
779826    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
779827    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
779828    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
779829    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
779830    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
779831    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
779832    +END;
MPRINT(EM_DIAGRAM):   END;
779833    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
779834    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
779835    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
779836    +drop
779837    +H11
779838    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
779839     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
779840     quit;
779841     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
779842     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
779843     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
779844     retain ID 2 Node "Neural5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural5";
779845     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
779846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1428 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1428 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779847     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
779848     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
779849     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1428 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1428 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779850     proc sort data=EMWS8.Neural5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural5_variableset out=_temp2(keep=NAME CREATOR);
779851     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
779852     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779853     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
779854     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
779855     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
779856     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

779857     proc contents data=EMWS8.Neural5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural5_train out=_meta(keep=NAME) noprint;
779858     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

779859     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
779860     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
779861     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

779862     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
779863     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
779864     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
779865     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779866     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
779867     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
779867   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 817 rows and 5 columns.

779868     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779869     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
779870     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 817 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 817 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

779871     filename _pref
779871   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
779872     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
779873     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
779874    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
779875    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
779876    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
779877    +
779878    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779879    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
779880    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779881    +LABEL GRP_AcceptedCmp5 =
779882    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
779883    +
779884    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
779885    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
779886    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
779887    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
779888    +end;
MPRINT(EM_DIAGRAM):   end;
779889    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
779890    +if (_UFORMAT eq '0'
779891    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
779892    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
779893    +end;
MPRINT(EM_DIAGRAM):   end;
779894    +else
779895    +if (_UFORMAT eq '1'
779896    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
779897    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
779898    +end;
MPRINT(EM_DIAGRAM):   end;
779899    +else do;
MPRINT(EM_DIAGRAM):   else do;
779900    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
779901    +end;
MPRINT(EM_DIAGRAM):   end;
779902    +end;
MPRINT(EM_DIAGRAM):   end;
779903    +
779904    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779905    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
779906    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779907    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
779908    +
779909    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
779910    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
779911    +end;
MPRINT(EM_DIAGRAM):   end;
779912    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
779913    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
779914    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
779915    +end;
MPRINT(EM_DIAGRAM):   end;
779916    +else
779917    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
779918    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
779919    +end;
MPRINT(EM_DIAGRAM):   end;
779920    +else
779921    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
779922    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
779923    +end;
MPRINT(EM_DIAGRAM):   end;
779924    +else
779925    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
779926    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
779927    +end;
MPRINT(EM_DIAGRAM):   end;
779928    +end;
MPRINT(EM_DIAGRAM):   end;
779929    +
779930    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779931    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
779932    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779933    +LABEL GRP_Income =
779934    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
779935    +
779936    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
779937    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
779938    +end;
MPRINT(EM_DIAGRAM):   end;
779939    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
779940    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
779941    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
779942    +end;
MPRINT(EM_DIAGRAM):   end;
779943    +else
779944    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
779945    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
779946    +end;
MPRINT(EM_DIAGRAM):   end;
779947    +else
779948    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
779949    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
779950    +end;
MPRINT(EM_DIAGRAM):   end;
779951    +else
779952    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
779953    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
779954    +end;
MPRINT(EM_DIAGRAM):   end;
779955    +end;
MPRINT(EM_DIAGRAM):   end;
779956    +
779957    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779958    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
779959    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779960    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
779961    +
779962    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
779963    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
779964    +end;
MPRINT(EM_DIAGRAM):   end;
779965    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
779966    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
779967    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
779968    +end;
MPRINT(EM_DIAGRAM):   end;
779969    +else
779970    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
779971    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
779972    +end;
MPRINT(EM_DIAGRAM):   end;
779973    +else
779974    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
779975    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
779976    +end;
MPRINT(EM_DIAGRAM):   end;
779977    +else
779978    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
779979    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
779980    +end;
MPRINT(EM_DIAGRAM):   end;
779981    +end;
MPRINT(EM_DIAGRAM):   end;
779982    +
779983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779984    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
779985    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
779986    +LABEL GRP_MntFishProducts =
779987    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
779988    +
779989    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
779990    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
779991    +end;
MPRINT(EM_DIAGRAM):   end;
779992    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
779993    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
779994    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
779995    +end;
MPRINT(EM_DIAGRAM):   end;
779996    +else
779997    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
779998    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
779999    +end;
MPRINT(EM_DIAGRAM):   end;
780000    +else
780001    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
780002    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
780003    +end;
MPRINT(EM_DIAGRAM):   end;
780004    +else
780005    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
780006    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
780007    +end;
MPRINT(EM_DIAGRAM):   end;
780008    +end;
MPRINT(EM_DIAGRAM):   end;
780009    +
780010    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780011    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
780012    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780013    +LABEL GRP_MntGoldProds =
780014    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
780015    +
780016    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
780017    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
780018    +end;
MPRINT(EM_DIAGRAM):   end;
780019    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
780020    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
780021    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
780022    +end;
MPRINT(EM_DIAGRAM):   end;
780023    +else
780024    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
780025    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
780026    +end;
MPRINT(EM_DIAGRAM):   end;
780027    +else
780028    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
780029    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
780030    +end;
MPRINT(EM_DIAGRAM):   end;
780031    +else
780032    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
780033    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
780034    +end;
MPRINT(EM_DIAGRAM):   end;
780035    +end;
MPRINT(EM_DIAGRAM):   end;
780036    +
780037    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780038    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
780039    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780040    +LABEL GRP_MntMeatProducts =
780041    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
780042    +
780043    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
780044    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
780045    +end;
MPRINT(EM_DIAGRAM):   end;
780046    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
780047    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
780048    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
780049    +end;
MPRINT(EM_DIAGRAM):   end;
780050    +else
780051    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
780052    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
780053    +end;
MPRINT(EM_DIAGRAM):   end;
780054    +else
780055    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
780056    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
780057    +end;
MPRINT(EM_DIAGRAM):   end;
780058    +else
780059    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
780060    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
780061    +end;
MPRINT(EM_DIAGRAM):   end;
780062    +end;
MPRINT(EM_DIAGRAM):   end;
780063    +
780064    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780065    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
780066    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780067    +LABEL GRP_MntWines =
780068    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
780069    +
780070    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
780071    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
780072    +end;
MPRINT(EM_DIAGRAM):   end;
780073    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
780074    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
780075    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
780076    +end;
MPRINT(EM_DIAGRAM):   end;
780077    +else
780078    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
780079    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
780080    +end;
MPRINT(EM_DIAGRAM):   end;
780081    +else
780082    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
780083    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
780084    +end;
MPRINT(EM_DIAGRAM):   end;
780085    +else
780086    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
780087    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
780088    +end;
MPRINT(EM_DIAGRAM):   end;
780089    +end;
MPRINT(EM_DIAGRAM):   end;
780090    +
780091    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780092    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
780093    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780094    +LABEL GRP_NumCatalogPurchases =
780095    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
780096    +
780097    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
780098    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
780099    +end;
MPRINT(EM_DIAGRAM):   end;
780100    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
780101    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
780102    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
780103    +end;
MPRINT(EM_DIAGRAM):   end;
780104    +else
780105    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
780106    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
780107    +end;
MPRINT(EM_DIAGRAM):   end;
780108    +else
780109    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
780110    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
780111    +end;
MPRINT(EM_DIAGRAM):   end;
780112    +else
780113    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
780114    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
780115    +end;
MPRINT(EM_DIAGRAM):   end;
780116    +end;
MPRINT(EM_DIAGRAM):   end;
780117    +
780118    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780119    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
780120    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780121    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
780122    +
780123    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
780124    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
780125    +end;
MPRINT(EM_DIAGRAM):   end;
780126    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
780127    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
780128    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
780129    +end;
MPRINT(EM_DIAGRAM):   end;
780130    +else
780131    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
780132    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
780133    +end;
MPRINT(EM_DIAGRAM):   end;
780134    +else
780135    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
780136    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
780137    +end;
MPRINT(EM_DIAGRAM):   end;
780138    +else
780139    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
780140    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
780141    +end;
MPRINT(EM_DIAGRAM):   end;
780142    +end;
MPRINT(EM_DIAGRAM):   end;
780143    +
780144    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780145    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
780146    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780147    +LABEL GRP_NumWebPurchases =
780148    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
780149    +
780150    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
780151    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
780152    +end;
MPRINT(EM_DIAGRAM):   end;
780153    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
780154    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
780155    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
780156    +end;
MPRINT(EM_DIAGRAM):   end;
780157    +else
780158    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
780159    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
780160    +end;
MPRINT(EM_DIAGRAM):   end;
780161    +else
780162    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
780163    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
780164    +end;
MPRINT(EM_DIAGRAM):   end;
780165    +else
780166    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
780167    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
780168    +end;
MPRINT(EM_DIAGRAM):   end;
780169    +end;
MPRINT(EM_DIAGRAM):   end;
780170    +
780171    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780172    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
780173    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780174    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
780175    +
780176    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
780177    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
780178    +end;
MPRINT(EM_DIAGRAM):   end;
780179    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
780180    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
780181    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
780182    +end;
MPRINT(EM_DIAGRAM):   end;
780183    +else
780184    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
780185    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
780186    +end;
MPRINT(EM_DIAGRAM):   end;
780187    +else
780188    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
780189    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
780190    +end;
MPRINT(EM_DIAGRAM):   end;
780191    +else
780192    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
780193    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
780194    +end;
MPRINT(EM_DIAGRAM):   end;
780195    +end;
MPRINT(EM_DIAGRAM):   end;
780196    +
780197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780198    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
780199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780200    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
780201    +
780202    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
780203    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
780204    +end;
MPRINT(EM_DIAGRAM):   end;
780205    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
780206    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
780207    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
780208    +end;
MPRINT(EM_DIAGRAM):   end;
780209    +else
780210    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
780211    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
780212    +end;
MPRINT(EM_DIAGRAM):   end;
780213    +else
780214    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
780215    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
780216    +end;
MPRINT(EM_DIAGRAM):   end;
780217    +else
780218    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
780219    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
780220    +end;
MPRINT(EM_DIAGRAM):   end;
780221    +end;
MPRINT(EM_DIAGRAM):   end;
780222    +
780223    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780224    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
780225    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780226    +LABEL GRP_Recency =
780227    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
780228    +
780229    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
780230    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
780231    +end;
MPRINT(EM_DIAGRAM):   end;
780232    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
780233    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
780234    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
780235    +end;
MPRINT(EM_DIAGRAM):   end;
780236    +else
780237    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
780238    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
780239    +end;
MPRINT(EM_DIAGRAM):   end;
780240    +else
780241    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
780242    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
780243    +end;
MPRINT(EM_DIAGRAM):   end;
780244    +else
780245    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
780246    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
780247    +end;
MPRINT(EM_DIAGRAM):   end;
780248    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
780249     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
780250     quit;
780251     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
780252     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
780253     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
780254     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
780255     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
780256     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

780257     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
780258     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780259     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780260     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
780261     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780262     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780263     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780264     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
780265     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
780266     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

780267     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
780268     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

780269     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
780270     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780271     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780272     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780273     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
780274     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780275     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

780276     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
780277     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
780277   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

780278     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780279     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
780280     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780281     filename _pref
780281   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
780282     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
780283     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
780284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780285    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
780286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
780287    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
780288    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
780289    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
780290     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
780291     quit;
780292     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
780293     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
780294     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
780295     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
780296     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
780297     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780298     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
780299     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780300     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

780301     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
780302     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780303     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780304     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780305     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
780306     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
780307     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780308     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
780309     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

780310     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
780311     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780312     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780313     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780314     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
780315     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780316     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780317     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
780318     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
780318   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

780319     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780320     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
780321     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780322     filename _pref
780322   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
780323     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
780324     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
780325    +
780326    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
780327    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
780327   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
780328    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
780329    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
780330    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
780331    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
780332    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
780333     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
780334     quit;
780335     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
780336     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
780337     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
780338     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
780339     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
780340     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780341     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
780342     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780343     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780344     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
780345     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780346     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780347     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780348     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
780349     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
780350     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780351     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
780352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

780353     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
780354     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780355     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780356     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780357     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
780358     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780359     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780360     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
780361     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
780361   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

780362     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780363     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
780364     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780365     filename _pref
780365   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
780366     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
780367     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
780368    +
780369    +
780370    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
780371    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
780372    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
780373    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
780374    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
780375    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780376    +
780377    +
780378    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
780379    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
780380    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
780381    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
780382    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
780383    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780384    +
780385    +
780386    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
780387    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
780388    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
780389    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
780390    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
780391    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780392    +
780393    +
780394    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
780395    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
780396    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
780397    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
780398    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
780399    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780400    +
780401    +
780402    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
780403    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
780404    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
780405    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
780406    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
780407    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780408    +
780409    +
780410    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
780411    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
780412    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
780413    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
780414    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
780415    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780416    +
780417    +
780418    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
780419    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
780420    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
780421    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
780422    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
780423    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780424    +
780425    +
780426    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
780427    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
780428    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
780429    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
780430    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
780431    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
780432    +if
780433    +_FILTERNORM1 not in ( '.')
780434    + and
780435    +_FILTERNORM2 not in ( '.')
780436    + and
780437    +_FILTERNORM3 not in ( '.')
780438    + and
780439    +_FILTERNORM4 not in ( '.')
780440    + and
780441    +_FILTERNORM5 not in ( '.')
780442    + and
780443    +_FILTERNORM6 not in ( '.')
780444    + and
780445    +_FILTERNORM7 not in ( ' ')
780446    + and
780447    +_FILTERNORM8 not in ( ' ')
780448    +and
780449    +( Dt_Customer ne .)
780450    +and ( Income ne . and (Income<=107000))
780451    +and ( Kidhome ne .)
780452    +and ( MntFishProducts ne .)
780453    +and ( MntFruits ne .)
780454    +and ( MntGoldProds ne .)
780455    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
780456    +and ( MntSweetProducts ne .)
780457    +and ( MntWines ne .)
780458    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
780459    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
780460    +and ( NumStorePurchases ne .)
780461    +and ( NumWebPurchases ne .)
780462    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
780463    +and ( Recency ne .)
780464    +and ( Teenhome ne .)
780465    +and ( Year_Birth ne .)
780466    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
780467    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
780468    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
780469    +end;
MPRINT(EM_DIAGRAM):   end;
780470    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
780471    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
780472     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
780473     quit;
780474     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
780475     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
780476     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
780477     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
780478     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
780479     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780480     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
780481     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780482     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

780483     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
780484     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780485     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780486     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780487     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
780488     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
780489     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780490     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
780491     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

780492     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
780493     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780494     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780495     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
780496     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
780497     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
780498     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780499     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
780500     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
780500   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

780501     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780502     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
780503     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780504     %macro varDept(fcmpdata=,id=);
780505     %global nobs&id scoreFlag&id;
780506     %let scoreFlag&id = 0;
780507     %if &id=1 or ^&fcmpStart %then %do;
780508     proc sort data=&fcmpdata out=_temp&id nodupkey;
780509     by NAME;
780510     where id=&id and LHS in( %let j=1;
780511     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
780512     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
780513     "&var" %let j = %eval(&j+1);
780514     %end;
780515     );
780516     run;
780517     %let dsid = %sysfunc(open(_temp&id));
780518     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
780519     %let dsid = %sysfunc(close(&dsid));
780520     %if &&nobs&id %then %do;
780521     %let scoreFlag&id = 1;
780522     %let fcmpStart = 1;
780523     %end;
780524     %else %let fcmpStart = 0;
780525     %end;
780526     %else %do;
780527     proc sort data=&fcmpdata out=_tempid;
780528     where id=&id;
780529     by LHS;
780530     run;
780531     %let dsid = %sysfunc(open(_tempid));
780532     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
780533     %let dsid = %sysfunc(close(&dsid));
780534     %if ^&&nobs&id %then %do;
780535     proc datasets lib=work nolist;
780536     delete _tempid;
780537     run;
780538     quit;
780539     %end;
780540     %else %do;
780541     data _tempAll;
780542     set %let j=%eval(&id-1);
780543     %do x=1 %to &j;
780544     %if &&nobs&x %then %do;
780545     _temp&x %end;
780546     %end;
780547     ;
780548     run;
780549     proc sql;
780550     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
780550   ! work._tempid p2 where p.name=p2.lhs;
780551     quit;
780552     data _temp&id;
780553     set _temp&id;
780554     where LHS ne '' and NAME ne '' and Node ne '';
780555     run;
780556     proc datasets lib=work nolist;
780557     delete _tempAll;
780558     run;
780559     %let dsid = %sysfunc(open(_temp&id));
780560     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
780561     %let dsid = %sysfunc(close(&dsid));
780562     %if ^&&nobs&id %then %do;
780563     proc datasets lib=work nolist;
780564     delete _temp&id;
780565     run;
780566     quit;
780567     %end;
780568     %else %do;
780569     %let scoreFlag&id = 1;
780570     data _temp&id;
780571     set _temp&id;
780572     where LHS ne NAME and node ne '';
780573     run;
780574     %let dsid = %sysfunc(open(_temp&id));
780575     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
780576     %let dsid = %sysfunc(close(&dsid));
780577     %if ^&&nobs&id %then %do;
780578     proc datasets lib=work nolist;
780579     delete _temp&id;
780580     run;
780581     quit;
780582     %end;
780583     %else %do;
780584     proc sort data=_temp&id nodupkey;
780585     by LHS NAME;
780586     run;
780587     %end;
780588     %end;
780589     %end;
780590     %end;
780591     %mend varDept;
780592     %macro optCode(outdata=fcmpdata);
780593     %global fcmpStart;
780594     %let fcmpStart = 0;
780595     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
780596     %let NumNodes=9;
780597     %do k=1 %to &NumNodes;
780598     %vardept(fcmpdata=&outdata, id=&k);
780599     %end;
780600     %mend optCode;
780601     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 69 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 51 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

The SAS System

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 38 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 38 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 38 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP6.
NOTE: 6 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 66 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

780602     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
780603     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
780604     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
780605     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780606     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
780607     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
780608     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
780609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780610     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
780611     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
780611   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

780612     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

780613     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
780614     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
780615     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780616     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
780617     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
780618     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
780619     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780620     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
780621     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
780622     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
780623     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780624     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
780625     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
780625   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

780626     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

780627     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
780628     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
780629     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

780630     filename _pref
780630   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
780631     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
780632     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas.
780633    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
780634    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
780635    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
780636    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
780637    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
780638    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
780639    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
780640    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
780641    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
780642    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
780643    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
780644    +LENGTH _WARN_ $4
780645    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
780646    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
780647    +
780648    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
780649    +
780650    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
780651    +
780652    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
780653    +
780654    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
780655    +
780656    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
780657    +
780658    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
780659    +
780660    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
780661    +
780662    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
780663    +
780664    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
780665    +
780666    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
780667    +
780668    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
780669    +
780670    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
780671    +
780672    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
780673    +
780674    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
780675    +
780676    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
780677    +
780678    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
780679    +
780680    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
780681    +
780682    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
780683    +
780684    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
780685    +
780686    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
780687    +
780688    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
780689    +
780690    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
780691    +
780692    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
780693    +
780694    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
780695    +
780696    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
780697    +
780698    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
780699    +
780700    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
780701    +
780702    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
780703    +
780704    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
780705    +
780706    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
780707    +
780708    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
780709    +
780710    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
780711    +
780712    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
780713    +
780714    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
780715    +
780716    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
780717    +
780718    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
780719    +
780720    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
780721    +
780722    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
780723    +
780724    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
780725    +
780726    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
780727    +
780728    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
780729    +
780730    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
780731    +
780732    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
780733    +
780734    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
780735    +
780736    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
780737    +
780738    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
780739    +
780740    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
780741    +
780742    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
780743    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
780744    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
780745    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
780746    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
780747    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780748    +end;
MPRINT(EM_DIAGRAM):   end;
780749    +else do;
MPRINT(EM_DIAGRAM):   else do;
780750    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
780751    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
780752    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
780753    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
780754    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
780755    +   end;
MPRINT(EM_DIAGRAM):   end;
780756    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
780757    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
780758    +   end;
MPRINT(EM_DIAGRAM):   end;
780759    +   else do;
MPRINT(EM_DIAGRAM):   else do;
780760    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
780761    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
780762    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780763    +   end;
MPRINT(EM_DIAGRAM):   end;
780764    +end;
MPRINT(EM_DIAGRAM):   end;
780765    +
780766    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
780767    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
780768    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
780769    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
780770    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
780771    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
780772    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
780773    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780774    +end;
MPRINT(EM_DIAGRAM):   end;
780775    +else do;
MPRINT(EM_DIAGRAM):   else do;
780776    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
780777    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
780778    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
780779    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
780780    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
780781    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
780782    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
780783    +   end;
MPRINT(EM_DIAGRAM):   end;
780784    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
780785    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
780786    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
780787    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
780788    +   end;
MPRINT(EM_DIAGRAM):   end;
780789    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
780790    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
780791    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
780792    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
780793    +   end;
MPRINT(EM_DIAGRAM):   end;
780794    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
780795    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
780796    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
780797    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
780798    +   end;
MPRINT(EM_DIAGRAM):   end;
780799    +   else do;
MPRINT(EM_DIAGRAM):   else do;
780800    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
780801    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
780802    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
780803    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
780804    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780805    +   end;
MPRINT(EM_DIAGRAM):   end;
780806    +end;
MPRINT(EM_DIAGRAM):   end;
780807    +
780808    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
780809    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
780810    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
780811    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
780812    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
780813    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
780814    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
780815    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780816    +end;
MPRINT(EM_DIAGRAM):   end;
780817    +else do;
MPRINT(EM_DIAGRAM):   else do;
780818    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
780819    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
780820    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
780821    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
780822    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
780823    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
780824    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
780825    +   end;
MPRINT(EM_DIAGRAM):   end;
780826    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
780827    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
780828    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
780829    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
780830    +   end;
MPRINT(EM_DIAGRAM):   end;
780831    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
780832    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
780833    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
780834    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
780835    +   end;
MPRINT(EM_DIAGRAM):   end;
780836    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
780837    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
780838    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
780839    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
780840    +   end;
MPRINT(EM_DIAGRAM):   end;
780841    +   else do;
MPRINT(EM_DIAGRAM):   else do;
780842    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
780843    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
780844    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
780845    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
780846    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780847    +   end;
MPRINT(EM_DIAGRAM):   end;
780848    +end;
MPRINT(EM_DIAGRAM):   end;
780849    +
780850    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
780851    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
780852    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
780853    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
780854    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
780855    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
780856    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
780857    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780858    +end;
MPRINT(EM_DIAGRAM):   end;
780859    +else do;
MPRINT(EM_DIAGRAM):   else do;
780860    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
780861    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
780862    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
780863    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
780864    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
780865    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
780866    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
780867    +   end;
MPRINT(EM_DIAGRAM):   end;
780868    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
780869    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
780870    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
780871    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
780872    +   end;
MPRINT(EM_DIAGRAM):   end;
780873    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
780874    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
780875    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
780876    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
780877    +   end;
MPRINT(EM_DIAGRAM):   end;
780878    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
780879    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
780880    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
780881    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
780882    +   end;
MPRINT(EM_DIAGRAM):   end;
780883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
780884    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
780885    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
780886    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
780887    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
780888    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780889    +   end;
MPRINT(EM_DIAGRAM):   end;
780890    +end;
MPRINT(EM_DIAGRAM):   end;
780891    +
780892    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
780893    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
780894    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
780895    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
780896    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
780897    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
780898    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
780899    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780900    +end;
MPRINT(EM_DIAGRAM):   end;
780901    +else do;
MPRINT(EM_DIAGRAM):   else do;
780902    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
780903    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
780904    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
780905    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
780906    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
780907    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
780908    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
780909    +   end;
MPRINT(EM_DIAGRAM):   end;
780910    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
780911    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
780912    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
780913    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
780914    +   end;
MPRINT(EM_DIAGRAM):   end;
780915    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
780916    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
780917    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
780918    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
780919    +   end;
MPRINT(EM_DIAGRAM):   end;
780920    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
780921    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
780922    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
780923    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
780924    +   end;
MPRINT(EM_DIAGRAM):   end;
780925    +   else do;
MPRINT(EM_DIAGRAM):   else do;
780926    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
780927    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
780928    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
780929    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
780930    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780931    +   end;
MPRINT(EM_DIAGRAM):   end;
780932    +end;
MPRINT(EM_DIAGRAM):   end;
780933    +
780934    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
780935    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
780936    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
780937    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
780938    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
780939    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
780940    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
780941    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780942    +end;
MPRINT(EM_DIAGRAM):   end;
780943    +else do;
MPRINT(EM_DIAGRAM):   else do;
780944    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
780945    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
780946    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
780947    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
780948    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
780949    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
780950    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
780951    +   end;
MPRINT(EM_DIAGRAM):   end;
780952    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
780953    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
780954    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
780955    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
780956    +   end;
MPRINT(EM_DIAGRAM):   end;
780957    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
780958    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
780959    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
780960    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
780961    +   end;
MPRINT(EM_DIAGRAM):   end;
780962    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
780963    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
780964    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
780965    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
780966    +   end;
MPRINT(EM_DIAGRAM):   end;
780967    +   else do;
MPRINT(EM_DIAGRAM):   else do;
780968    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
780969    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
780970    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
780971    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
780972    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780973    +   end;
MPRINT(EM_DIAGRAM):   end;
780974    +end;
MPRINT(EM_DIAGRAM):   end;
780975    +
780976    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
780977    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
780978    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
780979    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
780980    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
780981    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
780982    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
780983    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
780984    +end;
MPRINT(EM_DIAGRAM):   end;
780985    +else do;
MPRINT(EM_DIAGRAM):   else do;
780986    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
780987    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
780988    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
780989    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
780990    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
780991    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
780992    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
780993    +   end;
MPRINT(EM_DIAGRAM):   end;
780994    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
780995    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
780996    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
780997    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
780998    +   end;
MPRINT(EM_DIAGRAM):   end;
780999    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
781000    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
781001    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
781002    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
781003    +   end;
MPRINT(EM_DIAGRAM):   end;
781004    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
781005    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
781006    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
781007    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
781008    +   end;
MPRINT(EM_DIAGRAM):   end;
781009    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781010    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
781011    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
781012    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
781013    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781014    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781015    +   end;
MPRINT(EM_DIAGRAM):   end;
781016    +end;
MPRINT(EM_DIAGRAM):   end;
781017    +
781018    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
781019    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
781020    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
781021    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
781022    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
781023    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
781024    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
781025    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781026    +end;
MPRINT(EM_DIAGRAM):   end;
781027    +else do;
MPRINT(EM_DIAGRAM):   else do;
781028    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
781029    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
781030    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
781031    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
781032    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
781033    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
781034    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
781035    +   end;
MPRINT(EM_DIAGRAM):   end;
781036    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
781037    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
781038    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
781039    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
781040    +   end;
MPRINT(EM_DIAGRAM):   end;
781041    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
781042    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
781043    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
781044    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
781045    +   end;
MPRINT(EM_DIAGRAM):   end;
781046    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
781047    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
781048    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
781049    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
781050    +   end;
MPRINT(EM_DIAGRAM):   end;
781051    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781052    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
781053    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
781054    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
781055    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781056    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781057    +   end;
MPRINT(EM_DIAGRAM):   end;
781058    +end;
MPRINT(EM_DIAGRAM):   end;
781059    +
781060    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
781061    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
781062    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
781063    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
781064    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
781065    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
781066    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781067    +end;
MPRINT(EM_DIAGRAM):   end;
781068    +else do;
MPRINT(EM_DIAGRAM):   else do;
781069    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
781070    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
781071    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
781072    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
781073    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
781074    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
781075    +   end;
MPRINT(EM_DIAGRAM):   end;
781076    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
781077    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
781078    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
781079    +   end;
MPRINT(EM_DIAGRAM):   end;
781080    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
781081    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
781082    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
781083    +   end;
MPRINT(EM_DIAGRAM):   end;
781084    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781085    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
781086    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
781087    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781088    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781089    +   end;
MPRINT(EM_DIAGRAM):   end;
781090    +end;
MPRINT(EM_DIAGRAM):   end;
781091    +
781092    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
781093    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
781094    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
781095    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
781096    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
781097    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
781098    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
781099    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781100    +end;
MPRINT(EM_DIAGRAM):   end;
781101    +else do;
MPRINT(EM_DIAGRAM):   else do;
781102    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
781103    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
781104    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
781105    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
781106    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
781107    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
781108    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
781109    +   end;
MPRINT(EM_DIAGRAM):   end;
781110    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
781111    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
781112    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
781113    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
781114    +   end;
MPRINT(EM_DIAGRAM):   end;
781115    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
781116    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
781117    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
781118    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
781119    +   end;
MPRINT(EM_DIAGRAM):   end;
781120    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
781121    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
781122    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
781123    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
781124    +   end;
MPRINT(EM_DIAGRAM):   end;
781125    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781126    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
781127    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
781128    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
781129    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781130    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781131    +   end;
MPRINT(EM_DIAGRAM):   end;
781132    +end;
MPRINT(EM_DIAGRAM):   end;
781133    +
781134    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
781135    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
781136    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
781137    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
781138    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
781139    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
781140    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
781141    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781142    +end;
MPRINT(EM_DIAGRAM):   end;
781143    +else do;
MPRINT(EM_DIAGRAM):   else do;
781144    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
781145    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
781146    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
781147    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
781148    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
781149    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
781150    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
781151    +   end;
MPRINT(EM_DIAGRAM):   end;
781152    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
781153    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
781154    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
781155    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
781156    +   end;
MPRINT(EM_DIAGRAM):   end;
781157    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
781158    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
781159    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
781160    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
781161    +   end;
MPRINT(EM_DIAGRAM):   end;
781162    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
781163    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
781164    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
781165    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
781166    +   end;
MPRINT(EM_DIAGRAM):   end;
781167    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781168    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
781169    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
781170    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
781171    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781172    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781173    +   end;
MPRINT(EM_DIAGRAM):   end;
781174    +end;
MPRINT(EM_DIAGRAM):   end;
781175    +
781176    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
781177    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
781178    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
781179    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
781180    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
781181    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
781182    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
781183    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781184    +end;
MPRINT(EM_DIAGRAM):   end;
781185    +else do;
MPRINT(EM_DIAGRAM):   else do;
781186    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
781187    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
781188    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
781189    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
781190    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
781191    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
781192    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
781193    +   end;
MPRINT(EM_DIAGRAM):   end;
781194    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
781195    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
781196    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
781197    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
781198    +   end;
MPRINT(EM_DIAGRAM):   end;
781199    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
781200    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
781201    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
781202    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
781203    +   end;
MPRINT(EM_DIAGRAM):   end;
781204    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
781205    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
781206    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
781207    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
781208    +   end;
MPRINT(EM_DIAGRAM):   end;
781209    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781210    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
781211    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
781212    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
781213    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781214    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781215    +   end;
MPRINT(EM_DIAGRAM):   end;
781216    +end;
MPRINT(EM_DIAGRAM):   end;
781217    +
781218    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
781219    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
781220    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
781221    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
781222    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
781223    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
781224    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
781225    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781226    +end;
MPRINT(EM_DIAGRAM):   end;
781227    +else do;
MPRINT(EM_DIAGRAM):   else do;
781228    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
781229    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
781230    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
781231    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
781232    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
781233    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
781234    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
781235    +   end;
MPRINT(EM_DIAGRAM):   end;
781236    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
781237    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
781238    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
781239    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
781240    +   end;
MPRINT(EM_DIAGRAM):   end;
781241    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
781242    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
781243    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
781244    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
781245    +   end;
MPRINT(EM_DIAGRAM):   end;
781246    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
781247    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
781248    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
781249    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
781250    +   end;
MPRINT(EM_DIAGRAM):   end;
781251    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781252    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
781253    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
781254    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
781255    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781256    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781257    +   end;
MPRINT(EM_DIAGRAM):   end;
781258    +end;
MPRINT(EM_DIAGRAM):   end;
781259    +
781260    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
781261    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
781262    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
781263    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
781264    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
781265    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
781266    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
781267    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781268    +end;
MPRINT(EM_DIAGRAM):   end;
781269    +else do;
MPRINT(EM_DIAGRAM):   else do;
781270    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
781271    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
781272    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
781273    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
781274    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
781275    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
781276    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
781277    +   end;
MPRINT(EM_DIAGRAM):   end;
781278    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
781279    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
781280    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
781281    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
781282    +   end;
MPRINT(EM_DIAGRAM):   end;
781283    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
781284    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
781285    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
781286    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
781287    +   end;
MPRINT(EM_DIAGRAM):   end;
781288    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
781289    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
781290    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
781291    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
781292    +   end;
MPRINT(EM_DIAGRAM):   end;
781293    +   else do;
MPRINT(EM_DIAGRAM):   else do;
781294    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
781295    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
781296    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
781297    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
781298    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
781299    +   end;
MPRINT(EM_DIAGRAM):   end;
781300    +end;
MPRINT(EM_DIAGRAM):   end;
781301    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781302    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
781303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781305    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
781306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781307    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
781308    +   H11  =    -0.29083667179588 * GRP_AcceptedCmp52  +     0.25381514879511 *
781309    +        GRP_Frq2  +     0.24495490182169 * GRP_Frq3  +     0.08462614656895 *
781310    +        GRP_Frq4  +     0.42321493993551 * GRP_Income2
781311    +          +     0.73169928117081 * GRP_Income3  +    -0.05544320914832 *
781312    +        GRP_Income4  +    -0.24718669893416 * GRP_Mnt2
781313    +          +    -0.03207129144847 * GRP_Mnt3  +    -0.25388605829716 * GRP_Mnt4
781314    +          +     0.47035397187556 * GRP_MntFishProducts2
781315    +          +    -0.08037080105655 * GRP_MntFishProducts3
781316    +          +    -0.02398618871954 * GRP_MntFishProducts4
781317    +          +    -0.07937868050266 * GRP_MntGoldProds2
781318    +          +     0.05027448018004 * GRP_MntGoldProds3
781319    +          +     0.07901442033148 * GRP_MntGoldProds4
781320    +          +    -0.33936723350812 * GRP_MntMeatProducts2
781321    +          +    -0.04484529724292 * GRP_MntMeatProducts3
781322    +          +     -0.0415506520001 * GRP_MntMeatProducts4
781323    +          +     0.03804983893299 * GRP_MntWines2  +    -0.04512794010485 *
781324    +        GRP_MntWines3  +     0.13644345988766 * GRP_MntWines4
781325    +          +    -0.14757249557063 * GRP_NumCatalogPurchases3
781326    +          +     0.15425218359438 * GRP_NumCatalogPurchases4
781327    +          +    -0.29017371671497 * GRP_NumDistPurchases2
781328    +          +    -0.28697691933928 * GRP_NumDistPurchases3
781329    +          +    -0.14589186171246 * GRP_NumDistPurchases4
781330    +          +    -0.04161944892997 * GRP_NumWebPurchases2
781331    +          +     0.25846214028528 * GRP_NumWebPurchases3
781332    +          +    -0.05415601948083 * GRP_NumWebPurchases4
781333    +          +    -0.20357646739267 * GRP_RFMstat2  +    -0.63274902898209 *
781334    +        GRP_RFMstat3  +    -0.42178758375646 * GRP_RFMstat4
781335    +          +    -0.25050399122469 * GRP_RMntFrq2  +    -0.19112538807366 *
781336    +        GRP_RMntFrq3  +     0.09935328688472 * GRP_RMntFrq4
781337    +          +     0.87740211815385 * GRP_Recency2  +     0.02731074731084 *
781338    +        GRP_Recency3  +    -0.25335916751578 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.29083667179588 * GRP_AcceptedCmp52 + 0.25381514879511 * 
GRP_Frq2 + 0.24495490182169 * GRP_Frq3 + 0.08462614656895 * GRP_Frq4 + 0.42321493993551 * 
GRP_Income2 + 0.73169928117081 * GRP_Income3 + -0.05544320914832 * GRP_Income4 + 
-0.24718669893416 * GRP_Mnt2 + -0.03207129144847 * GRP_Mnt3 + -0.25388605829716 * GRP_Mnt4 + 
0.47035397187556 * GRP_MntFishProducts2 + -0.08037080105655 * GRP_MntFishProducts3 + 
-0.02398618871954 * GRP_MntFishProducts4 + -0.07937868050266 * GRP_MntGoldProds2 + 
0.05027448018004 * GRP_MntGoldProds3 + 0.07901442033148 * GRP_MntGoldProds4 + 
-0.33936723350812 * GRP_MntMeatProducts2 + -0.04484529724292 * GRP_MntMeatProducts3 + 
-0.0415506520001 * GRP_MntMeatProducts4 + 0.03804983893299 * GRP_MntWines2 + -0.04512794010485 
* GRP_MntWines3 + 0.13644345988766 * GRP_MntWines4 + -0.14757249557063 * 
GRP_NumCatalogPurchases3 + 0.15425218359438 * GRP_NumCatalogPurchases4 + -0.29017371671497 * 
GRP_NumDistPurchases2 + -0.28697691933928 * GRP_NumDistPurchases3 + -0.14589186171246 * 
GRP_NumDistPurchases4 + -0.04161944892997 * GRP_NumWebPurchases2 + 0.25846214028528 * 
GRP_NumWebPurchases3 + -0.05415601948083 * GRP_NumWebPurchases4 + -0.20357646739267 * 
GRP_RFMstat2 + -0.63274902898209 * GRP_RFMstat3 + -0.42178758375646 * GRP_RFMstat4 + 
-0.25050399122469 * GRP_RMntFrq2 + -0.19112538807366 * GRP_RMntFrq3 + 0.09935328688472 * 
GRP_RMntFrq4 + 0.87740211815385 * GRP_Recency2 + 0.02731074731084 * GRP_Recency3 + 
-0.25335916751578 * GRP_Recency4 ;
781339    +   H12  =    -0.77250325436995 * GRP_AcceptedCmp52  +     0.15992276693905 *
781340    +        GRP_Frq2  +     0.03865511556705 * GRP_Frq3  +    -0.20632943014927 *
781341    +        GRP_Frq4  +     0.33135316311494 * GRP_Income2
781342    +          +     0.29584600709267 * GRP_Income3  +    -0.42334990488598 *
781343    +        GRP_Income4  +     0.15943867910214 * GRP_Mnt2
781344    +          +     0.17793824624027 * GRP_Mnt3  +     0.02858905887957 * GRP_Mnt4
781345    +          +     0.01579175161385 * GRP_MntFishProducts2
781346    +          +     0.17282640703406 * GRP_MntFishProducts3
781347    +          +     0.01086096638671 * GRP_MntFishProducts4
781348    +          +    -0.18985444898682 * GRP_MntGoldProds2
781349    +          +     0.21160891964242 * GRP_MntGoldProds3
781350    +          +     0.19583511822565 * GRP_MntGoldProds4
781351    +          +     -0.3456806985278 * GRP_MntMeatProducts2
781352    +          +    -0.22537760201843 * GRP_MntMeatProducts3
781353    +          +     0.25001144882227 * GRP_MntMeatProducts4
781354    +          +     0.50922766710996 * GRP_MntWines2  +     0.39373033292339 *
781355    +        GRP_MntWines3  +     -0.0631684381291 * GRP_MntWines4
781356    +          +    -0.44406418897674 * GRP_NumCatalogPurchases3
781357    +          +     0.04067400721697 * GRP_NumCatalogPurchases4
781358    +          +    -0.31103378362217 * GRP_NumDistPurchases2
781359    +          +     -0.2871376672979 * GRP_NumDistPurchases3
781360    +          +    -0.17746737696028 * GRP_NumDistPurchases4
781361    +          +     0.10647221525263 * GRP_NumWebPurchases2
781362    +          +    -0.41586902546761 * GRP_NumWebPurchases3
781363    +          +     0.04660436676773 * GRP_NumWebPurchases4
781364    +          +     0.09917764215284 * GRP_RFMstat2  +       0.119759461983 *
781365    +        GRP_RFMstat3  +     0.21805558451713 * GRP_RFMstat4
781366    +          +     0.22815675287087 * GRP_RMntFrq2  +     0.19732571474618 *
781367    +        GRP_RMntFrq3  +     0.07767050452748 * GRP_RMntFrq4
781368    +          +     0.46140797631862 * GRP_Recency2  +     0.17265446560815 *
781369    +        GRP_Recency3  +    -0.13764246969761 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.77250325436995 * GRP_AcceptedCmp52 + 0.15992276693905 * 
GRP_Frq2 + 0.03865511556705 * GRP_Frq3 + -0.20632943014927 * GRP_Frq4 + 0.33135316311494 * 
GRP_Income2 + 0.29584600709267 * GRP_Income3 + -0.42334990488598 * GRP_Income4 + 
0.15943867910214 * GRP_Mnt2 + 0.17793824624027 * GRP_Mnt3 + 0.02858905887957 * GRP_Mnt4 + 
0.01579175161385 * GRP_MntFishProducts2 + 0.17282640703406 * GRP_MntFishProducts3 + 
0.01086096638671 * GRP_MntFishProducts4 + -0.18985444898682 * GRP_MntGoldProds2 + 
0.21160891964242 * GRP_MntGoldProds3 + 0.19583511822565 * GRP_MntGoldProds4 + -0.3456806985278 
* GRP_MntMeatProducts2 + -0.22537760201843 * GRP_MntMeatProducts3 + 0.25001144882227 * 
GRP_MntMeatProducts4 + 0.50922766710996 * GRP_MntWines2 + 0.39373033292339 * GRP_MntWines3 + 
-0.0631684381291 * GRP_MntWines4 + -0.44406418897674 * GRP_NumCatalogPurchases3 + 
0.04067400721697 * GRP_NumCatalogPurchases4 + -0.31103378362217 * GRP_NumDistPurchases2 + 
-0.2871376672979 * GRP_NumDistPurchases3 + -0.17746737696028 * GRP_NumDistPurchases4 + 
0.10647221525263 * GRP_NumWebPurchases2 + -0.41586902546761 * GRP_NumWebPurchases3 + 
0.04660436676773 * GRP_NumWebPurchases4 + 0.09917764215284 * GRP_RFMstat2 + 0.119759461983 * 
GRP_RFMstat3 + 0.21805558451713 * GRP_RFMstat4 + 0.22815675287087 * GRP_RMntFrq2 + 
0.19732571474618 * GRP_RMntFrq3 + 0.07767050452748 * GRP_RMntFrq4 + 0.46140797631862 * 
GRP_Recency2 + 0.17265446560815 * GRP_Recency3 + -0.13764246969761 * GRP_Recency4 ;
781370    +   H13  =     0.47605838497596 * GRP_AcceptedCmp52  +    -0.24247551747681 *
781371    +        GRP_Frq2  +    -0.12921683287602 * GRP_Frq3  +     0.09997146415468 *
781372    +        GRP_Frq4  +    -0.33897508851515 * GRP_Income2
781373    +          +     0.02013725470644 * GRP_Income3  +     0.62243331624454 *
781374    +        GRP_Income4  +    -0.07907139789023 * GRP_Mnt2
781375    +          +     0.02855056853431 * GRP_Mnt3  +      0.0571426807888 * GRP_Mnt4
781376    +          +    -0.22089400263658 * GRP_MntFishProducts2
781377    +          +     0.03415513165136 * GRP_MntFishProducts3
781378    +          +     0.11107459135953 * GRP_MntFishProducts4
781379    +          +      0.1200436606288 * GRP_MntGoldProds2
781380    +          +      0.1845414926618 * GRP_MntGoldProds3
781381    +          +     0.05336685345848 * GRP_MntGoldProds4
781382    +          +     0.17651888017403 * GRP_MntMeatProducts2
781383    +          +    -0.19581823794868 * GRP_MntMeatProducts3
781384    +          +    -0.32374735747971 * GRP_MntMeatProducts4
781385    +          +    -0.29496513381505 * GRP_MntWines2  +     -0.1846298613936 *
781386    +        GRP_MntWines3  +     0.25702620460325 * GRP_MntWines4
781387    +          +     0.52809435848016 * GRP_NumCatalogPurchases3
781388    +          +     0.22555872046312 * GRP_NumCatalogPurchases4
781389    +          +      0.5816615934847 * GRP_NumDistPurchases2
781390    +          +    -0.05454598802009 * GRP_NumDistPurchases3
781391    +          +     0.10061932097301 * GRP_NumDistPurchases4
781392    +          +     0.10350223951336 * GRP_NumWebPurchases2
781393    +          +    -0.10094008849705 * GRP_NumWebPurchases3
781394    +          +    -0.28943674138057 * GRP_NumWebPurchases4
781395    +          +     0.18167045555206 * GRP_RFMstat2  +     -0.2440987298479 *
781396    +        GRP_RFMstat3  +    -0.21852350431632 * GRP_RFMstat4
781397    +          +       0.048115710925 * GRP_RMntFrq2  +    -0.19258956732647 *
781398    +        GRP_RMntFrq3  +     0.21827295876984 * GRP_RMntFrq4
781399    +          +    -0.86473147264012 * GRP_Recency2  +    -0.38058925082706 *
781400    +        GRP_Recency3  +     0.45619624848066 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.47605838497596 * GRP_AcceptedCmp52 + -0.24247551747681 * 
GRP_Frq2 + -0.12921683287602 * GRP_Frq3 + 0.09997146415468 * GRP_Frq4 + -0.33897508851515 * 
GRP_Income2 + 0.02013725470644 * GRP_Income3 + 0.62243331624454 * GRP_Income4 + 
-0.07907139789023 * GRP_Mnt2 + 0.02855056853431 * GRP_Mnt3 + 0.0571426807888 * GRP_Mnt4 + 
-0.22089400263658 * GRP_MntFishProducts2 + 0.03415513165136 * GRP_MntFishProducts3 + 
0.11107459135953 * GRP_MntFishProducts4 + 0.1200436606288 * GRP_MntGoldProds2 + 
0.1845414926618 * GRP_MntGoldProds3 + 0.05336685345848 * GRP_MntGoldProds4 + 0.17651888017403 
* GRP_MntMeatProducts2 + -0.19581823794868 * GRP_MntMeatProducts3 + -0.32374735747971 * 
GRP_MntMeatProducts4 + -0.29496513381505 * GRP_MntWines2 + -0.1846298613936 * GRP_MntWines3 + 
0.25702620460325 * GRP_MntWines4 + 0.52809435848016 * GRP_NumCatalogPurchases3 + 
0.22555872046312 * GRP_NumCatalogPurchases4 + 0.5816615934847 * GRP_NumDistPurchases2 + 
-0.05454598802009 * GRP_NumDistPurchases3 + 0.10061932097301 * GRP_NumDistPurchases4 + 
0.10350223951336 * GRP_NumWebPurchases2 + -0.10094008849705 * GRP_NumWebPurchases3 + 
-0.28943674138057 * GRP_NumWebPurchases4 + 0.18167045555206 * GRP_RFMstat2 + -0.2440987298479 
* GRP_RFMstat3 + -0.21852350431632 * GRP_RFMstat4 + 0.048115710925 * GRP_RMntFrq2 + 
-0.19258956732647 * GRP_RMntFrq3 + 0.21827295876984 * GRP_RMntFrq4 + -0.86473147264012 * 
GRP_Recency2 + -0.38058925082706 * GRP_Recency3 + 0.45619624848066 * GRP_Recency4 ;
781401    +   H14  =    -0.20005149248892 * GRP_AcceptedCmp52  +      0.1416453143658 *
781402    +        GRP_Frq2  +     0.16615391028307 * GRP_Frq3  +     0.24067740846414 *
781403    +        GRP_Frq4  +     0.44252646861104 * GRP_Income2
781404    +          +     0.38184638238718 * GRP_Income3  +    -0.31867045455591 *
781405    +        GRP_Income4  +    -0.04762919001724 * GRP_Mnt2
781406    +          +    -0.00736030333746 * GRP_Mnt3  +    -0.11335269869741 * GRP_Mnt4
781407    +          +     0.11397099518618 * GRP_MntFishProducts2
781408    +          +     0.02038390970846 * GRP_MntFishProducts3
781409    +          +     0.04901565572006 * GRP_MntFishProducts4
781410    +          +    -0.26210451979183 * GRP_MntGoldProds2
781411    +          +    -0.01291376301388 * GRP_MntGoldProds3
781412    +          +    -0.06291397841763 * GRP_MntGoldProds4
781413    +          +    -0.28346673842937 * GRP_MntMeatProducts2
781414    +          +    -0.22838601011576 * GRP_MntMeatProducts3
781415    +          +    -0.35737823232225 * GRP_MntMeatProducts4
781416    +          +     0.38985456021102 * GRP_MntWines2  +     0.10061935074263 *
781417    +        GRP_MntWines3  +    -0.49094420474651 * GRP_MntWines4
781418    +          +    -0.30332072511255 * GRP_NumCatalogPurchases3
781419    +          +    -0.13066216416331 * GRP_NumCatalogPurchases4
781420    +          +    -0.17811481527528 * GRP_NumDistPurchases2
781421    +          +     0.07507990088147 * GRP_NumDistPurchases3
781422    +          +    -0.01562644766888 * GRP_NumDistPurchases4
781423    +          +    -0.28058368395312 * GRP_NumWebPurchases2
781424    +          +     0.06601211704617 * GRP_NumWebPurchases3
781425    +          +    -0.11209964154167 * GRP_NumWebPurchases4
781426    +          +    -0.24339392229609 * GRP_RFMstat2  +     0.36921551965975 *
781427    +        GRP_RFMstat3  +     0.16127058585623 * GRP_RFMstat4
781428    +          +     0.01095276184609 * GRP_RMntFrq2  +    -0.21651603975876 *
781429    +        GRP_RMntFrq3  +    -0.44785793778994 * GRP_RMntFrq4
781430    +          +     0.37654423654871 * GRP_Recency2  +     0.21584324326396 *
781431    +        GRP_Recency3  +     0.06923981469933 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.20005149248892 * GRP_AcceptedCmp52 + 0.1416453143658 * GRP_Frq2 
+ 0.16615391028307 * GRP_Frq3 + 0.24067740846414 * GRP_Frq4 + 0.44252646861104 * GRP_Income2 + 
0.38184638238718 * GRP_Income3 + -0.31867045455591 * GRP_Income4 + -0.04762919001724 * 
GRP_Mnt2 + -0.00736030333746 * GRP_Mnt3 + -0.11335269869741 * GRP_Mnt4 + 0.11397099518618 * 
GRP_MntFishProducts2 + 0.02038390970846 * GRP_MntFishProducts3 + 0.04901565572006 * 
GRP_MntFishProducts4 + -0.26210451979183 * GRP_MntGoldProds2 + -0.01291376301388 * 
GRP_MntGoldProds3 + -0.06291397841763 * GRP_MntGoldProds4 + -0.28346673842937 * 
GRP_MntMeatProducts2 + -0.22838601011576 * GRP_MntMeatProducts3 + -0.35737823232225 * 
GRP_MntMeatProducts4 + 0.38985456021102 * GRP_MntWines2 + 0.10061935074263 * GRP_MntWines3 + 
-0.49094420474651 * GRP_MntWines4 + -0.30332072511255 * GRP_NumCatalogPurchases3 + 
-0.13066216416331 * GRP_NumCatalogPurchases4 + -0.17811481527528 * GRP_NumDistPurchases2 + 
0.07507990088147 * GRP_NumDistPurchases3 + -0.01562644766888 * GRP_NumDistPurchases4 + 
-0.28058368395312 * GRP_NumWebPurchases2 + 0.06601211704617 * GRP_NumWebPurchases3 + 
-0.11209964154167 * GRP_NumWebPurchases4 + -0.24339392229609 * GRP_RFMstat2 + 0.36921551965975 
* GRP_RFMstat3 + 0.16127058585623 * GRP_RFMstat4 + 0.01095276184609 * GRP_RMntFrq2 + 
-0.21651603975876 * GRP_RMntFrq3 + -0.44785793778994 * GRP_RMntFrq4 + 0.37654423654871 * 
GRP_Recency2 + 0.21584324326396 * GRP_Recency3 + 0.06923981469933 * GRP_Recency4 ;
781432    +   H11  =    -0.90507468819856 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.90507468819856 + H11 ;
781433    +   H12  =    -0.58382573328779 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.58382573328779 + H12 ;
781434    +   H13  =     0.23395947148718 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.23395947148718 + H13 ;
781435    +   H14  =     0.78095059574137 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.78095059574137 + H14 ;
781436    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
781437    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
781438    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
781439    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
781440    +END;
MPRINT(EM_DIAGRAM):   END;
781441    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
781442    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
781443    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
781444    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
781445    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
781446    +END;
MPRINT(EM_DIAGRAM):   END;
781447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781448    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
781449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781450    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
781451    +   P_DepVar1  =     1.27226040722218 * H11  +     1.29072977611751 * H12
781452    +          +    -1.13529049624055 * H13  +     1.42363080191112 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.27226040722218 * H11 + 1.29072977611751 * H12 + 
-1.13529049624055 * H13 + 1.42363080191112 * H14 ;
781453    +   P_DepVar1  =    -1.11430363057808 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.11430363057808 + P_DepVar1 ;
781454    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
781455    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
781456    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
781457    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
781458    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
781459    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
781460    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
781461    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
781462    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
781463    +END;
MPRINT(EM_DIAGRAM):   END;
781464    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
781465    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
781466    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
781467    +END;
MPRINT(EM_DIAGRAM):   END;
781468    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
781469    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
781470    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
781471    +END;
MPRINT(EM_DIAGRAM):   END;
781472    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781473    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
781474    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
781475    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
781476    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
781477    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
781478    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
781479    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
781480    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
781481    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
781482    +END;
MPRINT(EM_DIAGRAM):   END;
781483    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
781484    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
781485    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
781486    +drop
781487    +H11
781488    +H12
781489    +H13
781490    +H14
781491    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
781492     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
781493     quit;
781494     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
781495     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
781496     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
781497     retain ID 2 Node "Neural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural21";
781498     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
781499     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1787 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1787 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781500     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
781501     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781502     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1787 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1787 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781503     proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
781504     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781505     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781506     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
781507     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
781508     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
781509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781510     proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
781511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

781512     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
781513     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781514     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781515     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
781516     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
781517     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781518     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781519     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
781520     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
781520   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 860 rows and 5 columns.

781521     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

781522     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
781523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 860 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 860 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781524     filename _pref
781524   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
781525     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
781526     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
781527    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
781528    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
781529    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
781530    +
781531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781532    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
781533    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781534    +LABEL GRP_AcceptedCmp5 =
781535    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
781536    +
781537    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
781538    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
781539    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
781540    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
781541    +end;
MPRINT(EM_DIAGRAM):   end;
781542    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
781543    +if (_UFORMAT eq '0'
781544    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
781545    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
781546    +end;
MPRINT(EM_DIAGRAM):   end;
781547    +else
781548    +if (_UFORMAT eq '1'
781549    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
781550    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
781551    +end;
MPRINT(EM_DIAGRAM):   end;
781552    +else do;
MPRINT(EM_DIAGRAM):   else do;
781553    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
781554    +end;
MPRINT(EM_DIAGRAM):   end;
781555    +end;
MPRINT(EM_DIAGRAM):   end;
781556    +
781557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781558    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
781559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781560    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
781561    +
781562    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
781563    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
781564    +end;
MPRINT(EM_DIAGRAM):   end;
781565    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
781566    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
781567    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
781568    +end;
MPRINT(EM_DIAGRAM):   end;
781569    +else
781570    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
781571    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
781572    +end;
MPRINT(EM_DIAGRAM):   end;
781573    +else
781574    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
781575    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
781576    +end;
MPRINT(EM_DIAGRAM):   end;
781577    +else
781578    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
781579    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
781580    +end;
MPRINT(EM_DIAGRAM):   end;
781581    +end;
MPRINT(EM_DIAGRAM):   end;
781582    +
781583    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781584    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
781585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781586    +LABEL GRP_Income =
781587    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
781588    +
781589    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
781590    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
781591    +end;
MPRINT(EM_DIAGRAM):   end;
781592    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
781593    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
781594    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
781595    +end;
MPRINT(EM_DIAGRAM):   end;
781596    +else
781597    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
781598    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
781599    +end;
MPRINT(EM_DIAGRAM):   end;
781600    +else
781601    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
781602    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
781603    +end;
MPRINT(EM_DIAGRAM):   end;
781604    +else
781605    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
781606    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
781607    +end;
MPRINT(EM_DIAGRAM):   end;
781608    +end;
MPRINT(EM_DIAGRAM):   end;
781609    +
781610    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781611    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
781612    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781613    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
781614    +
781615    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
781616    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
781617    +end;
MPRINT(EM_DIAGRAM):   end;
781618    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
781619    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
781620    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
781621    +end;
MPRINT(EM_DIAGRAM):   end;
781622    +else
781623    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
781624    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
781625    +end;
MPRINT(EM_DIAGRAM):   end;
781626    +else
781627    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
781628    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
781629    +end;
MPRINT(EM_DIAGRAM):   end;
781630    +else
781631    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
781632    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
781633    +end;
MPRINT(EM_DIAGRAM):   end;
781634    +end;
MPRINT(EM_DIAGRAM):   end;
781635    +
781636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781637    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
781638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781639    +LABEL GRP_MntFishProducts =
781640    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
781641    +
781642    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
781643    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
781644    +end;
MPRINT(EM_DIAGRAM):   end;
781645    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
781646    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
781647    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
781648    +end;
MPRINT(EM_DIAGRAM):   end;
781649    +else
781650    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
781651    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
781652    +end;
MPRINT(EM_DIAGRAM):   end;
781653    +else
781654    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
781655    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
781656    +end;
MPRINT(EM_DIAGRAM):   end;
781657    +else
781658    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
781659    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
781660    +end;
MPRINT(EM_DIAGRAM):   end;
781661    +end;
MPRINT(EM_DIAGRAM):   end;
781662    +
781663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781664    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
781665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781666    +LABEL GRP_MntGoldProds =
781667    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
781668    +
781669    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
781670    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
781671    +end;
MPRINT(EM_DIAGRAM):   end;
781672    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
781673    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
781674    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
781675    +end;
MPRINT(EM_DIAGRAM):   end;
781676    +else
781677    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
781678    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
781679    +end;
MPRINT(EM_DIAGRAM):   end;
781680    +else
781681    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
781682    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
781683    +end;
MPRINT(EM_DIAGRAM):   end;
781684    +else
781685    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
781686    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
781687    +end;
MPRINT(EM_DIAGRAM):   end;
781688    +end;
MPRINT(EM_DIAGRAM):   end;
781689    +
781690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781691    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
781692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781693    +LABEL GRP_MntMeatProducts =
781694    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
781695    +
781696    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
781697    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
781698    +end;
MPRINT(EM_DIAGRAM):   end;
781699    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
781700    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
781701    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
781702    +end;
MPRINT(EM_DIAGRAM):   end;
781703    +else
781704    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
781705    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
781706    +end;
MPRINT(EM_DIAGRAM):   end;
781707    +else
781708    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
781709    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
781710    +end;
MPRINT(EM_DIAGRAM):   end;
781711    +else
781712    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
781713    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
781714    +end;
MPRINT(EM_DIAGRAM):   end;
781715    +end;
MPRINT(EM_DIAGRAM):   end;
781716    +
781717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781718    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
781719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781720    +LABEL GRP_MntWines =
781721    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
781722    +
781723    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
781724    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
781725    +end;
MPRINT(EM_DIAGRAM):   end;
781726    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
781727    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
781728    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
781729    +end;
MPRINT(EM_DIAGRAM):   end;
781730    +else
781731    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
781732    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
781733    +end;
MPRINT(EM_DIAGRAM):   end;
781734    +else
781735    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
781736    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
781737    +end;
MPRINT(EM_DIAGRAM):   end;
781738    +else
781739    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
781740    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
781741    +end;
MPRINT(EM_DIAGRAM):   end;
781742    +end;
MPRINT(EM_DIAGRAM):   end;
781743    +
781744    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781745    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
781746    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781747    +LABEL GRP_NumCatalogPurchases =
781748    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
781749    +
781750    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
781751    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
781752    +end;
MPRINT(EM_DIAGRAM):   end;
781753    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
781754    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
781755    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
781756    +end;
MPRINT(EM_DIAGRAM):   end;
781757    +else
781758    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
781759    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
781760    +end;
MPRINT(EM_DIAGRAM):   end;
781761    +else
781762    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
781763    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
781764    +end;
MPRINT(EM_DIAGRAM):   end;
781765    +else
781766    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
781767    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
781768    +end;
MPRINT(EM_DIAGRAM):   end;
781769    +end;
MPRINT(EM_DIAGRAM):   end;
781770    +
781771    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781772    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
781773    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781774    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
781775    +
781776    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
781777    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
781778    +end;
MPRINT(EM_DIAGRAM):   end;
781779    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
781780    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
781781    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
781782    +end;
MPRINT(EM_DIAGRAM):   end;
781783    +else
781784    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
781785    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
781786    +end;
MPRINT(EM_DIAGRAM):   end;
781787    +else
781788    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
781789    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
781790    +end;
MPRINT(EM_DIAGRAM):   end;
781791    +else
781792    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
781793    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
781794    +end;
MPRINT(EM_DIAGRAM):   end;
781795    +end;
MPRINT(EM_DIAGRAM):   end;
781796    +
781797    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781798    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
781799    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781800    +LABEL GRP_NumWebPurchases =
781801    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
781802    +
781803    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
781804    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
781805    +end;
MPRINT(EM_DIAGRAM):   end;
781806    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
781807    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
781808    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
781809    +end;
MPRINT(EM_DIAGRAM):   end;
781810    +else
781811    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
781812    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
781813    +end;
MPRINT(EM_DIAGRAM):   end;
781814    +else
781815    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
781816    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
781817    +end;
MPRINT(EM_DIAGRAM):   end;
781818    +else
781819    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
781820    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
781821    +end;
MPRINT(EM_DIAGRAM):   end;
781822    +end;
MPRINT(EM_DIAGRAM):   end;
781823    +
781824    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781825    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
781826    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781827    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
781828    +
781829    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
781830    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
781831    +end;
MPRINT(EM_DIAGRAM):   end;
781832    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
781833    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
781834    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
781835    +end;
MPRINT(EM_DIAGRAM):   end;
781836    +else
781837    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
781838    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
781839    +end;
MPRINT(EM_DIAGRAM):   end;
781840    +else
781841    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
781842    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
781843    +end;
MPRINT(EM_DIAGRAM):   end;
781844    +else
781845    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
781846    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
781847    +end;
MPRINT(EM_DIAGRAM):   end;
781848    +end;
MPRINT(EM_DIAGRAM):   end;
781849    +
781850    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781851    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
781852    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781853    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
781854    +
781855    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
781856    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
781857    +end;
MPRINT(EM_DIAGRAM):   end;
781858    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
781859    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
781860    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
781861    +end;
MPRINT(EM_DIAGRAM):   end;
781862    +else
781863    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
781864    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
781865    +end;
MPRINT(EM_DIAGRAM):   end;
781866    +else
781867    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
781868    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
781869    +end;
MPRINT(EM_DIAGRAM):   end;
781870    +else
781871    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
781872    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
781873    +end;
MPRINT(EM_DIAGRAM):   end;
781874    +end;
MPRINT(EM_DIAGRAM):   end;
781875    +
781876    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781877    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
781878    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781879    +LABEL GRP_Recency =
781880    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
781881    +
781882    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
781883    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
781884    +end;
MPRINT(EM_DIAGRAM):   end;
781885    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
781886    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
781887    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
781888    +end;
MPRINT(EM_DIAGRAM):   end;
781889    +else
781890    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
781891    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
781892    +end;
MPRINT(EM_DIAGRAM):   end;
781893    +else
781894    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
781895    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
781896    +end;
MPRINT(EM_DIAGRAM):   end;
781897    +else
781898    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
781899    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
781900    +end;
MPRINT(EM_DIAGRAM):   end;
781901    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
781902     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
781903     quit;
781904     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
781905     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
781906     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
781907     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
781908     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
781909     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781910     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
781911     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781912     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781913     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
781914     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781915     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

781916     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
781917     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
781918     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
781919     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781920     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
781921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

781922     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
781923     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781924     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781925     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
781926     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
781927     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781928     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781929     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
781930     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
781930   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

781931     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781932     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
781933     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

781934     filename _pref
781934   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
781935     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
781936     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
781937    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781938    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
781939    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
781940    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
781941    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
781942    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
781943     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
781944     quit;
781945     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
781946     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
781947     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
781948     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
781949     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
781950     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781951     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
781952     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781953     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781954     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
781955     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781956     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

781957     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
781958     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
781959     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
781960     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781961     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
781962     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

781963     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
781964     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

781966     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
781967     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
781968     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781969     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781970     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
781971     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
781971   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

781972     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781973     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
781974     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 879 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

781975     filename _pref
781975   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
781976     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
781977     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
781978    +
781979    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
781980    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
781980   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
781981    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
781982    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
781983    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
781984    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
781985    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
781986     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
781987     quit;
781988     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
781989     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
781990     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
781991     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
781992     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
781993     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

781994     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
781995     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781996     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

781997     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
781998     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
781999     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782000     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782001     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
782002     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
782003     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782004     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
782005     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782006     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
782007     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782008     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782009     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782010     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
782011     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782012     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782013     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782014     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
782014   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

782015     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782016     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
782017     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 918 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782018     filename _pref
782018   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
782019     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
782020     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
782021    +
782022    +
782023    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
782024    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
782025    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
782026    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
782027    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
782028    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782029    +
782030    +
782031    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
782032    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
782033    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
782034    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
782035    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
782036    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782037    +
782038    +
782039    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
782040    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
782041    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
782042    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
782043    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
782044    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782045    +
782046    +
782047    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
782048    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
782049    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
782050    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
782051    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
782052    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782053    +
782054    +
782055    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
782056    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
782057    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
782058    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
782059    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
782060    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782061    +
782062    +
782063    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
782064    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
782065    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
782066    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
782067    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
782068    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782069    +
782070    +
782071    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
782072    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
782073    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
782074    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
782075    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
782076    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782077    +
782078    +
782079    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
782080    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
782081    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
782082    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
782083    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
782084    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782085    +if
782086    +_FILTERNORM1 not in ( '.')
782087    + and
782088    +_FILTERNORM2 not in ( '.')
782089    + and
782090    +_FILTERNORM3 not in ( '.')
782091    + and
782092    +_FILTERNORM4 not in ( '.')
782093    + and
782094    +_FILTERNORM5 not in ( '.')
782095    + and
782096    +_FILTERNORM6 not in ( '.')
782097    + and
782098    +_FILTERNORM7 not in ( ' ')
782099    + and
782100    +_FILTERNORM8 not in ( ' ')
782101    +and
782102    +( Dt_Customer ne .)
782103    +and ( Income ne . and (Income<=107000))
782104    +and ( Kidhome ne .)
782105    +and ( MntFishProducts ne .)
782106    +and ( MntFruits ne .)
782107    +and ( MntGoldProds ne .)
782108    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
782109    +and ( MntSweetProducts ne .)
782110    +and ( MntWines ne .)
782111    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
782112    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
782113    +and ( NumStorePurchases ne .)
782114    +and ( NumWebPurchases ne .)
782115    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
782116    +and ( Recency ne .)
782117    +and ( Teenhome ne .)
782118    +and ( Year_Birth ne .)
782119    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
782120    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
782121    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
782122    +end;
MPRINT(EM_DIAGRAM):   end;
782123    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
782124    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
782125     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
782126     quit;
782127     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
782128     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
782129     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
782130     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
782131     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
782132     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782133     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
782134     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782135     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782136     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
782137     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782138     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782139     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782140     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
782141     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
782142     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782143     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
782144     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

782145     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
782146     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782147     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782148     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782149     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
782150     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782151     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782152     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782153     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
782153   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

782154     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782155     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
782156     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 984 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782157     %macro varDept(fcmpdata=,id=);
782158     %global nobs&id scoreFlag&id;
782159     %let scoreFlag&id = 0;
782160     %if &id=1 or ^&fcmpStart %then %do;
782161     proc sort data=&fcmpdata out=_temp&id nodupkey;
782162     by NAME;
782163     where id=&id and LHS in( %let j=1;
782164     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
782165     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
782166     "&var" %let j = %eval(&j+1);
782167     %end;
782168     );
782169     run;
782170     %let dsid = %sysfunc(open(_temp&id));
782171     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
782172     %let dsid = %sysfunc(close(&dsid));
782173     %if &&nobs&id %then %do;
782174     %let scoreFlag&id = 1;
782175     %let fcmpStart = 1;
782176     %end;
782177     %else %let fcmpStart = 0;
782178     %end;
782179     %else %do;
782180     proc sort data=&fcmpdata out=_tempid;
782181     where id=&id;
782182     by LHS;
782183     run;
782184     %let dsid = %sysfunc(open(_tempid));
782185     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
782186     %let dsid = %sysfunc(close(&dsid));
782187     %if ^&&nobs&id %then %do;
782188     proc datasets lib=work nolist;
782189     delete _tempid;
782190     run;
782191     quit;
782192     %end;
782193     %else %do;
782194     data _tempAll;
782195     set %let j=%eval(&id-1);
782196     %do x=1 %to &j;
782197     %if &&nobs&x %then %do;
782198     _temp&x %end;
782199     %end;
782200     ;
782201     run;
782202     proc sql;
782203     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
782203   ! work._tempid p2 where p.name=p2.lhs;
782204     quit;
782205     data _temp&id;
782206     set _temp&id;
782207     where LHS ne '' and NAME ne '' and Node ne '';
782208     run;
782209     proc datasets lib=work nolist;
782210     delete _tempAll;
782211     run;
782212     %let dsid = %sysfunc(open(_temp&id));
782213     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
782214     %let dsid = %sysfunc(close(&dsid));
782215     %if ^&&nobs&id %then %do;
782216     proc datasets lib=work nolist;
782217     delete _temp&id;
782218     run;
782219     quit;
782220     %end;
782221     %else %do;
782222     %let scoreFlag&id = 1;
782223     data _temp&id;
782224     set _temp&id;
782225     where LHS ne NAME and node ne '';
782226     run;
782227     %let dsid = %sysfunc(open(_temp&id));
782228     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
782229     %let dsid = %sysfunc(close(&dsid));
782230     %if ^&&nobs&id %then %do;
782231     proc datasets lib=work nolist;
782232     delete _temp&id;
782233     run;
782234     quit;
782235     %end;
782236     %else %do;
782237     proc sort data=_temp&id nodupkey;
782238     by LHS NAME;
782239     run;
782240     %end;
782241     %end;
782242     %end;
782243     %end;
782244     %mend varDept;
782245     %macro optCode(outdata=fcmpdata);
782246     %global fcmpStart;
782247     %let fcmpStart = 0;
782248     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
782249     %let NumNodes=9;
782250     %do k=1 %to &NumNodes;
782251     %vardept(fcmpdata=&outdata, id=&k);
782252     %end;
782253     %mend optCode;
782254     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.38 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

782255     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
782256     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
782257     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
782258     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782259     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
782260     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
782261     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
782262     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782263     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782264     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
782264   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

782265     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

782266     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
782267     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
782268     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782269     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
782270     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
782271     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
782272     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782273     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
782274     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
782275     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
782276     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782277     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782278     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
782278   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

782279     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782280     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
782281     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
782282     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782283     filename _pref
782283   ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMPUBLISHSCORE.sas";
782284     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
782285     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMPUBLISHSCORE.sas.
782286    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
782287    +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
782288    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
782289    +
782290    +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
782291    +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
782292    +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
782293    +
782294    +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
782295    +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
782296    +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
782297    +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
782298    +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
782299    +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
782300    +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
782301    +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
782302    +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
782303    +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
782304    +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
782305    +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
782306    +
782307    +
782308    +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
782309    +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
782310    +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
782311    +
782312    +
782313    +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
782314    +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
782315    + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782316    +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
782317    +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
782318    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782319    +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
782320    +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
782321    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782322    +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
782323    +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
782324    +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
782325    +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
782326    +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
782327    +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
782328    +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
782329    +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
782330    +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
782331    +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
782332    +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
782333    +      END;
MPRINT(EM_DIAGRAM):   END;
782334    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782335    +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
782336    +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
782337    +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
782338    +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
782339    +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
782340    +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
782341    +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
782342    +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
782343    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
782344    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
782345    +      END;
MPRINT(EM_DIAGRAM):   END;
782346    +    END;
MPRINT(EM_DIAGRAM):   END;
782347    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782348    +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
782349    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782350    +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
782351    +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
782352    +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
782353    +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
782354    +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
782355    +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
782356    +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
782357    +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
782358    +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
782359    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
782360    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
782361    +      END;
MPRINT(EM_DIAGRAM):   END;
782362    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782363    +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
782364    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782365    +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
782366    +        _NODE_  =                   16;
MPRINT(EM_DIAGRAM):   _NODE_ = 16;
782367    +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
782368    +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
782369    +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
782370    +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
782371    +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
782372    +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
782373    +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
782374    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
782375    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
782376    +        END;
MPRINT(EM_DIAGRAM):   END;
782377    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782378    +        _NODE_  =                   17;
MPRINT(EM_DIAGRAM):   _NODE_ = 17;
782379    +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
782380    +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
782381    +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
782382    +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
782383    +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
782384    +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
782385    +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
782386    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
782387    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
782388    +        END;
MPRINT(EM_DIAGRAM):   END;
782389    +      END;
MPRINT(EM_DIAGRAM):   END;
782390    +    END;
MPRINT(EM_DIAGRAM):   END;
782391    +  END;
MPRINT(EM_DIAGRAM):   END;
782392    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782393    +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
782394    +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782395    +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
782396    +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
782397    +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
782398    +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
782399    +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
782400    +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
782401    +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
782402    +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
782403    +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
782404    +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
782405    +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
782406    +    END;
MPRINT(EM_DIAGRAM):   END;
782407    +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782408    +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
782409    +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782410    +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
782411    +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
782412    +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782413    +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
782414    +        _NODE_  =                   20;
MPRINT(EM_DIAGRAM):   _NODE_ = 20;
782415    +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
782416    +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
782417    +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
782418    +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
782419    +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
782420    +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
782421    +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
782422    +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
782423    +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
782424    +        END;
MPRINT(EM_DIAGRAM):   END;
782425    +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782426    +        _NODE_  =                   21;
MPRINT(EM_DIAGRAM):   _NODE_ = 21;
782427    +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
782428    +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
782429    +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
782430    +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
782431    +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
782432    +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
782433    +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
782434    +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
782435    +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
782436    +        END;
MPRINT(EM_DIAGRAM):   END;
782437    +      END;
MPRINT(EM_DIAGRAM):   END;
782438    +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
782439    +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
782440    +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
782441    +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
782442    +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
782443    +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
782444    +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
782445    +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
782446    +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
782447    +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
782448    +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
782449    +      END;
MPRINT(EM_DIAGRAM):   END;
782450    +    END;
MPRINT(EM_DIAGRAM):   END;
782451    +  END;
MPRINT(EM_DIAGRAM):   END;
782452    +
782453    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
782454    +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
782455    +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
782456    +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
782457     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
782458     quit;
782459     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
782460     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
782461     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
782462     retain ID 2 Node "Tree3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree3";
782463     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
782464     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 65 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782465     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
782466     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782467     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 65 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782468     proc sort data=EMWS8.Tree3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree3_variableset out=_temp2(keep=NAME CREATOR);
782469     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782470     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.TREE3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782471     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782472     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
782473     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
782474     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782475     proc contents data=EMWS8.Tree3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree3_train out=_meta(keep=NAME) noprint;
782476     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 72 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

782477     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
782478     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782479     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 72 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 72 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782480     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782481     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
782482     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782483     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 72 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 72 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782484     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782485     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
782485   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 55 rows and 5 columns.

782486     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782487     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
782488     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 55 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 55 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782489     filename _pref
782489   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
782490     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
782491     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
782492    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
782493    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
782494    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
782495    +
782496    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782497    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
782498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782499    +LABEL GRP_AcceptedCmp5 =
782500    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
782501    +
782502    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
782503    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
782504    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
782505    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
782506    +end;
MPRINT(EM_DIAGRAM):   end;
782507    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
782508    +if (_UFORMAT eq '0'
782509    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
782510    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
782511    +end;
MPRINT(EM_DIAGRAM):   end;
782512    +else
782513    +if (_UFORMAT eq '1'
782514    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
782515    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
782516    +end;
MPRINT(EM_DIAGRAM):   end;
782517    +else do;
MPRINT(EM_DIAGRAM):   else do;
782518    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
782519    +end;
MPRINT(EM_DIAGRAM):   end;
782520    +end;
MPRINT(EM_DIAGRAM):   end;
782521    +
782522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782523    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
782524    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782525    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
782526    +
782527    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
782528    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
782529    +end;
MPRINT(EM_DIAGRAM):   end;
782530    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
782531    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
782532    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
782533    +end;
MPRINT(EM_DIAGRAM):   end;
782534    +else
782535    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
782536    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
782537    +end;
MPRINT(EM_DIAGRAM):   end;
782538    +else
782539    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
782540    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
782541    +end;
MPRINT(EM_DIAGRAM):   end;
782542    +else
782543    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
782544    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
782545    +end;
MPRINT(EM_DIAGRAM):   end;
782546    +end;
MPRINT(EM_DIAGRAM):   end;
782547    +
782548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782549    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
782550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782551    +LABEL GRP_Income =
782552    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
782553    +
782554    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
782555    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
782556    +end;
MPRINT(EM_DIAGRAM):   end;
782557    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
782558    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
782559    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
782560    +end;
MPRINT(EM_DIAGRAM):   end;
782561    +else
782562    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
782563    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
782564    +end;
MPRINT(EM_DIAGRAM):   end;
782565    +else
782566    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
782567    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
782568    +end;
MPRINT(EM_DIAGRAM):   end;
782569    +else
782570    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
782571    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
782572    +end;
MPRINT(EM_DIAGRAM):   end;
782573    +end;
MPRINT(EM_DIAGRAM):   end;
782574    +
782575    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782576    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
782577    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782578    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
782579    +
782580    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
782581    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
782582    +end;
MPRINT(EM_DIAGRAM):   end;
782583    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
782584    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
782585    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
782586    +end;
MPRINT(EM_DIAGRAM):   end;
782587    +else
782588    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
782589    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
782590    +end;
MPRINT(EM_DIAGRAM):   end;
782591    +else
782592    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
782593    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
782594    +end;
MPRINT(EM_DIAGRAM):   end;
782595    +else
782596    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
782597    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
782598    +end;
MPRINT(EM_DIAGRAM):   end;
782599    +end;
MPRINT(EM_DIAGRAM):   end;
782600    +
782601    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782602    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
782603    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782604    +LABEL GRP_MntFishProducts =
782605    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
782606    +
782607    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
782608    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
782609    +end;
MPRINT(EM_DIAGRAM):   end;
782610    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
782611    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
782612    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
782613    +end;
MPRINT(EM_DIAGRAM):   end;
782614    +else
782615    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
782616    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
782617    +end;
MPRINT(EM_DIAGRAM):   end;
782618    +else
782619    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
782620    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
782621    +end;
MPRINT(EM_DIAGRAM):   end;
782622    +else
782623    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
782624    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
782625    +end;
MPRINT(EM_DIAGRAM):   end;
782626    +end;
MPRINT(EM_DIAGRAM):   end;
782627    +
782628    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782629    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
782630    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782631    +LABEL GRP_MntGoldProds =
782632    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
782633    +
782634    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
782635    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
782636    +end;
MPRINT(EM_DIAGRAM):   end;
782637    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
782638    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
782639    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
782640    +end;
MPRINT(EM_DIAGRAM):   end;
782641    +else
782642    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
782643    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
782644    +end;
MPRINT(EM_DIAGRAM):   end;
782645    +else
782646    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
782647    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
782648    +end;
MPRINT(EM_DIAGRAM):   end;
782649    +else
782650    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
782651    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
782652    +end;
MPRINT(EM_DIAGRAM):   end;
782653    +end;
MPRINT(EM_DIAGRAM):   end;
782654    +
782655    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782656    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
782657    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782658    +LABEL GRP_MntMeatProducts =
782659    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
782660    +
782661    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
782662    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
782663    +end;
MPRINT(EM_DIAGRAM):   end;
782664    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
782665    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
782666    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
782667    +end;
MPRINT(EM_DIAGRAM):   end;
782668    +else
782669    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
782670    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
782671    +end;
MPRINT(EM_DIAGRAM):   end;
782672    +else
782673    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
782674    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
782675    +end;
MPRINT(EM_DIAGRAM):   end;
782676    +else
782677    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
782678    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
782679    +end;
MPRINT(EM_DIAGRAM):   end;
782680    +end;
MPRINT(EM_DIAGRAM):   end;
782681    +
782682    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782683    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
782684    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782685    +LABEL GRP_MntWines =
782686    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
782687    +
782688    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
782689    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
782690    +end;
MPRINT(EM_DIAGRAM):   end;
782691    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
782692    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
782693    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
782694    +end;
MPRINT(EM_DIAGRAM):   end;
782695    +else
782696    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
782697    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
782698    +end;
MPRINT(EM_DIAGRAM):   end;
782699    +else
782700    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
782701    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
782702    +end;
MPRINT(EM_DIAGRAM):   end;
782703    +else
782704    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
782705    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
782706    +end;
MPRINT(EM_DIAGRAM):   end;
782707    +end;
MPRINT(EM_DIAGRAM):   end;
782708    +
782709    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782710    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
782711    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782712    +LABEL GRP_NumCatalogPurchases =
782713    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
782714    +
782715    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
782716    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
782717    +end;
MPRINT(EM_DIAGRAM):   end;
782718    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
782719    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
782720    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
782721    +end;
MPRINT(EM_DIAGRAM):   end;
782722    +else
782723    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
782724    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
782725    +end;
MPRINT(EM_DIAGRAM):   end;
782726    +else
782727    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
782728    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
782729    +end;
MPRINT(EM_DIAGRAM):   end;
782730    +else
782731    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
782732    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
782733    +end;
MPRINT(EM_DIAGRAM):   end;
782734    +end;
MPRINT(EM_DIAGRAM):   end;
782735    +
782736    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782737    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
782738    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782739    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
782740    +
782741    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
782742    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
782743    +end;
MPRINT(EM_DIAGRAM):   end;
782744    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
782745    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
782746    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
782747    +end;
MPRINT(EM_DIAGRAM):   end;
782748    +else
782749    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
782750    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
782751    +end;
MPRINT(EM_DIAGRAM):   end;
782752    +else
782753    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
782754    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
782755    +end;
MPRINT(EM_DIAGRAM):   end;
782756    +else
782757    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
782758    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
782759    +end;
MPRINT(EM_DIAGRAM):   end;
782760    +end;
MPRINT(EM_DIAGRAM):   end;
782761    +
782762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782763    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
782764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782765    +LABEL GRP_NumWebPurchases =
782766    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
782767    +
782768    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
782769    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
782770    +end;
MPRINT(EM_DIAGRAM):   end;
782771    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
782772    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
782773    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
782774    +end;
MPRINT(EM_DIAGRAM):   end;
782775    +else
782776    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
782777    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
782778    +end;
MPRINT(EM_DIAGRAM):   end;
782779    +else
782780    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
782781    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
782782    +end;
MPRINT(EM_DIAGRAM):   end;
782783    +else
782784    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
782785    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
782786    +end;
MPRINT(EM_DIAGRAM):   end;
782787    +end;
MPRINT(EM_DIAGRAM):   end;
782788    +
782789    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782790    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
782791    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782792    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
782793    +
782794    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
782795    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
782796    +end;
MPRINT(EM_DIAGRAM):   end;
782797    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
782798    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
782799    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
782800    +end;
MPRINT(EM_DIAGRAM):   end;
782801    +else
782802    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
782803    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
782804    +end;
MPRINT(EM_DIAGRAM):   end;
782805    +else
782806    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
782807    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
782808    +end;
MPRINT(EM_DIAGRAM):   end;
782809    +else
782810    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
782811    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
782812    +end;
MPRINT(EM_DIAGRAM):   end;
782813    +end;
MPRINT(EM_DIAGRAM):   end;
782814    +
782815    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782816    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
782817    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782818    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
782819    +
782820    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
782821    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
782822    +end;
MPRINT(EM_DIAGRAM):   end;
782823    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
782824    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
782825    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
782826    +end;
MPRINT(EM_DIAGRAM):   end;
782827    +else
782828    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
782829    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
782830    +end;
MPRINT(EM_DIAGRAM):   end;
782831    +else
782832    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
782833    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
782834    +end;
MPRINT(EM_DIAGRAM):   end;
782835    +else
782836    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
782837    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
782838    +end;
MPRINT(EM_DIAGRAM):   end;
782839    +end;
MPRINT(EM_DIAGRAM):   end;
782840    +
782841    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782842    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
782843    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782844    +LABEL GRP_Recency =
782845    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
782846    +
782847    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
782848    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
782849    +end;
MPRINT(EM_DIAGRAM):   end;
782850    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
782851    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
782852    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
782853    +end;
MPRINT(EM_DIAGRAM):   end;
782854    +else
782855    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
782856    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
782857    +end;
MPRINT(EM_DIAGRAM):   end;
782858    +else
782859    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
782860    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
782861    +end;
MPRINT(EM_DIAGRAM):   end;
782862    +else
782863    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
782864    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
782865    +end;
MPRINT(EM_DIAGRAM):   end;
782866    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
782867     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
782868     quit;
782869     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
782870     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
782871     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
782872     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
782873     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
782874     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782875     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
782876     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782878     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
782879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782881     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782882     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
782883     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
782884     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782885     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
782886     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

782887     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
782888     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782890     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782891     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
782892     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782893     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782894     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782895     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
782895   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

782896     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782897     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
782898     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 70 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782899     filename _pref
782899   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
782900     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
782901     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
782902    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782903    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
782904    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
782905    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
782906    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
782907    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
782908     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
782909     quit;
782910     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
782911     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
782912     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
782913     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
782914     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
782915     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782916     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
782917     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782918     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782919     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
782920     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782921     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782922     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782923     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
782924     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
782925     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782926     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
782927     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

782928     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
782929     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782931     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782932     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
782933     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782934     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782935     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782936     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
782936   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

782937     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782938     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
782939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 74 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782940     filename _pref
782940   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
782941     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
782942     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
782943    +
782944    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
782945    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
782945   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
782946    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
782947    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
782948    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
782949    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
782950    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
782951     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
782952     quit;
782953     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
782954     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
782955     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
782956     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
782957     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
782958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782959     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
782960     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782962     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
782963     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782964     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

782965     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782966     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
782967     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
782968     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782969     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
782970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782971     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
782972     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782973     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782974     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
782975     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
782976     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
782977     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782978     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
782979     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
782979   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

782980     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782981     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
782982     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 113 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

782983     filename _pref
782983   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
782984     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
782985     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
782986    +
782987    +
782988    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
782989    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
782990    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
782991    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
782992    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
782993    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
782994    +
782995    +
782996    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
782997    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
782998    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
782999    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
783000    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
783001    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
783002    +
783003    +
783004    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
783005    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
783006    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
783007    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
783008    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
783009    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
783010    +
783011    +
783012    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
783013    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
783014    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
783015    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
783016    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
783017    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
783018    +
783019    +
783020    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
783021    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
783022    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
783023    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
783024    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
783025    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
783026    +
783027    +
783028    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
783029    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
783030    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
783031    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
783032    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
783033    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
783034    +
783035    +
783036    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
783037    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
783038    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
783039    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
783040    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
783041    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
783042    +
783043    +
783044    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
783045    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
783046    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
783047    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
783048    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
783049    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
783050    +if
783051    +_FILTERNORM1 not in ( '.')
783052    + and
783053    +_FILTERNORM2 not in ( '.')
783054    + and
783055    +_FILTERNORM3 not in ( '.')
783056    + and
783057    +_FILTERNORM4 not in ( '.')
783058    + and
783059    +_FILTERNORM5 not in ( '.')
783060    + and
783061    +_FILTERNORM6 not in ( '.')
783062    + and
783063    +_FILTERNORM7 not in ( ' ')
783064    + and
783065    +_FILTERNORM8 not in ( ' ')
783066    +and
783067    +( Dt_Customer ne .)
783068    +and ( Income ne . and (Income<=107000))
783069    +and ( Kidhome ne .)
783070    +and ( MntFishProducts ne .)
783071    +and ( MntFruits ne .)
783072    +and ( MntGoldProds ne .)
783073    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
783074    +and ( MntSweetProducts ne .)
783075    +and ( MntWines ne .)
783076    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
783077    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
783078    +and ( NumStorePurchases ne .)
783079    +and ( NumWebPurchases ne .)
783080    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
783081    +and ( Recency ne .)
783082    +and ( Teenhome ne .)
783083    +and ( Year_Birth ne .)
783084    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
783085    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
783086    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
783087    +end;
MPRINT(EM_DIAGRAM):   end;
783088    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
783089    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
783090     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
783091     quit;
783092     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
783093     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
783094     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
783095     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
783096     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
783097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

783098     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
783099     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783101     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
783102     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783103     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

783104     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
783105     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
783106     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
783107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783108     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
783109     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

783110     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
783111     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783112     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

783113     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
783114     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
783115     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783116     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783117     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
783118     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
783118   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

783119     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783120     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
783121     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 179 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

783122     %macro varDept(fcmpdata=,id=);
783123     %global nobs&id scoreFlag&id;
783124     %let scoreFlag&id = 0;
783125     %if &id=1 or ^&fcmpStart %then %do;
783126     proc sort data=&fcmpdata out=_temp&id nodupkey;
783127     by NAME;
783128     where id=&id and LHS in( %let j=1;
783129     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
783130     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
783131     "&var" %let j = %eval(&j+1);
783132     %end;
783133     );
783134     run;
783135     %let dsid = %sysfunc(open(_temp&id));
783136     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
783137     %let dsid = %sysfunc(close(&dsid));
783138     %if &&nobs&id %then %do;
783139     %let scoreFlag&id = 1;
783140     %let fcmpStart = 1;
783141     %end;
783142     %else %let fcmpStart = 0;
783143     %end;
783144     %else %do;
783145     proc sort data=&fcmpdata out=_tempid;
783146     where id=&id;
783147     by LHS;
783148     run;
783149     %let dsid = %sysfunc(open(_tempid));
783150     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
783151     %let dsid = %sysfunc(close(&dsid));
783152     %if ^&&nobs&id %then %do;
783153     proc datasets lib=work nolist;
783154     delete _tempid;
783155     run;
783156     quit;
783157     %end;
783158     %else %do;
783159     data _tempAll;
783160     set %let j=%eval(&id-1);
783161     %do x=1 %to &j;
783162     %if &&nobs&x %then %do;
783163     _temp&x %end;
783164     %end;
783165     ;
783166     run;
783167     proc sql;
783168     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
783168   ! work._tempid p2 where p.name=p2.lhs;
783169     quit;
783170     data _temp&id;
783171     set _temp&id;
783172     where LHS ne '' and NAME ne '' and Node ne '';
783173     run;
783174     proc datasets lib=work nolist;
783175     delete _tempAll;
783176     run;
783177     %let dsid = %sysfunc(open(_temp&id));
783178     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
783179     %let dsid = %sysfunc(close(&dsid));
783180     %if ^&&nobs&id %then %do;
783181     proc datasets lib=work nolist;
783182     delete _temp&id;
783183     run;
783184     quit;
783185     %end;
783186     %else %do;
783187     %let scoreFlag&id = 1;
783188     data _temp&id;
783189     set _temp&id;
783190     where LHS ne NAME and node ne '';
783191     run;
783192     %let dsid = %sysfunc(open(_temp&id));
783193     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
783194     %let dsid = %sysfunc(close(&dsid));
783195     %if ^&&nobs&id %then %do;
783196     proc datasets lib=work nolist;
783197     delete _temp&id;
783198     run;
783199     quit;
783200     %end;
783201     %else %do;
783202     proc sort data=_temp&id nodupkey;
783203     by LHS NAME;
783204     run;
783205     %end;
783206     %end;
783207     %end;
783208     %end;
783209     %mend varDept;
783210     %macro optCode(outdata=fcmpdata);
783211     %global fcmpStart;
783212     %let fcmpStart = 0;
783213     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
783214     %let NumNodes=9;
783215     %do k=1 %to &NumNodes;
783216     %vardept(fcmpdata=&outdata, id=&k);
783217     %end;
783218     %mend optCode;
783219     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 10 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 5 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 12 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 12 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: There were 12 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

783220     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
783221     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
783222     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
783223     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783224     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
783225     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
783226     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
783227     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783228     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
783229     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
783229   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 5 rows and 3 columns.

783230     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

783231     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
783232     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
783233     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 5 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783234     filename _pref
783234   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
783235     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
783236     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas.
783237    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
783238    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
783239    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
783240    +
783241    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
783242    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
783243    +
783244    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
783245    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
783246    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
783247    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
783248    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
783249    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
783250    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
783251    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
783252    +
783253    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
783254    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
783255    +
783256    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
783257    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
783258    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
783259    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
783260    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783261    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783262    +end;
MPRINT(EM_DIAGRAM):   end;
783263    +else do;
MPRINT(EM_DIAGRAM):   else do;
783264    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783265    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
783266    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783267    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
783268    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
783269    +   end;
MPRINT(EM_DIAGRAM):   end;
783270    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
783271    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
783272    +   end;
MPRINT(EM_DIAGRAM):   end;
783273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783274    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
783275    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783276    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783277    +   end;
MPRINT(EM_DIAGRAM):   end;
783278    +end;
MPRINT(EM_DIAGRAM):   end;
783279    +
783280    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
783281    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
783282    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
783283    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
783284    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
783285    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
783286    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783287    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783288    +end;
MPRINT(EM_DIAGRAM):   end;
783289    +else do;
MPRINT(EM_DIAGRAM):   else do;
783290    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783291    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
783292    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783293    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
783294    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
783295    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
783296    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
783297    +   end;
MPRINT(EM_DIAGRAM):   end;
783298    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
783299    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
783300    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
783301    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
783302    +   end;
MPRINT(EM_DIAGRAM):   end;
783303    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783304    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
783305    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
783306    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
783307    +   end;
MPRINT(EM_DIAGRAM):   end;
783308    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783309    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
783310    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
783311    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
783312    +   end;
MPRINT(EM_DIAGRAM):   end;
783313    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783314    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
783315    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
783316    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
783317    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783318    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783319    +   end;
MPRINT(EM_DIAGRAM):   end;
783320    +end;
MPRINT(EM_DIAGRAM):   end;
783321    +
783322    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
783323    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
783324    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
783325    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
783326    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
783327    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
783328    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783329    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783330    +end;
MPRINT(EM_DIAGRAM):   end;
783331    +else do;
MPRINT(EM_DIAGRAM):   else do;
783332    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783333    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
783334    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783335    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
783336    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
783337    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
783338    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
783339    +   end;
MPRINT(EM_DIAGRAM):   end;
783340    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783341    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
783342    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
783343    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
783344    +   end;
MPRINT(EM_DIAGRAM):   end;
783345    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
783346    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
783347    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
783348    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
783349    +   end;
MPRINT(EM_DIAGRAM):   end;
783350    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783351    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
783352    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
783353    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
783354    +   end;
MPRINT(EM_DIAGRAM):   end;
783355    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783356    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
783357    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
783358    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
783359    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783360    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783361    +   end;
MPRINT(EM_DIAGRAM):   end;
783362    +end;
MPRINT(EM_DIAGRAM):   end;
783363    +
783364    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
783365    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
783366    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
783367    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
783368    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
783369    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
783370    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783371    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783372    +end;
MPRINT(EM_DIAGRAM):   end;
783373    +else do;
MPRINT(EM_DIAGRAM):   else do;
783374    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783375    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
783376    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783377    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
783378    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
783379    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
783380    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
783381    +   end;
MPRINT(EM_DIAGRAM):   end;
783382    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
783383    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
783384    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
783385    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
783386    +   end;
MPRINT(EM_DIAGRAM):   end;
783387    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783388    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
783389    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
783390    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
783391    +   end;
MPRINT(EM_DIAGRAM):   end;
783392    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783393    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
783394    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
783395    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
783396    +   end;
MPRINT(EM_DIAGRAM):   end;
783397    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783398    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
783399    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
783400    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
783401    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783402    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783403    +   end;
MPRINT(EM_DIAGRAM):   end;
783404    +end;
MPRINT(EM_DIAGRAM):   end;
783405    +
783406    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
783407    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
783408    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
783409    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
783410    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
783411    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
783412    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783413    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783414    +end;
MPRINT(EM_DIAGRAM):   end;
783415    +else do;
MPRINT(EM_DIAGRAM):   else do;
783416    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783417    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
783418    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783419    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
783420    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
783421    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
783422    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
783423    +   end;
MPRINT(EM_DIAGRAM):   end;
783424    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783425    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
783426    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
783427    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
783428    +   end;
MPRINT(EM_DIAGRAM):   end;
783429    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
783430    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
783431    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
783432    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
783433    +   end;
MPRINT(EM_DIAGRAM):   end;
783434    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783435    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
783436    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
783437    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
783438    +   end;
MPRINT(EM_DIAGRAM):   end;
783439    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783440    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
783441    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
783442    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
783443    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783444    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783445    +   end;
MPRINT(EM_DIAGRAM):   end;
783446    +end;
MPRINT(EM_DIAGRAM):   end;
783447    +
783448    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
783449    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
783450    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
783451    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
783452    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
783453    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
783454    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783455    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783456    +end;
MPRINT(EM_DIAGRAM):   end;
783457    +else do;
MPRINT(EM_DIAGRAM):   else do;
783458    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783459    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
783460    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783461    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
783462    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
783463    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
783464    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
783465    +   end;
MPRINT(EM_DIAGRAM):   end;
783466    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
783467    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
783468    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
783469    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
783470    +   end;
MPRINT(EM_DIAGRAM):   end;
783471    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783472    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
783473    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
783474    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
783475    +   end;
MPRINT(EM_DIAGRAM):   end;
783476    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783477    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
783478    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
783479    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
783480    +   end;
MPRINT(EM_DIAGRAM):   end;
783481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783482    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
783483    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
783484    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
783485    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783486    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783487    +   end;
MPRINT(EM_DIAGRAM):   end;
783488    +end;
MPRINT(EM_DIAGRAM):   end;
783489    +
783490    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
783491    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
783492    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
783493    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
783494    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
783495    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783496    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783497    +end;
MPRINT(EM_DIAGRAM):   end;
783498    +else do;
MPRINT(EM_DIAGRAM):   else do;
783499    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783500    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
783501    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783502    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
783503    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
783504    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
783505    +   end;
MPRINT(EM_DIAGRAM):   end;
783506    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
783507    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
783508    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
783509    +   end;
MPRINT(EM_DIAGRAM):   end;
783510    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783511    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
783512    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
783513    +   end;
MPRINT(EM_DIAGRAM):   end;
783514    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783515    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
783516    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
783517    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783518    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783519    +   end;
MPRINT(EM_DIAGRAM):   end;
783520    +end;
MPRINT(EM_DIAGRAM):   end;
783521    +
783522    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
783523    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
783524    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
783525    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
783526    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
783527    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
783528    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783529    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783530    +end;
MPRINT(EM_DIAGRAM):   end;
783531    +else do;
MPRINT(EM_DIAGRAM):   else do;
783532    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783533    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
783534    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783535    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
783536    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
783537    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
783538    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
783539    +   end;
MPRINT(EM_DIAGRAM):   end;
783540    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783541    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
783542    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
783543    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
783544    +   end;
MPRINT(EM_DIAGRAM):   end;
783545    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783546    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
783547    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
783548    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
783549    +   end;
MPRINT(EM_DIAGRAM):   end;
783550    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
783551    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
783552    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
783553    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
783554    +   end;
MPRINT(EM_DIAGRAM):   end;
783555    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783556    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
783557    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
783558    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
783559    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783560    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783561    +   end;
MPRINT(EM_DIAGRAM):   end;
783562    +end;
MPRINT(EM_DIAGRAM):   end;
783563    +
783564    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
783565    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
783566    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
783567    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
783568    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
783569    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
783570    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783571    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783572    +end;
MPRINT(EM_DIAGRAM):   end;
783573    +else do;
MPRINT(EM_DIAGRAM):   else do;
783574    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783575    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
783576    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783577    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
783578    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
783579    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
783580    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
783581    +   end;
MPRINT(EM_DIAGRAM):   end;
783582    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
783583    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
783584    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
783585    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
783586    +   end;
MPRINT(EM_DIAGRAM):   end;
783587    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783588    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
783589    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
783590    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
783591    +   end;
MPRINT(EM_DIAGRAM):   end;
783592    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783593    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
783594    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
783595    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
783596    +   end;
MPRINT(EM_DIAGRAM):   end;
783597    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783598    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
783599    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
783600    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
783601    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783602    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783603    +   end;
MPRINT(EM_DIAGRAM):   end;
783604    +end;
MPRINT(EM_DIAGRAM):   end;
783605    +
783606    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
783607    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
783608    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
783609    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
783610    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
783611    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
783612    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
783613    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783614    +end;
MPRINT(EM_DIAGRAM):   end;
783615    +else do;
MPRINT(EM_DIAGRAM):   else do;
783616    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
783617    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
783618    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
783619    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
783620    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
783621    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
783622    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
783623    +   end;
MPRINT(EM_DIAGRAM):   end;
783624    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
783625    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
783626    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
783627    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
783628    +   end;
MPRINT(EM_DIAGRAM):   end;
783629    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
783630    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
783631    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
783632    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
783633    +   end;
MPRINT(EM_DIAGRAM):   end;
783634    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
783635    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
783636    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
783637    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
783638    +   end;
MPRINT(EM_DIAGRAM):   end;
783639    +   else do;
MPRINT(EM_DIAGRAM):   else do;
783640    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
783641    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
783642    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
783643    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
783644    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
783645    +   end;
MPRINT(EM_DIAGRAM):   end;
783646    +end;
MPRINT(EM_DIAGRAM):   end;
783647    +
783648    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
783649    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
783650    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
783651    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
783652    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
783653    +end;
MPRINT(EM_DIAGRAM):   end;
783654    +
783655    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
783656    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
783657    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
783658    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
783659    +
783660    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
783661    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783662    +_LP0 = _LP0 + (   -1.02877515677573) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.02877515677573) * _TEMP * _1_0;
783663    +
783664    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
783665    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783666    +_LP0 = _LP0 + (     1.9467311516595) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.9467311516595) * _TEMP * _2_0;
783667    +_LP0 = _LP0 + (    0.16734849497288) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16734849497288) * _TEMP * _2_1;
783668    +_LP0 = _LP0 + (   -0.71216043302912) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71216043302912) * _TEMP * _2_2;
783669    +
783670    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
783671    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783672    +_LP0 = _LP0 + (    1.00633080323166) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.00633080323166) * _TEMP * _3_0;
783673    +_LP0 = _LP0 + (    0.85917878021713) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.85917878021713) * _TEMP * _3_1;
783674    +_LP0 = _LP0 + (   -0.97761167986152) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.97761167986152) * _TEMP * _3_2;
783675    +
783676    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
783677    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783678    +_LP0 = _LP0 + (    0.65248692594388) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.65248692594388) * _TEMP * _5_0;
783679    +_LP0 = _LP0 + (     0.0417259399181) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0417259399181) * _TEMP * _5_1;
783680    +_LP0 = _LP0 + (   -0.05258075832348) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05258075832348) * _TEMP * _5_2;
783681    +
783682    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
783683    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783684    +_LP0 = _LP0 + (   -1.48113569275309) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.48113569275309) * _TEMP * _7_0;
783685    +_LP0 = _LP0 + (   -0.22439832100882) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.22439832100882) * _TEMP * _7_1;
783686    +_LP0 = _LP0 + (     0.5480751224945) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.5480751224945) * _TEMP * _7_2;
783687    +
783688    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
783689    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783690    +_LP0 = _LP0 + (    1.04449090892344) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.04449090892344) * _TEMP * _8_0;
783691    +_LP0 = _LP0 + (    0.44337701613731) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.44337701613731) * _TEMP * _8_1;
783692    +_LP0 = _LP0 + (   -0.60815032674089) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.60815032674089) * _TEMP * _8_2;
783693    +
783694    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
783695    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783696    +_LP0 = _LP0 + (   -1.14772939970229) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.14772939970229) * _TEMP * _9_0;
783697    +_LP0 = _LP0 + (    0.01236638317437) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01236638317437) * _TEMP * _9_1;
783698    +
783699    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
783700    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783701    +_LP0 = _LP0 + (   -2.65515163278803) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65515163278803) * _TEMP * _10_0;
783702    +_LP0 = _LP0 + (    0.05356116501287) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05356116501287) * _TEMP * _10_1;
783703    +_LP0 = _LP0 + (    0.54048303369343) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.54048303369343) * _TEMP * _10_2;
783704    +
783705    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
783706    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783707    +_LP0 = _LP0 + (   -0.25558521864842) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25558521864842) * _TEMP * _13_0;
783708    +_LP0 = _LP0 + (    0.02282756746923) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02282756746923) * _TEMP * _13_1;
783709    +_LP0 = _LP0 + (   -0.39418668032866) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.39418668032866) * _TEMP * _13_2;
783710    +
783711    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
783712    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
783713    +_LP0 = _LP0 + (    1.93344839762718) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.93344839762718) * _TEMP * _14_0;
783714    +_LP0 = _LP0 + (    0.53898198413912) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53898198413912) * _TEMP * _14_1;
783715    +_LP0 = _LP0 + (   -0.59895640903963) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.59895640903963) * _TEMP * _14_2;
783716    +
783717    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
783718    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
783719    +_TEMP =    -1.75214170195592 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -1.75214170195592 + _LP0;
783720    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
783721    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
783722    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
783723    +end;
MPRINT(EM_DIAGRAM):   end;
783724    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
783725    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
783726    +
783727    +REG3DR1:
783728    +
783729    +
783730    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Posterior Probabilities and Predicted Level;
783731    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
783732    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
783733    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
783734    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
783735    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
783736    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
783737    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
783738    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
783739    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
783740    +end;
MPRINT(EM_DIAGRAM):   end;
783741    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
783742    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
783743    +
783744    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
783745    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
783746    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
783747     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
783748     quit;
783749     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
783750     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
783751     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
783752     retain ID 2 Node "Reg3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg3";
783753     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
783754     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 860 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 860 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783755     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
783756     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783757     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 860 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 860 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783758     proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
783759     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783760     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.REG3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783761     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
783762     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
783763     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
783764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783765     proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
783766     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

783767     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
783768     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783769     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783770     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
783771     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
783772     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
783773     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783774     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
783775     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
783775   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 420 rows and 5 columns.

783776     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

783777     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
783778     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 420 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 420 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

783779     filename _pref
783779   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
783780     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
783781     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
783782    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
783783    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
783784    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
783785    +
783786    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783787    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
783788    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783789    +LABEL GRP_AcceptedCmp5 =
783790    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
783791    +
783792    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
783793    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
783794    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
783795    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
783796    +end;
MPRINT(EM_DIAGRAM):   end;
783797    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
783798    +if (_UFORMAT eq '0'
783799    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
783800    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
783801    +end;
MPRINT(EM_DIAGRAM):   end;
783802    +else
783803    +if (_UFORMAT eq '1'
783804    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
783805    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
783806    +end;
MPRINT(EM_DIAGRAM):   end;
783807    +else do;
MPRINT(EM_DIAGRAM):   else do;
783808    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
783809    +end;
MPRINT(EM_DIAGRAM):   end;
783810    +end;
MPRINT(EM_DIAGRAM):   end;
783811    +
783812    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783813    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
783814    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783815    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
783816    +
783817    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
783818    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
783819    +end;
MPRINT(EM_DIAGRAM):   end;
783820    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
783821    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
783822    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
783823    +end;
MPRINT(EM_DIAGRAM):   end;
783824    +else
783825    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
783826    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
783827    +end;
MPRINT(EM_DIAGRAM):   end;
783828    +else
783829    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
783830    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
783831    +end;
MPRINT(EM_DIAGRAM):   end;
783832    +else
783833    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
783834    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
783835    +end;
MPRINT(EM_DIAGRAM):   end;
783836    +end;
MPRINT(EM_DIAGRAM):   end;
783837    +
783838    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783839    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
783840    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783841    +LABEL GRP_Income =
783842    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
783843    +
783844    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
783845    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
783846    +end;
MPRINT(EM_DIAGRAM):   end;
783847    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
783848    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
783849    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
783850    +end;
MPRINT(EM_DIAGRAM):   end;
783851    +else
783852    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
783853    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
783854    +end;
MPRINT(EM_DIAGRAM):   end;
783855    +else
783856    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
783857    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
783858    +end;
MPRINT(EM_DIAGRAM):   end;
783859    +else
783860    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
783861    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
783862    +end;
MPRINT(EM_DIAGRAM):   end;
783863    +end;
MPRINT(EM_DIAGRAM):   end;
783864    +
783865    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783866    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
783867    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783868    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
783869    +
783870    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
783871    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
783872    +end;
MPRINT(EM_DIAGRAM):   end;
783873    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
783874    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
783875    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
783876    +end;
MPRINT(EM_DIAGRAM):   end;
783877    +else
783878    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
783879    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
783880    +end;
MPRINT(EM_DIAGRAM):   end;
783881    +else
783882    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
783883    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
783884    +end;
MPRINT(EM_DIAGRAM):   end;
783885    +else
783886    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
783887    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
783888    +end;
MPRINT(EM_DIAGRAM):   end;
783889    +end;
MPRINT(EM_DIAGRAM):   end;
783890    +
783891    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783892    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
783893    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783894    +LABEL GRP_MntFishProducts =
783895    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
783896    +
783897    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
783898    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
783899    +end;
MPRINT(EM_DIAGRAM):   end;
783900    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
783901    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
783902    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
783903    +end;
MPRINT(EM_DIAGRAM):   end;
783904    +else
783905    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
783906    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
783907    +end;
MPRINT(EM_DIAGRAM):   end;
783908    +else
783909    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
783910    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
783911    +end;
MPRINT(EM_DIAGRAM):   end;
783912    +else
783913    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
783914    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
783915    +end;
MPRINT(EM_DIAGRAM):   end;
783916    +end;
MPRINT(EM_DIAGRAM):   end;
783917    +
783918    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783919    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
783920    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783921    +LABEL GRP_MntGoldProds =
783922    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
783923    +
783924    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
783925    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
783926    +end;
MPRINT(EM_DIAGRAM):   end;
783927    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
783928    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
783929    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
783930    +end;
MPRINT(EM_DIAGRAM):   end;
783931    +else
783932    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
783933    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
783934    +end;
MPRINT(EM_DIAGRAM):   end;
783935    +else
783936    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
783937    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
783938    +end;
MPRINT(EM_DIAGRAM):   end;
783939    +else
783940    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
783941    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
783942    +end;
MPRINT(EM_DIAGRAM):   end;
783943    +end;
MPRINT(EM_DIAGRAM):   end;
783944    +
783945    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783946    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
783947    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783948    +LABEL GRP_MntMeatProducts =
783949    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
783950    +
783951    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
783952    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
783953    +end;
MPRINT(EM_DIAGRAM):   end;
783954    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
783955    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
783956    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
783957    +end;
MPRINT(EM_DIAGRAM):   end;
783958    +else
783959    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
783960    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
783961    +end;
MPRINT(EM_DIAGRAM):   end;
783962    +else
783963    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
783964    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
783965    +end;
MPRINT(EM_DIAGRAM):   end;
783966    +else
783967    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
783968    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
783969    +end;
MPRINT(EM_DIAGRAM):   end;
783970    +end;
MPRINT(EM_DIAGRAM):   end;
783971    +
783972    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783973    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
783974    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
783975    +LABEL GRP_MntWines =
783976    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
783977    +
783978    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
783979    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
783980    +end;
MPRINT(EM_DIAGRAM):   end;
783981    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
783982    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
783983    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
783984    +end;
MPRINT(EM_DIAGRAM):   end;
783985    +else
783986    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
783987    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
783988    +end;
MPRINT(EM_DIAGRAM):   end;
783989    +else
783990    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
783991    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
783992    +end;
MPRINT(EM_DIAGRAM):   end;
783993    +else
783994    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
783995    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
783996    +end;
MPRINT(EM_DIAGRAM):   end;
783997    +end;
MPRINT(EM_DIAGRAM):   end;
783998    +
783999    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784000    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
784001    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784002    +LABEL GRP_NumCatalogPurchases =
784003    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
784004    +
784005    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
784006    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
784007    +end;
MPRINT(EM_DIAGRAM):   end;
784008    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
784009    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
784010    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
784011    +end;
MPRINT(EM_DIAGRAM):   end;
784012    +else
784013    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
784014    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
784015    +end;
MPRINT(EM_DIAGRAM):   end;
784016    +else
784017    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
784018    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
784019    +end;
MPRINT(EM_DIAGRAM):   end;
784020    +else
784021    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
784022    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
784023    +end;
MPRINT(EM_DIAGRAM):   end;
784024    +end;
MPRINT(EM_DIAGRAM):   end;
784025    +
784026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784027    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
784028    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784029    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
784030    +
784031    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
784032    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
784033    +end;
MPRINT(EM_DIAGRAM):   end;
784034    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
784035    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
784036    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
784037    +end;
MPRINT(EM_DIAGRAM):   end;
784038    +else
784039    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
784040    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
784041    +end;
MPRINT(EM_DIAGRAM):   end;
784042    +else
784043    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
784044    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
784045    +end;
MPRINT(EM_DIAGRAM):   end;
784046    +else
784047    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
784048    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
784049    +end;
MPRINT(EM_DIAGRAM):   end;
784050    +end;
MPRINT(EM_DIAGRAM):   end;
784051    +
784052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784053    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
784054    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784055    +LABEL GRP_NumWebPurchases =
784056    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
784057    +
784058    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
784059    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
784060    +end;
MPRINT(EM_DIAGRAM):   end;
784061    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
784062    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
784063    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
784064    +end;
MPRINT(EM_DIAGRAM):   end;
784065    +else
784066    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
784067    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
784068    +end;
MPRINT(EM_DIAGRAM):   end;
784069    +else
784070    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
784071    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
784072    +end;
MPRINT(EM_DIAGRAM):   end;
784073    +else
784074    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
784075    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
784076    +end;
MPRINT(EM_DIAGRAM):   end;
784077    +end;
MPRINT(EM_DIAGRAM):   end;
784078    +
784079    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784080    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
784081    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784082    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
784083    +
784084    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
784085    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
784086    +end;
MPRINT(EM_DIAGRAM):   end;
784087    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
784088    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
784089    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
784090    +end;
MPRINT(EM_DIAGRAM):   end;
784091    +else
784092    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
784093    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
784094    +end;
MPRINT(EM_DIAGRAM):   end;
784095    +else
784096    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
784097    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
784098    +end;
MPRINT(EM_DIAGRAM):   end;
784099    +else
784100    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
784101    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
784102    +end;
MPRINT(EM_DIAGRAM):   end;
784103    +end;
MPRINT(EM_DIAGRAM):   end;
784104    +
784105    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784106    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
784107    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784108    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
784109    +
784110    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
784111    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
784112    +end;
MPRINT(EM_DIAGRAM):   end;
784113    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
784114    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
784115    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
784116    +end;
MPRINT(EM_DIAGRAM):   end;
784117    +else
784118    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
784119    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
784120    +end;
MPRINT(EM_DIAGRAM):   end;
784121    +else
784122    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
784123    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
784124    +end;
MPRINT(EM_DIAGRAM):   end;
784125    +else
784126    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
784127    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
784128    +end;
MPRINT(EM_DIAGRAM):   end;
784129    +end;
MPRINT(EM_DIAGRAM):   end;
784130    +
784131    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784132    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
784133    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784134    +LABEL GRP_Recency =
784135    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
784136    +
784137    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
784138    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
784139    +end;
MPRINT(EM_DIAGRAM):   end;
784140    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
784141    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
784142    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
784143    +end;
MPRINT(EM_DIAGRAM):   end;
784144    +else
784145    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
784146    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
784147    +end;
MPRINT(EM_DIAGRAM):   end;
784148    +else
784149    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
784150    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
784151    +end;
MPRINT(EM_DIAGRAM):   end;
784152    +else
784153    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
784154    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
784155    +end;
MPRINT(EM_DIAGRAM):   end;
784156    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
784157     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
784158     quit;
784159     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
784160     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
784161     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
784162     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
784163     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
784164     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784165     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
784166     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784167     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784168     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
784169     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784170     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784171     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784172     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
784173     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
784174     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784175     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
784176     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

784177     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
784178     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784179     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784180     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784181     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
784182     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784183     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784184     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
784185     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
784185   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

784186     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784187     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
784188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 435 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784189     filename _pref
784189   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
784190     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
784191     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
784192    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784193    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
784194    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784195    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
784196    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
784197    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
784198     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
784199     quit;
784200     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
784201     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
784202     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
784203     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
784204     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
784205     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784206     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
784207     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784208     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784209     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
784210     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784211     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784212     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784213     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
784214     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
784215     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784216     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
784217     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

784218     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
784219     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784220     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784221     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784222     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
784223     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784224     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784225     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
784226     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
784226   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

784227     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784228     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
784229     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 439 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784230     filename _pref
784230   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
784231     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
784232     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
784233    +
784234    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
784235    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
784235   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
784236    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
784237    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
784238    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
784239    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
784240    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
784241     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
784242     quit;
784243     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
784244     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
784245     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
784246     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
784247     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
784248     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784249     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
784250     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784251     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784252     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
784253     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784254     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784255     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784256     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
784257     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
784258     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784259     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
784260     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784261     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
784262     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784263     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784264     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784265     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
784266     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784267     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784268     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
784269     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
784269   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

784270     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784271     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
784272     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 478 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784273     filename _pref
784273   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
784274     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
784275     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
784276    +
784277    +
784278    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
784279    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
784280    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
784281    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
784282    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
784283    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784284    +
784285    +
784286    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
784287    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
784288    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
784289    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
784290    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
784291    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784292    +
784293    +
784294    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
784295    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
784296    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
784297    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
784298    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
784299    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784300    +
784301    +
784302    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
784303    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
784304    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
784305    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
784306    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
784307    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784308    +
784309    +
784310    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
784311    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
784312    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
784313    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
784314    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
784315    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784316    +
784317    +
784318    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
784319    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
784320    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
784321    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
784322    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
784323    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784324    +
784325    +
784326    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
784327    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
784328    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
784329    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
784330    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
784331    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784332    +
784333    +
784334    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
784335    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
784336    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
784337    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
784338    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
784339    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
784340    +if
784341    +_FILTERNORM1 not in ( '.')
784342    + and
784343    +_FILTERNORM2 not in ( '.')
784344    + and
784345    +_FILTERNORM3 not in ( '.')
784346    + and
784347    +_FILTERNORM4 not in ( '.')
784348    + and
784349    +_FILTERNORM5 not in ( '.')
784350    + and
784351    +_FILTERNORM6 not in ( '.')
784352    + and
784353    +_FILTERNORM7 not in ( ' ')
784354    + and
784355    +_FILTERNORM8 not in ( ' ')
784356    +and
784357    +( Dt_Customer ne .)
784358    +and ( Income ne . and (Income<=107000))
784359    +and ( Kidhome ne .)
784360    +and ( MntFishProducts ne .)
784361    +and ( MntFruits ne .)
784362    +and ( MntGoldProds ne .)
784363    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
784364    +and ( MntSweetProducts ne .)
784365    +and ( MntWines ne .)
784366    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
784367    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
784368    +and ( NumStorePurchases ne .)
784369    +and ( NumWebPurchases ne .)
784370    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
784371    +and ( Recency ne .)
784372    +and ( Teenhome ne .)
784373    +and ( Year_Birth ne .)
784374    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
784375    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
784376    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
784377    +end;
MPRINT(EM_DIAGRAM):   end;
784378    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
784379    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
784380     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
784381     quit;
784382     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
784383     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
784384     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
784385     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
784386     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
784387     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784388     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
784389     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784390     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784391     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
784392     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784393     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784394     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784395     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
784396     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
784397     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784398     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
784399     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

784400     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
784401     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784402     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784403     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
784404     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
784405     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
784406     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784407     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
784408     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
784408   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

784409     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784410     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
784411     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 544 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784412     %macro varDept(fcmpdata=,id=);
784413     %global nobs&id scoreFlag&id;
784414     %let scoreFlag&id = 0;
784415     %if &id=1 or ^&fcmpStart %then %do;
784416     proc sort data=&fcmpdata out=_temp&id nodupkey;
784417     by NAME;
784418     where id=&id and LHS in( %let j=1;
784419     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
784420     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
784421     "&var" %let j = %eval(&j+1);
784422     %end;
784423     );
784424     run;
784425     %let dsid = %sysfunc(open(_temp&id));
784426     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
784427     %let dsid = %sysfunc(close(&dsid));
784428     %if &&nobs&id %then %do;
784429     %let scoreFlag&id = 1;
784430     %let fcmpStart = 1;
784431     %end;
784432     %else %let fcmpStart = 0;
784433     %end;
784434     %else %do;
784435     proc sort data=&fcmpdata out=_tempid;
784436     where id=&id;
784437     by LHS;
784438     run;
784439     %let dsid = %sysfunc(open(_tempid));
784440     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
784441     %let dsid = %sysfunc(close(&dsid));
784442     %if ^&&nobs&id %then %do;
784443     proc datasets lib=work nolist;
784444     delete _tempid;
784445     run;
784446     quit;
784447     %end;
784448     %else %do;
784449     data _tempAll;
784450     set %let j=%eval(&id-1);
784451     %do x=1 %to &j;
784452     %if &&nobs&x %then %do;
784453     _temp&x %end;
784454     %end;
784455     ;
784456     run;
784457     proc sql;
784458     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
784458   ! work._tempid p2 where p.name=p2.lhs;
784459     quit;
784460     data _temp&id;
784461     set _temp&id;
784462     where LHS ne '' and NAME ne '' and Node ne '';
784463     run;
784464     proc datasets lib=work nolist;
784465     delete _tempAll;
784466     run;
784467     %let dsid = %sysfunc(open(_temp&id));
784468     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
784469     %let dsid = %sysfunc(close(&dsid));
784470     %if ^&&nobs&id %then %do;
784471     proc datasets lib=work nolist;
784472     delete _temp&id;
784473     run;
784474     quit;
784475     %end;
784476     %else %do;
784477     %let scoreFlag&id = 1;
784478     data _temp&id;
784479     set _temp&id;
784480     where LHS ne NAME and node ne '';
784481     run;
784482     %let dsid = %sysfunc(open(_temp&id));
784483     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
784484     %let dsid = %sysfunc(close(&dsid));
784485     %if ^&&nobs&id %then %do;
784486     proc datasets lib=work nolist;
784487     delete _temp&id;
784488     run;
784489     quit;
784490     %end;
784491     %else %do;
784492     proc sort data=_temp&id nodupkey;
784493     by LHS NAME;
784494     run;
784495     %end;
784496     %end;
784497     %end;
784498     %end;
784499     %mend varDept;
The SAS System

784500     %macro optCode(outdata=fcmpdata);
784501     %global fcmpStart;
784502     %let fcmpStart = 0;
784503     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
784504     %let NumNodes=9;
784505     %do k=1 %to &NumNodes;
784506     %vardept(fcmpdata=&outdata, id=&k);
784507     %end;
784508     %mend optCode;
784509     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 40 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 30 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 10 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 20 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

784510     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
784511     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
784512     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
784513     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784514     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
784515     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
784516     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
784517     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784518     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
784519     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
784519   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

784520     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784521     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
784522     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
784523     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784524     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
784525     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
784526     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
784527     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784528     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
784529     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
784530     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
784531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784532     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
784533     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
784533   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.

784534     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784535     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
784536     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
784537     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

784538     filename _pref
784538   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
784539     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
784540     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas.
784541    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
784542    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
784543    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
784544    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
784545    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
784546    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
784547    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
784548    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
784549    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
784550    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
784551    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
784552    +LENGTH _WARN_ $4
784553    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
784554    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
784555    +
784556    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
784557    +
784558    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
784559    +
784560    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
784561    +
784562    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
784563    +
784564    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
784565    +
784566    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
784567    +
784568    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
784569    +
784570    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
784571    +
784572    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
784573    +
784574    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
784575    +
784576    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
784577    +
784578    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
784579    +
784580    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
784581    +
784582    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
784583    +
784584    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
784585    +
784586    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
784587    +
784588    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
784589    +
784590    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
784591    +
784592    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
784593    +
784594    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
784595    +
784596    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
784597    +
784598    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
784599    +
784600    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
784601    +
784602    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
784603    +
784604    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
784605    +
784606    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
784607    +
784608    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
784609    +
784610    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
784611    +
784612    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
784613    +
784614    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
784615    +
784616    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
784617    +
784618    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
784619    +
784620    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
784621    +
784622    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
784623    +
784624    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
784625    +
784626    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
784627    +
784628    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
784629    +
784630    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
784631    +
784632    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
784633    +
784634    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
784635    +
784636    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
784637    +
784638    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
784639    +
784640    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
784641    +
784642    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
784643    +
784644    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
784645    +
784646    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
784647    +
784648    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
784649    +
784650    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
784651    +
784652    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
784653    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
784654    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
784655    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
784656    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784657    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784658    +end;
MPRINT(EM_DIAGRAM):   end;
784659    +else do;
MPRINT(EM_DIAGRAM):   else do;
784660    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784661    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
784662    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784663    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
784664    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
784665    +   end;
MPRINT(EM_DIAGRAM):   end;
784666    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
784667    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
784668    +   end;
MPRINT(EM_DIAGRAM):   end;
784669    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784670    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
784671    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784672    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784673    +   end;
MPRINT(EM_DIAGRAM):   end;
784674    +end;
MPRINT(EM_DIAGRAM):   end;
784675    +
784676    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
784677    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
784678    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
784679    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
784680    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
784681    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
784682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784684    +end;
MPRINT(EM_DIAGRAM):   end;
784685    +else do;
MPRINT(EM_DIAGRAM):   else do;
784686    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784687    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
784688    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784689    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
784690    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
784691    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
784692    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
784693    +   end;
MPRINT(EM_DIAGRAM):   end;
784694    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
784695    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
784696    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
784697    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
784698    +   end;
MPRINT(EM_DIAGRAM):   end;
784699    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784700    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
784701    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
784702    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
784703    +   end;
MPRINT(EM_DIAGRAM):   end;
784704    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
784705    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
784706    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
784707    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
784708    +   end;
MPRINT(EM_DIAGRAM):   end;
784709    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784710    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
784711    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
784712    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
784713    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784714    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784715    +   end;
MPRINT(EM_DIAGRAM):   end;
784716    +end;
MPRINT(EM_DIAGRAM):   end;
784717    +
784718    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
784719    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
784720    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
784721    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
784722    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
784723    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
784724    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784725    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784726    +end;
MPRINT(EM_DIAGRAM):   end;
784727    +else do;
MPRINT(EM_DIAGRAM):   else do;
784728    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784729    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
784730    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784731    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
784732    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
784733    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
784734    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
784735    +   end;
MPRINT(EM_DIAGRAM):   end;
784736    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784737    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
784738    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
784739    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
784740    +   end;
MPRINT(EM_DIAGRAM):   end;
784741    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
784742    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
784743    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
784744    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
784745    +   end;
MPRINT(EM_DIAGRAM):   end;
784746    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
784747    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
784748    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
784749    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
784750    +   end;
MPRINT(EM_DIAGRAM):   end;
784751    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784752    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
784753    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
784754    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
784755    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784756    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784757    +   end;
MPRINT(EM_DIAGRAM):   end;
784758    +end;
MPRINT(EM_DIAGRAM):   end;
784759    +
784760    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
784761    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
784762    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
784763    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
784764    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
784765    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
784766    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784767    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784768    +end;
MPRINT(EM_DIAGRAM):   end;
784769    +else do;
MPRINT(EM_DIAGRAM):   else do;
784770    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784771    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
784772    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784773    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
784774    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
784775    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
784776    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
784777    +   end;
MPRINT(EM_DIAGRAM):   end;
784778    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
784779    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
784780    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
784781    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
784782    +   end;
MPRINT(EM_DIAGRAM):   end;
784783    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784784    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
784785    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
784786    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
784787    +   end;
MPRINT(EM_DIAGRAM):   end;
784788    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
784789    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
784790    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
784791    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
784792    +   end;
MPRINT(EM_DIAGRAM):   end;
784793    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784794    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
784795    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
784796    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
784797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784799    +   end;
MPRINT(EM_DIAGRAM):   end;
784800    +end;
MPRINT(EM_DIAGRAM):   end;
784801    +
784802    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
784803    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
784804    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
784805    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
784806    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
784807    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
784808    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784809    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784810    +end;
MPRINT(EM_DIAGRAM):   end;
784811    +else do;
MPRINT(EM_DIAGRAM):   else do;
784812    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784813    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
784814    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784815    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
784816    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
784817    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
784818    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
784819    +   end;
MPRINT(EM_DIAGRAM):   end;
784820    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
784821    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
784822    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
784823    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
784824    +   end;
MPRINT(EM_DIAGRAM):   end;
784825    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784826    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
784827    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
784828    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
784829    +   end;
MPRINT(EM_DIAGRAM):   end;
784830    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
784831    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
784832    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
784833    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
784834    +   end;
MPRINT(EM_DIAGRAM):   end;
784835    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784836    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
784837    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
784838    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
784839    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784840    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784841    +   end;
MPRINT(EM_DIAGRAM):   end;
784842    +end;
MPRINT(EM_DIAGRAM):   end;
784843    +
784844    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
784845    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
784846    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
784847    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
784848    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
784849    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
784850    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784851    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784852    +end;
MPRINT(EM_DIAGRAM):   end;
784853    +else do;
MPRINT(EM_DIAGRAM):   else do;
784854    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784855    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
784856    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784857    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
784858    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
784859    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
784860    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
784861    +   end;
MPRINT(EM_DIAGRAM):   end;
784862    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784863    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
784864    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
784865    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
784866    +   end;
MPRINT(EM_DIAGRAM):   end;
784867    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
784868    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
784869    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
784870    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
784871    +   end;
MPRINT(EM_DIAGRAM):   end;
784872    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
784873    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
784874    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
784875    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
784876    +   end;
MPRINT(EM_DIAGRAM):   end;
784877    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784878    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
784879    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
784880    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
784881    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784882    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784883    +   end;
MPRINT(EM_DIAGRAM):   end;
784884    +end;
MPRINT(EM_DIAGRAM):   end;
784885    +
784886    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
784887    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
784888    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
784889    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
784890    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
784891    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
784892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784894    +end;
MPRINT(EM_DIAGRAM):   end;
784895    +else do;
MPRINT(EM_DIAGRAM):   else do;
784896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784897    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
784898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784899    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
784900    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
784901    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
784902    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
784903    +   end;
MPRINT(EM_DIAGRAM):   end;
784904    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784905    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
784906    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
784907    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
784908    +   end;
MPRINT(EM_DIAGRAM):   end;
784909    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
784910    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
784911    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
784912    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
784913    +   end;
MPRINT(EM_DIAGRAM):   end;
784914    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
784915    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
784916    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
784917    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
784918    +   end;
MPRINT(EM_DIAGRAM):   end;
784919    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784920    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
784921    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
784922    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
784923    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784924    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784925    +   end;
MPRINT(EM_DIAGRAM):   end;
784926    +end;
MPRINT(EM_DIAGRAM):   end;
784927    +
784928    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
784929    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
784930    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
784931    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
784932    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
784933    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
784934    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784936    +end;
MPRINT(EM_DIAGRAM):   end;
784937    +else do;
MPRINT(EM_DIAGRAM):   else do;
784938    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784939    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
784940    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784941    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
784942    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
784943    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
784944    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
784945    +   end;
MPRINT(EM_DIAGRAM):   end;
784946    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
784947    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
784948    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
784949    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
784950    +   end;
MPRINT(EM_DIAGRAM):   end;
784951    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784952    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
784953    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
784954    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
784955    +   end;
MPRINT(EM_DIAGRAM):   end;
784956    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
784957    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
784958    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
784959    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
784960    +   end;
MPRINT(EM_DIAGRAM):   end;
784961    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784962    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
784963    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
784964    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
784965    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784966    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784967    +   end;
MPRINT(EM_DIAGRAM):   end;
784968    +end;
MPRINT(EM_DIAGRAM):   end;
784969    +
784970    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
784971    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
784972    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
784973    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
784974    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
784975    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784976    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784977    +end;
MPRINT(EM_DIAGRAM):   end;
784978    +else do;
MPRINT(EM_DIAGRAM):   else do;
784979    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784980    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
784981    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784982    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
784983    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
784984    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
784985    +   end;
MPRINT(EM_DIAGRAM):   end;
784986    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
784987    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
784988    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
784989    +   end;
MPRINT(EM_DIAGRAM):   end;
784990    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
784991    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
784992    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
784993    +   end;
MPRINT(EM_DIAGRAM):   end;
784994    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784995    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
784996    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
784997    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784998    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784999    +   end;
MPRINT(EM_DIAGRAM):   end;
785000    +end;
MPRINT(EM_DIAGRAM):   end;
785001    +
785002    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
785003    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
785004    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
785005    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
785006    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
785007    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
785008    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
785009    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785010    +end;
MPRINT(EM_DIAGRAM):   end;
785011    +else do;
MPRINT(EM_DIAGRAM):   else do;
785012    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
785013    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
785014    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
785015    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
785016    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
785017    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
785018    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
785019    +   end;
MPRINT(EM_DIAGRAM):   end;
785020    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
785021    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
785022    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
785023    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
785024    +   end;
MPRINT(EM_DIAGRAM):   end;
785025    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
785026    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
785027    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
785028    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
785029    +   end;
MPRINT(EM_DIAGRAM):   end;
785030    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
785031    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
785032    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
785033    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
785034    +   end;
MPRINT(EM_DIAGRAM):   end;
785035    +   else do;
MPRINT(EM_DIAGRAM):   else do;
785036    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
785037    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
785038    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
785039    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
785040    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785041    +   end;
MPRINT(EM_DIAGRAM):   end;
785042    +end;
MPRINT(EM_DIAGRAM):   end;
785043    +
785044    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
785045    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
785046    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
785047    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
785048    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
785049    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
785050    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
785051    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785052    +end;
MPRINT(EM_DIAGRAM):   end;
785053    +else do;
MPRINT(EM_DIAGRAM):   else do;
785054    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
785055    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
785056    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
785057    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
785058    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
785059    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
785060    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
785061    +   end;
MPRINT(EM_DIAGRAM):   end;
785062    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
785063    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
785064    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
785065    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
785066    +   end;
MPRINT(EM_DIAGRAM):   end;
785067    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
785068    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
785069    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
785070    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
785071    +   end;
MPRINT(EM_DIAGRAM):   end;
785072    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
785073    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
785074    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
785075    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
785076    +   end;
MPRINT(EM_DIAGRAM):   end;
785077    +   else do;
MPRINT(EM_DIAGRAM):   else do;
785078    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
785079    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
785080    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
785081    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
785082    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785083    +   end;
MPRINT(EM_DIAGRAM):   end;
785084    +end;
MPRINT(EM_DIAGRAM):   end;
785085    +
785086    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
785087    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
785088    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
785089    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
785090    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
785091    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
785092    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
785093    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785094    +end;
MPRINT(EM_DIAGRAM):   end;
785095    +else do;
MPRINT(EM_DIAGRAM):   else do;
785096    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
785097    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
785098    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
785099    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
785100    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
785101    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
785102    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
785103    +   end;
MPRINT(EM_DIAGRAM):   end;
785104    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
785105    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
785106    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
785107    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
785108    +   end;
MPRINT(EM_DIAGRAM):   end;
785109    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
785110    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
785111    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
785112    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
785113    +   end;
MPRINT(EM_DIAGRAM):   end;
785114    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
785115    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
785116    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
785117    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
785118    +   end;
MPRINT(EM_DIAGRAM):   end;
785119    +   else do;
MPRINT(EM_DIAGRAM):   else do;
785120    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
785121    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
785122    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
785123    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
785124    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785125    +   end;
MPRINT(EM_DIAGRAM):   end;
785126    +end;
MPRINT(EM_DIAGRAM):   end;
785127    +
785128    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
785129    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
785130    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
785131    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
785132    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
785133    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
785134    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
785135    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785136    +end;
MPRINT(EM_DIAGRAM):   end;
785137    +else do;
MPRINT(EM_DIAGRAM):   else do;
785138    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
785139    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
785140    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
785141    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
785142    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
785143    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
785144    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
785145    +   end;
MPRINT(EM_DIAGRAM):   end;
785146    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
785147    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
785148    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
785149    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
785150    +   end;
MPRINT(EM_DIAGRAM):   end;
785151    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
785152    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
785153    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
785154    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
785155    +   end;
MPRINT(EM_DIAGRAM):   end;
785156    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
785157    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
785158    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
785159    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
785160    +   end;
MPRINT(EM_DIAGRAM):   end;
785161    +   else do;
MPRINT(EM_DIAGRAM):   else do;
785162    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
785163    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
785164    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
785165    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
785166    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785167    +   end;
MPRINT(EM_DIAGRAM):   end;
785168    +end;
MPRINT(EM_DIAGRAM):   end;
785169    +
785170    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
785171    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
785172    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
785173    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
785174    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
785175    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
785176    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
785177    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785178    +end;
MPRINT(EM_DIAGRAM):   end;
785179    +else do;
MPRINT(EM_DIAGRAM):   else do;
785180    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
785181    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
785182    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
785183    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
785184    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
785185    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
785186    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
785187    +   end;
MPRINT(EM_DIAGRAM):   end;
785188    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
785189    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
785190    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
785191    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
785192    +   end;
MPRINT(EM_DIAGRAM):   end;
785193    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
785194    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
785195    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
785196    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
785197    +   end;
MPRINT(EM_DIAGRAM):   end;
785198    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
785199    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
785200    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
785201    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
785202    +   end;
MPRINT(EM_DIAGRAM):   end;
785203    +   else do;
MPRINT(EM_DIAGRAM):   else do;
785204    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
785205    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
785206    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
785207    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
785208    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785209    +   end;
MPRINT(EM_DIAGRAM):   end;
785210    +end;
MPRINT(EM_DIAGRAM):   end;
785211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785212    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
785213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785214    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785215    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
785216    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785217    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
785218    +   H11  =    -0.47846451014473 * GRP_AcceptedCmp52  +     0.19123593876387 *
785219    +        GRP_Frq2  +     0.09643181492148 * GRP_Frq3  +     0.05144024674895 *
785220    +        GRP_Frq4  +     0.04295631018086 * GRP_Income2
785221    +          +     -0.1228594895838 * GRP_Income3  +    -0.24669259703155 *
785222    +        GRP_Income4  +    -0.12634710557505 * GRP_Mnt2
785223    +          +     0.06153848379201 * GRP_Mnt3  +    -0.25623825887978 * GRP_Mnt4
785224    +          +    -0.09885892988252 * GRP_MntFishProducts2
785225    +          +     0.08406776876431 * GRP_MntFishProducts3
785226    +          +    -0.01961506207304 * GRP_MntFishProducts4
785227    +          +     0.05865015349102 * GRP_MntGoldProds2
785228    +          +    -0.19025881153665 * GRP_MntGoldProds3
785229    +          +     0.11742267670165 * GRP_MntGoldProds4
785230    +          +    -0.48107725600014 * GRP_MntMeatProducts2
785231    +          +    -0.06405219545244 * GRP_MntMeatProducts3
785232    +          +    -0.28599597872655 * GRP_MntMeatProducts4
785233    +          +     0.09252331701173 * GRP_MntWines2  +    -0.01679973092371 *
785234    +        GRP_MntWines3  +    -0.28118765113398 * GRP_MntWines4
785235    +          +    -0.20589129984224 * GRP_NumCatalogPurchases3
785236    +          +     0.09269540062859 * GRP_NumCatalogPurchases4
785237    +          +    -0.21301173258264 * GRP_NumDistPurchases2
785238    +          +     0.02968077077204 * GRP_NumDistPurchases3
785239    +          +     0.37847518797466 * GRP_NumDistPurchases4
785240    +          +    -0.14460622553066 * GRP_NumWebPurchases2
785241    +          +     0.24087714617368 * GRP_NumWebPurchases3
785242    +          +     0.31645984538255 * GRP_NumWebPurchases4
785243    +          +    -0.21603366146166 * GRP_RFMstat2  +    -0.16662861409798 *
785244    +        GRP_RFMstat3  +     0.21007601365613 * GRP_RFMstat4
785245    +          +    -0.01443663304415 * GRP_RMntFrq2  +    -0.10326438582674 *
785246    +        GRP_RMntFrq3  +    -0.65474128199839 * GRP_RMntFrq4
785247    +          +     0.32165037855922 * GRP_Recency2  +     0.13838311684738 *
785248    +        GRP_Recency3  +     0.25495034500897 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47846451014473 * GRP_AcceptedCmp52 + 0.19123593876387 * 
GRP_Frq2 + 0.09643181492148 * GRP_Frq3 + 0.05144024674895 * GRP_Frq4 + 0.04295631018086 * 
GRP_Income2 + -0.1228594895838 * GRP_Income3 + -0.24669259703155 * GRP_Income4 + 
-0.12634710557505 * GRP_Mnt2 + 0.06153848379201 * GRP_Mnt3 + -0.25623825887978 * GRP_Mnt4 + 
-0.09885892988252 * GRP_MntFishProducts2 + 0.08406776876431 * GRP_MntFishProducts3 + 
-0.01961506207304 * GRP_MntFishProducts4 + 0.05865015349102 * GRP_MntGoldProds2 + 
-0.19025881153665 * GRP_MntGoldProds3 + 0.11742267670165 * GRP_MntGoldProds4 + 
-0.48107725600014 * GRP_MntMeatProducts2 + -0.06405219545244 * GRP_MntMeatProducts3 + 
-0.28599597872655 * GRP_MntMeatProducts4 + 0.09252331701173 * GRP_MntWines2 + 
-0.01679973092371 * GRP_MntWines3 + -0.28118765113398 * GRP_MntWines4 + -0.20589129984224 * 
GRP_NumCatalogPurchases3 + 0.09269540062859 * GRP_NumCatalogPurchases4 + -0.21301173258264 * 
GRP_NumDistPurchases2 + 0.02968077077204 * GRP_NumDistPurchases3 + 0.37847518797466 * 
GRP_NumDistPurchases4 + -0.14460622553066 * GRP_NumWebPurchases2 + 0.24087714617368 * 
GRP_NumWebPurchases3 + 0.31645984538255 * GRP_NumWebPurchases4 + -0.21603366146166 * 
GRP_RFMstat2 + -0.16662861409798 * GRP_RFMstat3 + 0.21007601365613 * GRP_RFMstat4 + 
-0.01443663304415 * GRP_RMntFrq2 + -0.10326438582674 * GRP_RMntFrq3 + -0.65474128199839 * 
GRP_RMntFrq4 + 0.32165037855922 * GRP_Recency2 + 0.13838311684738 * GRP_Recency3 + 
0.25495034500897 * GRP_Recency4 ;
785249    +   H12  =     0.19980227701329 * GRP_AcceptedCmp52  +     0.35227413860542 *
785250    +        GRP_Frq2  +    -0.08132751965568 * GRP_Frq3  +     0.06274660992037 *
785251    +        GRP_Frq4  +     0.14609729670665 * GRP_Income2
785252    +          +     -0.0521158725468 * GRP_Income3  +     0.29485821055626 *
785253    +        GRP_Income4  +     0.11491631500511 * GRP_Mnt2
785254    +          +    -0.48249282197964 * GRP_Mnt3  +    -0.43275960999945 * GRP_Mnt4
785255    +          +     0.23372129286866 * GRP_MntFishProducts2
785256    +          +     0.08173006283377 * GRP_MntFishProducts3
785257    +          +    -0.26374451563307 * GRP_MntFishProducts4
785258    +          +    -0.05478986771486 * GRP_MntGoldProds2
785259    +          +     0.15674217490538 * GRP_MntGoldProds3
785260    +          +     -0.0970693263223 * GRP_MntGoldProds4
785261    +          +    -0.07551339114514 * GRP_MntMeatProducts2
785262    +          +     0.20520020022282 * GRP_MntMeatProducts3
785263    +          +     0.18185271543305 * GRP_MntMeatProducts4
785264    +          +     0.13372808101693 * GRP_MntWines2  +    -0.23508613293176 *
785265    +        GRP_MntWines3  +     0.03782283781196 * GRP_MntWines4
785266    +          +    -0.01759208575836 * GRP_NumCatalogPurchases3
785267    +          +     0.03228155996803 * GRP_NumCatalogPurchases4
785268    +          +    -0.16689756602171 * GRP_NumDistPurchases2
785269    +          +     0.23008084678616 * GRP_NumDistPurchases3
785270    +          +      0.1020080832353 * GRP_NumDistPurchases4
785271    +          +     0.00689419482794 * GRP_NumWebPurchases2
785272    +          +     0.45549724613494 * GRP_NumWebPurchases3
785273    +          +     0.21666691620434 * GRP_NumWebPurchases4
785274    +          +    -0.02464138218078 * GRP_RFMstat2  +     0.13412544784153 *
785275    +        GRP_RFMstat3  +    -0.09645970560405 * GRP_RFMstat4
785276    +          +     0.04270814348512 * GRP_RMntFrq2  +     -0.1501520967589 *
785277    +        GRP_RMntFrq3  +     -0.1772447013278 * GRP_RMntFrq4
785278    +          +      0.1223375687576 * GRP_Recency2  +      0.1019105028487 *
785279    +        GRP_Recency3  +     0.06326170958276 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.19980227701329 * GRP_AcceptedCmp52 + 0.35227413860542 * GRP_Frq2 
+ -0.08132751965568 * GRP_Frq3 + 0.06274660992037 * GRP_Frq4 + 0.14609729670665 * GRP_Income2 
+ -0.0521158725468 * GRP_Income3 + 0.29485821055626 * GRP_Income4 + 0.11491631500511 * 
GRP_Mnt2 + -0.48249282197964 * GRP_Mnt3 + -0.43275960999945 * GRP_Mnt4 + 0.23372129286866 * 
GRP_MntFishProducts2 + 0.08173006283377 * GRP_MntFishProducts3 + -0.26374451563307 * 
GRP_MntFishProducts4 + -0.05478986771486 * GRP_MntGoldProds2 + 0.15674217490538 * 
GRP_MntGoldProds3 + -0.0970693263223 * GRP_MntGoldProds4 + -0.07551339114514 * 
GRP_MntMeatProducts2 + 0.20520020022282 * GRP_MntMeatProducts3 + 0.18185271543305 * 
GRP_MntMeatProducts4 + 0.13372808101693 * GRP_MntWines2 + -0.23508613293176 * GRP_MntWines3 + 
0.03782283781196 * GRP_MntWines4 + -0.01759208575836 * GRP_NumCatalogPurchases3 + 
0.03228155996803 * GRP_NumCatalogPurchases4 + -0.16689756602171 * GRP_NumDistPurchases2 + 
0.23008084678616 * GRP_NumDistPurchases3 + 0.1020080832353 * GRP_NumDistPurchases4 + 
0.00689419482794 * GRP_NumWebPurchases2 + 0.45549724613494 * GRP_NumWebPurchases3 + 
0.21666691620434 * GRP_NumWebPurchases4 + -0.02464138218078 * GRP_RFMstat2 + 0.13412544784153 
* GRP_RFMstat3 + -0.09645970560405 * GRP_RFMstat4 + 0.04270814348512 * GRP_RMntFrq2 + 
-0.1501520967589 * GRP_RMntFrq3 + -0.1772447013278 * GRP_RMntFrq4 + 0.1223375687576 * 
GRP_Recency2 + 0.1019105028487 * GRP_Recency3 + 0.06326170958276 * GRP_Recency4 ;
785280    +   H13  =    -0.47552326597307 * GRP_AcceptedCmp52  +     0.13942347151662 *
785281    +        GRP_Frq2  +     0.15792042601114 * GRP_Frq3  +    -0.31699137546772 *
785282    +        GRP_Frq4  +     0.31623959766757 * GRP_Income2
785283    +          +     0.51675448663341 * GRP_Income3  +    -0.28386096750656 *
785284    +        GRP_Income4  +    -0.19585257598596 * GRP_Mnt2
785285    +          +     0.03528129174811 * GRP_Mnt3  +     0.16020552351069 * GRP_Mnt4
785286    +          +     0.11549870508237 * GRP_MntFishProducts2
785287    +          +    -0.02472870244462 * GRP_MntFishProducts3
785288    +          +    -0.08397818027214 * GRP_MntFishProducts4
785289    +          +    -0.15352678487636 * GRP_MntGoldProds2
785290    +          +    -0.22936969994696 * GRP_MntGoldProds3
785291    +          +    -0.14955434708754 * GRP_MntGoldProds4
785292    +          +    -0.27851745198006 * GRP_MntMeatProducts2
785293    +          +    -0.20347624413948 * GRP_MntMeatProducts3
785294    +          +     0.22612412661729 * GRP_MntMeatProducts4
785295    +          +      0.0680550338972 * GRP_MntWines2  +     0.13605728094791 *
785296    +        GRP_MntWines3  +    -0.24233826362305 * GRP_MntWines4
785297    +          +    -0.51105265438413 * GRP_NumCatalogPurchases3
785298    +          +      0.3463181885617 * GRP_NumCatalogPurchases4
785299    +          +    -0.42061003686263 * GRP_NumDistPurchases2
785300    +          +     0.05694490202182 * GRP_NumDistPurchases3
785301    +          +    -0.05589065356183 * GRP_NumDistPurchases4
785302    +          +    -0.15004779907268 * GRP_NumWebPurchases2
785303    +          +    -0.03683214810286 * GRP_NumWebPurchases3
785304    +          +    -0.14152766915751 * GRP_NumWebPurchases4
785305    +          +    -0.34448387603605 * GRP_RFMstat2  +    -0.12678315363038 *
785306    +        GRP_RFMstat3  +    -0.17785766746488 * GRP_RFMstat4
785307    +          +    -0.12269367915474 * GRP_RMntFrq2  +     0.15261716486225 *
785308    +        GRP_RMntFrq3  +    -0.14834283523731 * GRP_RMntFrq4
785309    +          +     0.41906757309616 * GRP_Recency2  +     0.11383836551208 *
785310    +        GRP_Recency3  +    -0.50873022901358 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.47552326597307 * GRP_AcceptedCmp52 + 0.13942347151662 * 
GRP_Frq2 + 0.15792042601114 * GRP_Frq3 + -0.31699137546772 * GRP_Frq4 + 0.31623959766757 * 
GRP_Income2 + 0.51675448663341 * GRP_Income3 + -0.28386096750656 * GRP_Income4 + 
-0.19585257598596 * GRP_Mnt2 + 0.03528129174811 * GRP_Mnt3 + 0.16020552351069 * GRP_Mnt4 + 
0.11549870508237 * GRP_MntFishProducts2 + -0.02472870244462 * GRP_MntFishProducts3 + 
-0.08397818027214 * GRP_MntFishProducts4 + -0.15352678487636 * GRP_MntGoldProds2 + 
-0.22936969994696 * GRP_MntGoldProds3 + -0.14955434708754 * GRP_MntGoldProds4 + 
-0.27851745198006 * GRP_MntMeatProducts2 + -0.20347624413948 * GRP_MntMeatProducts3 + 
0.22612412661729 * GRP_MntMeatProducts4 + 0.0680550338972 * GRP_MntWines2 + 0.13605728094791 * 
GRP_MntWines3 + -0.24233826362305 * GRP_MntWines4 + -0.51105265438413 * 
GRP_NumCatalogPurchases3 + 0.3463181885617 * GRP_NumCatalogPurchases4 + -0.42061003686263 * 
GRP_NumDistPurchases2 + 0.05694490202182 * GRP_NumDistPurchases3 + -0.05589065356183 * 
GRP_NumDistPurchases4 + -0.15004779907268 * GRP_NumWebPurchases2 + -0.03683214810286 * 
GRP_NumWebPurchases3 + -0.14152766915751 * GRP_NumWebPurchases4 + -0.34448387603605 * 
GRP_RFMstat2 + -0.12678315363038 * GRP_RFMstat3 + -0.17785766746488 * GRP_RFMstat4 + 
-0.12269367915474 * GRP_RMntFrq2 + 0.15261716486225 * GRP_RMntFrq3 + -0.14834283523731 * 
GRP_RMntFrq4 + 0.41906757309616 * GRP_Recency2 + 0.11383836551208 * GRP_Recency3 + 
-0.50873022901358 * GRP_Recency4 ;
785311    +   H14  =     0.47487308000188 * GRP_AcceptedCmp52  +    -0.20783874293801 *
785312    +        GRP_Frq2  +     -0.2262487293265 * GRP_Frq3  +    -0.24497015722444 *
785313    +        GRP_Frq4  +    -0.41352416374349 * GRP_Income2
785314    +          +    -0.19029917786221 * GRP_Income3  +     0.44371774186743 *
785315    +        GRP_Income4  +     0.03966957052109 * GRP_Mnt2
785316    +          +     0.21041258864544 * GRP_Mnt3  +    -0.03545115071009 * GRP_Mnt4
785317    +          +     -0.3523117475999 * GRP_MntFishProducts2
785318    +          +     0.01075749365425 * GRP_MntFishProducts3
785319    +          +    -0.19220397921061 * GRP_MntFishProducts4
785320    +          +     0.24691019907326 * GRP_MntGoldProds2
785321    +          +    -0.36269131170152 * GRP_MntGoldProds3
785322    +          +    -0.07442729340208 * GRP_MntGoldProds4
785323    +          +     0.14166838567576 * GRP_MntMeatProducts2
785324    +          +     -0.0573636128895 * GRP_MntMeatProducts3
785325    +          +     0.11782684497872 * GRP_MntMeatProducts4
785326    +          +    -0.58306293735162 * GRP_MntWines2  +     -0.1332347200661 *
785327    +        GRP_MntWines3  +     -0.0491151521812 * GRP_MntWines4
785328    +          +     0.19217394838443 * GRP_NumCatalogPurchases3
785329    +          +     0.30242368378572 * GRP_NumCatalogPurchases4
785330    +          +      0.5631335040028 * GRP_NumDistPurchases2
785331    +          +      0.2833277493575 * GRP_NumDistPurchases3
785332    +          +     0.15501991757103 * GRP_NumDistPurchases4
785333    +          +     0.06522663204791 * GRP_NumWebPurchases2
785334    +          +    -0.24250508241812 * GRP_NumWebPurchases3
785335    +          +    -0.14936719392927 * GRP_NumWebPurchases4
785336    +          +     0.07538326365237 * GRP_RFMstat2  +    -0.11207708467015 *
785337    +        GRP_RFMstat3  +    -0.03495013261696 * GRP_RFMstat4
785338    +          +    -0.07948642963964 * GRP_RMntFrq2  +     -0.3740993499425 *
785339    +        GRP_RMntFrq3  +      0.1224880912483 * GRP_RMntFrq4
785340    +          +    -1.20234498415322 * GRP_Recency2  +    -0.15277267671243 *
785341    +        GRP_Recency3  +     0.17498175973385 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.47487308000188 * GRP_AcceptedCmp52 + -0.20783874293801 * 
GRP_Frq2 + -0.2262487293265 * GRP_Frq3 + -0.24497015722444 * GRP_Frq4 + -0.41352416374349 * 
GRP_Income2 + -0.19029917786221 * GRP_Income3 + 0.44371774186743 * GRP_Income4 + 
0.03966957052109 * GRP_Mnt2 + 0.21041258864544 * GRP_Mnt3 + -0.03545115071009 * GRP_Mnt4 + 
-0.3523117475999 * GRP_MntFishProducts2 + 0.01075749365425 * GRP_MntFishProducts3 + 
-0.19220397921061 * GRP_MntFishProducts4 + 0.24691019907326 * GRP_MntGoldProds2 + 
-0.36269131170152 * GRP_MntGoldProds3 + -0.07442729340208 * GRP_MntGoldProds4 + 
0.14166838567576 * GRP_MntMeatProducts2 + -0.0573636128895 * GRP_MntMeatProducts3 + 
0.11782684497872 * GRP_MntMeatProducts4 + -0.58306293735162 * GRP_MntWines2 + -0.1332347200661 
* GRP_MntWines3 + -0.0491151521812 * GRP_MntWines4 + 0.19217394838443 * 
GRP_NumCatalogPurchases3 + 0.30242368378572 * GRP_NumCatalogPurchases4 + 0.5631335040028 * 
GRP_NumDistPurchases2 + 0.2833277493575 * GRP_NumDistPurchases3 + 0.15501991757103 * 
GRP_NumDistPurchases4 + 0.06522663204791 * GRP_NumWebPurchases2 + -0.24250508241812 * 
GRP_NumWebPurchases3 + -0.14936719392927 * GRP_NumWebPurchases4 + 0.07538326365237 * 
GRP_RFMstat2 + -0.11207708467015 * GRP_RFMstat3 + -0.03495013261696 * GRP_RFMstat4 + 
-0.07948642963964 * GRP_RMntFrq2 + -0.3740993499425 * GRP_RMntFrq3 + 0.1224880912483 * 
GRP_RMntFrq4 + -1.20234498415322 * GRP_Recency2 + -0.15277267671243 * GRP_Recency3 + 
0.17498175973385 * GRP_Recency4 ;
785342    +   H15  =     0.31607756545434 * GRP_AcceptedCmp52  +    -0.39938983779344 *
785343    +        GRP_Frq2  +     0.14190381114364 * GRP_Frq3  +    -0.04654073105991 *
785344    +        GRP_Frq4  +    -0.46847099915399 * GRP_Income2
785345    +          +    -0.24521056791482 * GRP_Income3  +     0.29673900247528 *
785346    +        GRP_Income4  +    -0.24347594694596 * GRP_Mnt2
785347    +          +    -0.25470417967356 * GRP_Mnt3  +     -0.3155333752807 * GRP_Mnt4
785348    +          +    -0.16164851437662 * GRP_MntFishProducts2
785349    +          +    -0.07507872874942 * GRP_MntFishProducts3
785350    +          +     -0.0000128165366 * GRP_MntFishProducts4
785351    +          +    -0.13003975496355 * GRP_MntGoldProds2
785352    +          +     0.10076462685161 * GRP_MntGoldProds3
785353    +          +     0.06823082371801 * GRP_MntGoldProds4
785354    +          +    -0.06661203056726 * GRP_MntMeatProducts2
785355    +          +     0.21135583081997 * GRP_MntMeatProducts3
785356    +          +     0.05317467469941 * GRP_MntMeatProducts4
785357    +          +     -0.6790577471338 * GRP_MntWines2  +    -0.29030845400198 *
785358    +        GRP_MntWines3  +     0.17538455641954 * GRP_MntWines4
785359    +          +     0.27411589551701 * GRP_NumCatalogPurchases3
785360    +          +     0.33639439802576 * GRP_NumCatalogPurchases4
785361    +          +     0.37202178791302 * GRP_NumDistPurchases2
785362    +          +     0.21242089259106 * GRP_NumDistPurchases3
785363    +          +     0.01745612539369 * GRP_NumDistPurchases4
785364    +          +     0.06417261665114 * GRP_NumWebPurchases2
785365    +          +     0.34302874594069 * GRP_NumWebPurchases3
785366    +          +     0.08556934131582 * GRP_NumWebPurchases4
785367    +          +    -0.01317484038203 * GRP_RFMstat2  +    -0.26798645102872 *
785368    +        GRP_RFMstat3  +    -0.23199496411354 * GRP_RFMstat4
785369    +          +    -0.36396476479849 * GRP_RMntFrq2  +    -0.16838193614715 *
785370    +        GRP_RMntFrq3  +       0.051807632343 * GRP_RMntFrq4
785371    +          +    -0.13014582685433 * GRP_Recency2  +     0.01537566565331 *
785372    +        GRP_Recency3  +      0.1365007617785 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.31607756545434 * GRP_AcceptedCmp52 + -0.39938983779344 * 
GRP_Frq2 + 0.14190381114364 * GRP_Frq3 + -0.04654073105991 * GRP_Frq4 + -0.46847099915399 * 
GRP_Income2 + -0.24521056791482 * GRP_Income3 + 0.29673900247528 * GRP_Income4 + 
-0.24347594694596 * GRP_Mnt2 + -0.25470417967356 * GRP_Mnt3 + -0.3155333752807 * GRP_Mnt4 + 
-0.16164851437662 * GRP_MntFishProducts2 + -0.07507872874942 * GRP_MntFishProducts3 + 
-0.0000128165366 * GRP_MntFishProducts4 + -0.13003975496355 * GRP_MntGoldProds2 + 
0.10076462685161 * GRP_MntGoldProds3 + 0.06823082371801 * GRP_MntGoldProds4 + 
-0.06661203056726 * GRP_MntMeatProducts2 + 0.21135583081997 * GRP_MntMeatProducts3 + 
0.05317467469941 * GRP_MntMeatProducts4 + -0.6790577471338 * GRP_MntWines2 + -0.29030845400198 
* GRP_MntWines3 + 0.17538455641954 * GRP_MntWines4 + 0.27411589551701 * 
GRP_NumCatalogPurchases3 + 0.33639439802576 * GRP_NumCatalogPurchases4 + 0.37202178791302 * 
GRP_NumDistPurchases2 + 0.21242089259106 * GRP_NumDistPurchases3 + 0.01745612539369 * 
GRP_NumDistPurchases4 + 0.06417261665114 * GRP_NumWebPurchases2 + 0.34302874594069 * 
GRP_NumWebPurchases3 + 0.08556934131582 * GRP_NumWebPurchases4 + -0.01317484038203 * 
GRP_RFMstat2 + -0.26798645102872 * GRP_RFMstat3 + -0.23199496411354 * GRP_RFMstat4 + 
-0.36396476479849 * GRP_RMntFrq2 + -0.16838193614715 * GRP_RMntFrq3 + 0.051807632343 * 
GRP_RMntFrq4 + -0.13014582685433 * GRP_Recency2 + 0.01537566565331 * GRP_Recency3 + 
0.1365007617785 * GRP_Recency4 ;
785373    +   H11  =    -0.02804722687441 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.02804722687441 + H11 ;
785374    +   H12  =    -1.15173994765723 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.15173994765723 + H12 ;
785375    +   H13  =     0.30124306509106 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.30124306509106 + H13 ;
785376    +   H14  =    -0.37792609262463 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.37792609262463 + H14 ;
785377    +   H15  =     0.46405557098176 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.46405557098176 + H15 ;
785378    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
785379    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
785380    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
785381    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
785382    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
785383    +END;
MPRINT(EM_DIAGRAM):   END;
785384    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
785385    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
785386    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
785387    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
785388    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
785389    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
785390    +END;
MPRINT(EM_DIAGRAM):   END;
785391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785392    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
785393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785394    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
785395    +   P_DepVar1  =     1.14388401268032 * H11  +      0.6001876010487 * H12
785396    +          +     2.09526498410663 * H13  +    -1.84849014758118 * H14
785397    +          +    -1.09009016441951 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.14388401268032 * H11 + 0.6001876010487 * H12 + 
2.09526498410663 * H13 + -1.84849014758118 * H14 + -1.09009016441951 * H15 ;
785398    +   P_DepVar1  =    -1.61414772995986 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.61414772995986 + P_DepVar1 ;
785399    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
785400    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
785401    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
785402    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
785403    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
785404    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
785405    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
785406    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
785407    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
785408    +END;
MPRINT(EM_DIAGRAM):   END;
785409    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
785410    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
785411    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
785412    +END;
MPRINT(EM_DIAGRAM):   END;
785413    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
785414    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
785415    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
785416    +END;
MPRINT(EM_DIAGRAM):   END;
785417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785418    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
785419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785420    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
785421    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
785422    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
785423    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
785424    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
785425    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
785426    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
785427    +END;
MPRINT(EM_DIAGRAM):   END;
785428    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
785429    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
785430    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
785431    +drop
785432    +H11
785433    +H12
785434    +H13
785435    +H14
785436    +H15
785437    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
785438     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
785439     quit;
785440     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
785441     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
785442     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
785443     retain ID 2 Node "Neural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural22";
785444     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
785445     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1921 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1921 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785446     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
785447     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785448     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1921 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1921 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785449     proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
785450     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785451     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785452     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785453     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
785454     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
785455     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785456     proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
785457     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

785458     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
785459     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785460     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785461     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785462     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
785463     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785464     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785465     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
785466     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
785466   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 888 rows and 5 columns.

785467     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785468     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
785469     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 888 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 888 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785470     filename _pref
785470   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
785471     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
785472     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
785473    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
785474    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
785475    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
785476    +
785477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785478    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
785479    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785480    +LABEL GRP_AcceptedCmp5 =
785481    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
785482    +
785483    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
785484    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
785485    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
785486    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
785487    +end;
MPRINT(EM_DIAGRAM):   end;
785488    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
785489    +if (_UFORMAT eq '0'
785490    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
785491    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
785492    +end;
MPRINT(EM_DIAGRAM):   end;
785493    +else
785494    +if (_UFORMAT eq '1'
785495    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
785496    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
785497    +end;
MPRINT(EM_DIAGRAM):   end;
785498    +else do;
MPRINT(EM_DIAGRAM):   else do;
785499    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
785500    +end;
MPRINT(EM_DIAGRAM):   end;
785501    +end;
MPRINT(EM_DIAGRAM):   end;
785502    +
785503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785504    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
785505    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785506    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
785507    +
785508    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
785509    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
785510    +end;
MPRINT(EM_DIAGRAM):   end;
785511    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
785512    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
785513    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
785514    +end;
MPRINT(EM_DIAGRAM):   end;
785515    +else
785516    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
785517    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
785518    +end;
MPRINT(EM_DIAGRAM):   end;
785519    +else
785520    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
785521    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
785522    +end;
MPRINT(EM_DIAGRAM):   end;
785523    +else
785524    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
785525    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
785526    +end;
MPRINT(EM_DIAGRAM):   end;
785527    +end;
MPRINT(EM_DIAGRAM):   end;
785528    +
785529    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785530    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
785531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785532    +LABEL GRP_Income =
785533    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
785534    +
785535    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
785536    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
785537    +end;
MPRINT(EM_DIAGRAM):   end;
785538    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
785539    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
785540    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
785541    +end;
MPRINT(EM_DIAGRAM):   end;
785542    +else
785543    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
785544    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
785545    +end;
MPRINT(EM_DIAGRAM):   end;
785546    +else
785547    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
785548    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
785549    +end;
MPRINT(EM_DIAGRAM):   end;
785550    +else
785551    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
785552    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
785553    +end;
MPRINT(EM_DIAGRAM):   end;
785554    +end;
MPRINT(EM_DIAGRAM):   end;
785555    +
785556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785557    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
785558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785559    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
785560    +
785561    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
785562    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
785563    +end;
MPRINT(EM_DIAGRAM):   end;
785564    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
785565    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
785566    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
785567    +end;
MPRINT(EM_DIAGRAM):   end;
785568    +else
785569    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
785570    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
785571    +end;
MPRINT(EM_DIAGRAM):   end;
785572    +else
785573    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
785574    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
785575    +end;
MPRINT(EM_DIAGRAM):   end;
785576    +else
785577    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
785578    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
785579    +end;
MPRINT(EM_DIAGRAM):   end;
785580    +end;
MPRINT(EM_DIAGRAM):   end;
785581    +
785582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785583    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
785584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785585    +LABEL GRP_MntFishProducts =
785586    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
785587    +
785588    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
785589    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
785590    +end;
MPRINT(EM_DIAGRAM):   end;
785591    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
785592    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
785593    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
785594    +end;
MPRINT(EM_DIAGRAM):   end;
785595    +else
785596    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
785597    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
785598    +end;
MPRINT(EM_DIAGRAM):   end;
785599    +else
785600    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
785601    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
785602    +end;
MPRINT(EM_DIAGRAM):   end;
785603    +else
785604    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
785605    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
785606    +end;
MPRINT(EM_DIAGRAM):   end;
785607    +end;
MPRINT(EM_DIAGRAM):   end;
785608    +
785609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785610    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
785611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785612    +LABEL GRP_MntGoldProds =
785613    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
785614    +
785615    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
785616    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
785617    +end;
MPRINT(EM_DIAGRAM):   end;
785618    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
785619    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
785620    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
785621    +end;
MPRINT(EM_DIAGRAM):   end;
785622    +else
785623    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
785624    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
785625    +end;
MPRINT(EM_DIAGRAM):   end;
785626    +else
785627    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
785628    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
785629    +end;
MPRINT(EM_DIAGRAM):   end;
785630    +else
785631    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
785632    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
785633    +end;
MPRINT(EM_DIAGRAM):   end;
785634    +end;
MPRINT(EM_DIAGRAM):   end;
785635    +
785636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785637    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
785638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785639    +LABEL GRP_MntMeatProducts =
785640    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
785641    +
785642    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
785643    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
785644    +end;
MPRINT(EM_DIAGRAM):   end;
785645    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
785646    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
785647    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
785648    +end;
MPRINT(EM_DIAGRAM):   end;
785649    +else
785650    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
785651    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
785652    +end;
MPRINT(EM_DIAGRAM):   end;
785653    +else
785654    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
785655    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
785656    +end;
MPRINT(EM_DIAGRAM):   end;
785657    +else
785658    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
785659    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
785660    +end;
MPRINT(EM_DIAGRAM):   end;
785661    +end;
MPRINT(EM_DIAGRAM):   end;
785662    +
785663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785664    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
785665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785666    +LABEL GRP_MntWines =
785667    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
785668    +
785669    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
785670    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
785671    +end;
MPRINT(EM_DIAGRAM):   end;
785672    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
785673    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
785674    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
785675    +end;
MPRINT(EM_DIAGRAM):   end;
785676    +else
785677    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
785678    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
785679    +end;
MPRINT(EM_DIAGRAM):   end;
785680    +else
785681    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
785682    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
785683    +end;
MPRINT(EM_DIAGRAM):   end;
785684    +else
785685    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
785686    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
785687    +end;
MPRINT(EM_DIAGRAM):   end;
785688    +end;
MPRINT(EM_DIAGRAM):   end;
785689    +
785690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785691    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
785692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785693    +LABEL GRP_NumCatalogPurchases =
785694    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
785695    +
785696    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
785697    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
785698    +end;
MPRINT(EM_DIAGRAM):   end;
785699    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
785700    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
785701    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
785702    +end;
MPRINT(EM_DIAGRAM):   end;
785703    +else
785704    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
785705    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
785706    +end;
MPRINT(EM_DIAGRAM):   end;
785707    +else
785708    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
785709    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
785710    +end;
MPRINT(EM_DIAGRAM):   end;
785711    +else
785712    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
785713    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
785714    +end;
MPRINT(EM_DIAGRAM):   end;
785715    +end;
MPRINT(EM_DIAGRAM):   end;
785716    +
785717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785718    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
785719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785720    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
785721    +
785722    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
785723    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
785724    +end;
MPRINT(EM_DIAGRAM):   end;
785725    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
785726    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
785727    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
785728    +end;
MPRINT(EM_DIAGRAM):   end;
785729    +else
785730    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
785731    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
785732    +end;
MPRINT(EM_DIAGRAM):   end;
785733    +else
785734    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
785735    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
785736    +end;
MPRINT(EM_DIAGRAM):   end;
785737    +else
785738    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
785739    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
785740    +end;
MPRINT(EM_DIAGRAM):   end;
785741    +end;
MPRINT(EM_DIAGRAM):   end;
785742    +
785743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785744    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
785745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785746    +LABEL GRP_NumWebPurchases =
785747    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
785748    +
785749    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
785750    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
785751    +end;
MPRINT(EM_DIAGRAM):   end;
785752    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
785753    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
785754    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
785755    +end;
MPRINT(EM_DIAGRAM):   end;
785756    +else
785757    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
785758    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
785759    +end;
MPRINT(EM_DIAGRAM):   end;
785760    +else
785761    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
785762    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
785763    +end;
MPRINT(EM_DIAGRAM):   end;
785764    +else
785765    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
785766    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
785767    +end;
MPRINT(EM_DIAGRAM):   end;
785768    +end;
MPRINT(EM_DIAGRAM):   end;
785769    +
785770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785771    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
785772    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785773    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
785774    +
785775    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
785776    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
785777    +end;
MPRINT(EM_DIAGRAM):   end;
785778    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
785779    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
785780    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
785781    +end;
MPRINT(EM_DIAGRAM):   end;
785782    +else
785783    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
785784    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
785785    +end;
MPRINT(EM_DIAGRAM):   end;
785786    +else
785787    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
785788    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
785789    +end;
MPRINT(EM_DIAGRAM):   end;
785790    +else
785791    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
785792    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
785793    +end;
MPRINT(EM_DIAGRAM):   end;
785794    +end;
MPRINT(EM_DIAGRAM):   end;
785795    +
785796    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785797    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
785798    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785799    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
785800    +
785801    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
785802    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
785803    +end;
MPRINT(EM_DIAGRAM):   end;
785804    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
785805    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
785806    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
785807    +end;
MPRINT(EM_DIAGRAM):   end;
785808    +else
785809    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
785810    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
785811    +end;
MPRINT(EM_DIAGRAM):   end;
785812    +else
785813    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
785814    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
785815    +end;
MPRINT(EM_DIAGRAM):   end;
785816    +else
785817    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
785818    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
785819    +end;
MPRINT(EM_DIAGRAM):   end;
785820    +end;
MPRINT(EM_DIAGRAM):   end;
785821    +
785822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785823    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
785824    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785825    +LABEL GRP_Recency =
785826    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
785827    +
785828    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
785829    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
785830    +end;
MPRINT(EM_DIAGRAM):   end;
785831    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
785832    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
785833    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
785834    +end;
MPRINT(EM_DIAGRAM):   end;
785835    +else
785836    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
785837    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
785838    +end;
MPRINT(EM_DIAGRAM):   end;
785839    +else
785840    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
785841    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
785842    +end;
MPRINT(EM_DIAGRAM):   end;
785843    +else
785844    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
785845    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
785846    +end;
MPRINT(EM_DIAGRAM):   end;
785847    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
785848     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
785849     quit;
785850     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
785851     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
785852     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
785853     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
785854     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
785855     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785856     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
785857     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785858     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785859     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
785860     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785861     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785862     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785863     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
785864     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
785865     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785866     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
785867     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

785868     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
785869     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785870     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785871     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785872     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
785873     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785874     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785875     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
785876     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
785876   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

785877     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785878     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
785879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 903 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785880     filename _pref
785880   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
785881     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
785882     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
785883    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785884    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
785885    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785886    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
785887    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
785888    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
785889     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
785890     quit;
785891     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
785892     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
785893     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
785894     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
785895     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
785896     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785897     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
785898     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785899     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785900     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
785901     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785902     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785903     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785904     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
785905     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
785906     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785907     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
785908     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

785909     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
785910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785911     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785912     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785913     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
785914     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785915     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785916     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
785917     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
785917   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

785918     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785919     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
785920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 907 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785921     filename _pref
785921   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
785922     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
785923     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
785924    +
785925    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
785926    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
785926   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
785927    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
785928    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
785929    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
785930    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
785931    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
785932     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
785933     quit;
785934     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
785935     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
785936     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
785937     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
785938     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
785939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785940     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
785941     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785943     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
785944     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785946     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785947     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
785948     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
785949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785950     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
785951     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785952     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
785953     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785954     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785955     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
785956     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
785957     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
785958     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785959     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
785960     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
785960   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

785961     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785962     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
785963     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 946 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785964     filename _pref
785964   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
785965     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
785966     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
785967    +
785968    +
785969    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
785970    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
785971    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
785972    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
785973    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
785974    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
785975    +
785976    +
785977    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
785978    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
785979    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
785980    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
785981    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
785982    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
785983    +
785984    +
785985    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
785986    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
785987    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
785988    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
785989    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
785990    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
785991    +
785992    +
785993    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
785994    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
785995    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
785996    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
785997    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
785998    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
785999    +
786000    +
786001    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
786002    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
786003    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
786004    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
786005    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
786006    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
786007    +
786008    +
786009    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
786010    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
786011    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
786012    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
786013    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
786014    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
786015    +
786016    +
786017    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
786018    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
786019    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
786020    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
786021    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
786022    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
786023    +
786024    +
786025    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
786026    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
786027    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
786028    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
786029    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
786030    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
786031    +if
786032    +_FILTERNORM1 not in ( '.')
786033    + and
786034    +_FILTERNORM2 not in ( '.')
786035    + and
786036    +_FILTERNORM3 not in ( '.')
786037    + and
786038    +_FILTERNORM4 not in ( '.')
786039    + and
786040    +_FILTERNORM5 not in ( '.')
786041    + and
786042    +_FILTERNORM6 not in ( '.')
786043    + and
786044    +_FILTERNORM7 not in ( ' ')
786045    + and
786046    +_FILTERNORM8 not in ( ' ')
786047    +and
786048    +( Dt_Customer ne .)
786049    +and ( Income ne . and (Income<=107000))
786050    +and ( Kidhome ne .)
786051    +and ( MntFishProducts ne .)
786052    +and ( MntFruits ne .)
786053    +and ( MntGoldProds ne .)
786054    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
786055    +and ( MntSweetProducts ne .)
786056    +and ( MntWines ne .)
786057    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
786058    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
786059    +and ( NumStorePurchases ne .)
786060    +and ( NumWebPurchases ne .)
786061    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
786062    +and ( Recency ne .)
786063    +and ( Teenhome ne .)
786064    +and ( Year_Birth ne .)
786065    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
786066    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
786067    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
786068    +end;
MPRINT(EM_DIAGRAM):   end;
786069    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
786070    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
786071     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
786072     quit;
786073     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
786074     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
786075     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
786076     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
786077     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
786078     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786079     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
786080     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
786081     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786082     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
786083     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
786084     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786085     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
786086     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
786087     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
786088     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786089     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
786090     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

786091     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
786092     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
786093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786094     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
786095     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
786096     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
786097     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

786098     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
786099     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
786099   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

786100     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786101     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
786102     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1012 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786103     %macro varDept(fcmpdata=,id=);
786104     %global nobs&id scoreFlag&id;
786105     %let scoreFlag&id = 0;
786106     %if &id=1 or ^&fcmpStart %then %do;
786107     proc sort data=&fcmpdata out=_temp&id nodupkey;
786108     by NAME;
786109     where id=&id and LHS in( %let j=1;
786110     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
786111     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
786112     "&var" %let j = %eval(&j+1);
786113     %end;
786114     );
786115     run;
786116     %let dsid = %sysfunc(open(_temp&id));
786117     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
786118     %let dsid = %sysfunc(close(&dsid));
786119     %if &&nobs&id %then %do;
786120     %let scoreFlag&id = 1;
786121     %let fcmpStart = 1;
786122     %end;
786123     %else %let fcmpStart = 0;
786124     %end;
786125     %else %do;
786126     proc sort data=&fcmpdata out=_tempid;
786127     where id=&id;
786128     by LHS;
786129     run;
786130     %let dsid = %sysfunc(open(_tempid));
786131     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
786132     %let dsid = %sysfunc(close(&dsid));
786133     %if ^&&nobs&id %then %do;
786134     proc datasets lib=work nolist;
786135     delete _tempid;
786136     run;
786137     quit;
786138     %end;
786139     %else %do;
786140     data _tempAll;
786141     set %let j=%eval(&id-1);
786142     %do x=1 %to &j;
786143     %if &&nobs&x %then %do;
786144     _temp&x %end;
786145     %end;
786146     ;
786147     run;
786148     proc sql;
786149     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
786149   ! work._tempid p2 where p.name=p2.lhs;
786150     quit;
786151     data _temp&id;
786152     set _temp&id;
786153     where LHS ne '' and NAME ne '' and Node ne '';
786154     run;
786155     proc datasets lib=work nolist;
786156     delete _tempAll;
786157     run;
786158     %let dsid = %sysfunc(open(_temp&id));
786159     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
786160     %let dsid = %sysfunc(close(&dsid));
786161     %if ^&&nobs&id %then %do;
786162     proc datasets lib=work nolist;
786163     delete _temp&id;
786164     run;
786165     quit;
786166     %end;
786167     %else %do;
786168     %let scoreFlag&id = 1;
786169     data _temp&id;
786170     set _temp&id;
786171     where LHS ne NAME and node ne '';
786172     run;
786173     %let dsid = %sysfunc(open(_temp&id));
786174     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
786175     %let dsid = %sysfunc(close(&dsid));
786176     %if ^&&nobs&id %then %do;
786177     proc datasets lib=work nolist;
786178     delete _temp&id;
786179     run;
786180     quit;
786181     %end;
786182     %else %do;
786183     proc sort data=_temp&id nodupkey;
786184     by LHS NAME;
786185     run;
786186     %end;
786187     %end;
786188     %end;
786189     %end;
786190     %mend varDept;
786191     %macro optCode(outdata=fcmpdata);
786192     %global fcmpStart;
786193     %let fcmpStart = 0;
786194     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
786195     %let NumNodes=9;
786196     %do k=1 %to &NumNodes;
786197     %vardept(fcmpdata=&outdata, id=&k);
786198     %end;
786199     %mend optCode;
786200     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

786201     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
786202     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
786203     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
786204     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786205     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
786206     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
786207     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
786208     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786209     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
786210     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
786210   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

786211     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

786212     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
786213     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
786214     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786215     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
786216     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
786217     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
786218     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786219     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
786220     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
786221     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
786222     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786223     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
786224     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
786224   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

786225     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786226     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
786227     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
786228     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

786229     filename _pref
786229   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMPUBLISHSCORE.sas";
786230     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
786231     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMPUBLISHSCORE.sas.
786232    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
786233    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
786234    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
786235    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
786236    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
786237    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
786238    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
786239    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
786240    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
786241    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
786242    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
786243    +LENGTH _WARN_ $4
786244    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
786245    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
786246    +
786247    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
786248    +
786249    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
786250    +
786251    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
786252    +
786253    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
786254    +
786255    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
786256    +
786257    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
786258    +
786259    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
786260    +
786261    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
786262    +
786263    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
786264    +
786265    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
786266    +
786267    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
786268    +
786269    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
786270    +
786271    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
786272    +
786273    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
786274    +
786275    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
786276    +
786277    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
786278    +
786279    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
786280    +
786281    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
786282    +
786283    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
786284    +
786285    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
786286    +
786287    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
786288    +
786289    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
786290    +
786291    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
786292    +
786293    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
786294    +
786295    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
786296    +
786297    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
786298    +
786299    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
786300    +
786301    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
786302    +
786303    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
786304    +
786305    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
786306    +
786307    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
786308    +
786309    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
786310    +
786311    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
786312    +
786313    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
786314    +
786315    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
786316    +
786317    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
786318    +
786319    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
786320    +
786321    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
786322    +
786323    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
786324    +
786325    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
786326    +
786327    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
786328    +
786329    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
786330    +
786331    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
786332    +
786333    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
786334    +
786335    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
786336    +
786337    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
786338    +
786339    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
786340    +
786341    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
786342    +
786343    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
786344    +
786345    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
786346    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
786347    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
786348    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
786349    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786350    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786351    +end;
MPRINT(EM_DIAGRAM):   end;
786352    +else do;
MPRINT(EM_DIAGRAM):   else do;
786353    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786354    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
786355    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786356    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
786357    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
786358    +   end;
MPRINT(EM_DIAGRAM):   end;
786359    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
786360    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
786361    +   end;
MPRINT(EM_DIAGRAM):   end;
786362    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786363    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
786364    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786365    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786366    +   end;
MPRINT(EM_DIAGRAM):   end;
786367    +end;
MPRINT(EM_DIAGRAM):   end;
786368    +
786369    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
786370    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
786371    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
786372    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
786373    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
786374    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
786375    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786376    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786377    +end;
MPRINT(EM_DIAGRAM):   end;
786378    +else do;
MPRINT(EM_DIAGRAM):   else do;
786379    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786380    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
786381    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786382    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
786383    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
786384    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
786385    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
786386    +   end;
MPRINT(EM_DIAGRAM):   end;
786387    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
786388    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
786389    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
786390    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
786391    +   end;
MPRINT(EM_DIAGRAM):   end;
786392    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786393    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
786394    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
786395    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
786396    +   end;
MPRINT(EM_DIAGRAM):   end;
786397    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786398    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
786399    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
786400    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
786401    +   end;
MPRINT(EM_DIAGRAM):   end;
786402    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786403    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
786404    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
786405    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
786406    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786407    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786408    +   end;
MPRINT(EM_DIAGRAM):   end;
786409    +end;
MPRINT(EM_DIAGRAM):   end;
786410    +
786411    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
786412    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
786413    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
786414    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
786415    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
786416    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
786417    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786418    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786419    +end;
MPRINT(EM_DIAGRAM):   end;
786420    +else do;
MPRINT(EM_DIAGRAM):   else do;
786421    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786422    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
786423    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786424    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
786425    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
786426    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
786427    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
786428    +   end;
MPRINT(EM_DIAGRAM):   end;
786429    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786430    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
786431    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
786432    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
786433    +   end;
MPRINT(EM_DIAGRAM):   end;
786434    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
786435    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
786436    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
786437    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
786438    +   end;
MPRINT(EM_DIAGRAM):   end;
786439    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786440    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
786441    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
786442    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
786443    +   end;
MPRINT(EM_DIAGRAM):   end;
786444    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786445    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
786446    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
786447    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
786448    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786449    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786450    +   end;
MPRINT(EM_DIAGRAM):   end;
786451    +end;
MPRINT(EM_DIAGRAM):   end;
786452    +
786453    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
786454    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
786455    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
786456    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
786457    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
786458    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
786459    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786460    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786461    +end;
MPRINT(EM_DIAGRAM):   end;
786462    +else do;
MPRINT(EM_DIAGRAM):   else do;
786463    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786464    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
786465    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786466    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786467    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
786468    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
786469    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
786470    +   end;
MPRINT(EM_DIAGRAM):   end;
786471    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786472    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
786473    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
786474    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
786475    +   end;
MPRINT(EM_DIAGRAM):   end;
786476    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786477    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
786478    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
786479    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
786480    +   end;
MPRINT(EM_DIAGRAM):   end;
786481    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786482    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
786483    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
786484    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
786485    +   end;
MPRINT(EM_DIAGRAM):   end;
786486    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786487    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
786488    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
786489    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
786490    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786491    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786492    +   end;
MPRINT(EM_DIAGRAM):   end;
786493    +end;
MPRINT(EM_DIAGRAM):   end;
786494    +
786495    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
786496    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
786497    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
786498    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
786499    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
786500    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
786501    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786502    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786503    +end;
MPRINT(EM_DIAGRAM):   end;
786504    +else do;
MPRINT(EM_DIAGRAM):   else do;
786505    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786506    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
786507    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786508    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786509    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
786510    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
786511    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
786512    +   end;
MPRINT(EM_DIAGRAM):   end;
786513    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786514    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
786515    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
786516    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
786517    +   end;
MPRINT(EM_DIAGRAM):   end;
786518    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786519    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
786520    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
786521    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
786522    +   end;
MPRINT(EM_DIAGRAM):   end;
786523    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786524    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
786525    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
786526    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
786527    +   end;
MPRINT(EM_DIAGRAM):   end;
786528    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786529    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
786530    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
786531    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
786532    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786533    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786534    +   end;
MPRINT(EM_DIAGRAM):   end;
786535    +end;
MPRINT(EM_DIAGRAM):   end;
786536    +
786537    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
786538    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
786539    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
786540    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
786541    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
786542    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
786543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786545    +end;
MPRINT(EM_DIAGRAM):   end;
786546    +else do;
MPRINT(EM_DIAGRAM):   else do;
786547    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786548    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
786549    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786550    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786551    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
786552    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
786553    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
786554    +   end;
MPRINT(EM_DIAGRAM):   end;
786555    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786556    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
786557    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
786558    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
786559    +   end;
MPRINT(EM_DIAGRAM):   end;
786560    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786561    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
786562    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
786563    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
786564    +   end;
MPRINT(EM_DIAGRAM):   end;
786565    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786566    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
786567    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
786568    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
786569    +   end;
MPRINT(EM_DIAGRAM):   end;
786570    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786571    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
786572    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
786573    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
786574    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786575    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786576    +   end;
MPRINT(EM_DIAGRAM):   end;
786577    +end;
MPRINT(EM_DIAGRAM):   end;
786578    +
786579    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
786580    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
786581    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
786582    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
786583    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
786584    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
786585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786587    +end;
MPRINT(EM_DIAGRAM):   end;
786588    +else do;
MPRINT(EM_DIAGRAM):   else do;
786589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786590    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
786591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786592    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786593    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
786594    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
786595    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
786596    +   end;
MPRINT(EM_DIAGRAM):   end;
786597    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786598    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
786599    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
786600    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
786601    +   end;
MPRINT(EM_DIAGRAM):   end;
786602    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786603    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
786604    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
786605    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
786606    +   end;
MPRINT(EM_DIAGRAM):   end;
786607    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786608    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
786609    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
786610    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
786611    +   end;
MPRINT(EM_DIAGRAM):   end;
786612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786613    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
786614    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
786615    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
786616    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786617    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786618    +   end;
MPRINT(EM_DIAGRAM):   end;
786619    +end;
MPRINT(EM_DIAGRAM):   end;
786620    +
786621    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
786622    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
786623    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
786624    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
786625    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
786626    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
786627    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786628    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786629    +end;
MPRINT(EM_DIAGRAM):   end;
786630    +else do;
MPRINT(EM_DIAGRAM):   else do;
786631    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786632    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
786633    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786634    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786635    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
786636    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
786637    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
786638    +   end;
MPRINT(EM_DIAGRAM):   end;
786639    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786640    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
786641    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
786642    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
786643    +   end;
MPRINT(EM_DIAGRAM):   end;
786644    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786645    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
786646    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
786647    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
786648    +   end;
MPRINT(EM_DIAGRAM):   end;
786649    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786650    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
786651    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
786652    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
786653    +   end;
MPRINT(EM_DIAGRAM):   end;
786654    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786655    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
786656    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
786657    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
786658    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786659    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786660    +   end;
MPRINT(EM_DIAGRAM):   end;
786661    +end;
MPRINT(EM_DIAGRAM):   end;
786662    +
786663    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
786664    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
786665    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
786666    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
786667    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
786668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786670    +end;
MPRINT(EM_DIAGRAM):   end;
786671    +else do;
MPRINT(EM_DIAGRAM):   else do;
786672    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786673    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
786674    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786675    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786676    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
786677    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
786678    +   end;
MPRINT(EM_DIAGRAM):   end;
786679    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786680    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
786681    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
786682    +   end;
MPRINT(EM_DIAGRAM):   end;
786683    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786684    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
786685    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
786686    +   end;
MPRINT(EM_DIAGRAM):   end;
786687    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786688    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
786689    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
786690    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786691    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786692    +   end;
MPRINT(EM_DIAGRAM):   end;
786693    +end;
MPRINT(EM_DIAGRAM):   end;
786694    +
786695    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
786696    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
786697    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
786698    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
786699    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
786700    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
786701    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786702    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786703    +end;
MPRINT(EM_DIAGRAM):   end;
786704    +else do;
MPRINT(EM_DIAGRAM):   else do;
786705    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786706    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
786707    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786708    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
786709    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
786710    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
786711    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
786712    +   end;
MPRINT(EM_DIAGRAM):   end;
786713    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786714    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
786715    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
786716    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
786717    +   end;
MPRINT(EM_DIAGRAM):   end;
786718    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786719    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
786720    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
786721    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
786722    +   end;
MPRINT(EM_DIAGRAM):   end;
786723    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
786724    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
786725    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
786726    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
786727    +   end;
MPRINT(EM_DIAGRAM):   end;
786728    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786729    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
786730    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
786731    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
786732    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786733    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786734    +   end;
MPRINT(EM_DIAGRAM):   end;
786735    +end;
MPRINT(EM_DIAGRAM):   end;
786736    +
786737    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
786738    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
786739    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
786740    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
786741    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
786742    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
786743    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786744    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786745    +end;
MPRINT(EM_DIAGRAM):   end;
786746    +else do;
MPRINT(EM_DIAGRAM):   else do;
786747    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786748    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
786749    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786750    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786751    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
786752    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
786753    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
786754    +   end;
MPRINT(EM_DIAGRAM):   end;
786755    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786756    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
786757    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
786758    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
786759    +   end;
MPRINT(EM_DIAGRAM):   end;
786760    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786761    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
786762    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
786763    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
786764    +   end;
MPRINT(EM_DIAGRAM):   end;
786765    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786766    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
786767    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
786768    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
786769    +   end;
MPRINT(EM_DIAGRAM):   end;
786770    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786771    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
786772    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
786773    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
786774    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786775    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786776    +   end;
MPRINT(EM_DIAGRAM):   end;
786777    +end;
MPRINT(EM_DIAGRAM):   end;
786778    +
786779    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
786780    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
786781    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
786782    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
786783    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
786784    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
786785    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786786    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786787    +end;
MPRINT(EM_DIAGRAM):   end;
786788    +else do;
MPRINT(EM_DIAGRAM):   else do;
786789    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786790    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
786791    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786792    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
786793    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
786794    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
786795    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
786796    +   end;
MPRINT(EM_DIAGRAM):   end;
786797    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
786798    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
786799    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
786800    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
786801    +   end;
MPRINT(EM_DIAGRAM):   end;
786802    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786803    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
786804    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
786805    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
786806    +   end;
MPRINT(EM_DIAGRAM):   end;
786807    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786808    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
786809    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
786810    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
786811    +   end;
MPRINT(EM_DIAGRAM):   end;
786812    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786813    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
786814    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
786815    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
786816    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786817    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786818    +   end;
MPRINT(EM_DIAGRAM):   end;
786819    +end;
MPRINT(EM_DIAGRAM):   end;
786820    +
786821    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
786822    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
786823    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
786824    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
786825    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
786826    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
786827    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786828    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786829    +end;
MPRINT(EM_DIAGRAM):   end;
786830    +else do;
MPRINT(EM_DIAGRAM):   else do;
786831    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786832    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
786833    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786834    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
786835    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
786836    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
786837    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
786838    +   end;
MPRINT(EM_DIAGRAM):   end;
786839    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
786840    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
786841    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
786842    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
786843    +   end;
MPRINT(EM_DIAGRAM):   end;
786844    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786845    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
786846    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
786847    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
786848    +   end;
MPRINT(EM_DIAGRAM):   end;
786849    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786850    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
786851    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
786852    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
786853    +   end;
MPRINT(EM_DIAGRAM):   end;
786854    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786855    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
786856    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
786857    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
786858    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786859    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786860    +   end;
MPRINT(EM_DIAGRAM):   end;
786861    +end;
MPRINT(EM_DIAGRAM):   end;
786862    +
786863    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
786864    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
786865    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
786866    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
786867    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
786868    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
786869    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
786870    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786871    +end;
MPRINT(EM_DIAGRAM):   end;
786872    +else do;
MPRINT(EM_DIAGRAM):   else do;
786873    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
786874    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
786875    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
786876    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
786877    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
786878    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
786879    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
786880    +   end;
MPRINT(EM_DIAGRAM):   end;
786881    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
786882    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
786883    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
786884    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
786885    +   end;
MPRINT(EM_DIAGRAM):   end;
786886    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
786887    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
786888    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
786889    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
786890    +   end;
MPRINT(EM_DIAGRAM):   end;
786891    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
786892    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
786893    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
786894    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
786895    +   end;
MPRINT(EM_DIAGRAM):   end;
786896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
786897    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
786898    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
786899    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
786900    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
786901    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
786902    +   end;
MPRINT(EM_DIAGRAM):   end;
786903    +end;
MPRINT(EM_DIAGRAM):   end;
786904    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
786905    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
786906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
786907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
786908    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
786909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
786910    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
786911    +   H11  =     0.33640101965956 * GRP_AcceptedCmp52  +    -0.09458866011332 *
786912    +        GRP_Frq2  +     0.08165112288668 * GRP_Frq3  +      0.0098569396377 *
786913    +        GRP_Frq4  +    -0.10718097600137 * GRP_Income2
786914    +          +     0.24913133317457 * GRP_Income3  +     0.08606607454597 *
786915    +        GRP_Income4  +    -0.43083911296417 * GRP_Mnt2
786916    +          +    -0.35952383025836 * GRP_Mnt3  +     0.15746774085254 * GRP_Mnt4
786917    +          +     0.03496490321939 * GRP_MntFishProducts2
786918    +          +     -0.1386775704024 * GRP_MntFishProducts3
786919    +          +     0.08185130088727 * GRP_MntFishProducts4
786920    +          +     0.20666000615395 * GRP_MntGoldProds2
786921    +          +     0.02513603537885 * GRP_MntGoldProds3
786922    +          +     0.04518515377846 * GRP_MntGoldProds4
786923    +          +     0.14564741446952 * GRP_MntMeatProducts2
786924    +          +      0.0921407018606 * GRP_MntMeatProducts3
786925    +          +     0.03964574584898 * GRP_MntMeatProducts4
786926    +          +    -0.10395279216819 * GRP_MntWines2  +     0.12929231428625 *
786927    +        GRP_MntWines3  +     0.00045903854959 * GRP_MntWines4
786928    +          +    -0.03496333349231 * GRP_NumCatalogPurchases3
786929    +          +    -0.18329339773791 * GRP_NumCatalogPurchases4
786930    +          +     0.25535533392017 * GRP_NumDistPurchases2
786931    +          +     0.03881117716273 * GRP_NumDistPurchases3
786932    +          +    -0.02565551941415 * GRP_NumDistPurchases4
786933    +          +     0.31760052513768 * GRP_NumWebPurchases2
786934    +          +     0.09995149350563 * GRP_NumWebPurchases3
786935    +          +    -0.03267834031943 * GRP_NumWebPurchases4
786936    +          +     0.20523977712748 * GRP_RFMstat2  +    -0.05606160362426 *
786937    +        GRP_RFMstat3  +     0.08166835774422 * GRP_RFMstat4
786938    +          +    -0.02802261136507 * GRP_RMntFrq2  +     0.04530681268814 *
786939    +        GRP_RMntFrq3  +     0.17075869124019 * GRP_RMntFrq4
786940    +          +    -0.07437386313878 * GRP_Recency2  +    -0.03620176560114 *
786941    +        GRP_Recency3  +     -0.1829690397052 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.33640101965956 * GRP_AcceptedCmp52 + -0.09458866011332 * 
GRP_Frq2 + 0.08165112288668 * GRP_Frq3 + 0.0098569396377 * GRP_Frq4 + -0.10718097600137 * 
GRP_Income2 + 0.24913133317457 * GRP_Income3 + 0.08606607454597 * GRP_Income4 + 
-0.43083911296417 * GRP_Mnt2 + -0.35952383025836 * GRP_Mnt3 + 0.15746774085254 * GRP_Mnt4 + 
0.03496490321939 * GRP_MntFishProducts2 + -0.1386775704024 * GRP_MntFishProducts3 + 
0.08185130088727 * GRP_MntFishProducts4 + 0.20666000615395 * GRP_MntGoldProds2 + 
0.02513603537885 * GRP_MntGoldProds3 + 0.04518515377846 * GRP_MntGoldProds4 + 0.14564741446952 
* GRP_MntMeatProducts2 + 0.0921407018606 * GRP_MntMeatProducts3 + 0.03964574584898 * 
GRP_MntMeatProducts4 + -0.10395279216819 * GRP_MntWines2 + 0.12929231428625 * GRP_MntWines3 + 
0.00045903854959 * GRP_MntWines4 + -0.03496333349231 * GRP_NumCatalogPurchases3 + 
-0.18329339773791 * GRP_NumCatalogPurchases4 + 0.25535533392017 * GRP_NumDistPurchases2 + 
0.03881117716273 * GRP_NumDistPurchases3 + -0.02565551941415 * GRP_NumDistPurchases4 + 
0.31760052513768 * GRP_NumWebPurchases2 + 0.09995149350563 * GRP_NumWebPurchases3 + 
-0.03267834031943 * GRP_NumWebPurchases4 + 0.20523977712748 * GRP_RFMstat2 + -0.05606160362426 
* GRP_RFMstat3 + 0.08166835774422 * GRP_RFMstat4 + -0.02802261136507 * GRP_RMntFrq2 + 
0.04530681268814 * GRP_RMntFrq3 + 0.17075869124019 * GRP_RMntFrq4 + -0.07437386313878 * 
GRP_Recency2 + -0.03620176560114 * GRP_Recency3 + -0.1829690397052 * GRP_Recency4 ;
786942    +   H12  =    -0.44053040668419 * GRP_AcceptedCmp52  +     0.39130488780547 *
786943    +        GRP_Frq2  +    -0.05339083882864 * GRP_Frq3  +     0.00231451089906 *
786944    +        GRP_Frq4  +      0.5831587240061 * GRP_Income2
786945    +          +     0.54852848249408 * GRP_Income3  +     -0.4598479622494 *
786946    +        GRP_Income4  +     0.04804779326921 * GRP_Mnt2
786947    +          +    -0.18484356222731 * GRP_Mnt3  +     0.03549703658034 * GRP_Mnt4
786948    +          +     0.39885742453554 * GRP_MntFishProducts2
786949    +          +     0.15761355687754 * GRP_MntFishProducts3
786950    +          +    -0.21271471925571 * GRP_MntFishProducts4
786951    +          +     -0.1972927903123 * GRP_MntGoldProds2
786952    +          +     0.03399122417272 * GRP_MntGoldProds3
786953    +          +    -0.02558670857298 * GRP_MntGoldProds4
786954    +          +    -0.41984327217018 * GRP_MntMeatProducts2
786955    +          +     0.05051071020912 * GRP_MntMeatProducts3
786956    +          +     0.02213191751142 * GRP_MntMeatProducts4
786957    +          +     0.27725513562646 * GRP_MntWines2  +    -0.13825638111274 *
786958    +        GRP_MntWines3  +     0.10174302336793 * GRP_MntWines4
786959    +          +    -0.13050806508623 * GRP_NumCatalogPurchases3
786960    +          +     0.18000903281461 * GRP_NumCatalogPurchases4
786961    +          +     -0.5134802042985 * GRP_NumDistPurchases2
786962    +          +     -0.0517830924312 * GRP_NumDistPurchases3
786963    +          +    -0.16980153882394 * GRP_NumDistPurchases4
786964    +          +     0.03868274112159 * GRP_NumWebPurchases2
786965    +          +     0.16193614709489 * GRP_NumWebPurchases3
786966    +          +      0.0269423998237 * GRP_NumWebPurchases4
786967    +          +    -0.32452106975443 * GRP_RFMstat2  +    -0.21611965835421 *
786968    +        GRP_RFMstat3  +    -0.11926055719327 * GRP_RFMstat4
786969    +          +     0.21187682021828 * GRP_RMntFrq2  +     0.08976835265364 *
786970    +        GRP_RMntFrq3  +    -0.20787348857522 * GRP_RMntFrq4
786971    +          +     0.68804853934306 * GRP_Recency2  +     0.17422440486451 *
786972    +        GRP_Recency3  +    -0.18452599729833 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.44053040668419 * GRP_AcceptedCmp52 + 0.39130488780547 * 
GRP_Frq2 + -0.05339083882864 * GRP_Frq3 + 0.00231451089906 * GRP_Frq4 + 0.5831587240061 * 
GRP_Income2 + 0.54852848249408 * GRP_Income3 + -0.4598479622494 * GRP_Income4 + 
0.04804779326921 * GRP_Mnt2 + -0.18484356222731 * GRP_Mnt3 + 0.03549703658034 * GRP_Mnt4 + 
0.39885742453554 * GRP_MntFishProducts2 + 0.15761355687754 * GRP_MntFishProducts3 + 
-0.21271471925571 * GRP_MntFishProducts4 + -0.1972927903123 * GRP_MntGoldProds2 + 
0.03399122417272 * GRP_MntGoldProds3 + -0.02558670857298 * GRP_MntGoldProds4 + 
-0.41984327217018 * GRP_MntMeatProducts2 + 0.05051071020912 * GRP_MntMeatProducts3 + 
0.02213191751142 * GRP_MntMeatProducts4 + 0.27725513562646 * GRP_MntWines2 + -0.13825638111274 
* GRP_MntWines3 + 0.10174302336793 * GRP_MntWines4 + -0.13050806508623 * 
GRP_NumCatalogPurchases3 + 0.18000903281461 * GRP_NumCatalogPurchases4 + -0.5134802042985 * 
GRP_NumDistPurchases2 + -0.0517830924312 * GRP_NumDistPurchases3 + -0.16980153882394 * 
GRP_NumDistPurchases4 + 0.03868274112159 * GRP_NumWebPurchases2 + 0.16193614709489 * 
GRP_NumWebPurchases3 + 0.0269423998237 * GRP_NumWebPurchases4 + -0.32452106975443 * 
GRP_RFMstat2 + -0.21611965835421 * GRP_RFMstat3 + -0.11926055719327 * GRP_RFMstat4 + 
0.21187682021828 * GRP_RMntFrq2 + 0.08976835265364 * GRP_RMntFrq3 + -0.20787348857522 * 
GRP_RMntFrq4 + 0.68804853934306 * GRP_Recency2 + 0.17422440486451 * GRP_Recency3 + 
-0.18452599729833 * GRP_Recency4 ;
786973    +   H13  =      0.0874014291812 * GRP_AcceptedCmp52  +     0.17304198694157 *
786974    +        GRP_Frq2  +    -0.11491629051719 * GRP_Frq3  +      0.2483225021197 *
786975    +        GRP_Frq4  +    -0.05989120739582 * GRP_Income2
786976    +          +    -0.02732012571019 * GRP_Income3  +     0.20807069048689 *
786977    +        GRP_Income4  +     0.33666649935924 * GRP_Mnt2
786978    +          +      0.0642358727731 * GRP_Mnt3  +    -0.22568229208697 * GRP_Mnt4
786979    +          +    -0.12147573127033 * GRP_MntFishProducts2
786980    +          +    -0.19323607018295 * GRP_MntFishProducts3
786981    +          +     0.25863847748437 * GRP_MntFishProducts4
786982    +          +     -0.0126645668436 * GRP_MntGoldProds2
786983    +          +    -0.11323357258997 * GRP_MntGoldProds3
786984    +          +    -0.11250689806163 * GRP_MntGoldProds4
786985    +          +    -0.12545641044895 * GRP_MntMeatProducts2
786986    +          +    -0.04305442792903 * GRP_MntMeatProducts3
786987    +          +    -0.32146302728834 * GRP_MntMeatProducts4
786988    +          +    -0.00148263872712 * GRP_MntWines2  +     0.11028478479749 *
786989    +        GRP_MntWines3  +    -0.02542826671873 * GRP_MntWines4
786990    +          +    -0.03468933342665 * GRP_NumCatalogPurchases3
786991    +          +     0.06081255664838 * GRP_NumCatalogPurchases4
786992    +          +     0.09115957554684 * GRP_NumDistPurchases2
786993    +          +    -0.19448624046951 * GRP_NumDistPurchases3
786994    +          +     0.18401866660579 * GRP_NumDistPurchases4
786995    +          +    -0.30934548179162 * GRP_NumWebPurchases2
786996    +          +    -0.15569430268918 * GRP_NumWebPurchases3
786997    +          +    -0.15912290396059 * GRP_NumWebPurchases4
786998    +          +      0.3307600563141 * GRP_RFMstat2  +    -0.22709032656384 *
786999    +        GRP_RFMstat3  +      0.0673885738463 * GRP_RFMstat4
787000    +          +    -0.34782658221729 * GRP_RMntFrq2  +    -0.37292996378384 *
787001    +        GRP_RMntFrq3  +    -0.19656647007955 * GRP_RMntFrq4
787002    +          +    -0.48292133112766 * GRP_Recency2  +    -0.19998163272412 *
787003    +        GRP_Recency3  +     0.04020306752703 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.0874014291812 * GRP_AcceptedCmp52 + 0.17304198694157 * GRP_Frq2 
+ -0.11491629051719 * GRP_Frq3 + 0.2483225021197 * GRP_Frq4 + -0.05989120739582 * GRP_Income2 
+ -0.02732012571019 * GRP_Income3 + 0.20807069048689 * GRP_Income4 + 0.33666649935924 * 
GRP_Mnt2 + 0.0642358727731 * GRP_Mnt3 + -0.22568229208697 * GRP_Mnt4 + -0.12147573127033 * 
GRP_MntFishProducts2 + -0.19323607018295 * GRP_MntFishProducts3 + 0.25863847748437 * 
GRP_MntFishProducts4 + -0.0126645668436 * GRP_MntGoldProds2 + -0.11323357258997 * 
GRP_MntGoldProds3 + -0.11250689806163 * GRP_MntGoldProds4 + -0.12545641044895 * 
GRP_MntMeatProducts2 + -0.04305442792903 * GRP_MntMeatProducts3 + -0.32146302728834 * 
GRP_MntMeatProducts4 + -0.00148263872712 * GRP_MntWines2 + 0.11028478479749 * GRP_MntWines3 + 
-0.02542826671873 * GRP_MntWines4 + -0.03468933342665 * GRP_NumCatalogPurchases3 + 
0.06081255664838 * GRP_NumCatalogPurchases4 + 0.09115957554684 * GRP_NumDistPurchases2 + 
-0.19448624046951 * GRP_NumDistPurchases3 + 0.18401866660579 * GRP_NumDistPurchases4 + 
-0.30934548179162 * GRP_NumWebPurchases2 + -0.15569430268918 * GRP_NumWebPurchases3 + 
-0.15912290396059 * GRP_NumWebPurchases4 + 0.3307600563141 * GRP_RFMstat2 + -0.22709032656384 
* GRP_RFMstat3 + 0.0673885738463 * GRP_RFMstat4 + -0.34782658221729 * GRP_RMntFrq2 + 
-0.37292996378384 * GRP_RMntFrq3 + -0.19656647007955 * GRP_RMntFrq4 + -0.48292133112766 * 
GRP_Recency2 + -0.19998163272412 * GRP_Recency3 + 0.04020306752703 * GRP_Recency4 ;
787004    +   H14  =    -0.06535462604618 * GRP_AcceptedCmp52  +    -0.02538966501603 *
787005    +        GRP_Frq2  +    -0.37465930862485 * GRP_Frq3  +    -0.09115714895281 *
787006    +        GRP_Frq4  +    -0.19377207233976 * GRP_Income2
787007    +          +     0.19699955617479 * GRP_Income3  +     0.18620312701109 *
787008    +        GRP_Income4  +    -0.07918752617024 * GRP_Mnt2
787009    +          +    -0.15791729955854 * GRP_Mnt3  +     0.05785915035978 * GRP_Mnt4
787010    +          +    -0.15621920593365 * GRP_MntFishProducts2
787011    +          +     0.18156570239129 * GRP_MntFishProducts3
787012    +          +    -0.19268366331472 * GRP_MntFishProducts4
787013    +          +     0.17003324763884 * GRP_MntGoldProds2
787014    +          +    -0.24315925332299 * GRP_MntGoldProds3
787015    +          +    -0.19433542142509 * GRP_MntGoldProds4
787016    +          +     0.48300099715349 * GRP_MntMeatProducts2
787017    +          +     0.04287374992788 * GRP_MntMeatProducts3
787018    +          +    -0.14772483570864 * GRP_MntMeatProducts4
787019    +          +    -0.35939710533055 * GRP_MntWines2  +      0.0814263252657 *
787020    +        GRP_MntWines3  +     0.11455106831693 * GRP_MntWines4
787021    +          +     0.28909689894797 * GRP_NumCatalogPurchases3
787022    +          +     0.35798075318799 * GRP_NumCatalogPurchases4
787023    +          +     0.26175622277157 * GRP_NumDistPurchases2
787024    +          +    -0.28134203235556 * GRP_NumDistPurchases3
787025    +          +     -0.0849885153607 * GRP_NumDistPurchases4
787026    +          +    -0.00363026409862 * GRP_NumWebPurchases2
787027    +          +    -0.18458881565534 * GRP_NumWebPurchases3
787028    +          +    -0.00054495066636 * GRP_NumWebPurchases4
787029    +          +     0.02464665365087 * GRP_RFMstat2  +    -0.04709787167688 *
787030    +        GRP_RFMstat3  +    -0.21485621631981 * GRP_RFMstat4
787031    +          +      0.0421527075159 * GRP_RMntFrq2  +     0.12266531817421 *
787032    +        GRP_RMntFrq3  +     0.34319246452663 * GRP_RMntFrq4
787033    +          +    -0.42128751178743 * GRP_Recency2  +    -0.03341002800803 *
787034    +        GRP_Recency3  +    -0.00550102888585 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.06535462604618 * GRP_AcceptedCmp52 + -0.02538966501603 * 
GRP_Frq2 + -0.37465930862485 * GRP_Frq3 + -0.09115714895281 * GRP_Frq4 + -0.19377207233976 * 
GRP_Income2 + 0.19699955617479 * GRP_Income3 + 0.18620312701109 * GRP_Income4 + 
-0.07918752617024 * GRP_Mnt2 + -0.15791729955854 * GRP_Mnt3 + 0.05785915035978 * GRP_Mnt4 + 
-0.15621920593365 * GRP_MntFishProducts2 + 0.18156570239129 * GRP_MntFishProducts3 + 
-0.19268366331472 * GRP_MntFishProducts4 + 0.17003324763884 * GRP_MntGoldProds2 + 
-0.24315925332299 * GRP_MntGoldProds3 + -0.19433542142509 * GRP_MntGoldProds4 + 
0.48300099715349 * GRP_MntMeatProducts2 + 0.04287374992788 * GRP_MntMeatProducts3 + 
-0.14772483570864 * GRP_MntMeatProducts4 + -0.35939710533055 * GRP_MntWines2 + 0.0814263252657 
* GRP_MntWines3 + 0.11455106831693 * GRP_MntWines4 + 0.28909689894797 * 
GRP_NumCatalogPurchases3 + 0.35798075318799 * GRP_NumCatalogPurchases4 + 0.26175622277157 * 
GRP_NumDistPurchases2 + -0.28134203235556 * GRP_NumDistPurchases3 + -0.0849885153607 * 
GRP_NumDistPurchases4 + -0.00363026409862 * GRP_NumWebPurchases2 + -0.18458881565534 * 
GRP_NumWebPurchases3 + -0.00054495066636 * GRP_NumWebPurchases4 + 0.02464665365087 * 
GRP_RFMstat2 + -0.04709787167688 * GRP_RFMstat3 + -0.21485621631981 * GRP_RFMstat4 + 
0.0421527075159 * GRP_RMntFrq2 + 0.12266531817421 * GRP_RMntFrq3 + 0.34319246452663 * 
GRP_RMntFrq4 + -0.42128751178743 * GRP_Recency2 + -0.03341002800803 * GRP_Recency3 + 
-0.00550102888585 * GRP_Recency4 ;
787035    +   H15  =     0.20080324976316 * GRP_AcceptedCmp52  +     0.03346464595946 *
787036    +        GRP_Frq2  +    -0.46550936235158 * GRP_Frq3  +     0.11038114045006 *
787037    +        GRP_Frq4  +     0.10073875117437 * GRP_Income2
787038    +          +    -0.22683871345668 * GRP_Income3  +    -0.09384548786395 *
787039    +        GRP_Income4  +     0.43323607707701 * GRP_Mnt2
787040    +          +     0.27829480348267 * GRP_Mnt3  +     0.12638599389415 * GRP_Mnt4
787041    +          +     0.02417129110075 * GRP_MntFishProducts2
787042    +          +      0.2545897829616 * GRP_MntFishProducts3
787043    +          +    -0.29458064807823 * GRP_MntFishProducts4
787044    +          +    -0.15364697476117 * GRP_MntGoldProds2
787045    +          +      0.3170384910511 * GRP_MntGoldProds3
787046    +          +     0.43731794737697 * GRP_MntGoldProds4
787047    +          +     0.51501086483907 * GRP_MntMeatProducts2
787048    +          +     0.15231215210229 * GRP_MntMeatProducts3
787049    +          +    -0.05381144096743 * GRP_MntMeatProducts4
787050    +          +     0.13508510112509 * GRP_MntWines2  +    -0.33096430220175 *
787051    +        GRP_MntWines3  +     0.49248642584759 * GRP_MntWines4
787052    +          +     0.25386528096127 * GRP_NumCatalogPurchases3
787053    +          +     0.31775128798882 * GRP_NumCatalogPurchases4
787054    +          +     0.26152832976302 * GRP_NumDistPurchases2
787055    +          +     0.00160473771196 * GRP_NumDistPurchases3
787056    +          +      0.0013330753294 * GRP_NumDistPurchases4
787057    +          +     0.23697025371136 * GRP_NumWebPurchases2
787058    +          +     0.12394312604839 * GRP_NumWebPurchases3
787059    +          +     0.29358944454399 * GRP_NumWebPurchases4
787060    +          +      0.2711027918467 * GRP_RFMstat2  +    -0.07642391618094 *
787061    +        GRP_RFMstat3  +     0.14712184054126 * GRP_RFMstat4
787062    +          +     0.11431001806439 * GRP_RMntFrq2  +     0.06273949214332 *
787063    +        GRP_RMntFrq3  +     0.44954334169592 * GRP_RMntFrq4
787064    +          +    -0.10299484961132 * GRP_Recency2  +    -0.00660050077332 *
787065    +        GRP_Recency3  +     0.10477819043432 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.20080324976316 * GRP_AcceptedCmp52 + 0.03346464595946 * GRP_Frq2 
+ -0.46550936235158 * GRP_Frq3 + 0.11038114045006 * GRP_Frq4 + 0.10073875117437 * GRP_Income2 
+ -0.22683871345668 * GRP_Income3 + -0.09384548786395 * GRP_Income4 + 0.43323607707701 * 
GRP_Mnt2 + 0.27829480348267 * GRP_Mnt3 + 0.12638599389415 * GRP_Mnt4 + 0.02417129110075 * 
GRP_MntFishProducts2 + 0.2545897829616 * GRP_MntFishProducts3 + -0.29458064807823 * 
GRP_MntFishProducts4 + -0.15364697476117 * GRP_MntGoldProds2 + 0.3170384910511 * 
GRP_MntGoldProds3 + 0.43731794737697 * GRP_MntGoldProds4 + 0.51501086483907 * 
GRP_MntMeatProducts2 + 0.15231215210229 * GRP_MntMeatProducts3 + -0.05381144096743 * 
GRP_MntMeatProducts4 + 0.13508510112509 * GRP_MntWines2 + -0.33096430220175 * GRP_MntWines3 + 
0.49248642584759 * GRP_MntWines4 + 0.25386528096127 * GRP_NumCatalogPurchases3 + 
0.31775128798882 * GRP_NumCatalogPurchases4 + 0.26152832976302 * GRP_NumDistPurchases2 + 
0.00160473771196 * GRP_NumDistPurchases3 + 0.0013330753294 * GRP_NumDistPurchases4 + 
0.23697025371136 * GRP_NumWebPurchases2 + 0.12394312604839 * GRP_NumWebPurchases3 + 
0.29358944454399 * GRP_NumWebPurchases4 + 0.2711027918467 * GRP_RFMstat2 + -0.07642391618094 * 
GRP_RFMstat3 + 0.14712184054126 * GRP_RFMstat4 + 0.11431001806439 * GRP_RMntFrq2 + 
0.06273949214332 * GRP_RMntFrq3 + 0.44954334169592 * GRP_RMntFrq4 + -0.10299484961132 * 
GRP_Recency2 + -0.00660050077332 * GRP_Recency3 + 0.10477819043432 * GRP_Recency4 ;
787066    +   H16  =      0.7597594494859 * GRP_AcceptedCmp52  +    -0.32376689593056 *
787067    +        GRP_Frq2  +    -0.07779183366163 * GRP_Frq3  +     0.11273534310895 *
787068    +        GRP_Frq4  +    -0.36089895624306 * GRP_Income2
787069    +          +    -0.38271011363759 * GRP_Income3  +     0.33282176047548 *
787070    +        GRP_Income4  +    -0.13854310872224 * GRP_Mnt2
787071    +          +    -0.31005746238746 * GRP_Mnt3  +     0.02082673800287 * GRP_Mnt4
787072    +          +     0.01224737349632 * GRP_MntFishProducts2
787073    +          +    -0.19458526368147 * GRP_MntFishProducts3
787074    +          +    -0.25187479317784 * GRP_MntFishProducts4
787075    +          +     0.01924229245332 * GRP_MntGoldProds2
787076    +          +     0.01852658027428 * GRP_MntGoldProds3
787077    +          +    -0.23305256947549 * GRP_MntGoldProds4
787078    +          +     0.13401051842966 * GRP_MntMeatProducts2
787079    +          +     0.27193108385041 * GRP_MntMeatProducts3
787080    +          +     0.01379422261623 * GRP_MntMeatProducts4
787081    +          +    -0.57181882470311 * GRP_MntWines2  +    -0.57187059852098 *
787082    +        GRP_MntWines3  +     0.30882985081217 * GRP_MntWines4
787083    +          +     0.49912000555763 * GRP_NumCatalogPurchases3
787084    +          +    -0.04354876738665 * GRP_NumCatalogPurchases4
787085    +          +     0.34941540707612 * GRP_NumDistPurchases2
787086    +          +     0.32691169055841 * GRP_NumDistPurchases3
787087    +          +    -0.09211947503636 * GRP_NumDistPurchases4
787088    +          +     0.23482266977456 * GRP_NumWebPurchases2
787089    +          +     0.33507315521476 * GRP_NumWebPurchases3
787090    +          +    -0.08817191120299 * GRP_NumWebPurchases4
787091    +          +     0.02374098589478 * GRP_RFMstat2  +    -0.23629328969151 *
787092    +        GRP_RFMstat3  +    -0.52724215414655 * GRP_RFMstat4
787093    +          +    -0.11172774703142 * GRP_RMntFrq2  +    -0.23930023577086 *
787094    +        GRP_RMntFrq3  +    -0.17783974029566 * GRP_RMntFrq4
787095    +          +    -0.09948595230391 * GRP_Recency2  +    -0.15957779348689 *
787096    +        GRP_Recency3  +     0.12430840578537 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = 0.7597594494859 * GRP_AcceptedCmp52 + -0.32376689593056 * GRP_Frq2 
+ -0.07779183366163 * GRP_Frq3 + 0.11273534310895 * GRP_Frq4 + -0.36089895624306 * GRP_Income2 
+ -0.38271011363759 * GRP_Income3 + 0.33282176047548 * GRP_Income4 + -0.13854310872224 * 
GRP_Mnt2 + -0.31005746238746 * GRP_Mnt3 + 0.02082673800287 * GRP_Mnt4 + 0.01224737349632 * 
GRP_MntFishProducts2 + -0.19458526368147 * GRP_MntFishProducts3 + -0.25187479317784 * 
GRP_MntFishProducts4 + 0.01924229245332 * GRP_MntGoldProds2 + 0.01852658027428 * 
GRP_MntGoldProds3 + -0.23305256947549 * GRP_MntGoldProds4 + 0.13401051842966 * 
GRP_MntMeatProducts2 + 0.27193108385041 * GRP_MntMeatProducts3 + 0.01379422261623 * 
GRP_MntMeatProducts4 + -0.57181882470311 * GRP_MntWines2 + -0.57187059852098 * GRP_MntWines3 + 
0.30882985081217 * GRP_MntWines4 + 0.49912000555763 * GRP_NumCatalogPurchases3 + 
-0.04354876738665 * GRP_NumCatalogPurchases4 + 0.34941540707612 * GRP_NumDistPurchases2 + 
0.32691169055841 * GRP_NumDistPurchases3 + -0.09211947503636 * GRP_NumDistPurchases4 + 
0.23482266977456 * GRP_NumWebPurchases2 + 0.33507315521476 * GRP_NumWebPurchases3 + 
-0.08817191120299 * GRP_NumWebPurchases4 + 0.02374098589478 * GRP_RFMstat2 + -0.23629328969151 
* GRP_RFMstat3 + -0.52724215414655 * GRP_RFMstat4 + -0.11172774703142 * GRP_RMntFrq2 + 
-0.23930023577086 * GRP_RMntFrq3 + -0.17783974029566 * GRP_RMntFrq4 + -0.09948595230391 * 
GRP_Recency2 + -0.15957779348689 * GRP_Recency3 + 0.12430840578537 * GRP_Recency4 ;
787097    +   H11  =    -0.83610777610194 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.83610777610194 + H11 ;
787098    +   H12  =     0.10079183797017 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.10079183797017 + H12 ;
787099    +   H13  =    -1.02827583788856 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.02827583788856 + H13 ;
787100    +   H14  =    -0.61336153955727 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.61336153955727 + H14 ;
787101    +   H15  =      0.2253118259528 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.2253118259528 + H15 ;
787102    +   H16  =     0.92538506927963 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.92538506927963 + H16 ;
787103    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
787104    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
787105    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
787106    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
787107    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
787108    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
787109    +END;
MPRINT(EM_DIAGRAM):   END;
787110    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
787111    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
787112    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
787113    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
787114    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
787115    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
787116    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
787117    +END;
MPRINT(EM_DIAGRAM):   END;
787118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
787119    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
787120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
787121    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
787122    +   P_DepVar1  =    -0.23603747173409 * H11  +     2.21167504352097 * H12
787123    +          +    -0.73919409105284 * H13  +     -1.1148994433356 * H14
787124    +          +    -1.58525957527132 * H15  +    -1.77364534531332 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23603747173409 * H11 + 2.21167504352097 * H12 + 
-0.73919409105284 * H13 + -1.1148994433356 * H14 + -1.58525957527132 * H15 + -1.77364534531332 
* H16 ;
787125    +   P_DepVar1  =    -1.69291771072924 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69291771072924 + P_DepVar1 ;
787126    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
787127    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
787128    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
787129    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
787130    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
787131    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
787132    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
787133    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
787134    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
787135    +END;
MPRINT(EM_DIAGRAM):   END;
787136    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
787137    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
787138    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
787139    +END;
MPRINT(EM_DIAGRAM):   END;
787140    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
787141    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
787142    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
787143    +END;
MPRINT(EM_DIAGRAM):   END;
787144    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
787145    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
787146    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
787147    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
787148    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
787149    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
787150    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
787151    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
787152    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
787153    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
787154    +END;
MPRINT(EM_DIAGRAM):   END;
787155    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
787156    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
787157    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
787158    +drop
787159    +H11
787160    +H12
787161    +H13
787162    +H14
787163    +H15
787164    +H16
787165    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
787166     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
787167     quit;
787168     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
787169     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
787170     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
787171     retain ID 2 Node "Neural23";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural23";
787172     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
787173     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2055 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2055 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787174     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
787175     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787176     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2055 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2055 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787177     proc sort data=EMWS8.Neural23_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_variableset out=_temp2(keep=NAME CREATOR);
787178     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787179     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL23_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787180     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787181     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
787182     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
787183     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787184     proc contents data=EMWS8.Neural23_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural23_train out=_meta(keep=NAME) noprint;
787185     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

787186     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
787187     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787189     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787190     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
787191     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787192     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787193     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
787194     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
787194   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 916 rows and 5 columns.

787195     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787196     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
787197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 916 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 916 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787198     filename _pref
787198   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
787199     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
787200     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
787201    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
787202    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
787203    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
787204    +
787205    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787206    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
787207    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787208    +LABEL GRP_AcceptedCmp5 =
787209    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
787210    +
787211    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
787212    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
787213    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
787214    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
787215    +end;
MPRINT(EM_DIAGRAM):   end;
787216    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
787217    +if (_UFORMAT eq '0'
787218    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
787219    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
787220    +end;
MPRINT(EM_DIAGRAM):   end;
787221    +else
787222    +if (_UFORMAT eq '1'
787223    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
787224    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
787225    +end;
MPRINT(EM_DIAGRAM):   end;
787226    +else do;
MPRINT(EM_DIAGRAM):   else do;
787227    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
787228    +end;
MPRINT(EM_DIAGRAM):   end;
787229    +end;
MPRINT(EM_DIAGRAM):   end;
787230    +
787231    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787232    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
787233    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787234    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
787235    +
787236    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
787237    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
787238    +end;
MPRINT(EM_DIAGRAM):   end;
787239    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
787240    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
787241    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
787242    +end;
MPRINT(EM_DIAGRAM):   end;
787243    +else
787244    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
787245    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
787246    +end;
MPRINT(EM_DIAGRAM):   end;
787247    +else
787248    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
787249    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
787250    +end;
MPRINT(EM_DIAGRAM):   end;
787251    +else
787252    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
787253    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
787254    +end;
MPRINT(EM_DIAGRAM):   end;
787255    +end;
MPRINT(EM_DIAGRAM):   end;
787256    +
787257    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787258    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
787259    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787260    +LABEL GRP_Income =
787261    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
787262    +
787263    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
787264    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
787265    +end;
MPRINT(EM_DIAGRAM):   end;
787266    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
787267    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
787268    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
787269    +end;
MPRINT(EM_DIAGRAM):   end;
787270    +else
787271    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
787272    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
787273    +end;
MPRINT(EM_DIAGRAM):   end;
787274    +else
787275    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
787276    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
787277    +end;
MPRINT(EM_DIAGRAM):   end;
787278    +else
787279    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
787280    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
787281    +end;
MPRINT(EM_DIAGRAM):   end;
787282    +end;
MPRINT(EM_DIAGRAM):   end;
787283    +
787284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787285    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
787286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787287    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
787288    +
787289    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
787290    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
787291    +end;
MPRINT(EM_DIAGRAM):   end;
787292    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
787293    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
787294    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
787295    +end;
MPRINT(EM_DIAGRAM):   end;
787296    +else
787297    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
787298    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
787299    +end;
MPRINT(EM_DIAGRAM):   end;
787300    +else
787301    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
787302    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
787303    +end;
MPRINT(EM_DIAGRAM):   end;
787304    +else
787305    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
787306    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
787307    +end;
MPRINT(EM_DIAGRAM):   end;
787308    +end;
MPRINT(EM_DIAGRAM):   end;
787309    +
787310    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787311    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
787312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787313    +LABEL GRP_MntFishProducts =
787314    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
787315    +
787316    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
787317    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
787318    +end;
MPRINT(EM_DIAGRAM):   end;
787319    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
787320    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
787321    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
787322    +end;
MPRINT(EM_DIAGRAM):   end;
787323    +else
787324    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
787325    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
787326    +end;
MPRINT(EM_DIAGRAM):   end;
787327    +else
787328    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
787329    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
787330    +end;
MPRINT(EM_DIAGRAM):   end;
787331    +else
787332    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
787333    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
787334    +end;
MPRINT(EM_DIAGRAM):   end;
787335    +end;
MPRINT(EM_DIAGRAM):   end;
787336    +
787337    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787338    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
787339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787340    +LABEL GRP_MntGoldProds =
787341    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
787342    +
787343    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
787344    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
787345    +end;
MPRINT(EM_DIAGRAM):   end;
787346    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
787347    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
787348    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
787349    +end;
MPRINT(EM_DIAGRAM):   end;
787350    +else
787351    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
787352    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
787353    +end;
MPRINT(EM_DIAGRAM):   end;
787354    +else
787355    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
787356    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
787357    +end;
MPRINT(EM_DIAGRAM):   end;
787358    +else
787359    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
787360    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
787361    +end;
MPRINT(EM_DIAGRAM):   end;
787362    +end;
MPRINT(EM_DIAGRAM):   end;
787363    +
787364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787365    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
787366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787367    +LABEL GRP_MntMeatProducts =
787368    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
787369    +
787370    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
787371    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
787372    +end;
MPRINT(EM_DIAGRAM):   end;
787373    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
787374    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
787375    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
787376    +end;
MPRINT(EM_DIAGRAM):   end;
787377    +else
787378    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
787379    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
787380    +end;
MPRINT(EM_DIAGRAM):   end;
787381    +else
787382    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
787383    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
787384    +end;
MPRINT(EM_DIAGRAM):   end;
787385    +else
787386    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
787387    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
787388    +end;
MPRINT(EM_DIAGRAM):   end;
787389    +end;
MPRINT(EM_DIAGRAM):   end;
787390    +
787391    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787392    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
787393    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787394    +LABEL GRP_MntWines =
787395    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
787396    +
787397    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
787398    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
787399    +end;
MPRINT(EM_DIAGRAM):   end;
787400    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
787401    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
787402    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
787403    +end;
MPRINT(EM_DIAGRAM):   end;
787404    +else
787405    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
787406    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
787407    +end;
MPRINT(EM_DIAGRAM):   end;
787408    +else
787409    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
787410    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
787411    +end;
MPRINT(EM_DIAGRAM):   end;
787412    +else
787413    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
787414    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
787415    +end;
MPRINT(EM_DIAGRAM):   end;
787416    +end;
MPRINT(EM_DIAGRAM):   end;
787417    +
787418    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787419    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
787420    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787421    +LABEL GRP_NumCatalogPurchases =
787422    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
787423    +
787424    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
787425    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
787426    +end;
MPRINT(EM_DIAGRAM):   end;
787427    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
787428    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
787429    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
787430    +end;
MPRINT(EM_DIAGRAM):   end;
787431    +else
787432    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
787433    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
787434    +end;
MPRINT(EM_DIAGRAM):   end;
787435    +else
787436    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
787437    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
787438    +end;
MPRINT(EM_DIAGRAM):   end;
787439    +else
787440    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
787441    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
787442    +end;
MPRINT(EM_DIAGRAM):   end;
787443    +end;
MPRINT(EM_DIAGRAM):   end;
787444    +
787445    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787446    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
787447    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787448    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
787449    +
787450    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
787451    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
787452    +end;
MPRINT(EM_DIAGRAM):   end;
787453    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
787454    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
787455    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
787456    +end;
MPRINT(EM_DIAGRAM):   end;
787457    +else
787458    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
787459    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
787460    +end;
MPRINT(EM_DIAGRAM):   end;
787461    +else
787462    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
787463    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
787464    +end;
MPRINT(EM_DIAGRAM):   end;
787465    +else
787466    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
787467    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
787468    +end;
MPRINT(EM_DIAGRAM):   end;
787469    +end;
MPRINT(EM_DIAGRAM):   end;
787470    +
787471    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787472    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
787473    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787474    +LABEL GRP_NumWebPurchases =
787475    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
787476    +
787477    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
787478    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
787479    +end;
MPRINT(EM_DIAGRAM):   end;
787480    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
787481    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
787482    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
787483    +end;
MPRINT(EM_DIAGRAM):   end;
787484    +else
787485    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
787486    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
787487    +end;
MPRINT(EM_DIAGRAM):   end;
787488    +else
787489    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
787490    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
787491    +end;
MPRINT(EM_DIAGRAM):   end;
787492    +else
787493    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
787494    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
787495    +end;
MPRINT(EM_DIAGRAM):   end;
787496    +end;
MPRINT(EM_DIAGRAM):   end;
787497    +
787498    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787499    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
787500    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787501    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
787502    +
787503    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
787504    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
787505    +end;
MPRINT(EM_DIAGRAM):   end;
787506    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
787507    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
787508    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
787509    +end;
MPRINT(EM_DIAGRAM):   end;
787510    +else
787511    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
787512    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
787513    +end;
MPRINT(EM_DIAGRAM):   end;
787514    +else
787515    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
787516    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
787517    +end;
MPRINT(EM_DIAGRAM):   end;
787518    +else
787519    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
787520    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
787521    +end;
MPRINT(EM_DIAGRAM):   end;
787522    +end;
MPRINT(EM_DIAGRAM):   end;
787523    +
787524    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787525    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
787526    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787527    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
787528    +
787529    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
787530    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
787531    +end;
MPRINT(EM_DIAGRAM):   end;
787532    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
787533    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
787534    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
787535    +end;
MPRINT(EM_DIAGRAM):   end;
787536    +else
787537    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
787538    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
787539    +end;
MPRINT(EM_DIAGRAM):   end;
787540    +else
787541    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
787542    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
787543    +end;
MPRINT(EM_DIAGRAM):   end;
787544    +else
787545    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
787546    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
787547    +end;
MPRINT(EM_DIAGRAM):   end;
787548    +end;
MPRINT(EM_DIAGRAM):   end;
787549    +
787550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787551    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
787552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787553    +LABEL GRP_Recency =
787554    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
787555    +
787556    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
787557    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
787558    +end;
MPRINT(EM_DIAGRAM):   end;
787559    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
787560    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
787561    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
787562    +end;
MPRINT(EM_DIAGRAM):   end;
787563    +else
787564    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
787565    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
787566    +end;
MPRINT(EM_DIAGRAM):   end;
787567    +else
787568    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
787569    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
787570    +end;
MPRINT(EM_DIAGRAM):   end;
787571    +else
787572    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
787573    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
787574    +end;
MPRINT(EM_DIAGRAM):   end;
787575    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
787576     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
787577     quit;
787578     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
787579     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
787580     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
787581     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
787582     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
787583     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787584     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
787585     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787586     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787587     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
787588     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787589     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787590     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787591     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
787592     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
787593     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787594     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
787595     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

787596     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
787597     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787598     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787599     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787600     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
787601     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787602     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787603     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
787604     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
787604   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

787605     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787606     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
787607     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 931 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787608     filename _pref
787608   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
787609     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
787610     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
787611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787612    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
787613    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
787614    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
787615    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
787616    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
787617     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
787618     quit;
787619     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
787620     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
787621     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
787622     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
787623     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
787624     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787625     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
787626     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787627     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787628     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
787629     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787630     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787631     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787632     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
787633     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
787634     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787635     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
787636     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

787637     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
787638     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787639     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787640     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787641     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
787642     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787643     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787644     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
787645     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
787645   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

787646     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787647     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
787648     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 935 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787649     filename _pref
787649   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
787650     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
787651     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
787652    +
787653    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
787654    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
787654   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
787655    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
787656    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
787657    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
787658    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
787659    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
787660     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
787661     quit;
787662     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
787663     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
787664     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
787665     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
787666     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
787667     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787668     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
787669     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787670     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787671     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
787672     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787673     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787674     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787675     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
787676     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
787677     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787678     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
787679     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787680     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
787681     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787682     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787683     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787684     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
787685     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787686     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787687     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
787688     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
787688   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

787689     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787690     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
787691     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787692     filename _pref
787692   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
787693     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
787694     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
787695    +
787696    +
787697    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
787698    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
787699    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
787700    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
787701    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
787702    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787703    +
787704    +
787705    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
787706    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
787707    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
787708    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
787709    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
787710    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787711    +
787712    +
787713    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
787714    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
787715    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
787716    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
787717    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
787718    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787719    +
787720    +
787721    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
787722    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
787723    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
787724    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
787725    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
787726    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787727    +
787728    +
787729    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
787730    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
787731    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
787732    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
787733    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
787734    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787735    +
787736    +
787737    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
787738    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
787739    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
787740    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
787741    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
787742    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787743    +
787744    +
787745    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
787746    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
787747    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
787748    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
787749    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
787750    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787751    +
787752    +
787753    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
787754    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
787755    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
787756    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
787757    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
787758    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
787759    +if
787760    +_FILTERNORM1 not in ( '.')
787761    + and
787762    +_FILTERNORM2 not in ( '.')
787763    + and
787764    +_FILTERNORM3 not in ( '.')
787765    + and
787766    +_FILTERNORM4 not in ( '.')
787767    + and
787768    +_FILTERNORM5 not in ( '.')
787769    + and
787770    +_FILTERNORM6 not in ( '.')
787771    + and
787772    +_FILTERNORM7 not in ( ' ')
787773    + and
787774    +_FILTERNORM8 not in ( ' ')
787775    +and
787776    +( Dt_Customer ne .)
787777    +and ( Income ne . and (Income<=107000))
787778    +and ( Kidhome ne .)
787779    +and ( MntFishProducts ne .)
787780    +and ( MntFruits ne .)
787781    +and ( MntGoldProds ne .)
787782    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
787783    +and ( MntSweetProducts ne .)
787784    +and ( MntWines ne .)
787785    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
787786    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
787787    +and ( NumStorePurchases ne .)
787788    +and ( NumWebPurchases ne .)
787789    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
787790    +and ( Recency ne .)
787791    +and ( Teenhome ne .)
787792    +and ( Year_Birth ne .)
787793    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
787794    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
787795    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
787796    +end;
MPRINT(EM_DIAGRAM):   end;
787797    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
787798    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
787799     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
787800     quit;
787801     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
787802     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
787803     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
787804     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
787805     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
787806     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787807     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
787808     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787809     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787810     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
787811     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787812     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787813     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787814     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
787815     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
787816     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787817     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
787818     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

787819     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
787820     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787821     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787822     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
787823     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
787824     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
787825     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787826     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
787827     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
787827   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

787828     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787829     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
787830     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787831     %macro varDept(fcmpdata=,id=);
787832     %global nobs&id scoreFlag&id;
787833     %let scoreFlag&id = 0;
787834     %if &id=1 or ^&fcmpStart %then %do;
787835     proc sort data=&fcmpdata out=_temp&id nodupkey;
787836     by NAME;
787837     where id=&id and LHS in( %let j=1;
787838     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
787839     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
787840     "&var" %let j = %eval(&j+1);
787841     %end;
787842     );
787843     run;
787844     %let dsid = %sysfunc(open(_temp&id));
787845     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
787846     %let dsid = %sysfunc(close(&dsid));
787847     %if &&nobs&id %then %do;
787848     %let scoreFlag&id = 1;
787849     %let fcmpStart = 1;
787850     %end;
787851     %else %let fcmpStart = 0;
787852     %end;
787853     %else %do;
787854     proc sort data=&fcmpdata out=_tempid;
787855     where id=&id;
787856     by LHS;
787857     run;
787858     %let dsid = %sysfunc(open(_tempid));
787859     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
787860     %let dsid = %sysfunc(close(&dsid));
787861     %if ^&&nobs&id %then %do;
787862     proc datasets lib=work nolist;
787863     delete _tempid;
787864     run;
787865     quit;
787866     %end;
787867     %else %do;
787868     data _tempAll;
787869     set %let j=%eval(&id-1);
787870     %do x=1 %to &j;
787871     %if &&nobs&x %then %do;
787872     _temp&x %end;
787873     %end;
787874     ;
787875     run;
787876     proc sql;
787877     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
787877   ! work._tempid p2 where p.name=p2.lhs;
787878     quit;
787879     data _temp&id;
787880     set _temp&id;
787881     where LHS ne '' and NAME ne '' and Node ne '';
787882     run;
787883     proc datasets lib=work nolist;
787884     delete _tempAll;
787885     run;
787886     %let dsid = %sysfunc(open(_temp&id));
787887     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
787888     %let dsid = %sysfunc(close(&dsid));
787889     %if ^&&nobs&id %then %do;
787890     proc datasets lib=work nolist;
787891     delete _temp&id;
787892     run;
787893     quit;
787894     %end;
787895     %else %do;
787896     %let scoreFlag&id = 1;
787897     data _temp&id;
787898     set _temp&id;
787899     where LHS ne NAME and node ne '';
787900     run;
787901     %let dsid = %sysfunc(open(_temp&id));
787902     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
787903     %let dsid = %sysfunc(close(&dsid));
787904     %if ^&&nobs&id %then %do;
787905     proc datasets lib=work nolist;
787906     delete _temp&id;
787907     run;
787908     quit;
787909     %end;
787910     %else %do;
787911     proc sort data=_temp&id nodupkey;
787912     by LHS NAME;
787913     run;
787914     %end;
787915     %end;
787916     %end;
787917     %end;
787918     %mend varDept;
787919     %macro optCode(outdata=fcmpdata);
787920     %global fcmpStart;
787921     %let fcmpStart = 0;
787922     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
787923     %let NumNodes=9;
787924     %do k=1 %to &NumNodes;
787925     %vardept(fcmpdata=&outdata, id=&k);
787926     %end;
787927     %mend optCode;
787928     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

787929     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
787930     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
787931     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
787932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787933     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
787934     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
787935     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
787936     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787937     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
787938     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
787938   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

787939     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

787940     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
787941     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
787942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787943     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
787944     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
787945     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
787946     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787947     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
787948     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
787949     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
787950     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

787951     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
787952     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
787952   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

787953     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

787954     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
787955     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
787956     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

787957     filename _pref
787957   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
787958     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
787959     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas.
787960    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
787961    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
787962    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
787963    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
787964    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
787965    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
787966    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
787967    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
787968    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
787969    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
787970    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
787971    +LENGTH _WARN_ $4
787972    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
787973    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
787974    +
787975    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
787976    +
787977    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
787978    +
787979    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
787980    +
787981    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
787982    +
787983    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
787984    +
787985    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
787986    +
787987    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
787988    +
787989    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
787990    +
787991    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
787992    +
787993    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
787994    +
787995    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
787996    +
787997    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
787998    +
787999    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
788000    +
788001    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
788002    +
788003    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
788004    +
788005    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
788006    +
788007    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
788008    +
788009    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
788010    +
788011    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
788012    +
788013    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
788014    +
788015    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
788016    +
788017    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
788018    +
788019    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
788020    +
788021    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
788022    +
788023    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
788024    +
788025    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
788026    +
788027    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
788028    +
788029    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
788030    +
788031    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
788032    +
788033    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
788034    +
788035    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
788036    +
788037    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
788038    +
788039    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
788040    +
788041    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
788042    +
788043    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
788044    +
788045    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
788046    +
788047    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
788048    +
788049    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
788050    +
788051    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
788052    +
788053    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
788054    +
788055    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
788056    +
788057    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
788058    +
788059    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
788060    +
788061    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
788062    +
788063    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
788064    +
788065    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
788066    +
788067    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
788068    +
788069    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
788070    +
788071    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
788072    +
788073    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
788074    +
788075    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
788076    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
788077    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
788078    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
788079    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788080    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788081    +end;
MPRINT(EM_DIAGRAM):   end;
788082    +else do;
MPRINT(EM_DIAGRAM):   else do;
788083    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788084    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
788085    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788086    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
788087    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
788088    +   end;
MPRINT(EM_DIAGRAM):   end;
788089    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
788090    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
788091    +   end;
MPRINT(EM_DIAGRAM):   end;
788092    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788093    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
788094    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788095    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788096    +   end;
MPRINT(EM_DIAGRAM):   end;
788097    +end;
MPRINT(EM_DIAGRAM):   end;
788098    +
788099    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
788100    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
788101    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
788102    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
788103    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
788104    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
788105    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788106    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788107    +end;
MPRINT(EM_DIAGRAM):   end;
788108    +else do;
MPRINT(EM_DIAGRAM):   else do;
788109    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788110    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
788111    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788112    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
788113    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
788114    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
788115    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
788116    +   end;
MPRINT(EM_DIAGRAM):   end;
788117    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
788118    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
788119    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
788120    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
788121    +   end;
MPRINT(EM_DIAGRAM):   end;
788122    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788123    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
788124    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
788125    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
788126    +   end;
MPRINT(EM_DIAGRAM):   end;
788127    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788128    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
788129    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
788130    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
788131    +   end;
MPRINT(EM_DIAGRAM):   end;
788132    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788133    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
788134    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
788135    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
788136    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788137    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788138    +   end;
MPRINT(EM_DIAGRAM):   end;
788139    +end;
MPRINT(EM_DIAGRAM):   end;
788140    +
788141    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
788142    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
788143    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
788144    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
788145    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
788146    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
788147    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788148    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788149    +end;
MPRINT(EM_DIAGRAM):   end;
788150    +else do;
MPRINT(EM_DIAGRAM):   else do;
788151    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788152    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
788153    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788154    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
788155    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
788156    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
788157    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
788158    +   end;
MPRINT(EM_DIAGRAM):   end;
788159    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788160    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
788161    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
788162    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
788163    +   end;
MPRINT(EM_DIAGRAM):   end;
788164    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
788165    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
788166    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
788167    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
788168    +   end;
MPRINT(EM_DIAGRAM):   end;
788169    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788170    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
788171    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
788172    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
788173    +   end;
MPRINT(EM_DIAGRAM):   end;
788174    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788175    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
788176    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
788177    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
788178    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788179    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788180    +   end;
MPRINT(EM_DIAGRAM):   end;
788181    +end;
MPRINT(EM_DIAGRAM):   end;
788182    +
788183    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
788184    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
788185    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
788186    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
788187    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
788188    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
788189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788191    +end;
MPRINT(EM_DIAGRAM):   end;
788192    +else do;
MPRINT(EM_DIAGRAM):   else do;
788193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788194    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
788195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788196    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788197    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
788198    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
788199    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
788200    +   end;
MPRINT(EM_DIAGRAM):   end;
788201    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788202    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
788203    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
788204    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
788205    +   end;
MPRINT(EM_DIAGRAM):   end;
788206    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788207    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
788208    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
788209    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
788210    +   end;
MPRINT(EM_DIAGRAM):   end;
788211    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788212    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
788213    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
788214    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
788215    +   end;
MPRINT(EM_DIAGRAM):   end;
788216    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788217    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
788218    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
788219    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
788220    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788221    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788222    +   end;
MPRINT(EM_DIAGRAM):   end;
788223    +end;
MPRINT(EM_DIAGRAM):   end;
788224    +
788225    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
788226    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
788227    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
788228    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
788229    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
788230    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
788231    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788232    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788233    +end;
MPRINT(EM_DIAGRAM):   end;
788234    +else do;
MPRINT(EM_DIAGRAM):   else do;
788235    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788236    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
788237    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788238    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788239    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
788240    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
788241    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
788242    +   end;
MPRINT(EM_DIAGRAM):   end;
788243    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788244    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
788245    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
788246    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
788247    +   end;
MPRINT(EM_DIAGRAM):   end;
788248    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788249    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
788250    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
788251    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
788252    +   end;
MPRINT(EM_DIAGRAM):   end;
788253    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788254    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
788255    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
788256    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
788257    +   end;
MPRINT(EM_DIAGRAM):   end;
788258    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788259    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
788260    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
788261    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
788262    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788263    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788264    +   end;
MPRINT(EM_DIAGRAM):   end;
788265    +end;
MPRINT(EM_DIAGRAM):   end;
788266    +
788267    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
788268    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
788269    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
788270    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
788271    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
788272    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
788273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788275    +end;
MPRINT(EM_DIAGRAM):   end;
788276    +else do;
MPRINT(EM_DIAGRAM):   else do;
788277    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788278    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
788279    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788280    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788281    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
788282    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
788283    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
788284    +   end;
MPRINT(EM_DIAGRAM):   end;
788285    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788286    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
788287    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
788288    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
788289    +   end;
MPRINT(EM_DIAGRAM):   end;
788290    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788291    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
788292    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
788293    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
788294    +   end;
MPRINT(EM_DIAGRAM):   end;
788295    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788296    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
788297    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
788298    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
788299    +   end;
MPRINT(EM_DIAGRAM):   end;
788300    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788301    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
788302    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
788303    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
788304    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788305    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788306    +   end;
MPRINT(EM_DIAGRAM):   end;
788307    +end;
MPRINT(EM_DIAGRAM):   end;
788308    +
788309    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
788310    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
788311    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
788312    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
788313    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
788314    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
788315    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788316    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788317    +end;
MPRINT(EM_DIAGRAM):   end;
788318    +else do;
MPRINT(EM_DIAGRAM):   else do;
788319    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788320    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
788321    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788322    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788323    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
788324    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
788325    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
788326    +   end;
MPRINT(EM_DIAGRAM):   end;
788327    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788328    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
788329    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
788330    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
788331    +   end;
MPRINT(EM_DIAGRAM):   end;
788332    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788333    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
788334    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
788335    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
788336    +   end;
MPRINT(EM_DIAGRAM):   end;
788337    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788338    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
788339    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
788340    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
788341    +   end;
MPRINT(EM_DIAGRAM):   end;
788342    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788343    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
788344    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
788345    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
788346    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788347    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788348    +   end;
MPRINT(EM_DIAGRAM):   end;
788349    +end;
MPRINT(EM_DIAGRAM):   end;
788350    +
788351    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
788352    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
788353    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
788354    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
788355    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
788356    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
788357    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788358    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788359    +end;
MPRINT(EM_DIAGRAM):   end;
788360    +else do;
MPRINT(EM_DIAGRAM):   else do;
788361    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788362    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
788363    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788364    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788365    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
788366    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
788367    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
788368    +   end;
MPRINT(EM_DIAGRAM):   end;
788369    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788370    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
788371    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
788372    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
788373    +   end;
MPRINT(EM_DIAGRAM):   end;
788374    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788375    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
788376    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
788377    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
788378    +   end;
MPRINT(EM_DIAGRAM):   end;
788379    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788380    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
788381    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
788382    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
788383    +   end;
MPRINT(EM_DIAGRAM):   end;
788384    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788385    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
788386    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
788387    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
788388    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788389    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788390    +   end;
MPRINT(EM_DIAGRAM):   end;
788391    +end;
MPRINT(EM_DIAGRAM):   end;
788392    +
788393    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
788394    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
788395    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
788396    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
788397    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
788398    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788399    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788400    +end;
MPRINT(EM_DIAGRAM):   end;
788401    +else do;
MPRINT(EM_DIAGRAM):   else do;
788402    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788403    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
788404    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788405    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788406    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
788407    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
788408    +   end;
MPRINT(EM_DIAGRAM):   end;
788409    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788410    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
788411    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
788412    +   end;
MPRINT(EM_DIAGRAM):   end;
788413    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788414    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
788415    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
788416    +   end;
MPRINT(EM_DIAGRAM):   end;
788417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788418    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
788419    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
788420    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788421    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788422    +   end;
MPRINT(EM_DIAGRAM):   end;
788423    +end;
MPRINT(EM_DIAGRAM):   end;
788424    +
788425    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
788426    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
788427    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
788428    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
788429    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
788430    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
788431    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788432    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788433    +end;
MPRINT(EM_DIAGRAM):   end;
788434    +else do;
MPRINT(EM_DIAGRAM):   else do;
788435    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788436    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
788437    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788438    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
788439    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
788440    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
788441    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
788442    +   end;
MPRINT(EM_DIAGRAM):   end;
788443    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788444    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
788445    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
788446    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
788447    +   end;
MPRINT(EM_DIAGRAM):   end;
788448    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788449    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
788450    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
788451    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
788452    +   end;
MPRINT(EM_DIAGRAM):   end;
788453    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
788454    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
788455    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
788456    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
788457    +   end;
MPRINT(EM_DIAGRAM):   end;
788458    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788459    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
788460    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
788461    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
788462    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788463    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788464    +   end;
MPRINT(EM_DIAGRAM):   end;
788465    +end;
MPRINT(EM_DIAGRAM):   end;
788466    +
788467    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
788468    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
788469    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
788470    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
788471    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
788472    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
788473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788475    +end;
MPRINT(EM_DIAGRAM):   end;
788476    +else do;
MPRINT(EM_DIAGRAM):   else do;
788477    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788478    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
788479    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788480    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788481    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
788482    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
788483    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
788484    +   end;
MPRINT(EM_DIAGRAM):   end;
788485    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788486    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
788487    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
788488    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
788489    +   end;
MPRINT(EM_DIAGRAM):   end;
788490    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788491    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
788492    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
788493    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
788494    +   end;
MPRINT(EM_DIAGRAM):   end;
788495    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788496    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
788497    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
788498    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
788499    +   end;
MPRINT(EM_DIAGRAM):   end;
788500    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788501    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
788502    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
788503    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
788504    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788505    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788506    +   end;
MPRINT(EM_DIAGRAM):   end;
788507    +end;
MPRINT(EM_DIAGRAM):   end;
788508    +
788509    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
788510    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
788511    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
788512    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
788513    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
788514    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
788515    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788517    +end;
MPRINT(EM_DIAGRAM):   end;
788518    +else do;
MPRINT(EM_DIAGRAM):   else do;
788519    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788520    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
788521    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788522    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
788523    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
788524    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
788525    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
788526    +   end;
MPRINT(EM_DIAGRAM):   end;
788527    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
788528    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
788529    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
788530    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
788531    +   end;
MPRINT(EM_DIAGRAM):   end;
788532    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788533    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
788534    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
788535    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
788536    +   end;
MPRINT(EM_DIAGRAM):   end;
788537    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788538    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
788539    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
788540    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
788541    +   end;
MPRINT(EM_DIAGRAM):   end;
788542    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788543    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
788544    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
788545    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
788546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788548    +   end;
MPRINT(EM_DIAGRAM):   end;
788549    +end;
MPRINT(EM_DIAGRAM):   end;
788550    +
788551    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
788552    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
788553    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
788554    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
788555    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
788556    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
788557    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788558    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788559    +end;
MPRINT(EM_DIAGRAM):   end;
788560    +else do;
MPRINT(EM_DIAGRAM):   else do;
788561    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788562    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
788563    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788564    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
788565    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
788566    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
788567    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
788568    +   end;
MPRINT(EM_DIAGRAM):   end;
788569    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
788570    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
788571    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
788572    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
788573    +   end;
MPRINT(EM_DIAGRAM):   end;
788574    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788575    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
788576    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
788577    +      GRP_RMntFrq4 = 1;
The SAS System

MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
788578    +   end;
MPRINT(EM_DIAGRAM):   end;
788579    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788580    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
788581    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
788582    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
788583    +   end;
MPRINT(EM_DIAGRAM):   end;
788584    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788585    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
788586    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
788587    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
788588    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788589    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788590    +   end;
MPRINT(EM_DIAGRAM):   end;
788591    +end;
MPRINT(EM_DIAGRAM):   end;
788592    +
788593    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
788594    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
788595    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
788596    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
788597    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
788598    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
788599    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
788600    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788601    +end;
MPRINT(EM_DIAGRAM):   end;
788602    +else do;
MPRINT(EM_DIAGRAM):   else do;
788603    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
788604    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
788605    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
788606    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
788607    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
788608    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
788609    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
788610    +   end;
MPRINT(EM_DIAGRAM):   end;
788611    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
788612    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
788613    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
788614    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
788615    +   end;
MPRINT(EM_DIAGRAM):   end;
788616    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
788617    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
788618    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
788619    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
788620    +   end;
MPRINT(EM_DIAGRAM):   end;
788621    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
788622    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
788623    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
788624    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
788625    +   end;
MPRINT(EM_DIAGRAM):   end;
788626    +   else do;
MPRINT(EM_DIAGRAM):   else do;
788627    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
788628    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
788629    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
788630    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
788631    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
788632    +   end;
MPRINT(EM_DIAGRAM):   end;
788633    +end;
MPRINT(EM_DIAGRAM):   end;
788634    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788635    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
788636    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788637    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788638    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
788639    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788640    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
788641    +   H11  =     0.04711628818085 * GRP_AcceptedCmp52  +    -0.13027365748107 *
788642    +        GRP_Frq2  +    -0.04632677563882 * GRP_Frq3  +    -0.08320341313947 *
788643    +        GRP_Frq4  +     0.15407011801643 * GRP_Income2
788644    +          +    -0.10383560943317 * GRP_Income3  +    -0.40582360882321 *
788645    +        GRP_Income4  +    -0.00866872751194 * GRP_Mnt2
788646    +          +     0.03835423241766 * GRP_Mnt3  +     0.10111653307734 * GRP_Mnt4
788647    +          +     0.27649544705807 * GRP_MntFishProducts2
788648    +          +     0.03806617200527 * GRP_MntFishProducts3
788649    +          +    -0.14924458232763 * GRP_MntFishProducts4
788650    +          +    -0.61470593668196 * GRP_MntGoldProds2
788651    +          +      0.3229990608995 * GRP_MntGoldProds3
788652    +          +    -0.38604519701302 * GRP_MntGoldProds4
788653    +          +    -0.16788745104812 * GRP_MntMeatProducts2
788654    +          +    -0.02411102582134 * GRP_MntMeatProducts3
788655    +          +     0.20999119459991 * GRP_MntMeatProducts4
788656    +          +     0.00013023256115 * GRP_MntWines2  +    -0.19154805414183 *
788657    +        GRP_MntWines3  +     0.10487287927665 * GRP_MntWines4
788658    +          +    -0.18385399575632 * GRP_NumCatalogPurchases3
788659    +          +     0.26139870297501 * GRP_NumCatalogPurchases4
788660    +          +    -0.45516424216634 * GRP_NumDistPurchases2
788661    +          +    -0.02821228922166 * GRP_NumDistPurchases3
788662    +          +     -0.0277463007541 * GRP_NumDistPurchases4
788663    +          +    -0.20089085216463 * GRP_NumWebPurchases2
788664    +          +     0.25653821989992 * GRP_NumWebPurchases3
788665    +          +    -0.28787845842774 * GRP_NumWebPurchases4
788666    +          +    -0.55935702240721 * GRP_RFMstat2  +     0.06115264011229 *
788667    +        GRP_RFMstat3  +     0.23395576453228 * GRP_RFMstat4
788668    +          +     0.14575536355828 * GRP_RMntFrq2  +    -0.17534689953321 *
788669    +        GRP_RMntFrq3  +     0.02136609987453 * GRP_RMntFrq4
788670    +          +       0.198287170399 * GRP_Recency2  +     0.20837384647001 *
788671    +        GRP_Recency3  +    -0.03491976754069 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.04711628818085 * GRP_AcceptedCmp52 + -0.13027365748107 * 
GRP_Frq2 + -0.04632677563882 * GRP_Frq3 + -0.08320341313947 * GRP_Frq4 + 0.15407011801643 * 
GRP_Income2 + -0.10383560943317 * GRP_Income3 + -0.40582360882321 * GRP_Income4 + 
-0.00866872751194 * GRP_Mnt2 + 0.03835423241766 * GRP_Mnt3 + 0.10111653307734 * GRP_Mnt4 + 
0.27649544705807 * GRP_MntFishProducts2 + 0.03806617200527 * GRP_MntFishProducts3 + 
-0.14924458232763 * GRP_MntFishProducts4 + -0.61470593668196 * GRP_MntGoldProds2 + 
0.3229990608995 * GRP_MntGoldProds3 + -0.38604519701302 * GRP_MntGoldProds4 + 
-0.16788745104812 * GRP_MntMeatProducts2 + -0.02411102582134 * GRP_MntMeatProducts3 + 
0.20999119459991 * GRP_MntMeatProducts4 + 0.00013023256115 * GRP_MntWines2 + -0.19154805414183 
* GRP_MntWines3 + 0.10487287927665 * GRP_MntWines4 + -0.18385399575632 * 
GRP_NumCatalogPurchases3 + 0.26139870297501 * GRP_NumCatalogPurchases4 + -0.45516424216634 * 
GRP_NumDistPurchases2 + -0.02821228922166 * GRP_NumDistPurchases3 + -0.0277463007541 * 
GRP_NumDistPurchases4 + -0.20089085216463 * GRP_NumWebPurchases2 + 0.25653821989992 * 
GRP_NumWebPurchases3 + -0.28787845842774 * GRP_NumWebPurchases4 + -0.55935702240721 * 
GRP_RFMstat2 + 0.06115264011229 * GRP_RFMstat3 + 0.23395576453228 * GRP_RFMstat4 + 
0.14575536355828 * GRP_RMntFrq2 + -0.17534689953321 * GRP_RMntFrq3 + 0.02136609987453 * 
GRP_RMntFrq4 + 0.198287170399 * GRP_Recency2 + 0.20837384647001 * GRP_Recency3 + 
-0.03491976754069 * GRP_Recency4 ;
788672    +   H12  =     0.27125178346152 * GRP_AcceptedCmp52  +     0.39367144184074 *
788673    +        GRP_Frq2  +     0.47183329287273 * GRP_Frq3  +     0.06075107930837 *
788674    +        GRP_Frq4  +     0.77794746315957 * GRP_Income2
788675    +          +     0.86453663986099 * GRP_Income3  +    -0.24014105964843 *
788676    +        GRP_Income4  +     0.18332391092776 * GRP_Mnt2
788677    +          +    -0.05132712807258 * GRP_Mnt3  +    -0.12150106989075 * GRP_Mnt4
788678    +          +     0.37088160406221 * GRP_MntFishProducts2
788679    +          +     0.16511263167544 * GRP_MntFishProducts3
788680    +          +    -0.25696902575665 * GRP_MntFishProducts4
788681    +          +    -0.25511966497767 * GRP_MntGoldProds2
788682    +          +     0.10357155941955 * GRP_MntGoldProds3
788683    +          +    -0.04921872016349 * GRP_MntGoldProds4
788684    +          +    -0.11063359070508 * GRP_MntMeatProducts2
788685    +          +    -0.08379163747059 * GRP_MntMeatProducts3
788686    +          +     0.18893182644469 * GRP_MntMeatProducts4
788687    +          +     0.41618237258351 * GRP_MntWines2  +    -0.00683285266538 *
788688    +        GRP_MntWines3  +    -0.12347598430406 * GRP_MntWines4
788689    +          +    -0.28043452635336 * GRP_NumCatalogPurchases3
788690    +          +     0.19010019257459 * GRP_NumCatalogPurchases4
788691    +          +    -0.29362124038326 * GRP_NumDistPurchases2
788692    +          +    -0.03304017306295 * GRP_NumDistPurchases3
788693    +          +    -0.11165609534026 * GRP_NumDistPurchases4
788694    +          +      0.1536111955491 * GRP_NumWebPurchases2
788695    +          +     0.14856361677069 * GRP_NumWebPurchases3
788696    +          +      0.0385282170017 * GRP_NumWebPurchases4
788697    +          +    -0.42245587008719 * GRP_RFMstat2  +     0.15962543914936 *
788698    +        GRP_RFMstat3  +    -0.39342058803069 * GRP_RFMstat4
788699    +          +    -0.28590254800789 * GRP_RMntFrq2  +    -0.21564130946407 *
788700    +        GRP_RMntFrq3  +    -0.22044591524393 * GRP_RMntFrq4
788701    +          +      1.1127849486131 * GRP_Recency2  +     0.37451568388848 *
788702    +        GRP_Recency3  +    -0.33640572843758 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = 0.27125178346152 * GRP_AcceptedCmp52 + 0.39367144184074 * GRP_Frq2 
+ 0.47183329287273 * GRP_Frq3 + 0.06075107930837 * GRP_Frq4 + 0.77794746315957 * GRP_Income2 + 
0.86453663986099 * GRP_Income3 + -0.24014105964843 * GRP_Income4 + 0.18332391092776 * GRP_Mnt2 
+ -0.05132712807258 * GRP_Mnt3 + -0.12150106989075 * GRP_Mnt4 + 0.37088160406221 * 
GRP_MntFishProducts2 + 0.16511263167544 * GRP_MntFishProducts3 + -0.25696902575665 * 
GRP_MntFishProducts4 + -0.25511966497767 * GRP_MntGoldProds2 + 0.10357155941955 * 
GRP_MntGoldProds3 + -0.04921872016349 * GRP_MntGoldProds4 + -0.11063359070508 * 
GRP_MntMeatProducts2 + -0.08379163747059 * GRP_MntMeatProducts3 + 0.18893182644469 * 
GRP_MntMeatProducts4 + 0.41618237258351 * GRP_MntWines2 + -0.00683285266538 * GRP_MntWines3 + 
-0.12347598430406 * GRP_MntWines4 + -0.28043452635336 * GRP_NumCatalogPurchases3 + 
0.19010019257459 * GRP_NumCatalogPurchases4 + -0.29362124038326 * GRP_NumDistPurchases2 + 
-0.03304017306295 * GRP_NumDistPurchases3 + -0.11165609534026 * GRP_NumDistPurchases4 + 
0.1536111955491 * GRP_NumWebPurchases2 + 0.14856361677069 * GRP_NumWebPurchases3 + 
0.0385282170017 * GRP_NumWebPurchases4 + -0.42245587008719 * GRP_RFMstat2 + 0.15962543914936 * 
GRP_RFMstat3 + -0.39342058803069 * GRP_RFMstat4 + -0.28590254800789 * GRP_RMntFrq2 + 
-0.21564130946407 * GRP_RMntFrq3 + -0.22044591524393 * GRP_RMntFrq4 + 1.1127849486131 * 
GRP_Recency2 + 0.37451568388848 * GRP_Recency3 + -0.33640572843758 * GRP_Recency4 ;
788703    +   H13  =    -0.00640066603747 * GRP_AcceptedCmp52  +    -0.11333647417979 *
788704    +        GRP_Frq2  +    -0.11647952262542 * GRP_Frq3  +    -0.14006488881524 *
788705    +        GRP_Frq4  +     0.27728124026233 * GRP_Income2
788706    +          +     0.05697521068764 * GRP_Income3  +    -0.37633026358792 *
788707    +        GRP_Income4  +    -0.17440692689662 * GRP_Mnt2
788708    +          +    -0.10036881667196 * GRP_Mnt3  +    -0.13642140412399 * GRP_Mnt4
788709    +          +      0.2081380258467 * GRP_MntFishProducts2
788710    +          +    -0.08668229639505 * GRP_MntFishProducts3
788711    +          +     0.14081019578955 * GRP_MntFishProducts4
788712    +          +    -0.17027561298255 * GRP_MntGoldProds2
788713    +          +    -0.34742776244059 * GRP_MntGoldProds3
788714    +          +     0.12168590176726 * GRP_MntGoldProds4
788715    +          +    -0.05512121591373 * GRP_MntMeatProducts2
788716    +          +    -0.34519642935258 * GRP_MntMeatProducts3
788717    +          +    -0.13168847945689 * GRP_MntMeatProducts4
788718    +          +     0.28193282372353 * GRP_MntWines2  +     0.14946457186192 *
788719    +        GRP_MntWines3  +     0.06804391722409 * GRP_MntWines4
788720    +          +    -0.08346399909028 * GRP_NumCatalogPurchases3
788721    +          +    -0.15880621701951 * GRP_NumCatalogPurchases4
788722    +          +    -0.25528445685452 * GRP_NumDistPurchases2
788723    +          +    -0.10526630829598 * GRP_NumDistPurchases3
788724    +          +    -0.03726952062424 * GRP_NumDistPurchases4
788725    +          +    -0.05938919871449 * GRP_NumWebPurchases2
788726    +          +     0.18366019558751 * GRP_NumWebPurchases3
788727    +          +    -0.19335960904254 * GRP_NumWebPurchases4
788728    +          +     0.15283900648967 * GRP_RFMstat2  +    -0.03738648354517 *
788729    +        GRP_RFMstat3  +      0.0780054343538 * GRP_RFMstat4
788730    +          +     0.08482465227003 * GRP_RMntFrq2  +    -0.04156217601701 *
788731    +        GRP_RMntFrq3  +    -0.27972469674532 * GRP_RMntFrq4
788732    +          +     0.20311018978803 * GRP_Recency2  +     0.02026894035212 *
788733    +        GRP_Recency3  +    -0.22461335805045 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = -0.00640066603747 * GRP_AcceptedCmp52 + -0.11333647417979 * 
GRP_Frq2 + -0.11647952262542 * GRP_Frq3 + -0.14006488881524 * GRP_Frq4 + 0.27728124026233 * 
GRP_Income2 + 0.05697521068764 * GRP_Income3 + -0.37633026358792 * GRP_Income4 + 
-0.17440692689662 * GRP_Mnt2 + -0.10036881667196 * GRP_Mnt3 + -0.13642140412399 * GRP_Mnt4 + 
0.2081380258467 * GRP_MntFishProducts2 + -0.08668229639505 * GRP_MntFishProducts3 + 
0.14081019578955 * GRP_MntFishProducts4 + -0.17027561298255 * GRP_MntGoldProds2 + 
-0.34742776244059 * GRP_MntGoldProds3 + 0.12168590176726 * GRP_MntGoldProds4 + 
-0.05512121591373 * GRP_MntMeatProducts2 + -0.34519642935258 * GRP_MntMeatProducts3 + 
-0.13168847945689 * GRP_MntMeatProducts4 + 0.28193282372353 * GRP_MntWines2 + 0.14946457186192 
* GRP_MntWines3 + 0.06804391722409 * GRP_MntWines4 + -0.08346399909028 * 
GRP_NumCatalogPurchases3 + -0.15880621701951 * GRP_NumCatalogPurchases4 + -0.25528445685452 * 
GRP_NumDistPurchases2 + -0.10526630829598 * GRP_NumDistPurchases3 + -0.03726952062424 * 
GRP_NumDistPurchases4 + -0.05938919871449 * GRP_NumWebPurchases2 + 0.18366019558751 * 
GRP_NumWebPurchases3 + -0.19335960904254 * GRP_NumWebPurchases4 + 0.15283900648967 * 
GRP_RFMstat2 + -0.03738648354517 * GRP_RFMstat3 + 0.0780054343538 * GRP_RFMstat4 + 
0.08482465227003 * GRP_RMntFrq2 + -0.04156217601701 * GRP_RMntFrq3 + -0.27972469674532 * 
GRP_RMntFrq4 + 0.20311018978803 * GRP_Recency2 + 0.02026894035212 * GRP_Recency3 + 
-0.22461335805045 * GRP_Recency4 ;
788734    +   H14  =     0.84759844370999 * GRP_AcceptedCmp52  +    -0.40207108050785 *
788735    +        GRP_Frq2  +    -0.11957926267486 * GRP_Frq3  +     0.39764041522616 *
788736    +        GRP_Frq4  +    -0.21133467357887 * GRP_Income2
788737    +          +    -0.37600727819569 * GRP_Income3  +     0.61191321060217 *
788738    +        GRP_Income4  +    -0.01918945699115 * GRP_Mnt2
788739    +          +    -0.28923187120656 * GRP_Mnt3  +     0.20590552102477 * GRP_Mnt4
788740    +          +     0.03194734131194 * GRP_MntFishProducts2
788741    +          +    -0.08555244396388 * GRP_MntFishProducts3
788742    +          +     -0.1294949057865 * GRP_MntFishProducts4
788743    +          +    -0.28742848639985 * GRP_MntGoldProds2
788744    +          +    -0.00435260781733 * GRP_MntGoldProds3
788745    +          +    -0.12007613875856 * GRP_MntGoldProds4
788746    +          +     0.36325039255643 * GRP_MntMeatProducts2
788747    +          +    -0.08728922471846 * GRP_MntMeatProducts3
788748    +          +    -0.19062123750322 * GRP_MntMeatProducts4
788749    +          +    -0.54694203087226 * GRP_MntWines2  +    -0.63189775838668 *
788750    +        GRP_MntWines3  +      0.3957291463714 * GRP_MntWines4
788751    +          +       0.435944756052 * GRP_NumCatalogPurchases3
788752    +          +      0.2205855993165 * GRP_NumCatalogPurchases4
788753    +          +     0.59192262496927 * GRP_NumDistPurchases2
788754    +          +     0.04008128670209 * GRP_NumDistPurchases3
788755    +          +    -0.00330725734446 * GRP_NumDistPurchases4
788756    +          +     0.18235346155154 * GRP_NumWebPurchases2
788757    +          +     0.06863306934707 * GRP_NumWebPurchases3
788758    +          +     0.06339667504979 * GRP_NumWebPurchases4
788759    +          +     0.09545179117637 * GRP_RFMstat2  +     0.14008923310046 *
788760    +        GRP_RFMstat3  +    -0.26191188327872 * GRP_RFMstat4
788761    +          +    -0.21341781402946 * GRP_RMntFrq2  +    -0.16158721892261 *
788762    +        GRP_RMntFrq3  +    -0.03125612925483 * GRP_RMntFrq4
788763    +          +    -0.57136536034562 * GRP_Recency2  +    -0.28843025104868 *
788764    +        GRP_Recency3  +     0.23682927566038 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = 0.84759844370999 * GRP_AcceptedCmp52 + -0.40207108050785 * 
GRP_Frq2 + -0.11957926267486 * GRP_Frq3 + 0.39764041522616 * GRP_Frq4 + -0.21133467357887 * 
GRP_Income2 + -0.37600727819569 * GRP_Income3 + 0.61191321060217 * GRP_Income4 + 
-0.01918945699115 * GRP_Mnt2 + -0.28923187120656 * GRP_Mnt3 + 0.20590552102477 * GRP_Mnt4 + 
0.03194734131194 * GRP_MntFishProducts2 + -0.08555244396388 * GRP_MntFishProducts3 + 
-0.1294949057865 * GRP_MntFishProducts4 + -0.28742848639985 * GRP_MntGoldProds2 + 
-0.00435260781733 * GRP_MntGoldProds3 + -0.12007613875856 * GRP_MntGoldProds4 + 
0.36325039255643 * GRP_MntMeatProducts2 + -0.08728922471846 * GRP_MntMeatProducts3 + 
-0.19062123750322 * GRP_MntMeatProducts4 + -0.54694203087226 * GRP_MntWines2 + 
-0.63189775838668 * GRP_MntWines3 + 0.3957291463714 * GRP_MntWines4 + 0.435944756052 * 
GRP_NumCatalogPurchases3 + 0.2205855993165 * GRP_NumCatalogPurchases4 + 0.59192262496927 * 
GRP_NumDistPurchases2 + 0.04008128670209 * GRP_NumDistPurchases3 + -0.00330725734446 * 
GRP_NumDistPurchases4 + 0.18235346155154 * GRP_NumWebPurchases2 + 0.06863306934707 * 
GRP_NumWebPurchases3 + 0.06339667504979 * GRP_NumWebPurchases4 + 0.09545179117637 * 
GRP_RFMstat2 + 0.14008923310046 * GRP_RFMstat3 + -0.26191188327872 * GRP_RFMstat4 + 
-0.21341781402946 * GRP_RMntFrq2 + -0.16158721892261 * GRP_RMntFrq3 + -0.03125612925483 * 
GRP_RMntFrq4 + -0.57136536034562 * GRP_Recency2 + -0.28843025104868 * GRP_Recency3 + 
0.23682927566038 * GRP_Recency4 ;
788765    +   H15  =      -0.270075163047 * GRP_AcceptedCmp52  +     0.12329750151184 *
788766    +        GRP_Frq2  +    -0.00636074237745 * GRP_Frq3  +     0.06125360704983 *
788767    +        GRP_Frq4  +    -0.02221726738608 * GRP_Income2
788768    +          +     0.02831089386274 * GRP_Income3  +    -0.14245161962732 *
788769    +        GRP_Income4  +    -0.33215929968734 * GRP_Mnt2
788770    +          +    -0.12990224977804 * GRP_Mnt3  +     0.01224047316232 * GRP_Mnt4
788771    +          +     0.43021866757807 * GRP_MntFishProducts2
788772    +          +    -0.27483945374498 * GRP_MntFishProducts3
788773    +          +     0.35053639451726 * GRP_MntFishProducts4
788774    +          +    -0.00509900753344 * GRP_MntGoldProds2
788775    +          +     -0.2114201518265 * GRP_MntGoldProds3
788776    +          +    -0.13970354632794 * GRP_MntGoldProds4
788777    +          +     0.08840789662233 * GRP_MntMeatProducts2
788778    +          +    -0.00365357432837 * GRP_MntMeatProducts3
788779    +          +    -0.17124615615804 * GRP_MntMeatProducts4
788780    +          +     -0.3149461311814 * GRP_MntWines2  +     0.13173264925134 *
788781    +        GRP_MntWines3  +    -0.11604679382146 * GRP_MntWines4
788782    +          +     -0.5316533346484 * GRP_NumCatalogPurchases3
788783    +          +    -0.29157679545376 * GRP_NumCatalogPurchases4
788784    +          +    -0.08055861305066 * GRP_NumDistPurchases2
788785    +          +    -0.08674081531395 * GRP_NumDistPurchases3
788786    +          +    -0.17551921835199 * GRP_NumDistPurchases4
788787    +          +    -0.03222539166367 * GRP_NumWebPurchases2
788788    +          +    -0.13811302108485 * GRP_NumWebPurchases3
788789    +          +     0.06646439445075 * GRP_NumWebPurchases4
788790    +          +    -0.07079122602276 * GRP_RFMstat2  +    -0.39615424117539 *
788791    +        GRP_RFMstat3  +     0.04146636703929 * GRP_RFMstat4
788792    +          +     -0.0853308883886 * GRP_RMntFrq2  +    -0.13702404280363 *
788793    +        GRP_RMntFrq3  +    -0.27355720177265 * GRP_RMntFrq4
788794    +          +     0.33867777321903 * GRP_Recency2  +    -0.09253457902218 *
788795    +        GRP_Recency3  +    -0.05897210090797 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = -0.270075163047 * GRP_AcceptedCmp52 + 0.12329750151184 * GRP_Frq2 
+ -0.00636074237745 * GRP_Frq3 + 0.06125360704983 * GRP_Frq4 + -0.02221726738608 * GRP_Income2 
+ 0.02831089386274 * GRP_Income3 + -0.14245161962732 * GRP_Income4 + -0.33215929968734 * 
GRP_Mnt2 + -0.12990224977804 * GRP_Mnt3 + 0.01224047316232 * GRP_Mnt4 + 0.43021866757807 * 
GRP_MntFishProducts2 + -0.27483945374498 * GRP_MntFishProducts3 + 0.35053639451726 * 
GRP_MntFishProducts4 + -0.00509900753344 * GRP_MntGoldProds2 + -0.2114201518265 * 
GRP_MntGoldProds3 + -0.13970354632794 * GRP_MntGoldProds4 + 0.08840789662233 * 
GRP_MntMeatProducts2 + -0.00365357432837 * GRP_MntMeatProducts3 + -0.17124615615804 * 
GRP_MntMeatProducts4 + -0.3149461311814 * GRP_MntWines2 + 0.13173264925134 * GRP_MntWines3 + 
-0.11604679382146 * GRP_MntWines4 + -0.5316533346484 * GRP_NumCatalogPurchases3 + 
-0.29157679545376 * GRP_NumCatalogPurchases4 + -0.08055861305066 * GRP_NumDistPurchases2 + 
-0.08674081531395 * GRP_NumDistPurchases3 + -0.17551921835199 * GRP_NumDistPurchases4 + 
-0.03222539166367 * GRP_NumWebPurchases2 + -0.13811302108485 * GRP_NumWebPurchases3 + 
0.06646439445075 * GRP_NumWebPurchases4 + -0.07079122602276 * GRP_RFMstat2 + -0.39615424117539 
* GRP_RFMstat3 + 0.04146636703929 * GRP_RFMstat4 + -0.0853308883886 * GRP_RMntFrq2 + 
-0.13702404280363 * GRP_RMntFrq3 + -0.27355720177265 * GRP_RMntFrq4 + 0.33867777321903 * 
GRP_Recency2 + -0.09253457902218 * GRP_Recency3 + -0.05897210090797 * GRP_Recency4 ;
788796    +   H16  =    -0.30271284676983 * GRP_AcceptedCmp52  +     0.03117199224725 *
788797    +        GRP_Frq2  +    -0.26799382098604 * GRP_Frq3  +    -0.13070336759958 *
788798    +        GRP_Frq4  +     0.12672160649087 * GRP_Income2
788799    +          +    -0.21150829323326 * GRP_Income3  +    -0.15720750294685 *
788800    +        GRP_Income4  +     0.09905728950306 * GRP_Mnt2
788801    +          +    -0.43923284882193 * GRP_Mnt3  +     0.03431635930451 * GRP_Mnt4
788802    +          +     0.06947673564935 * GRP_MntFishProducts2
788803    +          +     -0.2220161944842 * GRP_MntFishProducts3
788804    +          +      -0.115965454808 * GRP_MntFishProducts4
788805    +          +    -0.01957355844265 * GRP_MntGoldProds2
788806    +          +     0.29129268161925 * GRP_MntGoldProds3
788807    +          +     0.06228256145252 * GRP_MntGoldProds4
788808    +          +    -0.09695386874195 * GRP_MntMeatProducts2
788809    +          +    -0.15864685727366 * GRP_MntMeatProducts3
788810    +          +    -0.49032797729016 * GRP_MntMeatProducts4
788811    +          +     0.37470089287985 * GRP_MntWines2  +     0.36115743239288 *
788812    +        GRP_MntWines3  +    -0.34359138002961 * GRP_MntWines4
788813    +          +    -0.19461285131827 * GRP_NumCatalogPurchases3
788814    +          +     0.04513674368784 * GRP_NumCatalogPurchases4
788815    +          +    -0.03507865895925 * GRP_NumDistPurchases2
788816    +          +     0.09915485245283 * GRP_NumDistPurchases3
788817    +          +    -0.33100664342194 * GRP_NumDistPurchases4
788818    +          +     0.13724527126482 * GRP_NumWebPurchases2
788819    +          +    -0.02356592443136 * GRP_NumWebPurchases3
788820    +          +      0.2573229592217 * GRP_NumWebPurchases4
788821    +          +     0.05747809528111 * GRP_RFMstat2  +     0.09535983705402 *
788822    +        GRP_RFMstat3  +    -0.10249907985488 * GRP_RFMstat4
788823    +          +     0.08979004612339 * GRP_RMntFrq2  +     0.21152228987437 *
788824    +        GRP_RMntFrq3  +     0.01345639991803 * GRP_RMntFrq4
788825    +          +     0.52890036744064 * GRP_Recency2  +    -0.04507648861408 *
788826    +        GRP_Recency3  +    -0.03669931738284 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = -0.30271284676983 * GRP_AcceptedCmp52 + 0.03117199224725 * 
GRP_Frq2 + -0.26799382098604 * GRP_Frq3 + -0.13070336759958 * GRP_Frq4 + 0.12672160649087 * 
GRP_Income2 + -0.21150829323326 * GRP_Income3 + -0.15720750294685 * GRP_Income4 + 
0.09905728950306 * GRP_Mnt2 + -0.43923284882193 * GRP_Mnt3 + 0.03431635930451 * GRP_Mnt4 + 
0.06947673564935 * GRP_MntFishProducts2 + -0.2220161944842 * GRP_MntFishProducts3 + 
-0.115965454808 * GRP_MntFishProducts4 + -0.01957355844265 * GRP_MntGoldProds2 + 
0.29129268161925 * GRP_MntGoldProds3 + 0.06228256145252 * GRP_MntGoldProds4 + 
-0.09695386874195 * GRP_MntMeatProducts2 + -0.15864685727366 * GRP_MntMeatProducts3 + 
-0.49032797729016 * GRP_MntMeatProducts4 + 0.37470089287985 * GRP_MntWines2 + 0.36115743239288 
* GRP_MntWines3 + -0.34359138002961 * GRP_MntWines4 + -0.19461285131827 * 
GRP_NumCatalogPurchases3 + 0.04513674368784 * GRP_NumCatalogPurchases4 + -0.03507865895925 * 
GRP_NumDistPurchases2 + 0.09915485245283 * GRP_NumDistPurchases3 + -0.33100664342194 * 
GRP_NumDistPurchases4 + 0.13724527126482 * GRP_NumWebPurchases2 + -0.02356592443136 * 
GRP_NumWebPurchases3 + 0.2573229592217 * GRP_NumWebPurchases4 + 0.05747809528111 * 
GRP_RFMstat2 + 0.09535983705402 * GRP_RFMstat3 + -0.10249907985488 * GRP_RFMstat4 + 
0.08979004612339 * GRP_RMntFrq2 + 0.21152228987437 * GRP_RMntFrq3 + 0.01345639991803 * 
GRP_RMntFrq4 + 0.52890036744064 * GRP_Recency2 + -0.04507648861408 * GRP_Recency3 + 
-0.03669931738284 * GRP_Recency4 ;
788827    +   H17  =    -0.24394616675587 * GRP_AcceptedCmp52  +     0.28964856194613 *
788828    +        GRP_Frq2  +    -0.08289613695725 * GRP_Frq3  +     0.21998897095553 *
788829    +        GRP_Frq4  +     0.18107497199311 * GRP_Income2
788830    +          +      0.1107558510921 * GRP_Income3  +    -0.36116869826735 *
788831    +        GRP_Income4  +     0.02424010270897 * GRP_Mnt2
788832    +          +    -0.15852275336702 * GRP_Mnt3  +    -0.35418266455505 * GRP_Mnt4
788833    +          +     0.20869043565167 * GRP_MntFishProducts2
788834    +          +     0.10833559681607 * GRP_MntFishProducts3
788835    +          +    -0.10347776442631 * GRP_MntFishProducts4
788836    +          +    -0.32065428276511 * GRP_MntGoldProds2
788837    +          +    -0.43926899233496 * GRP_MntGoldProds3
788838    +          +    -0.10606506374615 * GRP_MntGoldProds4
788839    +          +    -0.31984276315874 * GRP_MntMeatProducts2
788840    +          +    -0.10334364706061 * GRP_MntMeatProducts3
788841    +          +    -0.00884354140504 * GRP_MntMeatProducts4
788842    +          +     0.23600639890053 * GRP_MntWines2  +    -0.29934386684584 *
788843    +        GRP_MntWines3  +     0.16274179248724 * GRP_MntWines4
788844    +          +    -0.32950762391869 * GRP_NumCatalogPurchases3
788845    +          +     0.01712392556947 * GRP_NumCatalogPurchases4
788846    +          +    -0.34220067420996 * GRP_NumDistPurchases2
788847    +          +    -0.15410597036596 * GRP_NumDistPurchases3
788848    +          +    -0.05769918195545 * GRP_NumDistPurchases4
788849    +          +    -0.03929570019271 * GRP_NumWebPurchases2
788850    +          +    -0.30647973770852 * GRP_NumWebPurchases3
788851    +          +    -0.09809448516146 * GRP_NumWebPurchases4
788852    +          +     0.02199652262588 * GRP_RFMstat2  +    -0.18677191406874 *
788853    +        GRP_RFMstat3  +    -0.06022520470141 * GRP_RFMstat4
788854    +          +    -0.14995521360575 * GRP_RMntFrq2  +     0.00512207268691 *
788855    +        GRP_RMntFrq3  +    -0.58308661640325 * GRP_RMntFrq4
788856    +          +     0.09125052186965 * GRP_Recency2  +    -0.01605996390173 *
788857    +        GRP_Recency3  +     0.09260166797685 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = -0.24394616675587 * GRP_AcceptedCmp52 + 0.28964856194613 * 
GRP_Frq2 + -0.08289613695725 * GRP_Frq3 + 0.21998897095553 * GRP_Frq4 + 0.18107497199311 * 
GRP_Income2 + 0.1107558510921 * GRP_Income3 + -0.36116869826735 * GRP_Income4 + 
0.02424010270897 * GRP_Mnt2 + -0.15852275336702 * GRP_Mnt3 + -0.35418266455505 * GRP_Mnt4 + 
0.20869043565167 * GRP_MntFishProducts2 + 0.10833559681607 * GRP_MntFishProducts3 + 
-0.10347776442631 * GRP_MntFishProducts4 + -0.32065428276511 * GRP_MntGoldProds2 + 
-0.43926899233496 * GRP_MntGoldProds3 + -0.10606506374615 * GRP_MntGoldProds4 + 
-0.31984276315874 * GRP_MntMeatProducts2 + -0.10334364706061 * GRP_MntMeatProducts3 + 
-0.00884354140504 * GRP_MntMeatProducts4 + 0.23600639890053 * GRP_MntWines2 + 
-0.29934386684584 * GRP_MntWines3 + 0.16274179248724 * GRP_MntWines4 + -0.32950762391869 * 
GRP_NumCatalogPurchases3 + 0.01712392556947 * GRP_NumCatalogPurchases4 + -0.34220067420996 * 
GRP_NumDistPurchases2 + -0.15410597036596 * GRP_NumDistPurchases3 + -0.05769918195545 * 
GRP_NumDistPurchases4 + -0.03929570019271 * GRP_NumWebPurchases2 + -0.30647973770852 * 
GRP_NumWebPurchases3 + -0.09809448516146 * GRP_NumWebPurchases4 + 0.02199652262588 * 
GRP_RFMstat2 + -0.18677191406874 * GRP_RFMstat3 + -0.06022520470141 * GRP_RFMstat4 + 
-0.14995521360575 * GRP_RMntFrq2 + 0.00512207268691 * GRP_RMntFrq3 + -0.58308661640325 * 
GRP_RMntFrq4 + 0.09125052186965 * GRP_Recency2 + -0.01605996390173 * GRP_Recency3 + 
0.09260166797685 * GRP_Recency4 ;
788858    +   H11  =     1.47536864687001 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.47536864687001 + H11 ;
788859    +   H12  =    -0.03796823184366 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03796823184366 + H12 ;
788860    +   H13  =     0.20545721254095 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.20545721254095 + H13 ;
788861    +   H14  =     0.82513531048516 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.82513531048516 + H14 ;
788862    +   H15  =    -0.86531822153621 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.86531822153621 + H15 ;
788863    +   H16  =    -1.63588460642984 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.63588460642984 + H16 ;
788864    +   H17  =     1.27216054538203 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.27216054538203 + H17 ;
788865    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
788866    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
788867    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
788868    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
788869    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
788870    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
788871    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
788872    +END;
MPRINT(EM_DIAGRAM):   END;
788873    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
788874    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
788875    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
788876    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
788877    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
788878    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
788879    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
788880    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
788881    +END;
MPRINT(EM_DIAGRAM):   END;
788882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788883    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
788884    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788885    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
788886    +   P_DepVar1  =     1.96524348977009 * H11  +     1.80437226064293 * H12
788887    +          +     0.26614818926491 * H13  +     -2.3095876381555 * H14
788888    +          +     0.55402099095215 * H15  +     1.54522449582288 * H16
788889    +          +     1.13845442289883 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.96524348977009 * H11 + 1.80437226064293 * H12 + 
0.26614818926491 * H13 + -2.3095876381555 * H14 + 0.55402099095215 * H15 + 1.54522449582288 * 
H16 + 1.13845442289883 * H17 ;
788890    +   P_DepVar1  =    -1.53783202740594 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53783202740594 + P_DepVar1 ;
788891    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
788892    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
788893    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
788894    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
788895    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
788896    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
788897    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
788898    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
788899    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
788900    +END;
MPRINT(EM_DIAGRAM):   END;
788901    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
788902    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
788903    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
788904    +END;
MPRINT(EM_DIAGRAM):   END;
788905    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
788906    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
788907    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
788908    +END;
MPRINT(EM_DIAGRAM):   END;
788909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788910    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
788911    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
788912    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
788913    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
788914    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
788915    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
788916    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
788917    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
788918    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
788919    +END;
MPRINT(EM_DIAGRAM):   END;
788920    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
788921    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
788922    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
788923    +drop
788924    +H11
788925    +H12
788926    +H13
788927    +H14
788928    +H15
788929    +H16
788930    +H17
788931    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
788932     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
788933     quit;
788934     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
788935     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
788936     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
788937     retain ID 2 Node "Neural18";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural18";
788938     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
788939     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2189 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2189 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

788940     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
788941     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
788942     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2189 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2189 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

788943     proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
788944     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
788945     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL18_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

788946     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
788947     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
788948     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
788949     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

788950     proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
788951     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

788952     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
788953     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
788954     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

788955     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
788956     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
788957     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
788958     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

788959     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
788960     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
788960   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 944 rows and 5 columns.

788961     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

788962     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
788963     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 944 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 944 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

788964     filename _pref
788964   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
788965     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
788966     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
788967    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
788968    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
788969    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
788970    +
788971    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
788972    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
788973    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
788974    +LABEL GRP_AcceptedCmp5 =
788975    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
788976    +
788977    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
788978    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
788979    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
788980    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
788981    +end;
MPRINT(EM_DIAGRAM):   end;
788982    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
788983    +if (_UFORMAT eq '0'
788984    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
788985    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
788986    +end;
MPRINT(EM_DIAGRAM):   end;
788987    +else
788988    +if (_UFORMAT eq '1'
788989    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
788990    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
788991    +end;
MPRINT(EM_DIAGRAM):   end;
788992    +else do;
MPRINT(EM_DIAGRAM):   else do;
788993    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
788994    +end;
MPRINT(EM_DIAGRAM):   end;
788995    +end;
MPRINT(EM_DIAGRAM):   end;
788996    +
788997    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
788998    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
788999    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789000    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
789001    +
789002    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
789003    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
789004    +end;
MPRINT(EM_DIAGRAM):   end;
789005    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
789006    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
789007    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
789008    +end;
MPRINT(EM_DIAGRAM):   end;
789009    +else
789010    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
789011    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
789012    +end;
MPRINT(EM_DIAGRAM):   end;
789013    +else
789014    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
789015    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
789016    +end;
MPRINT(EM_DIAGRAM):   end;
789017    +else
789018    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
789019    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
789020    +end;
MPRINT(EM_DIAGRAM):   end;
789021    +end;
MPRINT(EM_DIAGRAM):   end;
789022    +
789023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789024    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
789025    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789026    +LABEL GRP_Income =
789027    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
789028    +
789029    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
789030    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
789031    +end;
MPRINT(EM_DIAGRAM):   end;
789032    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
789033    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
789034    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
789035    +end;
MPRINT(EM_DIAGRAM):   end;
789036    +else
789037    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
789038    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
789039    +end;
MPRINT(EM_DIAGRAM):   end;
789040    +else
789041    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
789042    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
789043    +end;
MPRINT(EM_DIAGRAM):   end;
789044    +else
789045    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
789046    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
789047    +end;
MPRINT(EM_DIAGRAM):   end;
789048    +end;
MPRINT(EM_DIAGRAM):   end;
789049    +
789050    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789051    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
789052    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789053    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
789054    +
789055    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
789056    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
789057    +end;
MPRINT(EM_DIAGRAM):   end;
789058    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
789059    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
789060    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
789061    +end;
MPRINT(EM_DIAGRAM):   end;
789062    +else
789063    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
789064    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
789065    +end;
MPRINT(EM_DIAGRAM):   end;
789066    +else
789067    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
789068    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
789069    +end;
MPRINT(EM_DIAGRAM):   end;
789070    +else
789071    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
789072    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
789073    +end;
MPRINT(EM_DIAGRAM):   end;
789074    +end;
MPRINT(EM_DIAGRAM):   end;
789075    +
789076    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789077    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
789078    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789079    +LABEL GRP_MntFishProducts =
789080    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
789081    +
789082    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
789083    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
789084    +end;
MPRINT(EM_DIAGRAM):   end;
789085    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
789086    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
789087    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
789088    +end;
MPRINT(EM_DIAGRAM):   end;
789089    +else
789090    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
789091    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
789092    +end;
MPRINT(EM_DIAGRAM):   end;
789093    +else
789094    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
789095    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
789096    +end;
MPRINT(EM_DIAGRAM):   end;
789097    +else
789098    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
789099    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
789100    +end;
MPRINT(EM_DIAGRAM):   end;
789101    +end;
MPRINT(EM_DIAGRAM):   end;
789102    +
789103    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789104    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
789105    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789106    +LABEL GRP_MntGoldProds =
789107    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
789108    +
789109    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
789110    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
789111    +end;
MPRINT(EM_DIAGRAM):   end;
789112    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
789113    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
789114    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
789115    +end;
MPRINT(EM_DIAGRAM):   end;
789116    +else
789117    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
789118    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
789119    +end;
MPRINT(EM_DIAGRAM):   end;
789120    +else
789121    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
789122    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
789123    +end;
MPRINT(EM_DIAGRAM):   end;
789124    +else
789125    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
789126    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
789127    +end;
MPRINT(EM_DIAGRAM):   end;
789128    +end;
MPRINT(EM_DIAGRAM):   end;
789129    +
789130    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789131    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
789132    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789133    +LABEL GRP_MntMeatProducts =
789134    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
789135    +
789136    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
789137    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
789138    +end;
MPRINT(EM_DIAGRAM):   end;
789139    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
789140    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
789141    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
789142    +end;
MPRINT(EM_DIAGRAM):   end;
789143    +else
789144    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
789145    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
789146    +end;
MPRINT(EM_DIAGRAM):   end;
789147    +else
789148    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
789149    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
789150    +end;
MPRINT(EM_DIAGRAM):   end;
789151    +else
789152    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
789153    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
789154    +end;
MPRINT(EM_DIAGRAM):   end;
789155    +end;
MPRINT(EM_DIAGRAM):   end;
789156    +
789157    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789158    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
789159    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789160    +LABEL GRP_MntWines =
789161    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
789162    +
789163    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
789164    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
789165    +end;
MPRINT(EM_DIAGRAM):   end;
789166    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
789167    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
789168    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
789169    +end;
MPRINT(EM_DIAGRAM):   end;
789170    +else
789171    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
789172    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
789173    +end;
MPRINT(EM_DIAGRAM):   end;
789174    +else
789175    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
789176    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
789177    +end;
MPRINT(EM_DIAGRAM):   end;
789178    +else
789179    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
789180    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
789181    +end;
MPRINT(EM_DIAGRAM):   end;
789182    +end;
MPRINT(EM_DIAGRAM):   end;
789183    +
789184    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789185    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
789186    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789187    +LABEL GRP_NumCatalogPurchases =
789188    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
789189    +
789190    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
789191    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
789192    +end;
MPRINT(EM_DIAGRAM):   end;
789193    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
789194    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
789195    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
789196    +end;
MPRINT(EM_DIAGRAM):   end;
789197    +else
789198    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
789199    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
789200    +end;
MPRINT(EM_DIAGRAM):   end;
789201    +else
789202    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
789203    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
789204    +end;
MPRINT(EM_DIAGRAM):   end;
789205    +else
789206    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
789207    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
789208    +end;
MPRINT(EM_DIAGRAM):   end;
789209    +end;
MPRINT(EM_DIAGRAM):   end;
789210    +
789211    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789212    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
789213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789214    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
789215    +
789216    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
789217    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
789218    +end;
MPRINT(EM_DIAGRAM):   end;
789219    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
789220    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
789221    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
789222    +end;
MPRINT(EM_DIAGRAM):   end;
789223    +else
789224    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
789225    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
789226    +end;
MPRINT(EM_DIAGRAM):   end;
789227    +else
789228    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
789229    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
789230    +end;
MPRINT(EM_DIAGRAM):   end;
789231    +else
789232    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
789233    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
789234    +end;
MPRINT(EM_DIAGRAM):   end;
789235    +end;
MPRINT(EM_DIAGRAM):   end;
789236    +
789237    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789238    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
789239    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789240    +LABEL GRP_NumWebPurchases =
789241    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
789242    +
789243    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
789244    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
789245    +end;
MPRINT(EM_DIAGRAM):   end;
789246    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
789247    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
789248    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
789249    +end;
MPRINT(EM_DIAGRAM):   end;
789250    +else
789251    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
789252    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
789253    +end;
MPRINT(EM_DIAGRAM):   end;
789254    +else
789255    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
789256    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
789257    +end;
MPRINT(EM_DIAGRAM):   end;
789258    +else
789259    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
789260    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
789261    +end;
MPRINT(EM_DIAGRAM):   end;
789262    +end;
MPRINT(EM_DIAGRAM):   end;
789263    +
789264    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789265    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
789266    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789267    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
789268    +
789269    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
789270    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
789271    +end;
MPRINT(EM_DIAGRAM):   end;
789272    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
789273    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
789274    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
789275    +end;
MPRINT(EM_DIAGRAM):   end;
789276    +else
789277    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
789278    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
789279    +end;
MPRINT(EM_DIAGRAM):   end;
789280    +else
789281    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
789282    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
789283    +end;
MPRINT(EM_DIAGRAM):   end;
789284    +else
789285    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
789286    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
789287    +end;
MPRINT(EM_DIAGRAM):   end;
789288    +end;
MPRINT(EM_DIAGRAM):   end;
789289    +
789290    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789291    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
789292    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789293    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
789294    +
789295    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
789296    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
789297    +end;
MPRINT(EM_DIAGRAM):   end;
789298    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
789299    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
789300    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
789301    +end;
MPRINT(EM_DIAGRAM):   end;
789302    +else
789303    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
789304    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
789305    +end;
MPRINT(EM_DIAGRAM):   end;
789306    +else
789307    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
789308    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
789309    +end;
MPRINT(EM_DIAGRAM):   end;
789310    +else
789311    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
789312    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
789313    +end;
MPRINT(EM_DIAGRAM):   end;
789314    +end;
MPRINT(EM_DIAGRAM):   end;
789315    +
789316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789317    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
789318    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789319    +LABEL GRP_Recency =
789320    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
789321    +
789322    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
789323    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
789324    +end;
MPRINT(EM_DIAGRAM):   end;
789325    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
789326    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
789327    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
789328    +end;
MPRINT(EM_DIAGRAM):   end;
789329    +else
789330    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
789331    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
789332    +end;
MPRINT(EM_DIAGRAM):   end;
789333    +else
789334    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
789335    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
789336    +end;
MPRINT(EM_DIAGRAM):   end;
789337    +else
789338    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
789339    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
789340    +end;
MPRINT(EM_DIAGRAM):   end;
789341    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
789342     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
789343     quit;
789344     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
789345     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
789346     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
789347     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
789348     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
789349     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789350     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
789351     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789352     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789353     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
789354     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789355     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789356     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789357     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
789358     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
789359     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789360     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
789361     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

789362     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
789363     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789364     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789365     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789366     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
789367     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789368     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789369     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
789370     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
789370   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

789371     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789372     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
789373     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 959 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789374     filename _pref
789374   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
789375     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
789376     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
789377    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789378    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
789379    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
789380    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
789381    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
789382    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
789383     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
789384     quit;
789385     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
789386     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
789387     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
789388     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
789389     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
789390     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789391     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
789392     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789393     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789394     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
789395     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789396     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789397     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789398     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
789399     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
789400     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789401     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
789402     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

789403     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
789404     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789405     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789406     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789407     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
789408     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789409     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789410     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
789411     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
789411   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

789412     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789413     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
789414     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 963 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789415     filename _pref
789415   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
789416     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
789417     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
789418    +
789419    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
789420    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
789420   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
789421    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
789422    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
789423    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
789424    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
789425    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
789426     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
789427     quit;
789428     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
789429     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
789430     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
789431     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
789432     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
789433     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789434     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
789435     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789436     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789437     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
789438     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789439     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789440     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789441     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
789442     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
789443     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789444     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
789445     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789446     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
789447     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789448     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789449     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789450     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
789451     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789452     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789453     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
789454     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
789454   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

789455     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789456     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
789457     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1002 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789458     filename _pref
789458   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
789459     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
789460     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
789461    +
789462    +
789463    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
789464    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
789465    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
789466    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
789467    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
789468    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789469    +
789470    +
789471    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
789472    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
789473    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
789474    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
789475    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
789476    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789477    +
789478    +
789479    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
789480    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
789481    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
789482    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
789483    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
789484    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789485    +
789486    +
789487    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
789488    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
789489    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
789490    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
789491    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
789492    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789493    +
789494    +
789495    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
789496    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
789497    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
789498    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
789499    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
789500    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789501    +
789502    +
789503    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
789504    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
789505    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
789506    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
789507    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
789508    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789509    +
789510    +
789511    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
789512    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
789513    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
789514    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
789515    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
789516    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789517    +
789518    +
789519    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
789520    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
789521    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
789522    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
789523    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
789524    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
789525    +if
789526    +_FILTERNORM1 not in ( '.')
789527    + and
789528    +_FILTERNORM2 not in ( '.')
789529    + and
789530    +_FILTERNORM3 not in ( '.')
789531    + and
789532    +_FILTERNORM4 not in ( '.')
789533    + and
789534    +_FILTERNORM5 not in ( '.')
789535    + and
789536    +_FILTERNORM6 not in ( '.')
789537    + and
789538    +_FILTERNORM7 not in ( ' ')
789539    + and
789540    +_FILTERNORM8 not in ( ' ')
789541    +and
789542    +( Dt_Customer ne .)
789543    +and ( Income ne . and (Income<=107000))
789544    +and ( Kidhome ne .)
789545    +and ( MntFishProducts ne .)
789546    +and ( MntFruits ne .)
789547    +and ( MntGoldProds ne .)
789548    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
789549    +and ( MntSweetProducts ne .)
789550    +and ( MntWines ne .)
789551    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
789552    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
789553    +and ( NumStorePurchases ne .)
789554    +and ( NumWebPurchases ne .)
789555    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
789556    +and ( Recency ne .)
789557    +and ( Teenhome ne .)
789558    +and ( Year_Birth ne .)
789559    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
789560    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
789561    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
789562    +end;
MPRINT(EM_DIAGRAM):   end;
789563    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
789564    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
789565     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
789566     quit;
789567     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
789568     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
789569     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
789570     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
789571     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
789572     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789573     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
789574     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789575     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789576     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
789577     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789578     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789579     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789580     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
789581     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
789582     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789583     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
789584     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

789585     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
789586     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789587     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789588     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
789589     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
789590     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
789591     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789592     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
789593     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
789593   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

789594     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789595     proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
789596     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1068 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789597     %macro varDept(fcmpdata=,id=);
789598     %global nobs&id scoreFlag&id;
789599     %let scoreFlag&id = 0;
789600     %if &id=1 or ^&fcmpStart %then %do;
789601     proc sort data=&fcmpdata out=_temp&id nodupkey;
789602     by NAME;
789603     where id=&id and LHS in( %let j=1;
789604     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
789605     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
789606     "&var" %let j = %eval(&j+1);
789607     %end;
789608     );
789609     run;
789610     %let dsid = %sysfunc(open(_temp&id));
789611     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
789612     %let dsid = %sysfunc(close(&dsid));
789613     %if &&nobs&id %then %do;
789614     %let scoreFlag&id = 1;
789615     %let fcmpStart = 1;
789616     %end;
789617     %else %let fcmpStart = 0;
789618     %end;
789619     %else %do;
789620     proc sort data=&fcmpdata out=_tempid;
789621     where id=&id;
789622     by LHS;
789623     run;
789624     %let dsid = %sysfunc(open(_tempid));
789625     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
789626     %let dsid = %sysfunc(close(&dsid));
789627     %if ^&&nobs&id %then %do;
789628     proc datasets lib=work nolist;
789629     delete _tempid;
789630     run;
789631     quit;
789632     %end;
789633     %else %do;
789634     data _tempAll;
789635     set %let j=%eval(&id-1);
789636     %do x=1 %to &j;
789637     %if &&nobs&x %then %do;
789638     _temp&x %end;
789639     %end;
789640     ;
789641     run;
789642     proc sql;
789643     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
789643   ! work._tempid p2 where p.name=p2.lhs;
789644     quit;
789645     data _temp&id;
789646     set _temp&id;
789647     where LHS ne '' and NAME ne '' and Node ne '';
789648     run;
789649     proc datasets lib=work nolist;
789650     delete _tempAll;
789651     run;
789652     %let dsid = %sysfunc(open(_temp&id));
789653     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
789654     %let dsid = %sysfunc(close(&dsid));
789655     %if ^&&nobs&id %then %do;
789656     proc datasets lib=work nolist;
789657     delete _temp&id;
789658     run;
789659     quit;
789660     %end;
789661     %else %do;
789662     %let scoreFlag&id = 1;
789663     data _temp&id;
789664     set _temp&id;
789665     where LHS ne NAME and node ne '';
789666     run;
789667     %let dsid = %sysfunc(open(_temp&id));
789668     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
789669     %let dsid = %sysfunc(close(&dsid));
789670     %if ^&&nobs&id %then %do;
789671     proc datasets lib=work nolist;
789672     delete _temp&id;
789673     run;
789674     quit;
789675     %end;
789676     %else %do;
789677     proc sort data=_temp&id nodupkey;
789678     by LHS NAME;
789679     run;
789680     %end;
789681     %end;
789682     %end;
789683     %end;
789684     %mend varDept;
789685     %macro optCode(outdata=fcmpdata);
789686     %global fcmpStart;
789687     %let fcmpStart = 0;
789688     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
789689     %let NumNodes=9;
789690     %do k=1 %to &NumNodes;
789691     %vardept(fcmpdata=&outdata, id=&k);
789692     %end;
789693     %mend optCode;
789694     %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 62 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

789695     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
789696     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
789697     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
789698     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789699     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
789700     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
789701     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
789702     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789703     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
789704     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
789704   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

789705     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789706     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
789707     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
789708     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789709     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
789710     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
789711     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
789712     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789713     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
789714     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
789715     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
789716     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789717     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
789718     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
789718   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

789719     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

789720     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
789721     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
789722     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

789723     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
789724     * Ensmbl3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing metadata for TRAIN data;
789725     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL3_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl3_TRAIN out=WORK.M1WNA1H_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1WNA1H_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1WNA1H_(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1WNA1H_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1WNA1H_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1JSRNW7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JSRNW7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JSRNW7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1ZOAKEC(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JSRNW7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JSRNW7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JSRNW7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JSRNW7;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JSRNW7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural20_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural20_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl3";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
790045     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
790046     set EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl3_EMINFO;
790047     where DATA='Ensmbl3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
790048     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_EMINFO.
      WHERE (DATA='Ensmbl3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

790049     data EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl3_EMINFO;
790050     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
790051     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
790052     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
790056     run;
790057     data EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMINFO;
790058     set EMWS8.Ensmbl3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl3_EMINFO WORK.MODELTEMP_INFO;
790059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

790060     proc sort data = EMWS8.Ensmbl3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl3_EMINFO NOTHREADS;
790061     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
790062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL3_EMINFO.
NOTE: The data set EMWS8.ENSMBL3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

790063     proc sort data = EMWS8.Neural20_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural20_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
790064     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
790065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL20_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

790066     proc sort data = EMWS8.Ensmbl3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
790067     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
790068     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

790069     data EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMINFO;
790070     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
790071     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
790072     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

790073     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
790074     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
790075     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
790076     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL3_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL3_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
