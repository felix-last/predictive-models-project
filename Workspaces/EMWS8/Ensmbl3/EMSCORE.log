MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.18 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.18 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3H8SX4O 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3H8SX4O new;
MPRINT(EM_DIAGRAM):   run;
1184269    filename emflow
1184269  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring REG3_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184270    *------------------------------------------------------------*;
1184271    * Ensmbl3: Scoring REG3_TRAIN data;
1184272    *------------------------------------------------------------*;
1184273    data EMWS8.Ensmbl3_TRAIN
1184274    / view=EMWS8.Ensmbl3_TRAIN
1184275    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_TRAIN / view=EMWS8.Ensmbl3_TRAIN ;
1184276    set EMWS8.Reg3_TRAIN
1184277    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_TRAIN ;
1184278    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas.
1184279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184280   +* Ensmbl3: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Combine model for DepVar;
1184281   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184282   +* Ensmbl3: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 1 of 10;
1184283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184285   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1184286   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1184287   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1184288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184290   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1184291   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1184292   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1184293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184295   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1184296   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1184297   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1184298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184300   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1184301   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1184302   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1184303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184304   +
1184305   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1184306   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1184306  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1184307   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1184308   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1184309   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1184310   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1184311   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1184312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184313   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1184314   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1184315   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1184316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184317   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184318   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1184319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184320   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1184321   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1184322   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1184323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184324   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1184325   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1184326   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1184327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184328   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184329   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1184330   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1184331   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1184332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184333   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1184334   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1184335   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1184336   +
1184337   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184338   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1184339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184340   +LABEL GRP_AcceptedCmp5 =
1184341   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1184342   +
1184343   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1184344   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1184345   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1184346   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1184347   +end;
MPRINT(EM_DIAGRAM):   end;
1184348   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1184349   +if (_UFORMAT eq '0'
1184350   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1184351   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1184352   +end;
MPRINT(EM_DIAGRAM):   end;
1184353   +else
1184354   +if (_UFORMAT eq '1'
1184355   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1184356   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1184357   +end;
MPRINT(EM_DIAGRAM):   end;
1184358   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184359   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1184360   +end;
MPRINT(EM_DIAGRAM):   end;
1184361   +end;
MPRINT(EM_DIAGRAM):   end;
1184362   +
1184363   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184364   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1184365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184366   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1184367   +
1184368   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1184369   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1184370   +end;
MPRINT(EM_DIAGRAM):   end;
1184371   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1184372   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1184373   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1184374   +end;
MPRINT(EM_DIAGRAM):   end;
1184375   +else
1184376   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1184377   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1184378   +end;
MPRINT(EM_DIAGRAM):   end;
1184379   +else
1184380   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1184381   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1184382   +end;
MPRINT(EM_DIAGRAM):   end;
1184383   +else
1184384   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1184385   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1184386   +end;
MPRINT(EM_DIAGRAM):   end;
1184387   +end;
MPRINT(EM_DIAGRAM):   end;
1184388   +
1184389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184390   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1184391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184392   +LABEL GRP_Income =
1184393   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1184394   +
1184395   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1184396   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1184397   +end;
MPRINT(EM_DIAGRAM):   end;
1184398   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1184399   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1184400   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1184401   +end;
MPRINT(EM_DIAGRAM):   end;
1184402   +else
1184403   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1184404   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1184405   +end;
MPRINT(EM_DIAGRAM):   end;
1184406   +else
1184407   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1184408   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1184409   +end;
MPRINT(EM_DIAGRAM):   end;
1184410   +else
1184411   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1184412   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1184413   +end;
MPRINT(EM_DIAGRAM):   end;
1184414   +end;
MPRINT(EM_DIAGRAM):   end;
1184415   +
1184416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184417   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1184418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184419   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1184420   +
1184421   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1184422   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1184423   +end;
MPRINT(EM_DIAGRAM):   end;
1184424   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1184425   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1184426   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1184427   +end;
MPRINT(EM_DIAGRAM):   end;
1184428   +else
1184429   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1184430   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1184431   +end;
MPRINT(EM_DIAGRAM):   end;
1184432   +else
1184433   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1184434   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1184435   +end;
MPRINT(EM_DIAGRAM):   end;
1184436   +else
1184437   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1184438   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1184439   +end;
MPRINT(EM_DIAGRAM):   end;
1184440   +end;
MPRINT(EM_DIAGRAM):   end;
1184441   +
1184442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184443   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1184444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184445   +LABEL GRP_MntFishProducts =
1184446   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1184447   +
1184448   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1184449   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1184450   +end;
MPRINT(EM_DIAGRAM):   end;
1184451   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1184452   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1184453   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1184454   +end;
MPRINT(EM_DIAGRAM):   end;
1184455   +else
1184456   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1184457   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1184458   +end;
MPRINT(EM_DIAGRAM):   end;
1184459   +else
1184460   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1184461   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1184462   +end;
MPRINT(EM_DIAGRAM):   end;
1184463   +else
1184464   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1184465   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1184466   +end;
MPRINT(EM_DIAGRAM):   end;
1184467   +end;
MPRINT(EM_DIAGRAM):   end;
1184468   +
1184469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184470   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1184471   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184472   +LABEL GRP_MntGoldProds =
1184473   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1184474   +
1184475   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1184476   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1184477   +end;
MPRINT(EM_DIAGRAM):   end;
1184478   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1184479   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1184480   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1184481   +end;
MPRINT(EM_DIAGRAM):   end;
1184482   +else
1184483   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1184484   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1184485   +end;
MPRINT(EM_DIAGRAM):   end;
1184486   +else
1184487   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1184488   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1184489   +end;
MPRINT(EM_DIAGRAM):   end;
1184490   +else
1184491   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1184492   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1184493   +end;
MPRINT(EM_DIAGRAM):   end;
1184494   +end;
MPRINT(EM_DIAGRAM):   end;
1184495   +
1184496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184497   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1184498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184499   +LABEL GRP_MntMeatProducts =
1184500   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1184501   +
1184502   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1184503   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1184504   +end;
MPRINT(EM_DIAGRAM):   end;
1184505   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1184506   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1184507   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1184508   +end;
MPRINT(EM_DIAGRAM):   end;
1184509   +else
1184510   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1184511   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1184512   +end;
MPRINT(EM_DIAGRAM):   end;
1184513   +else
1184514   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1184515   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1184516   +end;
MPRINT(EM_DIAGRAM):   end;
1184517   +else
1184518   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1184519   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1184520   +end;
MPRINT(EM_DIAGRAM):   end;
1184521   +end;
MPRINT(EM_DIAGRAM):   end;
1184522   +
1184523   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184524   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1184525   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184526   +LABEL GRP_MntWines =
1184527   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1184528   +
1184529   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1184530   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1184531   +end;
MPRINT(EM_DIAGRAM):   end;
1184532   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1184533   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1184534   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1184535   +end;
MPRINT(EM_DIAGRAM):   end;
1184536   +else
1184537   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1184538   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1184539   +end;
MPRINT(EM_DIAGRAM):   end;
1184540   +else
1184541   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1184542   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1184543   +end;
MPRINT(EM_DIAGRAM):   end;
1184544   +else
1184545   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1184546   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1184547   +end;
MPRINT(EM_DIAGRAM):   end;
1184548   +end;
MPRINT(EM_DIAGRAM):   end;
1184549   +
1184550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184551   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1184552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184553   +LABEL GRP_NumCatalogPurchases =
1184554   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1184555   +
1184556   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1184557   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1184558   +end;
MPRINT(EM_DIAGRAM):   end;
1184559   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1184560   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1184561   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1184562   +end;
MPRINT(EM_DIAGRAM):   end;
1184563   +else
1184564   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1184565   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1184566   +end;
MPRINT(EM_DIAGRAM):   end;
1184567   +else
1184568   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1184569   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1184570   +end;
MPRINT(EM_DIAGRAM):   end;
1184571   +else
1184572   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1184573   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1184574   +end;
MPRINT(EM_DIAGRAM):   end;
1184575   +end;
MPRINT(EM_DIAGRAM):   end;
1184576   +
1184577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184578   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1184579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184580   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1184581   +
1184582   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1184583   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1184584   +end;
MPRINT(EM_DIAGRAM):   end;
1184585   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1184586   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1184587   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1184588   +end;
MPRINT(EM_DIAGRAM):   end;
1184589   +else
1184590   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1184591   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1184592   +end;
MPRINT(EM_DIAGRAM):   end;
1184593   +else
1184594   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1184595   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1184596   +end;
MPRINT(EM_DIAGRAM):   end;
1184597   +else
1184598   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1184599   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1184600   +end;
MPRINT(EM_DIAGRAM):   end;
1184601   +end;
MPRINT(EM_DIAGRAM):   end;
1184602   +
1184603   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184604   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1184605   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184606   +LABEL GRP_NumWebPurchases =
1184607   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1184608   +
1184609   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1184610   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1184611   +end;
MPRINT(EM_DIAGRAM):   end;
1184612   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1184613   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1184614   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1184615   +end;
MPRINT(EM_DIAGRAM):   end;
1184616   +else
1184617   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1184618   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1184619   +end;
MPRINT(EM_DIAGRAM):   end;
1184620   +else
1184621   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1184622   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1184623   +end;
MPRINT(EM_DIAGRAM):   end;
1184624   +else
1184625   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1184626   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1184627   +end;
MPRINT(EM_DIAGRAM):   end;
1184628   +end;
MPRINT(EM_DIAGRAM):   end;
1184629   +
1184630   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184631   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1184632   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184633   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1184634   +
1184635   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1184636   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1184637   +end;
MPRINT(EM_DIAGRAM):   end;
1184638   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1184639   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1184640   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1184641   +end;
MPRINT(EM_DIAGRAM):   end;
1184642   +else
1184643   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1184644   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1184645   +end;
MPRINT(EM_DIAGRAM):   end;
1184646   +else
1184647   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1184648   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1184649   +end;
MPRINT(EM_DIAGRAM):   end;
1184650   +else
1184651   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1184652   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1184653   +end;
MPRINT(EM_DIAGRAM):   end;
1184654   +end;
MPRINT(EM_DIAGRAM):   end;
1184655   +
1184656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184657   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1184658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184659   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1184660   +
1184661   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1184662   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1184663   +end;
MPRINT(EM_DIAGRAM):   end;
1184664   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1184665   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1184666   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1184667   +end;
MPRINT(EM_DIAGRAM):   end;
1184668   +else
1184669   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1184670   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1184671   +end;
MPRINT(EM_DIAGRAM):   end;
1184672   +else
1184673   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1184674   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1184675   +end;
MPRINT(EM_DIAGRAM):   end;
1184676   +else
1184677   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1184678   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1184679   +end;
MPRINT(EM_DIAGRAM):   end;
1184680   +end;
MPRINT(EM_DIAGRAM):   end;
1184681   +
1184682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184683   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1184684   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184685   +LABEL GRP_Recency =
1184686   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1184687   +
1184688   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1184689   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1184690   +end;
MPRINT(EM_DIAGRAM):   end;
1184691   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1184692   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1184693   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1184694   +end;
MPRINT(EM_DIAGRAM):   end;
1184695   +else
1184696   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1184697   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1184698   +end;
MPRINT(EM_DIAGRAM):   end;
1184699   +else
1184700   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1184701   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1184702   +end;
MPRINT(EM_DIAGRAM):   end;
1184703   +else
1184704   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1184705   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1184706   +end;
MPRINT(EM_DIAGRAM):   end;
1184707   +end;
MPRINT(EM_DIAGRAM):   end;
1184708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184709   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1184710   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1184711   +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
1184712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184713   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1184714   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1184715   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1184716   +
1184717   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1184718   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1184719   +
1184720   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1184721   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1184722   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1184723   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1184724   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1184725   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1184726   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1184727   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1184728   +
1184729   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1184730   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1184731   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1184732   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1184733   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1184734   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184735   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1184736   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1184737   +end;
MPRINT(EM_DIAGRAM):   end;
1184738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184739   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1184740   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1184741   +   end;
MPRINT(EM_DIAGRAM):   end;
1184742   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1184743   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1184744   +   end;
MPRINT(EM_DIAGRAM):   end;
1184745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184746   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1184747   +   end;
MPRINT(EM_DIAGRAM):   end;
1184748   +end;
MPRINT(EM_DIAGRAM):   end;
1184749   +
1184750   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1184751   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1184752   +
1184753   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1184754   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1184755   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184756   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184757   +end;
MPRINT(EM_DIAGRAM):   end;
1184758   +
1184759   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1184760   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1184761   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1184762   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1184763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184765   +end;
MPRINT(EM_DIAGRAM):   end;
1184766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184768   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1184769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184770   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1184771   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1184772   +   end;
MPRINT(EM_DIAGRAM):   end;
1184773   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1184774   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1184775   +   end;
MPRINT(EM_DIAGRAM):   end;
1184776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184777   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1184778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184780   +   end;
MPRINT(EM_DIAGRAM):   end;
1184781   +end;
MPRINT(EM_DIAGRAM):   end;
1184782   +
1184783   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1184784   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1184785   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1184786   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1184787   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1184788   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1184789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184791   +end;
MPRINT(EM_DIAGRAM):   end;
1184792   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184794   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1184795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184796   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1184797   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1184798   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1184799   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1184800   +   end;
MPRINT(EM_DIAGRAM):   end;
1184801   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1184802   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1184803   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1184804   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1184805   +   end;
MPRINT(EM_DIAGRAM):   end;
1184806   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1184807   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1184808   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1184809   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1184810   +   end;
MPRINT(EM_DIAGRAM):   end;
1184811   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1184812   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1184813   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1184814   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1184815   +   end;
MPRINT(EM_DIAGRAM):   end;
1184816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184817   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1184818   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1184819   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1184820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184822   +   end;
MPRINT(EM_DIAGRAM):   end;
1184823   +end;
MPRINT(EM_DIAGRAM):   end;
1184824   +
1184825   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1184826   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1184827   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1184828   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1184829   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1184830   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1184831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184833   +end;
MPRINT(EM_DIAGRAM):   end;
1184834   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184836   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1184837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184838   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1184839   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1184840   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1184841   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1184842   +   end;
MPRINT(EM_DIAGRAM):   end;
1184843   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1184844   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1184845   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1184846   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1184847   +   end;
MPRINT(EM_DIAGRAM):   end;
1184848   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1184849   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1184850   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1184851   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1184852   +   end;
MPRINT(EM_DIAGRAM):   end;
1184853   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1184854   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1184855   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1184856   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1184857   +   end;
MPRINT(EM_DIAGRAM):   end;
1184858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184859   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1184860   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1184861   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1184862   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184863   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184864   +   end;
MPRINT(EM_DIAGRAM):   end;
1184865   +end;
MPRINT(EM_DIAGRAM):   end;
1184866   +
1184867   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1184868   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1184869   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1184870   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1184871   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1184872   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1184873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184875   +end;
MPRINT(EM_DIAGRAM):   end;
1184876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184878   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1184879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184880   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1184881   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1184882   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1184883   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1184884   +   end;
MPRINT(EM_DIAGRAM):   end;
1184885   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1184886   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1184887   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1184888   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1184889   +   end;
MPRINT(EM_DIAGRAM):   end;
1184890   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1184891   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1184892   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1184893   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1184894   +   end;
MPRINT(EM_DIAGRAM):   end;
1184895   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1184896   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1184897   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1184898   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1184899   +   end;
MPRINT(EM_DIAGRAM):   end;
1184900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184901   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1184902   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1184903   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1184904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184906   +   end;
MPRINT(EM_DIAGRAM):   end;
1184907   +end;
MPRINT(EM_DIAGRAM):   end;
1184908   +
1184909   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1184910   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1184911   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1184912   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1184913   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1184914   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1184915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184917   +end;
MPRINT(EM_DIAGRAM):   end;
1184918   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184919   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184920   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1184921   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184922   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1184923   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1184924   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1184925   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1184926   +   end;
MPRINT(EM_DIAGRAM):   end;
1184927   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1184928   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1184929   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1184930   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1184931   +   end;
MPRINT(EM_DIAGRAM):   end;
1184932   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1184933   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1184934   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1184935   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1184936   +   end;
MPRINT(EM_DIAGRAM):   end;
1184937   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1184938   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1184939   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1184940   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1184941   +   end;
MPRINT(EM_DIAGRAM):   end;
1184942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184943   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1184944   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1184945   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1184946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184948   +   end;
MPRINT(EM_DIAGRAM):   end;
1184949   +end;
MPRINT(EM_DIAGRAM):   end;
1184950   +
1184951   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1184952   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1184953   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1184954   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1184955   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1184956   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1184957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184959   +end;
MPRINT(EM_DIAGRAM):   end;
1184960   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184961   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184962   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1184963   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184964   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1184965   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1184966   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1184967   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1184968   +   end;
MPRINT(EM_DIAGRAM):   end;
1184969   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1184970   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1184971   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1184972   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1184973   +   end;
MPRINT(EM_DIAGRAM):   end;
1184974   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1184975   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1184976   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1184977   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1184978   +   end;
MPRINT(EM_DIAGRAM):   end;
1184979   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1184980   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1184981   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1184982   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1184983   +   end;
MPRINT(EM_DIAGRAM):   end;
1184984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184985   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1184986   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1184987   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1184988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184990   +   end;
MPRINT(EM_DIAGRAM):   end;
1184991   +end;
MPRINT(EM_DIAGRAM):   end;
1184992   +
1184993   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1184994   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1184995   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1184996   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1184997   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1184998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185000   +end;
MPRINT(EM_DIAGRAM):   end;
1185001   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185003   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1185004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185005   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185006   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1185007   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1185008   +   end;
MPRINT(EM_DIAGRAM):   end;
1185009   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185010   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1185011   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1185012   +   end;
MPRINT(EM_DIAGRAM):   end;
1185013   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185014   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1185015   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1185016   +   end;
MPRINT(EM_DIAGRAM):   end;
1185017   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185018   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1185019   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1185020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185022   +   end;
MPRINT(EM_DIAGRAM):   end;
1185023   +end;
MPRINT(EM_DIAGRAM):   end;
1185024   +
1185025   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1185026   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1185027   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1185028   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1185029   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1185030   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1185031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185033   +end;
MPRINT(EM_DIAGRAM):   end;
1185034   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185036   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1185037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185038   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1185039   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1185040   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1185041   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1185042   +   end;
MPRINT(EM_DIAGRAM):   end;
1185043   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185044   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1185045   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1185046   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1185047   +   end;
MPRINT(EM_DIAGRAM):   end;
1185048   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185049   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1185050   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1185051   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1185052   +   end;
MPRINT(EM_DIAGRAM):   end;
1185053   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1185054   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1185055   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1185056   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1185057   +   end;
MPRINT(EM_DIAGRAM):   end;
1185058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185059   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1185060   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1185061   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1185062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185064   +   end;
MPRINT(EM_DIAGRAM):   end;
1185065   +end;
MPRINT(EM_DIAGRAM):   end;
1185066   +
1185067   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1185068   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1185069   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1185070   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1185071   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1185072   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1185073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185075   +end;
MPRINT(EM_DIAGRAM):   end;
1185076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185078   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1185079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185080   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185081   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1185082   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1185083   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1185084   +   end;
MPRINT(EM_DIAGRAM):   end;
1185085   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185086   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1185087   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1185088   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1185089   +   end;
MPRINT(EM_DIAGRAM):   end;
1185090   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185091   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1185092   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1185093   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1185094   +   end;
MPRINT(EM_DIAGRAM):   end;
1185095   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185096   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1185097   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1185098   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1185099   +   end;
MPRINT(EM_DIAGRAM):   end;
1185100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185101   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1185102   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1185103   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1185104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185106   +   end;
MPRINT(EM_DIAGRAM):   end;
1185107   +end;
MPRINT(EM_DIAGRAM):   end;
1185108   +
1185109   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1185110   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1185111   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1185112   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1185113   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1185114   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1185115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185117   +end;
MPRINT(EM_DIAGRAM):   end;
1185118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185120   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1185121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185122   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1185123   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1185124   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1185125   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1185126   +   end;
MPRINT(EM_DIAGRAM):   end;
1185127   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185128   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1185129   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1185130   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1185131   +   end;
MPRINT(EM_DIAGRAM):   end;
1185132   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1185133   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1185134   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1185135   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1185136   +   end;
MPRINT(EM_DIAGRAM):   end;
1185137   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185138   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1185139   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1185140   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1185141   +   end;
MPRINT(EM_DIAGRAM):   end;
1185142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185143   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1185144   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1185145   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1185146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185148   +   end;
MPRINT(EM_DIAGRAM):   end;
1185149   +end;
MPRINT(EM_DIAGRAM):   end;
1185150   +
1185151   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1185152   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1185153   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1185154   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1185155   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1185156   +end;
MPRINT(EM_DIAGRAM):   end;
1185157   +
1185158   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1185159   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1185160   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1185161   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1185162   +
1185163   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1185164   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185165   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1185166   +
1185167   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1185168   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185169   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1185170   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1185171   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1185172   +
1185173   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1185174   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185175   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1185176   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1185177   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1185178   +
1185179   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1185180   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185181   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1185182   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1185183   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1185184   +
1185185   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1185186   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185187   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1185188   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1185189   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1185190   +
1185191   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1185192   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185193   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1185194   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1185195   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1185196   +
1185197   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1185198   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185199   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1185200   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1185201   +
1185202   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1185203   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185204   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1185205   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1185206   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1185207   +
1185208   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1185209   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185210   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1185211   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1185212   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1185213   +
1185214   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1185215   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1185216   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1185217   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1185218   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1185219   +
1185220   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1185221   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1185222   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1185223   +
1185224   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1185225   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1185226   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1185227   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1185228   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1185229   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1185230   +end;
MPRINT(EM_DIAGRAM):   end;
1185231   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1185232   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1185233   +
1185234   +REG3DR1:
1185235   +
1185236   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
1185237   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1185238   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1185239   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1185240   +end;
MPRINT(EM_DIAGRAM):   end;
1185241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185242   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1185243   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1185244   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1185245   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1185246   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1185247   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1185248   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1185249   +   end;
MPRINT(EM_DIAGRAM):   end;
1185250   +end;
MPRINT(EM_DIAGRAM):   end;
1185251   +
1185252   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1185253   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1185254   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1185255   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1185256   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1185257   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1185258   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1185259   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1185260   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1185261   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1185262   +end;
MPRINT(EM_DIAGRAM):   end;
1185263   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1185264   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1185265   +
1185266   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1185267   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1185268   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1185269   +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
1185270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185271   +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
1185272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185273   +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
1185274   +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
1185275   +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
1185276   +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
1185277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185278   +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
1185279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185280   +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
1185281   +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
1185282   +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
1185283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185284   +* Ensmbl3: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 2 of 10;
1185285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185287   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1185288   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1185289   +* NODE: Tree3;
MPRINT(EM_DIAGRAM):   * NODE: Tree3;
1185290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185291   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1185292   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1185293   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1185294   +
1185295   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1185296   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1185297   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1185298   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1185299   +
1185300   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1185301   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1185302   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1185303   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1185304   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1185305   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1185306   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1185307   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1185308   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1185309   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1185310   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1185311   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1185312   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1185313   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1185314   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1185315   +
1185316   +
1185317   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1185318   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1185319   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1185320   +
1185321   +
1185322   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1185323   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185324   +
1185325   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1185326   +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
1185327   + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185328   +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
1185329   +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
1185330   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185331   +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
1185332   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1185333   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185334   +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1185335   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1185336   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1185337   +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
1185338   +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
1185339   +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
1185340   +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
1185341   +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
1185342   +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
1185343   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1185344   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1185345   +      END;
MPRINT(EM_DIAGRAM):   END;
1185346   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185347   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
1185348   +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1185349   +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
1185350   +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
1185351   +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
1185352   +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
1185353   +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
1185354   +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
1185355   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1185356   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185357   +      END;
MPRINT(EM_DIAGRAM):   END;
1185358   +    END;
MPRINT(EM_DIAGRAM):   END;
1185359   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185360   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1185361   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185362   +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
1185363   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
1185364   +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1185365   +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
1185366   +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
1185367   +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
1185368   +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
1185369   +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
1185370   +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
1185371   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1185372   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185373   +      END;
MPRINT(EM_DIAGRAM):   END;
1185374   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185375   +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
1185376   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185377   +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
1185378   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1185379   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1185380   +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
1185381   +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
1185382   +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
1185383   +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
1185384   +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
1185385   +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
1185386   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1185387   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1185388   +        END;
MPRINT(EM_DIAGRAM):   END;
1185389   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185390   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
1185391   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1185392   +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
1185393   +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
1185394   +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
1185395   +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
1185396   +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
1185397   +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
1185398   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1185399   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185400   +        END;
MPRINT(EM_DIAGRAM):   END;
1185401   +      END;
MPRINT(EM_DIAGRAM):   END;
1185402   +    END;
MPRINT(EM_DIAGRAM):   END;
1185403   +  END;
MPRINT(EM_DIAGRAM):   END;
1185404   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185405   +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1185406   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185407   +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1185408   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
1185409   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1185410   +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
1185411   +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
1185412   +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
1185413   +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
1185414   +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
1185415   +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
1185416   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1185417   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185418   +    END;
MPRINT(EM_DIAGRAM):   END;
1185419   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185420   +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
1185421   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185422   +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
1185423   +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
1185424   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1185425   +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
1185426   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1185427   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1185428   +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
1185429   +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
1185430   +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
1185431   +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
1185432   +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
1185433   +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
1185434   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1185435   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1185436   +        END;
MPRINT(EM_DIAGRAM):   END;
1185437   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185438   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1185439   +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1185440   +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
1185441   +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
1185442   +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
1185443   +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
1185444   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1185445   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1185446   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1185447   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185448   +        END;
MPRINT(EM_DIAGRAM):   END;
1185449   +      END;
MPRINT(EM_DIAGRAM):   END;
1185450   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185451   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1185452   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1185453   +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
1185454   +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
1185455   +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
1185456   +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
1185457   +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
1185458   +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
1185459   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1185460   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185461   +      END;
MPRINT(EM_DIAGRAM):   END;
1185462   +    END;
MPRINT(EM_DIAGRAM):   END;
1185463   +  END;
MPRINT(EM_DIAGRAM):   END;
1185464   +
1185465   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1185466   +IF  F_DepVar  NE '0'
1185467   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1185468   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1185469   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1185470   + END;
MPRINT(EM_DIAGRAM):   END;
1185471   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185472   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1185473   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1185474   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1185475   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1185476   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1185477   +       END;
MPRINT(EM_DIAGRAM):   END;
1185478   + END;
MPRINT(EM_DIAGRAM):   END;
1185479   +
1185480   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1185481   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1185482   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1185483   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1185484   +* Renaming variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree3;
1185485   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185486   +* Renaming Posterior variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree3;
1185487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185488   +drop Tree3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar1;
1185489   +Tree3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar1 = P_DepVar1;
1185490   +drop Tree3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar0;
1185491   +Tree3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar0 = P_DepVar0;
1185492   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185493   +* Renaming _WARN_ variable for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree3;
1185494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185495   +length Tree3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree3_WARN_ $4;
1185496   +drop Tree3_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree3_WARN_;
1185497   +Tree3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree3_WARN_ = _WARN_;
1185498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185499   +* Ensmbl3: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 3 of 10;
1185500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185501   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185502   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1185503   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1185504   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1185505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185506   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1185507   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1185508   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1185509   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1185510   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1185511   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1185512   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1185513   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1185514   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1185515   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1185516   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1185517   +LENGTH _WARN_ $4
1185518   +      F_DepVar  $ 12
1185519   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1185520   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1185521   +
1185522   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1185523   +
1185524   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1185525   +
1185526   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1185527   +
1185528   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1185529   +
1185530   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1185531   +
1185532   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1185533   +
1185534   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1185535   +
1185536   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1185537   +
1185538   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1185539   +
1185540   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1185541   +
1185542   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1185543   +
1185544   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1185545   +
1185546   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1185547   +
1185548   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1185549   +
1185550   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1185551   +
1185552   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1185553   +
1185554   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1185555   +
1185556   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1185557   +
1185558   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1185559   +
1185560   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1185561   +
1185562   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1185563   +
1185564   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1185565   +
1185566   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1185567   +
1185568   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1185569   +
1185570   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1185571   +
1185572   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1185573   +
1185574   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1185575   +
1185576   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1185577   +
1185578   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1185579   +
1185580   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1185581   +
1185582   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1185583   +
1185584   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1185585   +
1185586   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1185587   +
1185588   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1185589   +
1185590   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1185591   +
1185592   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1185593   +
1185594   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1185595   +
1185596   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1185597   +
1185598   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1185599   +
1185600   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1185601   +
1185602   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1185603   +
1185604   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1185605   +
1185606   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1185607   +
1185608   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1185609   +
1185610   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1185611   +
1185612   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1185613   +
1185614   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1185615   +
1185616   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1185617   +
1185618   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1185619   +
1185620   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1185621   +
1185622   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1185623   +
1185624   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1185625   +
1185626   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1185627   +
1185628   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1185629   +
1185630   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1185631   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1185632   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1185633   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1185634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185636   +end;
MPRINT(EM_DIAGRAM):   end;
1185637   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185639   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1185640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185641   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1185642   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1185643   +   end;
MPRINT(EM_DIAGRAM):   end;
1185644   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1185645   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1185646   +   end;
MPRINT(EM_DIAGRAM):   end;
1185647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185648   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1185649   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185650   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185651   +   end;
MPRINT(EM_DIAGRAM):   end;
1185652   +end;
MPRINT(EM_DIAGRAM):   end;
1185653   +
1185654   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1185655   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1185656   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1185657   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1185658   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1185659   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1185660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185662   +end;
MPRINT(EM_DIAGRAM):   end;
1185663   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185664   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185665   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1185666   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185667   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1185668   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1185669   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1185670   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1185671   +   end;
MPRINT(EM_DIAGRAM):   end;
1185672   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1185673   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1185674   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1185675   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1185676   +   end;
MPRINT(EM_DIAGRAM):   end;
1185677   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185678   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1185679   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1185680   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1185681   +   end;
MPRINT(EM_DIAGRAM):   end;
1185682   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185683   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1185684   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1185685   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1185686   +   end;
MPRINT(EM_DIAGRAM):   end;
1185687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185688   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1185689   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1185690   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1185691   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185692   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185693   +   end;
MPRINT(EM_DIAGRAM):   end;
1185694   +end;
MPRINT(EM_DIAGRAM):   end;
1185695   +
1185696   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1185697   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1185698   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1185699   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1185700   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1185701   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1185702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185704   +end;
MPRINT(EM_DIAGRAM):   end;
1185705   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185706   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185707   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1185708   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185709   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1185710   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1185711   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1185712   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1185713   +   end;
MPRINT(EM_DIAGRAM):   end;
1185714   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185715   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1185716   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1185717   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1185718   +   end;
MPRINT(EM_DIAGRAM):   end;
1185719   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1185720   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1185721   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1185722   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1185723   +   end;
MPRINT(EM_DIAGRAM):   end;
1185724   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185725   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1185726   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1185727   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1185728   +   end;
MPRINT(EM_DIAGRAM):   end;
1185729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185730   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1185731   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1185732   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1185733   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185734   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185735   +   end;
MPRINT(EM_DIAGRAM):   end;
1185736   +end;
MPRINT(EM_DIAGRAM):   end;
1185737   +
1185738   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1185739   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1185740   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1185741   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1185742   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1185743   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1185744   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185746   +end;
MPRINT(EM_DIAGRAM):   end;
1185747   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185748   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185749   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1185750   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185751   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185752   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1185753   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1185754   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1185755   +   end;
MPRINT(EM_DIAGRAM):   end;
1185756   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185757   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1185758   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1185759   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1185760   +   end;
MPRINT(EM_DIAGRAM):   end;
1185761   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185762   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1185763   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1185764   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1185765   +   end;
MPRINT(EM_DIAGRAM):   end;
1185766   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185767   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1185768   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1185769   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1185770   +   end;
MPRINT(EM_DIAGRAM):   end;
1185771   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185772   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1185773   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1185774   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1185775   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185776   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185777   +   end;
MPRINT(EM_DIAGRAM):   end;
1185778   +end;
MPRINT(EM_DIAGRAM):   end;
1185779   +
1185780   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1185781   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1185782   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1185783   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1185784   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1185785   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1185786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185788   +end;
MPRINT(EM_DIAGRAM):   end;
1185789   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185790   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185791   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1185792   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185793   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185794   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1185795   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1185796   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1185797   +   end;
MPRINT(EM_DIAGRAM):   end;
1185798   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185799   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1185800   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1185801   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1185802   +   end;
MPRINT(EM_DIAGRAM):   end;
1185803   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185804   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1185805   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1185806   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1185807   +   end;
MPRINT(EM_DIAGRAM):   end;
1185808   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185809   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1185810   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1185811   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1185812   +   end;
MPRINT(EM_DIAGRAM):   end;
1185813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185814   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1185815   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1185816   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1185817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185819   +   end;
MPRINT(EM_DIAGRAM):   end;
1185820   +end;
MPRINT(EM_DIAGRAM):   end;
1185821   +
1185822   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1185823   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1185824   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1185825   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1185826   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1185827   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1185828   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185829   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185830   +end;
MPRINT(EM_DIAGRAM):   end;
1185831   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185832   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185833   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1185834   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185835   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185836   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1185837   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1185838   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1185839   +   end;
MPRINT(EM_DIAGRAM):   end;
1185840   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185841   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1185842   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1185843   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1185844   +   end;
MPRINT(EM_DIAGRAM):   end;
1185845   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185846   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1185847   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1185848   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1185849   +   end;
MPRINT(EM_DIAGRAM):   end;
1185850   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185851   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1185852   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1185853   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1185854   +   end;
MPRINT(EM_DIAGRAM):   end;
1185855   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185856   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1185857   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1185858   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1185859   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185860   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185861   +   end;
MPRINT(EM_DIAGRAM):   end;
1185862   +end;
MPRINT(EM_DIAGRAM):   end;
1185863   +
1185864   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1185865   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1185866   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1185867   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1185868   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1185869   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1185870   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185871   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185872   +end;
MPRINT(EM_DIAGRAM):   end;
1185873   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185874   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185875   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1185876   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185877   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185878   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1185879   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1185880   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1185881   +   end;
MPRINT(EM_DIAGRAM):   end;
1185882   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185883   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1185884   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1185885   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1185886   +   end;
MPRINT(EM_DIAGRAM):   end;
1185887   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185888   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1185889   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1185890   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1185891   +   end;
MPRINT(EM_DIAGRAM):   end;
1185892   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185893   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1185894   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1185895   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1185896   +   end;
MPRINT(EM_DIAGRAM):   end;
1185897   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185898   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1185899   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1185900   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1185901   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185902   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185903   +   end;
MPRINT(EM_DIAGRAM):   end;
1185904   +end;
MPRINT(EM_DIAGRAM):   end;
1185905   +
1185906   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1185907   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1185908   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1185909   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1185910   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1185911   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1185912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185914   +end;
MPRINT(EM_DIAGRAM):   end;
1185915   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185916   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185917   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1185918   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185919   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185920   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1185921   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1185922   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1185923   +   end;
MPRINT(EM_DIAGRAM):   end;
1185924   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185925   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1185926   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1185927   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1185928   +   end;
MPRINT(EM_DIAGRAM):   end;
1185929   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185930   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1185931   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1185932   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1185933   +   end;
MPRINT(EM_DIAGRAM):   end;
1185934   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1185935   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1185936   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1185937   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1185938   +   end;
MPRINT(EM_DIAGRAM):   end;
1185939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185940   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1185941   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1185942   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1185943   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185944   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185945   +   end;
MPRINT(EM_DIAGRAM):   end;
1185946   +end;
MPRINT(EM_DIAGRAM):   end;
1185947   +
1185948   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1185949   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1185950   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1185951   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1185952   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1185953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185955   +end;
MPRINT(EM_DIAGRAM):   end;
1185956   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185957   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185958   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1185959   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185960   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1185961   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1185962   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1185963   +   end;
MPRINT(EM_DIAGRAM):   end;
1185964   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1185965   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1185966   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1185967   +   end;
MPRINT(EM_DIAGRAM):   end;
1185968   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185969   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1185970   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1185971   +   end;
MPRINT(EM_DIAGRAM):   end;
1185972   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185973   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1185974   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1185975   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185976   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185977   +   end;
MPRINT(EM_DIAGRAM):   end;
1185978   +end;
MPRINT(EM_DIAGRAM):   end;
1185979   +
1185980   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1185981   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1185982   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1185983   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1185984   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1185985   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1185986   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185987   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185988   +end;
MPRINT(EM_DIAGRAM):   end;
1185989   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185990   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185991   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1185992   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185993   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1185994   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1185995   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1185996   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1185997   +   end;
MPRINT(EM_DIAGRAM):   end;
1185998   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1185999   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1186000   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1186001   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1186002   +   end;
MPRINT(EM_DIAGRAM):   end;
1186003   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186004   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1186005   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1186006   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1186007   +   end;
MPRINT(EM_DIAGRAM):   end;
1186008   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1186009   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1186010   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1186011   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1186012   +   end;
MPRINT(EM_DIAGRAM):   end;
1186013   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186014   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1186015   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1186016   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1186017   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186018   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186019   +   end;
MPRINT(EM_DIAGRAM):   end;
1186020   +end;
MPRINT(EM_DIAGRAM):   end;
1186021   +
1186022   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1186023   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1186024   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1186025   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1186026   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1186027   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1186028   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186029   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186030   +end;
MPRINT(EM_DIAGRAM):   end;
1186031   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186032   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186033   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1186034   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186035   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1186036   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1186037   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1186038   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1186039   +   end;
MPRINT(EM_DIAGRAM):   end;
1186040   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186041   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1186042   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1186043   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1186044   +   end;
MPRINT(EM_DIAGRAM):   end;
1186045   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186046   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1186047   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1186048   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1186049   +   end;
MPRINT(EM_DIAGRAM):   end;
1186050   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186051   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1186052   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1186053   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1186054   +   end;
MPRINT(EM_DIAGRAM):   end;
1186055   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186056   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1186057   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1186058   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1186059   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186060   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186061   +   end;
MPRINT(EM_DIAGRAM):   end;
1186062   +end;
MPRINT(EM_DIAGRAM):   end;
1186063   +
1186064   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1186065   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1186066   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1186067   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1186068   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1186069   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1186070   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186071   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186072   +end;
MPRINT(EM_DIAGRAM):   end;
1186073   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186074   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186075   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1186076   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186077   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1186078   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1186079   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1186080   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1186081   +   end;
MPRINT(EM_DIAGRAM):   end;
1186082   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1186083   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1186084   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1186085   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1186086   +   end;
MPRINT(EM_DIAGRAM):   end;
1186087   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186088   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1186089   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1186090   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1186091   +   end;
MPRINT(EM_DIAGRAM):   end;
1186092   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186093   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1186094   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1186095   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1186096   +   end;
MPRINT(EM_DIAGRAM):   end;
1186097   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186098   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1186099   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1186100   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1186101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186103   +   end;
MPRINT(EM_DIAGRAM):   end;
1186104   +end;
MPRINT(EM_DIAGRAM):   end;
1186105   +
1186106   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1186107   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1186108   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1186109   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1186110   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1186111   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1186112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186114   +end;
MPRINT(EM_DIAGRAM):   end;
1186115   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186116   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186117   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1186118   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186119   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1186120   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1186121   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1186122   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1186123   +   end;
MPRINT(EM_DIAGRAM):   end;
1186124   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186125   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1186126   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1186127   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1186128   +   end;
MPRINT(EM_DIAGRAM):   end;
1186129   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186130   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1186131   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1186132   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1186133   +   end;
MPRINT(EM_DIAGRAM):   end;
1186134   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186135   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1186136   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1186137   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1186138   +   end;
MPRINT(EM_DIAGRAM):   end;
1186139   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186140   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1186141   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1186142   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1186143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186145   +   end;
MPRINT(EM_DIAGRAM):   end;
1186146   +end;
MPRINT(EM_DIAGRAM):   end;
1186147   +
1186148   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1186149   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1186150   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1186151   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1186152   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1186153   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1186154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186156   +end;
MPRINT(EM_DIAGRAM):   end;
1186157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186159   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1186160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186161   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1186162   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1186163   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1186164   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1186165   +   end;
MPRINT(EM_DIAGRAM):   end;
1186166   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186167   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1186168   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1186169   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1186170   +   end;
MPRINT(EM_DIAGRAM):   end;
1186171   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1186172   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1186173   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1186174   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1186175   +   end;
MPRINT(EM_DIAGRAM):   end;
1186176   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186177   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1186178   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1186179   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1186180   +   end;
MPRINT(EM_DIAGRAM):   end;
1186181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186182   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1186183   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1186184   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1186185   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186186   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186187   +   end;
MPRINT(EM_DIAGRAM):   end;
1186188   +end;
MPRINT(EM_DIAGRAM):   end;
1186189   +
1186190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186191   +*** Checking missing input Interval
1186192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1186193   +
1186194   +IF NMISS(
1186195   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1186196   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1186197   +
1186198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186199   +END;
MPRINT(EM_DIAGRAM):   END;
1186200   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186201   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1186202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186203   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186204   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1186205   +END;
MPRINT(EM_DIAGRAM):   END;
1186206   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186207   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1186208   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1186209   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1186210   +END;
MPRINT(EM_DIAGRAM):   END;
1186211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186212   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1186213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186215   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1186216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186217   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186218   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1186219   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1186220   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1186221   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1186222   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1186223   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1186224   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1186225   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1186226   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1186227   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1186228   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1186229   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1186230   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1186231   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1186232   +          +    -0.04697385312971 * GRP_MntFishProducts3
1186233   +          +     0.05477300056491 * GRP_MntFishProducts4
1186234   +          +    -0.21182877070793 * GRP_MntGoldProds2
1186235   +          +    -0.06202001203906 * GRP_MntGoldProds3
1186236   +          +    -0.23297283739715 * GRP_MntGoldProds4
1186237   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1186238   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1186239   +          +     0.01711044358319 * GRP_MntMeatProducts4
1186240   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1186241   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1186242   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1186243   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1186244   +          +     0.11565917560156 * GRP_NumDistPurchases2
1186245   +          +      0.1678532898895 * GRP_NumDistPurchases3
1186246   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1186247   +          +     0.09970745707934 * GRP_NumWebPurchases2
1186248   +          +     0.02961221360107 * GRP_NumWebPurchases3
1186249   +          +     0.02261054892411 * GRP_NumWebPurchases4
1186250   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1186251   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1186252   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1186253   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1186254   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1186255   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 * 
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 * 
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 + 
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 + 
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 + 
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 + 
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 + 
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 + 
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741 
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 * 
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 * 
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 * 
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 * 
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 * 
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 + 
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 * 
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 + 
-0.07522056103469 * GRP_Recency4 ;
1186256   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1186257   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1186258   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1186259   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1186260   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1186261   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1186262   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1186263   +          +     0.26645530981311 * GRP_MntFishProducts3
1186264   +          +    -0.17631072283513 * GRP_MntFishProducts4
1186265   +          +    -0.35439521021691 * GRP_MntGoldProds2
1186266   +          +     0.11419663880206 * GRP_MntGoldProds3
1186267   +          +     0.07288749113866 * GRP_MntGoldProds4
1186268   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1186269   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1186270   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1186271   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1186272   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1186273   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1186274   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1186275   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1186276   +          +     0.10139595392447 * GRP_NumDistPurchases3
1186277   +          +     0.05251891244468 * GRP_NumDistPurchases4
1186278   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1186279   +          +      0.0263831646971 * GRP_NumWebPurchases3
1186280   +          +     0.26495059708503 * GRP_NumWebPurchases4
1186281   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1186282   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1186283   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1186284   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1186285   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1186286   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 * 
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 * 
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 + 
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 + 
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 + 
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 + 
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 + 
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 + 
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123 
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 * 
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 * 
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 * 
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 * 
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 * 
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 + 
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 * 
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 + 
-0.4970729472837 * GRP_Recency4 ;
1186287   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1186288   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1186289   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1186290   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1186291   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1186292   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1186293   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1186294   +          +     0.02714802509094 * GRP_MntFishProducts3
1186295   +          +     0.27119078554613 * GRP_MntFishProducts4
1186296   +          +     0.19322428614339 * GRP_MntGoldProds2
1186297   +          +     0.34778546410632 * GRP_MntGoldProds3
1186298   +          +    -0.06570146779096 * GRP_MntGoldProds4
1186299   +          +     0.44935275650977 * GRP_MntMeatProducts2
1186300   +          +     0.00805794344265 * GRP_MntMeatProducts3
1186301   +          +     0.02445782833023 * GRP_MntMeatProducts4
1186302   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1186303   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1186304   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1186305   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1186306   +          +     0.03481806823908 * GRP_NumDistPurchases2
1186307   +          +      0.0546202479864 * GRP_NumDistPurchases3
1186308   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1186309   +          +     0.28307550964921 * GRP_NumWebPurchases2
1186310   +          +     0.31503543231591 * GRP_NumWebPurchases3
1186311   +          +     0.24817135719308 * GRP_NumWebPurchases4
1186312   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1186313   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1186314   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1186315   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1186316   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1186317   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 * 
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 * 
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 + 
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 + 
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 + 
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 + 
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 + 
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 + 
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 + 
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 * 
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 * 
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 * 
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 * 
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 * 
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 + 
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 * 
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 + 
0.05823801065489 * GRP_Recency4 ;
1186318   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1186319   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1186320   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1186321   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1186322   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1186323   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1186324   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1186325   +          +    -0.08997232581072 * GRP_MntFishProducts3
1186326   +          +    -0.05669599356928 * GRP_MntFishProducts4
1186327   +          +      0.2199150131909 * GRP_MntGoldProds2
1186328   +          +     0.05584571259838 * GRP_MntGoldProds3
1186329   +          +    -0.13160142309505 * GRP_MntGoldProds4
1186330   +          +      0.2539849640816 * GRP_MntMeatProducts2
1186331   +          +     0.29448191059312 * GRP_MntMeatProducts3
1186332   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1186333   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1186334   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1186335   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1186336   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1186337   +          +     0.38206153529506 * GRP_NumDistPurchases2
1186338   +          +     0.08642998303162 * GRP_NumDistPurchases3
1186339   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1186340   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1186341   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1186342   +          +     0.23030028338396 * GRP_NumWebPurchases4
1186343   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1186344   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1186345   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1186346   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1186347   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1186348   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 * 
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 * 
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 + 
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 + 
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 + 
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 + 
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816 
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 * 
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 + 
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 + 
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 + 
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 + 
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 + 
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062 
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 + 
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 * 
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1186349   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1186350   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1186351   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1186352   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1186353   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1186354   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1186355   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1186356   +          +    -0.04439366722112 * GRP_MntFishProducts3
1186357   +          +    -0.22939355735301 * GRP_MntFishProducts4
1186358   +          +    -0.00367144103801 * GRP_MntGoldProds2
1186359   +          +      -0.033315128385 * GRP_MntGoldProds3
1186360   +          +     0.10655545066126 * GRP_MntGoldProds4
1186361   +          +     0.04927093675686 * GRP_MntMeatProducts2
1186362   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1186363   +          +     0.29394273234417 * GRP_MntMeatProducts4
1186364   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1186365   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1186366   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1186367   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1186368   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1186369   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1186370   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1186371   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1186372   +          +     0.37113277513001 * GRP_NumWebPurchases3
1186373   +          +     0.05720653023952 * GRP_NumWebPurchases4
1186374   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1186375   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1186376   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1186377   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1186378   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1186379   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 * 
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 * 
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 + 
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 + 
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 + 
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 + 
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686 
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 * 
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 + 
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 + 
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 + 
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 + 
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 + 
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842 
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 + 
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 * 
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1186380   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1186381   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1186382   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1186383   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1186384   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1186385   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1186386   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1186387   +          +     0.04340555393469 * GRP_MntFishProducts3
1186388   +          +    -0.20048219926361 * GRP_MntFishProducts4
1186389   +          +     0.16101452165456 * GRP_MntGoldProds2
1186390   +          +    -0.04467647211336 * GRP_MntGoldProds3
1186391   +          +     0.32142013598241 * GRP_MntGoldProds4
1186392   +          +     0.29741565154233 * GRP_MntMeatProducts2
1186393   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1186394   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1186395   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1186396   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1186397   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1186398   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1186399   +          +     0.36107050137299 * GRP_NumDistPurchases2
1186400   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1186401   +          +     0.10557004956787 * GRP_NumDistPurchases4
1186402   +          +     0.04608069099876 * GRP_NumWebPurchases2
1186403   +          +     0.15561947954396 * GRP_NumWebPurchases3
1186404   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1186405   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1186406   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1186407   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1186408   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1186409   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1186410   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 * 
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 * 
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 + 
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 + 
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 + 
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 + 
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 + 
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 + 
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 + 
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 * 
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 * 
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 * 
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 * 
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 * 
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 + 
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 * 
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 + 
-0.0282277663071 * GRP_Recency4 ;
1186411   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1186412   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1186413   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1186414   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1186415   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1186416   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1186417   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1186418   +          +    -0.20032703571491 * GRP_MntFishProducts3
1186419   +          +    -0.08348811352746 * GRP_MntFishProducts4
1186420   +          +    -0.00744131870881 * GRP_MntGoldProds2
1186421   +          +    -0.27347309859096 * GRP_MntGoldProds3
1186422   +          +    -0.04458870469416 * GRP_MntGoldProds4
1186423   +          +     0.17538261434498 * GRP_MntMeatProducts2
1186424   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1186425   +          +     0.03113249898233 * GRP_MntMeatProducts4
1186426   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1186427   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1186428   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1186429   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1186430   +          +     0.20540014620209 * GRP_NumDistPurchases2
1186431   +          +     0.17744784873298 * GRP_NumDistPurchases3
1186432   +          +      -0.003486430833 * GRP_NumDistPurchases4
1186433   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1186434   +          +     0.07245829152192 * GRP_NumWebPurchases3
1186435   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1186436   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1186437   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1186438   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1186439   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1186440   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1186441   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 * 
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 * 
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 + 
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 + 
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 + 
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 + 
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 + 
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 + 
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 + 
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 * 
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 * 
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 * 
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 * 
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 * 
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 + 
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 * 
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 + 
-0.0157357289132 * GRP_Recency4 ;
1186442   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1186443   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1186444   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1186445   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1186446   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1186447   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1186448   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1186449   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1186450   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1186451   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1186452   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1186453   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1186454   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1186455   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1186456   +END;
MPRINT(EM_DIAGRAM):   END;
1186457   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186458   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1186459   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1186460   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1186461   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1186462   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1186463   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1186464   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1186465   +END;
MPRINT(EM_DIAGRAM):   END;
1186466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186467   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1186468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186469   +
1186470   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1186471   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1186472   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1186473   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1186474   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1186475   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186476   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1186477   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1186478   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1186479   +end;
MPRINT(EM_DIAGRAM):   end;
1186480   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186481   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1186482   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1186483   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1186484   +   end;
MPRINT(EM_DIAGRAM):   end;
1186485   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1186486   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1186487   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1186488   +   end;
MPRINT(EM_DIAGRAM):   end;
1186489   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186490   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1186491   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1186492   +   end;
MPRINT(EM_DIAGRAM):   end;
1186493   +end;
MPRINT(EM_DIAGRAM):   end;
1186494   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186495   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1186496   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1186497   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1186498   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 + 
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746 
* H16 + -0.29329090231091 * H17 ;
1186499   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1186500   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1186501   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1186502   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1186503   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1186504   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1186505   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1186506   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1186507   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1186508   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1186509   +END;
MPRINT(EM_DIAGRAM):   END;
1186510   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186511   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1186512   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1186513   +END;
MPRINT(EM_DIAGRAM):   END;
1186514   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1186515   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1186516   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1186517   +END;
MPRINT(EM_DIAGRAM):   END;
1186518   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1186519   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1186520   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1186521   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1186522   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1186523   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1186524   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1186525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186526   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1186527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186528   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1186529   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1186530   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1186531   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1186532   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1186533   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1186534   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1186535   +END;
MPRINT(EM_DIAGRAM):   END;
1186536   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1186537   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1186538   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1186539   +drop
1186540   +H11
1186541   +H12
1186542   +H13
1186543   +H14
1186544   +H15
1186545   +H16
1186546   +H17
1186547   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1186548   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1186549   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1186550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186551   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1186552   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186553   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1186554   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1186555   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1186556   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1186557   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186558   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1186559   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186560   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1186561   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1186562   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1186563   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186564   +* Ensmbl3: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 4 of 10;
1186565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186567   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1186568   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1186569   +* NODE: Neural23;
MPRINT(EM_DIAGRAM):   * NODE: Neural23;
1186570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186571   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1186572   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1186573   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1186574   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1186575   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1186576   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1186577   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1186578   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1186579   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1186580   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1186581   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1186582   +LENGTH _WARN_ $4
1186583   +      F_DepVar  $ 12
1186584   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1186585   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1186586   +
1186587   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1186588   +
1186589   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1186590   +
1186591   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1186592   +
1186593   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1186594   +
1186595   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1186596   +
1186597   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1186598   +
1186599   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1186600   +
1186601   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1186602   +
1186603   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1186604   +
1186605   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1186606   +
1186607   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1186608   +
1186609   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1186610   +
1186611   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1186612   +
1186613   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1186614   +
1186615   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1186616   +
1186617   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1186618   +
1186619   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1186620   +
1186621   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1186622   +
1186623   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1186624   +
1186625   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1186626   +
1186627   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1186628   +
1186629   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1186630   +
1186631   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1186632   +
1186633   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1186634   +
1186635   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1186636   +
1186637   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1186638   +
1186639   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1186640   +
1186641   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1186642   +
1186643   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1186644   +
1186645   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1186646   +
1186647   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1186648   +
1186649   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1186650   +
1186651   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1186652   +
1186653   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1186654   +
1186655   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1186656   +
1186657   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1186658   +
1186659   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1186660   +
1186661   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1186662   +
1186663   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1186664   +
1186665   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1186666   +
1186667   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1186668   +
1186669   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1186670   +
1186671   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1186672   +
1186673   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1186674   +
1186675   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1186676   +
1186677   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1186678   +
1186679   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1186680   +
1186681   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1186682   +
1186683   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1186684   +
1186685   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1186686   +
1186687   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1186688   +
1186689   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1186690   +
1186691   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1186692   +
1186693   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1186694   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1186695   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1186696   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1186697   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186699   +end;
MPRINT(EM_DIAGRAM):   end;
1186700   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186701   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186702   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1186703   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186704   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1186705   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1186706   +   end;
MPRINT(EM_DIAGRAM):   end;
1186707   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1186708   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1186709   +   end;
MPRINT(EM_DIAGRAM):   end;
1186710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186711   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1186712   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186713   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186714   +   end;
MPRINT(EM_DIAGRAM):   end;
1186715   +end;
MPRINT(EM_DIAGRAM):   end;
1186716   +
1186717   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1186718   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1186719   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1186720   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1186721   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1186722   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1186723   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186724   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186725   +end;
MPRINT(EM_DIAGRAM):   end;
1186726   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186727   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186728   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1186729   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186730   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1186731   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1186732   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1186733   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1186734   +   end;
MPRINT(EM_DIAGRAM):   end;
1186735   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1186736   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1186737   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1186738   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1186739   +   end;
MPRINT(EM_DIAGRAM):   end;
1186740   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186741   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1186742   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1186743   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1186744   +   end;
MPRINT(EM_DIAGRAM):   end;
1186745   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186746   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1186747   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1186748   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1186749   +   end;
MPRINT(EM_DIAGRAM):   end;
1186750   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186751   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1186752   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1186753   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1186754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186756   +   end;
MPRINT(EM_DIAGRAM):   end;
1186757   +end;
MPRINT(EM_DIAGRAM):   end;
1186758   +
1186759   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1186760   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1186761   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1186762   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1186763   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1186764   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1186765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186767   +end;
MPRINT(EM_DIAGRAM):   end;
1186768   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186769   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186770   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1186771   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186772   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1186773   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1186774   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1186775   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1186776   +   end;
MPRINT(EM_DIAGRAM):   end;
1186777   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186778   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1186779   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1186780   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1186781   +   end;
MPRINT(EM_DIAGRAM):   end;
1186782   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1186783   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1186784   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1186785   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1186786   +   end;
MPRINT(EM_DIAGRAM):   end;
1186787   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186788   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1186789   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1186790   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1186791   +   end;
MPRINT(EM_DIAGRAM):   end;
1186792   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186793   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1186794   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1186795   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1186796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186798   +   end;
MPRINT(EM_DIAGRAM):   end;
1186799   +end;
MPRINT(EM_DIAGRAM):   end;
1186800   +
1186801   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1186802   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1186803   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1186804   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1186805   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1186806   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1186807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186809   +end;
MPRINT(EM_DIAGRAM):   end;
1186810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186812   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1186813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186814   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1186815   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1186816   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1186817   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1186818   +   end;
MPRINT(EM_DIAGRAM):   end;
1186819   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186820   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1186821   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1186822   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1186823   +   end;
MPRINT(EM_DIAGRAM):   end;
1186824   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186825   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1186826   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1186827   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1186828   +   end;
MPRINT(EM_DIAGRAM):   end;
1186829   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186830   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1186831   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1186832   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1186833   +   end;
MPRINT(EM_DIAGRAM):   end;
1186834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186835   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1186836   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1186837   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1186838   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186839   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186840   +   end;
MPRINT(EM_DIAGRAM):   end;
1186841   +end;
MPRINT(EM_DIAGRAM):   end;
1186842   +
1186843   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1186844   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1186845   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1186846   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1186847   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1186848   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1186849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186851   +end;
MPRINT(EM_DIAGRAM):   end;
1186852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186854   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1186855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186856   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1186857   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1186858   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1186859   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1186860   +   end;
MPRINT(EM_DIAGRAM):   end;
1186861   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186862   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1186863   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1186864   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1186865   +   end;
MPRINT(EM_DIAGRAM):   end;
1186866   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186867   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1186868   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1186869   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1186870   +   end;
MPRINT(EM_DIAGRAM):   end;
1186871   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186872   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1186873   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1186874   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1186875   +   end;
MPRINT(EM_DIAGRAM):   end;
1186876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186877   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1186878   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1186879   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1186880   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186881   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186882   +   end;
MPRINT(EM_DIAGRAM):   end;
1186883   +end;
MPRINT(EM_DIAGRAM):   end;
1186884   +
1186885   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1186886   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1186887   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1186888   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1186889   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1186890   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1186891   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186892   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186893   +end;
MPRINT(EM_DIAGRAM):   end;
1186894   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186895   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186896   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1186897   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186898   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1186899   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1186900   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1186901   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1186902   +   end;
MPRINT(EM_DIAGRAM):   end;
1186903   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186904   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1186905   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1186906   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1186907   +   end;
MPRINT(EM_DIAGRAM):   end;
1186908   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186909   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1186910   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1186911   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1186912   +   end;
MPRINT(EM_DIAGRAM):   end;
1186913   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186914   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1186915   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1186916   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1186917   +   end;
MPRINT(EM_DIAGRAM):   end;
1186918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186919   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1186920   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1186921   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1186922   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186923   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186924   +   end;
MPRINT(EM_DIAGRAM):   end;
1186925   +end;
MPRINT(EM_DIAGRAM):   end;
1186926   +
1186927   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1186928   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1186929   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1186930   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1186931   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1186932   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1186933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186935   +end;
MPRINT(EM_DIAGRAM):   end;
1186936   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186937   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186938   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1186939   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186940   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1186941   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1186942   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1186943   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1186944   +   end;
MPRINT(EM_DIAGRAM):   end;
1186945   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186946   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1186947   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1186948   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1186949   +   end;
MPRINT(EM_DIAGRAM):   end;
1186950   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186951   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1186952   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1186953   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1186954   +   end;
MPRINT(EM_DIAGRAM):   end;
1186955   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186956   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1186957   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1186958   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1186959   +   end;
MPRINT(EM_DIAGRAM):   end;
1186960   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186961   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1186962   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1186963   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1186964   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186965   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186966   +   end;
MPRINT(EM_DIAGRAM):   end;
1186967   +end;
MPRINT(EM_DIAGRAM):   end;
1186968   +
1186969   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1186970   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1186971   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1186972   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1186973   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1186974   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1186975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186977   +end;
MPRINT(EM_DIAGRAM):   end;
1186978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186979   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186980   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1186981   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186982   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1186983   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1186984   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1186985   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1186986   +   end;
MPRINT(EM_DIAGRAM):   end;
1186987   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1186988   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1186989   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1186990   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1186991   +   end;
MPRINT(EM_DIAGRAM):   end;
1186992   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1186993   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1186994   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1186995   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1186996   +   end;
MPRINT(EM_DIAGRAM):   end;
1186997   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1186998   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1186999   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1187000   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1187001   +   end;
MPRINT(EM_DIAGRAM):   end;
1187002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187003   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1187004   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1187005   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1187006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187008   +   end;
MPRINT(EM_DIAGRAM):   end;
1187009   +end;
MPRINT(EM_DIAGRAM):   end;
1187010   +
1187011   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1187012   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1187013   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1187014   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1187015   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1187016   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187017   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187018   +end;
MPRINT(EM_DIAGRAM):   end;
1187019   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187020   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187021   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1187022   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187023   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1187024   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1187025   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1187026   +   end;
MPRINT(EM_DIAGRAM):   end;
1187027   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187028   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1187029   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1187030   +   end;
MPRINT(EM_DIAGRAM):   end;
1187031   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187032   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1187033   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1187034   +   end;
MPRINT(EM_DIAGRAM):   end;
1187035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187036   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1187037   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1187038   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187039   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187040   +   end;
MPRINT(EM_DIAGRAM):   end;
1187041   +end;
MPRINT(EM_DIAGRAM):   end;
1187042   +
1187043   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1187044   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1187045   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1187046   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1187047   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1187048   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1187049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187051   +end;
MPRINT(EM_DIAGRAM):   end;
1187052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187054   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1187055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187056   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1187057   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1187058   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1187059   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1187060   +   end;
MPRINT(EM_DIAGRAM):   end;
1187061   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187062   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1187063   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1187064   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1187065   +   end;
MPRINT(EM_DIAGRAM):   end;
1187066   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187067   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1187068   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1187069   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1187070   +   end;
MPRINT(EM_DIAGRAM):   end;
1187071   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1187072   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1187073   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1187074   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1187075   +   end;
MPRINT(EM_DIAGRAM):   end;
1187076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187077   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1187078   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1187079   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1187080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187082   +   end;
MPRINT(EM_DIAGRAM):   end;
1187083   +end;
MPRINT(EM_DIAGRAM):   end;
1187084   +
1187085   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1187086   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1187087   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1187088   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1187089   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1187090   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1187091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187093   +end;
MPRINT(EM_DIAGRAM):   end;
1187094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187096   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1187097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187098   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1187099   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1187100   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1187101   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1187102   +   end;
MPRINT(EM_DIAGRAM):   end;
1187103   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187104   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1187105   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1187106   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1187107   +   end;
MPRINT(EM_DIAGRAM):   end;
1187108   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187109   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1187110   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1187111   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1187112   +   end;
MPRINT(EM_DIAGRAM):   end;
1187113   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187114   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1187115   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1187116   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1187117   +   end;
MPRINT(EM_DIAGRAM):   end;
1187118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187119   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1187120   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1187121   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1187122   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187123   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187124   +   end;
MPRINT(EM_DIAGRAM):   end;
1187125   +end;
MPRINT(EM_DIAGRAM):   end;
1187126   +
1187127   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1187128   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1187129   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1187130   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1187131   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1187132   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1187133   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187134   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187135   +end;
MPRINT(EM_DIAGRAM):   end;
1187136   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187137   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187138   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1187139   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187140   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1187141   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1187142   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1187143   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1187144   +   end;
MPRINT(EM_DIAGRAM):   end;
1187145   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1187146   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1187147   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1187148   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1187149   +   end;
MPRINT(EM_DIAGRAM):   end;
1187150   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187151   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1187152   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1187153   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1187154   +   end;
MPRINT(EM_DIAGRAM):   end;
1187155   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187156   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1187157   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1187158   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1187159   +   end;
MPRINT(EM_DIAGRAM):   end;
1187160   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187161   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1187162   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1187163   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1187164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187166   +   end;
MPRINT(EM_DIAGRAM):   end;
1187167   +end;
MPRINT(EM_DIAGRAM):   end;
1187168   +
1187169   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1187170   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1187171   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1187172   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1187173   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1187174   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1187175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187177   +end;
MPRINT(EM_DIAGRAM):   end;
1187178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187180   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1187181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187182   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1187183   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1187184   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1187185   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1187186   +   end;
MPRINT(EM_DIAGRAM):   end;
1187187   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187188   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1187189   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1187190   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1187191   +   end;
MPRINT(EM_DIAGRAM):   end;
1187192   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187193   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1187194   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1187195   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1187196   +   end;
MPRINT(EM_DIAGRAM):   end;
1187197   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187198   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1187199   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1187200   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1187201   +   end;
MPRINT(EM_DIAGRAM):   end;
1187202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187203   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1187204   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1187205   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1187206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187208   +   end;
MPRINT(EM_DIAGRAM):   end;
1187209   +end;
MPRINT(EM_DIAGRAM):   end;
1187210   +
1187211   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1187212   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1187213   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1187214   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1187215   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1187216   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1187217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187219   +end;
MPRINT(EM_DIAGRAM):   end;
1187220   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187222   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1187223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187224   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1187225   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1187226   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1187227   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1187228   +   end;
MPRINT(EM_DIAGRAM):   end;
1187229   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187230   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1187231   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1187232   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1187233   +   end;
MPRINT(EM_DIAGRAM):   end;
1187234   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1187235   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1187236   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1187237   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1187238   +   end;
MPRINT(EM_DIAGRAM):   end;
1187239   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187240   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1187241   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1187242   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1187243   +   end;
MPRINT(EM_DIAGRAM):   end;
1187244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187245   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1187246   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1187247   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1187248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187250   +   end;
MPRINT(EM_DIAGRAM):   end;
1187251   +end;
MPRINT(EM_DIAGRAM):   end;
1187252   +
1187253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187254   +*** Checking missing input Interval
1187255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1187256   +
1187257   +IF NMISS(
1187258   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1187259   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1187260   +
1187261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187262   +END;
MPRINT(EM_DIAGRAM):   END;
1187263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187264   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1187265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187266   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187267   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1187268   +END;
MPRINT(EM_DIAGRAM):   END;
1187269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187270   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1187271   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1187272   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1187273   +END;
MPRINT(EM_DIAGRAM):   END;
1187274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187275   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1187276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187278   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1187279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187280   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187281   +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
1187282   +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
1187283   +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
1187284   +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
1187285   +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
1187286   +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
1187287   +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
1187288   +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
1187289   +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
1187290   +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
1187291   +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
1187292   +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
1187293   +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
1187294   +          +    -0.08991361976323 * GRP_MntFishProducts3
1187295   +          +    -0.12439533124432 * GRP_MntFishProducts4
1187296   +          +    -0.38906628986229 * GRP_MntGoldProds2
1187297   +          +     0.02112411721097 * GRP_MntGoldProds3
1187298   +          +     0.05560214439156 * GRP_MntGoldProds4
1187299   +          +     0.07558086835487 * GRP_MntMeatProducts2
1187300   +          +    -0.24998452825562 * GRP_MntMeatProducts3
1187301   +          +    -0.11030888417179 * GRP_MntMeatProducts4
1187302   +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
1187303   +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
1187304   +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
1187305   +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
1187306   +          +    -0.26905740590447 * GRP_NumDistPurchases2
1187307   +          +     0.06889154687101 * GRP_NumDistPurchases3
1187308   +          +    -0.31591167055503 * GRP_NumDistPurchases4
1187309   +          +    -0.26862765566252 * GRP_NumWebPurchases2
1187310   +          +     0.01579611280005 * GRP_NumWebPurchases3
1187311   +          +    -0.06884702149074 * GRP_NumWebPurchases4
1187312   +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
1187313   +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
1187314   +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
1187315   +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
1187316   +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
1187317   +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
1187318   +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
1187319   +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
1187320   +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
1187321   +        GRP_Income2  +     0.28123841156129 * GRP_Income3
1187322   +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
1187323   +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
1187324   +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
1187325   +          +    -0.03033118293022 * GRP_MntFishProducts3
1187326   +          +     0.12939247483371 * GRP_MntFishProducts4
1187327   +          +     -0.1948739109476 * GRP_MntGoldProds2
1187328   +          +    -0.02487689041808 * GRP_MntGoldProds3
1187329   +          +      0.0424854445517 * GRP_MntGoldProds4
1187330   +          +    -0.77110165164491 * GRP_MntMeatProducts2
1187331   +          +    -0.04188692453988 * GRP_MntMeatProducts3
1187332   +          +     0.16117883521584 * GRP_MntMeatProducts4
1187333   +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
1187334   +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
1187335   +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
1187336   +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
1187337   +          +    -0.82361130213661 * GRP_NumDistPurchases2
1187338   +          +     0.18332361990877 * GRP_NumDistPurchases3
1187339   +          +    -0.10228504756385 * GRP_NumDistPurchases4
1187340   +          +     0.21492204339132 * GRP_NumWebPurchases2
1187341   +          +     0.22752835090931 * GRP_NumWebPurchases3
1187342   +          +    -0.04291366517536 * GRP_NumWebPurchases4
1187343   +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
1187344   +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
1187345   +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
1187346   +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
1187347   +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
1187348   +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
1187349   +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
1187350   +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
1187351   +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
1187352   +        GRP_Income2  +     0.05107107029363 * GRP_Income3
1187353   +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
1187354   +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
1187355   +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
1187356   +          +    -0.12190385526661 * GRP_MntFishProducts3
1187357   +          +     0.11161376295027 * GRP_MntFishProducts4
1187358   +          +     0.09536549249994 * GRP_MntGoldProds2
1187359   +          +    -0.39027188388377 * GRP_MntGoldProds3
1187360   +          +    -0.26960120596574 * GRP_MntGoldProds4
1187361   +          +    -0.29704810464482 * GRP_MntMeatProducts2
1187362   +          +    -0.17523279359181 * GRP_MntMeatProducts3
1187363   +          +     0.01169006509688 * GRP_MntMeatProducts4
1187364   +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
1187365   +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
1187366   +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
1187367   +          +     0.12535793167638 * GRP_NumCatalogPurchases4
1187368   +          +     0.10187760390092 * GRP_NumDistPurchases2
1187369   +          +    -0.25409837313865 * GRP_NumDistPurchases3
1187370   +          +    -0.28689980992526 * GRP_NumDistPurchases4
1187371   +          +     0.00005909057861 * GRP_NumWebPurchases2
1187372   +          +    -0.14419000341563 * GRP_NumWebPurchases3
1187373   +          +     0.09095003593529 * GRP_NumWebPurchases4
1187374   +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
1187375   +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
1187376   +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
1187377   +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
1187378   +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
1187379   +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
1187380   +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
1187381   +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
1187382   +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
1187383   +        GRP_Income2  +     0.14505600514674 * GRP_Income3
1187384   +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
1187385   +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
1187386   +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
1187387   +          +    -0.14631724639492 * GRP_MntFishProducts3
1187388   +          +     0.10002979979527 * GRP_MntFishProducts4
1187389   +          +    -0.09816985850711 * GRP_MntGoldProds2
1187390   +          +    -0.12203012318985 * GRP_MntGoldProds3
1187391   +          +    -0.01815311012777 * GRP_MntGoldProds4
1187392   +          +    -0.06619591895459 * GRP_MntMeatProducts2
1187393   +          +    -0.09072077897467 * GRP_MntMeatProducts3
1187394   +          +      0.1726695423557 * GRP_MntMeatProducts4
1187395   +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
1187396   +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
1187397   +          +     0.09645375616786 * GRP_NumCatalogPurchases3
1187398   +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
1187399   +          +      0.1854692255158 * GRP_NumDistPurchases2
1187400   +          +    -0.22330441571095 * GRP_NumDistPurchases3
1187401   +          +     0.13028835056864 * GRP_NumDistPurchases4
1187402   +          +    -0.16915625127212 * GRP_NumWebPurchases2
1187403   +          +    -0.29991156671478 * GRP_NumWebPurchases3
1187404   +          +     0.01989579721354 * GRP_NumWebPurchases4
1187405   +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
1187406   +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
1187407   +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
1187408   +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
1187409   +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
1187410   +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
1187411   +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
1187412   +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
1187413   +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
1187414   +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
1187415   +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
1187416   +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
1187417   +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
1187418   +          +     0.03013301742801 * GRP_MntFishProducts3
1187419   +          +     -0.0753778180106 * GRP_MntFishProducts4
1187420   +          +     0.22882421007211 * GRP_MntGoldProds2
1187421   +          +    -0.06369987000315 * GRP_MntGoldProds3
1187422   +          +     0.09890582278559 * GRP_MntGoldProds4
1187423   +          +    -0.21052640581149 * GRP_MntMeatProducts2
1187424   +          +    -0.00867214697179 * GRP_MntMeatProducts3
1187425   +          +     0.11929485476343 * GRP_MntMeatProducts4
1187426   +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
1187427   +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
1187428   +          +     0.06292612305453 * GRP_NumCatalogPurchases3
1187429   +          +      0.2309036660938 * GRP_NumCatalogPurchases4
1187430   +          +    -0.10062151440617 * GRP_NumDistPurchases2
1187431   +          +       0.229091410456 * GRP_NumDistPurchases3
1187432   +          +    -0.19729313017904 * GRP_NumDistPurchases4
1187433   +          +    -0.04101710595215 * GRP_NumWebPurchases2
1187434   +          +     0.13926341050039 * GRP_NumWebPurchases3
1187435   +          +    -0.04443067825367 * GRP_NumWebPurchases4
1187436   +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
1187437   +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
1187438   +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
1187439   +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
1187440   +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
1187441   +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
1187442   +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
1187443   +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
1187444   +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
1187445   +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
1187446   +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
1187447   +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
1187448   +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
1187449   +          +    -0.03224941225278 * GRP_MntFishProducts3
1187450   +          +     0.12546380835809 * GRP_MntFishProducts4
1187451   +          +     0.21690521778421 * GRP_MntGoldProds2
1187452   +          +     0.09035550488812 * GRP_MntGoldProds3
1187453   +          +    -0.03133919720822 * GRP_MntGoldProds4
1187454   +          +     0.05188619692889 * GRP_MntMeatProducts2
1187455   +          +    -0.04899714585321 * GRP_MntMeatProducts3
1187456   +          +    -0.35752492237905 * GRP_MntMeatProducts4
1187457   +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
1187458   +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
1187459   +          +     0.45534320348836 * GRP_NumCatalogPurchases3
1187460   +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
1187461   +          +     0.21080174299166 * GRP_NumDistPurchases2
1187462   +          +     0.24874731231732 * GRP_NumDistPurchases3
1187463   +          +    -0.01320035732018 * GRP_NumDistPurchases4
1187464   +          +     0.17773116301115 * GRP_NumWebPurchases2
1187465   +          +     0.13686106729498 * GRP_NumWebPurchases3
1187466   +          +     -0.0690876840257 * GRP_NumWebPurchases4
1187467   +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
1187468   +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
1187469   +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
1187470   +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
1187471   +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
1187472   +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
1187473   +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
1187474   +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
1187475   +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
1187476   +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
1187477   +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
1187478   +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
1187479   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1187480   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1187481   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1187482   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1187483   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1187484   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1187485   +END;
MPRINT(EM_DIAGRAM):   END;
1187486   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187487   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1187488   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1187489   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1187490   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1187491   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1187492   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1187493   +END;
MPRINT(EM_DIAGRAM):   END;
1187494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187495   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1187496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187497   +
1187498   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1187499   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1187500   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187501   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1187502   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1187503   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187504   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1187505   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187506   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187507   +end;
MPRINT(EM_DIAGRAM):   end;
1187508   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187509   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1187510   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1187511   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1187512   +   end;
MPRINT(EM_DIAGRAM):   end;
1187513   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1187514   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1187515   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1187516   +   end;
MPRINT(EM_DIAGRAM):   end;
1187517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187518   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1187519   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1187520   +   end;
MPRINT(EM_DIAGRAM):   end;
1187521   +end;
MPRINT(EM_DIAGRAM):   end;
1187522   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187523   +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
1187524   +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
1187525   +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
1187526   +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
1187527   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1187528   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1187529   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1187530   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1187531   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1187532   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1187533   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1187534   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1187535   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1187536   +END;
MPRINT(EM_DIAGRAM):   END;
1187537   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187538   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1187539   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1187540   +END;
MPRINT(EM_DIAGRAM):   END;
1187541   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1187542   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1187543   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1187544   +END;
MPRINT(EM_DIAGRAM):   END;
1187545   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1187546   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1187547   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1187548   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1187549   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1187550   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1187551   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1187552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187553   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1187554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187555   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1187556   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1187557   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1187558   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1187559   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1187560   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1187561   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1187562   +END;
MPRINT(EM_DIAGRAM):   END;
1187563   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187564   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1187565   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187566   +drop
1187567   +H11
1187568   +H12
1187569   +H13
1187570   +H14
1187571   +H15
1187572   +H16
1187573   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1187574   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1187575   +* Renaming variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural23;
1187576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187577   +* Renaming Posterior variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural23;
1187578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187579   +drop Neural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar1;
1187580   +Neural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar1 = P_DepVar1;
1187581   +drop Neural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar0;
1187582   +Neural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar0 = P_DepVar0;
1187583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187584   +* Renaming _WARN_ variable for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural23;
1187585   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187586   +length Neural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural23_WARN_ $4;
1187587   +drop Neural23_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural23_WARN_;
1187588   +Neural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural23_WARN_ = _WARN_;
1187589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187590   +* Ensmbl3: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 5 of 10;
1187591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187592   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187593   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1187594   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1187595   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1187596   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187597   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187598   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1187599   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187600   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1187601   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1187602   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1187603   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1187604   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1187605   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1187606   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1187607   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1187608   +LENGTH _WARN_ $4
1187609   +      F_DepVar  $ 12
1187610   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1187611   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1187612   +
1187613   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1187614   +
1187615   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1187616   +
1187617   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1187618   +
1187619   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1187620   +
1187621   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1187622   +
1187623   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1187624   +
1187625   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1187626   +
1187627   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1187628   +
1187629   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1187630   +
1187631   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1187632   +
1187633   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1187634   +
1187635   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1187636   +
1187637   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1187638   +
1187639   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1187640   +
1187641   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1187642   +
1187643   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1187644   +
1187645   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1187646   +
1187647   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1187648   +
1187649   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1187650   +
1187651   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1187652   +
1187653   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1187654   +
1187655   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1187656   +
1187657   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1187658   +
1187659   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1187660   +
1187661   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1187662   +
1187663   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1187664   +
1187665   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1187666   +
1187667   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1187668   +
1187669   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1187670   +
1187671   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1187672   +
1187673   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1187674   +
1187675   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1187676   +
1187677   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1187678   +
1187679   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1187680   +
1187681   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1187682   +
1187683   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1187684   +
1187685   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1187686   +
1187687   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1187688   +
1187689   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1187690   +
1187691   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1187692   +
1187693   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1187694   +
1187695   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1187696   +
1187697   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1187698   +
1187699   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1187700   +
1187701   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1187702   +
1187703   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1187704   +
1187705   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1187706   +
1187707   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1187708   +
1187709   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1187710   +
1187711   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1187712   +
1187713   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1187714   +
1187715   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1187716   +
1187717   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1187718   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1187719   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1187720   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1187721   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187722   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187723   +end;
MPRINT(EM_DIAGRAM):   end;
1187724   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187725   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187726   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1187727   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187728   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1187729   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1187730   +   end;
MPRINT(EM_DIAGRAM):   end;
1187731   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1187732   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1187733   +   end;
MPRINT(EM_DIAGRAM):   end;
1187734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187735   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1187736   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187737   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187738   +   end;
MPRINT(EM_DIAGRAM):   end;
1187739   +end;
MPRINT(EM_DIAGRAM):   end;
1187740   +
1187741   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1187742   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1187743   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1187744   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1187745   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1187746   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1187747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187749   +end;
MPRINT(EM_DIAGRAM):   end;
1187750   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187751   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187752   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1187753   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187754   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1187755   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1187756   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1187757   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1187758   +   end;
MPRINT(EM_DIAGRAM):   end;
1187759   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1187760   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1187761   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1187762   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1187763   +   end;
MPRINT(EM_DIAGRAM):   end;
1187764   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187765   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1187766   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1187767   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1187768   +   end;
MPRINT(EM_DIAGRAM):   end;
1187769   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187770   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1187771   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1187772   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1187773   +   end;
MPRINT(EM_DIAGRAM):   end;
1187774   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187775   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1187776   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1187777   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1187778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187780   +   end;
MPRINT(EM_DIAGRAM):   end;
1187781   +end;
MPRINT(EM_DIAGRAM):   end;
1187782   +
1187783   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1187784   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1187785   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1187786   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1187787   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1187788   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1187789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187791   +end;
MPRINT(EM_DIAGRAM):   end;
1187792   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187793   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187794   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1187795   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187796   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1187797   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1187798   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1187799   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1187800   +   end;
MPRINT(EM_DIAGRAM):   end;
1187801   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187802   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1187803   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1187804   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1187805   +   end;
MPRINT(EM_DIAGRAM):   end;
1187806   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1187807   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1187808   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1187809   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1187810   +   end;
MPRINT(EM_DIAGRAM):   end;
1187811   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187812   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1187813   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1187814   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1187815   +   end;
MPRINT(EM_DIAGRAM):   end;
1187816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187817   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1187818   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1187819   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1187820   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187821   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187822   +   end;
MPRINT(EM_DIAGRAM):   end;
1187823   +end;
MPRINT(EM_DIAGRAM):   end;
1187824   +
1187825   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1187826   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1187827   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1187828   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1187829   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1187830   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1187831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187833   +end;
MPRINT(EM_DIAGRAM):   end;
1187834   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187836   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1187837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187838   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1187839   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1187840   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1187841   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1187842   +   end;
MPRINT(EM_DIAGRAM):   end;
1187843   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187844   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1187845   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1187846   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1187847   +   end;
MPRINT(EM_DIAGRAM):   end;
1187848   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187849   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1187850   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1187851   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1187852   +   end;
MPRINT(EM_DIAGRAM):   end;
1187853   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187854   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1187855   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1187856   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1187857   +   end;
MPRINT(EM_DIAGRAM):   end;
1187858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187859   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1187860   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1187861   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1187862   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187863   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187864   +   end;
MPRINT(EM_DIAGRAM):   end;
1187865   +end;
MPRINT(EM_DIAGRAM):   end;
1187866   +
1187867   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1187868   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1187869   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1187870   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1187871   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1187872   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1187873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187875   +end;
MPRINT(EM_DIAGRAM):   end;
1187876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187878   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1187879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187880   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1187881   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1187882   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1187883   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1187884   +   end;
MPRINT(EM_DIAGRAM):   end;
1187885   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187886   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1187887   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1187888   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1187889   +   end;
MPRINT(EM_DIAGRAM):   end;
1187890   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187891   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1187892   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1187893   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1187894   +   end;
MPRINT(EM_DIAGRAM):   end;
1187895   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187896   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1187897   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1187898   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1187899   +   end;
MPRINT(EM_DIAGRAM):   end;
1187900   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187901   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1187902   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1187903   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1187904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187906   +   end;
MPRINT(EM_DIAGRAM):   end;
1187907   +end;
MPRINT(EM_DIAGRAM):   end;
1187908   +
1187909   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1187910   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1187911   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1187912   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1187913   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1187914   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1187915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187917   +end;
MPRINT(EM_DIAGRAM):   end;
1187918   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187919   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187920   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1187921   +   %DMNORMIP( _dm12 )
The SAS System

MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187922   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1187923   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1187924   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1187925   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1187926   +   end;
MPRINT(EM_DIAGRAM):   end;
1187927   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187928   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1187929   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1187930   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1187931   +   end;
MPRINT(EM_DIAGRAM):   end;
1187932   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187933   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1187934   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1187935   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1187936   +   end;
MPRINT(EM_DIAGRAM):   end;
1187937   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187938   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1187939   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1187940   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1187941   +   end;
MPRINT(EM_DIAGRAM):   end;
1187942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187943   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1187944   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1187945   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1187946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187948   +   end;
MPRINT(EM_DIAGRAM):   end;
1187949   +end;
MPRINT(EM_DIAGRAM):   end;
1187950   +
1187951   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1187952   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1187953   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1187954   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1187955   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1187956   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1187957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187959   +end;
MPRINT(EM_DIAGRAM):   end;
1187960   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187961   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187962   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1187963   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187964   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1187965   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1187966   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1187967   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1187968   +   end;
MPRINT(EM_DIAGRAM):   end;
1187969   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1187970   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1187971   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1187972   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1187973   +   end;
MPRINT(EM_DIAGRAM):   end;
1187974   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1187975   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1187976   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1187977   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1187978   +   end;
MPRINT(EM_DIAGRAM):   end;
1187979   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1187980   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1187981   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1187982   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1187983   +   end;
MPRINT(EM_DIAGRAM):   end;
1187984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187985   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1187986   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1187987   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1187988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187990   +   end;
MPRINT(EM_DIAGRAM):   end;
1187991   +end;
MPRINT(EM_DIAGRAM):   end;
1187992   +
1187993   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1187994   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1187995   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1187996   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1187997   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1187998   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1187999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188001   +end;
MPRINT(EM_DIAGRAM):   end;
1188002   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188003   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188004   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1188005   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188006   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188007   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1188008   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1188009   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1188010   +   end;
MPRINT(EM_DIAGRAM):   end;
1188011   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188012   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1188013   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1188014   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1188015   +   end;
MPRINT(EM_DIAGRAM):   end;
1188016   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188017   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1188018   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1188019   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1188020   +   end;
MPRINT(EM_DIAGRAM):   end;
1188021   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188022   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1188023   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1188024   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1188025   +   end;
MPRINT(EM_DIAGRAM):   end;
1188026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188027   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1188028   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1188029   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1188030   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188031   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188032   +   end;
MPRINT(EM_DIAGRAM):   end;
1188033   +end;
MPRINT(EM_DIAGRAM):   end;
1188034   +
1188035   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1188036   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1188037   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1188038   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1188039   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1188040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188042   +end;
MPRINT(EM_DIAGRAM):   end;
1188043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188045   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1188046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188047   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188048   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1188049   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1188050   +   end;
MPRINT(EM_DIAGRAM):   end;
1188051   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188052   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1188053   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1188054   +   end;
MPRINT(EM_DIAGRAM):   end;
1188055   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188056   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1188057   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1188058   +   end;
MPRINT(EM_DIAGRAM):   end;
1188059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188060   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1188061   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1188062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188064   +   end;
MPRINT(EM_DIAGRAM):   end;
1188065   +end;
MPRINT(EM_DIAGRAM):   end;
1188066   +
1188067   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1188068   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1188069   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1188070   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1188071   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1188072   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1188073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188075   +end;
MPRINT(EM_DIAGRAM):   end;
1188076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188078   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1188079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188080   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1188081   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1188082   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1188083   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1188084   +   end;
MPRINT(EM_DIAGRAM):   end;
1188085   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188086   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1188087   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1188088   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1188089   +   end;
MPRINT(EM_DIAGRAM):   end;
1188090   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188091   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1188092   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1188093   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1188094   +   end;
MPRINT(EM_DIAGRAM):   end;
1188095   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1188096   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1188097   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1188098   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1188099   +   end;
MPRINT(EM_DIAGRAM):   end;
1188100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188101   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1188102   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1188103   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1188104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188106   +   end;
MPRINT(EM_DIAGRAM):   end;
1188107   +end;
MPRINT(EM_DIAGRAM):   end;
1188108   +
1188109   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1188110   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1188111   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1188112   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1188113   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1188114   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1188115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188117   +end;
MPRINT(EM_DIAGRAM):   end;
1188118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188120   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1188121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188122   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188123   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1188124   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1188125   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1188126   +   end;
MPRINT(EM_DIAGRAM):   end;
1188127   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188128   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1188129   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1188130   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1188131   +   end;
MPRINT(EM_DIAGRAM):   end;
1188132   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188133   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1188134   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1188135   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1188136   +   end;
MPRINT(EM_DIAGRAM):   end;
1188137   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188138   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1188139   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1188140   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1188141   +   end;
MPRINT(EM_DIAGRAM):   end;
1188142   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188143   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1188144   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1188145   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1188146   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188147   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188148   +   end;
MPRINT(EM_DIAGRAM):   end;
1188149   +end;
MPRINT(EM_DIAGRAM):   end;
1188150   +
1188151   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1188152   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1188153   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1188154   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1188155   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1188156   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1188157   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188159   +end;
MPRINT(EM_DIAGRAM):   end;
1188160   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188161   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188162   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1188163   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188164   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1188165   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1188166   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1188167   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1188168   +   end;
MPRINT(EM_DIAGRAM):   end;
1188169   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1188170   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1188171   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1188172   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1188173   +   end;
MPRINT(EM_DIAGRAM):   end;
1188174   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188175   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1188176   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1188177   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1188178   +   end;
MPRINT(EM_DIAGRAM):   end;
1188179   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188180   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1188181   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1188182   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1188183   +   end;
MPRINT(EM_DIAGRAM):   end;
1188184   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188185   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1188186   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1188187   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1188188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188190   +   end;
MPRINT(EM_DIAGRAM):   end;
1188191   +end;
MPRINT(EM_DIAGRAM):   end;
1188192   +
1188193   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1188194   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1188195   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1188196   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1188197   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1188198   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1188199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188201   +end;
MPRINT(EM_DIAGRAM):   end;
1188202   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188204   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1188205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188206   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188207   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1188208   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1188209   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1188210   +   end;
MPRINT(EM_DIAGRAM):   end;
1188211   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188212   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1188213   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1188214   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1188215   +   end;
MPRINT(EM_DIAGRAM):   end;
1188216   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188217   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1188218   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1188219   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1188220   +   end;
MPRINT(EM_DIAGRAM):   end;
1188221   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188222   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1188223   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1188224   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1188225   +   end;
MPRINT(EM_DIAGRAM):   end;
1188226   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188227   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1188228   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1188229   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1188230   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188231   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188232   +   end;
MPRINT(EM_DIAGRAM):   end;
1188233   +end;
MPRINT(EM_DIAGRAM):   end;
1188234   +
1188235   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1188236   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1188237   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1188238   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1188239   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1188240   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1188241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188243   +end;
MPRINT(EM_DIAGRAM):   end;
1188244   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188246   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1188247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188248   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1188249   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1188250   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1188251   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1188252   +   end;
MPRINT(EM_DIAGRAM):   end;
1188253   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188254   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1188255   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1188256   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1188257   +   end;
MPRINT(EM_DIAGRAM):   end;
1188258   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1188259   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1188260   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1188261   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1188262   +   end;
MPRINT(EM_DIAGRAM):   end;
1188263   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188264   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1188265   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1188266   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1188267   +   end;
MPRINT(EM_DIAGRAM):   end;
1188268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188269   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1188270   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1188271   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1188272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188274   +   end;
MPRINT(EM_DIAGRAM):   end;
1188275   +end;
MPRINT(EM_DIAGRAM):   end;
1188276   +
1188277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188278   +*** Checking missing input Interval
1188279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1188280   +
1188281   +IF NMISS(
1188282   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1188283   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1188284   +
1188285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188286   +END;
MPRINT(EM_DIAGRAM):   END;
1188287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188288   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1188289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188291   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1188292   +END;
MPRINT(EM_DIAGRAM):   END;
1188293   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188294   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1188295   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1188296   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1188297   +END;
MPRINT(EM_DIAGRAM):   END;
1188298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188299   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1188300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188302   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1188303   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188304   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188305   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1188306   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1188307   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1188308   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1188309   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1188310   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1188311   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1188312   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1188313   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1188314   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1188315   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1188316   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1188317   +          +     0.03411739869638 * GRP_MntFishProducts3
1188318   +          +      -0.083693402353 * GRP_MntFishProducts4
1188319   +          +     -0.1318128730187 * GRP_MntGoldProds2
1188320   +          +     -0.0614737729382 * GRP_MntGoldProds3
1188321   +          +    -0.00372986687449 * GRP_MntGoldProds4
1188322   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1188323   +          +     0.01519664718127 * GRP_MntMeatProducts3
1188324   +          +     0.29997111548812 * GRP_MntMeatProducts4
1188325   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1188326   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1188327   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1188328   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1188329   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1188330   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1188331   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1188332   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1188333   +          +     0.02966820025811 * GRP_NumWebPurchases3
1188334   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1188335   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1188336   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1188337   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1188338   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1188339   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1188340   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 * 
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 * 
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 + 
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 + 
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 + 
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 + 
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 + 
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 + 
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 * 
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 * 
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 * 
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 * 
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 * 
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 * 
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 + 
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 * 
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 + 
-0.15382569411658 * GRP_Recency4 ;
1188341   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1188342   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1188343   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1188344   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1188345   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1188346   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1188347   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1188348   +          +     0.00842475350903 * GRP_MntFishProducts3
1188349   +          +     -0.1623103908885 * GRP_MntFishProducts4
1188350   +          +    -0.23845524931139 * GRP_MntGoldProds2
1188351   +          +    -0.07128567155438 * GRP_MntGoldProds3
1188352   +          +     0.25778887379163 * GRP_MntGoldProds4
1188353   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1188354   +          +     0.06269922653052 * GRP_MntMeatProducts3
1188355   +          +      0.2587215409794 * GRP_MntMeatProducts4
1188356   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1188357   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1188358   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1188359   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1188360   +          +     0.12374838743082 * GRP_NumDistPurchases2
1188361   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1188362   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1188363   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1188364   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1188365   +          +     0.09237237622553 * GRP_NumWebPurchases4
1188366   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1188367   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1188368   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1188369   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1188370   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1188371   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 * 
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 * 
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 + 
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 + 
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 + 
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 + 
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 + 
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 + 
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476 
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 * 
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 * 
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 * 
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 * 
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 * 
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 + 
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 * 
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 + 
0.00206593904485 * GRP_Recency4 ;
1188372   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1188373   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1188374   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1188375   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1188376   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1188377   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1188378   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1188379   +          +    -0.07078012229572 * GRP_MntFishProducts3
1188380   +          +    -0.14569186671189 * GRP_MntFishProducts4
1188381   +          +     0.14963390032413 * GRP_MntGoldProds2
1188382   +          +    -0.11869917970226 * GRP_MntGoldProds3
1188383   +          +     0.25943105626615 * GRP_MntGoldProds4
1188384   +          +     0.36609689271233 * GRP_MntMeatProducts2
1188385   +          +     0.10969864655073 * GRP_MntMeatProducts3
1188386   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1188387   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1188388   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1188389   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1188390   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1188391   +          +     0.08068432649382 * GRP_NumDistPurchases2
1188392   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1188393   +          +     0.26738740475822 * GRP_NumDistPurchases4
1188394   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1188395   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1188396   +          +     0.01349113315351 * GRP_NumWebPurchases4
1188397   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1188398   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1188399   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1188400   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1188401   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1188402   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 * 
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 * 
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 + 
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 + 
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 + 
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 + 
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 + 
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 + 
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 + 
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 * 
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 * 
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 * 
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 * 
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 * 
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 + 
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 * 
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 + 
0.28490847560375 * GRP_Recency4 ;
1188403   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1188404   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1188405   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1188406   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1188407   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1188408   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1188409   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1188410   +          +    -0.18334484867808 * GRP_MntFishProducts3
1188411   +          +     0.13484477561766 * GRP_MntFishProducts4
1188412   +          +    -0.05145913380692 * GRP_MntGoldProds2
1188413   +          +     0.04459987080173 * GRP_MntGoldProds3
1188414   +          +     0.01539767655772 * GRP_MntGoldProds4
1188415   +          +     0.26537148543352 * GRP_MntMeatProducts2
1188416   +          +     0.22913678530176 * GRP_MntMeatProducts3
1188417   +          +     0.21262490658374 * GRP_MntMeatProducts4
1188418   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1188419   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1188420   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1188421   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1188422   +          +     0.09224372228857 * GRP_NumDistPurchases2
1188423   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1188424   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1188425   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1188426   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1188427   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1188428   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1188429   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1188430   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1188431   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1188432   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1188433   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 * 
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 * 
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 + 
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 + 
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 + 
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 + 
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352 
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 * 
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 + 
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 + 
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 + 
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 + 
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 + 
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827 
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 + 
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 * 
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1188434   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1188435   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1188436   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1188437   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1188438   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1188439   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1188440   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1188441   +          +    -0.08952948139975 * GRP_MntFishProducts3
1188442   +          +     0.15338133379465 * GRP_MntFishProducts4
1188443   +          +     0.04821845492824 * GRP_MntGoldProds2
1188444   +          +     0.20117781904284 * GRP_MntGoldProds3
1188445   +          +     0.13013396690778 * GRP_MntGoldProds4
1188446   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1188447   +          +     0.03161017721112 * GRP_MntMeatProducts3
1188448   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1188449   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1188450   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1188451   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1188452   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1188453   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1188454   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1188455   +          +      0.0473480026433 * GRP_NumDistPurchases4
1188456   +          +     0.03132883547053 * GRP_NumWebPurchases2
1188457   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1188458   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1188459   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1188460   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1188461   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1188462   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1188463   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1188464   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 * 
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 * 
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 + 
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 + 
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 + 
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 + 
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 + 
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 + 
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786 
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 * 
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 * 
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 * 
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 * 
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 * 
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 + 
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 * 
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 + 
-0.28363324780869 * GRP_Recency4 ;
1188465   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1188466   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1188467   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1188468   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1188469   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1188470   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1188471   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1188472   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1188473   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1188474   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1188475   +END;
MPRINT(EM_DIAGRAM):   END;
1188476   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188477   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1188478   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1188479   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1188480   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1188481   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1188482   +END;
MPRINT(EM_DIAGRAM):   END;
1188483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188484   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1188485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188486   +
1188487   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1188488   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1188489   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1188490   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1188491   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1188492   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188493   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1188494   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188495   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188496   +end;
MPRINT(EM_DIAGRAM):   end;
1188497   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188498   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1188499   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1188500   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1188501   +   end;
MPRINT(EM_DIAGRAM):   end;
1188502   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1188503   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1188504   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1188505   +   end;
MPRINT(EM_DIAGRAM):   end;
1188506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188507   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1188508   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1188509   +   end;
MPRINT(EM_DIAGRAM):   end;
1188510   +end;
MPRINT(EM_DIAGRAM):   end;
1188511   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1188512   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1188513   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1188514   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 + 
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1188515   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1188516   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1188517   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1188518   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1188519   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1188520   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1188521   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1188522   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1188523   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1188524   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1188525   +END;
MPRINT(EM_DIAGRAM):   END;
1188526   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1188527   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1188528   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1188529   +END;
MPRINT(EM_DIAGRAM):   END;
1188530   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1188531   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1188532   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1188533   +END;
MPRINT(EM_DIAGRAM):   END;
1188534   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1188535   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1188536   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1188537   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1188538   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1188539   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1188540   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1188541   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188542   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1188543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1188544   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1188545   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1188546   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1188547   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1188548   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1188549   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1188550   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1188551   +END;
MPRINT(EM_DIAGRAM):   END;
1188552   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188553   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1188554   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1188555   +drop
1188556   +H11
1188557   +H12
1188558   +H13
1188559   +H14
1188560   +H15
1188561   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1188562   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1188563   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1188564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188565   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1188566   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188567   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1188568   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1188569   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1188570   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1188571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188572   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1188573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188574   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1188575   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1188576   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1188577   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188578   +* Ensmbl3: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 6 of 10;
1188579   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188581   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1188582   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1188583   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1188584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188585   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1188586   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1188587   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1188588   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1188589   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1188590   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1188591   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1188592   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1188593   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1188594   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1188595   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1188596   +LENGTH _WARN_ $4
1188597   +      F_DepVar  $ 12
1188598   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1188599   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1188600   +
1188601   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1188602   +
1188603   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1188604   +
1188605   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1188606   +
1188607   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1188608   +
1188609   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1188610   +
1188611   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1188612   +
1188613   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1188614   +
1188615   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1188616   +
1188617   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1188618   +
1188619   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1188620   +
1188621   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1188622   +
1188623   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1188624   +
1188625   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1188626   +
1188627   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1188628   +
1188629   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1188630   +
1188631   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1188632   +
1188633   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1188634   +
1188635   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1188636   +
1188637   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1188638   +
1188639   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1188640   +
1188641   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1188642   +
1188643   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1188644   +
1188645   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1188646   +
1188647   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1188648   +
1188649   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1188650   +
1188651   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1188652   +
1188653   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1188654   +
1188655   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1188656   +
1188657   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1188658   +
1188659   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1188660   +
1188661   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1188662   +
1188663   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1188664   +
1188665   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1188666   +
1188667   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1188668   +
1188669   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1188670   +
1188671   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1188672   +
1188673   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1188674   +
1188675   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1188676   +
1188677   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1188678   +
1188679   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1188680   +
1188681   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1188682   +
1188683   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1188684   +
1188685   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1188686   +
1188687   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1188688   +
1188689   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1188690   +
1188691   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1188692   +
1188693   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1188694   +
1188695   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1188696   +
1188697   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1188698   +
1188699   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1188700   +
1188701   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1188702   +
1188703   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1188704   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1188705   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1188706   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1188707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188709   +end;
MPRINT(EM_DIAGRAM):   end;
1188710   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188712   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1188713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188714   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1188715   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1188716   +   end;
MPRINT(EM_DIAGRAM):   end;
1188717   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1188718   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1188719   +   end;
MPRINT(EM_DIAGRAM):   end;
1188720   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188721   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1188722   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188723   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188724   +   end;
MPRINT(EM_DIAGRAM):   end;
1188725   +end;
MPRINT(EM_DIAGRAM):   end;
1188726   +
1188727   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1188728   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1188729   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1188730   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1188731   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1188732   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1188733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188735   +end;
MPRINT(EM_DIAGRAM):   end;
1188736   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188737   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188738   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1188739   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188740   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1188741   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1188742   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1188743   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1188744   +   end;
MPRINT(EM_DIAGRAM):   end;
1188745   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1188746   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1188747   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1188748   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1188749   +   end;
MPRINT(EM_DIAGRAM):   end;
1188750   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188751   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1188752   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1188753   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1188754   +   end;
MPRINT(EM_DIAGRAM):   end;
1188755   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188756   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1188757   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1188758   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1188759   +   end;
MPRINT(EM_DIAGRAM):   end;
1188760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188761   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1188762   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1188763   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1188764   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188765   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188766   +   end;
MPRINT(EM_DIAGRAM):   end;
1188767   +end;
MPRINT(EM_DIAGRAM):   end;
1188768   +
1188769   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1188770   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1188771   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1188772   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1188773   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1188774   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1188775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188777   +end;
MPRINT(EM_DIAGRAM):   end;
1188778   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188779   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188780   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1188781   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188782   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1188783   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1188784   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1188785   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1188786   +   end;
MPRINT(EM_DIAGRAM):   end;
1188787   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188788   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1188789   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1188790   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1188791   +   end;
MPRINT(EM_DIAGRAM):   end;
1188792   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1188793   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1188794   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1188795   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1188796   +   end;
MPRINT(EM_DIAGRAM):   end;
1188797   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188798   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1188799   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1188800   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1188801   +   end;
MPRINT(EM_DIAGRAM):   end;
1188802   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188803   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1188804   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1188805   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1188806   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188807   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188808   +   end;
MPRINT(EM_DIAGRAM):   end;
1188809   +end;
MPRINT(EM_DIAGRAM):   end;
1188810   +
1188811   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1188812   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1188813   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1188814   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1188815   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1188816   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1188817   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188818   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188819   +end;
MPRINT(EM_DIAGRAM):   end;
1188820   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188821   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188822   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1188823   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188824   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188825   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1188826   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1188827   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1188828   +   end;
MPRINT(EM_DIAGRAM):   end;
1188829   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188830   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1188831   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1188832   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1188833   +   end;
MPRINT(EM_DIAGRAM):   end;
1188834   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188835   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1188836   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1188837   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1188838   +   end;
MPRINT(EM_DIAGRAM):   end;
1188839   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188840   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1188841   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1188842   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1188843   +   end;
MPRINT(EM_DIAGRAM):   end;
1188844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188845   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1188846   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1188847   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1188848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188850   +   end;
MPRINT(EM_DIAGRAM):   end;
1188851   +end;
MPRINT(EM_DIAGRAM):   end;
1188852   +
1188853   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1188854   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1188855   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1188856   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1188857   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1188858   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1188859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188861   +end;
MPRINT(EM_DIAGRAM):   end;
1188862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188863   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188864   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1188865   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188866   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188867   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1188868   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1188869   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1188870   +   end;
MPRINT(EM_DIAGRAM):   end;
1188871   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188872   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1188873   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1188874   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1188875   +   end;
MPRINT(EM_DIAGRAM):   end;
1188876   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188877   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1188878   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1188879   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1188880   +   end;
MPRINT(EM_DIAGRAM):   end;
1188881   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188882   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1188883   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1188884   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1188885   +   end;
MPRINT(EM_DIAGRAM):   end;
1188886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188887   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1188888   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1188889   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1188890   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188891   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188892   +   end;
MPRINT(EM_DIAGRAM):   end;
1188893   +end;
MPRINT(EM_DIAGRAM):   end;
1188894   +
1188895   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1188896   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1188897   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1188898   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1188899   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1188900   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1188901   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188902   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188903   +end;
MPRINT(EM_DIAGRAM):   end;
1188904   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188905   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188906   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1188907   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188908   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188909   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1188910   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1188911   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1188912   +   end;
MPRINT(EM_DIAGRAM):   end;
1188913   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188914   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1188915   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1188916   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1188917   +   end;
MPRINT(EM_DIAGRAM):   end;
1188918   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188919   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1188920   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1188921   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1188922   +   end;
MPRINT(EM_DIAGRAM):   end;
1188923   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188924   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1188925   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1188926   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1188927   +   end;
MPRINT(EM_DIAGRAM):   end;
1188928   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188929   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1188930   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1188931   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1188932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188934   +   end;
MPRINT(EM_DIAGRAM):   end;
1188935   +end;
MPRINT(EM_DIAGRAM):   end;
1188936   +
1188937   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1188938   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1188939   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1188940   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1188941   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1188942   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1188943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188945   +end;
MPRINT(EM_DIAGRAM):   end;
1188946   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188947   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188948   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1188949   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188950   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188951   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1188952   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1188953   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1188954   +   end;
MPRINT(EM_DIAGRAM):   end;
1188955   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1188956   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1188957   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1188958   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1188959   +   end;
MPRINT(EM_DIAGRAM):   end;
1188960   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188961   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1188962   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1188963   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1188964   +   end;
MPRINT(EM_DIAGRAM):   end;
1188965   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1188966   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1188967   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1188968   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1188969   +   end;
MPRINT(EM_DIAGRAM):   end;
1188970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188971   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1188972   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1188973   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1188974   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188975   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188976   +   end;
MPRINT(EM_DIAGRAM):   end;
1188977   +end;
MPRINT(EM_DIAGRAM):   end;
1188978   +
1188979   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1188980   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1188981   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1188982   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1188983   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1188984   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1188985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188987   +end;
MPRINT(EM_DIAGRAM):   end;
1188988   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188990   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1188991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188992   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1188993   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1188994   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1188995   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1188996   +   end;
MPRINT(EM_DIAGRAM):   end;
1188997   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1188998   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1188999   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1189000   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1189001   +   end;
MPRINT(EM_DIAGRAM):   end;
1189002   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189003   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1189004   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1189005   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1189006   +   end;
MPRINT(EM_DIAGRAM):   end;
1189007   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189008   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1189009   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1189010   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1189011   +   end;
MPRINT(EM_DIAGRAM):   end;
1189012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189013   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1189014   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1189015   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1189016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189018   +   end;
MPRINT(EM_DIAGRAM):   end;
1189019   +end;
MPRINT(EM_DIAGRAM):   end;
1189020   +
1189021   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1189022   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1189023   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1189024   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1189025   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1189026   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189028   +end;
MPRINT(EM_DIAGRAM):   end;
1189029   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189030   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189031   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1189032   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189033   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189034   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1189035   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1189036   +   end;
MPRINT(EM_DIAGRAM):   end;
1189037   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189038   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1189039   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1189040   +   end;
MPRINT(EM_DIAGRAM):   end;
1189041   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189042   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1189043   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1189044   +   end;
MPRINT(EM_DIAGRAM):   end;
1189045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189046   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1189047   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1189048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189050   +   end;
MPRINT(EM_DIAGRAM):   end;
1189051   +end;
MPRINT(EM_DIAGRAM):   end;
1189052   +
1189053   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1189054   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1189055   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1189056   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1189057   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1189058   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1189059   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189060   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189061   +end;
MPRINT(EM_DIAGRAM):   end;
1189062   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189063   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189064   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1189065   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189066   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1189067   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1189068   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1189069   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1189070   +   end;
MPRINT(EM_DIAGRAM):   end;
1189071   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189072   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1189073   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1189074   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1189075   +   end;
MPRINT(EM_DIAGRAM):   end;
1189076   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189077   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1189078   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1189079   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1189080   +   end;
MPRINT(EM_DIAGRAM):   end;
1189081   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1189082   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1189083   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1189084   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1189085   +   end;
MPRINT(EM_DIAGRAM):   end;
1189086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189087   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1189088   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1189089   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1189090   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189091   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189092   +   end;
MPRINT(EM_DIAGRAM):   end;
1189093   +end;
MPRINT(EM_DIAGRAM):   end;
1189094   +
1189095   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1189096   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1189097   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1189098   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1189099   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1189100   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1189101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189103   +end;
MPRINT(EM_DIAGRAM):   end;
1189104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189106   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1189107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189108   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189109   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1189110   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1189111   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1189112   +   end;
MPRINT(EM_DIAGRAM):   end;
1189113   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189114   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1189115   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1189116   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1189117   +   end;
MPRINT(EM_DIAGRAM):   end;
1189118   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189119   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1189120   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1189121   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1189122   +   end;
MPRINT(EM_DIAGRAM):   end;
1189123   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189124   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1189125   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1189126   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1189127   +   end;
MPRINT(EM_DIAGRAM):   end;
1189128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189129   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1189130   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1189131   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1189132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189134   +   end;
MPRINT(EM_DIAGRAM):   end;
1189135   +end;
MPRINT(EM_DIAGRAM):   end;
1189136   +
1189137   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1189138   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1189139   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1189140   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1189141   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1189142   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1189143   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189145   +end;
MPRINT(EM_DIAGRAM):   end;
1189146   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189147   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189148   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1189149   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189150   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1189151   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1189152   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1189153   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1189154   +   end;
MPRINT(EM_DIAGRAM):   end;
1189155   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1189156   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1189157   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1189158   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1189159   +   end;
MPRINT(EM_DIAGRAM):   end;
1189160   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189161   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1189162   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1189163   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1189164   +   end;
MPRINT(EM_DIAGRAM):   end;
1189165   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189166   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1189167   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1189168   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1189169   +   end;
MPRINT(EM_DIAGRAM):   end;
1189170   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189171   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1189172   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1189173   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1189174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189176   +   end;
MPRINT(EM_DIAGRAM):   end;
1189177   +end;
MPRINT(EM_DIAGRAM):   end;
1189178   +
1189179   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1189180   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1189181   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1189182   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1189183   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1189184   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1189185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189187   +end;
MPRINT(EM_DIAGRAM):   end;
1189188   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189190   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1189191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189192   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189193   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1189194   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1189195   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1189196   +   end;
MPRINT(EM_DIAGRAM):   end;
1189197   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189198   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1189199   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1189200   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1189201   +   end;
MPRINT(EM_DIAGRAM):   end;
1189202   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189203   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1189204   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1189205   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1189206   +   end;
MPRINT(EM_DIAGRAM):   end;
1189207   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189208   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1189209   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1189210   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1189211   +   end;
MPRINT(EM_DIAGRAM):   end;
1189212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189213   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1189214   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1189215   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1189216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189218   +   end;
MPRINT(EM_DIAGRAM):   end;
1189219   +end;
MPRINT(EM_DIAGRAM):   end;
1189220   +
1189221   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1189222   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1189223   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1189224   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1189225   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1189226   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1189227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189229   +end;
MPRINT(EM_DIAGRAM):   end;
1189230   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189232   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1189233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189234   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1189235   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1189236   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1189237   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1189238   +   end;
MPRINT(EM_DIAGRAM):   end;
1189239   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189240   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1189241   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1189242   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1189243   +   end;
MPRINT(EM_DIAGRAM):   end;
1189244   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1189245   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1189246   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1189247   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1189248   +   end;
MPRINT(EM_DIAGRAM):   end;
1189249   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189250   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1189251   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1189252   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1189253   +   end;
MPRINT(EM_DIAGRAM):   end;
1189254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189255   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1189256   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1189257   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1189258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189260   +   end;
MPRINT(EM_DIAGRAM):   end;
1189261   +end;
MPRINT(EM_DIAGRAM):   end;
1189262   +
1189263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189264   +*** Checking missing input Interval
1189265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1189266   +
1189267   +IF NMISS(
1189268   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1189269   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1189270   +
1189271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189272   +END;
MPRINT(EM_DIAGRAM):   END;
1189273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189274   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1189275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189276   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189277   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1189278   +END;
MPRINT(EM_DIAGRAM):   END;
1189279   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189280   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1189281   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1189282   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1189283   +END;
MPRINT(EM_DIAGRAM):   END;
1189284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189285   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1189286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189288   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1189289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189290   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189291   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1189292   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1189293   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1189294   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1189295   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1189296   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1189297   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1189298   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1189299   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1189300   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1189301   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1189302   +          +    -0.14978605827752 * GRP_MntFishProducts3
1189303   +          +     0.22642470616542 * GRP_MntFishProducts4
1189304   +          +     0.07604404821672 * GRP_MntGoldProds2
1189305   +          +     0.04745212568332 * GRP_MntGoldProds3
1189306   +          +    -0.10028215217028 * GRP_MntGoldProds4
1189307   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1189308   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1189309   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1189310   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1189311   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1189312   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1189313   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1189314   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1189315   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1189316   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1189317   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1189318   +          +     0.24754701690398 * GRP_NumWebPurchases3
1189319   +          +     0.01530465573539 * GRP_NumWebPurchases4
1189320   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1189321   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1189322   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1189323   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1189324   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1189325   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
1189326   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1189327   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1189328   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1189329   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1189330   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1189331   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1189332   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1189333   +          +    -0.12626287803422 * GRP_MntFishProducts3
1189334   +          +    -0.42885022606866 * GRP_MntFishProducts4
1189335   +          +    -0.08312331608509 * GRP_MntGoldProds2
1189336   +          +    -0.20061238652989 * GRP_MntGoldProds3
1189337   +          +      0.2540651659901 * GRP_MntGoldProds4
1189338   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1189339   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1189340   +          +     0.40616704937625 * GRP_MntMeatProducts4
1189341   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1189342   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1189343   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1189344   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1189345   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1189346   +          +     0.10966715611059 * GRP_NumDistPurchases3
1189347   +          +      -0.043035493739 * GRP_NumDistPurchases4
1189348   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1189349   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1189350   +          +     0.26936545488609 * GRP_NumWebPurchases4
1189351   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1189352   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1189353   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1189354   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1189355   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1189356   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
1189357   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1189358   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1189359   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1189360   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1189361   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1189362   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1189363   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1189364   +          +     0.07001619920815 * GRP_MntFishProducts3
1189365   +          +     0.07735498521359 * GRP_MntFishProducts4
1189366   +          +    -0.15884098938162 * GRP_MntGoldProds2
1189367   +          +    -0.27657428867783 * GRP_MntGoldProds3
1189368   +          +     -0.1812542301124 * GRP_MntGoldProds4
1189369   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1189370   +          +     0.00010942539908 * GRP_MntMeatProducts3
1189371   +          +     0.03587382246671 * GRP_MntMeatProducts4
1189372   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1189373   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1189374   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1189375   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1189376   +          +      -0.481887498986 * GRP_NumDistPurchases2
1189377   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1189378   +          +     0.21760620991618 * GRP_NumDistPurchases4
1189379   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1189380   +          +     0.06245025753157 * GRP_NumWebPurchases3
1189381   +          +     0.11312469123111 * GRP_NumWebPurchases4
1189382   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1189383   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1189384   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1189385   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1189386   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1189387   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
1189388   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1189389   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1189390   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1189391   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1189392   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1189393   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1189394   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1189395   +          +     0.33369645018356 * GRP_MntFishProducts3
1189396   +          +     0.08427214551103 * GRP_MntFishProducts4
1189397   +          +    -0.36187933889617 * GRP_MntGoldProds2
1189398   +          +      0.1522584097588 * GRP_MntGoldProds3
1189399   +          +    -0.18069803129722 * GRP_MntGoldProds4
1189400   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1189401   +          +     0.00511939388608 * GRP_MntMeatProducts3
1189402   +          +      0.0518722466688 * GRP_MntMeatProducts4
1189403   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1189404   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1189405   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1189406   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1189407   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1189408   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1189409   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1189410   +          +      0.0024401108853 * GRP_NumWebPurchases2
1189411   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1189412   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1189413   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1189414   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1189415   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1189416   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1189417   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1189418   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
1189419   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1189420   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1189421   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1189422   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1189423   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1189424   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1189425   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1189426   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1189427   +END;
MPRINT(EM_DIAGRAM):   END;
1189428   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189429   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1189430   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1189431   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1189432   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1189433   +END;
MPRINT(EM_DIAGRAM):   END;
1189434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189435   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1189436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189437   +
1189438   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1189439   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1189440   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1189441   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1189442   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1189443   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189444   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1189445   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1189446   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1189447   +end;
MPRINT(EM_DIAGRAM):   end;
1189448   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189449   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1189450   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1189451   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1189452   +   end;
MPRINT(EM_DIAGRAM):   end;
1189453   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1189454   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1189455   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1189456   +   end;
MPRINT(EM_DIAGRAM):   end;
1189457   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189458   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1189459   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1189460   +   end;
MPRINT(EM_DIAGRAM):   end;
1189461   +end;
MPRINT(EM_DIAGRAM):   end;
1189462   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1189463   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1189464   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1189465   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1189466   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1189467   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1189468   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1189469   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1189470   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1189471   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1189472   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1189473   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1189474   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1189475   +END;
MPRINT(EM_DIAGRAM):   END;
1189476   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1189477   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1189478   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1189479   +END;
MPRINT(EM_DIAGRAM):   END;
1189480   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1189481   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1189482   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1189483   +END;
MPRINT(EM_DIAGRAM):   END;
1189484   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1189485   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1189486   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1189487   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1189488   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1189489   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1189490   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1189491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189492   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1189493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1189494   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1189495   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1189496   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1189497   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1189498   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1189499   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1189500   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1189501   +END;
MPRINT(EM_DIAGRAM):   END;
1189502   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1189503   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1189504   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1189505   +drop
1189506   +H11
1189507   +H12
1189508   +H13
1189509   +H14
1189510   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1189511   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1189512   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1189513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189514   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1189515   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189516   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1189517   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1189518   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1189519   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1189520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189521   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1189522   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189523   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1189524   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1189525   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1189526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189527   +* Ensmbl3: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 7 of 10;
1189528   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189529   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189530   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1189531   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1189532   +* NODE: Neural20;
MPRINT(EM_DIAGRAM):   * NODE: Neural20;
1189533   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1189534   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1189535   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1189536   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1189537   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1189538   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1189539   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1189540   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1189541   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1189542   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1189543   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1189544   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1189545   +LENGTH _WARN_ $4
1189546   +      F_DepVar  $ 12
1189547   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1189548   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1189549   +
1189550   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1189551   +
1189552   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1189553   +
1189554   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1189555   +
1189556   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1189557   +
1189558   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1189559   +
1189560   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1189561   +
1189562   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1189563   +
1189564   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1189565   +
1189566   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1189567   +
1189568   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1189569   +
1189570   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1189571   +
1189572   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1189573   +
1189574   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1189575   +
1189576   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1189577   +
1189578   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1189579   +
1189580   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1189581   +
1189582   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1189583   +
1189584   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1189585   +
1189586   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1189587   +
1189588   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1189589   +
1189590   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1189591   +
1189592   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1189593   +
1189594   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1189595   +
1189596   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1189597   +
1189598   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1189599   +
1189600   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1189601   +
1189602   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1189603   +
1189604   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1189605   +
1189606   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1189607   +
1189608   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1189609   +
1189610   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1189611   +
1189612   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1189613   +
1189614   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1189615   +
1189616   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1189617   +
1189618   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1189619   +
1189620   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1189621   +
1189622   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1189623   +
1189624   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1189625   +
1189626   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1189627   +
1189628   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1189629   +
1189630   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1189631   +
1189632   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1189633   +
1189634   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1189635   +
1189636   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1189637   +
1189638   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1189639   +
1189640   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1189641   +
1189642   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1189643   +
1189644   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1189645   +
1189646   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1189647   +
1189648   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1189649   +
1189650   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1189651   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1189652   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1189653   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1189654   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189655   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189656   +end;
MPRINT(EM_DIAGRAM):   end;
1189657   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189658   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189659   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1189660   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189661   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1189662   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1189663   +   end;
MPRINT(EM_DIAGRAM):   end;
1189664   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1189665   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1189666   +   end;
MPRINT(EM_DIAGRAM):   end;
1189667   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189668   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1189669   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189670   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189671   +   end;
MPRINT(EM_DIAGRAM):   end;
1189672   +end;
MPRINT(EM_DIAGRAM):   end;
1189673   +
1189674   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1189675   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1189676   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1189677   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1189678   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1189679   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1189680   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189681   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189682   +end;
MPRINT(EM_DIAGRAM):   end;
1189683   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189684   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189685   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1189686   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189687   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1189688   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1189689   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1189690   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1189691   +   end;
MPRINT(EM_DIAGRAM):   end;
1189692   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1189693   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1189694   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1189695   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1189696   +   end;
MPRINT(EM_DIAGRAM):   end;
1189697   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189698   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1189699   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1189700   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1189701   +   end;
MPRINT(EM_DIAGRAM):   end;
1189702   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189703   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1189704   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1189705   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1189706   +   end;
MPRINT(EM_DIAGRAM):   end;
1189707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189708   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1189709   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1189710   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1189711   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189712   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189713   +   end;
MPRINT(EM_DIAGRAM):   end;
1189714   +end;
MPRINT(EM_DIAGRAM):   end;
1189715   +
1189716   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1189717   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1189718   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1189719   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1189720   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1189721   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1189722   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189723   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189724   +end;
MPRINT(EM_DIAGRAM):   end;
1189725   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189726   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189727   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1189728   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189729   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1189730   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1189731   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1189732   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1189733   +   end;
MPRINT(EM_DIAGRAM):   end;
1189734   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189735   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1189736   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1189737   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1189738   +   end;
MPRINT(EM_DIAGRAM):   end;
1189739   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1189740   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1189741   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1189742   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1189743   +   end;
MPRINT(EM_DIAGRAM):   end;
1189744   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189745   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1189746   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1189747   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1189748   +   end;
MPRINT(EM_DIAGRAM):   end;
1189749   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189750   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1189751   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1189752   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1189753   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189754   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189755   +   end;
MPRINT(EM_DIAGRAM):   end;
1189756   +end;
MPRINT(EM_DIAGRAM):   end;
1189757   +
1189758   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1189759   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1189760   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1189761   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1189762   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1189763   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1189764   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189765   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189766   +end;
MPRINT(EM_DIAGRAM):   end;
1189767   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189768   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189769   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1189770   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189771   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189772   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1189773   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1189774   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1189775   +   end;
MPRINT(EM_DIAGRAM):   end;
1189776   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189777   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1189778   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1189779   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1189780   +   end;
MPRINT(EM_DIAGRAM):   end;
1189781   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189782   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1189783   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1189784   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1189785   +   end;
MPRINT(EM_DIAGRAM):   end;
1189786   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189787   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1189788   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1189789   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1189790   +   end;
MPRINT(EM_DIAGRAM):   end;
1189791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189792   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1189793   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1189794   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1189795   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189796   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189797   +   end;
MPRINT(EM_DIAGRAM):   end;
1189798   +end;
MPRINT(EM_DIAGRAM):   end;
1189799   +
1189800   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1189801   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1189802   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1189803   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1189804   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1189805   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1189806   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189807   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189808   +end;
MPRINT(EM_DIAGRAM):   end;
1189809   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189810   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189811   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1189812   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189813   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189814   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1189815   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1189816   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1189817   +   end;
MPRINT(EM_DIAGRAM):   end;
1189818   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189819   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1189820   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1189821   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1189822   +   end;
MPRINT(EM_DIAGRAM):   end;
1189823   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189824   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1189825   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1189826   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1189827   +   end;
MPRINT(EM_DIAGRAM):   end;
1189828   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189829   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1189830   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1189831   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1189832   +   end;
MPRINT(EM_DIAGRAM):   end;
1189833   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189834   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1189835   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1189836   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1189837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189839   +   end;
MPRINT(EM_DIAGRAM):   end;
1189840   +end;
MPRINT(EM_DIAGRAM):   end;
1189841   +
1189842   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1189843   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1189844   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1189845   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1189846   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1189847   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1189848   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189849   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189850   +end;
MPRINT(EM_DIAGRAM):   end;
1189851   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189852   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189853   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1189854   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189855   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189856   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1189857   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1189858   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1189859   +   end;
MPRINT(EM_DIAGRAM):   end;
1189860   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189861   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1189862   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1189863   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1189864   +   end;
MPRINT(EM_DIAGRAM):   end;
1189865   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189866   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1189867   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1189868   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1189869   +   end;
MPRINT(EM_DIAGRAM):   end;
1189870   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189871   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1189872   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1189873   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1189874   +   end;
MPRINT(EM_DIAGRAM):   end;
1189875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189876   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1189877   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1189878   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1189879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189881   +   end;
MPRINT(EM_DIAGRAM):   end;
1189882   +end;
MPRINT(EM_DIAGRAM):   end;
1189883   +
1189884   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1189885   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1189886   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1189887   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1189888   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1189889   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1189890   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189891   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189892   +end;
MPRINT(EM_DIAGRAM):   end;
1189893   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189894   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189895   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1189896   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189897   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189898   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1189899   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1189900   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1189901   +   end;
MPRINT(EM_DIAGRAM):   end;
1189902   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189903   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1189904   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1189905   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1189906   +   end;
MPRINT(EM_DIAGRAM):   end;
1189907   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189908   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1189909   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1189910   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1189911   +   end;
MPRINT(EM_DIAGRAM):   end;
1189912   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189913   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1189914   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1189915   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1189916   +   end;
MPRINT(EM_DIAGRAM):   end;
1189917   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189918   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1189919   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1189920   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1189921   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189922   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189923   +   end;
MPRINT(EM_DIAGRAM):   end;
1189924   +end;
MPRINT(EM_DIAGRAM):   end;
1189925   +
1189926   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1189927   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1189928   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1189929   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1189930   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1189931   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1189932   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189933   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189934   +end;
MPRINT(EM_DIAGRAM):   end;
1189935   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189936   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189937   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1189938   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189939   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189940   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1189941   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1189942   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1189943   +   end;
MPRINT(EM_DIAGRAM):   end;
1189944   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189945   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1189946   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1189947   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1189948   +   end;
MPRINT(EM_DIAGRAM):   end;
1189949   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189950   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1189951   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1189952   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1189953   +   end;
MPRINT(EM_DIAGRAM):   end;
1189954   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1189955   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1189956   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1189957   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1189958   +   end;
MPRINT(EM_DIAGRAM):   end;
1189959   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189960   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1189961   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1189962   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1189963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189965   +   end;
MPRINT(EM_DIAGRAM):   end;
1189966   +end;
MPRINT(EM_DIAGRAM):   end;
1189967   +
1189968   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1189969   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1189970   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1189971   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1189972   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1189973   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1189974   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189975   +end;
MPRINT(EM_DIAGRAM):   end;
1189976   +else do;
MPRINT(EM_DIAGRAM):   else do;
1189977   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1189978   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1189979   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1189980   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1189981   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1189982   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1189983   +   end;
MPRINT(EM_DIAGRAM):   end;
1189984   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1189985   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1189986   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1189987   +   end;
MPRINT(EM_DIAGRAM):   end;
1189988   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1189989   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1189990   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1189991   +   end;
MPRINT(EM_DIAGRAM):   end;
1189992   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1189993   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1189994   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1189995   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1189996   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1189997   +   end;
MPRINT(EM_DIAGRAM):   end;
1189998   +end;
MPRINT(EM_DIAGRAM):   end;
1189999   +
1190000   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1190001   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1190002   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1190003   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1190004   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1190005   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1190006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190008   +end;
MPRINT(EM_DIAGRAM):   end;
1190009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190011   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1190012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190013   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1190014   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1190015   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1190016   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1190017   +   end;
MPRINT(EM_DIAGRAM):   end;
1190018   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190019   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1190020   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1190021   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1190022   +   end;
MPRINT(EM_DIAGRAM):   end;
1190023   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190024   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1190025   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1190026   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1190027   +   end;
MPRINT(EM_DIAGRAM):   end;
1190028   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1190029   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1190030   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1190031   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1190032   +   end;
MPRINT(EM_DIAGRAM):   end;
1190033   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190034   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1190035   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1190036   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1190037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190039   +   end;
MPRINT(EM_DIAGRAM):   end;
1190040   +end;
MPRINT(EM_DIAGRAM):   end;
1190041   +
1190042   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1190043   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1190044   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1190045   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1190046   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1190047   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1190048   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190049   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190050   +end;
MPRINT(EM_DIAGRAM):   end;
1190051   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190052   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190053   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1190054   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190055   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190056   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1190057   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1190058   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1190059   +   end;
MPRINT(EM_DIAGRAM):   end;
1190060   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190061   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1190062   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1190063   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1190064   +   end;
MPRINT(EM_DIAGRAM):   end;
1190065   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190066   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1190067   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1190068   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1190069   +   end;
MPRINT(EM_DIAGRAM):   end;
1190070   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190071   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1190072   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1190073   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1190074   +   end;
MPRINT(EM_DIAGRAM):   end;
1190075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190076   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1190077   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1190078   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1190079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190081   +   end;
MPRINT(EM_DIAGRAM):   end;
1190082   +end;
MPRINT(EM_DIAGRAM):   end;
1190083   +
1190084   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1190085   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1190086   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1190087   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1190088   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1190089   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1190090   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190091   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190092   +end;
MPRINT(EM_DIAGRAM):   end;
1190093   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190094   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190095   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1190096   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190097   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1190098   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1190099   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1190100   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1190101   +   end;
MPRINT(EM_DIAGRAM):   end;
1190102   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1190103   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1190104   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1190105   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1190106   +   end;
MPRINT(EM_DIAGRAM):   end;
1190107   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190108   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1190109   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1190110   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1190111   +   end;
MPRINT(EM_DIAGRAM):   end;
1190112   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190113   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1190114   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1190115   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1190116   +   end;
MPRINT(EM_DIAGRAM):   end;
1190117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190118   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1190119   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1190120   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1190121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190123   +   end;
MPRINT(EM_DIAGRAM):   end;
1190124   +end;
MPRINT(EM_DIAGRAM):   end;
1190125   +
1190126   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1190127   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1190128   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1190129   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1190130   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1190131   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1190132   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190133   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190134   +end;
MPRINT(EM_DIAGRAM):   end;
1190135   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190136   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190137   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1190138   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190139   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190140   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1190141   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1190142   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1190143   +   end;
MPRINT(EM_DIAGRAM):   end;
1190144   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190145   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1190146   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1190147   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1190148   +   end;
MPRINT(EM_DIAGRAM):   end;
1190149   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190150   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1190151   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1190152   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1190153   +   end;
MPRINT(EM_DIAGRAM):   end;
1190154   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190155   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1190156   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1190157   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1190158   +   end;
MPRINT(EM_DIAGRAM):   end;
1190159   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190160   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1190161   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1190162   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1190163   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190164   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190165   +   end;
MPRINT(EM_DIAGRAM):   end;
1190166   +end;
MPRINT(EM_DIAGRAM):   end;
1190167   +
1190168   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1190169   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1190170   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1190171   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1190172   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1190173   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1190174   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190175   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190176   +end;
MPRINT(EM_DIAGRAM):   end;
1190177   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190178   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190179   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1190180   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190181   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1190182   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1190183   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1190184   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1190185   +   end;
MPRINT(EM_DIAGRAM):   end;
1190186   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190187   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1190188   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1190189   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1190190   +   end;
MPRINT(EM_DIAGRAM):   end;
1190191   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1190192   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1190193   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1190194   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1190195   +   end;
MPRINT(EM_DIAGRAM):   end;
1190196   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190197   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1190198   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1190199   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1190200   +   end;
MPRINT(EM_DIAGRAM):   end;
1190201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190202   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1190203   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1190204   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1190205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190207   +   end;
MPRINT(EM_DIAGRAM):   end;
1190208   +end;
MPRINT(EM_DIAGRAM):   end;
1190209   +
1190210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190211   +*** Checking missing input Interval
1190212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1190213   +
1190214   +IF NMISS(
1190215   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1190216   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1190217   +
1190218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190219   +END;
MPRINT(EM_DIAGRAM):   END;
1190220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190221   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1190222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190223   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1190224   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1190225   +END;
MPRINT(EM_DIAGRAM):   END;
1190226   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1190227   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1190228   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1190229   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1190230   +END;
MPRINT(EM_DIAGRAM):   END;
1190231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190232   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1190233   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190235   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1190236   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190237   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1190238   +   H11  =    -0.41939883149261 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.41939883149261 * S_Year_Birth ;
1190239   +   H12  =    -0.11064938192918 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.11064938192918 * S_Year_Birth ;
1190240   +   H13  =    -0.06467031288187 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.06467031288187 * S_Year_Birth ;
1190241   +   H11  = H11  +     0.35448004105908 * GRP_AcceptedCmp52
1190242   +          +     -0.0918084964279 * GRP_Frq2  +    -0.23985284532042 * GRP_Frq3
1190243   +          +     0.05570802281486 * GRP_Frq4  +     -0.3547598798301 *
1190244   +        GRP_Income2  +    -0.33962703607715 * GRP_Income3
1190245   +          +     0.12436841230863 * GRP_Income4  +    -0.01455143009771 *
1190246   +        GRP_Mnt2  +     0.10120972709945 * GRP_Mnt3  +     -0.0249155152295 *
1190247   +        GRP_Mnt4  +      -0.269333013942 * GRP_MntFishProducts2
1190248   +          +     0.05785555057946 * GRP_MntFishProducts3
1190249   +          +    -0.13000426565494 * GRP_MntFishProducts4
1190250   +          +     0.17862455375899 * GRP_MntGoldProds2
1190251   +          +     0.06257016564867 * GRP_MntGoldProds3
1190252   +          +     0.20249370161035 * GRP_MntGoldProds4
1190253   +          +     0.32678386182233 * GRP_MntMeatProducts2
1190254   +          +      0.3373259079058 * GRP_MntMeatProducts3
1190255   +          +     0.28061036187325 * GRP_MntMeatProducts4
1190256   +          +    -0.03272437686392 * GRP_MntWines2  +    -0.21202325680638 *
1190257   +        GRP_MntWines3  +      0.3424605103125 * GRP_MntWines4
1190258   +          +     0.18542181546309 * GRP_NumCatalogPurchases3
1190259   +          +     0.14594977072698 * GRP_NumCatalogPurchases4
1190260   +          +     0.20431880618842 * GRP_NumDistPurchases2
1190261   +          +    -0.15119714667229 * GRP_NumDistPurchases3
1190262   +          +     0.19430353652214 * GRP_NumDistPurchases4
1190263   +          +     0.04685341709526 * GRP_NumWebPurchases2
1190264   +          +    -0.06094487598588 * GRP_NumWebPurchases3
1190265   +          +    -0.04237233324733 * GRP_NumWebPurchases4
1190266   +          +    -0.08991829185393 * GRP_RFMstat2  +    -0.07347809144281 *
1190267   +        GRP_RFMstat3  +     -0.4341534715985 * GRP_RFMstat4
1190268   +          +     -0.0196197195217 * GRP_RMntFrq2  +     0.12097540554524 *
1190269   +        GRP_RMntFrq3  +     0.26057062278983 * GRP_RMntFrq4
1190270   +          +    -0.63029497931535 * GRP_Recency2  +    -0.41040165908214 *
1190271   +        GRP_Recency3  +     0.03209060504164 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.35448004105908 * GRP_AcceptedCmp52 + -0.0918084964279 * 
GRP_Frq2 + -0.23985284532042 * GRP_Frq3 + 0.05570802281486 * GRP_Frq4 + -0.3547598798301 * 
GRP_Income2 + -0.33962703607715 * GRP_Income3 + 0.12436841230863 * GRP_Income4 + 
-0.01455143009771 * GRP_Mnt2 + 0.10120972709945 * GRP_Mnt3 + -0.0249155152295 * GRP_Mnt4 + 
-0.269333013942 * GRP_MntFishProducts2 + 0.05785555057946 * GRP_MntFishProducts3 + 
-0.13000426565494 * GRP_MntFishProducts4 + 0.17862455375899 * GRP_MntGoldProds2 + 
0.06257016564867 * GRP_MntGoldProds3 + 0.20249370161035 * GRP_MntGoldProds4 + 0.32678386182233 
* GRP_MntMeatProducts2 + 0.3373259079058 * GRP_MntMeatProducts3 + 0.28061036187325 * 
GRP_MntMeatProducts4 + -0.03272437686392 * GRP_MntWines2 + -0.21202325680638 * GRP_MntWines3 + 
0.3424605103125 * GRP_MntWines4 + 0.18542181546309 * GRP_NumCatalogPurchases3 + 
0.14594977072698 * GRP_NumCatalogPurchases4 + 0.20431880618842 * GRP_NumDistPurchases2 + 
-0.15119714667229 * GRP_NumDistPurchases3 + 0.19430353652214 * GRP_NumDistPurchases4 + 
0.04685341709526 * GRP_NumWebPurchases2 + -0.06094487598588 * GRP_NumWebPurchases3 + 
-0.04237233324733 * GRP_NumWebPurchases4 + -0.08991829185393 * GRP_RFMstat2 + 
-0.07347809144281 * GRP_RFMstat3 + -0.4341534715985 * GRP_RFMstat4 + -0.0196197195217 * 
GRP_RMntFrq2 + 0.12097540554524 * GRP_RMntFrq3 + 0.26057062278983 * GRP_RMntFrq4 + 
-0.63029497931535 * GRP_Recency2 + -0.41040165908214 * GRP_Recency3 + 0.03209060504164 * 
GRP_Recency4 ;
1190272   +   H12  = H12  +    -0.16182441315567 * GRP_AcceptedCmp52
1190273   +          +     0.17228162466334 * GRP_Frq2  +     0.15132687990319 * GRP_Frq3
1190274   +          +     -0.1689155033241 * GRP_Frq4  +     0.15149901619495 *
1190275   +        GRP_Income2  +     0.17788129654866 * GRP_Income3
1190276   +          +     0.05923547318389 * GRP_Income4  +    -0.08355004275991 *
1190277   +        GRP_Mnt2  +     0.02631246580002 * GRP_Mnt3  +     -0.2309890088856 *
1190278   +        GRP_Mnt4  +     0.14312480402918 * GRP_MntFishProducts2
1190279   +          +     -0.2578736956972 * GRP_MntFishProducts3
1190280   +          +     0.18402620335031 * GRP_MntFishProducts4
1190281   +          +     0.05242149290227 * GRP_MntGoldProds2
1190282   +          +    -0.21803869063517 * GRP_MntGoldProds3
1190283   +          +     0.13815635816146 * GRP_MntGoldProds4
1190284   +          +    -0.27330809721997 * GRP_MntMeatProducts2
1190285   +          +    -0.21530314028526 * GRP_MntMeatProducts3
1190286   +          +     0.02052103215709 * GRP_MntMeatProducts4
1190287   +          +    -0.12650113568762 * GRP_MntWines2  +     0.11322482902275 *
1190288   +        GRP_MntWines3  +    -0.27438926594633 * GRP_MntWines4
1190289   +          +    -0.54784157827091 * GRP_NumCatalogPurchases3
1190290   +          +    -0.08859032150825 * GRP_NumCatalogPurchases4
1190291   +          +     -0.1595237277506 * GRP_NumDistPurchases2
1190292   +          +     0.00057390274989 * GRP_NumDistPurchases3
1190293   +          +     -0.1082308524036 * GRP_NumDistPurchases4
1190294   +          +     0.08795971555231 * GRP_NumWebPurchases2
1190295   +          +    -0.23666817227274 * GRP_NumWebPurchases3
1190296   +          +     0.01490866706276 * GRP_NumWebPurchases4
1190297   +          +    -0.00588866906818 * GRP_RFMstat2  +    -0.01109150017006 *
1190298   +        GRP_RFMstat3  +    -0.00327834027258 * GRP_RFMstat4
1190299   +          +     0.04028767653615 * GRP_RMntFrq2  +     -0.0163649640466 *
1190300   +        GRP_RMntFrq3  +    -0.07601316125357 * GRP_RMntFrq4
1190301   +          +     0.66228536796217 * GRP_Recency2  +     0.48287342862457 *
1190302   +        GRP_Recency3  +    -0.03032773010646 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.16182441315567 * GRP_AcceptedCmp52 + 0.17228162466334 * 
GRP_Frq2 + 0.15132687990319 * GRP_Frq3 + -0.1689155033241 * GRP_Frq4 + 0.15149901619495 * 
GRP_Income2 + 0.17788129654866 * GRP_Income3 + 0.05923547318389 * GRP_Income4 + 
-0.08355004275991 * GRP_Mnt2 + 0.02631246580002 * GRP_Mnt3 + -0.2309890088856 * GRP_Mnt4 + 
0.14312480402918 * GRP_MntFishProducts2 + -0.2578736956972 * GRP_MntFishProducts3 + 
0.18402620335031 * GRP_MntFishProducts4 + 0.05242149290227 * GRP_MntGoldProds2 + 
-0.21803869063517 * GRP_MntGoldProds3 + 0.13815635816146 * GRP_MntGoldProds4 + 
-0.27330809721997 * GRP_MntMeatProducts2 + -0.21530314028526 * GRP_MntMeatProducts3 + 
0.02052103215709 * GRP_MntMeatProducts4 + -0.12650113568762 * GRP_MntWines2 + 0.11322482902275 
* GRP_MntWines3 + -0.27438926594633 * GRP_MntWines4 + -0.54784157827091 * 
GRP_NumCatalogPurchases3 + -0.08859032150825 * GRP_NumCatalogPurchases4 + -0.1595237277506 * 
GRP_NumDistPurchases2 + 0.00057390274989 * GRP_NumDistPurchases3 + -0.1082308524036 * 
GRP_NumDistPurchases4 + 0.08795971555231 * GRP_NumWebPurchases2 + -0.23666817227274 * 
GRP_NumWebPurchases3 + 0.01490866706276 * GRP_NumWebPurchases4 + -0.00588866906818 * 
GRP_RFMstat2 + -0.01109150017006 * GRP_RFMstat3 + -0.00327834027258 * GRP_RFMstat4 + 
0.04028767653615 * GRP_RMntFrq2 + -0.0163649640466 * GRP_RMntFrq3 + -0.07601316125357 * 
GRP_RMntFrq4 + 0.66228536796217 * GRP_Recency2 + 0.48287342862457 * GRP_Recency3 + 
-0.03032773010646 * GRP_Recency4 ;
1190303   +   H13  = H13  +    -0.76222121025234 * GRP_AcceptedCmp52
1190304   +          +     0.36511613420086 * GRP_Frq2  +    -0.02961648849396 * GRP_Frq3
1190305   +          +     0.08263295800576 * GRP_Frq4  +     0.53248885273716 *
1190306   +        GRP_Income2  +     0.58143836248256 * GRP_Income3
1190307   +          +     -0.6819044946332 * GRP_Income4  +     0.09969835343923 *
1190308   +        GRP_Mnt2  +     0.22681708558976 * GRP_Mnt3  +    -0.05933156304489 *
1190309   +        GRP_Mnt4  +      0.3115929057885 * GRP_MntFishProducts2
1190310   +          +     0.20656815909058 * GRP_MntFishProducts3
1190311   +          +    -0.18100587726033 * GRP_MntFishProducts4
1190312   +          +    -0.26082445403302 * GRP_MntGoldProds2
1190313   +          +     0.05485426947921 * GRP_MntGoldProds3
1190314   +          +     0.09168468833046 * GRP_MntGoldProds4
1190315   +          +    -0.26764306152541 * GRP_MntMeatProducts2
1190316   +          +    -0.05251001605784 * GRP_MntMeatProducts3
1190317   +          +     0.29225259283913 * GRP_MntMeatProducts4
1190318   +          +     0.61402400906277 * GRP_MntWines2  +     0.18145923811098 *
1190319   +        GRP_MntWines3  +    -0.04337923172483 * GRP_MntWines4
1190320   +          +    -0.72349314013585 * GRP_NumCatalogPurchases3
1190321   +          +     0.14875924587174 * GRP_NumCatalogPurchases4
1190322   +          +    -0.74484872686794 * GRP_NumDistPurchases2
1190323   +          +    -0.21410281712514 * GRP_NumDistPurchases3
1190324   +          +     0.04732133485671 * GRP_NumDistPurchases4
1190325   +          +     -0.1068322737335 * GRP_NumWebPurchases2
1190326   +          +     0.16615642908107 * GRP_NumWebPurchases3
1190327   +          +     0.06510367246629 * GRP_NumWebPurchases4
1190328   +          +    -0.32688260466431 * GRP_RFMstat2  +    -0.18733405583331 *
1190329   +        GRP_RFMstat3  +     -0.2070438751052 * GRP_RFMstat4
1190330   +          +     0.00135495431586 * GRP_RMntFrq2  +     0.14594289041413 *
1190331   +        GRP_RMntFrq3  +    -0.22868347656723 * GRP_RMntFrq4
1190332   +          +     0.85583167880584 * GRP_Recency2  +     0.12194433799934 *
1190333   +        GRP_Recency3  +    -0.40666493945855 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.76222121025234 * GRP_AcceptedCmp52 + 0.36511613420086 * 
GRP_Frq2 + -0.02961648849396 * GRP_Frq3 + 0.08263295800576 * GRP_Frq4 + 0.53248885273716 * 
GRP_Income2 + 0.58143836248256 * GRP_Income3 + -0.6819044946332 * GRP_Income4 + 
0.09969835343923 * GRP_Mnt2 + 0.22681708558976 * GRP_Mnt3 + -0.05933156304489 * GRP_Mnt4 + 
0.3115929057885 * GRP_MntFishProducts2 + 0.20656815909058 * GRP_MntFishProducts3 + 
-0.18100587726033 * GRP_MntFishProducts4 + -0.26082445403302 * GRP_MntGoldProds2 + 
0.05485426947921 * GRP_MntGoldProds3 + 0.09168468833046 * GRP_MntGoldProds4 + 
-0.26764306152541 * GRP_MntMeatProducts2 + -0.05251001605784 * GRP_MntMeatProducts3 + 
0.29225259283913 * GRP_MntMeatProducts4 + 0.61402400906277 * GRP_MntWines2 + 0.18145923811098 
* GRP_MntWines3 + -0.04337923172483 * GRP_MntWines4 + -0.72349314013585 * 
GRP_NumCatalogPurchases3 + 0.14875924587174 * GRP_NumCatalogPurchases4 + -0.74484872686794 * 
GRP_NumDistPurchases2 + -0.21410281712514 * GRP_NumDistPurchases3 + 0.04732133485671 * 
GRP_NumDistPurchases4 + -0.1068322737335 * GRP_NumWebPurchases2 + 0.16615642908107 * 
GRP_NumWebPurchases3 + 0.06510367246629 * GRP_NumWebPurchases4 + -0.32688260466431 * 
GRP_RFMstat2 + -0.18733405583331 * GRP_RFMstat3 + -0.2070438751052 * GRP_RFMstat4 + 
0.00135495431586 * GRP_RMntFrq2 + 0.14594289041413 * GRP_RMntFrq3 + -0.22868347656723 * 
GRP_RMntFrq4 + 0.85583167880584 * GRP_Recency2 + 0.12194433799934 * GRP_Recency3 + 
-0.40666493945855 * GRP_Recency4 ;
1190334   +   H11  =    -0.47589199029932 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47589199029932 + H11 ;
1190335   +   H12  =    -0.33973735112712 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.33973735112712 + H12 ;
1190336   +   H13  =     0.16076842495153 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.16076842495153 + H13 ;
1190337   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1190338   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1190339   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1190340   +END;
MPRINT(EM_DIAGRAM):   END;
1190341   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1190342   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1190343   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1190344   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1190345   +END;
MPRINT(EM_DIAGRAM):   END;
1190346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190347   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1190348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190349   +
1190350   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1190351   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1190352   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1190353   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1190354   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1190355   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190356   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1190357   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1190358   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1190359   +end;
MPRINT(EM_DIAGRAM):   end;
1190360   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190361   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1190362   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1190363   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1190364   +   end;
MPRINT(EM_DIAGRAM):   end;
1190365   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1190366   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1190367   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1190368   +   end;
MPRINT(EM_DIAGRAM):   end;
1190369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190370   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1190371   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1190372   +   end;
MPRINT(EM_DIAGRAM):   end;
1190373   +end;
MPRINT(EM_DIAGRAM):   end;
1190374   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1190375   +   P_DepVar1  =    -1.16415993584169 * H11  +     0.57209582268762 * H12
1190376   +          +     1.90916164841558 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16415993584169 * H11 + 0.57209582268762 * H12 + 
1.90916164841558 * H13 ;
1190377   +   P_DepVar1  =    -1.85769338519577 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.85769338519577 + P_DepVar1 ;
1190378   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1190379   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1190380   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1190381   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1190382   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1190383   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1190384   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1190385   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1190386   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1190387   +END;
MPRINT(EM_DIAGRAM):   END;
1190388   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1190389   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1190390   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1190391   +END;
MPRINT(EM_DIAGRAM):   END;
1190392   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1190393   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1190394   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1190395   +END;
MPRINT(EM_DIAGRAM):   END;
1190396   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1190397   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1190398   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1190399   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1190400   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1190401   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1190402   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1190403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190404   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1190405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1190406   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1190407   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1190408   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1190409   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1190410   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1190411   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1190412   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1190413   +END;
MPRINT(EM_DIAGRAM):   END;
1190414   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1190415   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1190416   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1190417   +drop
1190418   +H11
1190419   +H12
1190420   +H13
1190421   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1190422   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1190423   +* Renaming variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural20;
1190424   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190425   +* Renaming Posterior variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural20;
1190426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190427   +drop Neural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar1;
1190428   +Neural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar1 = P_DepVar1;
1190429   +drop Neural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar0;
1190430   +Neural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar0 = P_DepVar0;
1190431   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190432   +* Renaming _WARN_ variable for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural20;
1190433   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190434   +length Neural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural20_WARN_ $4;
1190435   +drop Neural20_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural20_WARN_;
1190436   +Neural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural20_WARN_ = _WARN_;
1190437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190438   +* Ensmbl3: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 8 of 10;
1190439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190441   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1190442   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1190443   +* NODE: Neural19;
MPRINT(EM_DIAGRAM):   * NODE: Neural19;
1190444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1190445   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1190446   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1190447   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1190448   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1190449   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1190450   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1190451   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1190452   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1190453   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1190454   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1190455   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1190456   +LENGTH _WARN_ $4
1190457   +      F_DepVar  $ 12
1190458   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1190459   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1190460   +
1190461   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1190462   +
1190463   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1190464   +
1190465   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1190466   +
1190467   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1190468   +
1190469   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1190470   +
1190471   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1190472   +
1190473   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1190474   +
1190475   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1190476   +
1190477   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1190478   +
1190479   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1190480   +
1190481   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1190482   +
1190483   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1190484   +
1190485   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1190486   +
1190487   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1190488   +
1190489   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1190490   +
1190491   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1190492   +
1190493   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1190494   +
1190495   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1190496   +
1190497   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1190498   +
1190499   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1190500   +
1190501   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1190502   +
1190503   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1190504   +
1190505   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1190506   +
1190507   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1190508   +
1190509   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1190510   +
1190511   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1190512   +
1190513   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1190514   +
1190515   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1190516   +
1190517   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1190518   +
1190519   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1190520   +
1190521   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1190522   +
1190523   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1190524   +
1190525   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1190526   +
1190527   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1190528   +
1190529   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1190530   +
1190531   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1190532   +
1190533   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1190534   +
1190535   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1190536   +
1190537   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1190538   +
1190539   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1190540   +
1190541   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1190542   +
1190543   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1190544   +
1190545   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1190546   +
1190547   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1190548   +
1190549   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1190550   +
1190551   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1190552   +
1190553   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1190554   +
1190555   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1190556   +
1190557   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1190558   +
1190559   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1190560   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1190561   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1190562   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1190563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190565   +end;
MPRINT(EM_DIAGRAM):   end;
1190566   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190567   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190568   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1190569   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190570   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1190571   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1190572   +   end;
MPRINT(EM_DIAGRAM):   end;
1190573   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1190574   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1190575   +   end;
MPRINT(EM_DIAGRAM):   end;
1190576   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190577   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1190578   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190579   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190580   +   end;
MPRINT(EM_DIAGRAM):   end;
1190581   +end;
MPRINT(EM_DIAGRAM):   end;
1190582   +
1190583   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1190584   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1190585   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1190586   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1190587   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1190588   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1190589   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190590   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190591   +end;
MPRINT(EM_DIAGRAM):   end;
1190592   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190593   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190594   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1190595   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190596   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1190597   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1190598   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1190599   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1190600   +   end;
MPRINT(EM_DIAGRAM):   end;
1190601   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1190602   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1190603   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1190604   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1190605   +   end;
MPRINT(EM_DIAGRAM):   end;
1190606   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190607   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1190608   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1190609   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1190610   +   end;
MPRINT(EM_DIAGRAM):   end;
1190611   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190612   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1190613   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1190614   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1190615   +   end;
MPRINT(EM_DIAGRAM):   end;
1190616   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190617   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1190618   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1190619   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1190620   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190621   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190622   +   end;
MPRINT(EM_DIAGRAM):   end;
1190623   +end;
MPRINT(EM_DIAGRAM):   end;
1190624   +
1190625   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1190626   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1190627   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1190628   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1190629   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1190630   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1190631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190633   +end;
MPRINT(EM_DIAGRAM):   end;
1190634   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190636   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1190637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190638   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1190639   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1190640   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1190641   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1190642   +   end;
MPRINT(EM_DIAGRAM):   end;
1190643   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190644   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1190645   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1190646   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1190647   +   end;
MPRINT(EM_DIAGRAM):   end;
1190648   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1190649   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1190650   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1190651   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1190652   +   end;
MPRINT(EM_DIAGRAM):   end;
1190653   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190654   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1190655   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1190656   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1190657   +   end;
MPRINT(EM_DIAGRAM):   end;
1190658   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190659   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1190660   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1190661   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1190662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190664   +   end;
MPRINT(EM_DIAGRAM):   end;
1190665   +end;
MPRINT(EM_DIAGRAM):   end;
1190666   +
1190667   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1190668   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1190669   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1190670   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1190671   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1190672   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1190673   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190675   +end;
MPRINT(EM_DIAGRAM):   end;
1190676   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190677   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190678   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1190679   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190680   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190681   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1190682   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1190683   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1190684   +   end;
MPRINT(EM_DIAGRAM):   end;
1190685   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190686   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1190687   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1190688   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1190689   +   end;
MPRINT(EM_DIAGRAM):   end;
1190690   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190691   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1190692   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1190693   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1190694   +   end;
MPRINT(EM_DIAGRAM):   end;
1190695   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190696   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1190697   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1190698   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1190699   +   end;
MPRINT(EM_DIAGRAM):   end;
1190700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190701   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1190702   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1190703   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1190704   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190705   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190706   +   end;
MPRINT(EM_DIAGRAM):   end;
1190707   +end;
MPRINT(EM_DIAGRAM):   end;
1190708   +
1190709   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1190710   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1190711   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1190712   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1190713   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1190714   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1190715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190717   +end;
MPRINT(EM_DIAGRAM):   end;
1190718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190720   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1190721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190722   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190723   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1190724   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1190725   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1190726   +   end;
MPRINT(EM_DIAGRAM):   end;
1190727   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190728   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1190729   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1190730   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1190731   +   end;
MPRINT(EM_DIAGRAM):   end;
1190732   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190733   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1190734   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1190735   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1190736   +   end;
MPRINT(EM_DIAGRAM):   end;
1190737   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190738   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1190739   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1190740   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1190741   +   end;
MPRINT(EM_DIAGRAM):   end;
1190742   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190743   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1190744   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1190745   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1190746   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190747   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190748   +   end;
MPRINT(EM_DIAGRAM):   end;
1190749   +end;
MPRINT(EM_DIAGRAM):   end;
1190750   +
1190751   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1190752   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1190753   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1190754   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1190755   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1190756   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1190757   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190758   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190759   +end;
MPRINT(EM_DIAGRAM):   end;
1190760   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190761   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190762   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1190763   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190764   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190765   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1190766   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1190767   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1190768   +   end;
MPRINT(EM_DIAGRAM):   end;
1190769   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190770   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1190771   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1190772   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1190773   +   end;
MPRINT(EM_DIAGRAM):   end;
1190774   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190775   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1190776   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1190777   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1190778   +   end;
MPRINT(EM_DIAGRAM):   end;
1190779   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190780   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1190781   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1190782   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1190783   +   end;
MPRINT(EM_DIAGRAM):   end;
1190784   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190785   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1190786   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1190787   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1190788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190790   +   end;
MPRINT(EM_DIAGRAM):   end;
1190791   +end;
MPRINT(EM_DIAGRAM):   end;
1190792   +
1190793   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1190794   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1190795   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1190796   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1190797   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1190798   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1190799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190801   +end;
MPRINT(EM_DIAGRAM):   end;
1190802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190803   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190804   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1190805   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190806   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190807   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1190808   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1190809   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1190810   +   end;
MPRINT(EM_DIAGRAM):   end;
1190811   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190812   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1190813   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1190814   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1190815   +   end;
MPRINT(EM_DIAGRAM):   end;
1190816   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190817   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1190818   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1190819   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1190820   +   end;
MPRINT(EM_DIAGRAM):   end;
1190821   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190822   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1190823   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1190824   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1190825   +   end;
MPRINT(EM_DIAGRAM):   end;
1190826   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190827   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1190828   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1190829   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1190830   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190831   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190832   +   end;
MPRINT(EM_DIAGRAM):   end;
1190833   +end;
MPRINT(EM_DIAGRAM):   end;
1190834   +
1190835   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1190836   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1190837   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1190838   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1190839   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1190840   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1190841   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190842   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190843   +end;
MPRINT(EM_DIAGRAM):   end;
1190844   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190845   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190846   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1190847   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190848   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190849   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1190850   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1190851   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1190852   +   end;
MPRINT(EM_DIAGRAM):   end;
1190853   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190854   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1190855   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1190856   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1190857   +   end;
MPRINT(EM_DIAGRAM):   end;
1190858   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190859   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1190860   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1190861   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1190862   +   end;
MPRINT(EM_DIAGRAM):   end;
1190863   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190864   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1190865   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1190866   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1190867   +   end;
MPRINT(EM_DIAGRAM):   end;
1190868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190869   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1190870   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1190871   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1190872   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190873   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190874   +   end;
MPRINT(EM_DIAGRAM):   end;
1190875   +end;
MPRINT(EM_DIAGRAM):   end;
1190876   +
1190877   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1190878   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1190879   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1190880   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1190881   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1190882   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190883   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190884   +end;
MPRINT(EM_DIAGRAM):   end;
1190885   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190886   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190887   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1190888   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190889   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190890   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1190891   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1190892   +   end;
MPRINT(EM_DIAGRAM):   end;
1190893   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190894   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1190895   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1190896   +   end;
MPRINT(EM_DIAGRAM):   end;
1190897   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190898   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1190899   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1190900   +   end;
MPRINT(EM_DIAGRAM):   end;
1190901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190902   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1190903   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1190904   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190905   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190906   +   end;
MPRINT(EM_DIAGRAM):   end;
1190907   +end;
MPRINT(EM_DIAGRAM):   end;
1190908   +
1190909   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1190910   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1190911   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1190912   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1190913   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1190914   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1190915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190917   +end;
MPRINT(EM_DIAGRAM):   end;
1190918   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190919   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190920   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1190921   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190922   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1190923   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1190924   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1190925   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1190926   +   end;
MPRINT(EM_DIAGRAM):   end;
1190927   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190928   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1190929   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1190930   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1190931   +   end;
MPRINT(EM_DIAGRAM):   end;
1190932   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190933   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1190934   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1190935   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1190936   +   end;
MPRINT(EM_DIAGRAM):   end;
1190937   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1190938   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1190939   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1190940   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1190941   +   end;
MPRINT(EM_DIAGRAM):   end;
1190942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190943   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1190944   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1190945   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1190946   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190947   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190948   +   end;
MPRINT(EM_DIAGRAM):   end;
1190949   +end;
MPRINT(EM_DIAGRAM):   end;
1190950   +
1190951   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1190952   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1190953   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1190954   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1190955   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1190956   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1190957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1190958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190959   +end;
MPRINT(EM_DIAGRAM):   end;
1190960   +else do;
MPRINT(EM_DIAGRAM):   else do;
1190961   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1190962   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1190963   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1190964   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1190965   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1190966   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1190967   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1190968   +   end;
MPRINT(EM_DIAGRAM):   end;
1190969   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1190970   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1190971   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1190972   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1190973   +   end;
MPRINT(EM_DIAGRAM):   end;
1190974   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1190975   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1190976   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1190977   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1190978   +   end;
MPRINT(EM_DIAGRAM):   end;
1190979   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1190980   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1190981   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1190982   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1190983   +   end;
MPRINT(EM_DIAGRAM):   end;
1190984   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1190985   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1190986   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1190987   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1190988   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1190989   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1190990   +   end;
MPRINT(EM_DIAGRAM):   end;
1190991   +end;
MPRINT(EM_DIAGRAM):   end;
1190992   +
1190993   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1190994   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1190995   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1190996   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1190997   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1190998   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1190999   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191001   +end;
MPRINT(EM_DIAGRAM):   end;
1191002   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191003   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191004   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1191005   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191006   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1191007   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1191008   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1191009   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1191010   +   end;
MPRINT(EM_DIAGRAM):   end;
1191011   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191012   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1191013   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1191014   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1191015   +   end;
MPRINT(EM_DIAGRAM):   end;
1191016   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191017   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1191018   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1191019   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1191020   +   end;
MPRINT(EM_DIAGRAM):   end;
1191021   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191022   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1191023   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1191024   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1191025   +   end;
MPRINT(EM_DIAGRAM):   end;
1191026   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191027   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1191028   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1191029   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1191030   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191031   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191032   +   end;
MPRINT(EM_DIAGRAM):   end;
1191033   +end;
MPRINT(EM_DIAGRAM):   end;
1191034   +
1191035   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1191036   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1191037   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1191038   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1191039   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1191040   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1191041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191043   +end;
MPRINT(EM_DIAGRAM):   end;
1191044   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191045   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191046   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1191047   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191048   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191049   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1191050   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1191051   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1191052   +   end;
MPRINT(EM_DIAGRAM):   end;
1191053   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191054   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1191055   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1191056   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1191057   +   end;
MPRINT(EM_DIAGRAM):   end;
1191058   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191059   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1191060   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1191061   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1191062   +   end;
MPRINT(EM_DIAGRAM):   end;
1191063   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191064   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1191065   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1191066   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1191067   +   end;
MPRINT(EM_DIAGRAM):   end;
1191068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191069   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1191070   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1191071   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1191072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191074   +   end;
MPRINT(EM_DIAGRAM):   end;
1191075   +end;
MPRINT(EM_DIAGRAM):   end;
1191076   +
1191077   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1191078   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1191079   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1191080   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1191081   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1191082   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1191083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191085   +end;
MPRINT(EM_DIAGRAM):   end;
1191086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191088   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1191089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191090   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1191091   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1191092   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1191093   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1191094   +   end;
MPRINT(EM_DIAGRAM):   end;
1191095   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191096   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1191097   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1191098   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1191099   +   end;
MPRINT(EM_DIAGRAM):   end;
1191100   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191101   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1191102   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1191103   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1191104   +   end;
MPRINT(EM_DIAGRAM):   end;
1191105   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191106   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1191107   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1191108   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1191109   +   end;
MPRINT(EM_DIAGRAM):   end;
1191110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191111   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1191112   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1191113   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1191114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191116   +   end;
MPRINT(EM_DIAGRAM):   end;
1191117   +end;
MPRINT(EM_DIAGRAM):   end;
1191118   +
1191119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191120   +*** Checking missing input Interval
1191121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1191122   +
1191123   +IF NMISS(
1191124   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1191125   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1191126   +
1191127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191128   +END;
MPRINT(EM_DIAGRAM):   END;
1191129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191130   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1191131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191132   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1191133   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1191134   +END;
MPRINT(EM_DIAGRAM):   END;
1191135   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1191136   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1191137   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1191138   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1191139   +END;
MPRINT(EM_DIAGRAM):   END;
1191140   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191141   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1191142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191144   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1191145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191146   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1191147   +   H11  =    -0.00764494959641 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.00764494959641 * S_Year_Birth ;
1191148   +   H12  =     0.07985236007447 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.07985236007447 * S_Year_Birth ;
1191149   +   H11  = H11  +     0.30243585989963 * GRP_AcceptedCmp52
1191150   +          +    -1.01247574867977 * GRP_Frq2  +    -0.20269284301089 * GRP_Frq3
1191151   +          +     0.13795348170285 * GRP_Frq4  +     0.01460946974261 *
1191152   +        GRP_Income2  +     0.07493432056114 * GRP_Income3
1191153   +          +     0.02989162785893 * GRP_Income4  +    -0.02386105013807 *
1191154   +        GRP_Mnt2  +    -0.41942836136152 * GRP_Mnt3  +     0.22813965454599 *
1191155   +        GRP_Mnt4  +    -0.02248365969183 * GRP_MntFishProducts2
1191156   +          +    -0.17213374102896 * GRP_MntFishProducts3
1191157   +          +    -0.03630204919594 * GRP_MntFishProducts4
1191158   +          +    -0.05460186275698 * GRP_MntGoldProds2
1191159   +          +     0.17440895359267 * GRP_MntGoldProds3
1191160   +          +     0.06276226158536 * GRP_MntGoldProds4
1191161   +          +     0.24913658683735 * GRP_MntMeatProducts2
1191162   +          +     0.34153298373719 * GRP_MntMeatProducts3
1191163   +          +    -0.01479035508855 * GRP_MntMeatProducts4
1191164   +          +    -0.30090319249134 * GRP_MntWines2  +    -0.22956799988205 *
1191165   +        GRP_MntWines3  +      0.2174634765863 * GRP_MntWines4
1191166   +          +     0.59798838520377 * GRP_NumCatalogPurchases3
1191167   +          +     0.18459646376075 * GRP_NumCatalogPurchases4
1191168   +          +     0.68686707296889 * GRP_NumDistPurchases2
1191169   +          +     0.01763602172593 * GRP_NumDistPurchases3
1191170   +          +    -0.18269797362148 * GRP_NumDistPurchases4
1191171   +          +     0.60927764745536 * GRP_NumWebPurchases2
1191172   +          +     0.13479979954708 * GRP_NumWebPurchases3
1191173   +          +    -0.08022145941408 * GRP_NumWebPurchases4
1191174   +          +     0.31971573913723 * GRP_RFMstat2  +     0.14998276665028 *
1191175   +        GRP_RFMstat3  +    -0.35264122886189 * GRP_RFMstat4
1191176   +          +     0.73614679989894 * GRP_RMntFrq2  +     0.68193669255848 *
1191177   +        GRP_RMntFrq3  +     1.12908709575784 * GRP_RMntFrq4
1191178   +          +    -0.34988546752368 * GRP_Recency2  +    -0.09861529398333 *
1191179   +        GRP_Recency3  +     0.03043927813491 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.30243585989963 * GRP_AcceptedCmp52 + -1.01247574867977 * 
GRP_Frq2 + -0.20269284301089 * GRP_Frq3 + 0.13795348170285 * GRP_Frq4 + 0.01460946974261 * 
GRP_Income2 + 0.07493432056114 * GRP_Income3 + 0.02989162785893 * GRP_Income4 + 
-0.02386105013807 * GRP_Mnt2 + -0.41942836136152 * GRP_Mnt3 + 0.22813965454599 * GRP_Mnt4 + 
-0.02248365969183 * GRP_MntFishProducts2 + -0.17213374102896 * GRP_MntFishProducts3 + 
-0.03630204919594 * GRP_MntFishProducts4 + -0.05460186275698 * GRP_MntGoldProds2 + 
0.17440895359267 * GRP_MntGoldProds3 + 0.06276226158536 * GRP_MntGoldProds4 + 0.24913658683735 
* GRP_MntMeatProducts2 + 0.34153298373719 * GRP_MntMeatProducts3 + -0.01479035508855 * 
GRP_MntMeatProducts4 + -0.30090319249134 * GRP_MntWines2 + -0.22956799988205 * GRP_MntWines3 + 
0.2174634765863 * GRP_MntWines4 + 0.59798838520377 * GRP_NumCatalogPurchases3 + 
0.18459646376075 * GRP_NumCatalogPurchases4 + 0.68686707296889 * GRP_NumDistPurchases2 + 
0.01763602172593 * GRP_NumDistPurchases3 + -0.18269797362148 * GRP_NumDistPurchases4 + 
0.60927764745536 * GRP_NumWebPurchases2 + 0.13479979954708 * GRP_NumWebPurchases3 + 
-0.08022145941408 * GRP_NumWebPurchases4 + 0.31971573913723 * GRP_RFMstat2 + 0.14998276665028 
* GRP_RFMstat3 + -0.35264122886189 * GRP_RFMstat4 + 0.73614679989894 * GRP_RMntFrq2 + 
0.68193669255848 * GRP_RMntFrq3 + 1.12908709575784 * GRP_RMntFrq4 + -0.34988546752368 * 
GRP_Recency2 + -0.09861529398333 * GRP_Recency3 + 0.03043927813491 * GRP_Recency4 ;
1191180   +   H12  = H12  +    -0.28470958349897 * GRP_AcceptedCmp52
1191181   +          +     0.38963626888759 * GRP_Frq2  +    -0.08631643702353 * GRP_Frq3
1191182   +          +    -0.10781175757073 * GRP_Frq4  +     0.52838454887758 *
1191183   +        GRP_Income2  +     0.49811285398937 * GRP_Income3
1191184   +          +    -0.52344032334308 * GRP_Income4  +    -0.16102798071085 *
1191185   +        GRP_Mnt2  +    -0.59987497547696 * GRP_Mnt3  +     0.30977299182247 *
1191186   +        GRP_Mnt4  +     0.31161547120638 * GRP_MntFishProducts2
1191187   +          +    -0.13904940340926 * GRP_MntFishProducts3
1191188   +          +     -0.0238384717361 * GRP_MntFishProducts4
1191189   +          +    -0.07342882109089 * GRP_MntGoldProds2
1191190   +          +     0.06209137082418 * GRP_MntGoldProds3
1191191   +          +    -0.01682894618174 * GRP_MntGoldProds4
1191192   +          +    -0.70514696594831 * GRP_MntMeatProducts2
1191193   +          +     0.30494479189325 * GRP_MntMeatProducts3
1191194   +          +     0.16724961510362 * GRP_MntMeatProducts4
1191195   +          +     0.47753590354486 * GRP_MntWines2  +     -0.0475037304462 *
1191196   +        GRP_MntWines3  +    -0.15194191043511 * GRP_MntWines4
1191197   +          +    -0.02600524471339 * GRP_NumCatalogPurchases3
1191198   +          +     0.04676493824202 * GRP_NumCatalogPurchases4
1191199   +          +    -0.87566302467834 * GRP_NumDistPurchases2
1191200   +          +     0.14216206915436 * GRP_NumDistPurchases3
1191201   +          +      0.0473423363943 * GRP_NumDistPurchases4
1191202   +          +     0.48704677587339 * GRP_NumWebPurchases2
1191203   +          +     0.05866537558911 * GRP_NumWebPurchases3
1191204   +          +    -0.12537289794862 * GRP_NumWebPurchases4
1191205   +          +    -0.44186169476572 * GRP_RFMstat2  +     0.40940999072989 *
1191206   +        GRP_RFMstat3  +    -0.12217840922636 * GRP_RFMstat4
1191207   +          +     0.67040692062491 * GRP_RMntFrq2  +     0.18389631151947 *
1191208   +        GRP_RMntFrq3  +    -0.08386771645702 * GRP_RMntFrq4
1191209   +          +     0.55720904594774 * GRP_Recency2  +     0.12496105124544 *
1191210   +        GRP_Recency3  +    -0.23658499274155 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.28470958349897 * GRP_AcceptedCmp52 + 0.38963626888759 * 
GRP_Frq2 + -0.08631643702353 * GRP_Frq3 + -0.10781175757073 * GRP_Frq4 + 0.52838454887758 * 
GRP_Income2 + 0.49811285398937 * GRP_Income3 + -0.52344032334308 * GRP_Income4 + 
-0.16102798071085 * GRP_Mnt2 + -0.59987497547696 * GRP_Mnt3 + 0.30977299182247 * GRP_Mnt4 + 
0.31161547120638 * GRP_MntFishProducts2 + -0.13904940340926 * GRP_MntFishProducts3 + 
-0.0238384717361 * GRP_MntFishProducts4 + -0.07342882109089 * GRP_MntGoldProds2 + 
0.06209137082418 * GRP_MntGoldProds3 + -0.01682894618174 * GRP_MntGoldProds4 + 
-0.70514696594831 * GRP_MntMeatProducts2 + 0.30494479189325 * GRP_MntMeatProducts3 + 
0.16724961510362 * GRP_MntMeatProducts4 + 0.47753590354486 * GRP_MntWines2 + -0.0475037304462 
* GRP_MntWines3 + -0.15194191043511 * GRP_MntWines4 + -0.02600524471339 * 
GRP_NumCatalogPurchases3 + 0.04676493824202 * GRP_NumCatalogPurchases4 + -0.87566302467834 * 
GRP_NumDistPurchases2 + 0.14216206915436 * GRP_NumDistPurchases3 + 0.0473423363943 * 
GRP_NumDistPurchases4 + 0.48704677587339 * GRP_NumWebPurchases2 + 0.05866537558911 * 
GRP_NumWebPurchases3 + -0.12537289794862 * GRP_NumWebPurchases4 + -0.44186169476572 * 
GRP_RFMstat2 + 0.40940999072989 * GRP_RFMstat3 + -0.12217840922636 * GRP_RFMstat4 + 
0.67040692062491 * GRP_RMntFrq2 + 0.18389631151947 * GRP_RMntFrq3 + -0.08386771645702 * 
GRP_RMntFrq4 + 0.55720904594774 * GRP_Recency2 + 0.12496105124544 * GRP_Recency3 + 
-0.23658499274155 * GRP_Recency4 ;
1191211   +   H11  =    -0.50260831929377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.50260831929377 + H11 ;
1191212   +   H12  =     0.67324662853602 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.67324662853602 + H12 ;
1191213   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1191214   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1191215   +END;
MPRINT(EM_DIAGRAM):   END;
1191216   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1191217   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1191218   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1191219   +END;
MPRINT(EM_DIAGRAM):   END;
1191220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191221   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1191222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191223   +
1191224   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1191225   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1191226   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1191227   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1191228   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1191229   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191230   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1191231   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1191232   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1191233   +end;
MPRINT(EM_DIAGRAM):   end;
1191234   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191235   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1191236   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1191237   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1191238   +   end;
MPRINT(EM_DIAGRAM):   end;
1191239   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1191240   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1191241   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1191242   +   end;
MPRINT(EM_DIAGRAM):   end;
1191243   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191244   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1191245   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1191246   +   end;
MPRINT(EM_DIAGRAM):   end;
1191247   +end;
MPRINT(EM_DIAGRAM):   end;
1191248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1191249   +   P_DepVar1  =    -2.91374311447337 * H11  +      3.9462028641342 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.91374311447337 * H11 + 3.9462028641342 * H12 ;
1191250   +   P_DepVar1  =    -3.48795847558643 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.48795847558643 + P_DepVar1 ;
1191251   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1191252   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1191253   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1191254   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1191255   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1191256   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1191257   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1191258   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1191259   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1191260   +END;
MPRINT(EM_DIAGRAM):   END;
1191261   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1191262   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1191263   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1191264   +END;
MPRINT(EM_DIAGRAM):   END;
1191265   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1191266   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1191267   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1191268   +END;
MPRINT(EM_DIAGRAM):   END;
1191269   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1191270   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1191271   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1191272   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1191273   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1191274   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1191275   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1191276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191277   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1191278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191279   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1191280   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1191281   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1191282   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1191283   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1191284   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1191285   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1191286   +END;
MPRINT(EM_DIAGRAM):   END;
1191287   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1191288   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1191289   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1191290   +drop
1191291   +H11
1191292   +H12
1191293   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1191294   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1191295   +* Renaming variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural19;
1191296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191297   +* Renaming Posterior variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural19;
1191298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191299   +drop Neural19_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar1;
1191300   +Neural19_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar1 = P_DepVar1;
1191301   +drop Neural19_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar0;
1191302   +Neural19_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar0 = P_DepVar0;
1191303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191304   +* Renaming _WARN_ variable for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural19;
1191305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191306   +length Neural19_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural19_WARN_ $4;
1191307   +drop Neural19_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural19_WARN_;
1191308   +Neural19_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural19_WARN_ = _WARN_;
1191309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191310   +* Ensmbl3: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 9 of 10;
1191311   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191313   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1191314   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1191315   +* NODE: Neural5;
MPRINT(EM_DIAGRAM):   * NODE: Neural5;
1191316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1191317   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1191318   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1191319   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1191320   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1191321   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1191322   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1191323   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1191324   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1191325   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1191326   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1191327   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1191328   +LENGTH _WARN_ $4
1191329   +      F_DepVar  $ 12
1191330   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1191331   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1191332   +
1191333   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1191334   +
1191335   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1191336   +
1191337   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1191338   +
1191339   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1191340   +
1191341   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1191342   +
1191343   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1191344   +
1191345   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1191346   +
1191347   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1191348   +
1191349   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1191350   +
1191351   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1191352   +
1191353   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1191354   +
1191355   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1191356   +
1191357   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1191358   +
1191359   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1191360   +
1191361   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1191362   +
1191363   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1191364   +
1191365   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1191366   +
1191367   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1191368   +
1191369   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1191370   +
1191371   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1191372   +
1191373   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1191374   +
1191375   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1191376   +
1191377   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1191378   +
1191379   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1191380   +
1191381   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1191382   +
1191383   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1191384   +
1191385   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1191386   +
1191387   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1191388   +
1191389   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1191390   +
1191391   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1191392   +
1191393   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1191394   +
1191395   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1191396   +
1191397   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1191398   +
1191399   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1191400   +
1191401   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1191402   +
1191403   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1191404   +
1191405   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1191406   +
1191407   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1191408   +
1191409   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1191410   +
1191411   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1191412   +
1191413   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1191414   +
1191415   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1191416   +
1191417   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1191418   +
1191419   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1191420   +
1191421   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1191422   +
1191423   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1191424   +
1191425   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1191426   +
1191427   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1191428   +
1191429   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1191430   +
1191431   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1191432   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1191433   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1191434   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1191435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191437   +end;
MPRINT(EM_DIAGRAM):   end;
1191438   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191439   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191440   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1191441   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191442   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1191443   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1191444   +   end;
MPRINT(EM_DIAGRAM):   end;
1191445   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191446   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1191447   +   end;
MPRINT(EM_DIAGRAM):   end;
1191448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191449   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1191450   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191451   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191452   +   end;
MPRINT(EM_DIAGRAM):   end;
1191453   +end;
MPRINT(EM_DIAGRAM):   end;
1191454   +
1191455   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1191456   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1191457   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1191458   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1191459   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1191460   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1191461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191463   +end;
MPRINT(EM_DIAGRAM):   end;
1191464   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191466   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1191467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191468   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1191469   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1191470   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1191471   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1191472   +   end;
MPRINT(EM_DIAGRAM):   end;
1191473   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191474   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1191475   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1191476   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1191477   +   end;
MPRINT(EM_DIAGRAM):   end;
1191478   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191479   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1191480   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1191481   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1191482   +   end;
MPRINT(EM_DIAGRAM):   end;
1191483   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191484   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1191485   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1191486   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1191487   +   end;
MPRINT(EM_DIAGRAM):   end;
1191488   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191489   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1191490   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1191491   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1191492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191494   +   end;
MPRINT(EM_DIAGRAM):   end;
1191495   +end;
MPRINT(EM_DIAGRAM):   end;
1191496   +
1191497   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1191498   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1191499   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1191500   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1191501   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1191502   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1191503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191505   +end;
MPRINT(EM_DIAGRAM):   end;
1191506   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191507   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191508   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1191509   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191510   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1191511   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1191512   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1191513   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1191514   +   end;
MPRINT(EM_DIAGRAM):   end;
1191515   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191516   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1191517   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1191518   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1191519   +   end;
MPRINT(EM_DIAGRAM):   end;
1191520   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191521   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1191522   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1191523   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1191524   +   end;
MPRINT(EM_DIAGRAM):   end;
1191525   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191526   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1191527   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1191528   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1191529   +   end;
MPRINT(EM_DIAGRAM):   end;
1191530   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191531   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1191532   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1191533   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1191534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191536   +   end;
MPRINT(EM_DIAGRAM):   end;
1191537   +end;
MPRINT(EM_DIAGRAM):   end;
1191538   +
1191539   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1191540   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1191541   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1191542   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1191543   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1191544   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1191545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191547   +end;
MPRINT(EM_DIAGRAM):   end;
1191548   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191549   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191550   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1191551   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191552   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191553   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1191554   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1191555   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1191556   +   end;
MPRINT(EM_DIAGRAM):   end;
1191557   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191558   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1191559   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1191560   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1191561   +   end;
MPRINT(EM_DIAGRAM):   end;
1191562   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191563   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1191564   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1191565   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1191566   +   end;
MPRINT(EM_DIAGRAM):   end;
1191567   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191568   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1191569   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1191570   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1191571   +   end;
MPRINT(EM_DIAGRAM):   end;
1191572   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191573   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1191574   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1191575   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1191576   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191577   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191578   +   end;
MPRINT(EM_DIAGRAM):   end;
1191579   +end;
MPRINT(EM_DIAGRAM):   end;
1191580   +
1191581   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1191582   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1191583   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1191584   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1191585   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1191586   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1191587   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191588   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191589   +end;
MPRINT(EM_DIAGRAM):   end;
1191590   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191591   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191592   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1191593   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191594   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191595   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1191596   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1191597   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1191598   +   end;
MPRINT(EM_DIAGRAM):   end;
1191599   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191600   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1191601   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1191602   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1191603   +   end;
MPRINT(EM_DIAGRAM):   end;
1191604   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191605   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1191606   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1191607   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1191608   +   end;
MPRINT(EM_DIAGRAM):   end;
1191609   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191610   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1191611   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1191612   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1191613   +   end;
MPRINT(EM_DIAGRAM):   end;
1191614   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191615   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1191616   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1191617   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1191618   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191619   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191620   +   end;
MPRINT(EM_DIAGRAM):   end;
1191621   +end;
MPRINT(EM_DIAGRAM):   end;
1191622   +
1191623   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1191624   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1191625   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1191626   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1191627   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1191628   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1191629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191631   +end;
MPRINT(EM_DIAGRAM):   end;
1191632   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191633   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191634   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1191635   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191636   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191637   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1191638   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1191639   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1191640   +   end;
MPRINT(EM_DIAGRAM):   end;
1191641   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191642   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1191643   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1191644   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1191645   +   end;
MPRINT(EM_DIAGRAM):   end;
1191646   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191647   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1191648   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1191649   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1191650   +   end;
MPRINT(EM_DIAGRAM):   end;
1191651   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191652   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1191653   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1191654   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1191655   +   end;
MPRINT(EM_DIAGRAM):   end;
1191656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191657   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1191658   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1191659   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1191660   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191661   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191662   +   end;
MPRINT(EM_DIAGRAM):   end;
1191663   +end;
MPRINT(EM_DIAGRAM):   end;
1191664   +
1191665   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1191666   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1191667   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1191668   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1191669   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1191670   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1191671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191673   +end;
MPRINT(EM_DIAGRAM):   end;
1191674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191676   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1191677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191678   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191679   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1191680   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1191681   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1191682   +   end;
MPRINT(EM_DIAGRAM):   end;
1191683   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191684   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1191685   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1191686   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1191687   +   end;
MPRINT(EM_DIAGRAM):   end;
1191688   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191689   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1191690   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1191691   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1191692   +   end;
MPRINT(EM_DIAGRAM):   end;
1191693   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191694   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1191695   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1191696   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1191697   +   end;
MPRINT(EM_DIAGRAM):   end;
1191698   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191699   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1191700   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1191701   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1191702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191704   +   end;
MPRINT(EM_DIAGRAM):   end;
1191705   +end;
MPRINT(EM_DIAGRAM):   end;
1191706   +
1191707   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1191708   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1191709   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1191710   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1191711   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1191712   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1191713   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191714   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191715   +end;
MPRINT(EM_DIAGRAM):   end;
1191716   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191717   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191718   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1191719   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191720   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191721   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1191722   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1191723   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1191724   +   end;
MPRINT(EM_DIAGRAM):   end;
1191725   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191726   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1191727   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1191728   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1191729   +   end;
MPRINT(EM_DIAGRAM):   end;
1191730   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191731   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1191732   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1191733   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1191734   +   end;
MPRINT(EM_DIAGRAM):   end;
1191735   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191736   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1191737   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1191738   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1191739   +   end;
MPRINT(EM_DIAGRAM):   end;
1191740   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191741   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1191742   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1191743   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1191744   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191745   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191746   +   end;
MPRINT(EM_DIAGRAM):   end;
1191747   +end;
MPRINT(EM_DIAGRAM):   end;
1191748   +
1191749   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1191750   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1191751   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1191752   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1191753   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1191754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191756   +end;
MPRINT(EM_DIAGRAM):   end;
1191757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191759   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1191760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191761   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191762   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1191763   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1191764   +   end;
MPRINT(EM_DIAGRAM):   end;
1191765   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191766   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1191767   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1191768   +   end;
MPRINT(EM_DIAGRAM):   end;
1191769   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191770   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1191771   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1191772   +   end;
MPRINT(EM_DIAGRAM):   end;
1191773   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191774   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1191775   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1191776   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191777   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191778   +   end;
MPRINT(EM_DIAGRAM):   end;
1191779   +end;
MPRINT(EM_DIAGRAM):   end;
1191780   +
1191781   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1191782   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1191783   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1191784   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1191785   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1191786   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1191787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191789   +end;
MPRINT(EM_DIAGRAM):   end;
1191790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191791   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191792   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1191793   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191794   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1191795   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1191796   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1191797   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1191798   +   end;
MPRINT(EM_DIAGRAM):   end;
1191799   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191800   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1191801   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1191802   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1191803   +   end;
MPRINT(EM_DIAGRAM):   end;
1191804   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191805   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1191806   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1191807   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1191808   +   end;
MPRINT(EM_DIAGRAM):   end;
1191809   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191810   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1191811   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1191812   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1191813   +   end;
MPRINT(EM_DIAGRAM):   end;
1191814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191815   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1191816   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1191817   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1191818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191820   +   end;
MPRINT(EM_DIAGRAM):   end;
1191821   +end;
MPRINT(EM_DIAGRAM):   end;
1191822   +
1191823   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1191824   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1191825   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1191826   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1191827   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1191828   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1191829   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191831   +end;
MPRINT(EM_DIAGRAM):   end;
1191832   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191833   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191834   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1191835   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191836   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191837   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1191838   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1191839   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1191840   +   end;
MPRINT(EM_DIAGRAM):   end;
1191841   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191842   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1191843   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1191844   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1191845   +   end;
MPRINT(EM_DIAGRAM):   end;
1191846   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191847   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1191848   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1191849   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1191850   +   end;
MPRINT(EM_DIAGRAM):   end;
1191851   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191852   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1191853   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1191854   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1191855   +   end;
MPRINT(EM_DIAGRAM):   end;
1191856   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191857   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1191858   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1191859   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1191860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191862   +   end;
MPRINT(EM_DIAGRAM):   end;
1191863   +end;
MPRINT(EM_DIAGRAM):   end;
1191864   +
1191865   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1191866   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1191867   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1191868   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1191869   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1191870   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1191871   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191872   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191873   +end;
MPRINT(EM_DIAGRAM):   end;
1191874   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191875   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191876   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1191877   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191878   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1191879   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1191880   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1191881   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1191882   +   end;
MPRINT(EM_DIAGRAM):   end;
1191883   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191884   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1191885   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1191886   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1191887   +   end;
MPRINT(EM_DIAGRAM):   end;
1191888   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191889   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1191890   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1191891   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1191892   +   end;
MPRINT(EM_DIAGRAM):   end;
1191893   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191894   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1191895   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1191896   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1191897   +   end;
MPRINT(EM_DIAGRAM):   end;
1191898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191899   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1191900   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1191901   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1191902   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191903   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191904   +   end;
MPRINT(EM_DIAGRAM):   end;
1191905   +end;
MPRINT(EM_DIAGRAM):   end;
1191906   +
1191907   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1191908   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1191909   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1191910   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1191911   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1191912   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1191913   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191914   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191915   +end;
MPRINT(EM_DIAGRAM):   end;
1191916   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191917   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191918   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1191919   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191920   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1191921   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1191922   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1191923   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1191924   +   end;
MPRINT(EM_DIAGRAM):   end;
1191925   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1191926   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1191927   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1191928   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1191929   +   end;
MPRINT(EM_DIAGRAM):   end;
1191930   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191931   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1191932   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1191933   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1191934   +   end;
MPRINT(EM_DIAGRAM):   end;
1191935   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191936   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1191937   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1191938   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1191939   +   end;
MPRINT(EM_DIAGRAM):   end;
1191940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191941   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1191942   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1191943   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1191944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191946   +   end;
MPRINT(EM_DIAGRAM):   end;
1191947   +end;
MPRINT(EM_DIAGRAM):   end;
1191948   +
1191949   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1191950   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1191951   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1191952   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1191953   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1191954   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1191955   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1191956   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191957   +end;
MPRINT(EM_DIAGRAM):   end;
1191958   +else do;
MPRINT(EM_DIAGRAM):   else do;
1191959   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1191960   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1191961   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1191962   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1191963   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1191964   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1191965   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1191966   +   end;
MPRINT(EM_DIAGRAM):   end;
1191967   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1191968   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1191969   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1191970   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1191971   +   end;
MPRINT(EM_DIAGRAM):   end;
1191972   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1191973   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1191974   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1191975   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1191976   +   end;
MPRINT(EM_DIAGRAM):   end;
1191977   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1191978   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1191979   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1191980   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1191981   +   end;
MPRINT(EM_DIAGRAM):   end;
1191982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1191983   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1191984   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1191985   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1191986   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1191987   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1191988   +   end;
MPRINT(EM_DIAGRAM):   end;
1191989   +end;
MPRINT(EM_DIAGRAM):   end;
1191990   +
1191991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1191992   +*** Checking missing input Interval
1191993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1191994   +
1191995   +IF NMISS(
1191996   +   Mnt ,
1191997   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Mnt , Year_Birth ) THEN DO;
1191998   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1191999   +
1192000   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192001   +END;
MPRINT(EM_DIAGRAM):   END;
1192002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192003   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1192004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192005   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192006   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1192007   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1192008   +END;
MPRINT(EM_DIAGRAM):   END;
1192009   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192010   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1192011   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1192012   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1192013   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1192014   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1192015   +END;
MPRINT(EM_DIAGRAM):   END;
1192016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192017   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1192018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192020   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1192021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192022   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192023   +   H11  =     0.07033495600492 * S_Mnt  +     0.02164786854075 * S_Year_Birth
1192024   +         ;
MPRINT(EM_DIAGRAM):   H11 = 0.07033495600492 * S_Mnt + 0.02164786854075 * S_Year_Birth ;
1192025   +   H11  = H11  +    -0.10246097495354 * GRP_AcceptedCmp52
1192026   +          +     0.24244790942008 * GRP_Frq2  +     0.02736490750924 * GRP_Frq3
1192027   +          +    -0.08972331943492 * GRP_Frq4  +      0.1088530259243 *
1192028   +        GRP_Income2  +     0.09756933974602 * GRP_Income3
1192029   +          +    -0.09969018293336 * GRP_Income4  +    -0.06022480886765 *
1192030   +        GRP_Mnt2  +    -0.03168516551801 * GRP_Mnt3  +     0.04222393413812 *
1192031   +        GRP_Mnt4  +     0.07987508803614 * GRP_MntFishProducts2
1192032   +          +     0.01034663934303 * GRP_MntFishProducts3
1192033   +          +    -0.00714052297881 * GRP_MntFishProducts4
1192034   +          +    -0.02224640901679 * GRP_MntGoldProds2
1192035   +          +    -0.00265157957353 * GRP_MntGoldProds3
1192036   +          +    -0.00077327174112 * GRP_MntGoldProds4
1192037   +          +    -0.14203645561503 * GRP_MntMeatProducts2
1192038   +          +    -0.01847520501128 * GRP_MntMeatProducts3
1192039   +          +     0.06241020545872 * GRP_MntMeatProducts4
1192040   +          +     0.12910081222261 * GRP_MntWines2  +     0.06374366211645 *
1192041   +        GRP_MntWines3  +    -0.06493693135008 * GRP_MntWines4
1192042   +          +    -0.10868042409647 * GRP_NumCatalogPurchases3
1192043   +          +     0.00306280182711 * GRP_NumCatalogPurchases4
1192044   +          +    -0.28364554981817 * GRP_NumDistPurchases2
1192045   +          +     0.00271105491408 * GRP_NumDistPurchases3
1192046   +          +      0.0545061287852 * GRP_NumDistPurchases4
1192047   +          +     0.01855092975131 * GRP_NumWebPurchases2
1192048   +          +     0.01079548631549 * GRP_NumWebPurchases3
1192049   +          +     -0.0040833175266 * GRP_NumWebPurchases4
1192050   +          +    -0.06430035739854 * GRP_RFMstat2  +      -0.006946906998 *
1192051   +        GRP_RFMstat3  +     0.02582227224216 * GRP_RFMstat4
1192052   +          +     0.06075412415465 * GRP_RMntFrq2  +     0.04002497865657 *
1192053   +        GRP_RMntFrq3  +    -0.08061728248352 * GRP_RMntFrq4
1192054   +          +     0.19668753813344 * GRP_Recency2  +     0.05087802922807 *
1192055   +        GRP_Recency3  +    -0.06072698122489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10246097495354 * GRP_AcceptedCmp52 + 0.24244790942008 * 
GRP_Frq2 + 0.02736490750924 * GRP_Frq3 + -0.08972331943492 * GRP_Frq4 + 0.1088530259243 * 
GRP_Income2 + 0.09756933974602 * GRP_Income3 + -0.09969018293336 * GRP_Income4 + 
-0.06022480886765 * GRP_Mnt2 + -0.03168516551801 * GRP_Mnt3 + 0.04222393413812 * GRP_Mnt4 + 
0.07987508803614 * GRP_MntFishProducts2 + 0.01034663934303 * GRP_MntFishProducts3 + 
-0.00714052297881 * GRP_MntFishProducts4 + -0.02224640901679 * GRP_MntGoldProds2 + 
-0.00265157957353 * GRP_MntGoldProds3 + -0.00077327174112 * GRP_MntGoldProds4 + 
-0.14203645561503 * GRP_MntMeatProducts2 + -0.01847520501128 * GRP_MntMeatProducts3 + 
0.06241020545872 * GRP_MntMeatProducts4 + 0.12910081222261 * GRP_MntWines2 + 0.06374366211645 
* GRP_MntWines3 + -0.06493693135008 * GRP_MntWines4 + -0.10868042409647 * 
GRP_NumCatalogPurchases3 + 0.00306280182711 * GRP_NumCatalogPurchases4 + -0.28364554981817 * 
GRP_NumDistPurchases2 + 0.00271105491408 * GRP_NumDistPurchases3 + 0.0545061287852 * 
GRP_NumDistPurchases4 + 0.01855092975131 * GRP_NumWebPurchases2 + 0.01079548631549 * 
GRP_NumWebPurchases3 + -0.0040833175266 * GRP_NumWebPurchases4 + -0.06430035739854 * 
GRP_RFMstat2 + -0.006946906998 * GRP_RFMstat3 + 0.02582227224216 * GRP_RFMstat4 + 
0.06075412415465 * GRP_RMntFrq2 + 0.04002497865657 * GRP_RMntFrq3 + -0.08061728248352 * 
GRP_RMntFrq4 + 0.19668753813344 * GRP_Recency2 + 0.05087802922807 * GRP_Recency3 + 
-0.06072698122489 * GRP_Recency4 ;
1192056   +   H11  =     0.08129760919972 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.08129760919972 + H11 ;
1192057   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1192058   +END;
MPRINT(EM_DIAGRAM):   END;
1192059   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192060   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1192061   +END;
MPRINT(EM_DIAGRAM):   END;
1192062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192063   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1192064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192065   +
1192066   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1192067   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1192068   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1192069   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1192070   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1192071   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192072   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1192073   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1192074   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1192075   +end;
MPRINT(EM_DIAGRAM):   end;
1192076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192077   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1192078   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1192079   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1192080   +   end;
MPRINT(EM_DIAGRAM):   end;
1192081   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1192082   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1192083   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1192084   +   end;
MPRINT(EM_DIAGRAM):   end;
1192085   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192086   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1192087   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1192088   +   end;
MPRINT(EM_DIAGRAM):   end;
1192089   +end;
MPRINT(EM_DIAGRAM):   end;
1192090   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1192091   +   P_DepVar1  =     9.69301848740588 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.69301848740588 * H11 ;
1192092   +   P_DepVar1  =    -2.63860368150698 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.63860368150698 + P_DepVar1 ;
1192093   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1192094   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1192095   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1192096   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1192097   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1192098   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1192099   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1192100   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1192101   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1192102   +END;
MPRINT(EM_DIAGRAM):   END;
1192103   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1192104   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1192105   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1192106   +END;
MPRINT(EM_DIAGRAM):   END;
1192107   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1192108   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1192109   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1192110   +END;
MPRINT(EM_DIAGRAM):   END;
1192111   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1192112   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1192113   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1192114   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1192115   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1192116   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1192117   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1192118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192119   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1192120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1192121   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1192122   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1192123   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1192124   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1192125   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1192126   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1192127   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1192128   +END;
MPRINT(EM_DIAGRAM):   END;
1192129   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1192130   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1192131   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1192132   +drop
1192133   +H11
1192134   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1192135   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1192136   +* Renaming variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural5;
1192137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192138   +* Renaming Posterior variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural5;
1192139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192140   +drop Neural5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar1;
1192141   +Neural5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar1 = P_DepVar1;
1192142   +drop Neural5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar0;
1192143   +Neural5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar0 = P_DepVar0;
1192144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192145   +* Renaming _WARN_ variable for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural5;
1192146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192147   +length Neural5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural5_WARN_ $4;
1192148   +drop Neural5_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural5_WARN_;
1192149   +Neural5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural5_WARN_ = _WARN_;
1192150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192151   +* Ensmbl3: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 10 of 10;
1192152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192154   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1192155   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1192156   +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
1192157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192158   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1192159   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1192160   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1192161   +
1192162   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1192163   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1192164   +
1192165   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1192166   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1192167   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1192168   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1192169   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1192170   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1192171   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1192172   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1192173   +
1192174   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1192175   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1192176   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1192177   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1192178   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1192179   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192180   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1192181   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1192182   +end;
MPRINT(EM_DIAGRAM):   end;
1192183   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192184   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1192185   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1192186   +   end;
MPRINT(EM_DIAGRAM):   end;
1192187   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1192188   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1192189   +   end;
MPRINT(EM_DIAGRAM):   end;
1192190   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192191   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1192192   +   end;
MPRINT(EM_DIAGRAM):   end;
1192193   +end;
MPRINT(EM_DIAGRAM):   end;
1192194   +
1192195   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1192196   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1192197   +
1192198   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1192199   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1192200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192202   +end;
MPRINT(EM_DIAGRAM):   end;
1192203   +
1192204   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1192205   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1192206   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1192207   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1192208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192210   +end;
MPRINT(EM_DIAGRAM):   end;
1192211   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192212   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192213   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1192214   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192215   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1192216   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1192217   +   end;
MPRINT(EM_DIAGRAM):   end;
1192218   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1192219   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1192220   +   end;
MPRINT(EM_DIAGRAM):   end;
1192221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192222   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1192223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192225   +   end;
MPRINT(EM_DIAGRAM):   end;
1192226   +end;
MPRINT(EM_DIAGRAM):   end;
1192227   +
1192228   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1192229   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1192230   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1192231   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1192232   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1192233   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1192234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192236   +end;
MPRINT(EM_DIAGRAM):   end;
1192237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192239   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1192240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192241   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1192242   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1192243   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1192244   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1192245   +   end;
MPRINT(EM_DIAGRAM):   end;
1192246   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1192247   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1192248   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1192249   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1192250   +   end;
MPRINT(EM_DIAGRAM):   end;
1192251   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192252   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1192253   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1192254   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1192255   +   end;
MPRINT(EM_DIAGRAM):   end;
1192256   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192257   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1192258   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1192259   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1192260   +   end;
MPRINT(EM_DIAGRAM):   end;
1192261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192262   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1192263   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1192264   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1192265   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192266   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192267   +   end;
MPRINT(EM_DIAGRAM):   end;
1192268   +end;
MPRINT(EM_DIAGRAM):   end;
1192269   +
1192270   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1192271   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1192272   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1192273   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1192274   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1192275   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1192276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192278   +end;
MPRINT(EM_DIAGRAM):   end;
1192279   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192280   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192281   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1192282   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192283   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1192284   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1192285   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1192286   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1192287   +   end;
MPRINT(EM_DIAGRAM):   end;
1192288   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192289   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1192290   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1192291   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1192292   +   end;
MPRINT(EM_DIAGRAM):   end;
1192293   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1192294   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1192295   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1192296   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1192297   +   end;
MPRINT(EM_DIAGRAM):   end;
1192298   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192299   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1192300   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1192301   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1192302   +   end;
MPRINT(EM_DIAGRAM):   end;
1192303   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192304   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1192305   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1192306   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1192307   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192308   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192309   +   end;
MPRINT(EM_DIAGRAM):   end;
1192310   +end;
MPRINT(EM_DIAGRAM):   end;
1192311   +
1192312   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1192313   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1192314   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1192315   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1192316   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1192317   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1192318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192320   +end;
MPRINT(EM_DIAGRAM):   end;
1192321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192322   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192323   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1192324   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192325   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1192326   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1192327   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1192328   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1192329   +   end;
MPRINT(EM_DIAGRAM):   end;
1192330   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1192331   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1192332   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1192333   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1192334   +   end;
MPRINT(EM_DIAGRAM):   end;
1192335   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192336   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1192337   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1192338   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1192339   +   end;
MPRINT(EM_DIAGRAM):   end;
1192340   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192341   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1192342   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1192343   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1192344   +   end;
MPRINT(EM_DIAGRAM):   end;
1192345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192346   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1192347   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1192348   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1192349   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192350   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192351   +   end;
MPRINT(EM_DIAGRAM):   end;
1192352   +end;
MPRINT(EM_DIAGRAM):   end;
1192353   +
1192354   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1192355   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1192356   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1192357   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1192358   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1192359   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1192360   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192361   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192362   +end;
MPRINT(EM_DIAGRAM):   end;
1192363   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192364   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192365   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1192366   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192367   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1192368   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1192369   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1192370   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1192371   +   end;
MPRINT(EM_DIAGRAM):   end;
1192372   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192373   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1192374   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1192375   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1192376   +   end;
MPRINT(EM_DIAGRAM):   end;
1192377   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1192378   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1192379   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1192380   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1192381   +   end;
MPRINT(EM_DIAGRAM):   end;
1192382   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192383   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1192384   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1192385   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1192386   +   end;
MPRINT(EM_DIAGRAM):   end;
1192387   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192388   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1192389   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1192390   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1192391   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192392   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192393   +   end;
MPRINT(EM_DIAGRAM):   end;
1192394   +end;
MPRINT(EM_DIAGRAM):   end;
1192395   +
1192396   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1192397   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1192398   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1192399   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1192400   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1192401   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1192402   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192403   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192404   +end;
MPRINT(EM_DIAGRAM):   end;
1192405   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192406   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192407   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1192408   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192409   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1192410   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1192411   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1192412   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1192413   +   end;
MPRINT(EM_DIAGRAM):   end;
1192414   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1192415   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1192416   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1192417   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1192418   +   end;
MPRINT(EM_DIAGRAM):   end;
1192419   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192420   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1192421   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1192422   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1192423   +   end;
MPRINT(EM_DIAGRAM):   end;
1192424   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192425   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1192426   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1192427   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1192428   +   end;
MPRINT(EM_DIAGRAM):   end;
1192429   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192430   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1192431   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1192432   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1192433   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192434   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192435   +   end;
MPRINT(EM_DIAGRAM):   end;
1192436   +end;
MPRINT(EM_DIAGRAM):   end;
1192437   +
1192438   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1192439   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1192440   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1192441   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1192442   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1192443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192445   +end;
MPRINT(EM_DIAGRAM):   end;
1192446   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192447   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192448   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1192449   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192450   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1192451   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1192452   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1192453   +   end;
MPRINT(EM_DIAGRAM):   end;
1192454   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1192455   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1192456   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1192457   +   end;
MPRINT(EM_DIAGRAM):   end;
1192458   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192459   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1192460   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1192461   +   end;
MPRINT(EM_DIAGRAM):   end;
1192462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192463   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1192464   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1192465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192467   +   end;
MPRINT(EM_DIAGRAM):   end;
1192468   +end;
MPRINT(EM_DIAGRAM):   end;
1192469   +
1192470   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1192471   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1192472   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1192473   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1192474   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1192475   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1192476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192478   +end;
MPRINT(EM_DIAGRAM):   end;
1192479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192481   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1192482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192483   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1192484   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1192485   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1192486   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1192487   +   end;
MPRINT(EM_DIAGRAM):   end;
1192488   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192489   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1192490   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1192491   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1192492   +   end;
MPRINT(EM_DIAGRAM):   end;
1192493   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192494   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1192495   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1192496   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1192497   +   end;
MPRINT(EM_DIAGRAM):   end;
1192498   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1192499   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1192500   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1192501   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1192502   +   end;
MPRINT(EM_DIAGRAM):   end;
1192503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192504   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1192505   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1192506   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1192507   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192508   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192509   +   end;
MPRINT(EM_DIAGRAM):   end;
1192510   +end;
MPRINT(EM_DIAGRAM):   end;
1192511   +
1192512   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1192513   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1192514   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1192515   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1192516   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1192517   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1192518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192520   +end;
MPRINT(EM_DIAGRAM):   end;
1192521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192523   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1192524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192525   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1192526   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1192527   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1192528   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1192529   +   end;
MPRINT(EM_DIAGRAM):   end;
1192530   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1192531   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1192532   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1192533   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1192534   +   end;
MPRINT(EM_DIAGRAM):   end;
1192535   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192536   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1192537   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1192538   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1192539   +   end;
MPRINT(EM_DIAGRAM):   end;
1192540   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192541   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1192542   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1192543   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1192544   +   end;
MPRINT(EM_DIAGRAM):   end;
1192545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192546   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1192547   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1192548   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1192549   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192550   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192551   +   end;
MPRINT(EM_DIAGRAM):   end;
1192552   +end;
MPRINT(EM_DIAGRAM):   end;
1192553   +
1192554   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1192555   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1192556   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1192557   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1192558   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1192559   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1192560   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1192561   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192562   +end;
MPRINT(EM_DIAGRAM):   end;
1192563   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192564   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1192565   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1192566   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1192567   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1192568   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1192569   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1192570   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1192571   +   end;
MPRINT(EM_DIAGRAM):   end;
1192572   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1192573   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1192574   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1192575   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1192576   +   end;
MPRINT(EM_DIAGRAM):   end;
1192577   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1192578   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1192579   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1192580   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1192581   +   end;
MPRINT(EM_DIAGRAM):   end;
1192582   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1192583   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1192584   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1192585   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1192586   +   end;
MPRINT(EM_DIAGRAM):   end;
1192587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1192588   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1192589   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1192590   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1192591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1192592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1192593   +   end;
MPRINT(EM_DIAGRAM):   end;
1192594   +end;
MPRINT(EM_DIAGRAM):   end;
1192595   +
1192596   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1192597   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1192598   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1192599   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1192600   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1192601   +end;
MPRINT(EM_DIAGRAM):   end;
1192602   +
1192603   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1192604   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1192605   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1192606   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1192607   +
1192608   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1192609   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192610   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1192611   +
1192612   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1192613   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192614   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1192615   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1192616   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1192617   +
1192618   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1192619   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192620   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1192621   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1192622   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1192623   +
1192624   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1192625   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192626   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1192627   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1192628   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1192629   +
1192630   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1192631   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192632   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1192633   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1192634   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1192635   +
1192636   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1192637   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192638   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1192639   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1192640   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1192641   +
1192642   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1192643   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192644   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1192645   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1192646   +
1192647   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1192648   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192649   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1192650   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1192651   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1192652   +
1192653   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1192654   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192655   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1192656   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1192657   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1192658   +
1192659   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1192660   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1192661   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1192662   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1192663   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1192664   +
1192665   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1192666   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1192667   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1192668   +
1192669   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1192670   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1192671   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1192672   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1192673   +
1192674   +REG7DR1:
1192675   +
1192676   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
1192677   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1192678   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1192679   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1192680   +end;
MPRINT(EM_DIAGRAM):   end;
1192681   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192682   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1192683   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1192684   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1192685   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1192686   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1192687   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1192688   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1192689   +   end;
MPRINT(EM_DIAGRAM):   end;
1192690   +end;
MPRINT(EM_DIAGRAM):   end;
1192691   +
1192692   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1192693   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1192694   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1192695   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1192696   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1192697   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1192698   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1192699   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1192700   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1192701   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1192702   +end;
MPRINT(EM_DIAGRAM):   end;
1192703   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1192704   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1192705   +
1192706   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1192707   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1192708   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1192709   +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
1192710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192711   +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
1192712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192713   +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
1192714   +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
1192715   +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
1192716   +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
1192717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192718   +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
1192719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192720   +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
1192721   +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
1192722   +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
1192723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192724   +* Ensmbl3: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Average Posteriors of 10 models;
1192725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192726   +P_DepVar1 = (
1192727   +Reg3_P_DepVar1 +
1192728   +Tree3_P_DepVar1 +
1192729   +Neural18_P_DepVar1 +
1192730   +Neural23_P_DepVar1 +
1192731   +Neural22_P_DepVar1 +
1192732   +Neural21_P_DepVar1 +
1192733   +Neural20_P_DepVar1 +
1192734   +Neural19_P_DepVar1 +
1192735   +Neural5_P_DepVar1 +
1192736   +Reg7_P_DepVar1
1192737   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg3_P_DepVar1 + Tree3_P_DepVar1 + Neural18_P_DepVar1 + 
Neural23_P_DepVar1 + Neural22_P_DepVar1 + Neural21_P_DepVar1 + Neural20_P_DepVar1 + 
Neural19_P_DepVar1 + Neural5_P_DepVar1 + Reg7_P_DepVar1 )/10;
1192738   +P_DepVar0 = (
1192739   +Reg3_P_DepVar0 +
1192740   +Tree3_P_DepVar0 +
1192741   +Neural18_P_DepVar0 +
1192742   +Neural23_P_DepVar0 +
1192743   +Neural22_P_DepVar0 +
1192744   +Neural21_P_DepVar0 +
1192745   +Neural20_P_DepVar0 +
1192746   +Neural19_P_DepVar0 +
1192747   +Neural5_P_DepVar0 +
1192748   +Reg7_P_DepVar0
1192749   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg3_P_DepVar0 + Tree3_P_DepVar0 + Neural18_P_DepVar0 + 
Neural23_P_DepVar0 + Neural22_P_DepVar0 + Neural21_P_DepVar0 + Neural20_P_DepVar0 + 
Neural19_P_DepVar0 + Neural5_P_DepVar0 + Reg7_P_DepVar0 )/10;
1192750   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192751   +* Ensmbl3: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Classification Vars;
1192752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192753   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1192754   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1192755   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1192756   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1192757   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1192758   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1192759   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1192760   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1192761   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1192762   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1192763   +end;
MPRINT(EM_DIAGRAM):   end;
1192764   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1192765   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1192766   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1192767   +end;
MPRINT(EM_DIAGRAM):   end;
1192768   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1192769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192770   +* Ensmbl3: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Producing Unformatted variable;
1192771   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192772   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1192773   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1192774   +else
1192775   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1192776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192777   +* Ensmbl3: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing _WARN_ Variable;
1192778   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192779   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1192780   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1192781   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1192782   +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1192783   +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1192784   +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1192785   +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1192786   +if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1192787   +if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1192788   +if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1192789   +if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1192790   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1192790  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1192791   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1192791  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1192792   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1192792  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1192793   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1192793  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1192794   +if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1192794  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1192795   +if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1192795  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1192796   +if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1192796  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1192797   +if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1192797  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1192798   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1192798  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1192799   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1192799  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1192800   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1192800  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1192801   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1192801  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1192802   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1192802  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1192803   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1192803  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1192804   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1192804  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1192805   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1192805  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1192806   +if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1192806  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1192807   +if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1192807  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1192808   +if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1192808  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1192809   +if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1192809  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1192810   +if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1192810  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1192811   +if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1192811  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1192812   +if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1192812  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1192813   +if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1192813  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1192814   +if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1192815   +if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1192816   +if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1192817   +if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1192818   +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1192819   +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1192820   +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1192821   +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1192822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192823   +* Ensmbl3: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Residual Vars;
1192824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192825   +if
1192826   +F_DepVar NE '1'
1192827   +AND F_DepVar NE '0'
1192828   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1192829   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1192830   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1192831   +end;
MPRINT(EM_DIAGRAM):   end;
1192832   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192833   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1192834   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1192835   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1192836   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1192837   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1192838   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1192839   +END;
MPRINT(EM_DIAGRAM):   END;
1192840   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1192841    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL3_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG3_TRAIN.VIEW used (Total process time):
      real time           0.57 seconds
      cpu time            0.40 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.59 seconds
      cpu time            0.42 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1192842    quit;
1192843    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1192844    filename emflow
1192844  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring REG3_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192845    *------------------------------------------------------------*;
1192846    * Ensmbl3: Scoring REG3_VALIDATE data;
1192847    *------------------------------------------------------------*;
1192848    data EMWS8.Ensmbl3_VALIDATE
1192849    / view=EMWS8.Ensmbl3_VALIDATE
1192850    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_VALIDATE / view=EMWS8.Ensmbl3_VALIDATE ;
1192851    set EMWS8.Reg3_VALIDATE
1192852    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_VALIDATE ;
1192853    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\EMFLOWSCORE.sas.
1192854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192855   +* Ensmbl3: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Combine model for DepVar;
1192856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192857   +* Ensmbl3: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 1 of 10;
1192858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192860   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1192861   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1192862   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1192863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192865   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1192866   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1192867   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1192868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192870   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1192871   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1192872   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1192873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192874   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192875   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1192876   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1192877   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1192878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192879   +
1192880   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1192881   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1192881  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1192882   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1192883   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1192884   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1192885   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1192886   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1192887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192888   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1192889   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1192890   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1192891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192892   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192893   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1192894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192895   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1192896   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1192897   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1192898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192899   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1192900   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1192901   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1192902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192903   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192904   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1192905   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1192906   +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
1192907   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192908   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1192909   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1192910   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1192911   +
1192912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192913   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1192914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192915   +LABEL GRP_AcceptedCmp5 =
1192916   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1192917   +
1192918   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1192919   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1192920   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1192921   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1192922   +end;
MPRINT(EM_DIAGRAM):   end;
1192923   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1192924   +if (_UFORMAT eq '0'
1192925   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1192926   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1192927   +end;
MPRINT(EM_DIAGRAM):   end;
1192928   +else
1192929   +if (_UFORMAT eq '1'
1192930   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1192931   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1192932   +end;
MPRINT(EM_DIAGRAM):   end;
1192933   +else do;
MPRINT(EM_DIAGRAM):   else do;
1192934   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1192935   +end;
MPRINT(EM_DIAGRAM):   end;
1192936   +end;
MPRINT(EM_DIAGRAM):   end;
1192937   +
1192938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192939   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1192940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192941   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1192942   +
1192943   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1192944   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1192945   +end;
MPRINT(EM_DIAGRAM):   end;
1192946   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1192947   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1192948   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1192949   +end;
MPRINT(EM_DIAGRAM):   end;
1192950   +else
1192951   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1192952   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1192953   +end;
MPRINT(EM_DIAGRAM):   end;
1192954   +else
1192955   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1192956   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1192957   +end;
MPRINT(EM_DIAGRAM):   end;
1192958   +else
1192959   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1192960   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1192961   +end;
MPRINT(EM_DIAGRAM):   end;
1192962   +end;
MPRINT(EM_DIAGRAM):   end;
1192963   +
1192964   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192965   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1192966   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192967   +LABEL GRP_Income =
1192968   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1192969   +
1192970   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1192971   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1192972   +end;
MPRINT(EM_DIAGRAM):   end;
1192973   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1192974   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1192975   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1192976   +end;
MPRINT(EM_DIAGRAM):   end;
1192977   +else
1192978   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1192979   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1192980   +end;
MPRINT(EM_DIAGRAM):   end;
1192981   +else
1192982   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1192983   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1192984   +end;
MPRINT(EM_DIAGRAM):   end;
1192985   +else
1192986   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1192987   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1192988   +end;
MPRINT(EM_DIAGRAM):   end;
1192989   +end;
MPRINT(EM_DIAGRAM):   end;
1192990   +
1192991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192992   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1192993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1192994   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1192995   +
1192996   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1192997   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1192998   +end;
MPRINT(EM_DIAGRAM):   end;
1192999   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1193000   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1193001   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1193002   +end;
MPRINT(EM_DIAGRAM):   end;
1193003   +else
1193004   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1193005   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1193006   +end;
MPRINT(EM_DIAGRAM):   end;
1193007   +else
1193008   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1193009   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1193010   +end;
MPRINT(EM_DIAGRAM):   end;
1193011   +else
1193012   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1193013   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1193014   +end;
MPRINT(EM_DIAGRAM):   end;
1193015   +end;
MPRINT(EM_DIAGRAM):   end;
1193016   +
1193017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193018   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1193019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193020   +LABEL GRP_MntFishProducts =
1193021   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1193022   +
1193023   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1193024   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1193025   +end;
MPRINT(EM_DIAGRAM):   end;
1193026   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1193027   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1193028   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1193029   +end;
MPRINT(EM_DIAGRAM):   end;
1193030   +else
1193031   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1193032   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1193033   +end;
MPRINT(EM_DIAGRAM):   end;
1193034   +else
1193035   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1193036   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1193037   +end;
MPRINT(EM_DIAGRAM):   end;
1193038   +else
1193039   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1193040   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1193041   +end;
MPRINT(EM_DIAGRAM):   end;
1193042   +end;
MPRINT(EM_DIAGRAM):   end;
1193043   +
1193044   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193045   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1193046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193047   +LABEL GRP_MntGoldProds =
1193048   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1193049   +
1193050   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1193051   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1193052   +end;
MPRINT(EM_DIAGRAM):   end;
1193053   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1193054   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1193055   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1193056   +end;
MPRINT(EM_DIAGRAM):   end;
1193057   +else
1193058   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1193059   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1193060   +end;
MPRINT(EM_DIAGRAM):   end;
1193061   +else
1193062   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1193063   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1193064   +end;
MPRINT(EM_DIAGRAM):   end;
1193065   +else
The SAS System

1193066   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1193067   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1193068   +end;
MPRINT(EM_DIAGRAM):   end;
1193069   +end;
MPRINT(EM_DIAGRAM):   end;
1193070   +
1193071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193072   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1193073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193074   +LABEL GRP_MntMeatProducts =
1193075   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1193076   +
1193077   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1193078   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1193079   +end;
MPRINT(EM_DIAGRAM):   end;
1193080   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1193081   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1193082   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1193083   +end;
MPRINT(EM_DIAGRAM):   end;
1193084   +else
1193085   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1193086   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1193087   +end;
MPRINT(EM_DIAGRAM):   end;
1193088   +else
1193089   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1193090   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1193091   +end;
MPRINT(EM_DIAGRAM):   end;
1193092   +else
1193093   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1193094   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1193095   +end;
MPRINT(EM_DIAGRAM):   end;
1193096   +end;
MPRINT(EM_DIAGRAM):   end;
1193097   +
1193098   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193099   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1193100   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193101   +LABEL GRP_MntWines =
1193102   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1193103   +
1193104   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1193105   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1193106   +end;
MPRINT(EM_DIAGRAM):   end;
1193107   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1193108   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1193109   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1193110   +end;
MPRINT(EM_DIAGRAM):   end;
1193111   +else
1193112   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1193113   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1193114   +end;
MPRINT(EM_DIAGRAM):   end;
1193115   +else
1193116   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1193117   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1193118   +end;
MPRINT(EM_DIAGRAM):   end;
1193119   +else
1193120   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1193121   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1193122   +end;
MPRINT(EM_DIAGRAM):   end;
1193123   +end;
MPRINT(EM_DIAGRAM):   end;
1193124   +
1193125   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193126   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1193127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193128   +LABEL GRP_NumCatalogPurchases =
1193129   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1193130   +
1193131   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1193132   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1193133   +end;
MPRINT(EM_DIAGRAM):   end;
1193134   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1193135   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1193136   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1193137   +end;
MPRINT(EM_DIAGRAM):   end;
1193138   +else
1193139   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1193140   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1193141   +end;
MPRINT(EM_DIAGRAM):   end;
1193142   +else
1193143   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1193144   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1193145   +end;
MPRINT(EM_DIAGRAM):   end;
1193146   +else
1193147   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1193148   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1193149   +end;
MPRINT(EM_DIAGRAM):   end;
1193150   +end;
MPRINT(EM_DIAGRAM):   end;
1193151   +
1193152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193153   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1193154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193155   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1193156   +
1193157   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1193158   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1193159   +end;
MPRINT(EM_DIAGRAM):   end;
1193160   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1193161   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1193162   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1193163   +end;
MPRINT(EM_DIAGRAM):   end;
1193164   +else
1193165   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1193166   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1193167   +end;
MPRINT(EM_DIAGRAM):   end;
1193168   +else
1193169   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1193170   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1193171   +end;
MPRINT(EM_DIAGRAM):   end;
1193172   +else
1193173   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1193174   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1193175   +end;
MPRINT(EM_DIAGRAM):   end;
1193176   +end;
MPRINT(EM_DIAGRAM):   end;
1193177   +
1193178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193179   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1193180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193181   +LABEL GRP_NumWebPurchases =
1193182   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1193183   +
1193184   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1193185   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1193186   +end;
MPRINT(EM_DIAGRAM):   end;
1193187   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1193188   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1193189   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1193190   +end;
MPRINT(EM_DIAGRAM):   end;
1193191   +else
1193192   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1193193   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1193194   +end;
MPRINT(EM_DIAGRAM):   end;
1193195   +else
1193196   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1193197   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1193198   +end;
MPRINT(EM_DIAGRAM):   end;
1193199   +else
1193200   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1193201   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1193202   +end;
MPRINT(EM_DIAGRAM):   end;
1193203   +end;
MPRINT(EM_DIAGRAM):   end;
1193204   +
1193205   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193206   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1193207   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193208   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1193209   +
1193210   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1193211   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1193212   +end;
MPRINT(EM_DIAGRAM):   end;
1193213   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1193214   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1193215   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1193216   +end;
MPRINT(EM_DIAGRAM):   end;
1193217   +else
1193218   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1193219   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1193220   +end;
MPRINT(EM_DIAGRAM):   end;
1193221   +else
1193222   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1193223   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1193224   +end;
MPRINT(EM_DIAGRAM):   end;
1193225   +else
1193226   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1193227   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1193228   +end;
MPRINT(EM_DIAGRAM):   end;
1193229   +end;
MPRINT(EM_DIAGRAM):   end;
1193230   +
1193231   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193232   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1193233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193234   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1193235   +
1193236   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1193237   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1193238   +end;
MPRINT(EM_DIAGRAM):   end;
1193239   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1193240   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1193241   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1193242   +end;
MPRINT(EM_DIAGRAM):   end;
1193243   +else
1193244   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1193245   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1193246   +end;
MPRINT(EM_DIAGRAM):   end;
1193247   +else
1193248   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1193249   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1193250   +end;
MPRINT(EM_DIAGRAM):   end;
1193251   +else
1193252   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1193253   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1193254   +end;
MPRINT(EM_DIAGRAM):   end;
1193255   +end;
MPRINT(EM_DIAGRAM):   end;
1193256   +
1193257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193258   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1193259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193260   +LABEL GRP_Recency =
1193261   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1193262   +
1193263   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1193264   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1193265   +end;
MPRINT(EM_DIAGRAM):   end;
1193266   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1193267   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1193268   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1193269   +end;
MPRINT(EM_DIAGRAM):   end;
1193270   +else
1193271   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1193272   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1193273   +end;
MPRINT(EM_DIAGRAM):   end;
1193274   +else
1193275   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1193276   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1193277   +end;
MPRINT(EM_DIAGRAM):   end;
1193278   +else
1193279   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1193280   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1193281   +end;
MPRINT(EM_DIAGRAM):   end;
1193282   +end;
MPRINT(EM_DIAGRAM):   end;
1193283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193284   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1193285   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1193286   +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
1193287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193288   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1193289   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1193290   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1193291   +
1193292   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1193293   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1193294   +
1193295   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1193296   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1193297   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1193298   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1193299   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1193300   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1193301   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1193302   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1193303   +
1193304   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1193305   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1193306   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1193307   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1193308   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1193309   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193310   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1193311   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1193312   +end;
MPRINT(EM_DIAGRAM):   end;
1193313   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193314   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1193315   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1193316   +   end;
MPRINT(EM_DIAGRAM):   end;
1193317   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1193318   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1193319   +   end;
MPRINT(EM_DIAGRAM):   end;
1193320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193321   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1193322   +   end;
MPRINT(EM_DIAGRAM):   end;
1193323   +end;
MPRINT(EM_DIAGRAM):   end;
1193324   +
1193325   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1193326   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1193327   +
1193328   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1193329   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1193330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193332   +end;
MPRINT(EM_DIAGRAM):   end;
1193333   +
1193334   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1193335   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1193336   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1193337   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1193338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193340   +end;
MPRINT(EM_DIAGRAM):   end;
1193341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193343   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1193344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193345   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1193346   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1193347   +   end;
MPRINT(EM_DIAGRAM):   end;
1193348   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1193349   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1193350   +   end;
MPRINT(EM_DIAGRAM):   end;
1193351   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193352   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1193353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193355   +   end;
MPRINT(EM_DIAGRAM):   end;
1193356   +end;
MPRINT(EM_DIAGRAM):   end;
1193357   +
1193358   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1193359   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1193360   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1193361   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1193362   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1193363   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1193364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193366   +end;
MPRINT(EM_DIAGRAM):   end;
1193367   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193369   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1193370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193371   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1193372   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1193373   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1193374   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1193375   +   end;
MPRINT(EM_DIAGRAM):   end;
1193376   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1193377   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1193378   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1193379   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1193380   +   end;
MPRINT(EM_DIAGRAM):   end;
1193381   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193382   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1193383   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1193384   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1193385   +   end;
MPRINT(EM_DIAGRAM):   end;
1193386   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193387   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1193388   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1193389   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1193390   +   end;
MPRINT(EM_DIAGRAM):   end;
1193391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193392   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1193393   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1193394   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1193395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193397   +   end;
MPRINT(EM_DIAGRAM):   end;
1193398   +end;
MPRINT(EM_DIAGRAM):   end;
1193399   +
1193400   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1193401   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1193402   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1193403   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1193404   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1193405   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1193406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193408   +end;
MPRINT(EM_DIAGRAM):   end;
1193409   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193411   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1193412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193413   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1193414   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1193415   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1193416   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1193417   +   end;
MPRINT(EM_DIAGRAM):   end;
1193418   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193419   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1193420   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1193421   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1193422   +   end;
MPRINT(EM_DIAGRAM):   end;
1193423   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1193424   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1193425   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1193426   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1193427   +   end;
MPRINT(EM_DIAGRAM):   end;
1193428   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193429   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1193430   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1193431   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1193432   +   end;
MPRINT(EM_DIAGRAM):   end;
1193433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193434   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1193435   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1193436   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1193437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193439   +   end;
MPRINT(EM_DIAGRAM):   end;
1193440   +end;
MPRINT(EM_DIAGRAM):   end;
1193441   +
1193442   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1193443   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1193444   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1193445   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1193446   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1193447   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1193448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193450   +end;
MPRINT(EM_DIAGRAM):   end;
1193451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193453   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1193454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193455   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1193456   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1193457   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1193458   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1193459   +   end;
MPRINT(EM_DIAGRAM):   end;
1193460   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1193461   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1193462   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1193463   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1193464   +   end;
MPRINT(EM_DIAGRAM):   end;
1193465   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193466   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1193467   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1193468   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1193469   +   end;
MPRINT(EM_DIAGRAM):   end;
1193470   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193471   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1193472   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1193473   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1193474   +   end;
MPRINT(EM_DIAGRAM):   end;
1193475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193476   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1193477   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1193478   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1193479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193481   +   end;
MPRINT(EM_DIAGRAM):   end;
1193482   +end;
MPRINT(EM_DIAGRAM):   end;
1193483   +
1193484   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1193485   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1193486   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1193487   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1193488   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1193489   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1193490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193492   +end;
MPRINT(EM_DIAGRAM):   end;
1193493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193495   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1193496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193497   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1193498   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1193499   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1193500   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1193501   +   end;
MPRINT(EM_DIAGRAM):   end;
1193502   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193503   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1193504   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1193505   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1193506   +   end;
MPRINT(EM_DIAGRAM):   end;
1193507   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1193508   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1193509   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1193510   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1193511   +   end;
MPRINT(EM_DIAGRAM):   end;
1193512   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193513   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1193514   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1193515   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1193516   +   end;
MPRINT(EM_DIAGRAM):   end;
1193517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193518   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1193519   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1193520   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1193521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193523   +   end;
MPRINT(EM_DIAGRAM):   end;
1193524   +end;
MPRINT(EM_DIAGRAM):   end;
1193525   +
1193526   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1193527   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1193528   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1193529   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1193530   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1193531   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1193532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193534   +end;
MPRINT(EM_DIAGRAM):   end;
1193535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193537   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1193538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193539   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1193540   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1193541   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1193542   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1193543   +   end;
MPRINT(EM_DIAGRAM):   end;
1193544   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1193545   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1193546   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1193547   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1193548   +   end;
MPRINT(EM_DIAGRAM):   end;
1193549   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193550   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1193551   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1193552   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1193553   +   end;
MPRINT(EM_DIAGRAM):   end;
1193554   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193555   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1193556   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1193557   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1193558   +   end;
MPRINT(EM_DIAGRAM):   end;
1193559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193560   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1193561   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1193562   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1193563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193565   +   end;
MPRINT(EM_DIAGRAM):   end;
1193566   +end;
MPRINT(EM_DIAGRAM):   end;
1193567   +
1193568   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1193569   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1193570   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1193571   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1193572   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1193573   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193574   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193575   +end;
MPRINT(EM_DIAGRAM):   end;
1193576   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193577   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193578   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1193579   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193580   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1193581   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1193582   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1193583   +   end;
MPRINT(EM_DIAGRAM):   end;
1193584   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1193585   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1193586   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1193587   +   end;
MPRINT(EM_DIAGRAM):   end;
1193588   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193589   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1193590   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1193591   +   end;
MPRINT(EM_DIAGRAM):   end;
1193592   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193593   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1193594   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1193595   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193596   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193597   +   end;
MPRINT(EM_DIAGRAM):   end;
1193598   +end;
MPRINT(EM_DIAGRAM):   end;
1193599   +
1193600   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1193601   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1193602   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1193603   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1193604   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1193605   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1193606   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193607   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193608   +end;
MPRINT(EM_DIAGRAM):   end;
1193609   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193610   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193611   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1193612   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193613   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1193614   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1193615   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1193616   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1193617   +   end;
MPRINT(EM_DIAGRAM):   end;
1193618   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193619   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1193620   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1193621   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1193622   +   end;
MPRINT(EM_DIAGRAM):   end;
1193623   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193624   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1193625   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1193626   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1193627   +   end;
MPRINT(EM_DIAGRAM):   end;
1193628   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1193629   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1193630   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1193631   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1193632   +   end;
MPRINT(EM_DIAGRAM):   end;
1193633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193634   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1193635   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1193636   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1193637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193639   +   end;
MPRINT(EM_DIAGRAM):   end;
1193640   +end;
MPRINT(EM_DIAGRAM):   end;
1193641   +
1193642   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1193643   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1193644   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1193645   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1193646   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1193647   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1193648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193650   +end;
MPRINT(EM_DIAGRAM):   end;
1193651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193653   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1193654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193655   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1193656   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1193657   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1193658   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1193659   +   end;
MPRINT(EM_DIAGRAM):   end;
1193660   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1193661   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1193662   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1193663   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1193664   +   end;
MPRINT(EM_DIAGRAM):   end;
1193665   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193666   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1193667   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1193668   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1193669   +   end;
MPRINT(EM_DIAGRAM):   end;
1193670   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193671   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1193672   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1193673   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1193674   +   end;
MPRINT(EM_DIAGRAM):   end;
1193675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193676   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1193677   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1193678   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1193679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193681   +   end;
MPRINT(EM_DIAGRAM):   end;
1193682   +end;
MPRINT(EM_DIAGRAM):   end;
1193683   +
1193684   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1193685   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1193686   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1193687   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1193688   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1193689   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1193690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1193691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193692   +end;
MPRINT(EM_DIAGRAM):   end;
1193693   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193694   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1193695   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1193696   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1193697   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1193698   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1193699   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1193700   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1193701   +   end;
MPRINT(EM_DIAGRAM):   end;
1193702   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1193703   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1193704   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1193705   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1193706   +   end;
MPRINT(EM_DIAGRAM):   end;
1193707   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1193708   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1193709   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1193710   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1193711   +   end;
MPRINT(EM_DIAGRAM):   end;
1193712   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1193713   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1193714   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1193715   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1193716   +   end;
MPRINT(EM_DIAGRAM):   end;
1193717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1193718   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1193719   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1193720   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1193721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1193722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1193723   +   end;
MPRINT(EM_DIAGRAM):   end;
1193724   +end;
MPRINT(EM_DIAGRAM):   end;
1193725   +
1193726   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1193727   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1193728   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1193729   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1193730   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1193731   +end;
MPRINT(EM_DIAGRAM):   end;
1193732   +
1193733   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1193734   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1193735   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1193736   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1193737   +
1193738   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1193739   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193740   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1193741   +
1193742   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1193743   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193744   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1193745   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1193746   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1193747   +
1193748   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1193749   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193750   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1193751   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1193752   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1193753   +
1193754   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1193755   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193756   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1193757   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1193758   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1193759   +
1193760   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1193761   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193762   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1193763   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1193764   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1193765   +
1193766   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1193767   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193768   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1193769   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1193770   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1193771   +
1193772   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1193773   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193774   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1193775   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1193776   +
1193777   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1193778   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193779   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1193780   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1193781   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1193782   +
1193783   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1193784   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193785   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1193786   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1193787   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1193788   +
1193789   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1193790   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1193791   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1193792   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1193793   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1193794   +
1193795   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1193796   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1193797   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1193798   +
1193799   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1193800   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1193801   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1193802   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1193803   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1193804   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1193805   +end;
MPRINT(EM_DIAGRAM):   end;
1193806   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1193807   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1193808   +
1193809   +REG3DR1:
1193810   +
1193811   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
1193812   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1193813   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1193814   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1193815   +end;
MPRINT(EM_DIAGRAM):   end;
1193816   +else do;
MPRINT(EM_DIAGRAM):   else do;
1193817   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1193818   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1193819   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1193820   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1193821   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1193822   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1193823   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1193824   +   end;
MPRINT(EM_DIAGRAM):   end;
1193825   +end;
MPRINT(EM_DIAGRAM):   end;
1193826   +
1193827   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1193828   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1193829   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1193830   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1193831   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1193832   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1193833   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1193834   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1193835   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1193836   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1193837   +end;
MPRINT(EM_DIAGRAM):   end;
1193838   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1193839   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1193840   +
1193841   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1193842   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1193843   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1193844   +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
1193845   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193846   +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
1193847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193848   +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
1193849   +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
1193850   +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
1193851   +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
1193852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193853   +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
1193854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193855   +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
1193856   +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
1193857   +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
1193858   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193859   +* Ensmbl3: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 2 of 10;
1193860   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193862   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1193863   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1193864   +* NODE: Tree3;
MPRINT(EM_DIAGRAM):   * NODE: Tree3;
1193865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1193866   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1193867   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1193868   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1193869   +
1193870   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1193871   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1193872   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1193873   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1193874   +
1193875   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1193876   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1193877   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1193878   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1193879   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1193880   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1193881   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1193882   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1193883   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1193884   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1193885   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1193886   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1193887   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1193888   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1193889   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1193890   +
1193891   +
1193892   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1193893   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1193894   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1193895   +
1193896   +
1193897   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1193898   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1193899   +
1193900   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1193901   +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
1193902   + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1193903   +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
1193904   +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
1193905   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1193906   +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
1193907   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1193908   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1193909   +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1193910   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1193911   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1193912   +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
1193913   +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
1193914   +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
1193915   +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
1193916   +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
1193917   +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
1193918   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1193919   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1193920   +      END;
MPRINT(EM_DIAGRAM):   END;
1193921   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193922   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
1193923   +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1193924   +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
1193925   +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
1193926   +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
1193927   +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
1193928   +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
1193929   +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
1193930   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1193931   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1193932   +      END;
MPRINT(EM_DIAGRAM):   END;
1193933   +    END;
MPRINT(EM_DIAGRAM):   END;
1193934   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193935   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1193936   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1193937   +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
1193938   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
1193939   +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1193940   +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
1193941   +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
1193942   +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
1193943   +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
1193944   +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
1193945   +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
1193946   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1193947   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1193948   +      END;
MPRINT(EM_DIAGRAM):   END;
1193949   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193950   +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
1193951   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1193952   +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
1193953   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1193954   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1193955   +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
1193956   +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
1193957   +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
1193958   +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
1193959   +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
1193960   +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
1193961   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1193962   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1193963   +        END;
MPRINT(EM_DIAGRAM):   END;
1193964   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193965   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
1193966   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1193967   +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
1193968   +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
1193969   +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
1193970   +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
1193971   +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
1193972   +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
1193973   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1193974   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1193975   +        END;
MPRINT(EM_DIAGRAM):   END;
1193976   +      END;
MPRINT(EM_DIAGRAM):   END;
1193977   +    END;
MPRINT(EM_DIAGRAM):   END;
1193978   +  END;
MPRINT(EM_DIAGRAM):   END;
1193979   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193980   +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1193981   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1193982   +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1193983   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
1193984   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1193985   +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
1193986   +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
1193987   +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
1193988   +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
1193989   +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
1193990   +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
1193991   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1193992   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1193993   +    END;
MPRINT(EM_DIAGRAM):   END;
1193994   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1193995   +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
1193996   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1193997   +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
1193998   +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
1193999   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1194000   +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
1194001   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1194002   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1194003   +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
1194004   +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
1194005   +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
1194006   +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
1194007   +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
1194008   +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
1194009   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1194010   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1194011   +        END;
MPRINT(EM_DIAGRAM):   END;
1194012   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194013   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1194014   +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1194015   +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
1194016   +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
1194017   +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
1194018   +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
1194019   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1194020   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1194021   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1194022   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1194023   +        END;
MPRINT(EM_DIAGRAM):   END;
1194024   +      END;
MPRINT(EM_DIAGRAM):   END;
1194025   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194026   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1194027   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1194028   +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
1194029   +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
1194030   +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
1194031   +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
1194032   +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
1194033   +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
1194034   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1194035   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1194036   +      END;
MPRINT(EM_DIAGRAM):   END;
1194037   +    END;
MPRINT(EM_DIAGRAM):   END;
1194038   +  END;
MPRINT(EM_DIAGRAM):   END;
1194039   +
1194040   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1194041   +IF  F_DepVar  NE '0'
1194042   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1194043   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1194044   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1194045   + END;
MPRINT(EM_DIAGRAM):   END;
1194046   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194047   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1194048   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1194049   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1194050   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1194051   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1194052   +       END;
MPRINT(EM_DIAGRAM):   END;
1194053   + END;
MPRINT(EM_DIAGRAM):   END;
1194054   +
1194055   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1194056   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1194057   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1194058   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1194059   +* Renaming variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree3;
1194060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194061   +* Renaming Posterior variables for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree3;
1194062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194063   +drop Tree3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar1;
1194064   +Tree3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar1 = P_DepVar1;
1194065   +drop Tree3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree3_P_DepVar0;
1194066   +Tree3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree3_P_DepVar0 = P_DepVar0;
1194067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194068   +* Renaming _WARN_ variable for Tree3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree3;
1194069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194070   +length Tree3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree3_WARN_ $4;
1194071   +drop Tree3_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree3_WARN_;
1194072   +Tree3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree3_WARN_ = _WARN_;
1194073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194074   +* Ensmbl3: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 3 of 10;
1194075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194076   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194077   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1194078   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1194079   +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
1194080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1194081   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1194082   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1194083   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1194084   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1194085   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1194086   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1194087   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1194088   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1194089   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1194090   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1194091   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1194092   +LENGTH _WARN_ $4
1194093   +      F_DepVar  $ 12
1194094   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1194095   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1194096   +
1194097   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1194098   +
1194099   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1194100   +
1194101   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1194102   +
1194103   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1194104   +
1194105   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1194106   +
1194107   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1194108   +
1194109   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1194110   +
1194111   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1194112   +
1194113   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1194114   +
1194115   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1194116   +
1194117   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1194118   +
1194119   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1194120   +
1194121   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1194122   +
1194123   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1194124   +
1194125   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1194126   +
1194127   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1194128   +
1194129   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1194130   +
1194131   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1194132   +
1194133   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1194134   +
1194135   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1194136   +
1194137   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1194138   +
1194139   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1194140   +
1194141   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1194142   +
1194143   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1194144   +
1194145   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1194146   +
1194147   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1194148   +
1194149   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1194150   +
1194151   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1194152   +
1194153   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1194154   +
1194155   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1194156   +
1194157   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1194158   +
1194159   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1194160   +
1194161   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1194162   +
1194163   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1194164   +
1194165   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1194166   +
1194167   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1194168   +
1194169   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1194170   +
1194171   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1194172   +
1194173   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1194174   +
1194175   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1194176   +
1194177   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1194178   +
1194179   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1194180   +
1194181   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1194182   +
1194183   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1194184   +
1194185   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1194186   +
1194187   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1194188   +
1194189   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1194190   +
1194191   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1194192   +
1194193   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1194194   +
1194195   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1194196   +
1194197   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1194198   +
1194199   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1194200   +
1194201   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1194202   +
1194203   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1194204   +
1194205   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1194206   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1194207   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1194208   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1194209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194211   +end;
MPRINT(EM_DIAGRAM):   end;
1194212   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194214   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1194215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194216   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1194217   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1194218   +   end;
MPRINT(EM_DIAGRAM):   end;
1194219   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1194220   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1194221   +   end;
MPRINT(EM_DIAGRAM):   end;
1194222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194223   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1194224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194226   +   end;
MPRINT(EM_DIAGRAM):   end;
1194227   +end;
MPRINT(EM_DIAGRAM):   end;
1194228   +
1194229   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1194230   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1194231   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1194232   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1194233   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1194234   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1194235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194237   +end;
MPRINT(EM_DIAGRAM):   end;
1194238   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194239   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194240   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1194241   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194242   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1194243   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1194244   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1194245   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1194246   +   end;
MPRINT(EM_DIAGRAM):   end;
1194247   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1194248   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1194249   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1194250   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1194251   +   end;
MPRINT(EM_DIAGRAM):   end;
1194252   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194253   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1194254   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1194255   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1194256   +   end;
MPRINT(EM_DIAGRAM):   end;
1194257   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194258   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1194259   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1194260   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1194261   +   end;
MPRINT(EM_DIAGRAM):   end;
1194262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194263   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1194264   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1194265   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1194266   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194267   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194268   +   end;
MPRINT(EM_DIAGRAM):   end;
1194269   +end;
MPRINT(EM_DIAGRAM):   end;
1194270   +
1194271   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1194272   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1194273   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1194274   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1194275   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1194276   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1194277   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194278   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194279   +end;
MPRINT(EM_DIAGRAM):   end;
1194280   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194281   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194282   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1194283   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194284   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1194285   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1194286   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1194287   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1194288   +   end;
MPRINT(EM_DIAGRAM):   end;
1194289   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194290   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1194291   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1194292   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1194293   +   end;
MPRINT(EM_DIAGRAM):   end;
1194294   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1194295   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1194296   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1194297   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1194298   +   end;
MPRINT(EM_DIAGRAM):   end;
1194299   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194300   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1194301   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1194302   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1194303   +   end;
MPRINT(EM_DIAGRAM):   end;
1194304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194305   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1194306   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1194307   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1194308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194310   +   end;
MPRINT(EM_DIAGRAM):   end;
1194311   +end;
MPRINT(EM_DIAGRAM):   end;
1194312   +
1194313   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1194314   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1194315   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1194316   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1194317   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1194318   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1194319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194321   +end;
MPRINT(EM_DIAGRAM):   end;
1194322   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194324   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1194325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194326   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194327   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1194328   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1194329   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1194330   +   end;
MPRINT(EM_DIAGRAM):   end;
1194331   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194332   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1194333   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1194334   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1194335   +   end;
MPRINT(EM_DIAGRAM):   end;
1194336   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194337   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1194338   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1194339   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1194340   +   end;
MPRINT(EM_DIAGRAM):   end;
1194341   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194342   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1194343   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1194344   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1194345   +   end;
MPRINT(EM_DIAGRAM):   end;
1194346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194347   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1194348   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1194349   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1194350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194352   +   end;
MPRINT(EM_DIAGRAM):   end;
1194353   +end;
MPRINT(EM_DIAGRAM):   end;
1194354   +
1194355   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1194356   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1194357   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1194358   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1194359   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1194360   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1194361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194363   +end;
MPRINT(EM_DIAGRAM):   end;
1194364   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194366   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1194367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194368   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194369   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1194370   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1194371   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1194372   +   end;
MPRINT(EM_DIAGRAM):   end;
1194373   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194374   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1194375   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1194376   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1194377   +   end;
MPRINT(EM_DIAGRAM):   end;
1194378   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194379   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1194380   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1194381   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1194382   +   end;
MPRINT(EM_DIAGRAM):   end;
1194383   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194384   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1194385   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1194386   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1194387   +   end;
MPRINT(EM_DIAGRAM):   end;
1194388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194389   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1194390   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1194391   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1194392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194394   +   end;
MPRINT(EM_DIAGRAM):   end;
1194395   +end;
MPRINT(EM_DIAGRAM):   end;
1194396   +
1194397   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1194398   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1194399   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1194400   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1194401   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1194402   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1194403   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194404   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194405   +end;
MPRINT(EM_DIAGRAM):   end;
1194406   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194407   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194408   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1194409   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194410   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194411   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1194412   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1194413   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1194414   +   end;
MPRINT(EM_DIAGRAM):   end;
1194415   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194416   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1194417   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1194418   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1194419   +   end;
MPRINT(EM_DIAGRAM):   end;
1194420   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194421   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1194422   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1194423   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1194424   +   end;
MPRINT(EM_DIAGRAM):   end;
1194425   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194426   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1194427   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1194428   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1194429   +   end;
MPRINT(EM_DIAGRAM):   end;
1194430   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194431   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1194432   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1194433   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1194434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194436   +   end;
MPRINT(EM_DIAGRAM):   end;
1194437   +end;
MPRINT(EM_DIAGRAM):   end;
1194438   +
1194439   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1194440   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1194441   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1194442   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1194443   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1194444   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1194445   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194446   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194447   +end;
MPRINT(EM_DIAGRAM):   end;
1194448   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194449   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194450   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1194451   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194452   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194453   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1194454   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1194455   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1194456   +   end;
MPRINT(EM_DIAGRAM):   end;
1194457   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194458   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1194459   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1194460   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1194461   +   end;
MPRINT(EM_DIAGRAM):   end;
1194462   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194463   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1194464   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1194465   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1194466   +   end;
MPRINT(EM_DIAGRAM):   end;
1194467   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194468   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1194469   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1194470   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1194471   +   end;
MPRINT(EM_DIAGRAM):   end;
1194472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194473   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1194474   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1194475   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1194476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194478   +   end;
MPRINT(EM_DIAGRAM):   end;
1194479   +end;
MPRINT(EM_DIAGRAM):   end;
1194480   +
1194481   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1194482   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1194483   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1194484   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1194485   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1194486   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1194487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194489   +end;
MPRINT(EM_DIAGRAM):   end;
1194490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194492   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1194493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194494   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194495   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1194496   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1194497   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1194498   +   end;
MPRINT(EM_DIAGRAM):   end;
1194499   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194500   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1194501   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1194502   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1194503   +   end;
MPRINT(EM_DIAGRAM):   end;
1194504   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194505   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1194506   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1194507   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1194508   +   end;
MPRINT(EM_DIAGRAM):   end;
1194509   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194510   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1194511   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1194512   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1194513   +   end;
MPRINT(EM_DIAGRAM):   end;
1194514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194515   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1194516   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1194517   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1194518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194520   +   end;
MPRINT(EM_DIAGRAM):   end;
1194521   +end;
MPRINT(EM_DIAGRAM):   end;
1194522   +
1194523   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1194524   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1194525   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1194526   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1194527   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1194528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194530   +end;
MPRINT(EM_DIAGRAM):   end;
1194531   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194533   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1194534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194535   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194536   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1194537   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1194538   +   end;
MPRINT(EM_DIAGRAM):   end;
1194539   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194540   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1194541   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1194542   +   end;
MPRINT(EM_DIAGRAM):   end;
1194543   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194544   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1194545   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1194546   +   end;
MPRINT(EM_DIAGRAM):   end;
1194547   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194548   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1194549   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1194550   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194551   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194552   +   end;
MPRINT(EM_DIAGRAM):   end;
1194553   +end;
MPRINT(EM_DIAGRAM):   end;
1194554   +
1194555   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1194556   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1194557   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1194558   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1194559   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1194560   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1194561   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194562   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194563   +end;
MPRINT(EM_DIAGRAM):   end;
1194564   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194565   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194566   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1194567   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194568   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1194569   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1194570   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1194571   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1194572   +   end;
MPRINT(EM_DIAGRAM):   end;
1194573   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194574   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1194575   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1194576   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1194577   +   end;
MPRINT(EM_DIAGRAM):   end;
1194578   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194579   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1194580   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1194581   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1194582   +   end;
MPRINT(EM_DIAGRAM):   end;
1194583   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1194584   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1194585   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1194586   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1194587   +   end;
MPRINT(EM_DIAGRAM):   end;
1194588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194589   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1194590   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1194591   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1194592   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194593   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194594   +   end;
MPRINT(EM_DIAGRAM):   end;
1194595   +end;
MPRINT(EM_DIAGRAM):   end;
1194596   +
1194597   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1194598   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1194599   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1194600   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1194601   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1194602   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1194603   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194604   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194605   +end;
MPRINT(EM_DIAGRAM):   end;
1194606   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194607   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194608   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1194609   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194610   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194611   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1194612   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1194613   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1194614   +   end;
MPRINT(EM_DIAGRAM):   end;
1194615   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194616   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1194617   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1194618   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1194619   +   end;
MPRINT(EM_DIAGRAM):   end;
1194620   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194621   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1194622   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1194623   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1194624   +   end;
MPRINT(EM_DIAGRAM):   end;
1194625   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194626   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1194627   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1194628   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1194629   +   end;
MPRINT(EM_DIAGRAM):   end;
1194630   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194631   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1194632   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1194633   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1194634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194636   +   end;
MPRINT(EM_DIAGRAM):   end;
1194637   +end;
MPRINT(EM_DIAGRAM):   end;
1194638   +
1194639   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1194640   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1194641   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1194642   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1194643   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1194644   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1194645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194647   +end;
MPRINT(EM_DIAGRAM):   end;
1194648   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194650   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1194651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194652   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1194653   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1194654   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1194655   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1194656   +   end;
MPRINT(EM_DIAGRAM):   end;
1194657   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1194658   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1194659   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1194660   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1194661   +   end;
MPRINT(EM_DIAGRAM):   end;
1194662   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194663   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1194664   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1194665   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1194666   +   end;
MPRINT(EM_DIAGRAM):   end;
1194667   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194668   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1194669   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1194670   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1194671   +   end;
MPRINT(EM_DIAGRAM):   end;
1194672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194673   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1194674   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1194675   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1194676   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194677   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194678   +   end;
MPRINT(EM_DIAGRAM):   end;
1194679   +end;
MPRINT(EM_DIAGRAM):   end;
1194680   +
1194681   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1194682   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1194683   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1194684   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1194685   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1194686   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1194687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194689   +end;
MPRINT(EM_DIAGRAM):   end;
1194690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194692   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1194693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194694   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1194695   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1194696   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1194697   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1194698   +   end;
MPRINT(EM_DIAGRAM):   end;
1194699   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1194700   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1194701   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1194702   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1194703   +   end;
MPRINT(EM_DIAGRAM):   end;
1194704   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194705   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1194706   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1194707   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1194708   +   end;
MPRINT(EM_DIAGRAM):   end;
1194709   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194710   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1194711   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1194712   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1194713   +   end;
MPRINT(EM_DIAGRAM):   end;
1194714   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194715   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1194716   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1194717   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1194718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194720   +   end;
MPRINT(EM_DIAGRAM):   end;
1194721   +end;
MPRINT(EM_DIAGRAM):   end;
1194722   +
1194723   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1194724   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1194725   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1194726   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1194727   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1194728   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1194729   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1194730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194731   +end;
MPRINT(EM_DIAGRAM):   end;
1194732   +else do;
MPRINT(EM_DIAGRAM):   else do;
1194733   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1194734   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1194735   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1194736   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1194737   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1194738   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1194739   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1194740   +   end;
MPRINT(EM_DIAGRAM):   end;
1194741   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1194742   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1194743   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1194744   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1194745   +   end;
MPRINT(EM_DIAGRAM):   end;
1194746   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1194747   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1194748   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1194749   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1194750   +   end;
MPRINT(EM_DIAGRAM):   end;
1194751   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1194752   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1194753   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1194754   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1194755   +   end;
MPRINT(EM_DIAGRAM):   end;
1194756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1194757   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1194758   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1194759   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1194760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1194761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194762   +   end;
MPRINT(EM_DIAGRAM):   end;
1194763   +end;
MPRINT(EM_DIAGRAM):   end;
1194764   +
1194765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194766   +*** Checking missing input Interval
1194767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1194768   +
1194769   +IF NMISS(
1194770   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1194771   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1194772   +
1194773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1194774   +END;
MPRINT(EM_DIAGRAM):   END;
1194775   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194776   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1194777   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194778   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194779   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1194780   +END;
MPRINT(EM_DIAGRAM):   END;
1194781   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1194782   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1194783   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1194784   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1194785   +END;
MPRINT(EM_DIAGRAM):   END;
1194786   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194787   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1194788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194790   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1194791   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1194792   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1194793   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1194794   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1194795   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1194796   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1194797   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1194798   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1194799   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1194800   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1194801   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1194802   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1194803   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1194804   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1194805   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1194806   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1194807   +          +    -0.04697385312971 * GRP_MntFishProducts3
1194808   +          +     0.05477300056491 * GRP_MntFishProducts4
1194809   +          +    -0.21182877070793 * GRP_MntGoldProds2
1194810   +          +    -0.06202001203906 * GRP_MntGoldProds3
1194811   +          +    -0.23297283739715 * GRP_MntGoldProds4
1194812   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1194813   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1194814   +          +     0.01711044358319 * GRP_MntMeatProducts4
1194815   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1194816   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1194817   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1194818   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1194819   +          +     0.11565917560156 * GRP_NumDistPurchases2
1194820   +          +      0.1678532898895 * GRP_NumDistPurchases3
1194821   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1194822   +          +     0.09970745707934 * GRP_NumWebPurchases2
1194823   +          +     0.02961221360107 * GRP_NumWebPurchases3
1194824   +          +     0.02261054892411 * GRP_NumWebPurchases4
1194825   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1194826   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1194827   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1194828   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1194829   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1194830   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 * 
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 * 
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 + 
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 + 
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 + 
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 + 
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 + 
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 + 
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741 
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 * 
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 * 
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 * 
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 * 
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 * 
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 + 
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 * 
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 + 
-0.07522056103469 * GRP_Recency4 ;
1194831   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1194832   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1194833   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1194834   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1194835   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1194836   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1194837   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1194838   +          +     0.26645530981311 * GRP_MntFishProducts3
1194839   +          +    -0.17631072283513 * GRP_MntFishProducts4
1194840   +          +    -0.35439521021691 * GRP_MntGoldProds2
1194841   +          +     0.11419663880206 * GRP_MntGoldProds3
1194842   +          +     0.07288749113866 * GRP_MntGoldProds4
1194843   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1194844   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1194845   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1194846   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1194847   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1194848   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1194849   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1194850   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1194851   +          +     0.10139595392447 * GRP_NumDistPurchases3
1194852   +          +     0.05251891244468 * GRP_NumDistPurchases4
1194853   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1194854   +          +      0.0263831646971 * GRP_NumWebPurchases3
1194855   +          +     0.26495059708503 * GRP_NumWebPurchases4
1194856   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1194857   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1194858   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1194859   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1194860   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1194861   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 * 
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 * 
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 + 
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 + 
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 + 
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 + 
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 + 
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 + 
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123 
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 * 
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 * 
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 * 
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 * 
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 * 
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 + 
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 * 
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 + 
-0.4970729472837 * GRP_Recency4 ;
1194862   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1194863   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1194864   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1194865   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1194866   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1194867   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1194868   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1194869   +          +     0.02714802509094 * GRP_MntFishProducts3
1194870   +          +     0.27119078554613 * GRP_MntFishProducts4
1194871   +          +     0.19322428614339 * GRP_MntGoldProds2
1194872   +          +     0.34778546410632 * GRP_MntGoldProds3
1194873   +          +    -0.06570146779096 * GRP_MntGoldProds4
1194874   +          +     0.44935275650977 * GRP_MntMeatProducts2
1194875   +          +     0.00805794344265 * GRP_MntMeatProducts3
1194876   +          +     0.02445782833023 * GRP_MntMeatProducts4
1194877   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1194878   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1194879   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1194880   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1194881   +          +     0.03481806823908 * GRP_NumDistPurchases2
1194882   +          +      0.0546202479864 * GRP_NumDistPurchases3
1194883   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1194884   +          +     0.28307550964921 * GRP_NumWebPurchases2
1194885   +          +     0.31503543231591 * GRP_NumWebPurchases3
1194886   +          +     0.24817135719308 * GRP_NumWebPurchases4
1194887   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1194888   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1194889   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1194890   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1194891   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1194892   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 * 
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 * 
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 + 
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 + 
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 + 
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 + 
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 + 
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 + 
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 + 
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 * 
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 * 
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 * 
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 * 
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 * 
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 + 
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 * 
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 + 
0.05823801065489 * GRP_Recency4 ;
1194893   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1194894   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1194895   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1194896   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1194897   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1194898   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1194899   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1194900   +          +    -0.08997232581072 * GRP_MntFishProducts3
1194901   +          +    -0.05669599356928 * GRP_MntFishProducts4
1194902   +          +      0.2199150131909 * GRP_MntGoldProds2
1194903   +          +     0.05584571259838 * GRP_MntGoldProds3
1194904   +          +    -0.13160142309505 * GRP_MntGoldProds4
1194905   +          +      0.2539849640816 * GRP_MntMeatProducts2
1194906   +          +     0.29448191059312 * GRP_MntMeatProducts3
1194907   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1194908   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1194909   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1194910   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1194911   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1194912   +          +     0.38206153529506 * GRP_NumDistPurchases2
1194913   +          +     0.08642998303162 * GRP_NumDistPurchases3
1194914   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1194915   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1194916   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1194917   +          +     0.23030028338396 * GRP_NumWebPurchases4
1194918   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1194919   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1194920   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1194921   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1194922   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1194923   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 * 
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 * 
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 + 
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 + 
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 + 
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 + 
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816 
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 * 
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 + 
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 + 
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 + 
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 + 
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 + 
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062 
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 + 
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 * 
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1194924   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1194925   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1194926   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1194927   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1194928   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1194929   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1194930   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1194931   +          +    -0.04439366722112 * GRP_MntFishProducts3
1194932   +          +    -0.22939355735301 * GRP_MntFishProducts4
1194933   +          +    -0.00367144103801 * GRP_MntGoldProds2
1194934   +          +      -0.033315128385 * GRP_MntGoldProds3
1194935   +          +     0.10655545066126 * GRP_MntGoldProds4
1194936   +          +     0.04927093675686 * GRP_MntMeatProducts2
1194937   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1194938   +          +     0.29394273234417 * GRP_MntMeatProducts4
1194939   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1194940   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1194941   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1194942   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1194943   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1194944   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1194945   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1194946   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1194947   +          +     0.37113277513001 * GRP_NumWebPurchases3
1194948   +          +     0.05720653023952 * GRP_NumWebPurchases4
1194949   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1194950   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1194951   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1194952   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1194953   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1194954   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 * 
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 * 
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 + 
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 + 
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 + 
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 + 
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686 
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 * 
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 + 
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 + 
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 + 
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 + 
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 + 
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842 
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 + 
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 * 
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1194955   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1194956   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1194957   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1194958   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1194959   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1194960   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1194961   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1194962   +          +     0.04340555393469 * GRP_MntFishProducts3
1194963   +          +    -0.20048219926361 * GRP_MntFishProducts4
1194964   +          +     0.16101452165456 * GRP_MntGoldProds2
1194965   +          +    -0.04467647211336 * GRP_MntGoldProds3
1194966   +          +     0.32142013598241 * GRP_MntGoldProds4
1194967   +          +     0.29741565154233 * GRP_MntMeatProducts2
1194968   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1194969   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1194970   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1194971   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1194972   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1194973   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1194974   +          +     0.36107050137299 * GRP_NumDistPurchases2
1194975   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1194976   +          +     0.10557004956787 * GRP_NumDistPurchases4
1194977   +          +     0.04608069099876 * GRP_NumWebPurchases2
1194978   +          +     0.15561947954396 * GRP_NumWebPurchases3
1194979   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1194980   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1194981   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1194982   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1194983   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1194984   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1194985   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 * 
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 * 
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 + 
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 + 
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 + 
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 + 
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 + 
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 + 
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 + 
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 * 
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 * 
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 * 
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 * 
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 * 
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 + 
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 * 
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 + 
-0.0282277663071 * GRP_Recency4 ;
1194986   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1194987   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1194988   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1194989   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1194990   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1194991   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1194992   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1194993   +          +    -0.20032703571491 * GRP_MntFishProducts3
1194994   +          +    -0.08348811352746 * GRP_MntFishProducts4
1194995   +          +    -0.00744131870881 * GRP_MntGoldProds2
1194996   +          +    -0.27347309859096 * GRP_MntGoldProds3
1194997   +          +    -0.04458870469416 * GRP_MntGoldProds4
1194998   +          +     0.17538261434498 * GRP_MntMeatProducts2
1194999   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1195000   +          +     0.03113249898233 * GRP_MntMeatProducts4
1195001   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1195002   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1195003   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1195004   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1195005   +          +     0.20540014620209 * GRP_NumDistPurchases2
1195006   +          +     0.17744784873298 * GRP_NumDistPurchases3
1195007   +          +      -0.003486430833 * GRP_NumDistPurchases4
1195008   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1195009   +          +     0.07245829152192 * GRP_NumWebPurchases3
1195010   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1195011   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1195012   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1195013   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1195014   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1195015   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1195016   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 * 
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 * 
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 + 
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 + 
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 + 
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 + 
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 + 
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 + 
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 + 
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 * 
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 * 
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 * 
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 * 
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 * 
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 + 
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 * 
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 + 
-0.0157357289132 * GRP_Recency4 ;
1195017   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1195018   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1195019   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1195020   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1195021   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1195022   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1195023   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1195024   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1195025   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1195026   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1195027   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1195028   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1195029   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1195030   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1195031   +END;
MPRINT(EM_DIAGRAM):   END;
1195032   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1195033   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1195034   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1195035   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1195036   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1195037   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1195038   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1195039   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1195040   +END;
MPRINT(EM_DIAGRAM):   END;
1195041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195042   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1195043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195044   +
1195045   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1195046   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1195047   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1195048   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1195049   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1195050   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195051   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1195052   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1195053   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1195054   +end;
MPRINT(EM_DIAGRAM):   end;
1195055   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195056   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1195057   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1195058   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1195059   +   end;
MPRINT(EM_DIAGRAM):   end;
1195060   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1195061   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1195062   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1195063   +   end;
MPRINT(EM_DIAGRAM):   end;
1195064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195065   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1195066   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1195067   +   end;
MPRINT(EM_DIAGRAM):   end;
1195068   +end;
MPRINT(EM_DIAGRAM):   end;
1195069   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1195070   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1195071   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1195072   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1195073   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 + 
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746 
* H16 + -0.29329090231091 * H17 ;
1195074   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1195075   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1195076   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1195077   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1195078   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1195079   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1195080   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1195081   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1195082   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1195083   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1195084   +END;
MPRINT(EM_DIAGRAM):   END;
1195085   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1195086   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1195087   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1195088   +END;
MPRINT(EM_DIAGRAM):   END;
1195089   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1195090   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1195091   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1195092   +END;
MPRINT(EM_DIAGRAM):   END;
1195093   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1195094   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1195095   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1195096   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1195097   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1195098   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1195099   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1195100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195101   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1195102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195103   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1195104   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1195105   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1195106   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1195107   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1195108   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1195109   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1195110   +END;
MPRINT(EM_DIAGRAM):   END;
1195111   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1195112   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1195113   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1195114   +drop
1195115   +H11
1195116   +H12
1195117   +H13
1195118   +H14
1195119   +H15
1195120   +H16
1195121   +H17
1195122   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1195123   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1195124   +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
1195125   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195126   +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
1195127   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195128   +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
1195129   +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
1195130   +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
1195131   +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
1195132   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195133   +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
1195134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195135   +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
1195136   +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
1195137   +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
1195138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195139   +* Ensmbl3: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 4 of 10;
1195140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195142   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1195143   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1195144   +* NODE: Neural23;
MPRINT(EM_DIAGRAM):   * NODE: Neural23;
1195145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1195146   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1195147   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1195148   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1195149   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1195150   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1195151   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1195152   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1195153   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1195154   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1195155   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1195156   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1195157   +LENGTH _WARN_ $4
1195158   +      F_DepVar  $ 12
1195159   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1195160   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1195161   +
1195162   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1195163   +
1195164   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1195165   +
1195166   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1195167   +
1195168   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1195169   +
1195170   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1195171   +
1195172   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1195173   +
1195174   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1195175   +
1195176   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1195177   +
1195178   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1195179   +
1195180   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1195181   +
1195182   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1195183   +
1195184   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1195185   +
1195186   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1195187   +
1195188   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1195189   +
1195190   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1195191   +
1195192   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1195193   +
1195194   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1195195   +
1195196   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1195197   +
1195198   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1195199   +
1195200   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1195201   +
1195202   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1195203   +
1195204   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1195205   +
1195206   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1195207   +
1195208   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1195209   +
1195210   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1195211   +
1195212   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1195213   +
1195214   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1195215   +
1195216   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1195217   +
1195218   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1195219   +
1195220   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1195221   +
1195222   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1195223   +
1195224   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1195225   +
1195226   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1195227   +
1195228   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1195229   +
1195230   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1195231   +
1195232   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1195233   +
1195234   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1195235   +
1195236   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1195237   +
1195238   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1195239   +
1195240   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1195241   +
1195242   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1195243   +
1195244   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1195245   +
1195246   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1195247   +
1195248   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1195249   +
1195250   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1195251   +
1195252   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1195253   +
1195254   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1195255   +
1195256   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1195257   +
1195258   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1195259   +
1195260   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1195261   +
1195262   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1195263   +
1195264   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1195265   +
1195266   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1195267   +
1195268   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1195269   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1195270   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1195271   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1195272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195274   +end;
MPRINT(EM_DIAGRAM):   end;
1195275   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195277   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1195278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195279   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1195280   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1195281   +   end;
MPRINT(EM_DIAGRAM):   end;
1195282   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1195283   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1195284   +   end;
MPRINT(EM_DIAGRAM):   end;
1195285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195286   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1195287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195289   +   end;
MPRINT(EM_DIAGRAM):   end;
1195290   +end;
MPRINT(EM_DIAGRAM):   end;
1195291   +
1195292   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1195293   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1195294   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1195295   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1195296   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1195297   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1195298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195300   +end;
MPRINT(EM_DIAGRAM):   end;
1195301   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195302   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195303   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1195304   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195305   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1195306   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1195307   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1195308   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1195309   +   end;
MPRINT(EM_DIAGRAM):   end;
1195310   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1195311   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1195312   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1195313   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1195314   +   end;
MPRINT(EM_DIAGRAM):   end;
1195315   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195316   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1195317   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1195318   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1195319   +   end;
MPRINT(EM_DIAGRAM):   end;
1195320   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195321   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1195322   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1195323   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1195324   +   end;
MPRINT(EM_DIAGRAM):   end;
1195325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195326   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1195327   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1195328   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1195329   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195330   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195331   +   end;
MPRINT(EM_DIAGRAM):   end;
1195332   +end;
MPRINT(EM_DIAGRAM):   end;
1195333   +
1195334   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1195335   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1195336   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1195337   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1195338   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1195339   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1195340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195342   +end;
MPRINT(EM_DIAGRAM):   end;
1195343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195345   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1195346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195347   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1195348   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1195349   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1195350   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1195351   +   end;
MPRINT(EM_DIAGRAM):   end;
1195352   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195353   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1195354   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1195355   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1195356   +   end;
MPRINT(EM_DIAGRAM):   end;
1195357   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1195358   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1195359   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1195360   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1195361   +   end;
MPRINT(EM_DIAGRAM):   end;
1195362   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195363   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1195364   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1195365   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1195366   +   end;
MPRINT(EM_DIAGRAM):   end;
1195367   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195368   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1195369   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1195370   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1195371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195373   +   end;
MPRINT(EM_DIAGRAM):   end;
1195374   +end;
MPRINT(EM_DIAGRAM):   end;
1195375   +
1195376   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1195377   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1195378   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1195379   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1195380   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1195381   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1195382   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195384   +end;
MPRINT(EM_DIAGRAM):   end;
1195385   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195386   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195387   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1195388   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195389   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195390   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1195391   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1195392   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1195393   +   end;
MPRINT(EM_DIAGRAM):   end;
1195394   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195395   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1195396   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1195397   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1195398   +   end;
MPRINT(EM_DIAGRAM):   end;
1195399   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195400   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1195401   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1195402   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1195403   +   end;
MPRINT(EM_DIAGRAM):   end;
1195404   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195405   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1195406   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1195407   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1195408   +   end;
MPRINT(EM_DIAGRAM):   end;
1195409   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195410   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1195411   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1195412   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1195413   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195414   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195415   +   end;
MPRINT(EM_DIAGRAM):   end;
1195416   +end;
MPRINT(EM_DIAGRAM):   end;
1195417   +
1195418   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1195419   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1195420   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1195421   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1195422   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1195423   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1195424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195426   +end;
MPRINT(EM_DIAGRAM):   end;
1195427   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195428   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195429   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1195430   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195431   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195432   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1195433   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1195434   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1195435   +   end;
MPRINT(EM_DIAGRAM):   end;
1195436   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195437   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1195438   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1195439   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1195440   +   end;
MPRINT(EM_DIAGRAM):   end;
1195441   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195442   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1195443   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1195444   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1195445   +   end;
MPRINT(EM_DIAGRAM):   end;
1195446   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195447   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1195448   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1195449   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1195450   +   end;
MPRINT(EM_DIAGRAM):   end;
1195451   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195452   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1195453   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1195454   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1195455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195457   +   end;
MPRINT(EM_DIAGRAM):   end;
1195458   +end;
MPRINT(EM_DIAGRAM):   end;
1195459   +
1195460   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1195461   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1195462   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1195463   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1195464   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1195465   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1195466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195468   +end;
MPRINT(EM_DIAGRAM):   end;
1195469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195471   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1195472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195473   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195474   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1195475   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1195476   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1195477   +   end;
MPRINT(EM_DIAGRAM):   end;
1195478   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195479   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1195480   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1195481   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1195482   +   end;
MPRINT(EM_DIAGRAM):   end;
1195483   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195484   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1195485   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1195486   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1195487   +   end;
MPRINT(EM_DIAGRAM):   end;
1195488   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195489   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1195490   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1195491   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1195492   +   end;
MPRINT(EM_DIAGRAM):   end;
1195493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195494   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1195495   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1195496   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1195497   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195498   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195499   +   end;
MPRINT(EM_DIAGRAM):   end;
1195500   +end;
MPRINT(EM_DIAGRAM):   end;
1195501   +
1195502   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1195503   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1195504   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1195505   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1195506   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1195507   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1195508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195510   +end;
MPRINT(EM_DIAGRAM):   end;
1195511   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195513   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1195514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195515   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195516   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1195517   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1195518   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1195519   +   end;
MPRINT(EM_DIAGRAM):   end;
1195520   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195521   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1195522   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1195523   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1195524   +   end;
MPRINT(EM_DIAGRAM):   end;
1195525   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195526   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1195527   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1195528   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1195529   +   end;
MPRINT(EM_DIAGRAM):   end;
1195530   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195531   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1195532   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1195533   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1195534   +   end;
MPRINT(EM_DIAGRAM):   end;
1195535   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195536   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1195537   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1195538   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1195539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195541   +   end;
MPRINT(EM_DIAGRAM):   end;
1195542   +end;
MPRINT(EM_DIAGRAM):   end;
1195543   +
1195544   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1195545   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1195546   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1195547   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1195548   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1195549   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1195550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195552   +end;
MPRINT(EM_DIAGRAM):   end;
1195553   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195554   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195555   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1195556   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195557   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195558   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1195559   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1195560   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1195561   +   end;
MPRINT(EM_DIAGRAM):   end;
1195562   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195563   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1195564   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1195565   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1195566   +   end;
MPRINT(EM_DIAGRAM):   end;
1195567   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195568   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1195569   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1195570   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1195571   +   end;
MPRINT(EM_DIAGRAM):   end;
1195572   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195573   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1195574   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1195575   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1195576   +   end;
MPRINT(EM_DIAGRAM):   end;
1195577   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195578   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1195579   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1195580   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1195581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195583   +   end;
MPRINT(EM_DIAGRAM):   end;
1195584   +end;
MPRINT(EM_DIAGRAM):   end;
1195585   +
1195586   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1195587   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1195588   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1195589   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1195590   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1195591   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195592   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195593   +end;
MPRINT(EM_DIAGRAM):   end;
1195594   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195595   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195596   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1195597   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195598   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195599   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1195600   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1195601   +   end;
MPRINT(EM_DIAGRAM):   end;
1195602   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195603   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1195604   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1195605   +   end;
MPRINT(EM_DIAGRAM):   end;
1195606   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195607   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1195608   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1195609   +   end;
MPRINT(EM_DIAGRAM):   end;
1195610   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195611   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1195612   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1195613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195615   +   end;
MPRINT(EM_DIAGRAM):   end;
1195616   +end;
MPRINT(EM_DIAGRAM):   end;
1195617   +
1195618   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1195619   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1195620   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1195621   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1195622   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1195623   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1195624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195626   +end;
MPRINT(EM_DIAGRAM):   end;
1195627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195629   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1195630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195631   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1195632   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1195633   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1195634   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1195635   +   end;
MPRINT(EM_DIAGRAM):   end;
1195636   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195637   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1195638   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1195639   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1195640   +   end;
MPRINT(EM_DIAGRAM):   end;
1195641   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195642   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1195643   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1195644   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1195645   +   end;
MPRINT(EM_DIAGRAM):   end;
1195646   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1195647   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1195648   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1195649   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1195650   +   end;
MPRINT(EM_DIAGRAM):   end;
1195651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195652   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1195653   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1195654   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1195655   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195656   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195657   +   end;
MPRINT(EM_DIAGRAM):   end;
1195658   +end;
MPRINT(EM_DIAGRAM):   end;
1195659   +
1195660   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1195661   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1195662   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1195663   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1195664   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1195665   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1195666   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195667   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195668   +end;
MPRINT(EM_DIAGRAM):   end;
1195669   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195670   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195671   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1195672   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195673   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195674   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1195675   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1195676   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1195677   +   end;
MPRINT(EM_DIAGRAM):   end;
1195678   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195679   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1195680   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1195681   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1195682   +   end;
MPRINT(EM_DIAGRAM):   end;
1195683   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195684   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1195685   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1195686   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1195687   +   end;
MPRINT(EM_DIAGRAM):   end;
1195688   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195689   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1195690   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1195691   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1195692   +   end;
MPRINT(EM_DIAGRAM):   end;
1195693   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195694   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1195695   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1195696   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1195697   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195698   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195699   +   end;
MPRINT(EM_DIAGRAM):   end;
1195700   +end;
MPRINT(EM_DIAGRAM):   end;
1195701   +
1195702   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1195703   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1195704   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1195705   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1195706   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1195707   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1195708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195710   +end;
MPRINT(EM_DIAGRAM):   end;
1195711   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195712   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195713   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1195714   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195715   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1195716   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1195717   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1195718   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1195719   +   end;
MPRINT(EM_DIAGRAM):   end;
1195720   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1195721   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1195722   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1195723   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1195724   +   end;
MPRINT(EM_DIAGRAM):   end;
1195725   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195726   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1195727   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1195728   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1195729   +   end;
MPRINT(EM_DIAGRAM):   end;
1195730   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195731   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1195732   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1195733   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1195734   +   end;
MPRINT(EM_DIAGRAM):   end;
1195735   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195736   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1195737   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1195738   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1195739   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195740   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195741   +   end;
MPRINT(EM_DIAGRAM):   end;
1195742   +end;
MPRINT(EM_DIAGRAM):   end;
1195743   +
1195744   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1195745   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1195746   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1195747   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1195748   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1195749   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1195750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195752   +end;
MPRINT(EM_DIAGRAM):   end;
1195753   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195754   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195755   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1195756   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195757   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1195758   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1195759   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1195760   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1195761   +   end;
MPRINT(EM_DIAGRAM):   end;
1195762   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1195763   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1195764   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1195765   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1195766   +   end;
MPRINT(EM_DIAGRAM):   end;
1195767   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195768   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1195769   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1195770   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1195771   +   end;
MPRINT(EM_DIAGRAM):   end;
1195772   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195773   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1195774   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1195775   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1195776   +   end;
MPRINT(EM_DIAGRAM):   end;
1195777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195778   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1195779   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1195780   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1195781   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195782   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195783   +   end;
MPRINT(EM_DIAGRAM):   end;
1195784   +end;
MPRINT(EM_DIAGRAM):   end;
1195785   +
1195786   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1195787   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1195788   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1195789   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1195790   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1195791   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1195792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1195793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195794   +end;
MPRINT(EM_DIAGRAM):   end;
1195795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1195796   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1195797   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1195798   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1195799   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1195800   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1195801   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1195802   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1195803   +   end;
MPRINT(EM_DIAGRAM):   end;
1195804   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1195805   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1195806   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1195807   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1195808   +   end;
MPRINT(EM_DIAGRAM):   end;
1195809   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1195810   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1195811   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1195812   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1195813   +   end;
MPRINT(EM_DIAGRAM):   end;
1195814   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1195815   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1195816   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1195817   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1195818   +   end;
MPRINT(EM_DIAGRAM):   end;
1195819   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1195820   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1195821   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1195822   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1195823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1195824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195825   +   end;
MPRINT(EM_DIAGRAM):   end;
1195826   +end;
MPRINT(EM_DIAGRAM):   end;
1195827   +
1195828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195829   +*** Checking missing input Interval
1195830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1195831   +
1195832   +IF NMISS(
1195833   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1195834   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1195835   +
1195836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1195837   +END;
MPRINT(EM_DIAGRAM):   END;
1195838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195839   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1195840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195841   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1195842   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1195843   +END;
MPRINT(EM_DIAGRAM):   END;
1195844   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1195845   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1195846   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1195847   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1195848   +END;
MPRINT(EM_DIAGRAM):   END;
1195849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195850   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1195851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195853   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1195854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1195855   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1195856   +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
1195857   +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
1195858   +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
1195859   +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
1195860   +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
1195861   +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
1195862   +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
1195863   +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
1195864   +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
1195865   +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
1195866   +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
1195867   +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
1195868   +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
1195869   +          +    -0.08991361976323 * GRP_MntFishProducts3
1195870   +          +    -0.12439533124432 * GRP_MntFishProducts4
1195871   +          +    -0.38906628986229 * GRP_MntGoldProds2
1195872   +          +     0.02112411721097 * GRP_MntGoldProds3
1195873   +          +     0.05560214439156 * GRP_MntGoldProds4
1195874   +          +     0.07558086835487 * GRP_MntMeatProducts2
1195875   +          +    -0.24998452825562 * GRP_MntMeatProducts3
1195876   +          +    -0.11030888417179 * GRP_MntMeatProducts4
1195877   +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
1195878   +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
1195879   +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
1195880   +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
1195881   +          +    -0.26905740590447 * GRP_NumDistPurchases2
1195882   +          +     0.06889154687101 * GRP_NumDistPurchases3
1195883   +          +    -0.31591167055503 * GRP_NumDistPurchases4
1195884   +          +    -0.26862765566252 * GRP_NumWebPurchases2
1195885   +          +     0.01579611280005 * GRP_NumWebPurchases3
1195886   +          +    -0.06884702149074 * GRP_NumWebPurchases4
1195887   +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
1195888   +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
1195889   +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
1195890   +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
1195891   +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
1195892   +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
1195893   +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
1195894   +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
1195895   +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
1195896   +        GRP_Income2  +     0.28123841156129 * GRP_Income3
1195897   +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
1195898   +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
1195899   +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
1195900   +          +    -0.03033118293022 * GRP_MntFishProducts3
1195901   +          +     0.12939247483371 * GRP_MntFishProducts4
1195902   +          +     -0.1948739109476 * GRP_MntGoldProds2
1195903   +          +    -0.02487689041808 * GRP_MntGoldProds3
1195904   +          +      0.0424854445517 * GRP_MntGoldProds4
1195905   +          +    -0.77110165164491 * GRP_MntMeatProducts2
1195906   +          +    -0.04188692453988 * GRP_MntMeatProducts3
1195907   +          +     0.16117883521584 * GRP_MntMeatProducts4
1195908   +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
1195909   +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
1195910   +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
1195911   +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
1195912   +          +    -0.82361130213661 * GRP_NumDistPurchases2
1195913   +          +     0.18332361990877 * GRP_NumDistPurchases3
1195914   +          +    -0.10228504756385 * GRP_NumDistPurchases4
1195915   +          +     0.21492204339132 * GRP_NumWebPurchases2
1195916   +          +     0.22752835090931 * GRP_NumWebPurchases3
1195917   +          +    -0.04291366517536 * GRP_NumWebPurchases4
1195918   +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
1195919   +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
1195920   +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
1195921   +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
1195922   +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
1195923   +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
1195924   +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
1195925   +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
1195926   +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
1195927   +        GRP_Income2  +     0.05107107029363 * GRP_Income3
1195928   +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
1195929   +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
1195930   +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
1195931   +          +    -0.12190385526661 * GRP_MntFishProducts3
1195932   +          +     0.11161376295027 * GRP_MntFishProducts4
1195933   +          +     0.09536549249994 * GRP_MntGoldProds2
1195934   +          +    -0.39027188388377 * GRP_MntGoldProds3
1195935   +          +    -0.26960120596574 * GRP_MntGoldProds4
1195936   +          +    -0.29704810464482 * GRP_MntMeatProducts2
1195937   +          +    -0.17523279359181 * GRP_MntMeatProducts3
1195938   +          +     0.01169006509688 * GRP_MntMeatProducts4
1195939   +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
1195940   +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
1195941   +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
1195942   +          +     0.12535793167638 * GRP_NumCatalogPurchases4
1195943   +          +     0.10187760390092 * GRP_NumDistPurchases2
1195944   +          +    -0.25409837313865 * GRP_NumDistPurchases3
1195945   +          +    -0.28689980992526 * GRP_NumDistPurchases4
1195946   +          +     0.00005909057861 * GRP_NumWebPurchases2
1195947   +          +    -0.14419000341563 * GRP_NumWebPurchases3
1195948   +          +     0.09095003593529 * GRP_NumWebPurchases4
1195949   +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
1195950   +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
1195951   +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
1195952   +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
1195953   +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
1195954   +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
1195955   +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
1195956   +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
1195957   +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
1195958   +        GRP_Income2  +     0.14505600514674 * GRP_Income3
1195959   +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
1195960   +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
1195961   +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
1195962   +          +    -0.14631724639492 * GRP_MntFishProducts3
1195963   +          +     0.10002979979527 * GRP_MntFishProducts4
1195964   +          +    -0.09816985850711 * GRP_MntGoldProds2
1195965   +          +    -0.12203012318985 * GRP_MntGoldProds3
1195966   +          +    -0.01815311012777 * GRP_MntGoldProds4
1195967   +          +    -0.06619591895459 * GRP_MntMeatProducts2
1195968   +          +    -0.09072077897467 * GRP_MntMeatProducts3
1195969   +          +      0.1726695423557 * GRP_MntMeatProducts4
1195970   +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
1195971   +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
1195972   +          +     0.09645375616786 * GRP_NumCatalogPurchases3
1195973   +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
1195974   +          +      0.1854692255158 * GRP_NumDistPurchases2
1195975   +          +    -0.22330441571095 * GRP_NumDistPurchases3
1195976   +          +     0.13028835056864 * GRP_NumDistPurchases4
1195977   +          +    -0.16915625127212 * GRP_NumWebPurchases2
1195978   +          +    -0.29991156671478 * GRP_NumWebPurchases3
1195979   +          +     0.01989579721354 * GRP_NumWebPurchases4
1195980   +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
1195981   +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
1195982   +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
1195983   +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
1195984   +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
1195985   +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
1195986   +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
1195987   +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
1195988   +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
1195989   +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
1195990   +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
1195991   +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
1195992   +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
1195993   +          +     0.03013301742801 * GRP_MntFishProducts3
1195994   +          +     -0.0753778180106 * GRP_MntFishProducts4
1195995   +          +     0.22882421007211 * GRP_MntGoldProds2
1195996   +          +    -0.06369987000315 * GRP_MntGoldProds3
1195997   +          +     0.09890582278559 * GRP_MntGoldProds4
1195998   +          +    -0.21052640581149 * GRP_MntMeatProducts2
1195999   +          +    -0.00867214697179 * GRP_MntMeatProducts3
1196000   +          +     0.11929485476343 * GRP_MntMeatProducts4
1196001   +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
1196002   +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
1196003   +          +     0.06292612305453 * GRP_NumCatalogPurchases3
1196004   +          +      0.2309036660938 * GRP_NumCatalogPurchases4
1196005   +          +    -0.10062151440617 * GRP_NumDistPurchases2
1196006   +          +       0.229091410456 * GRP_NumDistPurchases3
1196007   +          +    -0.19729313017904 * GRP_NumDistPurchases4
1196008   +          +    -0.04101710595215 * GRP_NumWebPurchases2
1196009   +          +     0.13926341050039 * GRP_NumWebPurchases3
1196010   +          +    -0.04443067825367 * GRP_NumWebPurchases4
1196011   +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
1196012   +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
1196013   +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
1196014   +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
1196015   +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
1196016   +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
1196017   +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
1196018   +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
1196019   +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
1196020   +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
1196021   +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
1196022   +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
1196023   +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
1196024   +          +    -0.03224941225278 * GRP_MntFishProducts3
1196025   +          +     0.12546380835809 * GRP_MntFishProducts4
1196026   +          +     0.21690521778421 * GRP_MntGoldProds2
1196027   +          +     0.09035550488812 * GRP_MntGoldProds3
1196028   +          +    -0.03133919720822 * GRP_MntGoldProds4
1196029   +          +     0.05188619692889 * GRP_MntMeatProducts2
1196030   +          +    -0.04899714585321 * GRP_MntMeatProducts3
1196031   +          +    -0.35752492237905 * GRP_MntMeatProducts4
1196032   +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
1196033   +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
1196034   +          +     0.45534320348836 * GRP_NumCatalogPurchases3
1196035   +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
1196036   +          +     0.21080174299166 * GRP_NumDistPurchases2
1196037   +          +     0.24874731231732 * GRP_NumDistPurchases3
1196038   +          +    -0.01320035732018 * GRP_NumDistPurchases4
1196039   +          +     0.17773116301115 * GRP_NumWebPurchases2
1196040   +          +     0.13686106729498 * GRP_NumWebPurchases3
1196041   +          +     -0.0690876840257 * GRP_NumWebPurchases4
1196042   +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
1196043   +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
1196044   +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
1196045   +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
1196046   +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
1196047   +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
1196048   +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
1196049   +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
1196050   +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
1196051   +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
1196052   +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
1196053   +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
1196054   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1196055   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1196056   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1196057   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1196058   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1196059   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1196060   +END;
MPRINT(EM_DIAGRAM):   END;
1196061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1196062   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1196063   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1196064   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1196065   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1196066   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1196067   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1196068   +END;
MPRINT(EM_DIAGRAM):   END;
1196069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196070   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1196071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196072   +
1196073   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1196074   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1196075   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1196076   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1196077   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1196078   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196079   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1196080   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1196081   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1196082   +end;
MPRINT(EM_DIAGRAM):   end;
1196083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196084   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1196085   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1196086   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1196087   +   end;
MPRINT(EM_DIAGRAM):   end;
1196088   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1196089   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1196090   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1196091   +   end;
MPRINT(EM_DIAGRAM):   end;
1196092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196093   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1196094   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1196095   +   end;
MPRINT(EM_DIAGRAM):   end;
1196096   +end;
MPRINT(EM_DIAGRAM):   end;
1196097   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1196098   +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
1196099   +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
1196100   +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
1196101   +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
1196102   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1196103   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1196104   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1196105   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1196106   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1196107   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1196108   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1196109   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1196110   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1196111   +END;
MPRINT(EM_DIAGRAM):   END;
1196112   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1196113   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1196114   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1196115   +END;
MPRINT(EM_DIAGRAM):   END;
1196116   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1196117   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1196118   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1196119   +END;
MPRINT(EM_DIAGRAM):   END;
1196120   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1196121   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1196122   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1196123   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1196124   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1196125   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1196126   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1196127   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196128   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1196129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196130   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1196131   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1196132   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1196133   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1196134   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1196135   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1196136   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1196137   +END;
MPRINT(EM_DIAGRAM):   END;
1196138   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1196139   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1196140   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1196141   +drop
1196142   +H11
1196143   +H12
1196144   +H13
1196145   +H14
1196146   +H15
1196147   +H16
1196148   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1196149   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1196150   +* Renaming variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural23;
1196151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196152   +* Renaming Posterior variables for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural23;
1196153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196154   +drop Neural23_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar1;
1196155   +Neural23_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar1 = P_DepVar1;
1196156   +drop Neural23_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural23_P_DepVar0;
1196157   +Neural23_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural23_P_DepVar0 = P_DepVar0;
1196158   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196159   +* Renaming _WARN_ variable for Neural23;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural23;
1196160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196161   +length Neural23_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural23_WARN_ $4;
1196162   +drop Neural23_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural23_WARN_;
1196163   +Neural23_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural23_WARN_ = _WARN_;
1196164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196165   +* Ensmbl3: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 5 of 10;
1196166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196167   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196168   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1196169   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1196170   +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
1196171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1196172   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1196173   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1196174   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1196175   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1196176   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1196177   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1196178   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1196179   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1196180   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1196181   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1196182   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1196183   +LENGTH _WARN_ $4
1196184   +      F_DepVar  $ 12
1196185   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1196186   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1196187   +
1196188   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1196189   +
1196190   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1196191   +
1196192   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1196193   +
1196194   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1196195   +
1196196   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1196197   +
1196198   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1196199   +
1196200   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1196201   +
1196202   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1196203   +
1196204   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1196205   +
1196206   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1196207   +
1196208   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1196209   +
1196210   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1196211   +
1196212   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1196213   +
1196214   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1196215   +
1196216   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1196217   +
1196218   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1196219   +
1196220   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1196221   +
1196222   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1196223   +
1196224   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1196225   +
1196226   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1196227   +
1196228   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1196229   +
1196230   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1196231   +
1196232   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1196233   +
1196234   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1196235   +
1196236   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1196237   +
1196238   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1196239   +
1196240   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1196241   +
1196242   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1196243   +
1196244   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1196245   +
1196246   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1196247   +
1196248   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1196249   +
1196250   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1196251   +
1196252   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1196253   +
1196254   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1196255   +
1196256   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1196257   +
1196258   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1196259   +
1196260   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1196261   +
1196262   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1196263   +
1196264   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1196265   +
1196266   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1196267   +
1196268   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1196269   +
1196270   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1196271   +
1196272   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1196273   +
1196274   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1196275   +
1196276   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1196277   +
1196278   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1196279   +
1196280   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1196281   +
1196282   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1196283   +
1196284   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1196285   +
1196286   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1196287   +
1196288   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1196289   +
1196290   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1196291   +
1196292   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1196293   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1196294   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1196295   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1196296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196298   +end;
MPRINT(EM_DIAGRAM):   end;
1196299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196301   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1196302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196303   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1196304   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1196305   +   end;
MPRINT(EM_DIAGRAM):   end;
1196306   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1196307   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1196308   +   end;
MPRINT(EM_DIAGRAM):   end;
1196309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196310   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1196311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196313   +   end;
MPRINT(EM_DIAGRAM):   end;
1196314   +end;
MPRINT(EM_DIAGRAM):   end;
1196315   +
1196316   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1196317   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1196318   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1196319   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1196320   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1196321   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1196322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196324   +end;
MPRINT(EM_DIAGRAM):   end;
1196325   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196326   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196327   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1196328   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196329   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1196330   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1196331   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1196332   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1196333   +   end;
MPRINT(EM_DIAGRAM):   end;
1196334   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1196335   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1196336   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1196337   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1196338   +   end;
MPRINT(EM_DIAGRAM):   end;
1196339   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196340   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1196341   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1196342   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1196343   +   end;
MPRINT(EM_DIAGRAM):   end;
1196344   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196345   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1196346   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1196347   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1196348   +   end;
MPRINT(EM_DIAGRAM):   end;
1196349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196350   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1196351   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1196352   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1196353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196355   +   end;
MPRINT(EM_DIAGRAM):   end;
1196356   +end;
MPRINT(EM_DIAGRAM):   end;
1196357   +
1196358   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1196359   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1196360   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1196361   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1196362   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1196363   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1196364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196366   +end;
MPRINT(EM_DIAGRAM):   end;
1196367   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196369   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1196370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196371   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1196372   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1196373   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1196374   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1196375   +   end;
MPRINT(EM_DIAGRAM):   end;
1196376   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196377   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1196378   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1196379   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1196380   +   end;
MPRINT(EM_DIAGRAM):   end;
1196381   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1196382   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1196383   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1196384   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1196385   +   end;
MPRINT(EM_DIAGRAM):   end;
1196386   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196387   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1196388   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1196389   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1196390   +   end;
MPRINT(EM_DIAGRAM):   end;
1196391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196392   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1196393   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1196394   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1196395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196397   +   end;
MPRINT(EM_DIAGRAM):   end;
1196398   +end;
MPRINT(EM_DIAGRAM):   end;
1196399   +
1196400   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1196401   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1196402   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1196403   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1196404   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1196405   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1196406   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196407   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196408   +end;
MPRINT(EM_DIAGRAM):   end;
1196409   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196410   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196411   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1196412   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196413   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196414   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1196415   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1196416   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1196417   +   end;
MPRINT(EM_DIAGRAM):   end;
1196418   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196419   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1196420   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1196421   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1196422   +   end;
MPRINT(EM_DIAGRAM):   end;
1196423   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196424   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1196425   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1196426   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1196427   +   end;
MPRINT(EM_DIAGRAM):   end;
1196428   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196429   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1196430   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1196431   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1196432   +   end;
MPRINT(EM_DIAGRAM):   end;
1196433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196434   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1196435   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1196436   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1196437   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196438   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196439   +   end;
MPRINT(EM_DIAGRAM):   end;
1196440   +end;
MPRINT(EM_DIAGRAM):   end;
1196441   +
1196442   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1196443   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1196444   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1196445   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1196446   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1196447   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1196448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196450   +end;
MPRINT(EM_DIAGRAM):   end;
1196451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196453   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1196454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196455   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196456   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1196457   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1196458   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1196459   +   end;
MPRINT(EM_DIAGRAM):   end;
1196460   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196461   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1196462   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1196463   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1196464   +   end;
MPRINT(EM_DIAGRAM):   end;
1196465   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196466   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1196467   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1196468   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1196469   +   end;
MPRINT(EM_DIAGRAM):   end;
1196470   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196471   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1196472   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1196473   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1196474   +   end;
MPRINT(EM_DIAGRAM):   end;
1196475   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196476   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1196477   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1196478   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1196479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196481   +   end;
MPRINT(EM_DIAGRAM):   end;
1196482   +end;
MPRINT(EM_DIAGRAM):   end;
1196483   +
1196484   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1196485   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1196486   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1196487   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1196488   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1196489   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1196490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196492   +end;
MPRINT(EM_DIAGRAM):   end;
1196493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196495   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1196496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196497   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196498   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1196499   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1196500   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1196501   +   end;
MPRINT(EM_DIAGRAM):   end;
1196502   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196503   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1196504   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1196505   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1196506   +   end;
MPRINT(EM_DIAGRAM):   end;
1196507   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196508   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1196509   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1196510   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1196511   +   end;
MPRINT(EM_DIAGRAM):   end;
1196512   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196513   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1196514   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1196515   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1196516   +   end;
MPRINT(EM_DIAGRAM):   end;
1196517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196518   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1196519   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1196520   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1196521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196523   +   end;
MPRINT(EM_DIAGRAM):   end;
1196524   +end;
MPRINT(EM_DIAGRAM):   end;
1196525   +
1196526   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1196527   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1196528   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1196529   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1196530   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1196531   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1196532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196534   +end;
MPRINT(EM_DIAGRAM):   end;
1196535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196537   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1196538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196539   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196540   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1196541   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1196542   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1196543   +   end;
MPRINT(EM_DIAGRAM):   end;
1196544   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196545   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1196546   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1196547   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1196548   +   end;
MPRINT(EM_DIAGRAM):   end;
1196549   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196550   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1196551   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1196552   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1196553   +   end;
MPRINT(EM_DIAGRAM):   end;
1196554   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196555   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1196556   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1196557   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1196558   +   end;
MPRINT(EM_DIAGRAM):   end;
1196559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196560   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1196561   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1196562   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1196563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196565   +   end;
MPRINT(EM_DIAGRAM):   end;
1196566   +end;
MPRINT(EM_DIAGRAM):   end;
1196567   +
1196568   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1196569   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1196570   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1196571   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1196572   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1196573   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1196574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196576   +end;
MPRINT(EM_DIAGRAM):   end;
1196577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196579   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1196580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196581   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196582   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1196583   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1196584   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1196585   +   end;
MPRINT(EM_DIAGRAM):   end;
1196586   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196587   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1196588   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1196589   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1196590   +   end;
MPRINT(EM_DIAGRAM):   end;
1196591   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196592   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1196593   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1196594   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1196595   +   end;
MPRINT(EM_DIAGRAM):   end;
1196596   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196597   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1196598   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1196599   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1196600   +   end;
MPRINT(EM_DIAGRAM):   end;
1196601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196602   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1196603   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1196604   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1196605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196607   +   end;
MPRINT(EM_DIAGRAM):   end;
1196608   +end;
MPRINT(EM_DIAGRAM):   end;
1196609   +
1196610   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1196611   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1196612   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1196613   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1196614   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1196615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196617   +end;
MPRINT(EM_DIAGRAM):   end;
1196618   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196620   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1196621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196622   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196623   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1196624   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1196625   +   end;
MPRINT(EM_DIAGRAM):   end;
1196626   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196627   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1196628   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1196629   +   end;
MPRINT(EM_DIAGRAM):   end;
1196630   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196631   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1196632   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1196633   +   end;
MPRINT(EM_DIAGRAM):   end;
1196634   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196635   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1196636   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1196637   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196638   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196639   +   end;
MPRINT(EM_DIAGRAM):   end;
1196640   +end;
MPRINT(EM_DIAGRAM):   end;
1196641   +
1196642   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1196643   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1196644   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1196645   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1196646   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1196647   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1196648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196650   +end;
MPRINT(EM_DIAGRAM):   end;
1196651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196653   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1196654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196655   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1196656   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1196657   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1196658   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1196659   +   end;
MPRINT(EM_DIAGRAM):   end;
1196660   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196661   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1196662   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1196663   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1196664   +   end;
MPRINT(EM_DIAGRAM):   end;
1196665   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196666   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1196667   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1196668   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1196669   +   end;
MPRINT(EM_DIAGRAM):   end;
1196670   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1196671   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1196672   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1196673   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1196674   +   end;
MPRINT(EM_DIAGRAM):   end;
1196675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196676   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1196677   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1196678   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1196679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196681   +   end;
MPRINT(EM_DIAGRAM):   end;
1196682   +end;
MPRINT(EM_DIAGRAM):   end;
1196683   +
1196684   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1196685   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1196686   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1196687   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1196688   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1196689   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1196690   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196691   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196692   +end;
MPRINT(EM_DIAGRAM):   end;
1196693   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196694   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196695   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1196696   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196697   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196698   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1196699   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1196700   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1196701   +   end;
MPRINT(EM_DIAGRAM):   end;
1196702   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196703   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1196704   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1196705   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1196706   +   end;
MPRINT(EM_DIAGRAM):   end;
1196707   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196708   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1196709   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1196710   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1196711   +   end;
MPRINT(EM_DIAGRAM):   end;
1196712   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196713   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1196714   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1196715   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1196716   +   end;
MPRINT(EM_DIAGRAM):   end;
1196717   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196718   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1196719   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1196720   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1196721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196723   +   end;
MPRINT(EM_DIAGRAM):   end;
1196724   +end;
MPRINT(EM_DIAGRAM):   end;
1196725   +
1196726   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1196727   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1196728   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1196729   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1196730   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1196731   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1196732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196734   +end;
MPRINT(EM_DIAGRAM):   end;
1196735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196736   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196737   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1196738   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196739   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1196740   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1196741   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1196742   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1196743   +   end;
MPRINT(EM_DIAGRAM):   end;
1196744   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1196745   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1196746   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1196747   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1196748   +   end;
MPRINT(EM_DIAGRAM):   end;
1196749   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196750   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1196751   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1196752   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1196753   +   end;
MPRINT(EM_DIAGRAM):   end;
1196754   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196755   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1196756   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1196757   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1196758   +   end;
MPRINT(EM_DIAGRAM):   end;
1196759   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196760   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1196761   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1196762   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1196763   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196764   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196765   +   end;
MPRINT(EM_DIAGRAM):   end;
1196766   +end;
MPRINT(EM_DIAGRAM):   end;
1196767   +
1196768   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1196769   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1196770   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1196771   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1196772   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1196773   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1196774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196776   +end;
MPRINT(EM_DIAGRAM):   end;
1196777   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196779   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1196780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196781   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1196782   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1196783   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1196784   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1196785   +   end;
MPRINT(EM_DIAGRAM):   end;
1196786   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1196787   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1196788   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1196789   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1196790   +   end;
MPRINT(EM_DIAGRAM):   end;
1196791   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196792   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1196793   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1196794   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1196795   +   end;
MPRINT(EM_DIAGRAM):   end;
1196796   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196797   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1196798   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1196799   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1196800   +   end;
MPRINT(EM_DIAGRAM):   end;
1196801   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196802   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1196803   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1196804   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1196805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196807   +   end;
MPRINT(EM_DIAGRAM):   end;
1196808   +end;
MPRINT(EM_DIAGRAM):   end;
1196809   +
1196810   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1196811   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1196812   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1196813   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1196814   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1196815   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1196816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1196817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196818   +end;
MPRINT(EM_DIAGRAM):   end;
1196819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1196820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1196821   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1196822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1196823   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1196824   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1196825   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1196826   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1196827   +   end;
MPRINT(EM_DIAGRAM):   end;
1196828   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1196829   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1196830   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1196831   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1196832   +   end;
MPRINT(EM_DIAGRAM):   end;
1196833   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1196834   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1196835   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1196836   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1196837   +   end;
MPRINT(EM_DIAGRAM):   end;
1196838   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1196839   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1196840   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1196841   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1196842   +   end;
MPRINT(EM_DIAGRAM):   end;
1196843   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1196844   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1196845   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1196846   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1196847   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1196848   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196849   +   end;
MPRINT(EM_DIAGRAM):   end;
1196850   +end;
MPRINT(EM_DIAGRAM):   end;
1196851   +
1196852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196853   +*** Checking missing input Interval
1196854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1196855   +
1196856   +IF NMISS(
1196857   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1196858   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1196859   +
1196860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1196861   +END;
MPRINT(EM_DIAGRAM):   END;
1196862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196863   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1196864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1196866   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1196867   +END;
MPRINT(EM_DIAGRAM):   END;
1196868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1196869   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1196870   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1196871   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1196872   +END;
MPRINT(EM_DIAGRAM):   END;
1196873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196874   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1196875   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196877   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1196878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1196879   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1196880   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1196881   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1196882   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1196883   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1196884   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1196885   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1196886   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1196887   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1196888   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1196889   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1196890   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1196891   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1196892   +          +     0.03411739869638 * GRP_MntFishProducts3
1196893   +          +      -0.083693402353 * GRP_MntFishProducts4
1196894   +          +     -0.1318128730187 * GRP_MntGoldProds2
1196895   +          +     -0.0614737729382 * GRP_MntGoldProds3
1196896   +          +    -0.00372986687449 * GRP_MntGoldProds4
1196897   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1196898   +          +     0.01519664718127 * GRP_MntMeatProducts3
1196899   +          +     0.29997111548812 * GRP_MntMeatProducts4
1196900   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1196901   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1196902   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1196903   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1196904   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1196905   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1196906   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1196907   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1196908   +          +     0.02966820025811 * GRP_NumWebPurchases3
1196909   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1196910   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1196911   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1196912   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1196913   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1196914   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1196915   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 * 
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 * 
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 + 
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 + 
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 + 
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 + 
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 + 
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 + 
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 * 
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 * 
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 * 
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 * 
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 * 
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 * 
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 + 
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 * 
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 + 
-0.15382569411658 * GRP_Recency4 ;
1196916   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1196917   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1196918   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1196919   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1196920   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1196921   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1196922   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1196923   +          +     0.00842475350903 * GRP_MntFishProducts3
1196924   +          +     -0.1623103908885 * GRP_MntFishProducts4
1196925   +          +    -0.23845524931139 * GRP_MntGoldProds2
1196926   +          +    -0.07128567155438 * GRP_MntGoldProds3
1196927   +          +     0.25778887379163 * GRP_MntGoldProds4
1196928   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1196929   +          +     0.06269922653052 * GRP_MntMeatProducts3
1196930   +          +      0.2587215409794 * GRP_MntMeatProducts4
1196931   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1196932   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1196933   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1196934   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1196935   +          +     0.12374838743082 * GRP_NumDistPurchases2
1196936   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1196937   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1196938   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1196939   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1196940   +          +     0.09237237622553 * GRP_NumWebPurchases4
1196941   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1196942   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1196943   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1196944   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1196945   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1196946   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 * 
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 * 
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 + 
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 + 
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 + 
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 + 
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 + 
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 + 
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476 
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 * 
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 * 
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 * 
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 * 
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 * 
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 + 
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 * 
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 + 
0.00206593904485 * GRP_Recency4 ;
1196947   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1196948   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1196949   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1196950   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1196951   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1196952   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1196953   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1196954   +          +    -0.07078012229572 * GRP_MntFishProducts3
1196955   +          +    -0.14569186671189 * GRP_MntFishProducts4
1196956   +          +     0.14963390032413 * GRP_MntGoldProds2
1196957   +          +    -0.11869917970226 * GRP_MntGoldProds3
1196958   +          +     0.25943105626615 * GRP_MntGoldProds4
1196959   +          +     0.36609689271233 * GRP_MntMeatProducts2
1196960   +          +     0.10969864655073 * GRP_MntMeatProducts3
1196961   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1196962   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1196963   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1196964   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1196965   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1196966   +          +     0.08068432649382 * GRP_NumDistPurchases2
1196967   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1196968   +          +     0.26738740475822 * GRP_NumDistPurchases4
1196969   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1196970   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1196971   +          +     0.01349113315351 * GRP_NumWebPurchases4
1196972   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1196973   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1196974   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1196975   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1196976   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1196977   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 * 
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 * 
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 + 
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 + 
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 + 
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 + 
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 + 
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 + 
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 + 
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 * 
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 * 
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 * 
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 * 
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 * 
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 + 
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 * 
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 + 
0.28490847560375 * GRP_Recency4 ;
1196978   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1196979   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1196980   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1196981   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1196982   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1196983   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1196984   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1196985   +          +    -0.18334484867808 * GRP_MntFishProducts3
1196986   +          +     0.13484477561766 * GRP_MntFishProducts4
1196987   +          +    -0.05145913380692 * GRP_MntGoldProds2
1196988   +          +     0.04459987080173 * GRP_MntGoldProds3
1196989   +          +     0.01539767655772 * GRP_MntGoldProds4
1196990   +          +     0.26537148543352 * GRP_MntMeatProducts2
1196991   +          +     0.22913678530176 * GRP_MntMeatProducts3
1196992   +          +     0.21262490658374 * GRP_MntMeatProducts4
1196993   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1196994   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1196995   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1196996   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1196997   +          +     0.09224372228857 * GRP_NumDistPurchases2
1196998   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1196999   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1197000   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1197001   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1197002   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1197003   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1197004   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1197005   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1197006   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1197007   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1197008   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 * 
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 * 
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 + 
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 + 
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 + 
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 + 
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352 
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 * 
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 + 
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 + 
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 + 
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 + 
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 + 
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827 
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 + 
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 * 
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1197009   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1197010   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1197011   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1197012   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1197013   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1197014   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1197015   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1197016   +          +    -0.08952948139975 * GRP_MntFishProducts3
1197017   +          +     0.15338133379465 * GRP_MntFishProducts4
1197018   +          +     0.04821845492824 * GRP_MntGoldProds2
1197019   +          +     0.20117781904284 * GRP_MntGoldProds3
1197020   +          +     0.13013396690778 * GRP_MntGoldProds4
1197021   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1197022   +          +     0.03161017721112 * GRP_MntMeatProducts3
1197023   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1197024   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1197025   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1197026   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1197027   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1197028   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1197029   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1197030   +          +      0.0473480026433 * GRP_NumDistPurchases4
1197031   +          +     0.03132883547053 * GRP_NumWebPurchases2
1197032   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1197033   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1197034   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1197035   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1197036   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1197037   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1197038   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1197039   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 * 
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 * 
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 + 
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 + 
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 + 
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 + 
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 + 
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 + 
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786 
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 * 
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 * 
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 * 
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 * 
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 * 
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 + 
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 * 
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 + 
-0.28363324780869 * GRP_Recency4 ;
1197040   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1197041   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1197042   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1197043   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1197044   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1197045   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1197046   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1197047   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1197048   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1197049   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1197050   +END;
MPRINT(EM_DIAGRAM):   END;
1197051   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1197052   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1197053   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1197054   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1197055   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1197056   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1197057   +END;
MPRINT(EM_DIAGRAM):   END;
1197058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197059   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1197060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197061   +
1197062   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1197063   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1197064   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1197065   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1197066   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1197067   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197068   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1197069   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1197070   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1197071   +end;
MPRINT(EM_DIAGRAM):   end;
1197072   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197073   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1197074   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1197075   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1197076   +   end;
MPRINT(EM_DIAGRAM):   end;
1197077   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1197078   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1197079   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1197080   +   end;
MPRINT(EM_DIAGRAM):   end;
1197081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197082   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1197083   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1197084   +   end;
MPRINT(EM_DIAGRAM):   end;
1197085   +end;
MPRINT(EM_DIAGRAM):   end;
1197086   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1197087   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1197088   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1197089   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 + 
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1197090   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1197091   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1197092   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1197093   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1197094   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1197095   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1197096   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1197097   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1197098   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1197099   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1197100   +END;
MPRINT(EM_DIAGRAM):   END;
1197101   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1197102   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1197103   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1197104   +END;
MPRINT(EM_DIAGRAM):   END;
1197105   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1197106   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1197107   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1197108   +END;
MPRINT(EM_DIAGRAM):   END;
1197109   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1197110   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1197111   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1197112   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1197113   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1197114   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1197115   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1197116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197117   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1197118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197119   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1197120   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1197121   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1197122   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1197123   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1197124   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1197125   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1197126   +END;
MPRINT(EM_DIAGRAM):   END;
1197127   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1197128   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1197129   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1197130   +drop
1197131   +H11
1197132   +H12
1197133   +H13
1197134   +H14
1197135   +H15
1197136   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1197137   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1197138   +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
1197139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197140   +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
1197141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197142   +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
1197143   +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
1197144   +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
1197145   +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
1197146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197147   +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
1197148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197149   +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
1197150   +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
1197151   +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
1197152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197153   +* Ensmbl3: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 6 of 10;
1197154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197156   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1197157   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1197158   +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
1197159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1197160   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1197161   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1197162   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1197163   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1197164   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1197165   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1197166   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1197167   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1197168   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1197169   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1197170   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1197171   +LENGTH _WARN_ $4
1197172   +      F_DepVar  $ 12
1197173   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1197174   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1197175   +
1197176   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1197177   +
1197178   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1197179   +
1197180   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1197181   +
1197182   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1197183   +
1197184   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1197185   +
1197186   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1197187   +
1197188   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1197189   +
1197190   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1197191   +
1197192   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1197193   +
1197194   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1197195   +
1197196   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1197197   +
1197198   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1197199   +
1197200   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1197201   +
1197202   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1197203   +
1197204   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1197205   +
1197206   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1197207   +
1197208   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1197209   +
1197210   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1197211   +
1197212   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1197213   +
1197214   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1197215   +
1197216   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1197217   +
1197218   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1197219   +
1197220   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1197221   +
1197222   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1197223   +
1197224   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1197225   +
1197226   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1197227   +
1197228   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1197229   +
1197230   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1197231   +
1197232   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1197233   +
1197234   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1197235   +
1197236   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1197237   +
1197238   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1197239   +
1197240   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1197241   +
1197242   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1197243   +
1197244   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1197245   +
1197246   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1197247   +
1197248   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1197249   +
1197250   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1197251   +
1197252   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1197253   +
1197254   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1197255   +
1197256   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1197257   +
1197258   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1197259   +
1197260   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1197261   +
1197262   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1197263   +
1197264   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1197265   +
1197266   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1197267   +
1197268   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1197269   +
1197270   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1197271   +
1197272   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1197273   +
1197274   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1197275   +
1197276   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1197277   +
1197278   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1197279   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1197280   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1197281   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1197282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197284   +end;
MPRINT(EM_DIAGRAM):   end;
1197285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197287   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1197288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197289   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1197290   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1197291   +   end;
MPRINT(EM_DIAGRAM):   end;
1197292   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1197293   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1197294   +   end;
MPRINT(EM_DIAGRAM):   end;
1197295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197296   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1197297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197299   +   end;
MPRINT(EM_DIAGRAM):   end;
1197300   +end;
MPRINT(EM_DIAGRAM):   end;
1197301   +
1197302   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1197303   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1197304   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1197305   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1197306   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1197307   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1197308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197310   +end;
MPRINT(EM_DIAGRAM):   end;
1197311   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197312   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197313   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1197314   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197315   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1197316   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1197317   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1197318   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1197319   +   end;
MPRINT(EM_DIAGRAM):   end;
1197320   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1197321   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1197322   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1197323   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1197324   +   end;
MPRINT(EM_DIAGRAM):   end;
1197325   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197326   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1197327   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1197328   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1197329   +   end;
MPRINT(EM_DIAGRAM):   end;
1197330   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197331   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1197332   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1197333   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1197334   +   end;
MPRINT(EM_DIAGRAM):   end;
1197335   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197336   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1197337   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1197338   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1197339   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197340   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197341   +   end;
MPRINT(EM_DIAGRAM):   end;
1197342   +end;
MPRINT(EM_DIAGRAM):   end;
1197343   +
1197344   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1197345   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1197346   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1197347   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1197348   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1197349   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1197350   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197351   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197352   +end;
MPRINT(EM_DIAGRAM):   end;
1197353   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197354   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197355   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1197356   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197357   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1197358   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1197359   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1197360   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1197361   +   end;
MPRINT(EM_DIAGRAM):   end;
1197362   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197363   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1197364   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1197365   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1197366   +   end;
MPRINT(EM_DIAGRAM):   end;
1197367   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1197368   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1197369   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1197370   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1197371   +   end;
MPRINT(EM_DIAGRAM):   end;
1197372   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197373   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1197374   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1197375   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1197376   +   end;
MPRINT(EM_DIAGRAM):   end;
1197377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197378   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1197379   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1197380   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1197381   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197382   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197383   +   end;
MPRINT(EM_DIAGRAM):   end;
1197384   +end;
MPRINT(EM_DIAGRAM):   end;
1197385   +
1197386   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1197387   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1197388   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1197389   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1197390   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1197391   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1197392   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197393   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197394   +end;
MPRINT(EM_DIAGRAM):   end;
1197395   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197396   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197397   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1197398   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197399   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197400   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1197401   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1197402   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1197403   +   end;
MPRINT(EM_DIAGRAM):   end;
1197404   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197405   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1197406   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1197407   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1197408   +   end;
MPRINT(EM_DIAGRAM):   end;
1197409   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197410   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1197411   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1197412   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1197413   +   end;
MPRINT(EM_DIAGRAM):   end;
1197414   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197415   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1197416   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1197417   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1197418   +   end;
MPRINT(EM_DIAGRAM):   end;
1197419   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197420   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1197421   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1197422   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1197423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197425   +   end;
MPRINT(EM_DIAGRAM):   end;
1197426   +end;
MPRINT(EM_DIAGRAM):   end;
1197427   +
1197428   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1197429   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1197430   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1197431   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1197432   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1197433   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1197434   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197435   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197436   +end;
MPRINT(EM_DIAGRAM):   end;
1197437   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197438   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197439   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1197440   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197441   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197442   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1197443   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1197444   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1197445   +   end;
MPRINT(EM_DIAGRAM):   end;
1197446   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197447   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1197448   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1197449   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1197450   +   end;
MPRINT(EM_DIAGRAM):   end;
1197451   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197452   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1197453   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1197454   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1197455   +   end;
MPRINT(EM_DIAGRAM):   end;
1197456   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197457   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1197458   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1197459   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1197460   +   end;
MPRINT(EM_DIAGRAM):   end;
1197461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197462   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1197463   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1197464   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1197465   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197466   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197467   +   end;
MPRINT(EM_DIAGRAM):   end;
1197468   +end;
MPRINT(EM_DIAGRAM):   end;
1197469   +
1197470   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1197471   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1197472   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1197473   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1197474   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1197475   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1197476   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197477   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197478   +end;
MPRINT(EM_DIAGRAM):   end;
1197479   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197480   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197481   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1197482   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197483   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197484   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1197485   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1197486   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1197487   +   end;
MPRINT(EM_DIAGRAM):   end;
1197488   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197489   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1197490   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1197491   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1197492   +   end;
MPRINT(EM_DIAGRAM):   end;
1197493   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197494   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1197495   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1197496   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1197497   +   end;
MPRINT(EM_DIAGRAM):   end;
1197498   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197499   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1197500   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1197501   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1197502   +   end;
MPRINT(EM_DIAGRAM):   end;
1197503   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197504   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1197505   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1197506   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1197507   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197508   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197509   +   end;
MPRINT(EM_DIAGRAM):   end;
1197510   +end;
MPRINT(EM_DIAGRAM):   end;
1197511   +
1197512   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1197513   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1197514   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1197515   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1197516   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1197517   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1197518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197520   +end;
MPRINT(EM_DIAGRAM):   end;
1197521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197523   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1197524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197525   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197526   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1197527   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1197528   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1197529   +   end;
MPRINT(EM_DIAGRAM):   end;
1197530   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197531   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1197532   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1197533   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1197534   +   end;
MPRINT(EM_DIAGRAM):   end;
1197535   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197536   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1197537   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1197538   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1197539   +   end;
MPRINT(EM_DIAGRAM):   end;
1197540   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197541   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1197542   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1197543   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1197544   +   end;
MPRINT(EM_DIAGRAM):   end;
1197545   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197546   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1197547   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1197548   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1197549   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197550   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197551   +   end;
MPRINT(EM_DIAGRAM):   end;
1197552   +end;
MPRINT(EM_DIAGRAM):   end;
1197553   +
1197554   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1197555   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1197556   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1197557   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1197558   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1197559   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1197560   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197561   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197562   +end;
MPRINT(EM_DIAGRAM):   end;
1197563   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197564   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197565   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1197566   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197567   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197568   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1197569   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1197570   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1197571   +   end;
MPRINT(EM_DIAGRAM):   end;
1197572   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197573   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1197574   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1197575   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1197576   +   end;
MPRINT(EM_DIAGRAM):   end;
1197577   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197578   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1197579   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1197580   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1197581   +   end;
MPRINT(EM_DIAGRAM):   end;
1197582   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197583   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1197584   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1197585   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1197586   +   end;
MPRINT(EM_DIAGRAM):   end;
1197587   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197588   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1197589   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1197590   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1197591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197593   +   end;
MPRINT(EM_DIAGRAM):   end;
1197594   +end;
MPRINT(EM_DIAGRAM):   end;
1197595   +
1197596   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1197597   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1197598   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1197599   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1197600   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1197601   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197602   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197603   +end;
MPRINT(EM_DIAGRAM):   end;
1197604   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197605   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197606   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1197607   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197608   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197609   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1197610   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1197611   +   end;
MPRINT(EM_DIAGRAM):   end;
1197612   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197613   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1197614   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1197615   +   end;
MPRINT(EM_DIAGRAM):   end;
1197616   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197617   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1197618   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1197619   +   end;
MPRINT(EM_DIAGRAM):   end;
1197620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197621   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1197622   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1197623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197625   +   end;
MPRINT(EM_DIAGRAM):   end;
1197626   +end;
MPRINT(EM_DIAGRAM):   end;
1197627   +
1197628   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1197629   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1197630   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1197631   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1197632   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1197633   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1197634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197636   +end;
MPRINT(EM_DIAGRAM):   end;
1197637   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197639   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1197640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197641   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1197642   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1197643   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1197644   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1197645   +   end;
MPRINT(EM_DIAGRAM):   end;
1197646   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197647   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1197648   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1197649   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1197650   +   end;
MPRINT(EM_DIAGRAM):   end;
1197651   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197652   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1197653   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1197654   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1197655   +   end;
MPRINT(EM_DIAGRAM):   end;
1197656   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1197657   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1197658   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1197659   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1197660   +   end;
MPRINT(EM_DIAGRAM):   end;
1197661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197662   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1197663   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1197664   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1197665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197667   +   end;
MPRINT(EM_DIAGRAM):   end;
1197668   +end;
MPRINT(EM_DIAGRAM):   end;
1197669   +
1197670   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1197671   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1197672   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1197673   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1197674   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1197675   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1197676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197678   +end;
MPRINT(EM_DIAGRAM):   end;
1197679   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197680   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197681   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1197682   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197683   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197684   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1197685   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1197686   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1197687   +   end;
MPRINT(EM_DIAGRAM):   end;
1197688   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197689   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1197690   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1197691   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1197692   +   end;
MPRINT(EM_DIAGRAM):   end;
1197693   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197694   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1197695   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1197696   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1197697   +   end;
MPRINT(EM_DIAGRAM):   end;
1197698   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197699   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1197700   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1197701   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1197702   +   end;
MPRINT(EM_DIAGRAM):   end;
1197703   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197704   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1197705   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1197706   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1197707   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197708   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197709   +   end;
MPRINT(EM_DIAGRAM):   end;
1197710   +end;
MPRINT(EM_DIAGRAM):   end;
1197711   +
1197712   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1197713   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1197714   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1197715   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1197716   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1197717   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1197718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197720   +end;
MPRINT(EM_DIAGRAM):   end;
1197721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197722   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197723   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1197724   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197725   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1197726   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1197727   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1197728   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1197729   +   end;
MPRINT(EM_DIAGRAM):   end;
1197730   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1197731   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1197732   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1197733   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1197734   +   end;
MPRINT(EM_DIAGRAM):   end;
1197735   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197736   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1197737   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1197738   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1197739   +   end;
MPRINT(EM_DIAGRAM):   end;
1197740   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197741   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1197742   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1197743   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1197744   +   end;
MPRINT(EM_DIAGRAM):   end;
1197745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197746   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1197747   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1197748   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1197749   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197750   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197751   +   end;
MPRINT(EM_DIAGRAM):   end;
1197752   +end;
MPRINT(EM_DIAGRAM):   end;
1197753   +
1197754   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1197755   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1197756   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1197757   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1197758   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1197759   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1197760   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197761   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197762   +end;
MPRINT(EM_DIAGRAM):   end;
1197763   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197764   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197765   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1197766   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197767   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1197768   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1197769   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1197770   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1197771   +   end;
MPRINT(EM_DIAGRAM):   end;
1197772   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1197773   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1197774   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1197775   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1197776   +   end;
MPRINT(EM_DIAGRAM):   end;
1197777   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197778   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1197779   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1197780   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1197781   +   end;
MPRINT(EM_DIAGRAM):   end;
1197782   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197783   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1197784   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1197785   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1197786   +   end;
MPRINT(EM_DIAGRAM):   end;
1197787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197788   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1197789   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1197790   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1197791   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197792   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197793   +   end;
MPRINT(EM_DIAGRAM):   end;
1197794   +end;
MPRINT(EM_DIAGRAM):   end;
1197795   +
1197796   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1197797   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1197798   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1197799   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1197800   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1197801   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1197802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1197803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197804   +end;
MPRINT(EM_DIAGRAM):   end;
1197805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1197806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1197807   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1197808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1197809   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1197810   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1197811   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1197812   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1197813   +   end;
MPRINT(EM_DIAGRAM):   end;
1197814   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1197815   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1197816   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1197817   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1197818   +   end;
MPRINT(EM_DIAGRAM):   end;
1197819   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1197820   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1197821   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1197822   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1197823   +   end;
MPRINT(EM_DIAGRAM):   end;
1197824   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1197825   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1197826   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1197827   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1197828   +   end;
MPRINT(EM_DIAGRAM):   end;
1197829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1197830   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1197831   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1197832   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1197833   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1197834   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197835   +   end;
MPRINT(EM_DIAGRAM):   end;
1197836   +end;
MPRINT(EM_DIAGRAM):   end;
1197837   +
1197838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197839   +*** Checking missing input Interval
1197840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1197841   +
1197842   +IF NMISS(
1197843   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1197844   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1197845   +
1197846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1197847   +END;
MPRINT(EM_DIAGRAM):   END;
1197848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197849   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1197850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197851   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1197852   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1197853   +END;
MPRINT(EM_DIAGRAM):   END;
1197854   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1197855   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1197856   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1197857   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1197858   +END;
MPRINT(EM_DIAGRAM):   END;
1197859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197860   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1197861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197863   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1197864   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1197865   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1197866   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1197867   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1197868   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1197869   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1197870   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1197871   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1197872   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1197873   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1197874   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1197875   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1197876   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1197877   +          +    -0.14978605827752 * GRP_MntFishProducts3
1197878   +          +     0.22642470616542 * GRP_MntFishProducts4
1197879   +          +     0.07604404821672 * GRP_MntGoldProds2
1197880   +          +     0.04745212568332 * GRP_MntGoldProds3
1197881   +          +    -0.10028215217028 * GRP_MntGoldProds4
1197882   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1197883   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1197884   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1197885   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1197886   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1197887   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1197888   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1197889   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1197890   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1197891   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1197892   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1197893   +          +     0.24754701690398 * GRP_NumWebPurchases3
1197894   +          +     0.01530465573539 * GRP_NumWebPurchases4
1197895   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1197896   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1197897   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1197898   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1197899   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1197900   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
1197901   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1197902   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1197903   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1197904   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1197905   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1197906   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1197907   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1197908   +          +    -0.12626287803422 * GRP_MntFishProducts3
1197909   +          +    -0.42885022606866 * GRP_MntFishProducts4
1197910   +          +    -0.08312331608509 * GRP_MntGoldProds2
1197911   +          +    -0.20061238652989 * GRP_MntGoldProds3
1197912   +          +      0.2540651659901 * GRP_MntGoldProds4
1197913   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1197914   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1197915   +          +     0.40616704937625 * GRP_MntMeatProducts4
1197916   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1197917   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1197918   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1197919   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1197920   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1197921   +          +     0.10966715611059 * GRP_NumDistPurchases3
1197922   +          +      -0.043035493739 * GRP_NumDistPurchases4
1197923   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1197924   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1197925   +          +     0.26936545488609 * GRP_NumWebPurchases4
1197926   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1197927   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1197928   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1197929   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1197930   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1197931   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
1197932   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1197933   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1197934   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1197935   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1197936   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1197937   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1197938   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1197939   +          +     0.07001619920815 * GRP_MntFishProducts3
1197940   +          +     0.07735498521359 * GRP_MntFishProducts4
1197941   +          +    -0.15884098938162 * GRP_MntGoldProds2
1197942   +          +    -0.27657428867783 * GRP_MntGoldProds3
1197943   +          +     -0.1812542301124 * GRP_MntGoldProds4
1197944   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1197945   +          +     0.00010942539908 * GRP_MntMeatProducts3
1197946   +          +     0.03587382246671 * GRP_MntMeatProducts4
1197947   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1197948   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1197949   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1197950   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1197951   +          +      -0.481887498986 * GRP_NumDistPurchases2
1197952   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1197953   +          +     0.21760620991618 * GRP_NumDistPurchases4
1197954   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1197955   +          +     0.06245025753157 * GRP_NumWebPurchases3
1197956   +          +     0.11312469123111 * GRP_NumWebPurchases4
1197957   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1197958   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1197959   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1197960   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1197961   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1197962   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
1197963   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1197964   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1197965   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1197966   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1197967   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1197968   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1197969   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1197970   +          +     0.33369645018356 * GRP_MntFishProducts3
1197971   +          +     0.08427214551103 * GRP_MntFishProducts4
1197972   +          +    -0.36187933889617 * GRP_MntGoldProds2
1197973   +          +      0.1522584097588 * GRP_MntGoldProds3
1197974   +          +    -0.18069803129722 * GRP_MntGoldProds4
1197975   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1197976   +          +     0.00511939388608 * GRP_MntMeatProducts3
1197977   +          +      0.0518722466688 * GRP_MntMeatProducts4
1197978   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1197979   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1197980   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1197981   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1197982   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1197983   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1197984   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1197985   +          +      0.0024401108853 * GRP_NumWebPurchases2
1197986   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1197987   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1197988   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1197989   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1197990   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1197991   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1197992   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1197993   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
1197994   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1197995   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1197996   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1197997   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1197998   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1197999   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1198000   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1198001   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1198002   +END;
MPRINT(EM_DIAGRAM):   END;
1198003   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1198004   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1198005   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1198006   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1198007   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1198008   +END;
MPRINT(EM_DIAGRAM):   END;
1198009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198010   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1198011   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198012   +
1198013   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1198014   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1198015   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1198016   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1198017   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1198018   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198019   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1198020   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1198021   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1198022   +end;
MPRINT(EM_DIAGRAM):   end;
1198023   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198024   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1198025   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1198026   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1198027   +   end;
MPRINT(EM_DIAGRAM):   end;
1198028   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1198029   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1198030   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1198031   +   end;
MPRINT(EM_DIAGRAM):   end;
1198032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198033   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1198034   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1198035   +   end;
MPRINT(EM_DIAGRAM):   end;
1198036   +end;
MPRINT(EM_DIAGRAM):   end;
1198037   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1198038   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1198039   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1198040   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1198041   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1198042   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1198043   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1198044   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1198045   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1198046   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1198047   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1198048   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1198049   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1198050   +END;
MPRINT(EM_DIAGRAM):   END;
1198051   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1198052   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1198053   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1198054   +END;
MPRINT(EM_DIAGRAM):   END;
1198055   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1198056   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1198057   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1198058   +END;
MPRINT(EM_DIAGRAM):   END;
1198059   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1198060   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1198061   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1198062   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1198063   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1198064   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1198065   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1198066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198067   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1198068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198069   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1198070   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1198071   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1198072   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1198073   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1198074   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1198075   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1198076   +END;
MPRINT(EM_DIAGRAM):   END;
1198077   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1198078   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1198079   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1198080   +drop
1198081   +H11
1198082   +H12
1198083   +H13
1198084   +H14
1198085   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1198086   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1198087   +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
1198088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198089   +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
1198090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198091   +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
1198092   +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
1198093   +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
1198094   +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
1198095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198096   +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
1198097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198098   +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
1198099   +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
1198100   +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
1198101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198102   +* Ensmbl3: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 7 of 10;
1198103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198105   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1198106   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1198107   +* NODE: Neural20;
MPRINT(EM_DIAGRAM):   * NODE: Neural20;
1198108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1198109   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1198110   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1198111   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1198112   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1198113   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1198114   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1198115   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1198116   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1198117   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1198118   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1198119   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1198120   +LENGTH _WARN_ $4
1198121   +      F_DepVar  $ 12
1198122   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1198123   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1198124   +
1198125   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1198126   +
1198127   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1198128   +
1198129   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1198130   +
1198131   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1198132   +
1198133   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1198134   +
1198135   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1198136   +
1198137   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1198138   +
1198139   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1198140   +
1198141   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1198142   +
1198143   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1198144   +
1198145   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1198146   +
1198147   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1198148   +
1198149   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1198150   +
1198151   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1198152   +
1198153   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1198154   +
1198155   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1198156   +
1198157   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1198158   +
1198159   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1198160   +
1198161   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1198162   +
1198163   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1198164   +
1198165   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1198166   +
1198167   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1198168   +
1198169   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1198170   +
1198171   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1198172   +
1198173   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1198174   +
1198175   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1198176   +
1198177   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1198178   +
1198179   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1198180   +
1198181   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1198182   +
1198183   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1198184   +
1198185   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1198186   +
1198187   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1198188   +
1198189   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1198190   +
1198191   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1198192   +
1198193   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1198194   +
1198195   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1198196   +
1198197   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1198198   +
1198199   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1198200   +
1198201   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1198202   +
1198203   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1198204   +
1198205   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1198206   +
1198207   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1198208   +
1198209   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1198210   +
1198211   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1198212   +
1198213   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1198214   +
1198215   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1198216   +
1198217   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1198218   +
1198219   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1198220   +
1198221   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1198222   +
1198223   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1198224   +
1198225   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1198226   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1198227   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1198228   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1198229   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198230   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198231   +end;
MPRINT(EM_DIAGRAM):   end;
1198232   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198233   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198234   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1198235   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198236   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1198237   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1198238   +   end;
MPRINT(EM_DIAGRAM):   end;
1198239   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1198240   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1198241   +   end;
MPRINT(EM_DIAGRAM):   end;
1198242   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198243   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1198244   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198245   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198246   +   end;
MPRINT(EM_DIAGRAM):   end;
1198247   +end;
MPRINT(EM_DIAGRAM):   end;
1198248   +
1198249   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1198250   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1198251   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1198252   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1198253   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1198254   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1198255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198257   +end;
MPRINT(EM_DIAGRAM):   end;
1198258   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198260   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1198261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198262   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1198263   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1198264   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1198265   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1198266   +   end;
MPRINT(EM_DIAGRAM):   end;
1198267   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1198268   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1198269   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1198270   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1198271   +   end;
MPRINT(EM_DIAGRAM):   end;
1198272   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198273   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1198274   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1198275   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1198276   +   end;
MPRINT(EM_DIAGRAM):   end;
1198277   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198278   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1198279   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1198280   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1198281   +   end;
MPRINT(EM_DIAGRAM):   end;
1198282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198283   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1198284   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1198285   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1198286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198288   +   end;
MPRINT(EM_DIAGRAM):   end;
1198289   +end;
MPRINT(EM_DIAGRAM):   end;
1198290   +
1198291   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1198292   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1198293   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1198294   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1198295   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1198296   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1198297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198299   +end;
MPRINT(EM_DIAGRAM):   end;
1198300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198302   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1198303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198304   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1198305   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1198306   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1198307   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1198308   +   end;
MPRINT(EM_DIAGRAM):   end;
1198309   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198310   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1198311   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1198312   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1198313   +   end;
MPRINT(EM_DIAGRAM):   end;
1198314   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1198315   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1198316   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1198317   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1198318   +   end;
MPRINT(EM_DIAGRAM):   end;
1198319   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198320   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1198321   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1198322   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1198323   +   end;
MPRINT(EM_DIAGRAM):   end;
1198324   +   else do;
The SAS System

MPRINT(EM_DIAGRAM):   else do;
1198325   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1198326   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1198327   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1198328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198330   +   end;
MPRINT(EM_DIAGRAM):   end;
1198331   +end;
MPRINT(EM_DIAGRAM):   end;
1198332   +
1198333   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1198334   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1198335   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1198336   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1198337   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1198338   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1198339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198341   +end;
MPRINT(EM_DIAGRAM):   end;
1198342   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198343   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198344   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1198345   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198346   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198347   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1198348   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1198349   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1198350   +   end;
MPRINT(EM_DIAGRAM):   end;
1198351   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198352   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1198353   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1198354   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1198355   +   end;
MPRINT(EM_DIAGRAM):   end;
1198356   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198357   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1198358   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1198359   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1198360   +   end;
MPRINT(EM_DIAGRAM):   end;
1198361   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198362   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1198363   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1198364   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1198365   +   end;
MPRINT(EM_DIAGRAM):   end;
1198366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198367   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1198368   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1198369   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1198370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198372   +   end;
MPRINT(EM_DIAGRAM):   end;
1198373   +end;
MPRINT(EM_DIAGRAM):   end;
1198374   +
1198375   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1198376   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1198377   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1198378   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1198379   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1198380   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1198381   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198382   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198383   +end;
MPRINT(EM_DIAGRAM):   end;
1198384   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198385   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198386   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1198387   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198388   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198389   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1198390   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1198391   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1198392   +   end;
MPRINT(EM_DIAGRAM):   end;
1198393   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198394   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1198395   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1198396   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1198397   +   end;
MPRINT(EM_DIAGRAM):   end;
1198398   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198399   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1198400   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1198401   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1198402   +   end;
MPRINT(EM_DIAGRAM):   end;
1198403   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198404   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1198405   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1198406   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1198407   +   end;
MPRINT(EM_DIAGRAM):   end;
1198408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198409   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1198410   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1198411   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1198412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198414   +   end;
MPRINT(EM_DIAGRAM):   end;
1198415   +end;
MPRINT(EM_DIAGRAM):   end;
1198416   +
1198417   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1198418   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1198419   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1198420   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1198421   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1198422   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1198423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198425   +end;
MPRINT(EM_DIAGRAM):   end;
1198426   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198428   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1198429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198430   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198431   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1198432   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1198433   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1198434   +   end;
MPRINT(EM_DIAGRAM):   end;
1198435   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198436   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1198437   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1198438   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1198439   +   end;
MPRINT(EM_DIAGRAM):   end;
1198440   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198441   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1198442   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1198443   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1198444   +   end;
MPRINT(EM_DIAGRAM):   end;
1198445   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198446   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1198447   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1198448   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1198449   +   end;
MPRINT(EM_DIAGRAM):   end;
1198450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198451   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1198452   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1198453   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1198454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198456   +   end;
MPRINT(EM_DIAGRAM):   end;
1198457   +end;
MPRINT(EM_DIAGRAM):   end;
1198458   +
1198459   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1198460   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1198461   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1198462   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1198463   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1198464   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1198465   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198467   +end;
MPRINT(EM_DIAGRAM):   end;
1198468   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198469   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198470   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1198471   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198472   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198473   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1198474   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1198475   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1198476   +   end;
MPRINT(EM_DIAGRAM):   end;
1198477   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198478   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1198479   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1198480   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1198481   +   end;
MPRINT(EM_DIAGRAM):   end;
1198482   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198483   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1198484   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1198485   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1198486   +   end;
MPRINT(EM_DIAGRAM):   end;
1198487   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198488   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1198489   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1198490   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1198491   +   end;
MPRINT(EM_DIAGRAM):   end;
1198492   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198493   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1198494   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1198495   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1198496   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198497   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198498   +   end;
MPRINT(EM_DIAGRAM):   end;
1198499   +end;
MPRINT(EM_DIAGRAM):   end;
1198500   +
1198501   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1198502   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1198503   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1198504   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1198505   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1198506   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1198507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198509   +end;
MPRINT(EM_DIAGRAM):   end;
1198510   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198512   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1198513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198514   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198515   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1198516   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1198517   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1198518   +   end;
MPRINT(EM_DIAGRAM):   end;
1198519   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198520   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1198521   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1198522   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1198523   +   end;
MPRINT(EM_DIAGRAM):   end;
1198524   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198525   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1198526   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1198527   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1198528   +   end;
MPRINT(EM_DIAGRAM):   end;
1198529   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198530   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1198531   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1198532   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1198533   +   end;
MPRINT(EM_DIAGRAM):   end;
1198534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198535   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1198536   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1198537   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1198538   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198539   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198540   +   end;
MPRINT(EM_DIAGRAM):   end;
1198541   +end;
MPRINT(EM_DIAGRAM):   end;
1198542   +
1198543   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1198544   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1198545   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1198546   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1198547   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1198548   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198550   +end;
MPRINT(EM_DIAGRAM):   end;
1198551   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198552   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198553   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1198554   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198555   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198556   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1198557   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1198558   +   end;
MPRINT(EM_DIAGRAM):   end;
1198559   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198560   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1198561   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1198562   +   end;
MPRINT(EM_DIAGRAM):   end;
1198563   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198564   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1198565   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1198566   +   end;
MPRINT(EM_DIAGRAM):   end;
1198567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198568   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1198569   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1198570   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198571   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198572   +   end;
MPRINT(EM_DIAGRAM):   end;
1198573   +end;
MPRINT(EM_DIAGRAM):   end;
1198574   +
1198575   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1198576   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1198577   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1198578   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1198579   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1198580   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1198581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198583   +end;
MPRINT(EM_DIAGRAM):   end;
1198584   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198585   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198586   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1198587   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198588   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1198589   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1198590   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1198591   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1198592   +   end;
MPRINT(EM_DIAGRAM):   end;
1198593   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198594   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1198595   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1198596   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1198597   +   end;
MPRINT(EM_DIAGRAM):   end;
1198598   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198599   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1198600   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1198601   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1198602   +   end;
MPRINT(EM_DIAGRAM):   end;
1198603   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1198604   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1198605   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1198606   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1198607   +   end;
MPRINT(EM_DIAGRAM):   end;
1198608   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198609   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1198610   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1198611   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1198612   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198613   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198614   +   end;
MPRINT(EM_DIAGRAM):   end;
1198615   +end;
MPRINT(EM_DIAGRAM):   end;
1198616   +
1198617   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1198618   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1198619   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1198620   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1198621   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1198622   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1198623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198625   +end;
MPRINT(EM_DIAGRAM):   end;
1198626   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198628   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1198629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198630   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198631   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1198632   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1198633   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1198634   +   end;
MPRINT(EM_DIAGRAM):   end;
1198635   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198636   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1198637   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1198638   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1198639   +   end;
MPRINT(EM_DIAGRAM):   end;
1198640   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198641   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1198642   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1198643   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1198644   +   end;
MPRINT(EM_DIAGRAM):   end;
1198645   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198646   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1198647   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1198648   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1198649   +   end;
MPRINT(EM_DIAGRAM):   end;
1198650   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198651   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1198652   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1198653   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1198654   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198655   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198656   +   end;
MPRINT(EM_DIAGRAM):   end;
1198657   +end;
MPRINT(EM_DIAGRAM):   end;
1198658   +
1198659   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1198660   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1198661   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1198662   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1198663   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1198664   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1198665   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198666   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198667   +end;
MPRINT(EM_DIAGRAM):   end;
1198668   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198669   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198670   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1198671   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198672   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1198673   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1198674   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1198675   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1198676   +   end;
MPRINT(EM_DIAGRAM):   end;
1198677   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1198678   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1198679   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1198680   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1198681   +   end;
MPRINT(EM_DIAGRAM):   end;
1198682   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198683   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1198684   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1198685   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1198686   +   end;
MPRINT(EM_DIAGRAM):   end;
1198687   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198688   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1198689   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1198690   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1198691   +   end;
MPRINT(EM_DIAGRAM):   end;
1198692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198693   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1198694   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1198695   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1198696   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198697   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198698   +   end;
MPRINT(EM_DIAGRAM):   end;
1198699   +end;
MPRINT(EM_DIAGRAM):   end;
1198700   +
1198701   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1198702   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1198703   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1198704   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1198705   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1198706   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1198707   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198708   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198709   +end;
MPRINT(EM_DIAGRAM):   end;
1198710   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198711   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198712   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1198713   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198714   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1198715   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1198716   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1198717   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1198718   +   end;
MPRINT(EM_DIAGRAM):   end;
1198719   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1198720   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1198721   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1198722   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1198723   +   end;
MPRINT(EM_DIAGRAM):   end;
1198724   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198725   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1198726   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1198727   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1198728   +   end;
MPRINT(EM_DIAGRAM):   end;
1198729   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198730   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1198731   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1198732   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1198733   +   end;
MPRINT(EM_DIAGRAM):   end;
1198734   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198735   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1198736   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1198737   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1198738   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198739   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198740   +   end;
MPRINT(EM_DIAGRAM):   end;
1198741   +end;
MPRINT(EM_DIAGRAM):   end;
1198742   +
1198743   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1198744   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1198745   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1198746   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1198747   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1198748   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1198749   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1198750   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198751   +end;
MPRINT(EM_DIAGRAM):   end;
1198752   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198753   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1198754   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1198755   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198756   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1198757   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1198758   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1198759   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1198760   +   end;
MPRINT(EM_DIAGRAM):   end;
1198761   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1198762   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1198763   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1198764   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1198765   +   end;
MPRINT(EM_DIAGRAM):   end;
1198766   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1198767   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1198768   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1198769   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1198770   +   end;
MPRINT(EM_DIAGRAM):   end;
1198771   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1198772   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1198773   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1198774   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1198775   +   end;
MPRINT(EM_DIAGRAM):   end;
1198776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198777   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1198778   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1198779   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1198780   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1198781   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198782   +   end;
MPRINT(EM_DIAGRAM):   end;
1198783   +end;
MPRINT(EM_DIAGRAM):   end;
1198784   +
1198785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198786   +*** Checking missing input Interval
1198787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1198788   +
1198789   +IF NMISS(
1198790   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1198791   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1198792   +
1198793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1198794   +END;
MPRINT(EM_DIAGRAM):   END;
1198795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198796   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1198797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198798   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1198799   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1198800   +END;
MPRINT(EM_DIAGRAM):   END;
1198801   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1198802   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1198803   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1198804   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1198805   +END;
MPRINT(EM_DIAGRAM):   END;
1198806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198807   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1198808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198810   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1198811   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198812   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1198813   +   H11  =    -0.41939883149261 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.41939883149261 * S_Year_Birth ;
1198814   +   H12  =    -0.11064938192918 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.11064938192918 * S_Year_Birth ;
1198815   +   H13  =    -0.06467031288187 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.06467031288187 * S_Year_Birth ;
1198816   +   H11  = H11  +     0.35448004105908 * GRP_AcceptedCmp52
1198817   +          +     -0.0918084964279 * GRP_Frq2  +    -0.23985284532042 * GRP_Frq3
1198818   +          +     0.05570802281486 * GRP_Frq4  +     -0.3547598798301 *
1198819   +        GRP_Income2  +    -0.33962703607715 * GRP_Income3
1198820   +          +     0.12436841230863 * GRP_Income4  +    -0.01455143009771 *
1198821   +        GRP_Mnt2  +     0.10120972709945 * GRP_Mnt3  +     -0.0249155152295 *
1198822   +        GRP_Mnt4  +      -0.269333013942 * GRP_MntFishProducts2
1198823   +          +     0.05785555057946 * GRP_MntFishProducts3
1198824   +          +    -0.13000426565494 * GRP_MntFishProducts4
1198825   +          +     0.17862455375899 * GRP_MntGoldProds2
1198826   +          +     0.06257016564867 * GRP_MntGoldProds3
1198827   +          +     0.20249370161035 * GRP_MntGoldProds4
1198828   +          +     0.32678386182233 * GRP_MntMeatProducts2
1198829   +          +      0.3373259079058 * GRP_MntMeatProducts3
1198830   +          +     0.28061036187325 * GRP_MntMeatProducts4
1198831   +          +    -0.03272437686392 * GRP_MntWines2  +    -0.21202325680638 *
1198832   +        GRP_MntWines3  +      0.3424605103125 * GRP_MntWines4
1198833   +          +     0.18542181546309 * GRP_NumCatalogPurchases3
1198834   +          +     0.14594977072698 * GRP_NumCatalogPurchases4
1198835   +          +     0.20431880618842 * GRP_NumDistPurchases2
1198836   +          +    -0.15119714667229 * GRP_NumDistPurchases3
1198837   +          +     0.19430353652214 * GRP_NumDistPurchases4
1198838   +          +     0.04685341709526 * GRP_NumWebPurchases2
1198839   +          +    -0.06094487598588 * GRP_NumWebPurchases3
1198840   +          +    -0.04237233324733 * GRP_NumWebPurchases4
1198841   +          +    -0.08991829185393 * GRP_RFMstat2  +    -0.07347809144281 *
1198842   +        GRP_RFMstat3  +     -0.4341534715985 * GRP_RFMstat4
1198843   +          +     -0.0196197195217 * GRP_RMntFrq2  +     0.12097540554524 *
1198844   +        GRP_RMntFrq3  +     0.26057062278983 * GRP_RMntFrq4
1198845   +          +    -0.63029497931535 * GRP_Recency2  +    -0.41040165908214 *
1198846   +        GRP_Recency3  +     0.03209060504164 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.35448004105908 * GRP_AcceptedCmp52 + -0.0918084964279 * 
GRP_Frq2 + -0.23985284532042 * GRP_Frq3 + 0.05570802281486 * GRP_Frq4 + -0.3547598798301 * 
GRP_Income2 + -0.33962703607715 * GRP_Income3 + 0.12436841230863 * GRP_Income4 + 
-0.01455143009771 * GRP_Mnt2 + 0.10120972709945 * GRP_Mnt3 + -0.0249155152295 * GRP_Mnt4 + 
-0.269333013942 * GRP_MntFishProducts2 + 0.05785555057946 * GRP_MntFishProducts3 + 
-0.13000426565494 * GRP_MntFishProducts4 + 0.17862455375899 * GRP_MntGoldProds2 + 
0.06257016564867 * GRP_MntGoldProds3 + 0.20249370161035 * GRP_MntGoldProds4 + 0.32678386182233 
* GRP_MntMeatProducts2 + 0.3373259079058 * GRP_MntMeatProducts3 + 0.28061036187325 * 
GRP_MntMeatProducts4 + -0.03272437686392 * GRP_MntWines2 + -0.21202325680638 * GRP_MntWines3 + 
0.3424605103125 * GRP_MntWines4 + 0.18542181546309 * GRP_NumCatalogPurchases3 + 
0.14594977072698 * GRP_NumCatalogPurchases4 + 0.20431880618842 * GRP_NumDistPurchases2 + 
-0.15119714667229 * GRP_NumDistPurchases3 + 0.19430353652214 * GRP_NumDistPurchases4 + 
0.04685341709526 * GRP_NumWebPurchases2 + -0.06094487598588 * GRP_NumWebPurchases3 + 
-0.04237233324733 * GRP_NumWebPurchases4 + -0.08991829185393 * GRP_RFMstat2 + 
-0.07347809144281 * GRP_RFMstat3 + -0.4341534715985 * GRP_RFMstat4 + -0.0196197195217 * 
GRP_RMntFrq2 + 0.12097540554524 * GRP_RMntFrq3 + 0.26057062278983 * GRP_RMntFrq4 + 
-0.63029497931535 * GRP_Recency2 + -0.41040165908214 * GRP_Recency3 + 0.03209060504164 * 
GRP_Recency4 ;
1198847   +   H12  = H12  +    -0.16182441315567 * GRP_AcceptedCmp52
1198848   +          +     0.17228162466334 * GRP_Frq2  +     0.15132687990319 * GRP_Frq3
1198849   +          +     -0.1689155033241 * GRP_Frq4  +     0.15149901619495 *
1198850   +        GRP_Income2  +     0.17788129654866 * GRP_Income3
1198851   +          +     0.05923547318389 * GRP_Income4  +    -0.08355004275991 *
1198852   +        GRP_Mnt2  +     0.02631246580002 * GRP_Mnt3  +     -0.2309890088856 *
1198853   +        GRP_Mnt4  +     0.14312480402918 * GRP_MntFishProducts2
1198854   +          +     -0.2578736956972 * GRP_MntFishProducts3
1198855   +          +     0.18402620335031 * GRP_MntFishProducts4
1198856   +          +     0.05242149290227 * GRP_MntGoldProds2
1198857   +          +    -0.21803869063517 * GRP_MntGoldProds3
1198858   +          +     0.13815635816146 * GRP_MntGoldProds4
1198859   +          +    -0.27330809721997 * GRP_MntMeatProducts2
1198860   +          +    -0.21530314028526 * GRP_MntMeatProducts3
1198861   +          +     0.02052103215709 * GRP_MntMeatProducts4
1198862   +          +    -0.12650113568762 * GRP_MntWines2  +     0.11322482902275 *
1198863   +        GRP_MntWines3  +    -0.27438926594633 * GRP_MntWines4
1198864   +          +    -0.54784157827091 * GRP_NumCatalogPurchases3
1198865   +          +    -0.08859032150825 * GRP_NumCatalogPurchases4
1198866   +          +     -0.1595237277506 * GRP_NumDistPurchases2
1198867   +          +     0.00057390274989 * GRP_NumDistPurchases3
1198868   +          +     -0.1082308524036 * GRP_NumDistPurchases4
1198869   +          +     0.08795971555231 * GRP_NumWebPurchases2
1198870   +          +    -0.23666817227274 * GRP_NumWebPurchases3
1198871   +          +     0.01490866706276 * GRP_NumWebPurchases4
1198872   +          +    -0.00588866906818 * GRP_RFMstat2  +    -0.01109150017006 *
1198873   +        GRP_RFMstat3  +    -0.00327834027258 * GRP_RFMstat4
1198874   +          +     0.04028767653615 * GRP_RMntFrq2  +     -0.0163649640466 *
1198875   +        GRP_RMntFrq3  +    -0.07601316125357 * GRP_RMntFrq4
1198876   +          +     0.66228536796217 * GRP_Recency2  +     0.48287342862457 *
1198877   +        GRP_Recency3  +    -0.03032773010646 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.16182441315567 * GRP_AcceptedCmp52 + 0.17228162466334 * 
GRP_Frq2 + 0.15132687990319 * GRP_Frq3 + -0.1689155033241 * GRP_Frq4 + 0.15149901619495 * 
GRP_Income2 + 0.17788129654866 * GRP_Income3 + 0.05923547318389 * GRP_Income4 + 
-0.08355004275991 * GRP_Mnt2 + 0.02631246580002 * GRP_Mnt3 + -0.2309890088856 * GRP_Mnt4 + 
0.14312480402918 * GRP_MntFishProducts2 + -0.2578736956972 * GRP_MntFishProducts3 + 
0.18402620335031 * GRP_MntFishProducts4 + 0.05242149290227 * GRP_MntGoldProds2 + 
-0.21803869063517 * GRP_MntGoldProds3 + 0.13815635816146 * GRP_MntGoldProds4 + 
-0.27330809721997 * GRP_MntMeatProducts2 + -0.21530314028526 * GRP_MntMeatProducts3 + 
0.02052103215709 * GRP_MntMeatProducts4 + -0.12650113568762 * GRP_MntWines2 + 0.11322482902275 
* GRP_MntWines3 + -0.27438926594633 * GRP_MntWines4 + -0.54784157827091 * 
GRP_NumCatalogPurchases3 + -0.08859032150825 * GRP_NumCatalogPurchases4 + -0.1595237277506 * 
GRP_NumDistPurchases2 + 0.00057390274989 * GRP_NumDistPurchases3 + -0.1082308524036 * 
GRP_NumDistPurchases4 + 0.08795971555231 * GRP_NumWebPurchases2 + -0.23666817227274 * 
GRP_NumWebPurchases3 + 0.01490866706276 * GRP_NumWebPurchases4 + -0.00588866906818 * 
GRP_RFMstat2 + -0.01109150017006 * GRP_RFMstat3 + -0.00327834027258 * GRP_RFMstat4 + 
0.04028767653615 * GRP_RMntFrq2 + -0.0163649640466 * GRP_RMntFrq3 + -0.07601316125357 * 
GRP_RMntFrq4 + 0.66228536796217 * GRP_Recency2 + 0.48287342862457 * GRP_Recency3 + 
-0.03032773010646 * GRP_Recency4 ;
1198878   +   H13  = H13  +    -0.76222121025234 * GRP_AcceptedCmp52
1198879   +          +     0.36511613420086 * GRP_Frq2  +    -0.02961648849396 * GRP_Frq3
1198880   +          +     0.08263295800576 * GRP_Frq4  +     0.53248885273716 *
1198881   +        GRP_Income2  +     0.58143836248256 * GRP_Income3
1198882   +          +     -0.6819044946332 * GRP_Income4  +     0.09969835343923 *
1198883   +        GRP_Mnt2  +     0.22681708558976 * GRP_Mnt3  +    -0.05933156304489 *
1198884   +        GRP_Mnt4  +      0.3115929057885 * GRP_MntFishProducts2
1198885   +          +     0.20656815909058 * GRP_MntFishProducts3
1198886   +          +    -0.18100587726033 * GRP_MntFishProducts4
1198887   +          +    -0.26082445403302 * GRP_MntGoldProds2
1198888   +          +     0.05485426947921 * GRP_MntGoldProds3
1198889   +          +     0.09168468833046 * GRP_MntGoldProds4
1198890   +          +    -0.26764306152541 * GRP_MntMeatProducts2
1198891   +          +    -0.05251001605784 * GRP_MntMeatProducts3
1198892   +          +     0.29225259283913 * GRP_MntMeatProducts4
1198893   +          +     0.61402400906277 * GRP_MntWines2  +     0.18145923811098 *
1198894   +        GRP_MntWines3  +    -0.04337923172483 * GRP_MntWines4
1198895   +          +    -0.72349314013585 * GRP_NumCatalogPurchases3
1198896   +          +     0.14875924587174 * GRP_NumCatalogPurchases4
1198897   +          +    -0.74484872686794 * GRP_NumDistPurchases2
1198898   +          +    -0.21410281712514 * GRP_NumDistPurchases3
1198899   +          +     0.04732133485671 * GRP_NumDistPurchases4
1198900   +          +     -0.1068322737335 * GRP_NumWebPurchases2
1198901   +          +     0.16615642908107 * GRP_NumWebPurchases3
1198902   +          +     0.06510367246629 * GRP_NumWebPurchases4
1198903   +          +    -0.32688260466431 * GRP_RFMstat2  +    -0.18733405583331 *
1198904   +        GRP_RFMstat3  +     -0.2070438751052 * GRP_RFMstat4
1198905   +          +     0.00135495431586 * GRP_RMntFrq2  +     0.14594289041413 *
1198906   +        GRP_RMntFrq3  +    -0.22868347656723 * GRP_RMntFrq4
1198907   +          +     0.85583167880584 * GRP_Recency2  +     0.12194433799934 *
1198908   +        GRP_Recency3  +    -0.40666493945855 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.76222121025234 * GRP_AcceptedCmp52 + 0.36511613420086 * 
GRP_Frq2 + -0.02961648849396 * GRP_Frq3 + 0.08263295800576 * GRP_Frq4 + 0.53248885273716 * 
GRP_Income2 + 0.58143836248256 * GRP_Income3 + -0.6819044946332 * GRP_Income4 + 
0.09969835343923 * GRP_Mnt2 + 0.22681708558976 * GRP_Mnt3 + -0.05933156304489 * GRP_Mnt4 + 
0.3115929057885 * GRP_MntFishProducts2 + 0.20656815909058 * GRP_MntFishProducts3 + 
-0.18100587726033 * GRP_MntFishProducts4 + -0.26082445403302 * GRP_MntGoldProds2 + 
0.05485426947921 * GRP_MntGoldProds3 + 0.09168468833046 * GRP_MntGoldProds4 + 
-0.26764306152541 * GRP_MntMeatProducts2 + -0.05251001605784 * GRP_MntMeatProducts3 + 
0.29225259283913 * GRP_MntMeatProducts4 + 0.61402400906277 * GRP_MntWines2 + 0.18145923811098 
* GRP_MntWines3 + -0.04337923172483 * GRP_MntWines4 + -0.72349314013585 * 
GRP_NumCatalogPurchases3 + 0.14875924587174 * GRP_NumCatalogPurchases4 + -0.74484872686794 * 
GRP_NumDistPurchases2 + -0.21410281712514 * GRP_NumDistPurchases3 + 0.04732133485671 * 
GRP_NumDistPurchases4 + -0.1068322737335 * GRP_NumWebPurchases2 + 0.16615642908107 * 
GRP_NumWebPurchases3 + 0.06510367246629 * GRP_NumWebPurchases4 + -0.32688260466431 * 
GRP_RFMstat2 + -0.18733405583331 * GRP_RFMstat3 + -0.2070438751052 * GRP_RFMstat4 + 
0.00135495431586 * GRP_RMntFrq2 + 0.14594289041413 * GRP_RMntFrq3 + -0.22868347656723 * 
GRP_RMntFrq4 + 0.85583167880584 * GRP_Recency2 + 0.12194433799934 * GRP_Recency3 + 
-0.40666493945855 * GRP_Recency4 ;
1198909   +   H11  =    -0.47589199029932 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47589199029932 + H11 ;
1198910   +   H12  =    -0.33973735112712 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.33973735112712 + H12 ;
1198911   +   H13  =     0.16076842495153 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.16076842495153 + H13 ;
1198912   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1198913   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1198914   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1198915   +END;
MPRINT(EM_DIAGRAM):   END;
1198916   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1198917   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1198918   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1198919   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1198920   +END;
MPRINT(EM_DIAGRAM):   END;
1198921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198922   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1198923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198924   +
1198925   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1198926   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1198927   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1198928   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1198929   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1198930   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1198931   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1198932   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1198933   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1198934   +end;
MPRINT(EM_DIAGRAM):   end;
1198935   +else do;
MPRINT(EM_DIAGRAM):   else do;
1198936   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1198937   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1198938   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1198939   +   end;
MPRINT(EM_DIAGRAM):   end;
1198940   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1198941   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1198942   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1198943   +   end;
MPRINT(EM_DIAGRAM):   end;
1198944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1198945   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1198946   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1198947   +   end;
MPRINT(EM_DIAGRAM):   end;
1198948   +end;
MPRINT(EM_DIAGRAM):   end;
1198949   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1198950   +   P_DepVar1  =    -1.16415993584169 * H11  +     0.57209582268762 * H12
1198951   +          +     1.90916164841558 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16415993584169 * H11 + 0.57209582268762 * H12 + 
1.90916164841558 * H13 ;
1198952   +   P_DepVar1  =    -1.85769338519577 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.85769338519577 + P_DepVar1 ;
1198953   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1198954   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1198955   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1198956   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1198957   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1198958   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1198959   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1198960   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1198961   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1198962   +END;
MPRINT(EM_DIAGRAM):   END;
1198963   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1198964   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1198965   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1198966   +END;
MPRINT(EM_DIAGRAM):   END;
1198967   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1198968   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1198969   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1198970   +END;
MPRINT(EM_DIAGRAM):   END;
1198971   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1198972   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1198973   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1198974   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1198975   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1198976   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1198977   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1198978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198979   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1198980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1198981   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1198982   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1198983   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1198984   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1198985   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1198986   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1198987   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1198988   +END;
MPRINT(EM_DIAGRAM):   END;
1198989   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1198990   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1198991   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1198992   +drop
1198993   +H11
1198994   +H12
1198995   +H13
1198996   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1198997   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1198998   +* Renaming variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural20;
1198999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199000   +* Renaming Posterior variables for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural20;
1199001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199002   +drop Neural20_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar1;
1199003   +Neural20_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar1 = P_DepVar1;
1199004   +drop Neural20_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural20_P_DepVar0;
1199005   +Neural20_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural20_P_DepVar0 = P_DepVar0;
1199006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199007   +* Renaming _WARN_ variable for Neural20;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural20;
1199008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199009   +length Neural20_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural20_WARN_ $4;
1199010   +drop Neural20_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural20_WARN_;
1199011   +Neural20_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural20_WARN_ = _WARN_;
1199012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199013   +* Ensmbl3: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 8 of 10;
1199014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199016   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1199017   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1199018   +* NODE: Neural19;
MPRINT(EM_DIAGRAM):   * NODE: Neural19;
1199019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199020   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1199021   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1199022   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1199023   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1199024   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1199025   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1199026   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1199027   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1199028   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1199029   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1199030   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1199031   +LENGTH _WARN_ $4
1199032   +      F_DepVar  $ 12
1199033   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1199034   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1199035   +
1199036   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1199037   +
1199038   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1199039   +
1199040   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1199041   +
1199042   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1199043   +
1199044   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1199045   +
1199046   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1199047   +
1199048   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1199049   +
1199050   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1199051   +
1199052   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1199053   +
1199054   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1199055   +
1199056   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1199057   +
1199058   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1199059   +
1199060   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1199061   +
1199062   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1199063   +
1199064   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1199065   +
1199066   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1199067   +
1199068   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1199069   +
1199070   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1199071   +
1199072   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1199073   +
1199074   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1199075   +
1199076   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1199077   +
1199078   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1199079   +
1199080   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1199081   +
1199082   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1199083   +
1199084   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1199085   +
1199086   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1199087   +
1199088   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1199089   +
1199090   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1199091   +
1199092   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1199093   +
1199094   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1199095   +
1199096   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1199097   +
1199098   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1199099   +
1199100   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1199101   +
1199102   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1199103   +
1199104   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1199105   +
1199106   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1199107   +
1199108   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1199109   +
1199110   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1199111   +
1199112   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1199113   +
1199114   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1199115   +
1199116   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1199117   +
1199118   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1199119   +
1199120   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1199121   +
1199122   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1199123   +
1199124   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1199125   +
1199126   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1199127   +
1199128   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1199129   +
1199130   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1199131   +
1199132   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1199133   +
1199134   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1199135   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1199136   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1199137   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1199138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199140   +end;
MPRINT(EM_DIAGRAM):   end;
1199141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199143   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1199144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199145   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1199146   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1199147   +   end;
MPRINT(EM_DIAGRAM):   end;
1199148   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1199149   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1199150   +   end;
MPRINT(EM_DIAGRAM):   end;
1199151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199152   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1199153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199155   +   end;
MPRINT(EM_DIAGRAM):   end;
1199156   +end;
MPRINT(EM_DIAGRAM):   end;
1199157   +
1199158   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1199159   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1199160   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1199161   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1199162   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1199163   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1199164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199166   +end;
MPRINT(EM_DIAGRAM):   end;
1199167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199169   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1199170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199171   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1199172   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1199173   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1199174   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1199175   +   end;
MPRINT(EM_DIAGRAM):   end;
1199176   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1199177   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1199178   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1199179   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1199180   +   end;
MPRINT(EM_DIAGRAM):   end;
1199181   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199182   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1199183   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1199184   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1199185   +   end;
MPRINT(EM_DIAGRAM):   end;
1199186   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199187   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1199188   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1199189   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1199190   +   end;
MPRINT(EM_DIAGRAM):   end;
1199191   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199192   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1199193   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1199194   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1199195   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199196   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199197   +   end;
MPRINT(EM_DIAGRAM):   end;
1199198   +end;
MPRINT(EM_DIAGRAM):   end;
1199199   +
1199200   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1199201   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1199202   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1199203   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1199204   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1199205   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1199206   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199207   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199208   +end;
MPRINT(EM_DIAGRAM):   end;
1199209   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199210   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199211   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1199212   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199213   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1199214   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1199215   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1199216   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1199217   +   end;
MPRINT(EM_DIAGRAM):   end;
1199218   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199219   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1199220   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1199221   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1199222   +   end;
MPRINT(EM_DIAGRAM):   end;
1199223   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1199224   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1199225   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1199226   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1199227   +   end;
MPRINT(EM_DIAGRAM):   end;
1199228   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199229   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1199230   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1199231   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1199232   +   end;
MPRINT(EM_DIAGRAM):   end;
1199233   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199234   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1199235   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1199236   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1199237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199239   +   end;
MPRINT(EM_DIAGRAM):   end;
1199240   +end;
MPRINT(EM_DIAGRAM):   end;
1199241   +
1199242   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1199243   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1199244   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1199245   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1199246   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1199247   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1199248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199250   +end;
MPRINT(EM_DIAGRAM):   end;
1199251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199253   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1199254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199255   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199256   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1199257   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1199258   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1199259   +   end;
MPRINT(EM_DIAGRAM):   end;
1199260   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199261   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1199262   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1199263   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1199264   +   end;
MPRINT(EM_DIAGRAM):   end;
1199265   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199266   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1199267   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1199268   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1199269   +   end;
MPRINT(EM_DIAGRAM):   end;
1199270   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199271   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1199272   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1199273   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1199274   +   end;
MPRINT(EM_DIAGRAM):   end;
1199275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199276   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1199277   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1199278   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1199279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199281   +   end;
MPRINT(EM_DIAGRAM):   end;
1199282   +end;
MPRINT(EM_DIAGRAM):   end;
1199283   +
1199284   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1199285   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1199286   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1199287   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1199288   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1199289   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1199290   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199291   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199292   +end;
MPRINT(EM_DIAGRAM):   end;
1199293   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199294   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199295   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1199296   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199297   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199298   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1199299   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1199300   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1199301   +   end;
MPRINT(EM_DIAGRAM):   end;
1199302   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199303   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1199304   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1199305   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1199306   +   end;
MPRINT(EM_DIAGRAM):   end;
1199307   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199308   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1199309   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1199310   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1199311   +   end;
MPRINT(EM_DIAGRAM):   end;
1199312   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199313   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1199314   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1199315   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1199316   +   end;
MPRINT(EM_DIAGRAM):   end;
1199317   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199318   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1199319   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1199320   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1199321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199323   +   end;
MPRINT(EM_DIAGRAM):   end;
1199324   +end;
MPRINT(EM_DIAGRAM):   end;
1199325   +
1199326   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1199327   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1199328   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1199329   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1199330   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1199331   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1199332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199334   +end;
MPRINT(EM_DIAGRAM):   end;
1199335   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199336   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199337   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1199338   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199339   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199340   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1199341   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1199342   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1199343   +   end;
MPRINT(EM_DIAGRAM):   end;
1199344   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199345   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1199346   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1199347   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1199348   +   end;
MPRINT(EM_DIAGRAM):   end;
1199349   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199350   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1199351   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1199352   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1199353   +   end;
MPRINT(EM_DIAGRAM):   end;
1199354   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199355   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1199356   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1199357   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1199358   +   end;
MPRINT(EM_DIAGRAM):   end;
1199359   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199360   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1199361   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1199362   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1199363   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199364   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199365   +   end;
MPRINT(EM_DIAGRAM):   end;
1199366   +end;
MPRINT(EM_DIAGRAM):   end;
1199367   +
1199368   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1199369   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1199370   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1199371   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1199372   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1199373   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1199374   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199375   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199376   +end;
MPRINT(EM_DIAGRAM):   end;
1199377   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199378   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199379   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1199380   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199381   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199382   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1199383   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1199384   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1199385   +   end;
MPRINT(EM_DIAGRAM):   end;
1199386   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199387   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1199388   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1199389   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1199390   +   end;
MPRINT(EM_DIAGRAM):   end;
1199391   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199392   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1199393   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1199394   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1199395   +   end;
MPRINT(EM_DIAGRAM):   end;
1199396   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199397   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1199398   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1199399   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1199400   +   end;
MPRINT(EM_DIAGRAM):   end;
1199401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199402   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1199403   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1199404   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1199405   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199406   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199407   +   end;
MPRINT(EM_DIAGRAM):   end;
1199408   +end;
MPRINT(EM_DIAGRAM):   end;
1199409   +
1199410   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1199411   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1199412   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1199413   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1199414   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1199415   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1199416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199418   +end;
MPRINT(EM_DIAGRAM):   end;
1199419   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199420   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199421   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1199422   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199423   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199424   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1199425   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1199426   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1199427   +   end;
MPRINT(EM_DIAGRAM):   end;
1199428   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199429   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1199430   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1199431   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1199432   +   end;
MPRINT(EM_DIAGRAM):   end;
1199433   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199434   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1199435   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1199436   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1199437   +   end;
MPRINT(EM_DIAGRAM):   end;
1199438   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199439   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1199440   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1199441   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1199442   +   end;
MPRINT(EM_DIAGRAM):   end;
1199443   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199444   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1199445   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1199446   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1199447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199449   +   end;
MPRINT(EM_DIAGRAM):   end;
1199450   +end;
MPRINT(EM_DIAGRAM):   end;
1199451   +
1199452   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1199453   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1199454   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1199455   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1199456   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1199457   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199459   +end;
MPRINT(EM_DIAGRAM):   end;
1199460   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199461   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199462   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1199463   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199464   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199465   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1199466   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1199467   +   end;
MPRINT(EM_DIAGRAM):   end;
1199468   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199469   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1199470   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1199471   +   end;
MPRINT(EM_DIAGRAM):   end;
1199472   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199473   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1199474   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1199475   +   end;
MPRINT(EM_DIAGRAM):   end;
1199476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199477   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1199478   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1199479   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199480   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199481   +   end;
MPRINT(EM_DIAGRAM):   end;
1199482   +end;
MPRINT(EM_DIAGRAM):   end;
1199483   +
1199484   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1199485   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1199486   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1199487   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1199488   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1199489   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1199490   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199491   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199492   +end;
MPRINT(EM_DIAGRAM):   end;
1199493   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199494   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199495   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1199496   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199497   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1199498   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1199499   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1199500   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1199501   +   end;
MPRINT(EM_DIAGRAM):   end;
1199502   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199503   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1199504   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1199505   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1199506   +   end;
MPRINT(EM_DIAGRAM):   end;
1199507   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199508   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1199509   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1199510   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1199511   +   end;
MPRINT(EM_DIAGRAM):   end;
1199512   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1199513   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1199514   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1199515   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1199516   +   end;
MPRINT(EM_DIAGRAM):   end;
1199517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199518   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1199519   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1199520   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1199521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199523   +   end;
MPRINT(EM_DIAGRAM):   end;
1199524   +end;
MPRINT(EM_DIAGRAM):   end;
1199525   +
1199526   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1199527   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1199528   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1199529   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1199530   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1199531   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1199532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199534   +end;
MPRINT(EM_DIAGRAM):   end;
1199535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199537   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1199538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199539   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199540   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1199541   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1199542   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1199543   +   end;
MPRINT(EM_DIAGRAM):   end;
1199544   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199545   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1199546   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1199547   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1199548   +   end;
MPRINT(EM_DIAGRAM):   end;
1199549   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199550   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1199551   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1199552   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1199553   +   end;
MPRINT(EM_DIAGRAM):   end;
1199554   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199555   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1199556   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1199557   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1199558   +   end;
MPRINT(EM_DIAGRAM):   end;
1199559   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199560   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1199561   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1199562   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1199563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199565   +   end;
MPRINT(EM_DIAGRAM):   end;
1199566   +end;
MPRINT(EM_DIAGRAM):   end;
1199567   +
1199568   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1199569   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1199570   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1199571   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1199572   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1199573   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1199574   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199576   +end;
MPRINT(EM_DIAGRAM):   end;
1199577   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199578   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199579   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1199580   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199581   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1199582   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1199583   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1199584   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1199585   +   end;
MPRINT(EM_DIAGRAM):   end;
1199586   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1199587   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1199588   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1199589   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1199590   +   end;
MPRINT(EM_DIAGRAM):   end;
1199591   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199592   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1199593   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1199594   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1199595   +   end;
MPRINT(EM_DIAGRAM):   end;
1199596   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199597   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1199598   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1199599   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1199600   +   end;
MPRINT(EM_DIAGRAM):   end;
1199601   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199602   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1199603   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1199604   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1199605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199607   +   end;
MPRINT(EM_DIAGRAM):   end;
1199608   +end;
MPRINT(EM_DIAGRAM):   end;
1199609   +
1199610   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1199611   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1199612   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1199613   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1199614   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1199615   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1199616   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199617   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199618   +end;
MPRINT(EM_DIAGRAM):   end;
1199619   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199620   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199621   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1199622   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199623   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1199624   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1199625   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1199626   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1199627   +   end;
MPRINT(EM_DIAGRAM):   end;
1199628   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1199629   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1199630   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1199631   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1199632   +   end;
MPRINT(EM_DIAGRAM):   end;
1199633   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199634   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1199635   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1199636   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1199637   +   end;
MPRINT(EM_DIAGRAM):   end;
1199638   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199639   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1199640   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1199641   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1199642   +   end;
MPRINT(EM_DIAGRAM):   end;
1199643   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199644   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1199645   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1199646   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1199647   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199648   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199649   +   end;
MPRINT(EM_DIAGRAM):   end;
1199650   +end;
MPRINT(EM_DIAGRAM):   end;
1199651   +
1199652   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1199653   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1199654   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1199655   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1199656   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1199657   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1199658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1199659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199660   +end;
MPRINT(EM_DIAGRAM):   end;
1199661   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1199663   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1199664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199665   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1199666   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1199667   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1199668   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1199669   +   end;
MPRINT(EM_DIAGRAM):   end;
1199670   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1199671   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1199672   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1199673   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1199674   +   end;
MPRINT(EM_DIAGRAM):   end;
1199675   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1199676   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1199677   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1199678   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1199679   +   end;
MPRINT(EM_DIAGRAM):   end;
1199680   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1199681   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1199682   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1199683   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1199684   +   end;
MPRINT(EM_DIAGRAM):   end;
1199685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199686   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1199687   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1199688   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1199689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1199690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199691   +   end;
MPRINT(EM_DIAGRAM):   end;
1199692   +end;
MPRINT(EM_DIAGRAM):   end;
1199693   +
1199694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199695   +*** Checking missing input Interval
1199696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1199697   +
1199698   +IF NMISS(
1199699   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1199700   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1199701   +
1199702   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1199703   +END;
MPRINT(EM_DIAGRAM):   END;
1199704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199705   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1199706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199707   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1199708   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1199709   +END;
MPRINT(EM_DIAGRAM):   END;
1199710   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1199711   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1199712   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1199713   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1199714   +END;
MPRINT(EM_DIAGRAM):   END;
1199715   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199716   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1199717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199719   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1199720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199721   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1199722   +   H11  =    -0.00764494959641 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.00764494959641 * S_Year_Birth ;
1199723   +   H12  =     0.07985236007447 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.07985236007447 * S_Year_Birth ;
1199724   +   H11  = H11  +     0.30243585989963 * GRP_AcceptedCmp52
1199725   +          +    -1.01247574867977 * GRP_Frq2  +    -0.20269284301089 * GRP_Frq3
1199726   +          +     0.13795348170285 * GRP_Frq4  +     0.01460946974261 *
1199727   +        GRP_Income2  +     0.07493432056114 * GRP_Income3
1199728   +          +     0.02989162785893 * GRP_Income4  +    -0.02386105013807 *
1199729   +        GRP_Mnt2  +    -0.41942836136152 * GRP_Mnt3  +     0.22813965454599 *
1199730   +        GRP_Mnt4  +    -0.02248365969183 * GRP_MntFishProducts2
1199731   +          +    -0.17213374102896 * GRP_MntFishProducts3
1199732   +          +    -0.03630204919594 * GRP_MntFishProducts4
1199733   +          +    -0.05460186275698 * GRP_MntGoldProds2
1199734   +          +     0.17440895359267 * GRP_MntGoldProds3
1199735   +          +     0.06276226158536 * GRP_MntGoldProds4
1199736   +          +     0.24913658683735 * GRP_MntMeatProducts2
1199737   +          +     0.34153298373719 * GRP_MntMeatProducts3
1199738   +          +    -0.01479035508855 * GRP_MntMeatProducts4
1199739   +          +    -0.30090319249134 * GRP_MntWines2  +    -0.22956799988205 *
1199740   +        GRP_MntWines3  +      0.2174634765863 * GRP_MntWines4
1199741   +          +     0.59798838520377 * GRP_NumCatalogPurchases3
1199742   +          +     0.18459646376075 * GRP_NumCatalogPurchases4
1199743   +          +     0.68686707296889 * GRP_NumDistPurchases2
1199744   +          +     0.01763602172593 * GRP_NumDistPurchases3
1199745   +          +    -0.18269797362148 * GRP_NumDistPurchases4
1199746   +          +     0.60927764745536 * GRP_NumWebPurchases2
1199747   +          +     0.13479979954708 * GRP_NumWebPurchases3
1199748   +          +    -0.08022145941408 * GRP_NumWebPurchases4
1199749   +          +     0.31971573913723 * GRP_RFMstat2  +     0.14998276665028 *
1199750   +        GRP_RFMstat3  +    -0.35264122886189 * GRP_RFMstat4
1199751   +          +     0.73614679989894 * GRP_RMntFrq2  +     0.68193669255848 *
1199752   +        GRP_RMntFrq3  +     1.12908709575784 * GRP_RMntFrq4
1199753   +          +    -0.34988546752368 * GRP_Recency2  +    -0.09861529398333 *
1199754   +        GRP_Recency3  +     0.03043927813491 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.30243585989963 * GRP_AcceptedCmp52 + -1.01247574867977 * 
GRP_Frq2 + -0.20269284301089 * GRP_Frq3 + 0.13795348170285 * GRP_Frq4 + 0.01460946974261 * 
GRP_Income2 + 0.07493432056114 * GRP_Income3 + 0.02989162785893 * GRP_Income4 + 
-0.02386105013807 * GRP_Mnt2 + -0.41942836136152 * GRP_Mnt3 + 0.22813965454599 * GRP_Mnt4 + 
-0.02248365969183 * GRP_MntFishProducts2 + -0.17213374102896 * GRP_MntFishProducts3 + 
-0.03630204919594 * GRP_MntFishProducts4 + -0.05460186275698 * GRP_MntGoldProds2 + 
0.17440895359267 * GRP_MntGoldProds3 + 0.06276226158536 * GRP_MntGoldProds4 + 0.24913658683735 
* GRP_MntMeatProducts2 + 0.34153298373719 * GRP_MntMeatProducts3 + -0.01479035508855 * 
GRP_MntMeatProducts4 + -0.30090319249134 * GRP_MntWines2 + -0.22956799988205 * GRP_MntWines3 + 
0.2174634765863 * GRP_MntWines4 + 0.59798838520377 * GRP_NumCatalogPurchases3 + 
0.18459646376075 * GRP_NumCatalogPurchases4 + 0.68686707296889 * GRP_NumDistPurchases2 + 
0.01763602172593 * GRP_NumDistPurchases3 + -0.18269797362148 * GRP_NumDistPurchases4 + 
0.60927764745536 * GRP_NumWebPurchases2 + 0.13479979954708 * GRP_NumWebPurchases3 + 
-0.08022145941408 * GRP_NumWebPurchases4 + 0.31971573913723 * GRP_RFMstat2 + 0.14998276665028 
* GRP_RFMstat3 + -0.35264122886189 * GRP_RFMstat4 + 0.73614679989894 * GRP_RMntFrq2 + 
0.68193669255848 * GRP_RMntFrq3 + 1.12908709575784 * GRP_RMntFrq4 + -0.34988546752368 * 
GRP_Recency2 + -0.09861529398333 * GRP_Recency3 + 0.03043927813491 * GRP_Recency4 ;
1199755   +   H12  = H12  +    -0.28470958349897 * GRP_AcceptedCmp52
1199756   +          +     0.38963626888759 * GRP_Frq2  +    -0.08631643702353 * GRP_Frq3
1199757   +          +    -0.10781175757073 * GRP_Frq4  +     0.52838454887758 *
1199758   +        GRP_Income2  +     0.49811285398937 * GRP_Income3
1199759   +          +    -0.52344032334308 * GRP_Income4  +    -0.16102798071085 *
1199760   +        GRP_Mnt2  +    -0.59987497547696 * GRP_Mnt3  +     0.30977299182247 *
1199761   +        GRP_Mnt4  +     0.31161547120638 * GRP_MntFishProducts2
1199762   +          +    -0.13904940340926 * GRP_MntFishProducts3
1199763   +          +     -0.0238384717361 * GRP_MntFishProducts4
1199764   +          +    -0.07342882109089 * GRP_MntGoldProds2
1199765   +          +     0.06209137082418 * GRP_MntGoldProds3
1199766   +          +    -0.01682894618174 * GRP_MntGoldProds4
1199767   +          +    -0.70514696594831 * GRP_MntMeatProducts2
1199768   +          +     0.30494479189325 * GRP_MntMeatProducts3
1199769   +          +     0.16724961510362 * GRP_MntMeatProducts4
1199770   +          +     0.47753590354486 * GRP_MntWines2  +     -0.0475037304462 *
1199771   +        GRP_MntWines3  +    -0.15194191043511 * GRP_MntWines4
1199772   +          +    -0.02600524471339 * GRP_NumCatalogPurchases3
1199773   +          +     0.04676493824202 * GRP_NumCatalogPurchases4
1199774   +          +    -0.87566302467834 * GRP_NumDistPurchases2
1199775   +          +     0.14216206915436 * GRP_NumDistPurchases3
1199776   +          +      0.0473423363943 * GRP_NumDistPurchases4
1199777   +          +     0.48704677587339 * GRP_NumWebPurchases2
1199778   +          +     0.05866537558911 * GRP_NumWebPurchases3
1199779   +          +    -0.12537289794862 * GRP_NumWebPurchases4
1199780   +          +    -0.44186169476572 * GRP_RFMstat2  +     0.40940999072989 *
1199781   +        GRP_RFMstat3  +    -0.12217840922636 * GRP_RFMstat4
1199782   +          +     0.67040692062491 * GRP_RMntFrq2  +     0.18389631151947 *
1199783   +        GRP_RMntFrq3  +    -0.08386771645702 * GRP_RMntFrq4
1199784   +          +     0.55720904594774 * GRP_Recency2  +     0.12496105124544 *
1199785   +        GRP_Recency3  +    -0.23658499274155 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.28470958349897 * GRP_AcceptedCmp52 + 0.38963626888759 * 
GRP_Frq2 + -0.08631643702353 * GRP_Frq3 + -0.10781175757073 * GRP_Frq4 + 0.52838454887758 * 
GRP_Income2 + 0.49811285398937 * GRP_Income3 + -0.52344032334308 * GRP_Income4 + 
-0.16102798071085 * GRP_Mnt2 + -0.59987497547696 * GRP_Mnt3 + 0.30977299182247 * GRP_Mnt4 + 
0.31161547120638 * GRP_MntFishProducts2 + -0.13904940340926 * GRP_MntFishProducts3 + 
-0.0238384717361 * GRP_MntFishProducts4 + -0.07342882109089 * GRP_MntGoldProds2 + 
0.06209137082418 * GRP_MntGoldProds3 + -0.01682894618174 * GRP_MntGoldProds4 + 
-0.70514696594831 * GRP_MntMeatProducts2 + 0.30494479189325 * GRP_MntMeatProducts3 + 
0.16724961510362 * GRP_MntMeatProducts4 + 0.47753590354486 * GRP_MntWines2 + -0.0475037304462 
* GRP_MntWines3 + -0.15194191043511 * GRP_MntWines4 + -0.02600524471339 * 
GRP_NumCatalogPurchases3 + 0.04676493824202 * GRP_NumCatalogPurchases4 + -0.87566302467834 * 
GRP_NumDistPurchases2 + 0.14216206915436 * GRP_NumDistPurchases3 + 0.0473423363943 * 
GRP_NumDistPurchases4 + 0.48704677587339 * GRP_NumWebPurchases2 + 0.05866537558911 * 
GRP_NumWebPurchases3 + -0.12537289794862 * GRP_NumWebPurchases4 + -0.44186169476572 * 
GRP_RFMstat2 + 0.40940999072989 * GRP_RFMstat3 + -0.12217840922636 * GRP_RFMstat4 + 
0.67040692062491 * GRP_RMntFrq2 + 0.18389631151947 * GRP_RMntFrq3 + -0.08386771645702 * 
GRP_RMntFrq4 + 0.55720904594774 * GRP_Recency2 + 0.12496105124544 * GRP_Recency3 + 
-0.23658499274155 * GRP_Recency4 ;
1199786   +   H11  =    -0.50260831929377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.50260831929377 + H11 ;
1199787   +   H12  =     0.67324662853602 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.67324662853602 + H12 ;
1199788   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1199789   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1199790   +END;
MPRINT(EM_DIAGRAM):   END;
1199791   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1199792   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1199793   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1199794   +END;
MPRINT(EM_DIAGRAM):   END;
1199795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199796   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1199797   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199798   +
1199799   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1199800   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1199801   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1199802   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1199803   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1199804   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1199805   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1199806   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1199807   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1199808   +end;
MPRINT(EM_DIAGRAM):   end;
1199809   +else do;
MPRINT(EM_DIAGRAM):   else do;
1199810   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1199811   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1199812   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1199813   +   end;
MPRINT(EM_DIAGRAM):   end;
1199814   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1199815   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1199816   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1199817   +   end;
MPRINT(EM_DIAGRAM):   end;
1199818   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1199819   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1199820   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1199821   +   end;
MPRINT(EM_DIAGRAM):   end;
1199822   +end;
MPRINT(EM_DIAGRAM):   end;
1199823   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1199824   +   P_DepVar1  =    -2.91374311447337 * H11  +      3.9462028641342 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.91374311447337 * H11 + 3.9462028641342 * H12 ;
1199825   +   P_DepVar1  =    -3.48795847558643 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.48795847558643 + P_DepVar1 ;
1199826   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1199827   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1199828   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1199829   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1199830   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1199831   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1199832   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1199833   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1199834   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1199835   +END;
MPRINT(EM_DIAGRAM):   END;
1199836   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1199837   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1199838   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1199839   +END;
MPRINT(EM_DIAGRAM):   END;
1199840   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1199841   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1199842   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1199843   +END;
MPRINT(EM_DIAGRAM):   END;
1199844   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1199845   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1199846   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1199847   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1199848   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1199849   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1199850   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1199851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199852   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1199853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1199854   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1199855   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1199856   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1199857   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1199858   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1199859   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1199860   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1199861   +END;
MPRINT(EM_DIAGRAM):   END;
1199862   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1199863   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1199864   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1199865   +drop
1199866   +H11
1199867   +H12
1199868   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1199869   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1199870   +* Renaming variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural19;
1199871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199872   +* Renaming Posterior variables for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural19;
1199873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199874   +drop Neural19_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar1;
1199875   +Neural19_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar1 = P_DepVar1;
1199876   +drop Neural19_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural19_P_DepVar0;
1199877   +Neural19_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural19_P_DepVar0 = P_DepVar0;
1199878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199879   +* Renaming _WARN_ variable for Neural19;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural19;
1199880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199881   +length Neural19_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural19_WARN_ $4;
1199882   +drop Neural19_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural19_WARN_;
1199883   +Neural19_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural19_WARN_ = _WARN_;
1199884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199885   +* Ensmbl3: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 9 of 10;
1199886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199888   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1199889   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1199890   +* NODE: Neural5;
MPRINT(EM_DIAGRAM):   * NODE: Neural5;
1199891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1199892   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1199893   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1199894   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1199895   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1199896   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1199897   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1199898   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1199899   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1199900   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1199901   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1199902   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1199903   +LENGTH _WARN_ $4
1199904   +      F_DepVar  $ 12
1199905   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1199906   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1199907   +
1199908   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1199909   +
1199910   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1199911   +
1199912   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1199913   +
1199914   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1199915   +
1199916   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1199917   +
1199918   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1199919   +
1199920   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1199921   +
1199922   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1199923   +
1199924   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1199925   +
1199926   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1199927   +
1199928   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1199929   +
1199930   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1199931   +
1199932   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1199933   +
1199934   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1199935   +
1199936   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1199937   +
1199938   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1199939   +
1199940   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1199941   +
1199942   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1199943   +
1199944   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1199945   +
1199946   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1199947   +
1199948   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1199949   +
1199950   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1199951   +
1199952   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1199953   +
1199954   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1199955   +
1199956   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1199957   +
1199958   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1199959   +
1199960   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1199961   +
1199962   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1199963   +
1199964   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1199965   +
1199966   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1199967   +
1199968   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1199969   +
1199970   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1199971   +
1199972   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1199973   +
1199974   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1199975   +
1199976   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1199977   +
1199978   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1199979   +
1199980   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1199981   +
1199982   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1199983   +
1199984   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1199985   +
1199986   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1199987   +
1199988   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1199989   +
1199990   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1199991   +
1199992   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1199993   +
1199994   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1199995   +
1199996   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1199997   +
1199998   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1199999   +
1200000   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1200001   +
1200002   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1200003   +
1200004   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1200005   +
1200006   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1200007   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1200008   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1200009   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1200010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200012   +end;
MPRINT(EM_DIAGRAM):   end;
1200013   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200015   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1200016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200017   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1200018   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1200019   +   end;
MPRINT(EM_DIAGRAM):   end;
1200020   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200021   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1200022   +   end;
MPRINT(EM_DIAGRAM):   end;
1200023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200024   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1200025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200027   +   end;
MPRINT(EM_DIAGRAM):   end;
1200028   +end;
MPRINT(EM_DIAGRAM):   end;
1200029   +
1200030   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1200031   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1200032   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1200033   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1200034   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1200035   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1200036   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200038   +end;
MPRINT(EM_DIAGRAM):   end;
1200039   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200040   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200041   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1200042   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200043   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1200044   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1200045   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1200046   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1200047   +   end;
MPRINT(EM_DIAGRAM):   end;
1200048   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200049   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1200050   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1200051   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1200052   +   end;
MPRINT(EM_DIAGRAM):   end;
1200053   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200054   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1200055   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1200056   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1200057   +   end;
MPRINT(EM_DIAGRAM):   end;
1200058   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200059   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1200060   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1200061   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1200062   +   end;
MPRINT(EM_DIAGRAM):   end;
1200063   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200064   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1200065   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1200066   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1200067   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200068   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200069   +   end;
MPRINT(EM_DIAGRAM):   end;
1200070   +end;
MPRINT(EM_DIAGRAM):   end;
1200071   +
1200072   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1200073   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1200074   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1200075   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1200076   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1200077   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1200078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200080   +end;
MPRINT(EM_DIAGRAM):   end;
1200081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200083   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1200084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200085   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1200086   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1200087   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1200088   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1200089   +   end;
MPRINT(EM_DIAGRAM):   end;
1200090   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200091   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1200092   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1200093   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1200094   +   end;
MPRINT(EM_DIAGRAM):   end;
1200095   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200096   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1200097   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1200098   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1200099   +   end;
MPRINT(EM_DIAGRAM):   end;
1200100   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200101   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1200102   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1200103   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1200104   +   end;
MPRINT(EM_DIAGRAM):   end;
1200105   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200106   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1200107   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1200108   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1200109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200111   +   end;
MPRINT(EM_DIAGRAM):   end;
1200112   +end;
MPRINT(EM_DIAGRAM):   end;
1200113   +
1200114   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1200115   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1200116   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1200117   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1200118   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1200119   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1200120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200122   +end;
MPRINT(EM_DIAGRAM):   end;
1200123   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200124   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200125   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1200126   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200127   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200128   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1200129   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1200130   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1200131   +   end;
MPRINT(EM_DIAGRAM):   end;
1200132   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200133   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1200134   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1200135   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1200136   +   end;
MPRINT(EM_DIAGRAM):   end;
1200137   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200138   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1200139   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1200140   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1200141   +   end;
MPRINT(EM_DIAGRAM):   end;
1200142   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200143   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1200144   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1200145   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1200146   +   end;
MPRINT(EM_DIAGRAM):   end;
1200147   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200148   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1200149   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1200150   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1200151   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200152   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200153   +   end;
MPRINT(EM_DIAGRAM):   end;
1200154   +end;
MPRINT(EM_DIAGRAM):   end;
1200155   +
1200156   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1200157   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1200158   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1200159   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1200160   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1200161   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1200162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200164   +end;
MPRINT(EM_DIAGRAM):   end;
1200165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200167   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1200168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200169   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200170   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1200171   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1200172   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1200173   +   end;
MPRINT(EM_DIAGRAM):   end;
1200174   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200175   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1200176   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1200177   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1200178   +   end;
MPRINT(EM_DIAGRAM):   end;
1200179   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200180   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1200181   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1200182   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1200183   +   end;
MPRINT(EM_DIAGRAM):   end;
1200184   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200185   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1200186   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1200187   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1200188   +   end;
MPRINT(EM_DIAGRAM):   end;
1200189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200190   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1200191   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1200192   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1200193   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200194   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200195   +   end;
MPRINT(EM_DIAGRAM):   end;
1200196   +end;
MPRINT(EM_DIAGRAM):   end;
1200197   +
1200198   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1200199   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1200200   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1200201   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1200202   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1200203   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1200204   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200205   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200206   +end;
MPRINT(EM_DIAGRAM):   end;
1200207   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200208   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200209   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1200210   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200211   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200212   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1200213   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1200214   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1200215   +   end;
MPRINT(EM_DIAGRAM):   end;
1200216   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200217   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1200218   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1200219   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1200220   +   end;
MPRINT(EM_DIAGRAM):   end;
1200221   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200222   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1200223   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1200224   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1200225   +   end;
MPRINT(EM_DIAGRAM):   end;
1200226   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200227   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1200228   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1200229   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1200230   +   end;
MPRINT(EM_DIAGRAM):   end;
1200231   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200232   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1200233   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1200234   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1200235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200237   +   end;
MPRINT(EM_DIAGRAM):   end;
1200238   +end;
MPRINT(EM_DIAGRAM):   end;
1200239   +
1200240   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1200241   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1200242   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1200243   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1200244   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1200245   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1200246   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200247   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200248   +end;
MPRINT(EM_DIAGRAM):   end;
1200249   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200250   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200251   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1200252   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200253   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200254   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1200255   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1200256   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1200257   +   end;
MPRINT(EM_DIAGRAM):   end;
1200258   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200259   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1200260   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1200261   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1200262   +   end;
MPRINT(EM_DIAGRAM):   end;
1200263   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200264   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1200265   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1200266   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1200267   +   end;
MPRINT(EM_DIAGRAM):   end;
1200268   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200269   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1200270   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1200271   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1200272   +   end;
MPRINT(EM_DIAGRAM):   end;
1200273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200274   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1200275   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1200276   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1200277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200279   +   end;
MPRINT(EM_DIAGRAM):   end;
1200280   +end;
MPRINT(EM_DIAGRAM):   end;
1200281   +
1200282   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1200283   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1200284   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1200285   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1200286   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1200287   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1200288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200290   +end;
MPRINT(EM_DIAGRAM):   end;
1200291   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200292   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200293   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1200294   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200295   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200296   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1200297   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1200298   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1200299   +   end;
MPRINT(EM_DIAGRAM):   end;
1200300   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200301   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1200302   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1200303   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1200304   +   end;
MPRINT(EM_DIAGRAM):   end;
1200305   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200306   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1200307   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1200308   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1200309   +   end;
MPRINT(EM_DIAGRAM):   end;
1200310   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200311   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1200312   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1200313   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1200314   +   end;
MPRINT(EM_DIAGRAM):   end;
1200315   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200316   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1200317   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1200318   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1200319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200321   +   end;
MPRINT(EM_DIAGRAM):   end;
1200322   +end;
MPRINT(EM_DIAGRAM):   end;
1200323   +
1200324   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1200325   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1200326   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1200327   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1200328   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1200329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200331   +end;
MPRINT(EM_DIAGRAM):   end;
1200332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200333   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200334   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1200335   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200336   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200337   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1200338   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1200339   +   end;
MPRINT(EM_DIAGRAM):   end;
1200340   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200341   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1200342   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1200343   +   end;
MPRINT(EM_DIAGRAM):   end;
1200344   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200345   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1200346   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1200347   +   end;
MPRINT(EM_DIAGRAM):   end;
1200348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200349   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1200350   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1200351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200353   +   end;
MPRINT(EM_DIAGRAM):   end;
1200354   +end;
MPRINT(EM_DIAGRAM):   end;
1200355   +
1200356   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1200357   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1200358   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1200359   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1200360   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1200361   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1200362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200364   +end;
MPRINT(EM_DIAGRAM):   end;
1200365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200366   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200367   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1200368   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200369   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1200370   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1200371   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1200372   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1200373   +   end;
MPRINT(EM_DIAGRAM):   end;
1200374   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200375   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1200376   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1200377   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1200378   +   end;
MPRINT(EM_DIAGRAM):   end;
1200379   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200380   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1200381   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1200382   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1200383   +   end;
MPRINT(EM_DIAGRAM):   end;
1200384   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200385   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1200386   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1200387   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1200388   +   end;
MPRINT(EM_DIAGRAM):   end;
1200389   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200390   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1200391   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1200392   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1200393   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200394   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200395   +   end;
MPRINT(EM_DIAGRAM):   end;
1200396   +end;
MPRINT(EM_DIAGRAM):   end;
1200397   +
1200398   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1200399   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1200400   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1200401   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1200402   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1200403   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1200404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200406   +end;
MPRINT(EM_DIAGRAM):   end;
1200407   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200409   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1200410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200411   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200412   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1200413   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1200414   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1200415   +   end;
MPRINT(EM_DIAGRAM):   end;
1200416   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200417   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1200418   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1200419   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1200420   +   end;
MPRINT(EM_DIAGRAM):   end;
1200421   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200422   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1200423   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1200424   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1200425   +   end;
MPRINT(EM_DIAGRAM):   end;
1200426   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200427   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1200428   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1200429   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1200430   +   end;
MPRINT(EM_DIAGRAM):   end;
1200431   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200432   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1200433   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1200434   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1200435   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200436   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200437   +   end;
MPRINT(EM_DIAGRAM):   end;
1200438   +end;
MPRINT(EM_DIAGRAM):   end;
1200439   +
1200440   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1200441   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1200442   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1200443   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1200444   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1200445   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1200446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200448   +end;
MPRINT(EM_DIAGRAM):   end;
1200449   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200451   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1200452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200453   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1200454   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1200455   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1200456   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1200457   +   end;
MPRINT(EM_DIAGRAM):   end;
1200458   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200459   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1200460   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1200461   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1200462   +   end;
MPRINT(EM_DIAGRAM):   end;
1200463   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200464   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1200465   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1200466   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1200467   +   end;
MPRINT(EM_DIAGRAM):   end;
1200468   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200469   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1200470   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1200471   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1200472   +   end;
MPRINT(EM_DIAGRAM):   end;
1200473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200474   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1200475   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1200476   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1200477   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200478   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200479   +   end;
MPRINT(EM_DIAGRAM):   end;
1200480   +end;
MPRINT(EM_DIAGRAM):   end;
1200481   +
1200482   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1200483   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1200484   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1200485   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1200486   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1200487   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1200488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200490   +end;
MPRINT(EM_DIAGRAM):   end;
1200491   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200493   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1200494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200495   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200496   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1200497   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1200498   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1200499   +   end;
MPRINT(EM_DIAGRAM):   end;
1200500   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200501   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1200502   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1200503   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1200504   +   end;
MPRINT(EM_DIAGRAM):   end;
1200505   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200506   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1200507   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1200508   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1200509   +   end;
MPRINT(EM_DIAGRAM):   end;
1200510   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200511   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1200512   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1200513   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1200514   +   end;
MPRINT(EM_DIAGRAM):   end;
1200515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200516   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1200517   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1200518   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1200519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200521   +   end;
MPRINT(EM_DIAGRAM):   end;
1200522   +end;
MPRINT(EM_DIAGRAM):   end;
1200523   +
1200524   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1200525   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1200526   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1200527   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1200528   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1200529   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1200530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200532   +end;
MPRINT(EM_DIAGRAM):   end;
1200533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200534   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200535   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1200536   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200537   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1200538   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1200539   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1200540   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1200541   +   end;
MPRINT(EM_DIAGRAM):   end;
1200542   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200543   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1200544   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1200545   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1200546   +   end;
MPRINT(EM_DIAGRAM):   end;
1200547   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200548   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1200549   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1200550   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1200551   +   end;
MPRINT(EM_DIAGRAM):   end;
1200552   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200553   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1200554   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1200555   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1200556   +   end;
MPRINT(EM_DIAGRAM):   end;
1200557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200558   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1200559   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1200560   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1200561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200563   +   end;
MPRINT(EM_DIAGRAM):   end;
1200564   +end;
MPRINT(EM_DIAGRAM):   end;
1200565   +
1200566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200567   +*** Checking missing input Interval
1200568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1200569   +
1200570   +IF NMISS(
1200571   +   Mnt ,
1200572   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Mnt , Year_Birth ) THEN DO;
1200573   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1200574   +
1200575   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200576   +END;
MPRINT(EM_DIAGRAM):   END;
1200577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200578   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1200579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200580   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1200581   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1200582   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1200583   +END;
MPRINT(EM_DIAGRAM):   END;
1200584   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1200585   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1200586   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1200587   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1200588   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1200589   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1200590   +END;
MPRINT(EM_DIAGRAM):   END;
1200591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200592   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1200593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200595   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1200596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200597   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1200598   +   H11  =     0.07033495600492 * S_Mnt  +     0.02164786854075 * S_Year_Birth
1200599   +         ;
MPRINT(EM_DIAGRAM):   H11 = 0.07033495600492 * S_Mnt + 0.02164786854075 * S_Year_Birth ;
1200600   +   H11  = H11  +    -0.10246097495354 * GRP_AcceptedCmp52
1200601   +          +     0.24244790942008 * GRP_Frq2  +     0.02736490750924 * GRP_Frq3
1200602   +          +    -0.08972331943492 * GRP_Frq4  +      0.1088530259243 *
1200603   +        GRP_Income2  +     0.09756933974602 * GRP_Income3
1200604   +          +    -0.09969018293336 * GRP_Income4  +    -0.06022480886765 *
1200605   +        GRP_Mnt2  +    -0.03168516551801 * GRP_Mnt3  +     0.04222393413812 *
1200606   +        GRP_Mnt4  +     0.07987508803614 * GRP_MntFishProducts2
1200607   +          +     0.01034663934303 * GRP_MntFishProducts3
1200608   +          +    -0.00714052297881 * GRP_MntFishProducts4
1200609   +          +    -0.02224640901679 * GRP_MntGoldProds2
1200610   +          +    -0.00265157957353 * GRP_MntGoldProds3
1200611   +          +    -0.00077327174112 * GRP_MntGoldProds4
1200612   +          +    -0.14203645561503 * GRP_MntMeatProducts2
1200613   +          +    -0.01847520501128 * GRP_MntMeatProducts3
1200614   +          +     0.06241020545872 * GRP_MntMeatProducts4
1200615   +          +     0.12910081222261 * GRP_MntWines2  +     0.06374366211645 *
1200616   +        GRP_MntWines3  +    -0.06493693135008 * GRP_MntWines4
1200617   +          +    -0.10868042409647 * GRP_NumCatalogPurchases3
1200618   +          +     0.00306280182711 * GRP_NumCatalogPurchases4
1200619   +          +    -0.28364554981817 * GRP_NumDistPurchases2
1200620   +          +     0.00271105491408 * GRP_NumDistPurchases3
1200621   +          +      0.0545061287852 * GRP_NumDistPurchases4
1200622   +          +     0.01855092975131 * GRP_NumWebPurchases2
1200623   +          +     0.01079548631549 * GRP_NumWebPurchases3
1200624   +          +     -0.0040833175266 * GRP_NumWebPurchases4
1200625   +          +    -0.06430035739854 * GRP_RFMstat2  +      -0.006946906998 *
1200626   +        GRP_RFMstat3  +     0.02582227224216 * GRP_RFMstat4
1200627   +          +     0.06075412415465 * GRP_RMntFrq2  +     0.04002497865657 *
1200628   +        GRP_RMntFrq3  +    -0.08061728248352 * GRP_RMntFrq4
1200629   +          +     0.19668753813344 * GRP_Recency2  +     0.05087802922807 *
1200630   +        GRP_Recency3  +    -0.06072698122489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10246097495354 * GRP_AcceptedCmp52 + 0.24244790942008 * 
GRP_Frq2 + 0.02736490750924 * GRP_Frq3 + -0.08972331943492 * GRP_Frq4 + 0.1088530259243 * 
GRP_Income2 + 0.09756933974602 * GRP_Income3 + -0.09969018293336 * GRP_Income4 + 
-0.06022480886765 * GRP_Mnt2 + -0.03168516551801 * GRP_Mnt3 + 0.04222393413812 * GRP_Mnt4 + 
0.07987508803614 * GRP_MntFishProducts2 + 0.01034663934303 * GRP_MntFishProducts3 + 
-0.00714052297881 * GRP_MntFishProducts4 + -0.02224640901679 * GRP_MntGoldProds2 + 
-0.00265157957353 * GRP_MntGoldProds3 + -0.00077327174112 * GRP_MntGoldProds4 + 
-0.14203645561503 * GRP_MntMeatProducts2 + -0.01847520501128 * GRP_MntMeatProducts3 + 
0.06241020545872 * GRP_MntMeatProducts4 + 0.12910081222261 * GRP_MntWines2 + 0.06374366211645 
* GRP_MntWines3 + -0.06493693135008 * GRP_MntWines4 + -0.10868042409647 * 
GRP_NumCatalogPurchases3 + 0.00306280182711 * GRP_NumCatalogPurchases4 + -0.28364554981817 * 
GRP_NumDistPurchases2 + 0.00271105491408 * GRP_NumDistPurchases3 + 0.0545061287852 * 
GRP_NumDistPurchases4 + 0.01855092975131 * GRP_NumWebPurchases2 + 0.01079548631549 * 
GRP_NumWebPurchases3 + -0.0040833175266 * GRP_NumWebPurchases4 + -0.06430035739854 * 
GRP_RFMstat2 + -0.006946906998 * GRP_RFMstat3 + 0.02582227224216 * GRP_RFMstat4 + 
0.06075412415465 * GRP_RMntFrq2 + 0.04002497865657 * GRP_RMntFrq3 + -0.08061728248352 * 
GRP_RMntFrq4 + 0.19668753813344 * GRP_Recency2 + 0.05087802922807 * GRP_Recency3 + 
-0.06072698122489 * GRP_Recency4 ;
1200631   +   H11  =     0.08129760919972 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.08129760919972 + H11 ;
1200632   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1200633   +END;
MPRINT(EM_DIAGRAM):   END;
1200634   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1200635   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1200636   +END;
MPRINT(EM_DIAGRAM):   END;
1200637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200638   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1200639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200640   +
1200641   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1200642   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1200643   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1200644   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1200645   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1200646   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200647   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1200648   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1200649   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1200650   +end;
MPRINT(EM_DIAGRAM):   end;
1200651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200652   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1200653   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1200654   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1200655   +   end;
MPRINT(EM_DIAGRAM):   end;
1200656   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1200657   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1200658   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1200659   +   end;
MPRINT(EM_DIAGRAM):   end;
1200660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200661   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1200662   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1200663   +   end;
MPRINT(EM_DIAGRAM):   end;
1200664   +end;
MPRINT(EM_DIAGRAM):   end;
1200665   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1200666   +   P_DepVar1  =     9.69301848740588 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.69301848740588 * H11 ;
1200667   +   P_DepVar1  =    -2.63860368150698 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.63860368150698 + P_DepVar1 ;
1200668   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1200669   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1200670   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1200671   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1200672   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1200673   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1200674   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1200675   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1200676   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1200677   +END;
MPRINT(EM_DIAGRAM):   END;
1200678   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1200679   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1200680   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1200681   +END;
MPRINT(EM_DIAGRAM):   END;
1200682   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1200683   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1200684   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1200685   +END;
MPRINT(EM_DIAGRAM):   END;
1200686   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1200687   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1200688   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1200689   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1200690   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1200691   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1200692   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1200693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200694   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1200695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1200696   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1200697   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1200698   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1200699   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1200700   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1200701   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1200702   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1200703   +END;
MPRINT(EM_DIAGRAM):   END;
1200704   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1200705   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1200706   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1200707   +drop
1200708   +H11
1200709   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1200710   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1200711   +* Renaming variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural5;
1200712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200713   +* Renaming Posterior variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural5;
1200714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200715   +drop Neural5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar1;
1200716   +Neural5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar1 = P_DepVar1;
1200717   +drop Neural5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar0;
1200718   +Neural5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar0 = P_DepVar0;
1200719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200720   +* Renaming _WARN_ variable for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural5;
1200721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200722   +length Neural5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural5_WARN_ $4;
1200723   +drop Neural5_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural5_WARN_;
1200724   +Neural5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural5_WARN_ = _WARN_;
1200725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200726   +* Ensmbl3: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Scoring Code of model 10 of 10;
1200727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200729   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1200730   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1200731   +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
1200732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1200733   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1200734   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1200735   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1200736   +
1200737   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1200738   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1200739   +
1200740   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1200741   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1200742   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1200743   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1200744   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1200745   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1200746   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1200747   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1200748   +
1200749   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1200750   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1200751   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1200752   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1200753   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1200754   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200755   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1200756   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1200757   +end;
MPRINT(EM_DIAGRAM):   end;
1200758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200759   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1200760   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1200761   +   end;
MPRINT(EM_DIAGRAM):   end;
1200762   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1200763   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1200764   +   end;
MPRINT(EM_DIAGRAM):   end;
1200765   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200766   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1200767   +   end;
MPRINT(EM_DIAGRAM):   end;
1200768   +end;
MPRINT(EM_DIAGRAM):   end;
1200769   +
1200770   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1200771   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1200772   +
1200773   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1200774   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1200775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200777   +end;
MPRINT(EM_DIAGRAM):   end;
1200778   +
1200779   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1200780   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1200781   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1200782   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1200783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200785   +end;
MPRINT(EM_DIAGRAM):   end;
1200786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200788   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1200789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200790   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1200791   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1200792   +   end;
MPRINT(EM_DIAGRAM):   end;
1200793   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200794   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1200795   +   end;
MPRINT(EM_DIAGRAM):   end;
1200796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200797   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1200798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200800   +   end;
MPRINT(EM_DIAGRAM):   end;
1200801   +end;
MPRINT(EM_DIAGRAM):   end;
1200802   +
1200803   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1200804   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1200805   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1200806   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1200807   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1200808   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1200809   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200810   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200811   +end;
MPRINT(EM_DIAGRAM):   end;
1200812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200813   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200814   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1200815   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200816   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1200817   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1200818   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1200819   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1200820   +   end;
MPRINT(EM_DIAGRAM):   end;
1200821   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200822   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1200823   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1200824   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1200825   +   end;
MPRINT(EM_DIAGRAM):   end;
1200826   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200827   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1200828   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1200829   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1200830   +   end;
MPRINT(EM_DIAGRAM):   end;
1200831   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200832   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1200833   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1200834   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1200835   +   end;
MPRINT(EM_DIAGRAM):   end;
1200836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200837   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1200838   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1200839   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1200840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200842   +   end;
MPRINT(EM_DIAGRAM):   end;
1200843   +end;
MPRINT(EM_DIAGRAM):   end;
1200844   +
1200845   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1200846   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1200847   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1200848   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1200849   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1200850   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1200851   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200852   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200853   +end;
MPRINT(EM_DIAGRAM):   end;
1200854   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200855   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200856   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1200857   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200858   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1200859   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1200860   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1200861   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1200862   +   end;
MPRINT(EM_DIAGRAM):   end;
1200863   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200864   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1200865   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1200866   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1200867   +   end;
MPRINT(EM_DIAGRAM):   end;
1200868   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1200869   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1200870   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1200871   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1200872   +   end;
MPRINT(EM_DIAGRAM):   end;
1200873   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200874   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1200875   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1200876   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1200877   +   end;
MPRINT(EM_DIAGRAM):   end;
1200878   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200879   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1200880   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1200881   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1200882   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200883   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200884   +   end;
MPRINT(EM_DIAGRAM):   end;
1200885   +end;
MPRINT(EM_DIAGRAM):   end;
1200886   +
1200887   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1200888   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1200889   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1200890   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1200891   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1200892   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1200893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200895   +end;
MPRINT(EM_DIAGRAM):   end;
1200896   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200898   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1200899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200900   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200901   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1200902   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1200903   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1200904   +   end;
MPRINT(EM_DIAGRAM):   end;
1200905   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200906   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1200907   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1200908   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1200909   +   end;
MPRINT(EM_DIAGRAM):   end;
1200910   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200911   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1200912   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1200913   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1200914   +   end;
MPRINT(EM_DIAGRAM):   end;
1200915   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200916   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1200917   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1200918   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1200919   +   end;
MPRINT(EM_DIAGRAM):   end;
1200920   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200921   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1200922   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1200923   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1200924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200926   +   end;
MPRINT(EM_DIAGRAM):   end;
1200927   +end;
MPRINT(EM_DIAGRAM):   end;
1200928   +
1200929   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1200930   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1200931   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1200932   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1200933   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1200934   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1200935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200937   +end;
MPRINT(EM_DIAGRAM):   end;
1200938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200940   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1200941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200942   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200943   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1200944   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1200945   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1200946   +   end;
MPRINT(EM_DIAGRAM):   end;
1200947   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200948   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1200949   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1200950   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1200951   +   end;
MPRINT(EM_DIAGRAM):   end;
1200952   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200953   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1200954   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1200955   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1200956   +   end;
MPRINT(EM_DIAGRAM):   end;
1200957   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1200958   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1200959   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1200960   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1200961   +   end;
MPRINT(EM_DIAGRAM):   end;
1200962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1200963   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1200964   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1200965   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1200966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1200967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200968   +   end;
MPRINT(EM_DIAGRAM):   end;
1200969   +end;
MPRINT(EM_DIAGRAM):   end;
1200970   +
1200971   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1200972   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1200973   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1200974   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1200975   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1200976   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1200977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1200978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1200979   +end;
MPRINT(EM_DIAGRAM):   end;
1200980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1200981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1200982   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1200983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1200984   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1200985   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1200986   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1200987   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1200988   +   end;
MPRINT(EM_DIAGRAM):   end;
1200989   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1200990   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1200991   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1200992   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1200993   +   end;
MPRINT(EM_DIAGRAM):   end;
1200994   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1200995   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1200996   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1200997   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1200998   +   end;
MPRINT(EM_DIAGRAM):   end;
1200999   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201000   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1201001   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1201002   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1201003   +   end;
MPRINT(EM_DIAGRAM):   end;
1201004   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201005   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1201006   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1201007   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1201008   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201009   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201010   +   end;
MPRINT(EM_DIAGRAM):   end;
1201011   +end;
MPRINT(EM_DIAGRAM):   end;
1201012   +
1201013   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1201014   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1201015   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1201016   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1201017   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1201018   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201019   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201020   +end;
MPRINT(EM_DIAGRAM):   end;
1201021   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201022   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201023   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1201024   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201025   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1201026   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1201027   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1201028   +   end;
MPRINT(EM_DIAGRAM):   end;
1201029   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1201030   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1201031   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1201032   +   end;
MPRINT(EM_DIAGRAM):   end;
1201033   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201034   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1201035   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1201036   +   end;
MPRINT(EM_DIAGRAM):   end;
1201037   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201038   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1201039   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1201040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201042   +   end;
MPRINT(EM_DIAGRAM):   end;
1201043   +end;
MPRINT(EM_DIAGRAM):   end;
1201044   +
1201045   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1201046   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1201047   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1201048   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1201049   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1201050   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1201051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201053   +end;
MPRINT(EM_DIAGRAM):   end;
1201054   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201056   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1201057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201058   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1201059   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1201060   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1201061   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1201062   +   end;
MPRINT(EM_DIAGRAM):   end;
1201063   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201064   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1201065   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1201066   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1201067   +   end;
MPRINT(EM_DIAGRAM):   end;
1201068   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201069   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1201070   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1201071   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1201072   +   end;
MPRINT(EM_DIAGRAM):   end;
1201073   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1201074   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1201075   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1201076   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1201077   +   end;
MPRINT(EM_DIAGRAM):   end;
1201078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201079   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1201080   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1201081   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1201082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201084   +   end;
MPRINT(EM_DIAGRAM):   end;
1201085   +end;
MPRINT(EM_DIAGRAM):   end;
1201086   +
1201087   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1201088   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1201089   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1201090   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1201091   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1201092   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1201093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201095   +end;
MPRINT(EM_DIAGRAM):   end;
1201096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201098   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1201099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201100   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1201101   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1201102   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1201103   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1201104   +   end;
MPRINT(EM_DIAGRAM):   end;
1201105   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1201106   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1201107   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1201108   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1201109   +   end;
MPRINT(EM_DIAGRAM):   end;
1201110   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201111   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1201112   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1201113   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1201114   +   end;
MPRINT(EM_DIAGRAM):   end;
1201115   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201116   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1201117   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1201118   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1201119   +   end;
MPRINT(EM_DIAGRAM):   end;
1201120   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201121   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1201122   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1201123   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1201124   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201125   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201126   +   end;
MPRINT(EM_DIAGRAM):   end;
1201127   +end;
MPRINT(EM_DIAGRAM):   end;
1201128   +
1201129   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1201130   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1201131   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1201132   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1201133   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1201134   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1201135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201137   +end;
MPRINT(EM_DIAGRAM):   end;
1201138   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201139   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201140   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1201141   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201142   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1201143   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1201144   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1201145   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1201146   +   end;
MPRINT(EM_DIAGRAM):   end;
1201147   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201148   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1201149   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1201150   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1201151   +   end;
MPRINT(EM_DIAGRAM):   end;
1201152   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1201153   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1201154   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1201155   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1201156   +   end;
MPRINT(EM_DIAGRAM):   end;
1201157   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201158   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1201159   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1201160   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1201161   +   end;
MPRINT(EM_DIAGRAM):   end;
1201162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201163   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1201164   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1201165   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1201166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201168   +   end;
MPRINT(EM_DIAGRAM):   end;
1201169   +end;
MPRINT(EM_DIAGRAM):   end;
1201170   +
1201171   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1201172   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1201173   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1201174   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1201175   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1201176   +end;
MPRINT(EM_DIAGRAM):   end;
1201177   +
1201178   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1201179   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1201180   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1201181   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1201182   +
1201183   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1201184   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201185   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1201186   +
1201187   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1201188   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201189   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1201190   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1201191   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1201192   +
1201193   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1201194   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201195   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1201196   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1201197   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1201198   +
1201199   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1201200   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201201   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1201202   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1201203   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1201204   +
1201205   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1201206   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201207   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1201208   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1201209   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1201210   +
1201211   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1201212   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201213   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1201214   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1201215   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1201216   +
1201217   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1201218   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201219   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1201220   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1201221   +
1201222   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1201223   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201224   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1201225   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1201226   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1201227   +
1201228   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1201229   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201230   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1201231   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1201232   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1201233   +
1201234   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1201235   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201236   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1201237   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1201238   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1201239   +
1201240   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1201241   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1201242   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1201243   +
1201244   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1201245   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1201246   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1201247   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1201248   +
1201249   +REG7DR1:
1201250   +
1201251   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
1201252   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1201253   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1201254   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1201255   +end;
MPRINT(EM_DIAGRAM):   end;
1201256   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201257   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1201258   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1201259   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1201260   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1201261   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1201262   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1201263   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1201264   +   end;
MPRINT(EM_DIAGRAM):   end;
1201265   +end;
MPRINT(EM_DIAGRAM):   end;
1201266   +
1201267   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1201268   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1201269   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1201270   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1201271   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1201272   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1201273   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1201274   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1201275   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1201276   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1201277   +end;
MPRINT(EM_DIAGRAM):   end;
1201278   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1201279   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1201280   +
1201281   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1201282   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1201283   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1201284   +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
1201285   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201286   +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
1201287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201288   +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
1201289   +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
1201290   +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
1201291   +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
1201292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201293   +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
1201294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201295   +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
1201296   +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
1201297   +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
1201298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201299   +* Ensmbl3: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Average Posteriors of 10 models;
1201300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201301   +P_DepVar1 = (
1201302   +Reg3_P_DepVar1 +
1201303   +Tree3_P_DepVar1 +
1201304   +Neural18_P_DepVar1 +
1201305   +Neural23_P_DepVar1 +
1201306   +Neural22_P_DepVar1 +
1201307   +Neural21_P_DepVar1 +
1201308   +Neural20_P_DepVar1 +
1201309   +Neural19_P_DepVar1 +
1201310   +Neural5_P_DepVar1 +
1201311   +Reg7_P_DepVar1
1201312   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg3_P_DepVar1 + Tree3_P_DepVar1 + Neural18_P_DepVar1 + 
Neural23_P_DepVar1 + Neural22_P_DepVar1 + Neural21_P_DepVar1 + Neural20_P_DepVar1 + 
Neural19_P_DepVar1 + Neural5_P_DepVar1 + Reg7_P_DepVar1 )/10;
1201313   +P_DepVar0 = (
1201314   +Reg3_P_DepVar0 +
1201315   +Tree3_P_DepVar0 +
1201316   +Neural18_P_DepVar0 +
1201317   +Neural23_P_DepVar0 +
1201318   +Neural22_P_DepVar0 +
1201319   +Neural21_P_DepVar0 +
1201320   +Neural20_P_DepVar0 +
1201321   +Neural19_P_DepVar0 +
1201322   +Neural5_P_DepVar0 +
1201323   +Reg7_P_DepVar0
1201324   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg3_P_DepVar0 + Tree3_P_DepVar0 + Neural18_P_DepVar0 + 
Neural23_P_DepVar0 + Neural22_P_DepVar0 + Neural21_P_DepVar0 + Neural20_P_DepVar0 + 
Neural19_P_DepVar0 + Neural5_P_DepVar0 + Reg7_P_DepVar0 )/10;
1201325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201326   +* Ensmbl3: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Classification Vars;
1201327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201328   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1201329   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1201330   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1201331   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1201332   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1201333   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1201334   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1201335   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1201336   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1201337   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1201338   +end;
MPRINT(EM_DIAGRAM):   end;
1201339   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1201340   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1201341   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1201342   +end;
MPRINT(EM_DIAGRAM):   end;
1201343   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1201344   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201345   +* Ensmbl3: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Producing Unformatted variable;
1201346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201347   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1201348   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1201349   +else
1201350   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1201351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201352   +* Ensmbl3: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing _WARN_ Variable;
1201353   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201354   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1201355   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1201356   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1201357   +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1201358   +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1201359   +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1201360   +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1201361   +if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1201362   +if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1201363   +if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1201364   +if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1201365   +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1201365  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1201366   +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1201366  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1201367   +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1201367  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1201368   +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1201368  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1201369   +if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1201369  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1201370   +if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1201370  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1201371   +if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1201371  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1201372   +if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1201372  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL23_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1201373   +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1201373  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1201374   +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1201374  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1201375   +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1201375  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1201376   +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1201376  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1201377   +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1201377  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1201378   +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1201378  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1201379   +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1201379  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1201380   +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1201380  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1201381   +if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1201381  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1201382   +if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1201382  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1201383   +if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1201383  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1201384   +if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1201384  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL20_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1201385   +if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1201385  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1201386   +if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1201386  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1201387   +if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1201387  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1201388   +if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1201388  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL19_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1201389   +if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1201390   +if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1201391   +if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1201392   +if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1201393   +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 
1) ='M';
1201394   +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 
1) ='U';
1201395   +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 
1) ='P';
1201396   +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 
1) ='C';
1201397   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201398   +* Ensmbl3: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing Residual Vars;
1201399   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1201400   +if
1201401   +F_DepVar NE '1'
1201402   +AND F_DepVar NE '0'
1201403   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1201404   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1201405   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1201406   +end;
MPRINT(EM_DIAGRAM):   end;
1201407   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201408   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1201409   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1201410   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1201411   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1201412   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1201413   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1201414   +END;
MPRINT(EM_DIAGRAM):   END;
1201415   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1201416    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL3_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG3_VALIDATE.VIEW used (Total process time):
      real time           0.43 seconds
      cpu time            0.39 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.44 seconds
      cpu time            0.42 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1201417    quit;
1201418    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl3_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl3_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl3_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1201478    filename _pref
1201478  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
1201479    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1201480    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas.
1201481   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1201482   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1201483   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1201484   +
1201485   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1201486   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1201487   +
1201488   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1201489   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1201490   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1201491   +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
1201492   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1201493   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1201494   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1201495   +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
1201496   +
1201497   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1201498   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1201499   +
1201500   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1201501   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1201502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201504   +end;
MPRINT(EM_DIAGRAM):   end;
1201505   +
1201506   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1201507   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1201508   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1201509   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1201510   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201512   +end;
MPRINT(EM_DIAGRAM):   end;
1201513   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201514   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201515   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1201516   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201517   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1201518   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1201519   +   end;
MPRINT(EM_DIAGRAM):   end;
1201520   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1201521   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1201522   +   end;
MPRINT(EM_DIAGRAM):   end;
1201523   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201524   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1201525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201527   +   end;
MPRINT(EM_DIAGRAM):   end;
1201528   +end;
MPRINT(EM_DIAGRAM):   end;
1201529   +
1201530   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1201531   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1201532   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1201533   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1201534   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1201535   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1201536   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201537   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201538   +end;
MPRINT(EM_DIAGRAM):   end;
1201539   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201540   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201541   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1201542   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201543   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1201544   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1201545   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1201546   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1201547   +   end;
MPRINT(EM_DIAGRAM):   end;
1201548   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1201549   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1201550   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1201551   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1201552   +   end;
MPRINT(EM_DIAGRAM):   end;
1201553   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201554   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1201555   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1201556   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1201557   +   end;
MPRINT(EM_DIAGRAM):   end;
1201558   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201559   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1201560   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1201561   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1201562   +   end;
MPRINT(EM_DIAGRAM):   end;
1201563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201564   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1201565   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1201566   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1201567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201569   +   end;
MPRINT(EM_DIAGRAM):   end;
1201570   +end;
MPRINT(EM_DIAGRAM):   end;
1201571   +
1201572   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1201573   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1201574   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1201575   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1201576   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1201577   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1201578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201580   +end;
MPRINT(EM_DIAGRAM):   end;
1201581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201583   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1201584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201585   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1201586   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1201587   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1201588   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1201589   +   end;
MPRINT(EM_DIAGRAM):   end;
1201590   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201591   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1201592   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1201593   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1201594   +   end;
MPRINT(EM_DIAGRAM):   end;
1201595   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1201596   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1201597   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1201598   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1201599   +   end;
MPRINT(EM_DIAGRAM):   end;
1201600   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201601   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1201602   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1201603   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1201604   +   end;
MPRINT(EM_DIAGRAM):   end;
1201605   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201606   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1201607   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1201608   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1201609   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201610   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201611   +   end;
MPRINT(EM_DIAGRAM):   end;
1201612   +end;
MPRINT(EM_DIAGRAM):   end;
1201613   +
1201614   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1201615   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1201616   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1201617   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1201618   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1201619   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1201620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201622   +end;
MPRINT(EM_DIAGRAM):   end;
1201623   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201625   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1201626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201627   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1201628   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1201629   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1201630   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1201631   +   end;
MPRINT(EM_DIAGRAM):   end;
1201632   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1201633   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1201634   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1201635   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1201636   +   end;
MPRINT(EM_DIAGRAM):   end;
1201637   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201638   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1201639   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1201640   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1201641   +   end;
MPRINT(EM_DIAGRAM):   end;
1201642   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201643   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1201644   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1201645   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1201646   +   end;
MPRINT(EM_DIAGRAM):   end;
1201647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201648   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1201649   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1201650   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1201651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201653   +   end;
MPRINT(EM_DIAGRAM):   end;
1201654   +end;
MPRINT(EM_DIAGRAM):   end;
1201655   +
1201656   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1201657   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1201658   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1201659   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1201660   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1201661   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1201662   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201663   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201664   +end;
MPRINT(EM_DIAGRAM):   end;
1201665   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201666   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201667   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1201668   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201669   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1201670   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1201671   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1201672   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1201673   +   end;
MPRINT(EM_DIAGRAM):   end;
1201674   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201675   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1201676   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1201677   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1201678   +   end;
MPRINT(EM_DIAGRAM):   end;
1201679   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1201680   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1201681   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1201682   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1201683   +   end;
MPRINT(EM_DIAGRAM):   end;
1201684   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201685   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1201686   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1201687   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1201688   +   end;
MPRINT(EM_DIAGRAM):   end;
1201689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201690   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1201691   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1201692   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1201693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201695   +   end;
MPRINT(EM_DIAGRAM):   end;
1201696   +end;
MPRINT(EM_DIAGRAM):   end;
1201697   +
1201698   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1201699   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1201700   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1201701   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1201702   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1201703   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1201704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201706   +end;
MPRINT(EM_DIAGRAM):   end;
1201707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201708   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201709   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1201710   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201711   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1201712   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1201713   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1201714   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1201715   +   end;
MPRINT(EM_DIAGRAM):   end;
1201716   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1201717   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1201718   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1201719   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1201720   +   end;
MPRINT(EM_DIAGRAM):   end;
1201721   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201722   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1201723   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1201724   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1201725   +   end;
MPRINT(EM_DIAGRAM):   end;
1201726   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201727   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1201728   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1201729   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1201730   +   end;
MPRINT(EM_DIAGRAM):   end;
1201731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201732   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1201733   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1201734   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1201735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201737   +   end;
MPRINT(EM_DIAGRAM):   end;
1201738   +end;
MPRINT(EM_DIAGRAM):   end;
1201739   +
1201740   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1201741   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1201742   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1201743   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1201744   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1201745   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201746   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201747   +end;
MPRINT(EM_DIAGRAM):   end;
1201748   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201749   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201750   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1201751   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201752   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1201753   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1201754   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1201755   +   end;
MPRINT(EM_DIAGRAM):   end;
1201756   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1201757   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1201758   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1201759   +   end;
MPRINT(EM_DIAGRAM):   end;
1201760   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201761   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1201762   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1201763   +   end;
MPRINT(EM_DIAGRAM):   end;
1201764   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201765   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1201766   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1201767   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201768   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201769   +   end;
MPRINT(EM_DIAGRAM):   end;
1201770   +end;
MPRINT(EM_DIAGRAM):   end;
1201771   +
1201772   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1201773   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1201774   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1201775   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1201776   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1201777   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1201778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201780   +end;
MPRINT(EM_DIAGRAM):   end;
1201781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201783   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1201784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201785   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1201786   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1201787   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1201788   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1201789   +   end;
MPRINT(EM_DIAGRAM):   end;
1201790   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201791   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1201792   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1201793   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1201794   +   end;
MPRINT(EM_DIAGRAM):   end;
1201795   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201796   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1201797   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1201798   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1201799   +   end;
MPRINT(EM_DIAGRAM):   end;
1201800   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1201801   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1201802   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1201803   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1201804   +   end;
MPRINT(EM_DIAGRAM):   end;
1201805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201806   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1201807   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1201808   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1201809   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201810   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201811   +   end;
MPRINT(EM_DIAGRAM):   end;
1201812   +end;
MPRINT(EM_DIAGRAM):   end;
1201813   +
1201814   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1201815   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1201816   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1201817   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1201818   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1201819   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1201820   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201821   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201822   +end;
MPRINT(EM_DIAGRAM):   end;
1201823   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201824   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201825   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1201826   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201827   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1201828   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1201829   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1201830   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1201831   +   end;
MPRINT(EM_DIAGRAM):   end;
1201832   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1201833   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1201834   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1201835   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1201836   +   end;
MPRINT(EM_DIAGRAM):   end;
1201837   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201838   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1201839   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1201840   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1201841   +   end;
MPRINT(EM_DIAGRAM):   end;
1201842   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201843   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1201844   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1201845   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1201846   +   end;
MPRINT(EM_DIAGRAM):   end;
1201847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201848   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1201849   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1201850   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1201851   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201852   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201853   +   end;
MPRINT(EM_DIAGRAM):   end;
1201854   +end;
MPRINT(EM_DIAGRAM):   end;
1201855   +
1201856   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1201857   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1201858   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1201859   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1201860   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1201861   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1201862   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1201863   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201864   +end;
MPRINT(EM_DIAGRAM):   end;
1201865   +else do;
MPRINT(EM_DIAGRAM):   else do;
1201866   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1201867   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1201868   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1201869   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1201870   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1201871   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1201872   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1201873   +   end;
MPRINT(EM_DIAGRAM):   end;
1201874   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1201875   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1201876   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1201877   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1201878   +   end;
MPRINT(EM_DIAGRAM):   end;
1201879   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1201880   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1201881   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1201882   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1201883   +   end;
MPRINT(EM_DIAGRAM):   end;
1201884   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1201885   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1201886   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1201887   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1201888   +   end;
MPRINT(EM_DIAGRAM):   end;
1201889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1201890   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1201891   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1201892   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1201893   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1201894   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1201895   +   end;
MPRINT(EM_DIAGRAM):   end;
1201896   +end;
MPRINT(EM_DIAGRAM):   end;
1201897   +
1201898   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1201899   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1201900   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1201901   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1201902   +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
1201903   +end;
MPRINT(EM_DIAGRAM):   end;
1201904   +
1201905   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1201906   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1201907   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1201908   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1201909   +
1201910   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1201911   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201912   +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
1201913   +
1201914   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1201915   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201916   +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
1201917   +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
1201918   +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
1201919   +
1201920   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1201921   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201922   +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
1201923   +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
1201924   +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
1201925   +
1201926   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1201927   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201928   +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
1201929   +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
1201930   +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
1201931   +
1201932   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1201933   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201934   +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
1201935   +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
1201936   +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
1201937   +
1201938   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1201939   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201940   +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
1201941   +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
1201942   +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
1201943   +
1201944   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1201945   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201946   +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
1201947   +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
1201948   +
1201949   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1201950   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201951   +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
1201952   +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
1201953   +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
1201954   +
1201955   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1201956   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201957   +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
1201958   +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
1201959   +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
1201960   +
1201961   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1201962   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1201963   +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
1201964   +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
1201965   +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
1201966   +
1201967   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1201968   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1201969   +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
1201970   +
1201971   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1201972   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1201973   +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
1201974   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1201975   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1201976   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1201977   +end;
MPRINT(EM_DIAGRAM):   end;
1201978   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1201979   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1201980   +
1201981   +REG3DR1:
1201982   +
1201983   +
1201984   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Posterior Probabilities and Predicted Level;
1201985   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1201986   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1201987   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1201988   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1201989   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1201990   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1201991   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1201992   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1201993   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1201994   +end;
MPRINT(EM_DIAGRAM):   end;
1201995   +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
1201996   +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
1201997   +
1201998   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1201999   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1202000   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1202001    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1202002    quit;
1202003    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1202004    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1202005    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1202006    retain ID 2 Node "Reg3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg3";
1202007    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1202008    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202009    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1202010    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202012    proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
1202013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.REG3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202015    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202016    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1202017    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1202018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202019    proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
1202020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1202021    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1202022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202023    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202024    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202025    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1202026    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202027    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202028    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202029    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1202029  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 434 rows and 5 columns.

1202030    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202031    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1202032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 434 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 434 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202033    filename _pref
1202033  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1202034    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1202035    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1202036   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1202037   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1202038   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1202039   +
1202040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202041   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1202042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202043   +LABEL GRP_AcceptedCmp5 =
1202044   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1202045   +
1202046   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1202047   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202048   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1202049   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1202050   +end;
MPRINT(EM_DIAGRAM):   end;
1202051   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1202052   +if (_UFORMAT eq '0'
1202053   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1202054   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1202055   +end;
MPRINT(EM_DIAGRAM):   end;
1202056   +else
1202057   +if (_UFORMAT eq '1'
1202058   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1202059   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1202060   +end;
MPRINT(EM_DIAGRAM):   end;
1202061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1202062   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1202063   +end;
MPRINT(EM_DIAGRAM):   end;
1202064   +end;
MPRINT(EM_DIAGRAM):   end;
1202065   +
1202066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202067   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1202068   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202069   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1202070   +
1202071   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1202072   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1202073   +end;
MPRINT(EM_DIAGRAM):   end;
1202074   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1202075   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1202076   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1202077   +end;
MPRINT(EM_DIAGRAM):   end;
1202078   +else
1202079   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1202080   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1202081   +end;
MPRINT(EM_DIAGRAM):   end;
1202082   +else
1202083   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1202084   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1202085   +end;
MPRINT(EM_DIAGRAM):   end;
1202086   +else
1202087   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1202088   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1202089   +end;
MPRINT(EM_DIAGRAM):   end;
1202090   +end;
MPRINT(EM_DIAGRAM):   end;
1202091   +
1202092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202093   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1202094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202095   +LABEL GRP_Income =
1202096   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1202097   +
1202098   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1202099   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1202100   +end;
MPRINT(EM_DIAGRAM):   end;
1202101   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1202102   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1202103   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1202104   +end;
MPRINT(EM_DIAGRAM):   end;
1202105   +else
1202106   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1202107   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1202108   +end;
MPRINT(EM_DIAGRAM):   end;
1202109   +else
1202110   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1202111   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1202112   +end;
MPRINT(EM_DIAGRAM):   end;
1202113   +else
1202114   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1202115   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1202116   +end;
MPRINT(EM_DIAGRAM):   end;
1202117   +end;
MPRINT(EM_DIAGRAM):   end;
1202118   +
1202119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202120   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1202121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202122   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1202123   +
1202124   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1202125   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1202126   +end;
MPRINT(EM_DIAGRAM):   end;
1202127   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1202128   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1202129   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1202130   +end;
MPRINT(EM_DIAGRAM):   end;
1202131   +else
1202132   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1202133   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1202134   +end;
MPRINT(EM_DIAGRAM):   end;
1202135   +else
1202136   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1202137   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1202138   +end;
MPRINT(EM_DIAGRAM):   end;
1202139   +else
1202140   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1202141   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1202142   +end;
MPRINT(EM_DIAGRAM):   end;
1202143   +end;
MPRINT(EM_DIAGRAM):   end;
1202144   +
1202145   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202146   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1202147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202148   +LABEL GRP_MntFishProducts =
1202149   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1202150   +
1202151   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1202152   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1202153   +end;
MPRINT(EM_DIAGRAM):   end;
1202154   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1202155   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1202156   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1202157   +end;
MPRINT(EM_DIAGRAM):   end;
1202158   +else
1202159   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1202160   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1202161   +end;
MPRINT(EM_DIAGRAM):   end;
1202162   +else
1202163   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1202164   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1202165   +end;
MPRINT(EM_DIAGRAM):   end;
1202166   +else
1202167   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1202168   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1202169   +end;
MPRINT(EM_DIAGRAM):   end;
1202170   +end;
MPRINT(EM_DIAGRAM):   end;
1202171   +
1202172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202173   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1202174   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202175   +LABEL GRP_MntGoldProds =
1202176   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1202177   +
1202178   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1202179   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1202180   +end;
MPRINT(EM_DIAGRAM):   end;
1202181   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1202182   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1202183   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1202184   +end;
MPRINT(EM_DIAGRAM):   end;
1202185   +else
1202186   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1202187   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1202188   +end;
MPRINT(EM_DIAGRAM):   end;
1202189   +else
1202190   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1202191   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1202192   +end;
MPRINT(EM_DIAGRAM):   end;
1202193   +else
1202194   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1202195   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1202196   +end;
MPRINT(EM_DIAGRAM):   end;
1202197   +end;
MPRINT(EM_DIAGRAM):   end;
1202198   +
1202199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202200   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1202201   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202202   +LABEL GRP_MntMeatProducts =
1202203   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1202204   +
1202205   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1202206   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1202207   +end;
MPRINT(EM_DIAGRAM):   end;
1202208   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1202209   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1202210   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1202211   +end;
MPRINT(EM_DIAGRAM):   end;
1202212   +else
1202213   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1202214   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1202215   +end;
MPRINT(EM_DIAGRAM):   end;
1202216   +else
1202217   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1202218   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1202219   +end;
MPRINT(EM_DIAGRAM):   end;
1202220   +else
1202221   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1202222   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1202223   +end;
MPRINT(EM_DIAGRAM):   end;
1202224   +end;
MPRINT(EM_DIAGRAM):   end;
1202225   +
1202226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202227   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1202228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202229   +LABEL GRP_MntWines =
1202230   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1202231   +
1202232   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1202233   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1202234   +end;
MPRINT(EM_DIAGRAM):   end;
1202235   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1202236   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1202237   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1202238   +end;
MPRINT(EM_DIAGRAM):   end;
1202239   +else
1202240   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1202241   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1202242   +end;
MPRINT(EM_DIAGRAM):   end;
1202243   +else
1202244   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1202245   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1202246   +end;
MPRINT(EM_DIAGRAM):   end;
1202247   +else
1202248   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1202249   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1202250   +end;
MPRINT(EM_DIAGRAM):   end;
1202251   +end;
MPRINT(EM_DIAGRAM):   end;
1202252   +
1202253   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202254   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1202255   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202256   +LABEL GRP_NumCatalogPurchases =
1202257   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1202258   +
1202259   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1202260   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1202261   +end;
MPRINT(EM_DIAGRAM):   end;
1202262   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1202263   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1202264   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1202265   +end;
MPRINT(EM_DIAGRAM):   end;
1202266   +else
1202267   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1202268   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1202269   +end;
MPRINT(EM_DIAGRAM):   end;
1202270   +else
1202271   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1202272   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1202273   +end;
MPRINT(EM_DIAGRAM):   end;
1202274   +else
1202275   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1202276   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1202277   +end;
MPRINT(EM_DIAGRAM):   end;
1202278   +end;
MPRINT(EM_DIAGRAM):   end;
1202279   +
1202280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202281   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1202282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202283   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1202284   +
1202285   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1202286   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1202287   +end;
MPRINT(EM_DIAGRAM):   end;
1202288   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1202289   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1202290   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1202291   +end;
MPRINT(EM_DIAGRAM):   end;
1202292   +else
1202293   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1202294   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1202295   +end;
MPRINT(EM_DIAGRAM):   end;
1202296   +else
1202297   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1202298   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1202299   +end;
MPRINT(EM_DIAGRAM):   end;
1202300   +else
1202301   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1202302   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1202303   +end;
MPRINT(EM_DIAGRAM):   end;
1202304   +end;
MPRINT(EM_DIAGRAM):   end;
1202305   +
1202306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202307   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1202308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202309   +LABEL GRP_NumWebPurchases =
1202310   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1202311   +
1202312   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1202313   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1202314   +end;
MPRINT(EM_DIAGRAM):   end;
1202315   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1202316   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1202317   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1202318   +end;
MPRINT(EM_DIAGRAM):   end;
1202319   +else
1202320   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1202321   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1202322   +end;
MPRINT(EM_DIAGRAM):   end;
1202323   +else
1202324   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1202325   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1202326   +end;
MPRINT(EM_DIAGRAM):   end;
1202327   +else
1202328   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1202329   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1202330   +end;
MPRINT(EM_DIAGRAM):   end;
1202331   +end;
MPRINT(EM_DIAGRAM):   end;
1202332   +
1202333   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202334   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1202335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202336   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1202337   +
1202338   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1202339   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1202340   +end;
MPRINT(EM_DIAGRAM):   end;
1202341   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1202342   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1202343   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1202344   +end;
MPRINT(EM_DIAGRAM):   end;
1202345   +else
1202346   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1202347   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1202348   +end;
MPRINT(EM_DIAGRAM):   end;
1202349   +else
1202350   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1202351   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1202352   +end;
MPRINT(EM_DIAGRAM):   end;
1202353   +else
1202354   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1202355   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1202356   +end;
MPRINT(EM_DIAGRAM):   end;
1202357   +end;
MPRINT(EM_DIAGRAM):   end;
1202358   +
1202359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202360   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1202361   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202362   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1202363   +
1202364   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1202365   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1202366   +end;
MPRINT(EM_DIAGRAM):   end;
1202367   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1202368   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1202369   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1202370   +end;
MPRINT(EM_DIAGRAM):   end;
1202371   +else
1202372   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1202373   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1202374   +end;
MPRINT(EM_DIAGRAM):   end;
1202375   +else
1202376   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1202377   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1202378   +end;
MPRINT(EM_DIAGRAM):   end;
1202379   +else
1202380   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1202381   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1202382   +end;
MPRINT(EM_DIAGRAM):   end;
1202383   +end;
MPRINT(EM_DIAGRAM):   end;
1202384   +
1202385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202386   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1202387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202388   +LABEL GRP_Recency =
1202389   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1202390   +
1202391   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1202392   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1202393   +end;
MPRINT(EM_DIAGRAM):   end;
1202394   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1202395   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1202396   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1202397   +end;
MPRINT(EM_DIAGRAM):   end;
1202398   +else
1202399   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1202400   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1202401   +end;
MPRINT(EM_DIAGRAM):   end;
1202402   +else
1202403   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1202404   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1202405   +end;
MPRINT(EM_DIAGRAM):   end;
1202406   +else
1202407   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1202408   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1202409   +end;
MPRINT(EM_DIAGRAM):   end;
1202410   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1202411    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1202412    quit;
1202413    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1202414    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1202415    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1202416    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1202417    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1202418    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202419    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1202420    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202421    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202422    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1202423    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202425    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202426    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1202427    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1202428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202429    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1202430    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1202431    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1202432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202433    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202434    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202435    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1202436    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202437    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1202438    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202439    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1202439  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1202440    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202441    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1202442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202443    filename _pref
1202443  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1202444    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1202445    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1202446   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202447   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1202448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1202449   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1202450   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1202451   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1202452    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1202453    quit;
1202454    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1202455    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1202456    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1202457    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1202458    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1202459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202460    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1202461    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202462    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202463    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1202464    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202465    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202466    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202467    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1202468    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1202469    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202470    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1202471    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1202472    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1202473    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202474    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202475    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202476    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1202477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202478    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202479    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202480    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1202480  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1202481    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202482    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1202483    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202484    filename _pref
1202484  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1202485    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1202486    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1202487   +
1202488   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1202489   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1202489  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1202490   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1202491   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1202492   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1202493   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1202494   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1202495    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1202496    quit;
1202497    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1202498    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1202499    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1202500    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1202501    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1202502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202503    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1202504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202506    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1202507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202510    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1202511    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1202512    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202513    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1202514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202515    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1202516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202517    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202518    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202519    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1202520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202521    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202522    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202523    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1202523  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1202524    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202525    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1202526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202527    filename _pref
1202527  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1202528    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1202529    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1202530   +
1202531   +
1202532   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1202533   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1202534   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1202535   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1202536   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1202537   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202538   +
1202539   +
1202540   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1202541   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1202542   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1202543   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1202544   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1202545   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202546   +
1202547   +
1202548   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1202549   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1202550   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1202551   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1202552   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1202553   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202554   +
1202555   +
1202556   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1202557   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1202558   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1202559   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1202560   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1202561   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202562   +
1202563   +
1202564   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1202565   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1202566   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1202567   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1202568   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1202569   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202570   +
1202571   +
1202572   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1202573   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1202574   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1202575   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1202576   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1202577   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202578   +
1202579   +
1202580   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1202581   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1202582   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1202583   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1202584   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1202585   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202586   +
1202587   +
1202588   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1202589   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1202590   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1202591   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1202592   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1202593   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1202594   +if
1202595   +_FILTERNORM1 not in ( '.')
1202596   + and
1202597   +_FILTERNORM2 not in ( '.')
1202598   + and
1202599   +_FILTERNORM3 not in ( '.')
1202600   + and
1202601   +_FILTERNORM4 not in ( '.')
1202602   + and
1202603   +_FILTERNORM5 not in ( '.')
1202604   + and
1202605   +_FILTERNORM6 not in ( '.')
1202606   + and
1202607   +_FILTERNORM7 not in ( ' ')
1202608   + and
1202609   +_FILTERNORM8 not in ( ' ')
1202610   +and
1202611   +( Dt_Customer ne .)
1202612   +and ( Income ne . and (Income<=107000))
1202613   +and ( Kidhome ne .)
1202614   +and ( MntFishProducts ne .)
1202615   +and ( MntFruits ne .)
1202616   +and ( MntGoldProds ne .)
1202617   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1202618   +and ( MntSweetProducts ne .)
1202619   +and ( MntWines ne .)
1202620   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1202621   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1202622   +and ( NumStorePurchases ne .)
1202623   +and ( NumWebPurchases ne .)
1202624   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1202625   +and ( Recency ne .)
1202626   +and ( Teenhome ne .)
1202627   +and ( Year_Birth ne .)
1202628   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1202629   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1202630   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1202631   +end;
MPRINT(EM_DIAGRAM):   end;
1202632   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1202633   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1202634    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1202635    quit;
1202636    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1202637    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1202638    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1202639    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1202640    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1202641    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202642    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1202643    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202644    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202645    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1202646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202648    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202649    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1202650    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1202651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202652    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1202653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1202654    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1202655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202656    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202657    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202658    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1202659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202660    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1202661    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202662    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1202662  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1202663    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202664    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1202665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202666    %macro varDept(fcmpdata=,id=);
1202667    %global nobs&id scoreFlag&id;
1202668    %let scoreFlag&id = 0;
1202669    %if &id=1 or ^&fcmpStart %then %do;
1202670    proc sort data=&fcmpdata out=_temp&id nodupkey;
1202671    by NAME;
1202672    where id=&id and LHS in( %let j=1;
1202673    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1202674    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1202675    "&var" %let j = %eval(&j+1);
1202676    %end;
1202677    );
1202678    run;
1202679    %let dsid = %sysfunc(open(_temp&id));
1202680    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1202681    %let dsid = %sysfunc(close(&dsid));
1202682    %if &&nobs&id %then %do;
1202683    %let scoreFlag&id = 1;
1202684    %let fcmpStart = 1;
1202685    %end;
1202686    %else %let fcmpStart = 0;
1202687    %end;
1202688    %else %do;
1202689    proc sort data=&fcmpdata out=_tempid;
1202690    where id=&id;
1202691    by LHS;
1202692    run;
1202693    %let dsid = %sysfunc(open(_tempid));
1202694    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1202695    %let dsid = %sysfunc(close(&dsid));
1202696    %if ^&&nobs&id %then %do;
1202697    proc datasets lib=work nolist;
1202698    delete _tempid;
1202699    run;
1202700    quit;
1202701    %end;
1202702    %else %do;
1202703    data _tempAll;
1202704    set %let j=%eval(&id-1);
1202705    %do x=1 %to &j;
1202706    %if &&nobs&x %then %do;
1202707    _temp&x %end;
1202708    %end;
1202709    ;
1202710    run;
1202711    proc sql;
1202712    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1202712  ! work._tempid p2 where p.name=p2.lhs;
1202713    quit;
1202714    data _temp&id;
1202715    set _temp&id;
1202716    where LHS ne '' and NAME ne '' and Node ne '';
1202717    run;
1202718    proc datasets lib=work nolist;
1202719    delete _tempAll;
1202720    run;
1202721    %let dsid = %sysfunc(open(_temp&id));
1202722    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1202723    %let dsid = %sysfunc(close(&dsid));
1202724    %if ^&&nobs&id %then %do;
1202725    proc datasets lib=work nolist;
1202726    delete _temp&id;
1202727    run;
1202728    quit;
1202729    %end;
1202730    %else %do;
1202731    %let scoreFlag&id = 1;
1202732    data _temp&id;
1202733    set _temp&id;
1202734    where LHS ne NAME and node ne '';
1202735    run;
1202736    %let dsid = %sysfunc(open(_temp&id));
1202737    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1202738    %let dsid = %sysfunc(close(&dsid));
1202739    %if ^&&nobs&id %then %do;
1202740    proc datasets lib=work nolist;
1202741    delete _temp&id;
1202742    run;
1202743    quit;
1202744    %end;
1202745    %else %do;
1202746    proc sort data=_temp&id nodupkey;
1202747    by LHS NAME;
1202748    run;
1202749    %end;
1202750    %end;
1202751    %end;
1202752    %end;
1202753    %mend varDept;
1202754    %macro optCode(outdata=fcmpdata);
1202755    %global fcmpStart;
1202756    %let fcmpStart = 0;
1202757    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1202758    %let NumNodes=9;
1202759    %do k=1 %to &NumNodes;
1202760    %vardept(fcmpdata=&outdata, id=&k);
1202761    %end;
1202762    %mend optCode;
1202763    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 44 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1202764    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1202765    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1202766    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1202767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202768    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1202769    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1202770    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1202771    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202772    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202773    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1202773  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1202774    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1202775    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1202776    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1202777    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202778    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1202779    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1202780    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1202781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202782    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1202783    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1202784    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1202785    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202786    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202787    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1202787  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.

1202788    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1202789    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1202790    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1202791    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202792    filename _pref
1202792  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMPUBLISHSCORE.sas";
1202793    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1202794    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Tree3\EMPUBLISHSCORE.sas.
1202795   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1202796   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1202797   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1202798   +
1202799   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1202800   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1202801   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1202802   +
1202803   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1202804   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1202805   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1202806   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1202807   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1202808   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1202809   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1202810   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1202811   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1202812   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1202813   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1202814   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1202815   +
1202816   +
1202817   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1202818   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1202819   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1202820   +
1202821   +
1202822   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE 
******;
1202823   +_ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_RFMstat , BEST12.);
1202824   + %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202825   +IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
1202826   +  _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
1202827   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202828   +  IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
1202829   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1202830   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202831   +    IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1202832   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1202833   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1202834   +      P_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.11111111111111;
1202835   +      P_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.88888888888888;
1202836   +      Q_DepVar0  =     0.11111111111111;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.11111111111111;
1202837   +      Q_DepVar1  =     0.88888888888888;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.88888888888888;
1202838   +      V_DepVar0  =                  0.1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.1;
1202839   +      V_DepVar1  =                  0.9;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.9;
1202840   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1202841   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1202842   +      END;
MPRINT(EM_DIAGRAM):   END;
1202843   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202844   +      _NODE_  =                    9;
MPRINT(EM_DIAGRAM):   _NODE_ = 9;
1202845   +      _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1202846   +      P_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.54430379746835;
1202847   +      P_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45569620253164;
1202848   +      Q_DepVar0  =     0.54430379746835;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.54430379746835;
1202849   +      Q_DepVar1  =     0.45569620253164;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.45569620253164;
1202850   +      V_DepVar0  =     0.56756756756756;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.56756756756756;
1202851   +      V_DepVar1  =     0.43243243243243;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.43243243243243;
1202852   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1202853   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1202854   +      END;
MPRINT(EM_DIAGRAM):   END;
1202855   +    END;
MPRINT(EM_DIAGRAM):   END;
1202856   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202857   +    _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1202858   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202859   +    IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'5' ,'4' ) THEN DO;
1202860   +      _NODE_  =                   11;
MPRINT(EM_DIAGRAM):   _NODE_ = 11;
1202861   +      _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1202862   +      P_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.82027649769585;
1202863   +      P_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.17972350230414;
1202864   +      Q_DepVar0  =     0.82027649769585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.82027649769585;
1202865   +      Q_DepVar1  =     0.17972350230414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.17972350230414;
1202866   +      V_DepVar0  =     0.82222222222222;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.82222222222222;
1202867   +      V_DepVar1  =     0.17777777777777;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.17777777777777;
1202868   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1202869   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1202870   +      END;
MPRINT(EM_DIAGRAM):   END;
1202871   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202872   +      _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_NumCatalogPurchases , BEST12.);
1202873   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202874   +      IF _ARBFMT_12 IN ('5' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('5' ) THEN DO;
1202875   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1202876   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1202877   +        P_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.4758064516129;
1202878   +        P_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.52419354838709;
1202879   +        Q_DepVar0  =      0.4758064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.4758064516129;
1202880   +        Q_DepVar1  =     0.52419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.52419354838709;
1202881   +        V_DepVar0  =     0.48333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.48333333333333;
1202882   +        V_DepVar1  =     0.51666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.51666666666666;
1202883   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1202884   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1202885   +        END;
MPRINT(EM_DIAGRAM):   END;
1202886   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202887   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
1202888   +        _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1202889   +        P_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.7734375;
1202890   +        P_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.2265625;
1202891   +        Q_DepVar0  =            0.7734375;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.7734375;
1202892   +        Q_DepVar1  =            0.2265625;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.2265625;
1202893   +        V_DepVar0  =     0.75510204081632;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.75510204081632;
1202894   +        V_DepVar1  =     0.24489795918367;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.24489795918367;
1202895   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1202896   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1202897   +        END;
MPRINT(EM_DIAGRAM):   END;
1202898   +      END;
MPRINT(EM_DIAGRAM):   END;
1202899   +    END;
MPRINT(EM_DIAGRAM):   END;
1202900   +  END;
MPRINT(EM_DIAGRAM):   END;
1202901   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202902   +  _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_Recency , BEST12.);
1202903   +   %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202904   +  IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1202905   +    _NODE_  =                    7;
MPRINT(EM_DIAGRAM):   _NODE_ = 7;
1202906   +    _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1202907   +    P_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.79078014184397;
1202908   +    P_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.20921985815602;
1202909   +    Q_DepVar0  =     0.79078014184397;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.79078014184397;
1202910   +    Q_DepVar1  =     0.20921985815602;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.20921985815602;
1202911   +    V_DepVar0  =     0.72268907563025;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.72268907563025;
1202912   +    V_DepVar1  =     0.27731092436974;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.27731092436974;
1202913   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1202914   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1202915   +    END;
MPRINT(EM_DIAGRAM):   END;
1202916   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202917   +    _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_AcceptedCmp5 , BEST12.);
1202918   +     %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202919   +    IF _ARBFMT_12 IN ('3' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ) THEN DO;
1202920   +      _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( GRP_MntWines , BEST12.);
1202921   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1202922   +      IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('3' ,'4' ) THEN DO;
1202923   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1202924   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1202925   +        P_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.26315789473684;
1202926   +        P_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.73684210526315;
1202927   +        Q_DepVar0  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.26315789473684;
1202928   +        Q_DepVar1  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.73684210526315;
1202929   +        V_DepVar0  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.28571428571428;
1202930   +        V_DepVar1  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.71428571428571;
1202931   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1202932   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1202933   +        END;
MPRINT(EM_DIAGRAM):   END;
1202934   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202935   +        _NODE_  =                   23;
MPRINT(EM_DIAGRAM):   _NODE_ = 23;
1202936   +        _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1202937   +        P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
1202938   +        P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
1202939   +        Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
1202940   +        Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
1202941   +        V_DepVar0  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.66666666666666;
1202942   +        V_DepVar1  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.33333333333333;
1202943   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1202944   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1202945   +        END;
MPRINT(EM_DIAGRAM):   END;
1202946   +      END;
MPRINT(EM_DIAGRAM):   END;
1202947   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1202948   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1202949   +      _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1202950   +      P_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.95194986072423;
1202951   +      P_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.04805013927576;
1202952   +      Q_DepVar0  =     0.95194986072423;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.95194986072423;
1202953   +      Q_DepVar1  =     0.04805013927576;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.04805013927576;
1202954   +      V_DepVar0  =     0.95980707395498;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.95980707395498;
1202955   +      V_DepVar1  =     0.04019292604501;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.04019292604501;
1202956   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1202957   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1202958   +      END;
MPRINT(EM_DIAGRAM):   END;
1202959   +    END;
MPRINT(EM_DIAGRAM):   END;
1202960   +  END;
MPRINT(EM_DIAGRAM):   END;
1202961   +
1202962   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1202963   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1202964   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1202965   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
The SAS System

1202966    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1202967    quit;
1202968    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1202969    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1202970    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1202971    retain ID 2 Node "Tree3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree3";
1202972    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1202973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 65 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202974    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1202975    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202976    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 65 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 65 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202977    proc sort data=EMWS8.Tree3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree3_variableset out=_temp2(keep=NAME CREATOR);
1202978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.TREE3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202980    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202981    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1202982    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1202983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1202984    proc contents data=EMWS8.Tree3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree3_train out=_meta(keep=NAME) noprint;
1202985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 72 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1202986    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1202987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 72 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 72 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202989    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1202990    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1202991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1202992    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 72 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 72 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202993    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1202994    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1202994  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 55 rows and 5 columns.

1202995    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202996    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1202997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 55 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 55 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1202998    filename _pref
1202998  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1202999    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1203000    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1203001   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1203002   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1203003   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1203004   +
1203005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203006   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1203007   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203008   +LABEL GRP_AcceptedCmp5 =
1203009   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1203010   +
1203011   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1203012   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1203013   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1203014   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1203015   +end;
MPRINT(EM_DIAGRAM):   end;
1203016   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1203017   +if (_UFORMAT eq '0'
1203018   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1203019   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1203020   +end;
MPRINT(EM_DIAGRAM):   end;
1203021   +else
1203022   +if (_UFORMAT eq '1'
1203023   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1203024   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1203025   +end;
MPRINT(EM_DIAGRAM):   end;
1203026   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203027   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1203028   +end;
MPRINT(EM_DIAGRAM):   end;
1203029   +end;
MPRINT(EM_DIAGRAM):   end;
1203030   +
1203031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203032   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1203033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203034   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1203035   +
1203036   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1203037   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1203038   +end;
MPRINT(EM_DIAGRAM):   end;
1203039   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1203040   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1203041   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1203042   +end;
MPRINT(EM_DIAGRAM):   end;
1203043   +else
1203044   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1203045   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1203046   +end;
MPRINT(EM_DIAGRAM):   end;
1203047   +else
1203048   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1203049   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1203050   +end;
MPRINT(EM_DIAGRAM):   end;
1203051   +else
1203052   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1203053   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1203054   +end;
MPRINT(EM_DIAGRAM):   end;
1203055   +end;
MPRINT(EM_DIAGRAM):   end;
1203056   +
1203057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203058   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1203059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203060   +LABEL GRP_Income =
1203061   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1203062   +
1203063   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1203064   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1203065   +end;
MPRINT(EM_DIAGRAM):   end;
1203066   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1203067   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1203068   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1203069   +end;
MPRINT(EM_DIAGRAM):   end;
1203070   +else
1203071   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1203072   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1203073   +end;
MPRINT(EM_DIAGRAM):   end;
1203074   +else
1203075   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1203076   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1203077   +end;
MPRINT(EM_DIAGRAM):   end;
1203078   +else
1203079   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1203080   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1203081   +end;
MPRINT(EM_DIAGRAM):   end;
1203082   +end;
MPRINT(EM_DIAGRAM):   end;
1203083   +
1203084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203085   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1203086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203087   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1203088   +
1203089   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1203090   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1203091   +end;
MPRINT(EM_DIAGRAM):   end;
1203092   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1203093   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1203094   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1203095   +end;
MPRINT(EM_DIAGRAM):   end;
1203096   +else
1203097   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1203098   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1203099   +end;
MPRINT(EM_DIAGRAM):   end;
1203100   +else
1203101   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1203102   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1203103   +end;
MPRINT(EM_DIAGRAM):   end;
1203104   +else
1203105   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1203106   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1203107   +end;
MPRINT(EM_DIAGRAM):   end;
1203108   +end;
MPRINT(EM_DIAGRAM):   end;
1203109   +
1203110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203111   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1203112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203113   +LABEL GRP_MntFishProducts =
1203114   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1203115   +
1203116   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1203117   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1203118   +end;
MPRINT(EM_DIAGRAM):   end;
1203119   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1203120   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1203121   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1203122   +end;
MPRINT(EM_DIAGRAM):   end;
1203123   +else
1203124   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1203125   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1203126   +end;
MPRINT(EM_DIAGRAM):   end;
1203127   +else
1203128   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1203129   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1203130   +end;
MPRINT(EM_DIAGRAM):   end;
1203131   +else
1203132   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1203133   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1203134   +end;
MPRINT(EM_DIAGRAM):   end;
1203135   +end;
MPRINT(EM_DIAGRAM):   end;
1203136   +
1203137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203138   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1203139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203140   +LABEL GRP_MntGoldProds =
1203141   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1203142   +
1203143   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1203144   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1203145   +end;
MPRINT(EM_DIAGRAM):   end;
1203146   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1203147   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1203148   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1203149   +end;
MPRINT(EM_DIAGRAM):   end;
1203150   +else
1203151   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1203152   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1203153   +end;
MPRINT(EM_DIAGRAM):   end;
1203154   +else
1203155   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1203156   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1203157   +end;
MPRINT(EM_DIAGRAM):   end;
1203158   +else
1203159   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1203160   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1203161   +end;
MPRINT(EM_DIAGRAM):   end;
1203162   +end;
MPRINT(EM_DIAGRAM):   end;
1203163   +
1203164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203165   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1203166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203167   +LABEL GRP_MntMeatProducts =
1203168   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1203169   +
1203170   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1203171   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1203172   +end;
MPRINT(EM_DIAGRAM):   end;
1203173   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1203174   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1203175   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1203176   +end;
MPRINT(EM_DIAGRAM):   end;
1203177   +else
1203178   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1203179   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1203180   +end;
MPRINT(EM_DIAGRAM):   end;
1203181   +else
1203182   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1203183   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1203184   +end;
MPRINT(EM_DIAGRAM):   end;
1203185   +else
1203186   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1203187   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1203188   +end;
MPRINT(EM_DIAGRAM):   end;
1203189   +end;
MPRINT(EM_DIAGRAM):   end;
1203190   +
1203191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203192   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1203193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203194   +LABEL GRP_MntWines =
1203195   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1203196   +
1203197   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1203198   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1203199   +end;
MPRINT(EM_DIAGRAM):   end;
1203200   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1203201   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1203202   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1203203   +end;
MPRINT(EM_DIAGRAM):   end;
1203204   +else
1203205   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1203206   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1203207   +end;
MPRINT(EM_DIAGRAM):   end;
1203208   +else
1203209   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1203210   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1203211   +end;
MPRINT(EM_DIAGRAM):   end;
1203212   +else
1203213   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1203214   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1203215   +end;
MPRINT(EM_DIAGRAM):   end;
1203216   +end;
MPRINT(EM_DIAGRAM):   end;
1203217   +
1203218   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203219   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1203220   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203221   +LABEL GRP_NumCatalogPurchases =
1203222   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1203223   +
1203224   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1203225   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1203226   +end;
MPRINT(EM_DIAGRAM):   end;
1203227   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1203228   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1203229   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1203230   +end;
MPRINT(EM_DIAGRAM):   end;
1203231   +else
1203232   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1203233   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1203234   +end;
MPRINT(EM_DIAGRAM):   end;
1203235   +else
1203236   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1203237   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1203238   +end;
MPRINT(EM_DIAGRAM):   end;
1203239   +else
1203240   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1203241   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1203242   +end;
MPRINT(EM_DIAGRAM):   end;
1203243   +end;
MPRINT(EM_DIAGRAM):   end;
1203244   +
1203245   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203246   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1203247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203248   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1203249   +
1203250   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1203251   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1203252   +end;
MPRINT(EM_DIAGRAM):   end;
1203253   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1203254   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1203255   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1203256   +end;
MPRINT(EM_DIAGRAM):   end;
1203257   +else
1203258   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1203259   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1203260   +end;
MPRINT(EM_DIAGRAM):   end;
1203261   +else
1203262   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1203263   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1203264   +end;
MPRINT(EM_DIAGRAM):   end;
1203265   +else
1203266   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1203267   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1203268   +end;
MPRINT(EM_DIAGRAM):   end;
1203269   +end;
MPRINT(EM_DIAGRAM):   end;
1203270   +
1203271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203272   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1203273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203274   +LABEL GRP_NumWebPurchases =
1203275   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1203276   +
1203277   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1203278   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1203279   +end;
MPRINT(EM_DIAGRAM):   end;
1203280   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1203281   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1203282   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1203283   +end;
MPRINT(EM_DIAGRAM):   end;
1203284   +else
1203285   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1203286   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1203287   +end;
MPRINT(EM_DIAGRAM):   end;
1203288   +else
1203289   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1203290   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1203291   +end;
MPRINT(EM_DIAGRAM):   end;
1203292   +else
1203293   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1203294   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1203295   +end;
MPRINT(EM_DIAGRAM):   end;
1203296   +end;
MPRINT(EM_DIAGRAM):   end;
1203297   +
1203298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203299   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1203300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203301   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1203302   +
1203303   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1203304   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1203305   +end;
MPRINT(EM_DIAGRAM):   end;
1203306   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1203307   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1203308   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1203309   +end;
MPRINT(EM_DIAGRAM):   end;
1203310   +else
1203311   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1203312   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1203313   +end;
MPRINT(EM_DIAGRAM):   end;
1203314   +else
1203315   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1203316   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1203317   +end;
MPRINT(EM_DIAGRAM):   end;
1203318   +else
1203319   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1203320   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1203321   +end;
MPRINT(EM_DIAGRAM):   end;
1203322   +end;
MPRINT(EM_DIAGRAM):   end;
1203323   +
1203324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203325   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1203326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203327   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1203328   +
1203329   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1203330   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1203331   +end;
MPRINT(EM_DIAGRAM):   end;
1203332   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1203333   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1203334   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1203335   +end;
MPRINT(EM_DIAGRAM):   end;
1203336   +else
1203337   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1203338   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1203339   +end;
MPRINT(EM_DIAGRAM):   end;
1203340   +else
1203341   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1203342   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1203343   +end;
MPRINT(EM_DIAGRAM):   end;
1203344   +else
1203345   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1203346   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1203347   +end;
MPRINT(EM_DIAGRAM):   end;
1203348   +end;
MPRINT(EM_DIAGRAM):   end;
1203349   +
1203350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203351   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1203352   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203353   +LABEL GRP_Recency =
1203354   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1203355   +
1203356   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1203357   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1203358   +end;
MPRINT(EM_DIAGRAM):   end;
1203359   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1203360   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1203361   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1203362   +end;
MPRINT(EM_DIAGRAM):   end;
1203363   +else
1203364   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1203365   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1203366   +end;
MPRINT(EM_DIAGRAM):   end;
1203367   +else
1203368   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1203369   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1203370   +end;
MPRINT(EM_DIAGRAM):   end;
1203371   +else
1203372   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1203373   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1203374   +end;
MPRINT(EM_DIAGRAM):   end;
1203375   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1203376    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1203377    quit;
1203378    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1203379    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1203380    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1203381    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1203382    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1203383    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203384    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1203385    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203386    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203387    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1203388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203389    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203390    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203391    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1203392    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1203393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203394    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1203395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1203396    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1203397    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203398    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203399    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203400    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1203401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203402    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203403    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1203404    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1203404  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1203405    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203406    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1203407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 70 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203408    filename _pref
1203408  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1203409    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1203410    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1203411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203412   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1203413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1203414   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1203415   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1203416   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1203417    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1203418    quit;
1203419    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1203420    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1203421    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1203422    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1203423    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1203424    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203425    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1203426    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203427    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203428    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1203429    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203430    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203431    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203432    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1203433    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1203434    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203435    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1203436    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1203437    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1203438    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203439    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203440    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203441    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1203442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203443    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203444    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1203445    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1203445  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1203446    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203447    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1203448    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 74 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203449    filename _pref
1203449  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1203450    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1203451    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1203452   +
1203453   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1203454   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1203454  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1203455   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1203456   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1203457   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1203458   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1203459   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1203460    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1203461    quit;
1203462    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1203463    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1203464    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1203465    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1203466    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1203467    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203468    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1203469    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203471    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1203472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203474    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203475    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1203476    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1203477    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203478    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1203479    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203480    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1203481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203482    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203483    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203484    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1203485    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203486    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203487    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1203488    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1203488  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1203489    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203490    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1203491    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 113 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203492    filename _pref
1203492  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1203493    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1203494    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1203495   +
1203496   +
1203497   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1203498   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1203499   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1203500   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1203501   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1203502   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203503   +
1203504   +
1203505   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1203506   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1203507   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1203508   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1203509   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1203510   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203511   +
1203512   +
1203513   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1203514   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1203515   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1203516   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1203517   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1203518   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203519   +
1203520   +
1203521   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1203522   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1203523   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1203524   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1203525   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1203526   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203527   +
1203528   +
1203529   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1203530   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1203531   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1203532   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1203533   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1203534   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203535   +
1203536   +
1203537   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1203538   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1203539   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1203540   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1203541   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1203542   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203543   +
1203544   +
1203545   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1203546   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1203547   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1203548   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1203549   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1203550   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203551   +
1203552   +
1203553   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1203554   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1203555   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1203556   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1203557   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1203558   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1203559   +if
1203560   +_FILTERNORM1 not in ( '.')
1203561   + and
1203562   +_FILTERNORM2 not in ( '.')
1203563   + and
1203564   +_FILTERNORM3 not in ( '.')
1203565   + and
1203566   +_FILTERNORM4 not in ( '.')
1203567   + and
1203568   +_FILTERNORM5 not in ( '.')
1203569   + and
1203570   +_FILTERNORM6 not in ( '.')
1203571   + and
1203572   +_FILTERNORM7 not in ( ' ')
1203573   + and
1203574   +_FILTERNORM8 not in ( ' ')
1203575   +and
1203576   +( Dt_Customer ne .)
1203577   +and ( Income ne . and (Income<=107000))
1203578   +and ( Kidhome ne .)
1203579   +and ( MntFishProducts ne .)
1203580   +and ( MntFruits ne .)
1203581   +and ( MntGoldProds ne .)
1203582   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1203583   +and ( MntSweetProducts ne .)
1203584   +and ( MntWines ne .)
1203585   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1203586   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1203587   +and ( NumStorePurchases ne .)
1203588   +and ( NumWebPurchases ne .)
1203589   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1203590   +and ( Recency ne .)
1203591   +and ( Teenhome ne .)
1203592   +and ( Year_Birth ne .)
1203593   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1203594   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1203595   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1203596   +end;
MPRINT(EM_DIAGRAM):   end;
1203597   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1203598   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1203599    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1203600    quit;
1203601    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1203602    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1203603    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1203604    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1203605    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1203606    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203607    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1203608    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203609    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203610    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1203611    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203613    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203614    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1203615    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1203616    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203617    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1203618    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1203619    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1203620    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203621    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203622    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1203623    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1203624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1203625    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203626    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1203627    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1203627  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1203628    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203629    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1203630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 179 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1203631    %macro varDept(fcmpdata=,id=);
1203632    %global nobs&id scoreFlag&id;
1203633    %let scoreFlag&id = 0;
1203634    %if &id=1 or ^&fcmpStart %then %do;
1203635    proc sort data=&fcmpdata out=_temp&id nodupkey;
1203636    by NAME;
1203637    where id=&id and LHS in( %let j=1;
1203638    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1203639    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1203640    "&var" %let j = %eval(&j+1);
1203641    %end;
1203642    );
1203643    run;
1203644    %let dsid = %sysfunc(open(_temp&id));
1203645    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1203646    %let dsid = %sysfunc(close(&dsid));
1203647    %if &&nobs&id %then %do;
1203648    %let scoreFlag&id = 1;
1203649    %let fcmpStart = 1;
1203650    %end;
1203651    %else %let fcmpStart = 0;
1203652    %end;
1203653    %else %do;
1203654    proc sort data=&fcmpdata out=_tempid;
1203655    where id=&id;
1203656    by LHS;
1203657    run;
1203658    %let dsid = %sysfunc(open(_tempid));
1203659    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1203660    %let dsid = %sysfunc(close(&dsid));
1203661    %if ^&&nobs&id %then %do;
1203662    proc datasets lib=work nolist;
1203663    delete _tempid;
1203664    run;
1203665    quit;
1203666    %end;
1203667    %else %do;
1203668    data _tempAll;
1203669    set %let j=%eval(&id-1);
1203670    %do x=1 %to &j;
1203671    %if &&nobs&x %then %do;
1203672    _temp&x %end;
1203673    %end;
1203674    ;
1203675    run;
1203676    proc sql;
1203677    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1203677  ! work._tempid p2 where p.name=p2.lhs;
1203678    quit;
1203679    data _temp&id;
1203680    set _temp&id;
1203681    where LHS ne '' and NAME ne '' and Node ne '';
1203682    run;
1203683    proc datasets lib=work nolist;
1203684    delete _tempAll;
1203685    run;
1203686    %let dsid = %sysfunc(open(_temp&id));
1203687    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1203688    %let dsid = %sysfunc(close(&dsid));
1203689    %if ^&&nobs&id %then %do;
1203690    proc datasets lib=work nolist;
1203691    delete _temp&id;
1203692    run;
1203693    quit;
1203694    %end;
1203695    %else %do;
1203696    %let scoreFlag&id = 1;
1203697    data _temp&id;
1203698    set _temp&id;
1203699    where LHS ne NAME and node ne '';
1203700    run;
1203701    %let dsid = %sysfunc(open(_temp&id));
1203702    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1203703    %let dsid = %sysfunc(close(&dsid));
1203704    %if ^&&nobs&id %then %do;
1203705    proc datasets lib=work nolist;
1203706    delete _temp&id;
1203707    run;
1203708    quit;
1203709    %end;
1203710    %else %do;
1203711    proc sort data=_temp&id nodupkey;
1203712    by LHS NAME;
1203713    run;
1203714    %end;
1203715    %end;
1203716    %end;
1203717    %end;
1203718    %mend varDept;
1203719    %macro optCode(outdata=fcmpdata);
1203720    %global fcmpStart;
1203721    %let fcmpStart = 0;
1203722    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1203723    %let NumNodes=9;
1203724    %do k=1 %to &NumNodes;
1203725    %vardept(fcmpdata=&outdata, id=&k);
1203726    %end;
1203727    %mend optCode;
1203728    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 10 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 5 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 5 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 5 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 10 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 12 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 12 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 5 observations read from the data set WORK._TEMP2.
NOTE: There were 5 observations read from the data set WORK._TEMP3.
NOTE: There were 12 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 22 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1203729    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1203730    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1203731    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1203732    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203733    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1203734    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1203735    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1203736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203737    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1203738    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1203738  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 5 rows and 3 columns.

1203739    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1203740    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1203741    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1203742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 5 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1203743    filename _pref
1203743  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
1203744    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1203745    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas.
1203746   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1203747   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1203748   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1203749   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1203750   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1203751   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1203752   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1203753   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1203754   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1203755   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1203756   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1203757   +LENGTH _WARN_ $4
1203758   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1203759   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1203760   +
1203761   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1203762   +
1203763   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1203764   +
1203765   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1203766   +
1203767   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1203768   +
1203769   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1203770   +
1203771   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1203772   +
1203773   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1203774   +
1203775   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1203776   +
1203777   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1203778   +
1203779   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1203780   +
1203781   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1203782   +
1203783   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1203784   +
1203785   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1203786   +
1203787   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1203788   +
1203789   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1203790   +
1203791   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1203792   +
1203793   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1203794   +
1203795   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1203796   +
1203797   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1203798   +
1203799   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1203800   +
1203801   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1203802   +
1203803   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1203804   +
1203805   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1203806   +
1203807   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1203808   +
1203809   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1203810   +
1203811   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1203812   +
1203813   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1203814   +
1203815   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1203816   +
1203817   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1203818   +
1203819   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1203820   +
1203821   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1203822   +
1203823   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1203824   +
1203825   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1203826   +
1203827   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1203828   +
1203829   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1203830   +
1203831   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1203832   +
1203833   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1203834   +
1203835   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1203836   +
1203837   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1203838   +
1203839   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1203840   +
1203841   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1203842   +
1203843   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1203844   +
1203845   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1203846   +
1203847   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1203848   +
1203849   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1203850   +
1203851   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1203852   +
1203853   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1203854   +
1203855   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1203856   +
1203857   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1203858   +
1203859   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1203860   +
1203861   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1203862   +
1203863   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1203864   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1203865   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1203866   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1203867   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203869   +end;
MPRINT(EM_DIAGRAM):   end;
1203870   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203871   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203872   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1203873   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203874   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1203875   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1203876   +   end;
MPRINT(EM_DIAGRAM):   end;
1203877   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1203878   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1203879   +   end;
MPRINT(EM_DIAGRAM):   end;
1203880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203881   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1203882   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203883   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203884   +   end;
MPRINT(EM_DIAGRAM):   end;
1203885   +end;
MPRINT(EM_DIAGRAM):   end;
1203886   +
1203887   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1203888   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1203889   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1203890   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1203891   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1203892   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1203893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203895   +end;
MPRINT(EM_DIAGRAM):   end;
1203896   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203898   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1203899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203900   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1203901   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1203902   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1203903   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1203904   +   end;
MPRINT(EM_DIAGRAM):   end;
1203905   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1203906   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1203907   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1203908   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1203909   +   end;
MPRINT(EM_DIAGRAM):   end;
1203910   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1203911   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1203912   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1203913   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1203914   +   end;
MPRINT(EM_DIAGRAM):   end;
1203915   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1203916   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1203917   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1203918   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1203919   +   end;
MPRINT(EM_DIAGRAM):   end;
1203920   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203921   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1203922   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1203923   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1203924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203926   +   end;
MPRINT(EM_DIAGRAM):   end;
1203927   +end;
MPRINT(EM_DIAGRAM):   end;
1203928   +
1203929   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1203930   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1203931   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1203932   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1203933   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1203934   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1203935   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203936   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203937   +end;
MPRINT(EM_DIAGRAM):   end;
1203938   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203939   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203940   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1203941   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203942   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1203943   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1203944   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1203945   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1203946   +   end;
MPRINT(EM_DIAGRAM):   end;
1203947   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1203948   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1203949   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1203950   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1203951   +   end;
MPRINT(EM_DIAGRAM):   end;
1203952   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1203953   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1203954   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1203955   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1203956   +   end;
MPRINT(EM_DIAGRAM):   end;
1203957   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1203958   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1203959   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1203960   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1203961   +   end;
MPRINT(EM_DIAGRAM):   end;
1203962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1203963   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1203964   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1203965   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1203966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1203967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203968   +   end;
MPRINT(EM_DIAGRAM):   end;
1203969   +end;
MPRINT(EM_DIAGRAM):   end;
1203970   +
1203971   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1203972   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1203973   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1203974   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1203975   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1203976   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1203977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1203978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1203979   +end;
MPRINT(EM_DIAGRAM):   end;
1203980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1203981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1203982   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1203983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1203984   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1203985   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1203986   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1203987   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1203988   +   end;
MPRINT(EM_DIAGRAM):   end;
1203989   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1203990   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1203991   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1203992   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1203993   +   end;
MPRINT(EM_DIAGRAM):   end;
1203994   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1203995   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1203996   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1203997   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1203998   +   end;
MPRINT(EM_DIAGRAM):   end;
1203999   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204000   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1204001   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1204002   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1204003   +   end;
MPRINT(EM_DIAGRAM):   end;
1204004   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204005   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1204006   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1204007   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1204008   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204009   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204010   +   end;
MPRINT(EM_DIAGRAM):   end;
1204011   +end;
MPRINT(EM_DIAGRAM):   end;
1204012   +
1204013   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1204014   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1204015   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1204016   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1204017   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1204018   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1204019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204021   +end;
MPRINT(EM_DIAGRAM):   end;
1204022   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204023   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204024   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1204025   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204026   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1204027   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1204028   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1204029   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1204030   +   end;
MPRINT(EM_DIAGRAM):   end;
1204031   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204032   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1204033   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1204034   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1204035   +   end;
MPRINT(EM_DIAGRAM):   end;
1204036   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204037   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1204038   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1204039   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1204040   +   end;
MPRINT(EM_DIAGRAM):   end;
1204041   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204042   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1204043   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1204044   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1204045   +   end;
MPRINT(EM_DIAGRAM):   end;
1204046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204047   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1204048   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1204049   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1204050   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204051   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204052   +   end;
MPRINT(EM_DIAGRAM):   end;
1204053   +end;
MPRINT(EM_DIAGRAM):   end;
1204054   +
1204055   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1204056   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1204057   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1204058   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1204059   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1204060   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1204061   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204062   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204063   +end;
MPRINT(EM_DIAGRAM):   end;
1204064   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204065   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204066   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1204067   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204068   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1204069   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1204070   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1204071   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1204072   +   end;
MPRINT(EM_DIAGRAM):   end;
1204073   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204074   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1204075   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1204076   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1204077   +   end;
MPRINT(EM_DIAGRAM):   end;
1204078   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204079   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1204080   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1204081   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1204082   +   end;
MPRINT(EM_DIAGRAM):   end;
1204083   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204084   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1204085   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1204086   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1204087   +   end;
MPRINT(EM_DIAGRAM):   end;
1204088   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204089   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1204090   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1204091   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1204092   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204093   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204094   +   end;
MPRINT(EM_DIAGRAM):   end;
1204095   +end;
MPRINT(EM_DIAGRAM):   end;
1204096   +
1204097   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1204098   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1204099   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1204100   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1204101   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1204102   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1204103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204105   +end;
MPRINT(EM_DIAGRAM):   end;
1204106   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204108   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1204109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204110   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1204111   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1204112   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1204113   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1204114   +   end;
MPRINT(EM_DIAGRAM):   end;
1204115   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204116   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1204117   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1204118   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1204119   +   end;
MPRINT(EM_DIAGRAM):   end;
1204120   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204121   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1204122   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1204123   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1204124   +   end;
MPRINT(EM_DIAGRAM):   end;
1204125   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204126   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1204127   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1204128   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1204129   +   end;
MPRINT(EM_DIAGRAM):   end;
1204130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204131   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1204132   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1204133   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1204134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204136   +   end;
MPRINT(EM_DIAGRAM):   end;
1204137   +end;
MPRINT(EM_DIAGRAM):   end;
1204138   +
1204139   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1204140   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1204141   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1204142   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1204143   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1204144   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1204145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204147   +end;
MPRINT(EM_DIAGRAM):   end;
1204148   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204150   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1204151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204152   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1204153   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1204154   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1204155   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1204156   +   end;
MPRINT(EM_DIAGRAM):   end;
1204157   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204158   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1204159   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1204160   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1204161   +   end;
MPRINT(EM_DIAGRAM):   end;
1204162   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204163   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1204164   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1204165   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1204166   +   end;
MPRINT(EM_DIAGRAM):   end;
1204167   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204168   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1204169   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1204170   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1204171   +   end;
MPRINT(EM_DIAGRAM):   end;
1204172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204173   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1204174   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1204175   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1204176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204178   +   end;
MPRINT(EM_DIAGRAM):   end;
1204179   +end;
MPRINT(EM_DIAGRAM):   end;
1204180   +
1204181   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1204182   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1204183   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1204184   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1204185   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1204186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204188   +end;
MPRINT(EM_DIAGRAM):   end;
1204189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204191   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1204192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204193   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1204194   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1204195   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1204196   +   end;
MPRINT(EM_DIAGRAM):   end;
1204197   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204198   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1204199   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1204200   +   end;
MPRINT(EM_DIAGRAM):   end;
1204201   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204202   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1204203   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1204204   +   end;
MPRINT(EM_DIAGRAM):   end;
1204205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204206   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1204207   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1204208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204210   +   end;
MPRINT(EM_DIAGRAM):   end;
1204211   +end;
MPRINT(EM_DIAGRAM):   end;
1204212   +
1204213   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1204214   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1204215   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1204216   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1204217   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1204218   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1204219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204221   +end;
MPRINT(EM_DIAGRAM):   end;
1204222   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204224   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1204225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204226   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1204227   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1204228   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1204229   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1204230   +   end;
MPRINT(EM_DIAGRAM):   end;
1204231   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204232   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1204233   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1204234   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1204235   +   end;
MPRINT(EM_DIAGRAM):   end;
1204236   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204237   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1204238   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1204239   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1204240   +   end;
MPRINT(EM_DIAGRAM):   end;
1204241   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1204242   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1204243   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1204244   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1204245   +   end;
MPRINT(EM_DIAGRAM):   end;
1204246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204247   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1204248   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1204249   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1204250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204252   +   end;
MPRINT(EM_DIAGRAM):   end;
1204253   +end;
MPRINT(EM_DIAGRAM):   end;
1204254   +
1204255   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1204256   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1204257   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1204258   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1204259   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1204260   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1204261   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204262   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204263   +end;
MPRINT(EM_DIAGRAM):   end;
1204264   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204265   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204266   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1204267   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204268   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1204269   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1204270   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1204271   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1204272   +   end;
MPRINT(EM_DIAGRAM):   end;
1204273   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204274   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1204275   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1204276   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1204277   +   end;
MPRINT(EM_DIAGRAM):   end;
1204278   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204279   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1204280   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1204281   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1204282   +   end;
MPRINT(EM_DIAGRAM):   end;
1204283   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204284   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1204285   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1204286   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1204287   +   end;
MPRINT(EM_DIAGRAM):   end;
1204288   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204289   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1204290   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1204291   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1204292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204294   +   end;
MPRINT(EM_DIAGRAM):   end;
1204295   +end;
MPRINT(EM_DIAGRAM):   end;
1204296   +
1204297   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1204298   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1204299   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1204300   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1204301   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1204302   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1204303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204305   +end;
MPRINT(EM_DIAGRAM):   end;
1204306   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204307   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204308   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1204309   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204310   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1204311   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1204312   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1204313   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1204314   +   end;
MPRINT(EM_DIAGRAM):   end;
1204315   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1204316   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1204317   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1204318   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1204319   +   end;
MPRINT(EM_DIAGRAM):   end;
1204320   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204321   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1204322   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1204323   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1204324   +   end;
MPRINT(EM_DIAGRAM):   end;
1204325   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204326   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1204327   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1204328   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1204329   +   end;
MPRINT(EM_DIAGRAM):   end;
1204330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204331   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1204332   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1204333   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1204334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204336   +   end;
MPRINT(EM_DIAGRAM):   end;
1204337   +end;
MPRINT(EM_DIAGRAM):   end;
1204338   +
1204339   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1204340   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1204341   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1204342   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1204343   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1204344   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1204345   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204347   +end;
MPRINT(EM_DIAGRAM):   end;
1204348   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204349   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204350   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1204351   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204352   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1204353   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1204354   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1204355   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1204356   +   end;
MPRINT(EM_DIAGRAM):   end;
1204357   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1204358   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1204359   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1204360   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1204361   +   end;
MPRINT(EM_DIAGRAM):   end;
1204362   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204363   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1204364   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1204365   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1204366   +   end;
MPRINT(EM_DIAGRAM):   end;
1204367   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204368   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1204369   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1204370   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1204371   +   end;
MPRINT(EM_DIAGRAM):   end;
1204372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204373   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1204374   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1204375   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1204376   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204377   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204378   +   end;
MPRINT(EM_DIAGRAM):   end;
1204379   +end;
MPRINT(EM_DIAGRAM):   end;
1204380   +
1204381   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1204382   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1204383   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1204384   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1204385   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1204386   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1204387   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1204388   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204389   +end;
MPRINT(EM_DIAGRAM):   end;
1204390   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204391   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1204392   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1204393   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1204394   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1204395   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1204396   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1204397   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1204398   +   end;
MPRINT(EM_DIAGRAM):   end;
1204399   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1204400   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1204401   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1204402   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1204403   +   end;
MPRINT(EM_DIAGRAM):   end;
1204404   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1204405   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1204406   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1204407   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1204408   +   end;
MPRINT(EM_DIAGRAM):   end;
1204409   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1204410   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1204411   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1204412   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1204413   +   end;
MPRINT(EM_DIAGRAM):   end;
1204414   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1204415   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1204416   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1204417   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1204418   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1204419   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204420   +   end;
MPRINT(EM_DIAGRAM):   end;
1204421   +end;
MPRINT(EM_DIAGRAM):   end;
1204422   +
1204423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204424   +*** Checking missing input Interval
1204425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1204426   +
1204427   +IF NMISS(
1204428   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1204429   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1204430   +
1204431   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1204432   +END;
MPRINT(EM_DIAGRAM):   END;
1204433   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204434   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1204435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204436   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204437   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1204438   +END;
MPRINT(EM_DIAGRAM):   END;
1204439   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204440   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1204441   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1204442   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1204443   +END;
MPRINT(EM_DIAGRAM):   END;
1204444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204445   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1204446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204448   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1204449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204450   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204451   +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
1204452   +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
1204453   +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
1204454   +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
1204455   +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
1204456   +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
1204457   +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
1204458   +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
1204459   +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
1204460   +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
1204461   +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
1204462   +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
1204463   +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
1204464   +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
1204465   +          +    -0.04697385312971 * GRP_MntFishProducts3
1204466   +          +     0.05477300056491 * GRP_MntFishProducts4
1204467   +          +    -0.21182877070793 * GRP_MntGoldProds2
1204468   +          +    -0.06202001203906 * GRP_MntGoldProds3
1204469   +          +    -0.23297283739715 * GRP_MntGoldProds4
1204470   +          +    -0.27072080481215 * GRP_MntMeatProducts2
1204471   +          +     -0.0879595975531 * GRP_MntMeatProducts3
1204472   +          +     0.01711044358319 * GRP_MntMeatProducts4
1204473   +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
1204474   +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
1204475   +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
1204476   +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
1204477   +          +     0.11565917560156 * GRP_NumDistPurchases2
1204478   +          +      0.1678532898895 * GRP_NumDistPurchases3
1204479   +          +     -0.0338568889009 * GRP_NumDistPurchases4
1204480   +          +     0.09970745707934 * GRP_NumWebPurchases2
1204481   +          +     0.02961221360107 * GRP_NumWebPurchases3
1204482   +          +     0.02261054892411 * GRP_NumWebPurchases4
1204483   +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
1204484   +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
1204485   +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
1204486   +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
1204487   +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
1204488   +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 * 
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 * 
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 + 
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 + 
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 + 
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 + 
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 + 
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 + 
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741 
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 * 
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 * 
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 * 
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 * 
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 * 
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 + 
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 * 
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 + 
-0.07522056103469 * GRP_Recency4 ;
1204489   +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
1204490   +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
1204491   +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
1204492   +        GRP_Income2  +       0.757675062227 * GRP_Income3
1204493   +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
1204494   +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
1204495   +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
1204496   +          +     0.26645530981311 * GRP_MntFishProducts3
1204497   +          +    -0.17631072283513 * GRP_MntFishProducts4
1204498   +          +    -0.35439521021691 * GRP_MntGoldProds2
1204499   +          +     0.11419663880206 * GRP_MntGoldProds3
1204500   +          +     0.07288749113866 * GRP_MntGoldProds4
1204501   +          +    -0.52191822126159 * GRP_MntMeatProducts2
1204502   +          +    -0.08421627788812 * GRP_MntMeatProducts3
1204503   +          +    -0.15930642038763 * GRP_MntMeatProducts4
1204504   +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
1204505   +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
1204506   +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
1204507   +          +     0.28574938745998 * GRP_NumCatalogPurchases4
1204508   +          +     -0.4878996299474 * GRP_NumDistPurchases2
1204509   +          +     0.10139595392447 * GRP_NumDistPurchases3
1204510   +          +     0.05251891244468 * GRP_NumDistPurchases4
1204511   +          +    -0.18486003226007 * GRP_NumWebPurchases2
1204512   +          +      0.0263831646971 * GRP_NumWebPurchases3
1204513   +          +     0.26495059708503 * GRP_NumWebPurchases4
1204514   +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
1204515   +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
1204516   +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
1204517   +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
1204518   +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
1204519   +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 * 
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 * 
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 + 
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 + 
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 + 
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 + 
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 + 
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 + 
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123 
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 * 
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 * 
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 * 
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 * 
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 * 
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 + 
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 * 
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 + 
-0.4970729472837 * GRP_Recency4 ;
1204520   +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
1204521   +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
1204522   +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
1204523   +        GRP_Income2  +     0.00732780844057 * GRP_Income3
1204524   +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
1204525   +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
1204526   +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
1204527   +          +     0.02714802509094 * GRP_MntFishProducts3
1204528   +          +     0.27119078554613 * GRP_MntFishProducts4
1204529   +          +     0.19322428614339 * GRP_MntGoldProds2
1204530   +          +     0.34778546410632 * GRP_MntGoldProds3
1204531   +          +    -0.06570146779096 * GRP_MntGoldProds4
1204532   +          +     0.44935275650977 * GRP_MntMeatProducts2
1204533   +          +     0.00805794344265 * GRP_MntMeatProducts3
1204534   +          +     0.02445782833023 * GRP_MntMeatProducts4
1204535   +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
1204536   +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
1204537   +          +     0.33901531634752 * GRP_NumCatalogPurchases3
1204538   +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
1204539   +          +     0.03481806823908 * GRP_NumDistPurchases2
1204540   +          +      0.0546202479864 * GRP_NumDistPurchases3
1204541   +          +    -0.05240296080421 * GRP_NumDistPurchases4
1204542   +          +     0.28307550964921 * GRP_NumWebPurchases2
1204543   +          +     0.31503543231591 * GRP_NumWebPurchases3
1204544   +          +     0.24817135719308 * GRP_NumWebPurchases4
1204545   +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
1204546   +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
1204547   +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
1204548   +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
1204549   +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
1204550   +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 * 
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 * 
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 + 
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 + 
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 + 
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 + 
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 + 
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 + 
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 + 
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 * 
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 * 
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 * 
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 * 
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 * 
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 + 
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 * 
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 + 
0.05823801065489 * GRP_Recency4 ;
1204551   +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
1204552   +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
1204553   +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
1204554   +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
1204555   +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
1204556   +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
1204557   +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
1204558   +          +    -0.08997232581072 * GRP_MntFishProducts3
1204559   +          +    -0.05669599356928 * GRP_MntFishProducts4
1204560   +          +      0.2199150131909 * GRP_MntGoldProds2
1204561   +          +     0.05584571259838 * GRP_MntGoldProds3
1204562   +          +    -0.13160142309505 * GRP_MntGoldProds4
1204563   +          +      0.2539849640816 * GRP_MntMeatProducts2
1204564   +          +     0.29448191059312 * GRP_MntMeatProducts3
1204565   +          +    -0.33946200154351 * GRP_MntMeatProducts4
1204566   +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
1204567   +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
1204568   +          +     0.35913140014848 * GRP_NumCatalogPurchases3
1204569   +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
1204570   +          +     0.38206153529506 * GRP_NumDistPurchases2
1204571   +          +     0.08642998303162 * GRP_NumDistPurchases3
1204572   +          +    -0.00375635377885 * GRP_NumDistPurchases4
1204573   +          +    -0.04352529411419 * GRP_NumWebPurchases2
1204574   +          +    -0.17285172586868 * GRP_NumWebPurchases3
1204575   +          +     0.23030028338396 * GRP_NumWebPurchases4
1204576   +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
1204577   +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
1204578   +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
1204579   +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
1204580   +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
1204581   +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 * 
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 * 
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 + 
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 + 
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 + 
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 + 
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816 
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 * 
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 + 
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 + 
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 + 
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 + 
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 + 
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062 
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 + 
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 * 
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
1204582   +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
1204583   +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
1204584   +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
1204585   +        GRP_Income2  +     0.01909378686442 * GRP_Income3
1204586   +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
1204587   +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
1204588   +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
1204589   +          +    -0.04439366722112 * GRP_MntFishProducts3
1204590   +          +    -0.22939355735301 * GRP_MntFishProducts4
1204591   +          +    -0.00367144103801 * GRP_MntGoldProds2
1204592   +          +      -0.033315128385 * GRP_MntGoldProds3
1204593   +          +     0.10655545066126 * GRP_MntGoldProds4
1204594   +          +     0.04927093675686 * GRP_MntMeatProducts2
1204595   +          +    -0.20156680946257 * GRP_MntMeatProducts3
1204596   +          +     0.29394273234417 * GRP_MntMeatProducts4
1204597   +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
1204598   +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
1204599   +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
1204600   +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
1204601   +          +    -0.42285816542086 * GRP_NumDistPurchases2
1204602   +          +     -0.1008716650505 * GRP_NumDistPurchases3
1204603   +          +    -0.42793112700917 * GRP_NumDistPurchases4
1204604   +          +    -0.06792665579186 * GRP_NumWebPurchases2
1204605   +          +     0.37113277513001 * GRP_NumWebPurchases3
1204606   +          +     0.05720653023952 * GRP_NumWebPurchases4
1204607   +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
1204608   +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
1204609   +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
1204610   +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
1204611   +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
1204612   +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 * 
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 * 
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 + 
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 + 
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 + 
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 + 
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686 
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 * 
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 + 
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 + 
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 + 
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 + 
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 + 
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842 
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 + 
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 * 
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
1204613   +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
1204614   +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
1204615   +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
1204616   +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
1204617   +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
1204618   +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
1204619   +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
1204620   +          +     0.04340555393469 * GRP_MntFishProducts3
1204621   +          +    -0.20048219926361 * GRP_MntFishProducts4
1204622   +          +     0.16101452165456 * GRP_MntGoldProds2
1204623   +          +    -0.04467647211336 * GRP_MntGoldProds3
1204624   +          +     0.32142013598241 * GRP_MntGoldProds4
1204625   +          +     0.29741565154233 * GRP_MntMeatProducts2
1204626   +          +    -0.00264678222241 * GRP_MntMeatProducts3
1204627   +          +    -0.11596499325048 * GRP_MntMeatProducts4
1204628   +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
1204629   +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
1204630   +          +     0.80854583627117 * GRP_NumCatalogPurchases3
1204631   +          +     0.14001888431357 * GRP_NumCatalogPurchases4
1204632   +          +     0.36107050137299 * GRP_NumDistPurchases2
1204633   +          +    -0.10375572120121 * GRP_NumDistPurchases3
1204634   +          +     0.10557004956787 * GRP_NumDistPurchases4
1204635   +          +     0.04608069099876 * GRP_NumWebPurchases2
1204636   +          +     0.15561947954396 * GRP_NumWebPurchases3
1204637   +          +    -0.01081470092004 * GRP_NumWebPurchases4
1204638   +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
1204639   +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
1204640   +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
1204641   +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
1204642   +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
1204643   +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 * 
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 * 
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 + 
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 + 
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 + 
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 + 
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 + 
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 + 
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 + 
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 * 
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 * 
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 * 
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 * 
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 * 
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 + 
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 * 
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 + 
-0.0282277663071 * GRP_Recency4 ;
1204644   +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
1204645   +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
1204646   +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
1204647   +        GRP_Income2  +     0.02965579603049 * GRP_Income3
1204648   +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
1204649   +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
1204650   +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
1204651   +          +    -0.20032703571491 * GRP_MntFishProducts3
1204652   +          +    -0.08348811352746 * GRP_MntFishProducts4
1204653   +          +    -0.00744131870881 * GRP_MntGoldProds2
1204654   +          +    -0.27347309859096 * GRP_MntGoldProds3
1204655   +          +    -0.04458870469416 * GRP_MntGoldProds4
1204656   +          +     0.17538261434498 * GRP_MntMeatProducts2
1204657   +          +    -0.08059547298843 * GRP_MntMeatProducts3
1204658   +          +     0.03113249898233 * GRP_MntMeatProducts4
1204659   +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
1204660   +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
1204661   +          +     0.13919784888607 * GRP_NumCatalogPurchases3
1204662   +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
1204663   +          +     0.20540014620209 * GRP_NumDistPurchases2
1204664   +          +     0.17744784873298 * GRP_NumDistPurchases3
1204665   +          +      -0.003486430833 * GRP_NumDistPurchases4
1204666   +          +    -0.04863967797645 * GRP_NumWebPurchases2
1204667   +          +     0.07245829152192 * GRP_NumWebPurchases3
1204668   +          +    -0.27395606297099 * GRP_NumWebPurchases4
1204669   +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
1204670   +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
1204671   +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
1204672   +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
1204673   +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
1204674   +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 * 
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 * 
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 + 
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 + 
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 + 
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 + 
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 + 
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 + 
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 + 
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 * 
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 * 
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 * 
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 * 
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 * 
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 + 
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 * 
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 + 
-0.0157357289132 * GRP_Recency4 ;
1204675   +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
1204676   +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
1204677   +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
1204678   +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
1204679   +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
1204680   +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
1204681   +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
1204682   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1204683   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1204684   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1204685   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1204686   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1204687   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1204688   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1204689   +END;
MPRINT(EM_DIAGRAM):   END;
1204690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204691   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1204692   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1204693   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1204694   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1204695   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1204696   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1204697   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1204698   +END;
MPRINT(EM_DIAGRAM):   END;
1204699   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204700   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1204701   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204702   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1204703   +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
1204704   +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
1204705   +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
1204706   +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 + 
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746 
* H16 + -0.29329090231091 * H17 ;
1204707   +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
1204708   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1204709   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1204710   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1204711   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1204712   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1204713   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1204714   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1204715   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1204716   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1204717   +END;
MPRINT(EM_DIAGRAM):   END;
1204718   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1204719   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1204720   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1204721   +END;
MPRINT(EM_DIAGRAM):   END;
1204722   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1204723   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1204724   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1204725   +END;
MPRINT(EM_DIAGRAM):   END;
1204726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204727   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1204728   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1204729   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1204730   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1204731   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1204732   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1204733   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1204734   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1204735   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1204736   +END;
MPRINT(EM_DIAGRAM):   END;
1204737   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204738   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1204739   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1204740   +drop
1204741   +H11
1204742   +H12
1204743   +H13
1204744   +H14
1204745   +H15
1204746   +H16
1204747   +H17
1204748   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1204749   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1204750    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1204751    quit;
1204752    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1204753    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1204754    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1204755    retain ID 2 Node "Neural18";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural18";
1204756    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1204757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204758    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1204759    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1204760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1204761    proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
1204762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1204763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL18_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204764    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1204765    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1204766    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1204767    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1204768    proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
1204769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1204770    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1204771    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1204772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204773    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1204774    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1204775    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1204776    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204777    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1204778    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1204778  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 985 rows and 5 columns.

1204779    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1204780    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1204781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 985 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 985 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1204782    filename _pref
1204782  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1204783    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1204784    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1204785   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1204786   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1204787   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1204788   +
1204789   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204790   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1204791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204792   +LABEL GRP_AcceptedCmp5 =
1204793   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1204794   +
1204795   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1204796   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1204797   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1204798   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1204799   +end;
MPRINT(EM_DIAGRAM):   end;
1204800   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1204801   +if (_UFORMAT eq '0'
1204802   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1204803   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1204804   +end;
MPRINT(EM_DIAGRAM):   end;
1204805   +else
1204806   +if (_UFORMAT eq '1'
1204807   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1204808   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1204809   +end;
MPRINT(EM_DIAGRAM):   end;
1204810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1204811   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1204812   +end;
MPRINT(EM_DIAGRAM):   end;
1204813   +end;
MPRINT(EM_DIAGRAM):   end;
1204814   +
1204815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204816   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1204817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204818   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1204819   +
1204820   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1204821   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1204822   +end;
MPRINT(EM_DIAGRAM):   end;
1204823   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1204824   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1204825   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1204826   +end;
MPRINT(EM_DIAGRAM):   end;
1204827   +else
1204828   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1204829   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1204830   +end;
MPRINT(EM_DIAGRAM):   end;
1204831   +else
1204832   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1204833   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1204834   +end;
MPRINT(EM_DIAGRAM):   end;
1204835   +else
1204836   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1204837   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1204838   +end;
MPRINT(EM_DIAGRAM):   end;
1204839   +end;
MPRINT(EM_DIAGRAM):   end;
1204840   +
1204841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204842   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1204843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204844   +LABEL GRP_Income =
1204845   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1204846   +
1204847   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1204848   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1204849   +end;
MPRINT(EM_DIAGRAM):   end;
1204850   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1204851   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1204852   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1204853   +end;
MPRINT(EM_DIAGRAM):   end;
1204854   +else
1204855   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1204856   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1204857   +end;
MPRINT(EM_DIAGRAM):   end;
1204858   +else
1204859   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1204860   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1204861   +end;
MPRINT(EM_DIAGRAM):   end;
1204862   +else
1204863   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1204864   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1204865   +end;
MPRINT(EM_DIAGRAM):   end;
1204866   +end;
MPRINT(EM_DIAGRAM):   end;
1204867   +
1204868   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204869   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1204870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204871   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1204872   +
1204873   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1204874   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1204875   +end;
MPRINT(EM_DIAGRAM):   end;
1204876   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1204877   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1204878   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1204879   +end;
MPRINT(EM_DIAGRAM):   end;
1204880   +else
1204881   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1204882   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1204883   +end;
MPRINT(EM_DIAGRAM):   end;
1204884   +else
1204885   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1204886   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1204887   +end;
MPRINT(EM_DIAGRAM):   end;
1204888   +else
1204889   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1204890   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1204891   +end;
MPRINT(EM_DIAGRAM):   end;
1204892   +end;
MPRINT(EM_DIAGRAM):   end;
1204893   +
1204894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204895   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1204896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204897   +LABEL GRP_MntFishProducts =
1204898   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1204899   +
1204900   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1204901   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1204902   +end;
MPRINT(EM_DIAGRAM):   end;
1204903   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1204904   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1204905   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1204906   +end;
MPRINT(EM_DIAGRAM):   end;
1204907   +else
1204908   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1204909   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1204910   +end;
MPRINT(EM_DIAGRAM):   end;
1204911   +else
1204912   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1204913   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1204914   +end;
MPRINT(EM_DIAGRAM):   end;
1204915   +else
1204916   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1204917   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1204918   +end;
MPRINT(EM_DIAGRAM):   end;
1204919   +end;
MPRINT(EM_DIAGRAM):   end;
1204920   +
1204921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204922   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1204923   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204924   +LABEL GRP_MntGoldProds =
1204925   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1204926   +
1204927   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1204928   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1204929   +end;
MPRINT(EM_DIAGRAM):   end;
1204930   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1204931   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1204932   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1204933   +end;
MPRINT(EM_DIAGRAM):   end;
1204934   +else
1204935   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1204936   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1204937   +end;
MPRINT(EM_DIAGRAM):   end;
1204938   +else
1204939   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1204940   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1204941   +end;
MPRINT(EM_DIAGRAM):   end;
1204942   +else
1204943   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1204944   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1204945   +end;
MPRINT(EM_DIAGRAM):   end;
1204946   +end;
MPRINT(EM_DIAGRAM):   end;
1204947   +
1204948   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204949   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1204950   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204951   +LABEL GRP_MntMeatProducts =
1204952   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1204953   +
1204954   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1204955   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1204956   +end;
MPRINT(EM_DIAGRAM):   end;
1204957   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1204958   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1204959   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1204960   +end;
MPRINT(EM_DIAGRAM):   end;
1204961   +else
1204962   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1204963   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1204964   +end;
MPRINT(EM_DIAGRAM):   end;
1204965   +else
1204966   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1204967   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1204968   +end;
MPRINT(EM_DIAGRAM):   end;
1204969   +else
1204970   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1204971   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1204972   +end;
MPRINT(EM_DIAGRAM):   end;
1204973   +end;
MPRINT(EM_DIAGRAM):   end;
1204974   +
1204975   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204976   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1204977   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1204978   +LABEL GRP_MntWines =
1204979   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1204980   +
1204981   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1204982   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1204983   +end;
MPRINT(EM_DIAGRAM):   end;
1204984   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1204985   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1204986   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1204987   +end;
MPRINT(EM_DIAGRAM):   end;
1204988   +else
1204989   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1204990   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1204991   +end;
MPRINT(EM_DIAGRAM):   end;
1204992   +else
1204993   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1204994   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1204995   +end;
MPRINT(EM_DIAGRAM):   end;
1204996   +else
1204997   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1204998   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1204999   +end;
MPRINT(EM_DIAGRAM):   end;
1205000   +end;
MPRINT(EM_DIAGRAM):   end;
1205001   +
1205002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205003   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1205004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205005   +LABEL GRP_NumCatalogPurchases =
1205006   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1205007   +
1205008   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1205009   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1205010   +end;
MPRINT(EM_DIAGRAM):   end;
1205011   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1205012   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1205013   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1205014   +end;
MPRINT(EM_DIAGRAM):   end;
1205015   +else
1205016   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1205017   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1205018   +end;
MPRINT(EM_DIAGRAM):   end;
1205019   +else
1205020   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1205021   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1205022   +end;
MPRINT(EM_DIAGRAM):   end;
1205023   +else
1205024   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1205025   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1205026   +end;
MPRINT(EM_DIAGRAM):   end;
1205027   +end;
MPRINT(EM_DIAGRAM):   end;
1205028   +
1205029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205030   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1205031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205032   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1205033   +
1205034   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1205035   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1205036   +end;
MPRINT(EM_DIAGRAM):   end;
1205037   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1205038   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1205039   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1205040   +end;
MPRINT(EM_DIAGRAM):   end;
1205041   +else
1205042   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1205043   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1205044   +end;
MPRINT(EM_DIAGRAM):   end;
1205045   +else
1205046   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1205047   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1205048   +end;
MPRINT(EM_DIAGRAM):   end;
1205049   +else
1205050   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1205051   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1205052   +end;
MPRINT(EM_DIAGRAM):   end;
1205053   +end;
MPRINT(EM_DIAGRAM):   end;
1205054   +
1205055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205056   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1205057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205058   +LABEL GRP_NumWebPurchases =
1205059   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1205060   +
1205061   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1205062   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1205063   +end;
MPRINT(EM_DIAGRAM):   end;
1205064   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1205065   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1205066   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1205067   +end;
MPRINT(EM_DIAGRAM):   end;
1205068   +else
1205069   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1205070   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1205071   +end;
MPRINT(EM_DIAGRAM):   end;
1205072   +else
1205073   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1205074   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1205075   +end;
MPRINT(EM_DIAGRAM):   end;
1205076   +else
1205077   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1205078   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1205079   +end;
MPRINT(EM_DIAGRAM):   end;
1205080   +end;
MPRINT(EM_DIAGRAM):   end;
1205081   +
1205082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205083   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1205084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205085   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1205086   +
1205087   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1205088   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1205089   +end;
MPRINT(EM_DIAGRAM):   end;
1205090   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1205091   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1205092   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1205093   +end;
MPRINT(EM_DIAGRAM):   end;
1205094   +else
1205095   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1205096   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1205097   +end;
MPRINT(EM_DIAGRAM):   end;
1205098   +else
1205099   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1205100   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1205101   +end;
MPRINT(EM_DIAGRAM):   end;
1205102   +else
1205103   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1205104   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1205105   +end;
MPRINT(EM_DIAGRAM):   end;
1205106   +end;
MPRINT(EM_DIAGRAM):   end;
1205107   +
1205108   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205109   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1205110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205111   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1205112   +
1205113   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1205114   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1205115   +end;
MPRINT(EM_DIAGRAM):   end;
1205116   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1205117   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1205118   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1205119   +end;
MPRINT(EM_DIAGRAM):   end;
1205120   +else
1205121   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1205122   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1205123   +end;
MPRINT(EM_DIAGRAM):   end;
1205124   +else
1205125   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1205126   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1205127   +end;
MPRINT(EM_DIAGRAM):   end;
1205128   +else
1205129   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1205130   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1205131   +end;
MPRINT(EM_DIAGRAM):   end;
1205132   +end;
MPRINT(EM_DIAGRAM):   end;
1205133   +
1205134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205135   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1205136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205137   +LABEL GRP_Recency =
1205138   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1205139   +
1205140   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1205141   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1205142   +end;
MPRINT(EM_DIAGRAM):   end;
1205143   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1205144   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1205145   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1205146   +end;
MPRINT(EM_DIAGRAM):   end;
1205147   +else
1205148   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1205149   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1205150   +end;
MPRINT(EM_DIAGRAM):   end;
1205151   +else
1205152   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1205153   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1205154   +end;
MPRINT(EM_DIAGRAM):   end;
1205155   +else
1205156   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1205157   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1205158   +end;
MPRINT(EM_DIAGRAM):   end;
1205159   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1205160    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1205161    quit;
1205162    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1205163    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1205164    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1205165    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1205166    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1205167    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205168    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1205169    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205171    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1205172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205174    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205175    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1205176    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1205177    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205178    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1205179    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1205180    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1205181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205183    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205184    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1205185    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205186    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205187    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1205188    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1205188  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1205189    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205190    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1205191    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1000 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205192    filename _pref
1205192  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1205193    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1205194    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1205195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205196   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1205197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1205198   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1205199   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1205200   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1205201    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1205202    quit;
1205203    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1205204    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1205205    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1205206    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1205207    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1205208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205209    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1205210    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205211    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205212    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1205213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205215    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205216    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1205217    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1205218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205219    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1205220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1205221    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1205222    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205223    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205224    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205225    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1205226    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205227    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205228    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1205229    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1205229  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1205230    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205231    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1205232    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1004 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205233    filename _pref
1205233  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1205234    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1205235    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1205236   +
1205237   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1205238   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1205238  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1205239   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1205240   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1205241   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1205242   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1205243   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1205244    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1205245    quit;
1205246    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1205247    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1205248    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1205249    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1205250    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1205251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205252    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1205253    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205254    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205255    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1205256    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205257    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205258    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205259    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1205260    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1205261    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205262    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1205263    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205264    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1205265    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205266    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205267    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205268    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1205269    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205270    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205271    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1205272    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1205272  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1205273    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205274    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1205275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1043 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205276    filename _pref
1205276  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1205277    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1205278    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1205279   +
1205280   +
1205281   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1205282   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1205283   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1205284   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1205285   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1205286   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205287   +
1205288   +
1205289   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1205290   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1205291   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1205292   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1205293   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1205294   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205295   +
1205296   +
1205297   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1205298   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1205299   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1205300   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1205301   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1205302   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205303   +
1205304   +
1205305   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1205306   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1205307   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1205308   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1205309   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1205310   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205311   +
1205312   +
1205313   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1205314   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1205315   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1205316   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1205317   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1205318   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205319   +
1205320   +
1205321   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1205322   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1205323   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1205324   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1205325   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1205326   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205327   +
1205328   +
1205329   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1205330   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1205331   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1205332   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1205333   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1205334   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205335   +
1205336   +
1205337   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1205338   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1205339   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1205340   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1205341   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1205342   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1205343   +if
1205344   +_FILTERNORM1 not in ( '.')
1205345   + and
1205346   +_FILTERNORM2 not in ( '.')
1205347   + and
1205348   +_FILTERNORM3 not in ( '.')
1205349   + and
1205350   +_FILTERNORM4 not in ( '.')
1205351   + and
1205352   +_FILTERNORM5 not in ( '.')
1205353   + and
1205354   +_FILTERNORM6 not in ( '.')
1205355   + and
1205356   +_FILTERNORM7 not in ( ' ')
1205357   + and
1205358   +_FILTERNORM8 not in ( ' ')
1205359   +and
1205360   +( Dt_Customer ne .)
1205361   +and ( Income ne . and (Income<=107000))
1205362   +and ( Kidhome ne .)
1205363   +and ( MntFishProducts ne .)
1205364   +and ( MntFruits ne .)
1205365   +and ( MntGoldProds ne .)
1205366   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1205367   +and ( MntSweetProducts ne .)
1205368   +and ( MntWines ne .)
1205369   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1205370   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1205371   +and ( NumStorePurchases ne .)
1205372   +and ( NumWebPurchases ne .)
1205373   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1205374   +and ( Recency ne .)
1205375   +and ( Teenhome ne .)
1205376   +and ( Year_Birth ne .)
1205377   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1205378   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1205379   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1205380   +end;
MPRINT(EM_DIAGRAM):   end;
1205381   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1205382   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1205383    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1205384    quit;
1205385    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1205386    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1205387    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1205388    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1205389    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1205390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205391    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1205392    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205394    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1205395    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205396    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205397    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205398    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1205399    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1205400    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205401    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1205402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1205403    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1205404    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205405    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205406    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1205407    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1205408    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1205409    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205410    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1205411    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1205411  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1205412    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205413    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1205414    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1109 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205415    %macro varDept(fcmpdata=,id=);
1205416    %global nobs&id scoreFlag&id;
1205417    %let scoreFlag&id = 0;
1205418    %if &id=1 or ^&fcmpStart %then %do;
1205419    proc sort data=&fcmpdata out=_temp&id nodupkey;
1205420    by NAME;
1205421    where id=&id and LHS in( %let j=1;
1205422    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1205423    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1205424    "&var" %let j = %eval(&j+1);
1205425    %end;
1205426    );
1205427    run;
1205428    %let dsid = %sysfunc(open(_temp&id));
1205429    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1205430    %let dsid = %sysfunc(close(&dsid));
1205431    %if &&nobs&id %then %do;
1205432    %let scoreFlag&id = 1;
1205433    %let fcmpStart = 1;
1205434    %end;
1205435    %else %let fcmpStart = 0;
1205436    %end;
1205437    %else %do;
1205438    proc sort data=&fcmpdata out=_tempid;
1205439    where id=&id;
1205440    by LHS;
1205441    run;
1205442    %let dsid = %sysfunc(open(_tempid));
1205443    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1205444    %let dsid = %sysfunc(close(&dsid));
1205445    %if ^&&nobs&id %then %do;
1205446    proc datasets lib=work nolist;
1205447    delete _tempid;
1205448    run;
1205449    quit;
1205450    %end;
1205451    %else %do;
1205452    data _tempAll;
1205453    set %let j=%eval(&id-1);
1205454    %do x=1 %to &j;
1205455    %if &&nobs&x %then %do;
1205456    _temp&x %end;
1205457    %end;
1205458    ;
1205459    run;
1205460    proc sql;
1205461    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1205461  ! work._tempid p2 where p.name=p2.lhs;
1205462    quit;
1205463    data _temp&id;
1205464    set _temp&id;
1205465    where LHS ne '' and NAME ne '' and Node ne '';
1205466    run;
1205467    proc datasets lib=work nolist;
1205468    delete _tempAll;
1205469    run;
1205470    %let dsid = %sysfunc(open(_temp&id));
1205471    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1205472    %let dsid = %sysfunc(close(&dsid));
1205473    %if ^&&nobs&id %then %do;
1205474    proc datasets lib=work nolist;
1205475    delete _temp&id;
1205476    run;
1205477    quit;
1205478    %end;
1205479    %else %do;
1205480    %let scoreFlag&id = 1;
1205481    data _temp&id;
1205482    set _temp&id;
1205483    where LHS ne NAME and node ne '';
1205484    run;
1205485    %let dsid = %sysfunc(open(_temp&id));
1205486    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1205487    %let dsid = %sysfunc(close(&dsid));
1205488    %if ^&&nobs&id %then %do;
1205489    proc datasets lib=work nolist;
1205490    delete _temp&id;
1205491    run;
1205492    quit;
1205493    %end;
1205494    %else %do;
1205495    proc sort data=_temp&id nodupkey;
1205496    by LHS NAME;
1205497    run;
1205498    %end;
1205499    %end;
1205500    %end;
1205501    %end;
1205502    %mend varDept;
1205503    %macro optCode(outdata=fcmpdata);
1205504    %global fcmpStart;
1205505    %let fcmpStart = 0;
1205506    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1205507    %let NumNodes=9;
1205508    %do k=1 %to &NumNodes;
1205509    %vardept(fcmpdata=&outdata, id=&k);
1205510    %end;
1205511    %mend optCode;
1205512    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1205513    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1205514    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1205515    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1205516    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205517    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1205518    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1205519    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1205520    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205521    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1205522    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1205522  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1205523    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1205524    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1205525    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1205526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205527    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1205528    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1205529    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1205530    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1205531    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1205532    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1205533    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1205534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205535    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1205536    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1205536  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1205537    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1205538    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1205539    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1205540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1205541    filename _pref
1205541  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMPUBLISHSCORE.sas";
1205542    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1205543    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMPUBLISHSCORE.sas.
1205544   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1205545   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1205546   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1205547   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1205548   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1205549   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1205550   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1205551   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1205552   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1205553   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1205554   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1205555   +LENGTH _WARN_ $4
1205556   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1205557   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1205558   +
1205559   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1205560   +
1205561   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1205562   +
1205563   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1205564   +
1205565   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1205566   +
1205567   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1205568   +
1205569   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1205570   +
1205571   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1205572   +
1205573   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1205574   +
1205575   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1205576   +
1205577   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1205578   +
1205579   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1205580   +
1205581   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1205582   +
1205583   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1205584   +
1205585   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1205586   +
1205587   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1205588   +
1205589   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1205590   +
1205591   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1205592   +
1205593   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1205594   +
1205595   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1205596   +
1205597   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1205598   +
1205599   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1205600   +
1205601   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1205602   +
1205603   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1205604   +
1205605   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1205606   +
1205607   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1205608   +
1205609   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1205610   +
1205611   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1205612   +
1205613   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1205614   +
1205615   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1205616   +
1205617   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1205618   +
1205619   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1205620   +
1205621   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1205622   +
1205623   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1205624   +
1205625   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1205626   +
1205627   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1205628   +
1205629   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1205630   +
1205631   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1205632   +
1205633   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1205634   +
1205635   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1205636   +
1205637   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1205638   +
1205639   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1205640   +
1205641   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1205642   +
1205643   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1205644   +
1205645   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1205646   +
1205647   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1205648   +
1205649   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1205650   +
1205651   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1205652   +
1205653   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1205654   +
1205655   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1205656   +
1205657   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1205658   +
1205659   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1205660   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1205661   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1205662   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1205663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205665   +end;
MPRINT(EM_DIAGRAM):   end;
1205666   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205668   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1205669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205670   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1205671   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1205672   +   end;
MPRINT(EM_DIAGRAM):   end;
1205673   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1205674   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1205675   +   end;
MPRINT(EM_DIAGRAM):   end;
1205676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205677   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1205678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205680   +   end;
MPRINT(EM_DIAGRAM):   end;
1205681   +end;
MPRINT(EM_DIAGRAM):   end;
1205682   +
1205683   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1205684   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1205685   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1205686   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1205687   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1205688   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1205689   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205690   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205691   +end;
MPRINT(EM_DIAGRAM):   end;
1205692   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205693   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205694   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1205695   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205696   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1205697   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1205698   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1205699   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1205700   +   end;
MPRINT(EM_DIAGRAM):   end;
1205701   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1205702   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1205703   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1205704   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1205705   +   end;
MPRINT(EM_DIAGRAM):   end;
1205706   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205707   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1205708   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1205709   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1205710   +   end;
MPRINT(EM_DIAGRAM):   end;
1205711   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1205712   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1205713   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1205714   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1205715   +   end;
MPRINT(EM_DIAGRAM):   end;
1205716   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205717   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1205718   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1205719   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1205720   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205721   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205722   +   end;
MPRINT(EM_DIAGRAM):   end;
1205723   +end;
MPRINT(EM_DIAGRAM):   end;
1205724   +
1205725   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1205726   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1205727   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1205728   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1205729   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1205730   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1205731   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205732   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205733   +end;
MPRINT(EM_DIAGRAM):   end;
1205734   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205735   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205736   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1205737   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205738   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1205739   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1205740   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1205741   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1205742   +   end;
MPRINT(EM_DIAGRAM):   end;
1205743   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205744   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1205745   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1205746   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1205747   +   end;
MPRINT(EM_DIAGRAM):   end;
1205748   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1205749   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1205750   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1205751   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1205752   +   end;
MPRINT(EM_DIAGRAM):   end;
1205753   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1205754   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1205755   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1205756   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1205757   +   end;
MPRINT(EM_DIAGRAM):   end;
1205758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205759   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1205760   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1205761   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1205762   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205763   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205764   +   end;
MPRINT(EM_DIAGRAM):   end;
1205765   +end;
MPRINT(EM_DIAGRAM):   end;
1205766   +
1205767   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1205768   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1205769   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1205770   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1205771   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1205772   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1205773   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205774   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205775   +end;
MPRINT(EM_DIAGRAM):   end;
1205776   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205777   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205778   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1205779   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205780   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1205781   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1205782   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1205783   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1205784   +   end;
MPRINT(EM_DIAGRAM):   end;
1205785   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1205786   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1205787   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1205788   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1205789   +   end;
MPRINT(EM_DIAGRAM):   end;
1205790   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205791   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1205792   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1205793   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1205794   +   end;
MPRINT(EM_DIAGRAM):   end;
1205795   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1205796   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1205797   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1205798   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1205799   +   end;
MPRINT(EM_DIAGRAM):   end;
1205800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205801   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1205802   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1205803   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1205804   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205805   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205806   +   end;
MPRINT(EM_DIAGRAM):   end;
1205807   +end;
MPRINT(EM_DIAGRAM):   end;
1205808   +
1205809   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1205810   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1205811   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1205812   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1205813   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1205814   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1205815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205817   +end;
MPRINT(EM_DIAGRAM):   end;
1205818   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205819   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205820   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1205821   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205822   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1205823   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1205824   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1205825   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1205826   +   end;
MPRINT(EM_DIAGRAM):   end;
1205827   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1205828   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1205829   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1205830   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1205831   +   end;
MPRINT(EM_DIAGRAM):   end;
1205832   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205833   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1205834   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1205835   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1205836   +   end;
MPRINT(EM_DIAGRAM):   end;
1205837   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1205838   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1205839   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1205840   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1205841   +   end;
MPRINT(EM_DIAGRAM):   end;
1205842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205843   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1205844   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1205845   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1205846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205848   +   end;
MPRINT(EM_DIAGRAM):   end;
1205849   +end;
MPRINT(EM_DIAGRAM):   end;
1205850   +
1205851   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1205852   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1205853   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1205854   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1205855   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1205856   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1205857   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205858   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205859   +end;
MPRINT(EM_DIAGRAM):   end;
1205860   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205861   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205862   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1205863   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205864   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1205865   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1205866   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1205867   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1205868   +   end;
MPRINT(EM_DIAGRAM):   end;
1205869   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205870   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1205871   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1205872   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1205873   +   end;
MPRINT(EM_DIAGRAM):   end;
1205874   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1205875   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1205876   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1205877   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1205878   +   end;
MPRINT(EM_DIAGRAM):   end;
1205879   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1205880   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1205881   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1205882   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1205883   +   end;
MPRINT(EM_DIAGRAM):   end;
1205884   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205885   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1205886   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1205887   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1205888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205890   +   end;
MPRINT(EM_DIAGRAM):   end;
1205891   +end;
MPRINT(EM_DIAGRAM):   end;
1205892   +
1205893   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1205894   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1205895   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1205896   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1205897   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1205898   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1205899   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205900   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205901   +end;
MPRINT(EM_DIAGRAM):   end;
1205902   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205903   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205904   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1205905   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205906   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1205907   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1205908   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1205909   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1205910   +   end;
MPRINT(EM_DIAGRAM):   end;
1205911   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205912   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1205913   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1205914   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1205915   +   end;
MPRINT(EM_DIAGRAM):   end;
1205916   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1205917   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1205918   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1205919   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1205920   +   end;
MPRINT(EM_DIAGRAM):   end;
1205921   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1205922   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1205923   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1205924   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1205925   +   end;
MPRINT(EM_DIAGRAM):   end;
1205926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205927   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1205928   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1205929   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1205930   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205931   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205932   +   end;
MPRINT(EM_DIAGRAM):   end;
1205933   +end;
MPRINT(EM_DIAGRAM):   end;
1205934   +
1205935   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1205936   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1205937   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1205938   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1205939   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1205940   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1205941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205943   +end;
MPRINT(EM_DIAGRAM):   end;
1205944   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205946   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1205947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205948   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1205949   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1205950   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1205951   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1205952   +   end;
MPRINT(EM_DIAGRAM):   end;
1205953   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1205954   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1205955   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1205956   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1205957   +   end;
MPRINT(EM_DIAGRAM):   end;
1205958   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205959   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1205960   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1205961   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1205962   +   end;
MPRINT(EM_DIAGRAM):   end;
1205963   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1205964   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1205965   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1205966   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1205967   +   end;
MPRINT(EM_DIAGRAM):   end;
1205968   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1205969   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1205970   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1205971   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1205972   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1205973   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205974   +   end;
MPRINT(EM_DIAGRAM):   end;
1205975   +end;
MPRINT(EM_DIAGRAM):   end;
1205976   +
1205977   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1205978   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1205979   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1205980   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1205981   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1205982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1205983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1205984   +end;
MPRINT(EM_DIAGRAM):   end;
1205985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1205986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1205987   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1205988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1205989   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1205990   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1205991   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1205992   +   end;
MPRINT(EM_DIAGRAM):   end;
1205993   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1205994   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1205995   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1205996   +   end;
MPRINT(EM_DIAGRAM):   end;
1205997   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1205998   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1205999   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1206000   +   end;
MPRINT(EM_DIAGRAM):   end;
1206001   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206002   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1206003   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1206004   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206005   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206006   +   end;
MPRINT(EM_DIAGRAM):   end;
1206007   +end;
MPRINT(EM_DIAGRAM):   end;
1206008   +
1206009   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1206010   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1206011   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1206012   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1206013   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1206014   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1206015   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206017   +end;
MPRINT(EM_DIAGRAM):   end;
1206018   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206019   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206020   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1206021   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206022   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1206023   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1206024   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1206025   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1206026   +   end;
MPRINT(EM_DIAGRAM):   end;
1206027   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1206028   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1206029   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1206030   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1206031   +   end;
MPRINT(EM_DIAGRAM):   end;
1206032   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1206033   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1206034   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1206035   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1206036   +   end;
MPRINT(EM_DIAGRAM):   end;
1206037   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1206038   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1206039   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1206040   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1206041   +   end;
MPRINT(EM_DIAGRAM):   end;
1206042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206043   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1206044   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1206045   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1206046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206048   +   end;
MPRINT(EM_DIAGRAM):   end;
1206049   +end;
MPRINT(EM_DIAGRAM):   end;
1206050   +
1206051   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1206052   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1206053   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1206054   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1206055   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1206056   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1206057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206059   +end;
MPRINT(EM_DIAGRAM):   end;
1206060   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206061   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206062   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1206063   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206064   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1206065   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1206066   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1206067   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1206068   +   end;
MPRINT(EM_DIAGRAM):   end;
1206069   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1206070   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1206071   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1206072   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1206073   +   end;
MPRINT(EM_DIAGRAM):   end;
1206074   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1206075   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1206076   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1206077   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1206078   +   end;
MPRINT(EM_DIAGRAM):   end;
1206079   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1206080   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1206081   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1206082   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1206083   +   end;
MPRINT(EM_DIAGRAM):   end;
1206084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206085   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1206086   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1206087   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1206088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206090   +   end;
MPRINT(EM_DIAGRAM):   end;
1206091   +end;
MPRINT(EM_DIAGRAM):   end;
1206092   +
1206093   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1206094   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1206095   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1206096   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1206097   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1206098   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1206099   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206101   +end;
MPRINT(EM_DIAGRAM):   end;
1206102   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206103   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206104   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1206105   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206106   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1206107   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1206108   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1206109   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1206110   +   end;
MPRINT(EM_DIAGRAM):   end;
1206111   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1206112   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1206113   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1206114   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1206115   +   end;
MPRINT(EM_DIAGRAM):   end;
1206116   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1206117   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1206118   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1206119   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1206120   +   end;
MPRINT(EM_DIAGRAM):   end;
1206121   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1206122   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1206123   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1206124   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1206125   +   end;
MPRINT(EM_DIAGRAM):   end;
1206126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206127   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1206128   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1206129   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1206130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206132   +   end;
MPRINT(EM_DIAGRAM):   end;
1206133   +end;
MPRINT(EM_DIAGRAM):   end;
1206134   +
1206135   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1206136   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1206137   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1206138   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1206139   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1206140   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1206141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206143   +end;
MPRINT(EM_DIAGRAM):   end;
1206144   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206146   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1206147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206148   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1206149   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1206150   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1206151   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1206152   +   end;
MPRINT(EM_DIAGRAM):   end;
1206153   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1206154   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1206155   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1206156   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1206157   +   end;
MPRINT(EM_DIAGRAM):   end;
1206158   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1206159   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1206160   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1206161   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1206162   +   end;
MPRINT(EM_DIAGRAM):   end;
1206163   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1206164   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1206165   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1206166   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1206167   +   end;
MPRINT(EM_DIAGRAM):   end;
1206168   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206169   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1206170   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1206171   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1206172   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206173   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206174   +   end;
MPRINT(EM_DIAGRAM):   end;
1206175   +end;
MPRINT(EM_DIAGRAM):   end;
1206176   +
1206177   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1206178   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1206179   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1206180   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1206181   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1206182   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1206183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1206184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206185   +end;
MPRINT(EM_DIAGRAM):   end;
1206186   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1206188   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1206189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1206190   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1206191   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1206192   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1206193   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1206194   +   end;
MPRINT(EM_DIAGRAM):   end;
1206195   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1206196   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1206197   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1206198   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1206199   +   end;
MPRINT(EM_DIAGRAM):   end;
1206200   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1206201   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1206202   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1206203   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1206204   +   end;
MPRINT(EM_DIAGRAM):   end;
1206205   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1206206   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1206207   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1206208   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1206209   +   end;
MPRINT(EM_DIAGRAM):   end;
1206210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1206211   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1206212   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1206213   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1206214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1206215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206216   +   end;
MPRINT(EM_DIAGRAM):   end;
1206217   +end;
MPRINT(EM_DIAGRAM):   end;
1206218   +
1206219   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206220   +*** Checking missing input Interval
1206221   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1206222   +
1206223   +IF NMISS(
1206224   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1206225   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1206226   +
1206227   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1206228   +END;
MPRINT(EM_DIAGRAM):   END;
1206229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206230   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1206231   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206232   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206233   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1206234   +END;
MPRINT(EM_DIAGRAM):   END;
1206235   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206236   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1206237   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1206238   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1206239   +END;
MPRINT(EM_DIAGRAM):   END;
1206240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206241   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1206242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206244   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1206245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206246   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206247   +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
1206248   +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
1206249   +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
1206250   +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
1206251   +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
1206252   +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
1206253   +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
1206254   +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
1206255   +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
1206256   +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
1206257   +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
1206258   +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
1206259   +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
1206260   +          +    -0.08991361976323 * GRP_MntFishProducts3
1206261   +          +    -0.12439533124432 * GRP_MntFishProducts4
1206262   +          +    -0.38906628986229 * GRP_MntGoldProds2
1206263   +          +     0.02112411721097 * GRP_MntGoldProds3
1206264   +          +     0.05560214439156 * GRP_MntGoldProds4
1206265   +          +     0.07558086835487 * GRP_MntMeatProducts2
1206266   +          +    -0.24998452825562 * GRP_MntMeatProducts3
1206267   +          +    -0.11030888417179 * GRP_MntMeatProducts4
1206268   +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
1206269   +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
1206270   +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
1206271   +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
1206272   +          +    -0.26905740590447 * GRP_NumDistPurchases2
1206273   +          +     0.06889154687101 * GRP_NumDistPurchases3
1206274   +          +    -0.31591167055503 * GRP_NumDistPurchases4
1206275   +          +    -0.26862765566252 * GRP_NumWebPurchases2
1206276   +          +     0.01579611280005 * GRP_NumWebPurchases3
1206277   +          +    -0.06884702149074 * GRP_NumWebPurchases4
1206278   +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
1206279   +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
1206280   +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
1206281   +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
1206282   +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
1206283   +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
1206284   +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
1206285   +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
1206286   +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
1206287   +        GRP_Income2  +     0.28123841156129 * GRP_Income3
1206288   +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
1206289   +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
1206290   +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
1206291   +          +    -0.03033118293022 * GRP_MntFishProducts3
1206292   +          +     0.12939247483371 * GRP_MntFishProducts4
1206293   +          +     -0.1948739109476 * GRP_MntGoldProds2
1206294   +          +    -0.02487689041808 * GRP_MntGoldProds3
1206295   +          +      0.0424854445517 * GRP_MntGoldProds4
1206296   +          +    -0.77110165164491 * GRP_MntMeatProducts2
1206297   +          +    -0.04188692453988 * GRP_MntMeatProducts3
1206298   +          +     0.16117883521584 * GRP_MntMeatProducts4
1206299   +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
1206300   +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
1206301   +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
1206302   +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
1206303   +          +    -0.82361130213661 * GRP_NumDistPurchases2
1206304   +          +     0.18332361990877 * GRP_NumDistPurchases3
1206305   +          +    -0.10228504756385 * GRP_NumDistPurchases4
1206306   +          +     0.21492204339132 * GRP_NumWebPurchases2
1206307   +          +     0.22752835090931 * GRP_NumWebPurchases3
1206308   +          +    -0.04291366517536 * GRP_NumWebPurchases4
1206309   +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
1206310   +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
1206311   +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
1206312   +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
1206313   +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
1206314   +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
1206315   +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
1206316   +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
1206317   +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
1206318   +        GRP_Income2  +     0.05107107029363 * GRP_Income3
1206319   +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
1206320   +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
1206321   +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
1206322   +          +    -0.12190385526661 * GRP_MntFishProducts3
1206323   +          +     0.11161376295027 * GRP_MntFishProducts4
1206324   +          +     0.09536549249994 * GRP_MntGoldProds2
1206325   +          +    -0.39027188388377 * GRP_MntGoldProds3
1206326   +          +    -0.26960120596574 * GRP_MntGoldProds4
1206327   +          +    -0.29704810464482 * GRP_MntMeatProducts2
1206328   +          +    -0.17523279359181 * GRP_MntMeatProducts3
1206329   +          +     0.01169006509688 * GRP_MntMeatProducts4
1206330   +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
1206331   +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
1206332   +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
1206333   +          +     0.12535793167638 * GRP_NumCatalogPurchases4
1206334   +          +     0.10187760390092 * GRP_NumDistPurchases2
1206335   +          +    -0.25409837313865 * GRP_NumDistPurchases3
1206336   +          +    -0.28689980992526 * GRP_NumDistPurchases4
1206337   +          +     0.00005909057861 * GRP_NumWebPurchases2
1206338   +          +    -0.14419000341563 * GRP_NumWebPurchases3
1206339   +          +     0.09095003593529 * GRP_NumWebPurchases4
1206340   +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
1206341   +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
1206342   +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
1206343   +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
1206344   +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
1206345   +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
1206346   +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
1206347   +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
1206348   +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
1206349   +        GRP_Income2  +     0.14505600514674 * GRP_Income3
1206350   +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
1206351   +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
1206352   +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
1206353   +          +    -0.14631724639492 * GRP_MntFishProducts3
1206354   +          +     0.10002979979527 * GRP_MntFishProducts4
1206355   +          +    -0.09816985850711 * GRP_MntGoldProds2
1206356   +          +    -0.12203012318985 * GRP_MntGoldProds3
1206357   +          +    -0.01815311012777 * GRP_MntGoldProds4
1206358   +          +    -0.06619591895459 * GRP_MntMeatProducts2
1206359   +          +    -0.09072077897467 * GRP_MntMeatProducts3
1206360   +          +      0.1726695423557 * GRP_MntMeatProducts4
1206361   +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
1206362   +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
1206363   +          +     0.09645375616786 * GRP_NumCatalogPurchases3
1206364   +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
1206365   +          +      0.1854692255158 * GRP_NumDistPurchases2
1206366   +          +    -0.22330441571095 * GRP_NumDistPurchases3
1206367   +          +     0.13028835056864 * GRP_NumDistPurchases4
1206368   +          +    -0.16915625127212 * GRP_NumWebPurchases2
1206369   +          +    -0.29991156671478 * GRP_NumWebPurchases3
1206370   +          +     0.01989579721354 * GRP_NumWebPurchases4
1206371   +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
1206372   +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
1206373   +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
1206374   +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
1206375   +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
1206376   +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
1206377   +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
1206378   +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
1206379   +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
1206380   +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
1206381   +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
1206382   +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
1206383   +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
1206384   +          +     0.03013301742801 * GRP_MntFishProducts3
1206385   +          +     -0.0753778180106 * GRP_MntFishProducts4
1206386   +          +     0.22882421007211 * GRP_MntGoldProds2
1206387   +          +    -0.06369987000315 * GRP_MntGoldProds3
1206388   +          +     0.09890582278559 * GRP_MntGoldProds4
1206389   +          +    -0.21052640581149 * GRP_MntMeatProducts2
1206390   +          +    -0.00867214697179 * GRP_MntMeatProducts3
1206391   +          +     0.11929485476343 * GRP_MntMeatProducts4
1206392   +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
1206393   +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
1206394   +          +     0.06292612305453 * GRP_NumCatalogPurchases3
1206395   +          +      0.2309036660938 * GRP_NumCatalogPurchases4
1206396   +          +    -0.10062151440617 * GRP_NumDistPurchases2
1206397   +          +       0.229091410456 * GRP_NumDistPurchases3
1206398   +          +    -0.19729313017904 * GRP_NumDistPurchases4
1206399   +          +    -0.04101710595215 * GRP_NumWebPurchases2
1206400   +          +     0.13926341050039 * GRP_NumWebPurchases3
1206401   +          +    -0.04443067825367 * GRP_NumWebPurchases4
1206402   +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
1206403   +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
1206404   +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
1206405   +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
1206406   +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
1206407   +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
1206408   +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
1206409   +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
1206410   +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
1206411   +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
1206412   +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
1206413   +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
1206414   +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
1206415   +          +    -0.03224941225278 * GRP_MntFishProducts3
1206416   +          +     0.12546380835809 * GRP_MntFishProducts4
1206417   +          +     0.21690521778421 * GRP_MntGoldProds2
1206418   +          +     0.09035550488812 * GRP_MntGoldProds3
1206419   +          +    -0.03133919720822 * GRP_MntGoldProds4
1206420   +          +     0.05188619692889 * GRP_MntMeatProducts2
1206421   +          +    -0.04899714585321 * GRP_MntMeatProducts3
1206422   +          +    -0.35752492237905 * GRP_MntMeatProducts4
1206423   +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
1206424   +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
1206425   +          +     0.45534320348836 * GRP_NumCatalogPurchases3
1206426   +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
1206427   +          +     0.21080174299166 * GRP_NumDistPurchases2
1206428   +          +     0.24874731231732 * GRP_NumDistPurchases3
1206429   +          +    -0.01320035732018 * GRP_NumDistPurchases4
1206430   +          +     0.17773116301115 * GRP_NumWebPurchases2
1206431   +          +     0.13686106729498 * GRP_NumWebPurchases3
1206432   +          +     -0.0690876840257 * GRP_NumWebPurchases4
1206433   +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
1206434   +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
1206435   +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
1206436   +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
1206437   +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
1206438   +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
1206439   +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
1206440   +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
1206441   +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
1206442   +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
1206443   +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
1206444   +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
1206445   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1206446   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1206447   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1206448   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1206449   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1206450   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1206451   +END;
MPRINT(EM_DIAGRAM):   END;
1206452   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206453   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1206454   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1206455   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1206456   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1206457   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1206458   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1206459   +END;
MPRINT(EM_DIAGRAM):   END;
1206460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206461   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1206462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206463   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1206464   +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
1206465   +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
1206466   +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
1206467   +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
1206468   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1206469   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1206470   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1206471   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1206472   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1206473   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1206474   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1206475   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1206476   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1206477   +END;
MPRINT(EM_DIAGRAM):   END;
1206478   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1206479   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1206480   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1206481   +END;
MPRINT(EM_DIAGRAM):   END;
1206482   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1206483   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1206484   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1206485   +END;
MPRINT(EM_DIAGRAM):   END;
1206486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206487   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1206488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1206489   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1206490   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1206491   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1206492   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1206493   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1206494   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1206495   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1206496   +END;
MPRINT(EM_DIAGRAM):   END;
1206497   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1206498   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1206499   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1206500   +drop
1206501   +H11
1206502   +H12
1206503   +H13
1206504   +H14
1206505   +H15
1206506   +H16
1206507   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1206508   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1206509    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1206510    quit;
1206511    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1206512    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1206513    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1206514    retain ID 2 Node "Neural23";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural23";
1206515    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1206516    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2118 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2118 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206517    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1206518    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206519    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2118 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2118 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1206520    proc sort data=EMWS8.Neural23_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_variableset out=_temp2(keep=NAME CREATOR);
1206521    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL23_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206523    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1206524    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1206525    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1206526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1206527    proc contents data=EMWS8.Neural23_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural23_train out=_meta(keep=NAME) noprint;
1206528    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1206529    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1206530    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206531    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206532    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1206533    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1206534    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206535    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206536    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1206537    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1206537  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 955 rows and 5 columns.

1206538    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1206539    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1206540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 955 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 955 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206541    filename _pref
1206541  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1206542    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1206543    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1206544   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1206545   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1206546   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1206547   +
1206548   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206549   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1206550   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206551   +LABEL GRP_AcceptedCmp5 =
1206552   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1206553   +
1206554   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1206555   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1206556   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1206557   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1206558   +end;
MPRINT(EM_DIAGRAM):   end;
1206559   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1206560   +if (_UFORMAT eq '0'
1206561   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1206562   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1206563   +end;
MPRINT(EM_DIAGRAM):   end;
1206564   +else
1206565   +if (_UFORMAT eq '1'
1206566   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1206567   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1206568   +end;
MPRINT(EM_DIAGRAM):   end;
1206569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1206570   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1206571   +end;
MPRINT(EM_DIAGRAM):   end;
1206572   +end;
MPRINT(EM_DIAGRAM):   end;
1206573   +
1206574   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206575   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1206576   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206577   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1206578   +
1206579   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1206580   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1206581   +end;
MPRINT(EM_DIAGRAM):   end;
1206582   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1206583   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1206584   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1206585   +end;
MPRINT(EM_DIAGRAM):   end;
1206586   +else
1206587   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1206588   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1206589   +end;
MPRINT(EM_DIAGRAM):   end;
1206590   +else
1206591   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1206592   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1206593   +end;
MPRINT(EM_DIAGRAM):   end;
1206594   +else
1206595   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1206596   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1206597   +end;
MPRINT(EM_DIAGRAM):   end;
1206598   +end;
MPRINT(EM_DIAGRAM):   end;
1206599   +
1206600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206601   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1206602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206603   +LABEL GRP_Income =
1206604   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1206605   +
1206606   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1206607   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1206608   +end;
MPRINT(EM_DIAGRAM):   end;
1206609   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1206610   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1206611   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1206612   +end;
MPRINT(EM_DIAGRAM):   end;
1206613   +else
1206614   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1206615   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1206616   +end;
MPRINT(EM_DIAGRAM):   end;
1206617   +else
1206618   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1206619   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1206620   +end;
MPRINT(EM_DIAGRAM):   end;
1206621   +else
1206622   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1206623   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1206624   +end;
MPRINT(EM_DIAGRAM):   end;
1206625   +end;
MPRINT(EM_DIAGRAM):   end;
1206626   +
1206627   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206628   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1206629   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206630   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1206631   +
1206632   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1206633   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1206634   +end;
MPRINT(EM_DIAGRAM):   end;
1206635   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1206636   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1206637   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1206638   +end;
MPRINT(EM_DIAGRAM):   end;
1206639   +else
1206640   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1206641   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1206642   +end;
MPRINT(EM_DIAGRAM):   end;
1206643   +else
1206644   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1206645   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1206646   +end;
MPRINT(EM_DIAGRAM):   end;
1206647   +else
1206648   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1206649   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1206650   +end;
MPRINT(EM_DIAGRAM):   end;
1206651   +end;
MPRINT(EM_DIAGRAM):   end;
1206652   +
1206653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206654   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1206655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206656   +LABEL GRP_MntFishProducts =
1206657   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1206658   +
1206659   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1206660   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1206661   +end;
MPRINT(EM_DIAGRAM):   end;
1206662   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1206663   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1206664   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1206665   +end;
MPRINT(EM_DIAGRAM):   end;
1206666   +else
1206667   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1206668   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1206669   +end;
MPRINT(EM_DIAGRAM):   end;
1206670   +else
1206671   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1206672   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1206673   +end;
MPRINT(EM_DIAGRAM):   end;
1206674   +else
1206675   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1206676   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1206677   +end;
MPRINT(EM_DIAGRAM):   end;
1206678   +end;
MPRINT(EM_DIAGRAM):   end;
1206679   +
1206680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206681   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1206682   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206683   +LABEL GRP_MntGoldProds =
1206684   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1206685   +
1206686   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1206687   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1206688   +end;
MPRINT(EM_DIAGRAM):   end;
1206689   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1206690   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1206691   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1206692   +end;
MPRINT(EM_DIAGRAM):   end;
1206693   +else
1206694   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1206695   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1206696   +end;
MPRINT(EM_DIAGRAM):   end;
1206697   +else
1206698   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1206699   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1206700   +end;
MPRINT(EM_DIAGRAM):   end;
1206701   +else
1206702   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1206703   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1206704   +end;
MPRINT(EM_DIAGRAM):   end;
1206705   +end;
MPRINT(EM_DIAGRAM):   end;
1206706   +
1206707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206708   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1206709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206710   +LABEL GRP_MntMeatProducts =
1206711   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1206712   +
1206713   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1206714   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1206715   +end;
MPRINT(EM_DIAGRAM):   end;
1206716   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1206717   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1206718   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1206719   +end;
MPRINT(EM_DIAGRAM):   end;
1206720   +else
1206721   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1206722   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1206723   +end;
MPRINT(EM_DIAGRAM):   end;
1206724   +else
1206725   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1206726   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1206727   +end;
MPRINT(EM_DIAGRAM):   end;
1206728   +else
1206729   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1206730   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1206731   +end;
MPRINT(EM_DIAGRAM):   end;
1206732   +end;
MPRINT(EM_DIAGRAM):   end;
1206733   +
1206734   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206735   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1206736   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206737   +LABEL GRP_MntWines =
1206738   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1206739   +
1206740   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1206741   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1206742   +end;
MPRINT(EM_DIAGRAM):   end;
1206743   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1206744   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1206745   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1206746   +end;
MPRINT(EM_DIAGRAM):   end;
1206747   +else
1206748   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1206749   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1206750   +end;
MPRINT(EM_DIAGRAM):   end;
1206751   +else
1206752   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1206753   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1206754   +end;
MPRINT(EM_DIAGRAM):   end;
1206755   +else
1206756   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1206757   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1206758   +end;
MPRINT(EM_DIAGRAM):   end;
1206759   +end;
MPRINT(EM_DIAGRAM):   end;
1206760   +
1206761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206762   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1206763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206764   +LABEL GRP_NumCatalogPurchases =
1206765   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1206766   +
1206767   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1206768   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1206769   +end;
MPRINT(EM_DIAGRAM):   end;
1206770   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1206771   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1206772   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1206773   +end;
MPRINT(EM_DIAGRAM):   end;
1206774   +else
1206775   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1206776   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1206777   +end;
MPRINT(EM_DIAGRAM):   end;
1206778   +else
1206779   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1206780   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1206781   +end;
MPRINT(EM_DIAGRAM):   end;
1206782   +else
1206783   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1206784   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1206785   +end;
MPRINT(EM_DIAGRAM):   end;
1206786   +end;
MPRINT(EM_DIAGRAM):   end;
1206787   +
1206788   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206789   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1206790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206791   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1206792   +
1206793   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1206794   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1206795   +end;
MPRINT(EM_DIAGRAM):   end;
1206796   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1206797   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1206798   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1206799   +end;
MPRINT(EM_DIAGRAM):   end;
1206800   +else
1206801   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1206802   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1206803   +end;
MPRINT(EM_DIAGRAM):   end;
1206804   +else
1206805   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1206806   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1206807   +end;
MPRINT(EM_DIAGRAM):   end;
1206808   +else
1206809   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1206810   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1206811   +end;
MPRINT(EM_DIAGRAM):   end;
1206812   +end;
MPRINT(EM_DIAGRAM):   end;
1206813   +
1206814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206815   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1206816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206817   +LABEL GRP_NumWebPurchases =
1206818   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1206819   +
1206820   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1206821   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1206822   +end;
MPRINT(EM_DIAGRAM):   end;
1206823   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1206824   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1206825   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1206826   +end;
MPRINT(EM_DIAGRAM):   end;
1206827   +else
1206828   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1206829   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1206830   +end;
MPRINT(EM_DIAGRAM):   end;
1206831   +else
1206832   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1206833   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1206834   +end;
MPRINT(EM_DIAGRAM):   end;
1206835   +else
1206836   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1206837   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1206838   +end;
MPRINT(EM_DIAGRAM):   end;
1206839   +end;
MPRINT(EM_DIAGRAM):   end;
1206840   +
1206841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206842   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1206843   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206844   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1206845   +
1206846   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1206847   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1206848   +end;
MPRINT(EM_DIAGRAM):   end;
1206849   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1206850   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1206851   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1206852   +end;
MPRINT(EM_DIAGRAM):   end;
1206853   +else
1206854   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1206855   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1206856   +end;
MPRINT(EM_DIAGRAM):   end;
1206857   +else
1206858   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1206859   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1206860   +end;
MPRINT(EM_DIAGRAM):   end;
1206861   +else
1206862   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1206863   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1206864   +end;
MPRINT(EM_DIAGRAM):   end;
1206865   +end;
MPRINT(EM_DIAGRAM):   end;
1206866   +
1206867   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206868   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1206869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206870   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1206871   +
1206872   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1206873   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1206874   +end;
MPRINT(EM_DIAGRAM):   end;
1206875   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1206876   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1206877   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1206878   +end;
MPRINT(EM_DIAGRAM):   end;
1206879   +else
1206880   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1206881   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1206882   +end;
MPRINT(EM_DIAGRAM):   end;
1206883   +else
1206884   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1206885   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1206886   +end;
MPRINT(EM_DIAGRAM):   end;
1206887   +else
1206888   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1206889   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1206890   +end;
MPRINT(EM_DIAGRAM):   end;
1206891   +end;
MPRINT(EM_DIAGRAM):   end;
1206892   +
1206893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206894   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1206895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206896   +LABEL GRP_Recency =
1206897   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1206898   +
1206899   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1206900   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1206901   +end;
MPRINT(EM_DIAGRAM):   end;
1206902   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1206903   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1206904   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1206905   +end;
MPRINT(EM_DIAGRAM):   end;
1206906   +else
1206907   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1206908   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1206909   +end;
MPRINT(EM_DIAGRAM):   end;
1206910   +else
1206911   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1206912   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1206913   +end;
MPRINT(EM_DIAGRAM):   end;
1206914   +else
1206915   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1206916   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1206917   +end;
MPRINT(EM_DIAGRAM):   end;
1206918   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1206919    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1206920    quit;
1206921    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1206922    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1206923    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1206924    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1206925    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1206926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206927    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1206928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1206930    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1206931    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206933    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1206934    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1206935    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1206936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206937    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1206938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1206939    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1206940    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1206942    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1206943    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1206944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206945    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206946    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1206947    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1206947  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1206948    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206949    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1206950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206951    filename _pref
1206951  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1206952    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1206953    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1206954   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206955   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1206956   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1206957   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1206958   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1206959   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1206960    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1206961    quit;
1206962    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1206963    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1206964    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1206965    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1206966    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1206967    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206968    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1206969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206970    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206971    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1206972    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206974    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1206975    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1206976    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1206977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206978    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1206979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1206980    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1206981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206982    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1206983    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1206984    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1206985    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1206986    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206987    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1206988    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1206988  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1206989    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1206990    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1206991    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1206992    filename _pref
1206992  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1206993    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1206994    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1206995   +
1206996   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1206997   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1206997  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1206998   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1206999   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1207000   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1207001   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1207002   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1207003    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1207004    quit;
1207005    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1207006    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1207007    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1207008    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1207009    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1207010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207011    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1207012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207013    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207014    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1207015    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1207017    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1207018    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1207019    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1207020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207021    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1207022    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1207023    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1207024    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207025    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207026    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1207027    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1207028    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207029    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207030    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1207031    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1207031  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1207032    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1207033    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1207034    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207035    filename _pref
1207035  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1207036    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1207037    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1207038   +
1207039   +
1207040   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1207041   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1207042   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1207043   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1207044   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1207045   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207046   +
1207047   +
1207048   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1207049   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1207050   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1207051   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1207052   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1207053   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207054   +
1207055   +
1207056   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1207057   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1207058   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1207059   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1207060   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1207061   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207062   +
1207063   +
1207064   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1207065   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1207066   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1207067   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1207068   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1207069   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207070   +
1207071   +
1207072   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1207073   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1207074   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1207075   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1207076   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1207077   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207078   +
1207079   +
1207080   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1207081   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1207082   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1207083   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1207084   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1207085   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207086   +
1207087   +
1207088   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1207089   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1207090   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1207091   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1207092   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1207093   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207094   +
1207095   +
1207096   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1207097   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1207098   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1207099   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1207100   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1207101   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1207102   +if
1207103   +_FILTERNORM1 not in ( '.')
1207104   + and
1207105   +_FILTERNORM2 not in ( '.')
1207106   + and
1207107   +_FILTERNORM3 not in ( '.')
1207108   + and
1207109   +_FILTERNORM4 not in ( '.')
1207110   + and
1207111   +_FILTERNORM5 not in ( '.')
1207112   + and
1207113   +_FILTERNORM6 not in ( '.')
1207114   + and
1207115   +_FILTERNORM7 not in ( ' ')
1207116   + and
1207117   +_FILTERNORM8 not in ( ' ')
1207118   +and
1207119   +( Dt_Customer ne .)
1207120   +and ( Income ne . and (Income<=107000))
1207121   +and ( Kidhome ne .)
1207122   +and ( MntFishProducts ne .)
1207123   +and ( MntFruits ne .)
1207124   +and ( MntGoldProds ne .)
1207125   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1207126   +and ( MntSweetProducts ne .)
1207127   +and ( MntWines ne .)
1207128   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1207129   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1207130   +and ( NumStorePurchases ne .)
1207131   +and ( NumWebPurchases ne .)
1207132   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1207133   +and ( Recency ne .)
1207134   +and ( Teenhome ne .)
1207135   +and ( Year_Birth ne .)
1207136   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1207137   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1207138   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1207139   +end;
MPRINT(EM_DIAGRAM):   end;
1207140   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1207141   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1207142    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1207143    quit;
1207144    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1207145    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1207146    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1207147    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1207148    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1207149    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1207150    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1207151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207153    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1207154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207156    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1207157    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1207158    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1207159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207160    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1207161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1207162    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1207163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207165    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1207166    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1207167    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1207168    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1207169    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1207170    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
The SAS System

1207170  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1207171    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207172    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1207173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207174    %macro varDept(fcmpdata=,id=);
1207175    %global nobs&id scoreFlag&id;
1207176    %let scoreFlag&id = 0;
1207177    %if &id=1 or ^&fcmpStart %then %do;
1207178    proc sort data=&fcmpdata out=_temp&id nodupkey;
1207179    by NAME;
1207180    where id=&id and LHS in( %let j=1;
1207181    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1207182    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1207183    "&var" %let j = %eval(&j+1);
1207184    %end;
1207185    );
1207186    run;
1207187    %let dsid = %sysfunc(open(_temp&id));
1207188    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1207189    %let dsid = %sysfunc(close(&dsid));
1207190    %if &&nobs&id %then %do;
1207191    %let scoreFlag&id = 1;
1207192    %let fcmpStart = 1;
1207193    %end;
1207194    %else %let fcmpStart = 0;
1207195    %end;
1207196    %else %do;
1207197    proc sort data=&fcmpdata out=_tempid;
1207198    where id=&id;
1207199    by LHS;
1207200    run;
1207201    %let dsid = %sysfunc(open(_tempid));
1207202    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1207203    %let dsid = %sysfunc(close(&dsid));
1207204    %if ^&&nobs&id %then %do;
1207205    proc datasets lib=work nolist;
1207206    delete _tempid;
1207207    run;
1207208    quit;
1207209    %end;
1207210    %else %do;
1207211    data _tempAll;
1207212    set %let j=%eval(&id-1);
1207213    %do x=1 %to &j;
1207214    %if &&nobs&x %then %do;
1207215    _temp&x %end;
1207216    %end;
1207217    ;
1207218    run;
1207219    proc sql;
1207220    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1207220  ! work._tempid p2 where p.name=p2.lhs;
1207221    quit;
1207222    data _temp&id;
1207223    set _temp&id;
1207224    where LHS ne '' and NAME ne '' and Node ne '';
1207225    run;
1207226    proc datasets lib=work nolist;
1207227    delete _tempAll;
1207228    run;
1207229    %let dsid = %sysfunc(open(_temp&id));
1207230    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1207231    %let dsid = %sysfunc(close(&dsid));
1207232    %if ^&&nobs&id %then %do;
1207233    proc datasets lib=work nolist;
1207234    delete _temp&id;
1207235    run;
1207236    quit;
1207237    %end;
1207238    %else %do;
1207239    %let scoreFlag&id = 1;
1207240    data _temp&id;
1207241    set _temp&id;
1207242    where LHS ne NAME and node ne '';
1207243    run;
1207244    %let dsid = %sysfunc(open(_temp&id));
1207245    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1207246    %let dsid = %sysfunc(close(&dsid));
1207247    %if ^&&nobs&id %then %do;
1207248    proc datasets lib=work nolist;
1207249    delete _temp&id;
1207250    run;
1207251    quit;
1207252    %end;
1207253    %else %do;
1207254    proc sort data=_temp&id nodupkey;
1207255    by LHS NAME;
1207256    run;
1207257    %end;
1207258    %end;
1207259    %end;
1207260    %end;
1207261    %mend varDept;
1207262    %macro optCode(outdata=fcmpdata);
1207263    %global fcmpStart;
1207264    %let fcmpStart = 0;
1207265    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1207266    %let NumNodes=9;
1207267    %do k=1 %to &NumNodes;
1207268    %vardept(fcmpdata=&outdata, id=&k);
1207269    %end;
1207270    %mend optCode;
1207271    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1207272    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1207273    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1207274    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1207275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207276    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1207277    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1207278    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1207279    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207280    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1207281    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1207281  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1207282    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1207283    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1207284    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1207285    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207286    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1207287    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1207288    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1207289    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207290    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1207291    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1207292    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1207293    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207294    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1207295    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1207295  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1207296    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1207297    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1207298    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1207299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1207300    filename _pref
1207300  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
1207301    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1207302    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas.
1207303   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1207304   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1207305   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1207306   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1207307   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1207308   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1207309   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1207310   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1207311   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1207312   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1207313   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1207314   +LENGTH _WARN_ $4
1207315   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1207316   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1207317   +
1207318   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1207319   +
1207320   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1207321   +
1207322   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1207323   +
1207324   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1207325   +
1207326   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1207327   +
1207328   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1207329   +
1207330   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1207331   +
1207332   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1207333   +
1207334   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1207335   +
1207336   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1207337   +
1207338   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1207339   +
1207340   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1207341   +
1207342   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1207343   +
1207344   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1207345   +
1207346   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1207347   +
1207348   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1207349   +
1207350   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1207351   +
1207352   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1207353   +
1207354   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1207355   +
1207356   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1207357   +
1207358   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1207359   +
1207360   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1207361   +
1207362   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1207363   +
1207364   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1207365   +
1207366   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1207367   +
1207368   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1207369   +
1207370   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1207371   +
1207372   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1207373   +
1207374   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1207375   +
1207376   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1207377   +
1207378   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1207379   +
1207380   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1207381   +
1207382   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1207383   +
1207384   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1207385   +
1207386   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1207387   +
1207388   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1207389   +
1207390   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1207391   +
1207392   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1207393   +
1207394   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1207395   +
1207396   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1207397   +
1207398   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1207399   +
1207400   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1207401   +
1207402   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1207403   +
1207404   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1207405   +
1207406   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1207407   +
1207408   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1207409   +
1207410   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1207411   +
1207412   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1207413   +
1207414   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1207415   +
1207416   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1207417   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1207418   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1207419   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1207420   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207422   +end;
MPRINT(EM_DIAGRAM):   end;
1207423   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207424   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207425   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1207426   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207427   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1207428   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1207429   +   end;
MPRINT(EM_DIAGRAM):   end;
1207430   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1207431   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1207432   +   end;
MPRINT(EM_DIAGRAM):   end;
1207433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207434   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1207435   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207436   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207437   +   end;
MPRINT(EM_DIAGRAM):   end;
1207438   +end;
MPRINT(EM_DIAGRAM):   end;
1207439   +
1207440   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1207441   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1207442   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1207443   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1207444   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1207445   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1207446   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207447   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207448   +end;
MPRINT(EM_DIAGRAM):   end;
1207449   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207450   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207451   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1207452   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207453   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1207454   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1207455   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1207456   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1207457   +   end;
MPRINT(EM_DIAGRAM):   end;
1207458   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1207459   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1207460   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1207461   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1207462   +   end;
MPRINT(EM_DIAGRAM):   end;
1207463   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207464   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1207465   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1207466   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1207467   +   end;
MPRINT(EM_DIAGRAM):   end;
1207468   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207469   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1207470   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1207471   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1207472   +   end;
MPRINT(EM_DIAGRAM):   end;
1207473   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207474   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1207475   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1207476   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1207477   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207478   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207479   +   end;
MPRINT(EM_DIAGRAM):   end;
1207480   +end;
MPRINT(EM_DIAGRAM):   end;
1207481   +
1207482   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1207483   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1207484   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1207485   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1207486   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1207487   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1207488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207490   +end;
MPRINT(EM_DIAGRAM):   end;
1207491   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207493   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1207494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207495   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1207496   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1207497   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1207498   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1207499   +   end;
MPRINT(EM_DIAGRAM):   end;
1207500   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207501   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1207502   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1207503   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1207504   +   end;
MPRINT(EM_DIAGRAM):   end;
1207505   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1207506   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1207507   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1207508   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1207509   +   end;
MPRINT(EM_DIAGRAM):   end;
1207510   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207511   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1207512   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1207513   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1207514   +   end;
MPRINT(EM_DIAGRAM):   end;
1207515   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207516   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1207517   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1207518   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1207519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207521   +   end;
MPRINT(EM_DIAGRAM):   end;
1207522   +end;
MPRINT(EM_DIAGRAM):   end;
1207523   +
1207524   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1207525   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1207526   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1207527   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1207528   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1207529   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1207530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207532   +end;
MPRINT(EM_DIAGRAM):   end;
1207533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207534   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207535   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1207536   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207537   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207538   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1207539   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1207540   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1207541   +   end;
MPRINT(EM_DIAGRAM):   end;
1207542   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207543   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1207544   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1207545   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1207546   +   end;
MPRINT(EM_DIAGRAM):   end;
1207547   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207548   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1207549   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1207550   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1207551   +   end;
MPRINT(EM_DIAGRAM):   end;
1207552   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207553   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1207554   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1207555   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1207556   +   end;
MPRINT(EM_DIAGRAM):   end;
1207557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207558   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1207559   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1207560   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1207561   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207562   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207563   +   end;
MPRINT(EM_DIAGRAM):   end;
1207564   +end;
MPRINT(EM_DIAGRAM):   end;
1207565   +
1207566   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1207567   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1207568   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1207569   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1207570   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1207571   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1207572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207574   +end;
MPRINT(EM_DIAGRAM):   end;
1207575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207577   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1207578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207579   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207580   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1207581   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1207582   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1207583   +   end;
MPRINT(EM_DIAGRAM):   end;
1207584   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207585   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1207586   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1207587   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1207588   +   end;
MPRINT(EM_DIAGRAM):   end;
1207589   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207590   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1207591   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1207592   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1207593   +   end;
MPRINT(EM_DIAGRAM):   end;
1207594   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207595   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1207596   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1207597   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1207598   +   end;
MPRINT(EM_DIAGRAM):   end;
1207599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207600   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1207601   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1207602   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1207603   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207604   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207605   +   end;
MPRINT(EM_DIAGRAM):   end;
1207606   +end;
MPRINT(EM_DIAGRAM):   end;
1207607   +
1207608   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1207609   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1207610   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1207611   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1207612   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1207613   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1207614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207616   +end;
MPRINT(EM_DIAGRAM):   end;
1207617   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207618   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207619   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1207620   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207621   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207622   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1207623   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1207624   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1207625   +   end;
MPRINT(EM_DIAGRAM):   end;
1207626   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207627   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1207628   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1207629   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1207630   +   end;
MPRINT(EM_DIAGRAM):   end;
1207631   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207632   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1207633   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1207634   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1207635   +   end;
MPRINT(EM_DIAGRAM):   end;
1207636   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207637   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1207638   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1207639   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1207640   +   end;
MPRINT(EM_DIAGRAM):   end;
1207641   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207642   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1207643   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1207644   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1207645   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207646   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207647   +   end;
MPRINT(EM_DIAGRAM):   end;
1207648   +end;
MPRINT(EM_DIAGRAM):   end;
1207649   +
1207650   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1207651   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1207652   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1207653   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1207654   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1207655   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1207656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207658   +end;
MPRINT(EM_DIAGRAM):   end;
1207659   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207660   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207661   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1207662   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207663   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207664   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1207665   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1207666   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1207667   +   end;
MPRINT(EM_DIAGRAM):   end;
1207668   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207669   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1207670   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1207671   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1207672   +   end;
MPRINT(EM_DIAGRAM):   end;
1207673   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207674   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1207675   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1207676   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1207677   +   end;
MPRINT(EM_DIAGRAM):   end;
1207678   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207679   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1207680   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1207681   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1207682   +   end;
MPRINT(EM_DIAGRAM):   end;
1207683   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207684   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1207685   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1207686   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1207687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207689   +   end;
MPRINT(EM_DIAGRAM):   end;
1207690   +end;
MPRINT(EM_DIAGRAM):   end;
1207691   +
1207692   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1207693   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1207694   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1207695   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1207696   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1207697   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1207698   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207699   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207700   +end;
MPRINT(EM_DIAGRAM):   end;
1207701   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207702   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207703   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1207704   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207705   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207706   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1207707   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1207708   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1207709   +   end;
MPRINT(EM_DIAGRAM):   end;
1207710   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207711   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1207712   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1207713   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1207714   +   end;
MPRINT(EM_DIAGRAM):   end;
1207715   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207716   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1207717   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1207718   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1207719   +   end;
MPRINT(EM_DIAGRAM):   end;
1207720   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207721   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1207722   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1207723   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1207724   +   end;
MPRINT(EM_DIAGRAM):   end;
1207725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207726   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1207727   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1207728   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1207729   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207730   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207731   +   end;
MPRINT(EM_DIAGRAM):   end;
1207732   +end;
MPRINT(EM_DIAGRAM):   end;
1207733   +
1207734   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1207735   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1207736   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1207737   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1207738   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1207739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207741   +end;
MPRINT(EM_DIAGRAM):   end;
1207742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207744   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1207745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207746   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207747   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1207748   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1207749   +   end;
MPRINT(EM_DIAGRAM):   end;
1207750   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207751   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1207752   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1207753   +   end;
MPRINT(EM_DIAGRAM):   end;
1207754   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207755   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1207756   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1207757   +   end;
MPRINT(EM_DIAGRAM):   end;
1207758   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207759   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1207760   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1207761   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207762   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207763   +   end;
MPRINT(EM_DIAGRAM):   end;
1207764   +end;
MPRINT(EM_DIAGRAM):   end;
1207765   +
1207766   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1207767   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1207768   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1207769   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1207770   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1207771   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1207772   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207773   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207774   +end;
MPRINT(EM_DIAGRAM):   end;
1207775   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207776   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207777   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1207778   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207779   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1207780   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1207781   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1207782   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1207783   +   end;
MPRINT(EM_DIAGRAM):   end;
1207784   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207785   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1207786   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1207787   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1207788   +   end;
MPRINT(EM_DIAGRAM):   end;
1207789   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207790   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1207791   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1207792   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1207793   +   end;
MPRINT(EM_DIAGRAM):   end;
1207794   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1207795   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1207796   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1207797   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1207798   +   end;
MPRINT(EM_DIAGRAM):   end;
1207799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207800   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1207801   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1207802   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1207803   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207804   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207805   +   end;
MPRINT(EM_DIAGRAM):   end;
1207806   +end;
MPRINT(EM_DIAGRAM):   end;
1207807   +
1207808   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1207809   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1207810   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1207811   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1207812   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1207813   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1207814   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207815   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207816   +end;
MPRINT(EM_DIAGRAM):   end;
1207817   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207818   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207819   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1207820   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207821   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207822   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1207823   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1207824   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1207825   +   end;
MPRINT(EM_DIAGRAM):   end;
1207826   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207827   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1207828   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1207829   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1207830   +   end;
MPRINT(EM_DIAGRAM):   end;
1207831   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207832   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1207833   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1207834   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1207835   +   end;
MPRINT(EM_DIAGRAM):   end;
1207836   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207837   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1207838   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1207839   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1207840   +   end;
MPRINT(EM_DIAGRAM):   end;
1207841   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207842   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1207843   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1207844   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1207845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207847   +   end;
MPRINT(EM_DIAGRAM):   end;
1207848   +end;
MPRINT(EM_DIAGRAM):   end;
1207849   +
1207850   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1207851   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1207852   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1207853   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1207854   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1207855   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1207856   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207857   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207858   +end;
MPRINT(EM_DIAGRAM):   end;
1207859   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207860   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207861   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1207862   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207863   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1207864   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1207865   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1207866   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1207867   +   end;
MPRINT(EM_DIAGRAM):   end;
1207868   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1207869   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1207870   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1207871   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1207872   +   end;
MPRINT(EM_DIAGRAM):   end;
1207873   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207874   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1207875   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1207876   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1207877   +   end;
MPRINT(EM_DIAGRAM):   end;
1207878   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207879   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1207880   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1207881   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1207882   +   end;
MPRINT(EM_DIAGRAM):   end;
1207883   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207884   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1207885   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1207886   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1207887   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207888   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207889   +   end;
MPRINT(EM_DIAGRAM):   end;
1207890   +end;
MPRINT(EM_DIAGRAM):   end;
1207891   +
1207892   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1207893   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1207894   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1207895   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1207896   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1207897   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1207898   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207899   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207900   +end;
MPRINT(EM_DIAGRAM):   end;
1207901   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207902   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207903   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1207904   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207905   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1207906   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1207907   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1207908   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1207909   +   end;
MPRINT(EM_DIAGRAM):   end;
1207910   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1207911   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1207912   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1207913   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1207914   +   end;
MPRINT(EM_DIAGRAM):   end;
1207915   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207916   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1207917   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1207918   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1207919   +   end;
MPRINT(EM_DIAGRAM):   end;
1207920   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207921   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1207922   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1207923   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1207924   +   end;
MPRINT(EM_DIAGRAM):   end;
1207925   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207926   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1207927   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1207928   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1207929   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207930   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207931   +   end;
MPRINT(EM_DIAGRAM):   end;
1207932   +end;
MPRINT(EM_DIAGRAM):   end;
1207933   +
1207934   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1207935   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1207936   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1207937   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1207938   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1207939   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1207940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1207941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207942   +end;
MPRINT(EM_DIAGRAM):   end;
1207943   +else do;
MPRINT(EM_DIAGRAM):   else do;
1207944   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1207945   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1207946   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1207947   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1207948   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1207949   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1207950   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1207951   +   end;
MPRINT(EM_DIAGRAM):   end;
1207952   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1207953   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1207954   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1207955   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1207956   +   end;
MPRINT(EM_DIAGRAM):   end;
1207957   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1207958   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1207959   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1207960   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1207961   +   end;
MPRINT(EM_DIAGRAM):   end;
1207962   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1207963   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1207964   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1207965   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1207966   +   end;
MPRINT(EM_DIAGRAM):   end;
1207967   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1207968   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1207969   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1207970   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1207971   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1207972   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207973   +   end;
MPRINT(EM_DIAGRAM):   end;
1207974   +end;
MPRINT(EM_DIAGRAM):   end;
1207975   +
1207976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207977   +*** Checking missing input Interval
1207978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1207979   +
1207980   +IF NMISS(
1207981   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1207982   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1207983   +
1207984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1207985   +END;
MPRINT(EM_DIAGRAM):   END;
1207986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207987   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1207988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207989   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1207990   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1207991   +END;
MPRINT(EM_DIAGRAM):   END;
1207992   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1207993   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1207994   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1207995   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1207996   +END;
MPRINT(EM_DIAGRAM):   END;
1207997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1207998   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1207999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208001   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1208002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208003   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1208004   +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
1208005   +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
1208006   +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
1208007   +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
1208008   +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
1208009   +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
1208010   +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
1208011   +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
1208012   +        GRP_Income2  +     0.51800912898069 * GRP_Income3
1208013   +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
1208014   +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
1208015   +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
1208016   +          +     0.03411739869638 * GRP_MntFishProducts3
1208017   +          +      -0.083693402353 * GRP_MntFishProducts4
1208018   +          +     -0.1318128730187 * GRP_MntGoldProds2
1208019   +          +     -0.0614737729382 * GRP_MntGoldProds3
1208020   +          +    -0.00372986687449 * GRP_MntGoldProds4
1208021   +          +     -0.3129171829017 * GRP_MntMeatProducts2
1208022   +          +     0.01519664718127 * GRP_MntMeatProducts3
1208023   +          +     0.29997111548812 * GRP_MntMeatProducts4
1208024   +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
1208025   +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
1208026   +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
1208027   +          +     0.23943411636141 * GRP_NumCatalogPurchases4
1208028   +          +    -0.68715024477164 * GRP_NumDistPurchases2
1208029   +          +    -0.09178471992122 * GRP_NumDistPurchases3
1208030   +          +    -0.01170225640351 * GRP_NumDistPurchases4
1208031   +          +    -0.14760833919227 * GRP_NumWebPurchases2
1208032   +          +     0.02966820025811 * GRP_NumWebPurchases3
1208033   +          +    -0.04127892210576 * GRP_NumWebPurchases4
1208034   +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
1208035   +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
1208036   +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
1208037   +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
1208038   +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
1208039   +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 * 
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 * 
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 + 
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 + 
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 + 
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 + 
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 + 
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 + 
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 * 
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 * 
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 * 
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 * 
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 * 
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 * 
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 + 
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 * 
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 + 
-0.15382569411658 * GRP_Recency4 ;
1208040   +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
1208041   +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
1208042   +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
1208043   +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
1208044   +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
1208045   +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
1208046   +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
1208047   +          +     0.00842475350903 * GRP_MntFishProducts3
1208048   +          +     -0.1623103908885 * GRP_MntFishProducts4
1208049   +          +    -0.23845524931139 * GRP_MntGoldProds2
1208050   +          +    -0.07128567155438 * GRP_MntGoldProds3
1208051   +          +     0.25778887379163 * GRP_MntGoldProds4
1208052   +          +    -0.12224351227219 * GRP_MntMeatProducts2
1208053   +          +     0.06269922653052 * GRP_MntMeatProducts3
1208054   +          +      0.2587215409794 * GRP_MntMeatProducts4
1208055   +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
1208056   +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
1208057   +          +     0.05177526225067 * GRP_NumCatalogPurchases3
1208058   +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
1208059   +          +     0.12374838743082 * GRP_NumDistPurchases2
1208060   +          +    -0.19910688422086 * GRP_NumDistPurchases3
1208061   +          +    -0.03804569737208 * GRP_NumDistPurchases4
1208062   +          +    -0.17179633678901 * GRP_NumWebPurchases2
1208063   +          +    -0.08560184232365 * GRP_NumWebPurchases3
1208064   +          +     0.09237237622553 * GRP_NumWebPurchases4
1208065   +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
1208066   +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
1208067   +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
1208068   +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
1208069   +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
1208070   +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 * 
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 * 
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 + 
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 + 
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 + 
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 + 
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 + 
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 + 
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476 
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 * 
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 * 
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 * 
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 * 
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 * 
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 + 
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 * 
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 + 
0.00206593904485 * GRP_Recency4 ;
1208071   +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
1208072   +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
1208073   +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
1208074   +        GRP_Income2  +      -0.028464296882 * GRP_Income3
1208075   +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
1208076   +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
1208077   +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
1208078   +          +    -0.07078012229572 * GRP_MntFishProducts3
1208079   +          +    -0.14569186671189 * GRP_MntFishProducts4
1208080   +          +     0.14963390032413 * GRP_MntGoldProds2
1208081   +          +    -0.11869917970226 * GRP_MntGoldProds3
1208082   +          +     0.25943105626615 * GRP_MntGoldProds4
1208083   +          +     0.36609689271233 * GRP_MntMeatProducts2
1208084   +          +     0.10969864655073 * GRP_MntMeatProducts3
1208085   +          +    -0.03446779336952 * GRP_MntMeatProducts4
1208086   +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
1208087   +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
1208088   +          +     0.39758714937962 * GRP_NumCatalogPurchases3
1208089   +          +     0.31434011051179 * GRP_NumCatalogPurchases4
1208090   +          +     0.08068432649382 * GRP_NumDistPurchases2
1208091   +          +    -0.08875599058351 * GRP_NumDistPurchases3
1208092   +          +     0.26738740475822 * GRP_NumDistPurchases4
1208093   +          +     -0.0916247468051 * GRP_NumWebPurchases2
1208094   +          +    -0.17267741073665 * GRP_NumWebPurchases3
1208095   +          +     0.01349113315351 * GRP_NumWebPurchases4
1208096   +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
1208097   +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
1208098   +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
1208099   +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
1208100   +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
1208101   +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 * 
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 * 
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 + 
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 + 
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 + 
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 + 
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 + 
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 + 
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 + 
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 * 
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 * 
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 * 
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 * 
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 * 
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 + 
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 * 
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 + 
0.28490847560375 * GRP_Recency4 ;
1208102   +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
1208103   +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
1208104   +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
1208105   +        GRP_Income2  +     0.01867364051002 * GRP_Income3
1208106   +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
1208107   +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
1208108   +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
1208109   +          +    -0.18334484867808 * GRP_MntFishProducts3
1208110   +          +     0.13484477561766 * GRP_MntFishProducts4
1208111   +          +    -0.05145913380692 * GRP_MntGoldProds2
1208112   +          +     0.04459987080173 * GRP_MntGoldProds3
1208113   +          +     0.01539767655772 * GRP_MntGoldProds4
1208114   +          +     0.26537148543352 * GRP_MntMeatProducts2
1208115   +          +     0.22913678530176 * GRP_MntMeatProducts3
1208116   +          +     0.21262490658374 * GRP_MntMeatProducts4
1208117   +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
1208118   +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
1208119   +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
1208120   +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
1208121   +          +     0.09224372228857 * GRP_NumDistPurchases2
1208122   +          +    -0.14205094961773 * GRP_NumDistPurchases3
1208123   +          +    -0.27160467877541 * GRP_NumDistPurchases4
1208124   +          +    -0.15428446875019 * GRP_NumWebPurchases2
1208125   +          +    -0.36914157795453 * GRP_NumWebPurchases3
1208126   +          +    -0.41610537355059 * GRP_NumWebPurchases4
1208127   +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
1208128   +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
1208129   +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
1208130   +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
1208131   +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
1208132   +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 * 
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 * 
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 + 
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 + 
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 + 
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 + 
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352 
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 * 
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 + 
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 + 
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 + 
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 + 
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 + 
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827 
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 + 
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 * 
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
1208133   +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
1208134   +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
1208135   +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
1208136   +        GRP_Income2  +     0.20911873861779 * GRP_Income3
1208137   +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
1208138   +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
1208139   +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
1208140   +          +    -0.08952948139975 * GRP_MntFishProducts3
1208141   +          +     0.15338133379465 * GRP_MntFishProducts4
1208142   +          +     0.04821845492824 * GRP_MntGoldProds2
1208143   +          +     0.20117781904284 * GRP_MntGoldProds3
1208144   +          +     0.13013396690778 * GRP_MntGoldProds4
1208145   +          +    -0.03940841472157 * GRP_MntMeatProducts2
1208146   +          +     0.03161017721112 * GRP_MntMeatProducts3
1208147   +          +    -0.21938330779867 * GRP_MntMeatProducts4
1208148   +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
1208149   +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
1208150   +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
1208151   +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
1208152   +          +    -0.16058154480995 * GRP_NumDistPurchases2
1208153   +          +    -0.30101518928361 * GRP_NumDistPurchases3
1208154   +          +      0.0473480026433 * GRP_NumDistPurchases4
1208155   +          +     0.03132883547053 * GRP_NumWebPurchases2
1208156   +          +    -0.29425936985479 * GRP_NumWebPurchases3
1208157   +          +    -0.12527625315403 * GRP_NumWebPurchases4
1208158   +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
1208159   +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
1208160   +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
1208161   +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
1208162   +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
1208163   +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 * 
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 * 
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 + 
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 + 
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 + 
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 + 
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 + 
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 + 
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786 
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 * 
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 * 
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 * 
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 * 
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 * 
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 + 
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 * 
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 + 
-0.28363324780869 * GRP_Recency4 ;
1208164   +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
1208165   +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
1208166   +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
1208167   +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
1208168   +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
1208169   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1208170   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1208171   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1208172   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1208173   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1208174   +END;
MPRINT(EM_DIAGRAM):   END;
1208175   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208176   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1208177   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1208178   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1208179   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1208180   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1208181   +END;
MPRINT(EM_DIAGRAM):   END;
1208182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208183   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1208184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208185   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1208186   +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
1208187   +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
1208188   +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 + 
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
1208189   +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
1208190   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1208191   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1208192   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1208193   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1208194   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1208195   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1208196   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1208197   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1208198   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1208199   +END;
MPRINT(EM_DIAGRAM):   END;
1208200   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1208201   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1208202   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1208203   +END;
MPRINT(EM_DIAGRAM):   END;
1208204   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1208205   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1208206   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1208207   +END;
MPRINT(EM_DIAGRAM):   END;
1208208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208209   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1208210   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1208211   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1208212   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1208213   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1208214   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1208215   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1208216   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1208217   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1208218   +END;
MPRINT(EM_DIAGRAM):   END;
1208219   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1208220   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1208221   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1208222   +drop
1208223   +H11
1208224   +H12
1208225   +H13
1208226   +H14
1208227   +H15
1208228   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1208229   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1208230    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1208231    quit;
1208232    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1208233    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1208234    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1208235    retain ID 2 Node "Neural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural22";
1208236    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1208237    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208238    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1208239    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208240    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208241    proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
1208242    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208244    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208245    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1208246    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1208247    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208248    proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
1208249    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1208250    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1208251    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208252    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208253    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208254    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1208255    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208256    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208257    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1208258    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1208258  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 925 rows and 5 columns.

1208259    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208260    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1208261    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 925 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 925 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208262    filename _pref
1208262  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1208263    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1208264    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1208265   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1208266   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1208267   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1208268   +
1208269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208270   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1208271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208272   +LABEL GRP_AcceptedCmp5 =
1208273   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1208274   +
1208275   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1208276   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1208277   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1208278   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1208279   +end;
MPRINT(EM_DIAGRAM):   end;
1208280   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1208281   +if (_UFORMAT eq '0'
1208282   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1208283   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1208284   +end;
MPRINT(EM_DIAGRAM):   end;
1208285   +else
1208286   +if (_UFORMAT eq '1'
1208287   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1208288   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1208289   +end;
MPRINT(EM_DIAGRAM):   end;
1208290   +else do;
MPRINT(EM_DIAGRAM):   else do;
1208291   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1208292   +end;
MPRINT(EM_DIAGRAM):   end;
1208293   +end;
MPRINT(EM_DIAGRAM):   end;
1208294   +
1208295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208296   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1208297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208298   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1208299   +
1208300   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1208301   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1208302   +end;
MPRINT(EM_DIAGRAM):   end;
1208303   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1208304   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1208305   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1208306   +end;
MPRINT(EM_DIAGRAM):   end;
1208307   +else
1208308   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1208309   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1208310   +end;
MPRINT(EM_DIAGRAM):   end;
1208311   +else
1208312   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1208313   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1208314   +end;
MPRINT(EM_DIAGRAM):   end;
1208315   +else
1208316   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1208317   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1208318   +end;
MPRINT(EM_DIAGRAM):   end;
1208319   +end;
MPRINT(EM_DIAGRAM):   end;
1208320   +
1208321   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208322   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1208323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208324   +LABEL GRP_Income =
1208325   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1208326   +
1208327   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1208328   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1208329   +end;
MPRINT(EM_DIAGRAM):   end;
1208330   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1208331   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1208332   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1208333   +end;
MPRINT(EM_DIAGRAM):   end;
1208334   +else
1208335   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1208336   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1208337   +end;
MPRINT(EM_DIAGRAM):   end;
1208338   +else
1208339   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1208340   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1208341   +end;
MPRINT(EM_DIAGRAM):   end;
1208342   +else
1208343   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1208344   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1208345   +end;
MPRINT(EM_DIAGRAM):   end;
1208346   +end;
MPRINT(EM_DIAGRAM):   end;
1208347   +
1208348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208349   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1208350   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208351   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1208352   +
1208353   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1208354   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1208355   +end;
MPRINT(EM_DIAGRAM):   end;
1208356   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1208357   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1208358   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1208359   +end;
MPRINT(EM_DIAGRAM):   end;
1208360   +else
1208361   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1208362   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1208363   +end;
MPRINT(EM_DIAGRAM):   end;
1208364   +else
1208365   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1208366   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1208367   +end;
MPRINT(EM_DIAGRAM):   end;
1208368   +else
1208369   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1208370   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1208371   +end;
MPRINT(EM_DIAGRAM):   end;
1208372   +end;
MPRINT(EM_DIAGRAM):   end;
1208373   +
1208374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208375   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1208376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208377   +LABEL GRP_MntFishProducts =
1208378   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1208379   +
1208380   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1208381   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1208382   +end;
MPRINT(EM_DIAGRAM):   end;
1208383   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1208384   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1208385   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1208386   +end;
MPRINT(EM_DIAGRAM):   end;
1208387   +else
1208388   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1208389   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1208390   +end;
MPRINT(EM_DIAGRAM):   end;
1208391   +else
1208392   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1208393   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1208394   +end;
MPRINT(EM_DIAGRAM):   end;
1208395   +else
1208396   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1208397   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1208398   +end;
MPRINT(EM_DIAGRAM):   end;
1208399   +end;
MPRINT(EM_DIAGRAM):   end;
1208400   +
1208401   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208402   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1208403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208404   +LABEL GRP_MntGoldProds =
1208405   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1208406   +
1208407   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1208408   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1208409   +end;
MPRINT(EM_DIAGRAM):   end;
1208410   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1208411   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1208412   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1208413   +end;
MPRINT(EM_DIAGRAM):   end;
1208414   +else
1208415   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1208416   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1208417   +end;
MPRINT(EM_DIAGRAM):   end;
1208418   +else
1208419   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1208420   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1208421   +end;
MPRINT(EM_DIAGRAM):   end;
1208422   +else
1208423   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1208424   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1208425   +end;
MPRINT(EM_DIAGRAM):   end;
1208426   +end;
MPRINT(EM_DIAGRAM):   end;
1208427   +
1208428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208429   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1208430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208431   +LABEL GRP_MntMeatProducts =
1208432   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1208433   +
1208434   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1208435   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1208436   +end;
MPRINT(EM_DIAGRAM):   end;
1208437   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1208438   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1208439   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1208440   +end;
MPRINT(EM_DIAGRAM):   end;
1208441   +else
1208442   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1208443   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1208444   +end;
MPRINT(EM_DIAGRAM):   end;
1208445   +else
1208446   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1208447   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1208448   +end;
MPRINT(EM_DIAGRAM):   end;
1208449   +else
1208450   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1208451   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1208452   +end;
MPRINT(EM_DIAGRAM):   end;
1208453   +end;
MPRINT(EM_DIAGRAM):   end;
1208454   +
1208455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208456   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1208457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208458   +LABEL GRP_MntWines =
1208459   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1208460   +
1208461   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1208462   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1208463   +end;
MPRINT(EM_DIAGRAM):   end;
1208464   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1208465   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1208466   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1208467   +end;
MPRINT(EM_DIAGRAM):   end;
1208468   +else
1208469   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1208470   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1208471   +end;
MPRINT(EM_DIAGRAM):   end;
1208472   +else
1208473   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1208474   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1208475   +end;
MPRINT(EM_DIAGRAM):   end;
1208476   +else
1208477   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1208478   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1208479   +end;
MPRINT(EM_DIAGRAM):   end;
1208480   +end;
MPRINT(EM_DIAGRAM):   end;
1208481   +
1208482   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208483   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1208484   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208485   +LABEL GRP_NumCatalogPurchases =
1208486   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1208487   +
1208488   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1208489   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1208490   +end;
MPRINT(EM_DIAGRAM):   end;
1208491   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1208492   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1208493   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1208494   +end;
MPRINT(EM_DIAGRAM):   end;
1208495   +else
1208496   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1208497   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1208498   +end;
MPRINT(EM_DIAGRAM):   end;
1208499   +else
1208500   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1208501   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1208502   +end;
MPRINT(EM_DIAGRAM):   end;
1208503   +else
1208504   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1208505   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1208506   +end;
MPRINT(EM_DIAGRAM):   end;
1208507   +end;
MPRINT(EM_DIAGRAM):   end;
1208508   +
1208509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208510   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1208511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208512   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1208513   +
1208514   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1208515   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1208516   +end;
MPRINT(EM_DIAGRAM):   end;
1208517   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1208518   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1208519   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1208520   +end;
MPRINT(EM_DIAGRAM):   end;
1208521   +else
1208522   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1208523   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1208524   +end;
MPRINT(EM_DIAGRAM):   end;
1208525   +else
1208526   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1208527   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1208528   +end;
MPRINT(EM_DIAGRAM):   end;
1208529   +else
1208530   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1208531   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1208532   +end;
MPRINT(EM_DIAGRAM):   end;
1208533   +end;
MPRINT(EM_DIAGRAM):   end;
1208534   +
1208535   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208536   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1208537   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208538   +LABEL GRP_NumWebPurchases =
1208539   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1208540   +
1208541   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1208542   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1208543   +end;
MPRINT(EM_DIAGRAM):   end;
1208544   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1208545   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1208546   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1208547   +end;
MPRINT(EM_DIAGRAM):   end;
1208548   +else
1208549   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1208550   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1208551   +end;
MPRINT(EM_DIAGRAM):   end;
1208552   +else
1208553   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1208554   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1208555   +end;
MPRINT(EM_DIAGRAM):   end;
1208556   +else
1208557   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1208558   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1208559   +end;
MPRINT(EM_DIAGRAM):   end;
1208560   +end;
MPRINT(EM_DIAGRAM):   end;
1208561   +
1208562   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208563   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1208564   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208565   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1208566   +
1208567   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1208568   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1208569   +end;
MPRINT(EM_DIAGRAM):   end;
1208570   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1208571   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1208572   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1208573   +end;
MPRINT(EM_DIAGRAM):   end;
1208574   +else
1208575   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1208576   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1208577   +end;
MPRINT(EM_DIAGRAM):   end;
1208578   +else
1208579   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1208580   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1208581   +end;
MPRINT(EM_DIAGRAM):   end;
1208582   +else
1208583   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1208584   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1208585   +end;
MPRINT(EM_DIAGRAM):   end;
1208586   +end;
MPRINT(EM_DIAGRAM):   end;
1208587   +
1208588   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208589   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1208590   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208591   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1208592   +
1208593   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1208594   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1208595   +end;
MPRINT(EM_DIAGRAM):   end;
1208596   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1208597   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1208598   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1208599   +end;
MPRINT(EM_DIAGRAM):   end;
1208600   +else
1208601   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1208602   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1208603   +end;
MPRINT(EM_DIAGRAM):   end;
1208604   +else
1208605   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1208606   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1208607   +end;
MPRINT(EM_DIAGRAM):   end;
1208608   +else
1208609   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1208610   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1208611   +end;
MPRINT(EM_DIAGRAM):   end;
1208612   +end;
MPRINT(EM_DIAGRAM):   end;
1208613   +
1208614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208615   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1208616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208617   +LABEL GRP_Recency =
1208618   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1208619   +
1208620   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1208621   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1208622   +end;
MPRINT(EM_DIAGRAM):   end;
1208623   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1208624   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1208625   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1208626   +end;
MPRINT(EM_DIAGRAM):   end;
1208627   +else
1208628   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1208629   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1208630   +end;
MPRINT(EM_DIAGRAM):   end;
1208631   +else
1208632   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1208633   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1208634   +end;
MPRINT(EM_DIAGRAM):   end;
1208635   +else
1208636   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1208637   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1208638   +end;
MPRINT(EM_DIAGRAM):   end;
1208639   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1208640    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1208641    quit;
1208642    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1208643    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1208644    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1208645    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1208646    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1208647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208648    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1208649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208650    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208651    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1208652    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208654    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208655    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1208656    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1208657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208658    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1208659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1208660    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1208661    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208663    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208664    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1208665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208666    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208667    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1208668    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1208668  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1208669    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208670    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1208671    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208672    filename _pref
1208672  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1208673    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1208674    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1208675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208676   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1208677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1208678   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1208679   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1208680   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1208681    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1208682    quit;
1208683    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1208684    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1208685    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1208686    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1208687    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1208688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208689    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1208690    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208692    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1208693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208695    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208696    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1208697    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1208698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208699    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1208700    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1208701    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1208702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208704    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208705    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1208706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208707    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208708    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1208709    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1208709  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1208710    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208711    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1208712    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 944 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208713    filename _pref
1208713  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1208714    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1208715    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1208716   +
1208717   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1208718   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1208718  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1208719   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1208720   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1208721   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1208722   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1208723   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1208724    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1208725    quit;
1208726    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1208727    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1208728    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1208729    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1208730    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1208731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208732    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1208733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208735    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1208736    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208737    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208738    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208739    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1208740    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1208741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208742    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1208743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208744    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1208745    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208747    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208748    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1208749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208750    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208751    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1208752    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1208752  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1208753    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208754    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1208755    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 983 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208756    filename _pref
1208756  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1208757    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1208758    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1208759   +
1208760   +
1208761   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1208762   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1208763   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1208764   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1208765   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1208766   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208767   +
1208768   +
1208769   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1208770   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1208771   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1208772   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1208773   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1208774   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208775   +
1208776   +
1208777   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1208778   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1208779   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1208780   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1208781   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1208782   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208783   +
1208784   +
1208785   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1208786   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1208787   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1208788   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1208789   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1208790   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208791   +
1208792   +
1208793   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1208794   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1208795   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1208796   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1208797   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1208798   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208799   +
1208800   +
1208801   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1208802   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1208803   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1208804   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1208805   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1208806   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208807   +
1208808   +
1208809   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1208810   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1208811   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1208812   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1208813   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1208814   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208815   +
1208816   +
1208817   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1208818   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1208819   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1208820   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1208821   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1208822   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1208823   +if
1208824   +_FILTERNORM1 not in ( '.')
1208825   + and
1208826   +_FILTERNORM2 not in ( '.')
1208827   + and
1208828   +_FILTERNORM3 not in ( '.')
1208829   + and
1208830   +_FILTERNORM4 not in ( '.')
1208831   + and
1208832   +_FILTERNORM5 not in ( '.')
1208833   + and
1208834   +_FILTERNORM6 not in ( '.')
1208835   + and
1208836   +_FILTERNORM7 not in ( ' ')
1208837   + and
1208838   +_FILTERNORM8 not in ( ' ')
1208839   +and
1208840   +( Dt_Customer ne .)
1208841   +and ( Income ne . and (Income<=107000))
1208842   +and ( Kidhome ne .)
1208843   +and ( MntFishProducts ne .)
1208844   +and ( MntFruits ne .)
1208845   +and ( MntGoldProds ne .)
1208846   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1208847   +and ( MntSweetProducts ne .)
1208848   +and ( MntWines ne .)
1208849   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1208850   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1208851   +and ( NumStorePurchases ne .)
1208852   +and ( NumWebPurchases ne .)
1208853   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1208854   +and ( Recency ne .)
1208855   +and ( Teenhome ne .)
1208856   +and ( Year_Birth ne .)
1208857   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1208858   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1208859   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1208860   +end;
MPRINT(EM_DIAGRAM):   end;
1208861   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1208862   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1208863    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1208864    quit;
1208865    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1208866    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1208867    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1208868    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1208869    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1208870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208871    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1208872    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208874    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1208875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

1208877    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208878    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1208879    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1208880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208881    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1208882    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1208883    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1208884    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208886    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1208887    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1208888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1208889    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208890    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1208891    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1208891  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1208892    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1208893    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1208894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1049 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208895    %macro varDept(fcmpdata=,id=);
1208896    %global nobs&id scoreFlag&id;
1208897    %let scoreFlag&id = 0;
1208898    %if &id=1 or ^&fcmpStart %then %do;
1208899    proc sort data=&fcmpdata out=_temp&id nodupkey;
1208900    by NAME;
1208901    where id=&id and LHS in( %let j=1;
1208902    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1208903    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1208904    "&var" %let j = %eval(&j+1);
1208905    %end;
1208906    );
1208907    run;
1208908    %let dsid = %sysfunc(open(_temp&id));
1208909    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1208910    %let dsid = %sysfunc(close(&dsid));
1208911    %if &&nobs&id %then %do;
1208912    %let scoreFlag&id = 1;
1208913    %let fcmpStart = 1;
1208914    %end;
1208915    %else %let fcmpStart = 0;
1208916    %end;
1208917    %else %do;
1208918    proc sort data=&fcmpdata out=_tempid;
1208919    where id=&id;
1208920    by LHS;
1208921    run;
1208922    %let dsid = %sysfunc(open(_tempid));
1208923    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1208924    %let dsid = %sysfunc(close(&dsid));
1208925    %if ^&&nobs&id %then %do;
1208926    proc datasets lib=work nolist;
1208927    delete _tempid;
1208928    run;
1208929    quit;
1208930    %end;
1208931    %else %do;
1208932    data _tempAll;
1208933    set %let j=%eval(&id-1);
1208934    %do x=1 %to &j;
1208935    %if &&nobs&x %then %do;
1208936    _temp&x %end;
1208937    %end;
1208938    ;
1208939    run;
1208940    proc sql;
1208941    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1208941  ! work._tempid p2 where p.name=p2.lhs;
1208942    quit;
1208943    data _temp&id;
1208944    set _temp&id;
1208945    where LHS ne '' and NAME ne '' and Node ne '';
1208946    run;
1208947    proc datasets lib=work nolist;
1208948    delete _tempAll;
1208949    run;
1208950    %let dsid = %sysfunc(open(_temp&id));
1208951    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1208952    %let dsid = %sysfunc(close(&dsid));
1208953    %if ^&&nobs&id %then %do;
1208954    proc datasets lib=work nolist;
1208955    delete _temp&id;
1208956    run;
1208957    quit;
1208958    %end;
1208959    %else %do;
1208960    %let scoreFlag&id = 1;
1208961    data _temp&id;
1208962    set _temp&id;
1208963    where LHS ne NAME and node ne '';
1208964    run;
1208965    %let dsid = %sysfunc(open(_temp&id));
1208966    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1208967    %let dsid = %sysfunc(close(&dsid));
1208968    %if ^&&nobs&id %then %do;
1208969    proc datasets lib=work nolist;
1208970    delete _temp&id;
1208971    run;
1208972    quit;
1208973    %end;
1208974    %else %do;
1208975    proc sort data=_temp&id nodupkey;
1208976    by LHS NAME;
1208977    run;
1208978    %end;
1208979    %end;
1208980    %end;
1208981    %end;
1208982    %mend varDept;
1208983    %macro optCode(outdata=fcmpdata);
1208984    %global fcmpStart;
1208985    %let fcmpStart = 0;
1208986    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1208987    %let NumNodes=9;
1208988    %do k=1 %to &NumNodes;
1208989    %vardept(fcmpdata=&outdata, id=&k);
1208990    %end;
1208991    %mend optCode;
1208992    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1208993    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1208994    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1208995    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1208996    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1208997    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1208998    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1208999    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1209000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1209001    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1209002    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1209002  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1209003    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1209004    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1209005    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1209006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209007    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1209008    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1209009    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1209010    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209011    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1209012    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1209013    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1209014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209015    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1209016    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1209016  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1209017    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1209018    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1209019    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1209020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209021    filename _pref
1209021  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
1209022    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1209023    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas.
1209024   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1209025   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1209026   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1209027   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1209028   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1209029   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1209030   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1209031   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1209032   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1209033   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1209034   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1209035   +LENGTH _WARN_ $4
1209036   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1209037   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1209038   +
1209039   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1209040   +
1209041   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1209042   +
1209043   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1209044   +
1209045   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1209046   +
1209047   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1209048   +
1209049   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1209050   +
1209051   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1209052   +
1209053   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1209054   +
1209055   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1209056   +
1209057   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1209058   +
1209059   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1209060   +
1209061   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1209062   +
1209063   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1209064   +
1209065   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1209066   +
1209067   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1209068   +
1209069   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1209070   +
1209071   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1209072   +
1209073   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1209074   +
1209075   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1209076   +
1209077   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1209078   +
1209079   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1209080   +
1209081   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1209082   +
1209083   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1209084   +
1209085   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1209086   +
1209087   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1209088   +
1209089   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1209090   +
1209091   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1209092   +
1209093   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1209094   +
1209095   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1209096   +
1209097   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1209098   +
1209099   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1209100   +
1209101   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1209102   +
1209103   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1209104   +
1209105   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1209106   +
1209107   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1209108   +
1209109   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1209110   +
1209111   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1209112   +
1209113   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1209114   +
1209115   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1209116   +
1209117   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1209118   +
1209119   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1209120   +
1209121   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1209122   +
1209123   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1209124   +
1209125   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1209126   +
1209127   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1209128   +
1209129   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1209130   +
1209131   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1209132   +
1209133   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1209134   +
1209135   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1209136   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1209137   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1209138   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1209139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209141   +end;
MPRINT(EM_DIAGRAM):   end;
1209142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209144   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1209145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209146   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1209147   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1209148   +   end;
MPRINT(EM_DIAGRAM):   end;
1209149   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1209150   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1209151   +   end;
MPRINT(EM_DIAGRAM):   end;
1209152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209153   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1209154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209156   +   end;
MPRINT(EM_DIAGRAM):   end;
1209157   +end;
MPRINT(EM_DIAGRAM):   end;
1209158   +
1209159   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1209160   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1209161   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1209162   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1209163   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1209164   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1209165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209167   +end;
MPRINT(EM_DIAGRAM):   end;
1209168   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209169   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209170   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1209171   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209172   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1209173   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1209174   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1209175   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1209176   +   end;
MPRINT(EM_DIAGRAM):   end;
1209177   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1209178   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1209179   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1209180   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1209181   +   end;
MPRINT(EM_DIAGRAM):   end;
1209182   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209183   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1209184   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1209185   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1209186   +   end;
MPRINT(EM_DIAGRAM):   end;
1209187   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209188   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1209189   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1209190   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1209191   +   end;
MPRINT(EM_DIAGRAM):   end;
1209192   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209193   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1209194   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1209195   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1209196   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209197   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209198   +   end;
MPRINT(EM_DIAGRAM):   end;
1209199   +end;
MPRINT(EM_DIAGRAM):   end;
1209200   +
1209201   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1209202   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1209203   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1209204   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1209205   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1209206   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1209207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209209   +end;
MPRINT(EM_DIAGRAM):   end;
1209210   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209211   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209212   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1209213   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209214   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1209215   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1209216   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1209217   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1209218   +   end;
MPRINT(EM_DIAGRAM):   end;
1209219   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209220   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1209221   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1209222   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1209223   +   end;
MPRINT(EM_DIAGRAM):   end;
1209224   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1209225   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1209226   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1209227   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1209228   +   end;
MPRINT(EM_DIAGRAM):   end;
1209229   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209230   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1209231   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1209232   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1209233   +   end;
MPRINT(EM_DIAGRAM):   end;
1209234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209235   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1209236   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1209237   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1209238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209240   +   end;
MPRINT(EM_DIAGRAM):   end;
1209241   +end;
MPRINT(EM_DIAGRAM):   end;
1209242   +
1209243   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1209244   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1209245   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1209246   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1209247   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1209248   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1209249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209251   +end;
MPRINT(EM_DIAGRAM):   end;
1209252   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209254   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1209255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209256   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209257   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1209258   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1209259   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1209260   +   end;
MPRINT(EM_DIAGRAM):   end;
1209261   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209262   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1209263   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1209264   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1209265   +   end;
MPRINT(EM_DIAGRAM):   end;
1209266   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209267   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1209268   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1209269   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1209270   +   end;
MPRINT(EM_DIAGRAM):   end;
1209271   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209272   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1209273   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1209274   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1209275   +   end;
MPRINT(EM_DIAGRAM):   end;
1209276   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209277   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1209278   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1209279   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1209280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209282   +   end;
MPRINT(EM_DIAGRAM):   end;
1209283   +end;
MPRINT(EM_DIAGRAM):   end;
1209284   +
1209285   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1209286   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1209287   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1209288   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1209289   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1209290   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1209291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209293   +end;
MPRINT(EM_DIAGRAM):   end;
1209294   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209296   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1209297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209298   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209299   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1209300   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1209301   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1209302   +   end;
MPRINT(EM_DIAGRAM):   end;
1209303   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209304   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1209305   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1209306   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1209307   +   end;
MPRINT(EM_DIAGRAM):   end;
1209308   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209309   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1209310   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1209311   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1209312   +   end;
MPRINT(EM_DIAGRAM):   end;
1209313   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209314   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1209315   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1209316   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1209317   +   end;
MPRINT(EM_DIAGRAM):   end;
1209318   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209319   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1209320   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1209321   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1209322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209324   +   end;
MPRINT(EM_DIAGRAM):   end;
1209325   +end;
MPRINT(EM_DIAGRAM):   end;
1209326   +
1209327   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1209328   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1209329   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1209330   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1209331   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1209332   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1209333   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209334   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209335   +end;
MPRINT(EM_DIAGRAM):   end;
1209336   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209337   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209338   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1209339   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209340   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209341   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1209342   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1209343   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1209344   +   end;
MPRINT(EM_DIAGRAM):   end;
1209345   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209346   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1209347   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1209348   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1209349   +   end;
MPRINT(EM_DIAGRAM):   end;
1209350   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209351   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1209352   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1209353   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1209354   +   end;
MPRINT(EM_DIAGRAM):   end;
1209355   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209356   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1209357   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1209358   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1209359   +   end;
MPRINT(EM_DIAGRAM):   end;
1209360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209361   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1209362   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1209363   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1209364   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209365   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209366   +   end;
MPRINT(EM_DIAGRAM):   end;
1209367   +end;
MPRINT(EM_DIAGRAM):   end;
1209368   +
1209369   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1209370   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1209371   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1209372   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1209373   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1209374   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1209375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209377   +end;
MPRINT(EM_DIAGRAM):   end;
1209378   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209379   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209380   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1209381   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209382   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209383   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1209384   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1209385   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1209386   +   end;
MPRINT(EM_DIAGRAM):   end;
1209387   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209388   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1209389   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1209390   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1209391   +   end;
MPRINT(EM_DIAGRAM):   end;
1209392   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209393   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1209394   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1209395   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1209396   +   end;
MPRINT(EM_DIAGRAM):   end;
1209397   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209398   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1209399   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1209400   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1209401   +   end;
MPRINT(EM_DIAGRAM):   end;
1209402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209403   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1209404   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1209405   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1209406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209408   +   end;
MPRINT(EM_DIAGRAM):   end;
1209409   +end;
MPRINT(EM_DIAGRAM):   end;
1209410   +
1209411   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1209412   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1209413   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1209414   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1209415   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1209416   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1209417   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209418   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209419   +end;
MPRINT(EM_DIAGRAM):   end;
1209420   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209421   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209422   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1209423   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209424   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209425   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1209426   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1209427   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1209428   +   end;
MPRINT(EM_DIAGRAM):   end;
1209429   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209430   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1209431   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1209432   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1209433   +   end;
MPRINT(EM_DIAGRAM):   end;
1209434   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209435   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1209436   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1209437   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1209438   +   end;
MPRINT(EM_DIAGRAM):   end;
1209439   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209440   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1209441   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1209442   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1209443   +   end;
MPRINT(EM_DIAGRAM):   end;
1209444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209445   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1209446   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1209447   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1209448   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209449   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209450   +   end;
MPRINT(EM_DIAGRAM):   end;
1209451   +end;
MPRINT(EM_DIAGRAM):   end;
1209452   +
1209453   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1209454   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1209455   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1209456   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1209457   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1209458   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209459   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209460   +end;
MPRINT(EM_DIAGRAM):   end;
1209461   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209462   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209463   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1209464   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209465   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209466   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1209467   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1209468   +   end;
MPRINT(EM_DIAGRAM):   end;
1209469   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209470   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1209471   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1209472   +   end;
MPRINT(EM_DIAGRAM):   end;
1209473   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209474   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1209475   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1209476   +   end;
MPRINT(EM_DIAGRAM):   end;
1209477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209478   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1209479   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1209480   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209481   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209482   +   end;
MPRINT(EM_DIAGRAM):   end;
1209483   +end;
MPRINT(EM_DIAGRAM):   end;
1209484   +
1209485   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1209486   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1209487   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1209488   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1209489   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1209490   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1209491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209493   +end;
MPRINT(EM_DIAGRAM):   end;
1209494   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209496   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1209497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209498   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1209499   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1209500   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1209501   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1209502   +   end;
MPRINT(EM_DIAGRAM):   end;
1209503   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209504   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1209505   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1209506   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1209507   +   end;
MPRINT(EM_DIAGRAM):   end;
1209508   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209509   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1209510   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1209511   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1209512   +   end;
MPRINT(EM_DIAGRAM):   end;
1209513   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1209514   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1209515   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1209516   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1209517   +   end;
MPRINT(EM_DIAGRAM):   end;
1209518   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209519   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1209520   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1209521   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1209522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209524   +   end;
MPRINT(EM_DIAGRAM):   end;
1209525   +end;
MPRINT(EM_DIAGRAM):   end;
1209526   +
1209527   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1209528   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1209529   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1209530   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1209531   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1209532   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1209533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209535   +end;
MPRINT(EM_DIAGRAM):   end;
1209536   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209537   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209538   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1209539   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209540   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209541   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1209542   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1209543   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1209544   +   end;
MPRINT(EM_DIAGRAM):   end;
1209545   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209546   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1209547   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1209548   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1209549   +   end;
MPRINT(EM_DIAGRAM):   end;
1209550   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209551   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1209552   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1209553   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1209554   +   end;
MPRINT(EM_DIAGRAM):   end;
1209555   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209556   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1209557   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1209558   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1209559   +   end;
MPRINT(EM_DIAGRAM):   end;
1209560   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209561   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1209562   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1209563   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1209564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209566   +   end;
MPRINT(EM_DIAGRAM):   end;
1209567   +end;
MPRINT(EM_DIAGRAM):   end;
1209568   +
1209569   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1209570   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1209571   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1209572   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1209573   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1209574   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1209575   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209576   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209577   +end;
MPRINT(EM_DIAGRAM):   end;
1209578   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209579   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209580   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1209581   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209582   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1209583   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1209584   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1209585   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1209586   +   end;
MPRINT(EM_DIAGRAM):   end;
1209587   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1209588   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1209589   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1209590   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1209591   +   end;
MPRINT(EM_DIAGRAM):   end;
1209592   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209593   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1209594   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1209595   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1209596   +   end;
MPRINT(EM_DIAGRAM):   end;
1209597   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209598   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1209599   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1209600   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1209601   +   end;
MPRINT(EM_DIAGRAM):   end;
1209602   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209603   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1209604   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1209605   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1209606   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209607   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209608   +   end;
MPRINT(EM_DIAGRAM):   end;
1209609   +end;
MPRINT(EM_DIAGRAM):   end;
1209610   +
1209611   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1209612   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1209613   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1209614   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1209615   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1209616   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1209617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209619   +end;
MPRINT(EM_DIAGRAM):   end;
1209620   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209621   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209622   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1209623   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209624   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1209625   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1209626   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1209627   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1209628   +   end;
MPRINT(EM_DIAGRAM):   end;
1209629   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1209630   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1209631   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1209632   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1209633   +   end;
MPRINT(EM_DIAGRAM):   end;
1209634   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209635   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1209636   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1209637   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1209638   +   end;
MPRINT(EM_DIAGRAM):   end;
1209639   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209640   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1209641   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1209642   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1209643   +   end;
MPRINT(EM_DIAGRAM):   end;
1209644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209645   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1209646   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1209647   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1209648   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209649   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209650   +   end;
MPRINT(EM_DIAGRAM):   end;
1209651   +end;
MPRINT(EM_DIAGRAM):   end;
1209652   +
1209653   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1209654   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1209655   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1209656   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1209657   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1209658   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1209659   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1209660   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209661   +end;
MPRINT(EM_DIAGRAM):   end;
1209662   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209663   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1209664   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1209665   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1209666   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1209667   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1209668   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1209669   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1209670   +   end;
MPRINT(EM_DIAGRAM):   end;
1209671   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1209672   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1209673   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1209674   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1209675   +   end;
MPRINT(EM_DIAGRAM):   end;
1209676   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1209677   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1209678   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1209679   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1209680   +   end;
MPRINT(EM_DIAGRAM):   end;
1209681   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1209682   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1209683   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1209684   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1209685   +   end;
MPRINT(EM_DIAGRAM):   end;
1209686   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1209687   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1209688   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1209689   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1209690   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1209691   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209692   +   end;
MPRINT(EM_DIAGRAM):   end;
1209693   +end;
MPRINT(EM_DIAGRAM):   end;
1209694   +
1209695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209696   +*** Checking missing input Interval
1209697   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1209698   +
1209699   +IF NMISS(
1209700   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1209701   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1209702   +
1209703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1209704   +END;
MPRINT(EM_DIAGRAM):   END;
1209705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209706   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1209707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209708   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1209709   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1209710   +END;
MPRINT(EM_DIAGRAM):   END;
1209711   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1209712   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1209713   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1209714   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1209715   +END;
MPRINT(EM_DIAGRAM):   END;
1209716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209717   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1209718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209720   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1209721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209722   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1209723   +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
1209724   +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
1209725   +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
1209726   +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
1209727   +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
1209728   +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
1209729   +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
1209730   +        GRP_Income2  +      0.3291591268929 * GRP_Income3
1209731   +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
1209732   +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
1209733   +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
1209734   +          +    -0.14978605827752 * GRP_MntFishProducts3
1209735   +          +     0.22642470616542 * GRP_MntFishProducts4
1209736   +          +     0.07604404821672 * GRP_MntGoldProds2
1209737   +          +     0.04745212568332 * GRP_MntGoldProds3
1209738   +          +    -0.10028215217028 * GRP_MntGoldProds4
1209739   +          +    -0.07377682497053 * GRP_MntMeatProducts2
1209740   +          +    -0.09960214357487 * GRP_MntMeatProducts3
1209741   +          +    -0.25438120582859 * GRP_MntMeatProducts4
1209742   +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
1209743   +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
1209744   +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
1209745   +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
1209746   +          +    -0.37743946252805 * GRP_NumDistPurchases2
1209747   +          +    -0.01872647257623 * GRP_NumDistPurchases3
1209748   +          +    -0.31993024737958 * GRP_NumDistPurchases4
1209749   +          +    -0.11078713164327 * GRP_NumWebPurchases2
1209750   +          +     0.24754701690398 * GRP_NumWebPurchases3
1209751   +          +     0.01530465573539 * GRP_NumWebPurchases4
1209752   +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
1209753   +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
1209754   +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
1209755   +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
1209756   +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
1209757   +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 * 
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 * 
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 + 
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 + 
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 + 
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 + 
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 + 
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 + 
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786 
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 * 
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 * 
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 * 
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 * 
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 * 
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 + 
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 * 
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 + 
-0.44624012521308 * GRP_Recency4 ;
1209758   +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
1209759   +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
1209760   +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
1209761   +        GRP_Income2  +     0.19385348399904 * GRP_Income3
1209762   +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
1209763   +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
1209764   +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
1209765   +          +    -0.12626287803422 * GRP_MntFishProducts3
1209766   +          +    -0.42885022606866 * GRP_MntFishProducts4
1209767   +          +    -0.08312331608509 * GRP_MntGoldProds2
1209768   +          +    -0.20061238652989 * GRP_MntGoldProds3
1209769   +          +      0.2540651659901 * GRP_MntGoldProds4
1209770   +          +    -0.05377938516186 * GRP_MntMeatProducts2
1209771   +          +    -0.20960578757846 * GRP_MntMeatProducts3
1209772   +          +     0.40616704937625 * GRP_MntMeatProducts4
1209773   +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
1209774   +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
1209775   +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
1209776   +          +     0.09580710843179 * GRP_NumCatalogPurchases4
1209777   +          +    -0.07273864038222 * GRP_NumDistPurchases2
1209778   +          +     0.10966715611059 * GRP_NumDistPurchases3
1209779   +          +      -0.043035493739 * GRP_NumDistPurchases4
1209780   +          +    -0.11780256604927 * GRP_NumWebPurchases2
1209781   +          +    -0.18165047164828 * GRP_NumWebPurchases3
1209782   +          +     0.26936545488609 * GRP_NumWebPurchases4
1209783   +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
1209784   +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
1209785   +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
1209786   +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
1209787   +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
1209788   +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 * 
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 * 
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 + 
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 + 
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 + 
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 + 
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 + 
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 + 
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895 
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 * 
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 * 
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 * 
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 * 
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 * 
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 + 
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 * 
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 + 
-0.0454148085012 * GRP_Recency4 ;
1209789   +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
1209790   +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
1209791   +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
1209792   +        GRP_Income2  +     0.47732933105902 * GRP_Income3
1209793   +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
1209794   +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
1209795   +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
1209796   +          +     0.07001619920815 * GRP_MntFishProducts3
1209797   +          +     0.07735498521359 * GRP_MntFishProducts4
1209798   +          +    -0.15884098938162 * GRP_MntGoldProds2
1209799   +          +    -0.27657428867783 * GRP_MntGoldProds3
1209800   +          +     -0.1812542301124 * GRP_MntGoldProds4
1209801   +          +    -0.05299867036647 * GRP_MntMeatProducts2
1209802   +          +     0.00010942539908 * GRP_MntMeatProducts3
1209803   +          +     0.03587382246671 * GRP_MntMeatProducts4
1209804   +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
1209805   +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
1209806   +          +     0.14681010085531 * GRP_NumCatalogPurchases3
1209807   +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
1209808   +          +      -0.481887498986 * GRP_NumDistPurchases2
1209809   +          +    -0.09943718589693 * GRP_NumDistPurchases3
1209810   +          +     0.21760620991618 * GRP_NumDistPurchases4
1209811   +          +    -0.09523799103665 * GRP_NumWebPurchases2
1209812   +          +     0.06245025753157 * GRP_NumWebPurchases3
1209813   +          +     0.11312469123111 * GRP_NumWebPurchases4
1209814   +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
1209815   +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
1209816   +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
1209817   +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
1209818   +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
1209819   +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 * 
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 * 
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 + 
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 + 
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 + 
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 + 
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 + 
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 + 
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 * 
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 * 
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 * 
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 * 
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 * 
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 * 
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 + 
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 * 
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 + 
-0.30003743891847 * GRP_Recency4 ;
1209820   +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
1209821   +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
1209822   +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
1209823   +        GRP_Income2  +      0.0433560034099 * GRP_Income3
1209824   +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
1209825   +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
1209826   +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
1209827   +          +     0.33369645018356 * GRP_MntFishProducts3
1209828   +          +     0.08427214551103 * GRP_MntFishProducts4
1209829   +          +    -0.36187933889617 * GRP_MntGoldProds2
1209830   +          +      0.1522584097588 * GRP_MntGoldProds3
1209831   +          +    -0.18069803129722 * GRP_MntGoldProds4
1209832   +          +    -0.39829328143793 * GRP_MntMeatProducts2
1209833   +          +     0.00511939388608 * GRP_MntMeatProducts3
1209834   +          +      0.0518722466688 * GRP_MntMeatProducts4
1209835   +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
1209836   +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
1209837   +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
1209838   +          +     0.04239157662699 * GRP_NumCatalogPurchases4
1209839   +          +    -0.61448773428482 * GRP_NumDistPurchases2
1209840   +          +    -0.10817170519054 * GRP_NumDistPurchases3
1209841   +          +    -0.00883878051452 * GRP_NumDistPurchases4
1209842   +          +      0.0024401108853 * GRP_NumWebPurchases2
1209843   +          +     -0.1066188825276 * GRP_NumWebPurchases3
1209844   +          +     -0.2845728776007 * GRP_NumWebPurchases4
1209845   +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
1209846   +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
1209847   +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
1209848   +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
1209849   +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
1209850   +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 * 
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 * 
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 + 
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 + 
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 + 
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 + 
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 + 
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 + 
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068 
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 * 
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 * 
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 * 
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 * 
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 * 
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 + 
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 * 
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 + 
0.19384397786172 * GRP_Recency4 ;
1209851   +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
1209852   +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
1209853   +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
1209854   +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
1209855   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1209856   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1209857   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1209858   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1209859   +END;
MPRINT(EM_DIAGRAM):   END;
1209860   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1209861   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1209862   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1209863   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1209864   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1209865   +END;
MPRINT(EM_DIAGRAM):   END;
1209866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209867   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1209868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209869   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1209870   +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
1209871   +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 + 
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
1209872   +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
1209873   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1209874   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1209875   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1209876   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1209877   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1209878   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1209879   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1209880   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1209881   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1209882   +END;
MPRINT(EM_DIAGRAM):   END;
1209883   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1209884   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1209885   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1209886   +END;
MPRINT(EM_DIAGRAM):   END;
1209887   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1209888   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1209889   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1209890   +END;
MPRINT(EM_DIAGRAM):   END;
1209891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209892   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1209893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1209894   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1209895   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1209896   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1209897   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1209898   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1209899   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1209900   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1209901   +END;
MPRINT(EM_DIAGRAM):   END;
1209902   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1209903   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1209904   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1209905   +drop
1209906   +H11
1209907   +H12
1209908   +H13
1209909   +H14
1209910   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1209911   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1209912    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1209913    quit;
1209914    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1209915    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1209916    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1209917    retain ID 2 Node "Neural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural21";
1209918    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1209919    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209920    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1209921    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1209922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1209923    proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
1209924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1209925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209926    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1209927    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1209928    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1209929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209930    proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
1209931    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1209932    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1209933    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1209934    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209935    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1209936    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1209937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1209938    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209939    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1209940    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1209940  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 895 rows and 5 columns.

1209941    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1209942    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1209943    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 895 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1209944    filename _pref
1209944  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1209945    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1209946    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1209947   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1209948   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1209949   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1209950   +
1209951   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209952   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1209953   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209954   +LABEL GRP_AcceptedCmp5 =
1209955   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1209956   +
1209957   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1209958   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1209959   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1209960   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1209961   +end;
MPRINT(EM_DIAGRAM):   end;
1209962   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1209963   +if (_UFORMAT eq '0'
1209964   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1209965   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1209966   +end;
MPRINT(EM_DIAGRAM):   end;
1209967   +else
1209968   +if (_UFORMAT eq '1'
1209969   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1209970   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1209971   +end;
MPRINT(EM_DIAGRAM):   end;
1209972   +else do;
MPRINT(EM_DIAGRAM):   else do;
1209973   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1209974   +end;
MPRINT(EM_DIAGRAM):   end;
1209975   +end;
MPRINT(EM_DIAGRAM):   end;
1209976   +
1209977   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209978   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1209979   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1209980   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1209981   +
1209982   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1209983   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1209984   +end;
MPRINT(EM_DIAGRAM):   end;
1209985   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1209986   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1209987   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1209988   +end;
MPRINT(EM_DIAGRAM):   end;
1209989   +else
1209990   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1209991   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1209992   +end;
MPRINT(EM_DIAGRAM):   end;
1209993   +else
1209994   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1209995   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1209996   +end;
MPRINT(EM_DIAGRAM):   end;
1209997   +else
1209998   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1209999   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1210000   +end;
MPRINT(EM_DIAGRAM):   end;
1210001   +end;
MPRINT(EM_DIAGRAM):   end;
1210002   +
1210003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210004   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1210005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210006   +LABEL GRP_Income =
1210007   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1210008   +
1210009   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1210010   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1210011   +end;
MPRINT(EM_DIAGRAM):   end;
1210012   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1210013   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1210014   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1210015   +end;
MPRINT(EM_DIAGRAM):   end;
1210016   +else
1210017   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1210018   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1210019   +end;
MPRINT(EM_DIAGRAM):   end;
1210020   +else
1210021   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1210022   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1210023   +end;
MPRINT(EM_DIAGRAM):   end;
1210024   +else
1210025   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1210026   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1210027   +end;
MPRINT(EM_DIAGRAM):   end;
1210028   +end;
MPRINT(EM_DIAGRAM):   end;
1210029   +
1210030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210031   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1210032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210033   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1210034   +
1210035   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1210036   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1210037   +end;
MPRINT(EM_DIAGRAM):   end;
1210038   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1210039   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1210040   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1210041   +end;
MPRINT(EM_DIAGRAM):   end;
1210042   +else
1210043   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1210044   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1210045   +end;
MPRINT(EM_DIAGRAM):   end;
1210046   +else
1210047   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1210048   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1210049   +end;
MPRINT(EM_DIAGRAM):   end;
1210050   +else
1210051   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1210052   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1210053   +end;
MPRINT(EM_DIAGRAM):   end;
1210054   +end;
MPRINT(EM_DIAGRAM):   end;
1210055   +
1210056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210057   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1210058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210059   +LABEL GRP_MntFishProducts =
1210060   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1210061   +
1210062   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1210063   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1210064   +end;
MPRINT(EM_DIAGRAM):   end;
1210065   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1210066   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1210067   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1210068   +end;
MPRINT(EM_DIAGRAM):   end;
1210069   +else
1210070   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1210071   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1210072   +end;
MPRINT(EM_DIAGRAM):   end;
1210073   +else
1210074   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1210075   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1210076   +end;
MPRINT(EM_DIAGRAM):   end;
1210077   +else
1210078   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1210079   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1210080   +end;
MPRINT(EM_DIAGRAM):   end;
1210081   +end;
MPRINT(EM_DIAGRAM):   end;
1210082   +
1210083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210084   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1210085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210086   +LABEL GRP_MntGoldProds =
1210087   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1210088   +
1210089   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1210090   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1210091   +end;
MPRINT(EM_DIAGRAM):   end;
1210092   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1210093   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1210094   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1210095   +end;
MPRINT(EM_DIAGRAM):   end;
1210096   +else
1210097   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1210098   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1210099   +end;
MPRINT(EM_DIAGRAM):   end;
1210100   +else
1210101   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1210102   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1210103   +end;
MPRINT(EM_DIAGRAM):   end;
1210104   +else
1210105   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1210106   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1210107   +end;
MPRINT(EM_DIAGRAM):   end;
1210108   +end;
MPRINT(EM_DIAGRAM):   end;
1210109   +
1210110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210111   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1210112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210113   +LABEL GRP_MntMeatProducts =
1210114   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1210115   +
1210116   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1210117   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1210118   +end;
MPRINT(EM_DIAGRAM):   end;
1210119   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1210120   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1210121   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1210122   +end;
MPRINT(EM_DIAGRAM):   end;
1210123   +else
1210124   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1210125   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1210126   +end;
MPRINT(EM_DIAGRAM):   end;
1210127   +else
1210128   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1210129   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1210130   +end;
MPRINT(EM_DIAGRAM):   end;
1210131   +else
1210132   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1210133   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1210134   +end;
MPRINT(EM_DIAGRAM):   end;
1210135   +end;
MPRINT(EM_DIAGRAM):   end;
1210136   +
1210137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210138   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1210139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210140   +LABEL GRP_MntWines =
1210141   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1210142   +
1210143   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1210144   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1210145   +end;
MPRINT(EM_DIAGRAM):   end;
1210146   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1210147   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1210148   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1210149   +end;
MPRINT(EM_DIAGRAM):   end;
1210150   +else
1210151   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1210152   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1210153   +end;
MPRINT(EM_DIAGRAM):   end;
1210154   +else
1210155   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1210156   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1210157   +end;
MPRINT(EM_DIAGRAM):   end;
1210158   +else
1210159   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1210160   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1210161   +end;
MPRINT(EM_DIAGRAM):   end;
1210162   +end;
MPRINT(EM_DIAGRAM):   end;
1210163   +
1210164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210165   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1210166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210167   +LABEL GRP_NumCatalogPurchases =
1210168   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1210169   +
1210170   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1210171   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1210172   +end;
MPRINT(EM_DIAGRAM):   end;
1210173   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1210174   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1210175   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1210176   +end;
MPRINT(EM_DIAGRAM):   end;
1210177   +else
1210178   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1210179   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1210180   +end;
MPRINT(EM_DIAGRAM):   end;
1210181   +else
1210182   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1210183   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1210184   +end;
MPRINT(EM_DIAGRAM):   end;
1210185   +else
1210186   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1210187   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1210188   +end;
MPRINT(EM_DIAGRAM):   end;
1210189   +end;
MPRINT(EM_DIAGRAM):   end;
1210190   +
1210191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210192   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1210193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210194   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1210195   +
1210196   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1210197   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1210198   +end;
MPRINT(EM_DIAGRAM):   end;
1210199   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1210200   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1210201   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1210202   +end;
MPRINT(EM_DIAGRAM):   end;
1210203   +else
1210204   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1210205   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1210206   +end;
MPRINT(EM_DIAGRAM):   end;
1210207   +else
1210208   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1210209   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1210210   +end;
MPRINT(EM_DIAGRAM):   end;
1210211   +else
1210212   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1210213   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1210214   +end;
MPRINT(EM_DIAGRAM):   end;
1210215   +end;
MPRINT(EM_DIAGRAM):   end;
1210216   +
1210217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210218   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1210219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210220   +LABEL GRP_NumWebPurchases =
1210221   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1210222   +
1210223   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1210224   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1210225   +end;
MPRINT(EM_DIAGRAM):   end;
1210226   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1210227   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1210228   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1210229   +end;
MPRINT(EM_DIAGRAM):   end;
1210230   +else
1210231   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1210232   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1210233   +end;
MPRINT(EM_DIAGRAM):   end;
1210234   +else
1210235   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1210236   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1210237   +end;
MPRINT(EM_DIAGRAM):   end;
1210238   +else
1210239   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1210240   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1210241   +end;
MPRINT(EM_DIAGRAM):   end;
1210242   +end;
MPRINT(EM_DIAGRAM):   end;
1210243   +
1210244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210245   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1210246   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210247   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1210248   +
1210249   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1210250   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1210251   +end;
MPRINT(EM_DIAGRAM):   end;
1210252   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1210253   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1210254   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1210255   +end;
MPRINT(EM_DIAGRAM):   end;
1210256   +else
1210257   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1210258   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1210259   +end;
MPRINT(EM_DIAGRAM):   end;
1210260   +else
1210261   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1210262   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1210263   +end;
MPRINT(EM_DIAGRAM):   end;
1210264   +else
1210265   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1210266   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1210267   +end;
MPRINT(EM_DIAGRAM):   end;
1210268   +end;
MPRINT(EM_DIAGRAM):   end;
1210269   +
1210270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210271   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1210272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210273   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1210274   +
1210275   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1210276   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1210277   +end;
MPRINT(EM_DIAGRAM):   end;
1210278   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1210279   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1210280   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1210281   +end;
MPRINT(EM_DIAGRAM):   end;
1210282   +else
1210283   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1210284   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1210285   +end;
MPRINT(EM_DIAGRAM):   end;
1210286   +else
1210287   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1210288   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1210289   +end;
MPRINT(EM_DIAGRAM):   end;
1210290   +else
1210291   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1210292   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1210293   +end;
MPRINT(EM_DIAGRAM):   end;
1210294   +end;
MPRINT(EM_DIAGRAM):   end;
1210295   +
1210296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210297   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1210298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210299   +LABEL GRP_Recency =
1210300   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1210301   +
1210302   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1210303   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1210304   +end;
MPRINT(EM_DIAGRAM):   end;
1210305   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1210306   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1210307   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1210308   +end;
MPRINT(EM_DIAGRAM):   end;
1210309   +else
1210310   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1210311   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1210312   +end;
MPRINT(EM_DIAGRAM):   end;
1210313   +else
1210314   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1210315   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1210316   +end;
MPRINT(EM_DIAGRAM):   end;
1210317   +else
1210318   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1210319   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1210320   +end;
MPRINT(EM_DIAGRAM):   end;
1210321   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1210322    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1210323    quit;
1210324    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1210325    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1210326    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1210327    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1210328    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1210329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210330    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1210331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210333    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1210334    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210336    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210337    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1210338    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1210339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210340    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1210341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
      

1210342    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1210343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210345    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210346    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1210347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210348    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210349    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1210350    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1210350  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1210351    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210352    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1210353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 910 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210354    filename _pref
1210354  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1210355    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1210356    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1210357   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210358   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1210359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1210360   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1210361   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1210362   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1210363    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1210364    quit;
1210365    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1210366    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1210367    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1210368    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1210369    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1210370    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210371    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1210372    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210374    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1210375    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210376    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210377    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210378    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1210379    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1210380    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210381    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1210382    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1210383    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1210384    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210386    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210387    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1210388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210389    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210390    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1210391    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1210391  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1210392    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210393    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1210394    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 914 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210395    filename _pref
1210395  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1210396    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1210397    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1210398   +
1210399   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1210400   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1210400  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1210401   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1210402   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1210403   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1210404   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1210405   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1210406    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1210407    quit;
1210408    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1210409    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1210410    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1210411    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1210412    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1210413    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210414    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1210415    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210416    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210417    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1210418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210419    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210420    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210421    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1210422    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1210423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210424    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1210425    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210426    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1210427    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210428    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210429    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210430    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1210431    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210432    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210433    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1210434    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1210434  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1210435    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210436    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1210437    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 953 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210438    filename _pref
1210438  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1210439    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1210440    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1210441   +
1210442   +
1210443   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1210444   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1210445   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1210446   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1210447   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1210448   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210449   +
1210450   +
1210451   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1210452   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1210453   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1210454   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1210455   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1210456   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210457   +
1210458   +
1210459   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1210460   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1210461   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1210462   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1210463   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1210464   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210465   +
1210466   +
1210467   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1210468   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1210469   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1210470   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1210471   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1210472   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210473   +
1210474   +
1210475   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1210476   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1210477   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1210478   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1210479   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1210480   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210481   +
1210482   +
1210483   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1210484   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1210485   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1210486   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1210487   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1210488   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210489   +
1210490   +
1210491   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1210492   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1210493   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1210494   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1210495   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1210496   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210497   +
1210498   +
1210499   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1210500   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1210501   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1210502   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1210503   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1210504   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1210505   +if
1210506   +_FILTERNORM1 not in ( '.')
1210507   + and
1210508   +_FILTERNORM2 not in ( '.')
1210509   + and
1210510   +_FILTERNORM3 not in ( '.')
1210511   + and
1210512   +_FILTERNORM4 not in ( '.')
1210513   + and
1210514   +_FILTERNORM5 not in ( '.')
1210515   + and
1210516   +_FILTERNORM6 not in ( '.')
1210517   + and
1210518   +_FILTERNORM7 not in ( ' ')
1210519   + and
1210520   +_FILTERNORM8 not in ( ' ')
1210521   +and
1210522   +( Dt_Customer ne .)
1210523   +and ( Income ne . and (Income<=107000))
1210524   +and ( Kidhome ne .)
1210525   +and ( MntFishProducts ne .)
1210526   +and ( MntFruits ne .)
1210527   +and ( MntGoldProds ne .)
1210528   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1210529   +and ( MntSweetProducts ne .)
1210530   +and ( MntWines ne .)
1210531   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1210532   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1210533   +and ( NumStorePurchases ne .)
1210534   +and ( NumWebPurchases ne .)
1210535   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1210536   +and ( Recency ne .)
1210537   +and ( Teenhome ne .)
1210538   +and ( Year_Birth ne .)
1210539   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1210540   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1210541   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1210542   +end;
MPRINT(EM_DIAGRAM):   end;
1210543   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1210544   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1210545    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1210546    quit;
1210547    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1210548    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1210549    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1210550    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1210551    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1210552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210553    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1210554    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210555    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210556    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1210557    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210559    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210560    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1210561    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1210562    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210563    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1210564    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1210565    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1210566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210568    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1210569    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1210570    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1210571    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210572    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1210573    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1210573  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1210574    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210575    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1210576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 1019 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210577    %macro varDept(fcmpdata=,id=);
1210578    %global nobs&id scoreFlag&id;
1210579    %let scoreFlag&id = 0;
1210580    %if &id=1 or ^&fcmpStart %then %do;
1210581    proc sort data=&fcmpdata out=_temp&id nodupkey;
1210582    by NAME;
1210583    where id=&id and LHS in( %let j=1;
1210584    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1210585    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1210586    "&var" %let j = %eval(&j+1);
1210587    %end;
1210588    );
1210589    run;
1210590    %let dsid = %sysfunc(open(_temp&id));
1210591    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1210592    %let dsid = %sysfunc(close(&dsid));
1210593    %if &&nobs&id %then %do;
1210594    %let scoreFlag&id = 1;
1210595    %let fcmpStart = 1;
1210596    %end;
1210597    %else %let fcmpStart = 0;
1210598    %end;
1210599    %else %do;
1210600    proc sort data=&fcmpdata out=_tempid;
1210601    where id=&id;
1210602    by LHS;
1210603    run;
1210604    %let dsid = %sysfunc(open(_tempid));
1210605    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1210606    %let dsid = %sysfunc(close(&dsid));
1210607    %if ^&&nobs&id %then %do;
1210608    proc datasets lib=work nolist;
1210609    delete _tempid;
1210610    run;
1210611    quit;
1210612    %end;
1210613    %else %do;
1210614    data _tempAll;
1210615    set %let j=%eval(&id-1);
1210616    %do x=1 %to &j;
1210617    %if &&nobs&x %then %do;
1210618    _temp&x %end;
1210619    %end;
1210620    ;
1210621    run;
1210622    proc sql;
1210623    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1210623  ! work._tempid p2 where p.name=p2.lhs;
1210624    quit;
1210625    data _temp&id;
1210626    set _temp&id;
1210627    where LHS ne '' and NAME ne '' and Node ne '';
1210628    run;
1210629    proc datasets lib=work nolist;
1210630    delete _tempAll;
1210631    run;
1210632    %let dsid = %sysfunc(open(_temp&id));
1210633    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1210634    %let dsid = %sysfunc(close(&dsid));
1210635    %if ^&&nobs&id %then %do;
1210636    proc datasets lib=work nolist;
1210637    delete _temp&id;
1210638    run;
1210639    quit;
1210640    %end;
1210641    %else %do;
1210642    %let scoreFlag&id = 1;
1210643    data _temp&id;
1210644    set _temp&id;
1210645    where LHS ne NAME and node ne '';
1210646    run;
1210647    %let dsid = %sysfunc(open(_temp&id));
1210648    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1210649    %let dsid = %sysfunc(close(&dsid));
1210650    %if ^&&nobs&id %then %do;
1210651    proc datasets lib=work nolist;
1210652    delete _temp&id;
1210653    run;
1210654    quit;
1210655    %end;
1210656    %else %do;
1210657    proc sort data=_temp&id nodupkey;
1210658    by LHS NAME;
1210659    run;
1210660    %end;
1210661    %end;
1210662    %end;
1210663    %end;
1210664    %mend varDept;
1210665    %macro optCode(outdata=fcmpdata);
1210666    %global fcmpStart;
1210667    %let fcmpStart = 0;
1210668    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1210669    %let NumNodes=9;
1210670    %do k=1 %to &NumNodes;
1210671    %vardept(fcmpdata=&outdata, id=&k);
1210672    %end;
1210673    %mend optCode;
1210674    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1210675    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1210676    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1210677    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1210678    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210679    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1210680    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1210681    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1210682    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1210683    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1210684    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1210684  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1210685    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1210686    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1210687    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1210688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210689    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1210690    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1210691    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1210692    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210693    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1210694    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1210695    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1210696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210697    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1210698    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1210698  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1210699    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1210700    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1210701    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1210702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1210703    filename _pref
1210703  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMPUBLISHSCORE.sas";
1210704    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1210705    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural20\EMPUBLISHSCORE.sas.
1210706   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1210707   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1210708   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1210709   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1210710   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1210711   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1210712   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1210713   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1210714   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1210715   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1210716   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1210717   +LENGTH _WARN_ $4
1210718   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1210719   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1210720   +
1210721   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1210722   +
1210723   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1210724   +
1210725   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1210726   +
1210727   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1210728   +
1210729   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1210730   +
1210731   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1210732   +
1210733   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1210734   +
1210735   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1210736   +
1210737   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1210738   +
1210739   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1210740   +
1210741   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1210742   +
1210743   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1210744   +
1210745   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1210746   +
1210747   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1210748   +
1210749   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1210750   +
1210751   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1210752   +
1210753   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1210754   +
1210755   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1210756   +
1210757   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1210758   +
1210759   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1210760   +
1210761   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1210762   +
1210763   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1210764   +
1210765   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1210766   +
1210767   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1210768   +
1210769   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1210770   +
1210771   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1210772   +
1210773   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1210774   +
1210775   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1210776   +
1210777   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1210778   +
1210779   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1210780   +
1210781   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1210782   +
1210783   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1210784   +
1210785   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1210786   +
1210787   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1210788   +
1210789   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1210790   +
1210791   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1210792   +
1210793   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1210794   +
1210795   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1210796   +
1210797   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1210798   +
1210799   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1210800   +
1210801   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1210802   +
1210803   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1210804   +
1210805   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1210806   +
1210807   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1210808   +
1210809   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1210810   +
1210811   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1210812   +
1210813   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1210814   +
1210815   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1210816   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1210817   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1210818   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1210819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210821   +end;
MPRINT(EM_DIAGRAM):   end;
1210822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210823   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210824   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1210825   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210826   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1210827   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1210828   +   end;
MPRINT(EM_DIAGRAM):   end;
1210829   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1210830   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1210831   +   end;
MPRINT(EM_DIAGRAM):   end;
1210832   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210833   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1210834   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210835   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210836   +   end;
MPRINT(EM_DIAGRAM):   end;
1210837   +end;
MPRINT(EM_DIAGRAM):   end;
1210838   +
1210839   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1210840   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1210841   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1210842   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1210843   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1210844   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1210845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210847   +end;
MPRINT(EM_DIAGRAM):   end;
1210848   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210850   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1210851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210852   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1210853   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1210854   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1210855   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1210856   +   end;
MPRINT(EM_DIAGRAM):   end;
1210857   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1210858   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1210859   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1210860   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1210861   +   end;
MPRINT(EM_DIAGRAM):   end;
1210862   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1210863   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1210864   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1210865   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1210866   +   end;
MPRINT(EM_DIAGRAM):   end;
1210867   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1210868   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1210869   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1210870   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1210871   +   end;
MPRINT(EM_DIAGRAM):   end;
1210872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210873   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1210874   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1210875   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1210876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210878   +   end;
MPRINT(EM_DIAGRAM):   end;
1210879   +end;
MPRINT(EM_DIAGRAM):   end;
1210880   +
1210881   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1210882   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1210883   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1210884   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1210885   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1210886   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1210887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210889   +end;
MPRINT(EM_DIAGRAM):   end;
1210890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210891   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210892   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1210893   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210894   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1210895   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1210896   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1210897   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1210898   +   end;
MPRINT(EM_DIAGRAM):   end;
1210899   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1210900   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1210901   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1210902   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1210903   +   end;
MPRINT(EM_DIAGRAM):   end;
1210904   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1210905   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1210906   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1210907   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1210908   +   end;
MPRINT(EM_DIAGRAM):   end;
1210909   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1210910   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1210911   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1210912   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1210913   +   end;
MPRINT(EM_DIAGRAM):   end;
1210914   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210915   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1210916   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1210917   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1210918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210920   +   end;
MPRINT(EM_DIAGRAM):   end;
1210921   +end;
MPRINT(EM_DIAGRAM):   end;
1210922   +
1210923   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1210924   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1210925   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1210926   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1210927   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1210928   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1210929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210931   +end;
MPRINT(EM_DIAGRAM):   end;
1210932   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210934   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1210935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210936   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1210937   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1210938   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1210939   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1210940   +   end;
MPRINT(EM_DIAGRAM):   end;
1210941   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1210942   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1210943   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1210944   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1210945   +   end;
MPRINT(EM_DIAGRAM):   end;
1210946   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1210947   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1210948   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1210949   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1210950   +   end;
MPRINT(EM_DIAGRAM):   end;
1210951   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1210952   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1210953   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1210954   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1210955   +   end;
MPRINT(EM_DIAGRAM):   end;
1210956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210957   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1210958   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1210959   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1210960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1210961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210962   +   end;
MPRINT(EM_DIAGRAM):   end;
1210963   +end;
MPRINT(EM_DIAGRAM):   end;
1210964   +
1210965   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1210966   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1210967   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1210968   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1210969   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1210970   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1210971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1210972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1210973   +end;
MPRINT(EM_DIAGRAM):   end;
1210974   +else do;
MPRINT(EM_DIAGRAM):   else do;
1210975   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1210976   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1210977   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1210978   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1210979   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1210980   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1210981   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1210982   +   end;
MPRINT(EM_DIAGRAM):   end;
1210983   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1210984   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1210985   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1210986   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1210987   +   end;
MPRINT(EM_DIAGRAM):   end;
1210988   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1210989   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1210990   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1210991   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1210992   +   end;
MPRINT(EM_DIAGRAM):   end;
1210993   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1210994   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1210995   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1210996   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1210997   +   end;
MPRINT(EM_DIAGRAM):   end;
1210998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1210999   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1211000   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1211001   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1211002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211004   +   end;
MPRINT(EM_DIAGRAM):   end;
1211005   +end;
MPRINT(EM_DIAGRAM):   end;
1211006   +
1211007   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1211008   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1211009   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1211010   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1211011   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1211012   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1211013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211015   +end;
MPRINT(EM_DIAGRAM):   end;
1211016   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211017   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211018   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1211019   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211020   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1211021   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1211022   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1211023   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1211024   +   end;
MPRINT(EM_DIAGRAM):   end;
1211025   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211026   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1211027   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1211028   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1211029   +   end;
MPRINT(EM_DIAGRAM):   end;
1211030   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1211031   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1211032   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1211033   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1211034   +   end;
MPRINT(EM_DIAGRAM):   end;
1211035   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211036   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1211037   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1211038   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1211039   +   end;
MPRINT(EM_DIAGRAM):   end;
1211040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211041   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1211042   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1211043   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1211044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211046   +   end;
MPRINT(EM_DIAGRAM):   end;
1211047   +end;
MPRINT(EM_DIAGRAM):   end;
1211048   +
1211049   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1211050   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1211051   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1211052   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1211053   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1211054   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1211055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211057   +end;
MPRINT(EM_DIAGRAM):   end;
1211058   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211060   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1211061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211062   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1211063   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1211064   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1211065   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1211066   +   end;
MPRINT(EM_DIAGRAM):   end;
1211067   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211068   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1211069   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1211070   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1211071   +   end;
MPRINT(EM_DIAGRAM):   end;
1211072   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1211073   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1211074   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1211075   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1211076   +   end;
MPRINT(EM_DIAGRAM):   end;
1211077   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211078   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1211079   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1211080   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1211081   +   end;
MPRINT(EM_DIAGRAM):   end;
1211082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211083   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1211084   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1211085   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1211086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211088   +   end;
MPRINT(EM_DIAGRAM):   end;
1211089   +end;
MPRINT(EM_DIAGRAM):   end;
1211090   +
1211091   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1211092   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1211093   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1211094   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1211095   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1211096   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1211097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211099   +end;
MPRINT(EM_DIAGRAM):   end;
1211100   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211102   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1211103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211104   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1211105   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1211106   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1211107   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1211108   +   end;
MPRINT(EM_DIAGRAM):   end;
1211109   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1211110   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1211111   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1211112   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1211113   +   end;
MPRINT(EM_DIAGRAM):   end;
1211114   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211115   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1211116   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1211117   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1211118   +   end;
MPRINT(EM_DIAGRAM):   end;
1211119   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211120   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1211121   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1211122   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1211123   +   end;
MPRINT(EM_DIAGRAM):   end;
1211124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211125   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1211126   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1211127   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1211128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211130   +   end;
MPRINT(EM_DIAGRAM):   end;
1211131   +end;
MPRINT(EM_DIAGRAM):   end;
1211132   +
1211133   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1211134   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1211135   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1211136   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1211137   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1211138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211140   +end;
MPRINT(EM_DIAGRAM):   end;
1211141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211143   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1211144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211145   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1211146   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1211147   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1211148   +   end;
MPRINT(EM_DIAGRAM):   end;
1211149   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1211150   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1211151   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1211152   +   end;
MPRINT(EM_DIAGRAM):   end;
1211153   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211154   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1211155   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1211156   +   end;
MPRINT(EM_DIAGRAM):   end;
1211157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211158   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1211159   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1211160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211162   +   end;
MPRINT(EM_DIAGRAM):   end;
1211163   +end;
MPRINT(EM_DIAGRAM):   end;
1211164   +
1211165   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1211166   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1211167   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1211168   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1211169   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1211170   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1211171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211173   +end;
MPRINT(EM_DIAGRAM):   end;
1211174   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211175   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211176   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1211177   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211178   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1211179   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1211180   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1211181   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1211182   +   end;
MPRINT(EM_DIAGRAM):   end;
1211183   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211184   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1211185   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1211186   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1211187   +   end;
MPRINT(EM_DIAGRAM):   end;
1211188   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211189   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1211190   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1211191   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1211192   +   end;
MPRINT(EM_DIAGRAM):   end;
1211193   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1211194   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1211195   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1211196   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1211197   +   end;
MPRINT(EM_DIAGRAM):   end;
1211198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211199   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1211200   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1211201   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1211202   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211203   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211204   +   end;
MPRINT(EM_DIAGRAM):   end;
1211205   +end;
MPRINT(EM_DIAGRAM):   end;
1211206   +
1211207   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1211208   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1211209   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1211210   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1211211   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1211212   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1211213   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211214   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211215   +end;
MPRINT(EM_DIAGRAM):   end;
1211216   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211217   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211218   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1211219   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211220   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1211221   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1211222   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1211223   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1211224   +   end;
MPRINT(EM_DIAGRAM):   end;
1211225   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1211226   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1211227   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1211228   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1211229   +   end;
MPRINT(EM_DIAGRAM):   end;
1211230   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211231   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1211232   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1211233   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1211234   +   end;
MPRINT(EM_DIAGRAM):   end;
1211235   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211236   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1211237   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1211238   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1211239   +   end;
MPRINT(EM_DIAGRAM):   end;
1211240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211241   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1211242   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1211243   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1211244   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211245   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211246   +   end;
MPRINT(EM_DIAGRAM):   end;
1211247   +end;
MPRINT(EM_DIAGRAM):   end;
1211248   +
1211249   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1211250   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1211251   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1211252   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1211253   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1211254   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1211255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211257   +end;
MPRINT(EM_DIAGRAM):   end;
1211258   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211260   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1211261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211262   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1211263   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1211264   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1211265   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1211266   +   end;
MPRINT(EM_DIAGRAM):   end;
1211267   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1211268   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1211269   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1211270   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1211271   +   end;
The SAS System

MPRINT(EM_DIAGRAM):   end;
1211272   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1211273   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1211274   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1211275   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1211276   +   end;
MPRINT(EM_DIAGRAM):   end;
1211277   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211278   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1211279   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1211280   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1211281   +   end;
MPRINT(EM_DIAGRAM):   end;
1211282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211283   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1211284   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1211285   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1211286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211288   +   end;
MPRINT(EM_DIAGRAM):   end;
1211289   +end;
MPRINT(EM_DIAGRAM):   end;
1211290   +
1211291   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1211292   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1211293   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1211294   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1211295   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1211296   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1211297   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211298   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211299   +end;
MPRINT(EM_DIAGRAM):   end;
1211300   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211301   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211302   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1211303   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211304   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1211305   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1211306   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1211307   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1211308   +   end;
MPRINT(EM_DIAGRAM):   end;
1211309   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1211310   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1211311   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1211312   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1211313   +   end;
MPRINT(EM_DIAGRAM):   end;
1211314   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211315   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1211316   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1211317   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1211318   +   end;
MPRINT(EM_DIAGRAM):   end;
1211319   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211320   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1211321   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1211322   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1211323   +   end;
MPRINT(EM_DIAGRAM):   end;
1211324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211325   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1211326   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1211327   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1211328   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211329   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211330   +   end;
MPRINT(EM_DIAGRAM):   end;
1211331   +end;
MPRINT(EM_DIAGRAM):   end;
1211332   +
1211333   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1211334   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1211335   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1211336   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1211337   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1211338   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1211339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1211340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211341   +end;
MPRINT(EM_DIAGRAM):   end;
1211342   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211343   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1211344   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1211345   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1211346   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1211347   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1211348   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1211349   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1211350   +   end;
MPRINT(EM_DIAGRAM):   end;
1211351   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1211352   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1211353   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1211354   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1211355   +   end;
MPRINT(EM_DIAGRAM):   end;
1211356   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1211357   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1211358   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1211359   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1211360   +   end;
MPRINT(EM_DIAGRAM):   end;
1211361   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1211362   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1211363   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1211364   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1211365   +   end;
MPRINT(EM_DIAGRAM):   end;
1211366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1211367   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1211368   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1211369   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1211370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1211371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211372   +   end;
MPRINT(EM_DIAGRAM):   end;
1211373   +end;
MPRINT(EM_DIAGRAM):   end;
1211374   +
1211375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211376   +*** Checking missing input Interval
1211377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1211378   +
1211379   +IF NMISS(
1211380   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1211381   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1211382   +
1211383   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1211384   +END;
MPRINT(EM_DIAGRAM):   END;
1211385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211386   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1211387   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211388   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211389   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1211390   +END;
MPRINT(EM_DIAGRAM):   END;
1211391   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211392   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1211393   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1211394   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1211395   +END;
MPRINT(EM_DIAGRAM):   END;
1211396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211397   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1211398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211400   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1211401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211402   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211403   +   H11  =    -0.41939883149261 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.41939883149261 * S_Year_Birth ;
1211404   +   H12  =    -0.11064938192918 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.11064938192918 * S_Year_Birth ;
1211405   +   H13  =    -0.06467031288187 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.06467031288187 * S_Year_Birth ;
1211406   +   H11  = H11  +     0.35448004105908 * GRP_AcceptedCmp52
1211407   +          +     -0.0918084964279 * GRP_Frq2  +    -0.23985284532042 * GRP_Frq3
1211408   +          +     0.05570802281486 * GRP_Frq4  +     -0.3547598798301 *
1211409   +        GRP_Income2  +    -0.33962703607715 * GRP_Income3
1211410   +          +     0.12436841230863 * GRP_Income4  +    -0.01455143009771 *
1211411   +        GRP_Mnt2  +     0.10120972709945 * GRP_Mnt3  +     -0.0249155152295 *
1211412   +        GRP_Mnt4  +      -0.269333013942 * GRP_MntFishProducts2
1211413   +          +     0.05785555057946 * GRP_MntFishProducts3
1211414   +          +    -0.13000426565494 * GRP_MntFishProducts4
1211415   +          +     0.17862455375899 * GRP_MntGoldProds2
1211416   +          +     0.06257016564867 * GRP_MntGoldProds3
1211417   +          +     0.20249370161035 * GRP_MntGoldProds4
1211418   +          +     0.32678386182233 * GRP_MntMeatProducts2
1211419   +          +      0.3373259079058 * GRP_MntMeatProducts3
1211420   +          +     0.28061036187325 * GRP_MntMeatProducts4
1211421   +          +    -0.03272437686392 * GRP_MntWines2  +    -0.21202325680638 *
1211422   +        GRP_MntWines3  +      0.3424605103125 * GRP_MntWines4
1211423   +          +     0.18542181546309 * GRP_NumCatalogPurchases3
1211424   +          +     0.14594977072698 * GRP_NumCatalogPurchases4
1211425   +          +     0.20431880618842 * GRP_NumDistPurchases2
1211426   +          +    -0.15119714667229 * GRP_NumDistPurchases3
1211427   +          +     0.19430353652214 * GRP_NumDistPurchases4
1211428   +          +     0.04685341709526 * GRP_NumWebPurchases2
1211429   +          +    -0.06094487598588 * GRP_NumWebPurchases3
1211430   +          +    -0.04237233324733 * GRP_NumWebPurchases4
1211431   +          +    -0.08991829185393 * GRP_RFMstat2  +    -0.07347809144281 *
1211432   +        GRP_RFMstat3  +     -0.4341534715985 * GRP_RFMstat4
1211433   +          +     -0.0196197195217 * GRP_RMntFrq2  +     0.12097540554524 *
1211434   +        GRP_RMntFrq3  +     0.26057062278983 * GRP_RMntFrq4
1211435   +          +    -0.63029497931535 * GRP_Recency2  +    -0.41040165908214 *
1211436   +        GRP_Recency3  +     0.03209060504164 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.35448004105908 * GRP_AcceptedCmp52 + -0.0918084964279 * 
GRP_Frq2 + -0.23985284532042 * GRP_Frq3 + 0.05570802281486 * GRP_Frq4 + -0.3547598798301 * 
GRP_Income2 + -0.33962703607715 * GRP_Income3 + 0.12436841230863 * GRP_Income4 + 
-0.01455143009771 * GRP_Mnt2 + 0.10120972709945 * GRP_Mnt3 + -0.0249155152295 * GRP_Mnt4 + 
-0.269333013942 * GRP_MntFishProducts2 + 0.05785555057946 * GRP_MntFishProducts3 + 
-0.13000426565494 * GRP_MntFishProducts4 + 0.17862455375899 * GRP_MntGoldProds2 + 
0.06257016564867 * GRP_MntGoldProds3 + 0.20249370161035 * GRP_MntGoldProds4 + 0.32678386182233 
* GRP_MntMeatProducts2 + 0.3373259079058 * GRP_MntMeatProducts3 + 0.28061036187325 * 
GRP_MntMeatProducts4 + -0.03272437686392 * GRP_MntWines2 + -0.21202325680638 * GRP_MntWines3 + 
0.3424605103125 * GRP_MntWines4 + 0.18542181546309 * GRP_NumCatalogPurchases3 + 
0.14594977072698 * GRP_NumCatalogPurchases4 + 0.20431880618842 * GRP_NumDistPurchases2 + 
-0.15119714667229 * GRP_NumDistPurchases3 + 0.19430353652214 * GRP_NumDistPurchases4 + 
0.04685341709526 * GRP_NumWebPurchases2 + -0.06094487598588 * GRP_NumWebPurchases3 + 
-0.04237233324733 * GRP_NumWebPurchases4 + -0.08991829185393 * GRP_RFMstat2 + 
-0.07347809144281 * GRP_RFMstat3 + -0.4341534715985 * GRP_RFMstat4 + -0.0196197195217 * 
GRP_RMntFrq2 + 0.12097540554524 * GRP_RMntFrq3 + 0.26057062278983 * GRP_RMntFrq4 + 
-0.63029497931535 * GRP_Recency2 + -0.41040165908214 * GRP_Recency3 + 0.03209060504164 * 
GRP_Recency4 ;
1211437   +   H12  = H12  +    -0.16182441315567 * GRP_AcceptedCmp52
1211438   +          +     0.17228162466334 * GRP_Frq2  +     0.15132687990319 * GRP_Frq3
1211439   +          +     -0.1689155033241 * GRP_Frq4  +     0.15149901619495 *
1211440   +        GRP_Income2  +     0.17788129654866 * GRP_Income3
1211441   +          +     0.05923547318389 * GRP_Income4  +    -0.08355004275991 *
1211442   +        GRP_Mnt2  +     0.02631246580002 * GRP_Mnt3  +     -0.2309890088856 *
1211443   +        GRP_Mnt4  +     0.14312480402918 * GRP_MntFishProducts2
1211444   +          +     -0.2578736956972 * GRP_MntFishProducts3
1211445   +          +     0.18402620335031 * GRP_MntFishProducts4
1211446   +          +     0.05242149290227 * GRP_MntGoldProds2
1211447   +          +    -0.21803869063517 * GRP_MntGoldProds3
1211448   +          +     0.13815635816146 * GRP_MntGoldProds4
1211449   +          +    -0.27330809721997 * GRP_MntMeatProducts2
1211450   +          +    -0.21530314028526 * GRP_MntMeatProducts3
1211451   +          +     0.02052103215709 * GRP_MntMeatProducts4
1211452   +          +    -0.12650113568762 * GRP_MntWines2  +     0.11322482902275 *
1211453   +        GRP_MntWines3  +    -0.27438926594633 * GRP_MntWines4
1211454   +          +    -0.54784157827091 * GRP_NumCatalogPurchases3
1211455   +          +    -0.08859032150825 * GRP_NumCatalogPurchases4
1211456   +          +     -0.1595237277506 * GRP_NumDistPurchases2
1211457   +          +     0.00057390274989 * GRP_NumDistPurchases3
1211458   +          +     -0.1082308524036 * GRP_NumDistPurchases4
1211459   +          +     0.08795971555231 * GRP_NumWebPurchases2
1211460   +          +    -0.23666817227274 * GRP_NumWebPurchases3
1211461   +          +     0.01490866706276 * GRP_NumWebPurchases4
1211462   +          +    -0.00588866906818 * GRP_RFMstat2  +    -0.01109150017006 *
1211463   +        GRP_RFMstat3  +    -0.00327834027258 * GRP_RFMstat4
1211464   +          +     0.04028767653615 * GRP_RMntFrq2  +     -0.0163649640466 *
1211465   +        GRP_RMntFrq3  +    -0.07601316125357 * GRP_RMntFrq4
1211466   +          +     0.66228536796217 * GRP_Recency2  +     0.48287342862457 *
1211467   +        GRP_Recency3  +    -0.03032773010646 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.16182441315567 * GRP_AcceptedCmp52 + 0.17228162466334 * 
GRP_Frq2 + 0.15132687990319 * GRP_Frq3 + -0.1689155033241 * GRP_Frq4 + 0.15149901619495 * 
GRP_Income2 + 0.17788129654866 * GRP_Income3 + 0.05923547318389 * GRP_Income4 + 
-0.08355004275991 * GRP_Mnt2 + 0.02631246580002 * GRP_Mnt3 + -0.2309890088856 * GRP_Mnt4 + 
0.14312480402918 * GRP_MntFishProducts2 + -0.2578736956972 * GRP_MntFishProducts3 + 
0.18402620335031 * GRP_MntFishProducts4 + 0.05242149290227 * GRP_MntGoldProds2 + 
-0.21803869063517 * GRP_MntGoldProds3 + 0.13815635816146 * GRP_MntGoldProds4 + 
-0.27330809721997 * GRP_MntMeatProducts2 + -0.21530314028526 * GRP_MntMeatProducts3 + 
0.02052103215709 * GRP_MntMeatProducts4 + -0.12650113568762 * GRP_MntWines2 + 0.11322482902275 
* GRP_MntWines3 + -0.27438926594633 * GRP_MntWines4 + -0.54784157827091 * 
GRP_NumCatalogPurchases3 + -0.08859032150825 * GRP_NumCatalogPurchases4 + -0.1595237277506 * 
GRP_NumDistPurchases2 + 0.00057390274989 * GRP_NumDistPurchases3 + -0.1082308524036 * 
GRP_NumDistPurchases4 + 0.08795971555231 * GRP_NumWebPurchases2 + -0.23666817227274 * 
GRP_NumWebPurchases3 + 0.01490866706276 * GRP_NumWebPurchases4 + -0.00588866906818 * 
GRP_RFMstat2 + -0.01109150017006 * GRP_RFMstat3 + -0.00327834027258 * GRP_RFMstat4 + 
0.04028767653615 * GRP_RMntFrq2 + -0.0163649640466 * GRP_RMntFrq3 + -0.07601316125357 * 
GRP_RMntFrq4 + 0.66228536796217 * GRP_Recency2 + 0.48287342862457 * GRP_Recency3 + 
-0.03032773010646 * GRP_Recency4 ;
1211468   +   H13  = H13  +    -0.76222121025234 * GRP_AcceptedCmp52
1211469   +          +     0.36511613420086 * GRP_Frq2  +    -0.02961648849396 * GRP_Frq3
1211470   +          +     0.08263295800576 * GRP_Frq4  +     0.53248885273716 *
1211471   +        GRP_Income2  +     0.58143836248256 * GRP_Income3
1211472   +          +     -0.6819044946332 * GRP_Income4  +     0.09969835343923 *
1211473   +        GRP_Mnt2  +     0.22681708558976 * GRP_Mnt3  +    -0.05933156304489 *
1211474   +        GRP_Mnt4  +      0.3115929057885 * GRP_MntFishProducts2
1211475   +          +     0.20656815909058 * GRP_MntFishProducts3
1211476   +          +    -0.18100587726033 * GRP_MntFishProducts4
1211477   +          +    -0.26082445403302 * GRP_MntGoldProds2
1211478   +          +     0.05485426947921 * GRP_MntGoldProds3
1211479   +          +     0.09168468833046 * GRP_MntGoldProds4
1211480   +          +    -0.26764306152541 * GRP_MntMeatProducts2
1211481   +          +    -0.05251001605784 * GRP_MntMeatProducts3
1211482   +          +     0.29225259283913 * GRP_MntMeatProducts4
1211483   +          +     0.61402400906277 * GRP_MntWines2  +     0.18145923811098 *
1211484   +        GRP_MntWines3  +    -0.04337923172483 * GRP_MntWines4
1211485   +          +    -0.72349314013585 * GRP_NumCatalogPurchases3
1211486   +          +     0.14875924587174 * GRP_NumCatalogPurchases4
1211487   +          +    -0.74484872686794 * GRP_NumDistPurchases2
1211488   +          +    -0.21410281712514 * GRP_NumDistPurchases3
1211489   +          +     0.04732133485671 * GRP_NumDistPurchases4
1211490   +          +     -0.1068322737335 * GRP_NumWebPurchases2
1211491   +          +     0.16615642908107 * GRP_NumWebPurchases3
1211492   +          +     0.06510367246629 * GRP_NumWebPurchases4
1211493   +          +    -0.32688260466431 * GRP_RFMstat2  +    -0.18733405583331 *
1211494   +        GRP_RFMstat3  +     -0.2070438751052 * GRP_RFMstat4
1211495   +          +     0.00135495431586 * GRP_RMntFrq2  +     0.14594289041413 *
1211496   +        GRP_RMntFrq3  +    -0.22868347656723 * GRP_RMntFrq4
1211497   +          +     0.85583167880584 * GRP_Recency2  +     0.12194433799934 *
1211498   +        GRP_Recency3  +    -0.40666493945855 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.76222121025234 * GRP_AcceptedCmp52 + 0.36511613420086 * 
GRP_Frq2 + -0.02961648849396 * GRP_Frq3 + 0.08263295800576 * GRP_Frq4 + 0.53248885273716 * 
GRP_Income2 + 0.58143836248256 * GRP_Income3 + -0.6819044946332 * GRP_Income4 + 
0.09969835343923 * GRP_Mnt2 + 0.22681708558976 * GRP_Mnt3 + -0.05933156304489 * GRP_Mnt4 + 
0.3115929057885 * GRP_MntFishProducts2 + 0.20656815909058 * GRP_MntFishProducts3 + 
-0.18100587726033 * GRP_MntFishProducts4 + -0.26082445403302 * GRP_MntGoldProds2 + 
0.05485426947921 * GRP_MntGoldProds3 + 0.09168468833046 * GRP_MntGoldProds4 + 
-0.26764306152541 * GRP_MntMeatProducts2 + -0.05251001605784 * GRP_MntMeatProducts3 + 
0.29225259283913 * GRP_MntMeatProducts4 + 0.61402400906277 * GRP_MntWines2 + 0.18145923811098 
* GRP_MntWines3 + -0.04337923172483 * GRP_MntWines4 + -0.72349314013585 * 
GRP_NumCatalogPurchases3 + 0.14875924587174 * GRP_NumCatalogPurchases4 + -0.74484872686794 * 
GRP_NumDistPurchases2 + -0.21410281712514 * GRP_NumDistPurchases3 + 0.04732133485671 * 
GRP_NumDistPurchases4 + -0.1068322737335 * GRP_NumWebPurchases2 + 0.16615642908107 * 
GRP_NumWebPurchases3 + 0.06510367246629 * GRP_NumWebPurchases4 + -0.32688260466431 * 
GRP_RFMstat2 + -0.18733405583331 * GRP_RFMstat3 + -0.2070438751052 * GRP_RFMstat4 + 
0.00135495431586 * GRP_RMntFrq2 + 0.14594289041413 * GRP_RMntFrq3 + -0.22868347656723 * 
GRP_RMntFrq4 + 0.85583167880584 * GRP_Recency2 + 0.12194433799934 * GRP_Recency3 + 
-0.40666493945855 * GRP_Recency4 ;
1211499   +   H11  =    -0.47589199029932 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47589199029932 + H11 ;
1211500   +   H12  =    -0.33973735112712 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.33973735112712 + H12 ;
1211501   +   H13  =     0.16076842495153 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.16076842495153 + H13 ;
1211502   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1211503   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1211504   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1211505   +END;
MPRINT(EM_DIAGRAM):   END;
1211506   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211507   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1211508   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1211509   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1211510   +END;
MPRINT(EM_DIAGRAM):   END;
1211511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211512   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1211513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211514   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1211515   +   P_DepVar1  =    -1.16415993584169 * H11  +     0.57209582268762 * H12
1211516   +          +     1.90916164841558 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16415993584169 * H11 + 0.57209582268762 * H12 + 
1.90916164841558 * H13 ;
1211517   +   P_DepVar1  =    -1.85769338519577 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.85769338519577 + P_DepVar1 ;
1211518   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1211519   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1211520   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1211521   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1211522   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1211523   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1211524   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1211525   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1211526   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1211527   +END;
MPRINT(EM_DIAGRAM):   END;
1211528   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1211529   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1211530   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1211531   +END;
MPRINT(EM_DIAGRAM):   END;
1211532   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1211533   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1211534   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1211535   +END;
MPRINT(EM_DIAGRAM):   END;
1211536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211537   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1211538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1211539   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1211540   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1211541   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1211542   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1211543   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1211544   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1211545   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1211546   +END;
MPRINT(EM_DIAGRAM):   END;
1211547   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211548   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1211549   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1211550   +drop
1211551   +H11
1211552   +H12
1211553   +H13
1211554   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1211555   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1211556    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1211557    quit;
1211558    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1211559    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1211560    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1211561    retain ID 2 Node "Neural20";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural20";
1211562    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1211563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1704 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1704 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211564    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1211565    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211566    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1704 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1704 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1211567    proc sort data=EMWS8.Neural20_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural20_variableset out=_temp2(keep=NAME CREATOR);
1211568    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211569    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL20_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211570    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1211571    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1211572    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1211573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1211574    proc contents data=EMWS8.Neural20_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural20_train out=_meta(keep=NAME) noprint;
1211575    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1211576    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1211577    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1211579    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1211580    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1211581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211582    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211583    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1211584    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1211584  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 865 rows and 5 columns.

1211585    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1211586    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1211587    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 865 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 865 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211588    filename _pref
1211588  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1211589    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1211590    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1211591   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1211592   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1211593   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1211594   +
1211595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211596   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1211597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211598   +LABEL GRP_AcceptedCmp5 =
1211599   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1211600   +
1211601   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1211602   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1211603   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1211604   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1211605   +end;
MPRINT(EM_DIAGRAM):   end;
1211606   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1211607   +if (_UFORMAT eq '0'
1211608   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1211609   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1211610   +end;
MPRINT(EM_DIAGRAM):   end;
1211611   +else
1211612   +if (_UFORMAT eq '1'
1211613   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1211614   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1211615   +end;
MPRINT(EM_DIAGRAM):   end;
1211616   +else do;
MPRINT(EM_DIAGRAM):   else do;
1211617   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1211618   +end;
MPRINT(EM_DIAGRAM):   end;
1211619   +end;
MPRINT(EM_DIAGRAM):   end;
1211620   +
1211621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211622   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1211623   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211624   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1211625   +
1211626   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1211627   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1211628   +end;
MPRINT(EM_DIAGRAM):   end;
1211629   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1211630   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1211631   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1211632   +end;
MPRINT(EM_DIAGRAM):   end;
1211633   +else
1211634   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1211635   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1211636   +end;
MPRINT(EM_DIAGRAM):   end;
1211637   +else
1211638   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1211639   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1211640   +end;
MPRINT(EM_DIAGRAM):   end;
1211641   +else
1211642   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1211643   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1211644   +end;
MPRINT(EM_DIAGRAM):   end;
1211645   +end;
MPRINT(EM_DIAGRAM):   end;
1211646   +
1211647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211648   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1211649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211650   +LABEL GRP_Income =
1211651   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1211652   +
1211653   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1211654   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1211655   +end;
MPRINT(EM_DIAGRAM):   end;
1211656   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1211657   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1211658   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1211659   +end;
MPRINT(EM_DIAGRAM):   end;
1211660   +else
1211661   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1211662   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1211663   +end;
MPRINT(EM_DIAGRAM):   end;
1211664   +else
1211665   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1211666   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1211667   +end;
MPRINT(EM_DIAGRAM):   end;
1211668   +else
1211669   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1211670   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1211671   +end;
MPRINT(EM_DIAGRAM):   end;
1211672   +end;
MPRINT(EM_DIAGRAM):   end;
1211673   +
1211674   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211675   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1211676   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211677   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1211678   +
1211679   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1211680   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1211681   +end;
MPRINT(EM_DIAGRAM):   end;
1211682   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1211683   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1211684   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1211685   +end;
MPRINT(EM_DIAGRAM):   end;
1211686   +else
1211687   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1211688   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1211689   +end;
MPRINT(EM_DIAGRAM):   end;
1211690   +else
1211691   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1211692   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1211693   +end;
MPRINT(EM_DIAGRAM):   end;
1211694   +else
1211695   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1211696   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1211697   +end;
MPRINT(EM_DIAGRAM):   end;
1211698   +end;
MPRINT(EM_DIAGRAM):   end;
1211699   +
1211700   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211701   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1211702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211703   +LABEL GRP_MntFishProducts =
1211704   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1211705   +
1211706   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1211707   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1211708   +end;
MPRINT(EM_DIAGRAM):   end;
1211709   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1211710   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1211711   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1211712   +end;
MPRINT(EM_DIAGRAM):   end;
1211713   +else
1211714   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1211715   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1211716   +end;
MPRINT(EM_DIAGRAM):   end;
1211717   +else
1211718   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1211719   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1211720   +end;
MPRINT(EM_DIAGRAM):   end;
1211721   +else
1211722   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1211723   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1211724   +end;
MPRINT(EM_DIAGRAM):   end;
1211725   +end;
MPRINT(EM_DIAGRAM):   end;
1211726   +
1211727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211728   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1211729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211730   +LABEL GRP_MntGoldProds =
1211731   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1211732   +
1211733   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1211734   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1211735   +end;
MPRINT(EM_DIAGRAM):   end;
1211736   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1211737   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1211738   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1211739   +end;
MPRINT(EM_DIAGRAM):   end;
1211740   +else
1211741   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1211742   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1211743   +end;
MPRINT(EM_DIAGRAM):   end;
1211744   +else
1211745   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1211746   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1211747   +end;
MPRINT(EM_DIAGRAM):   end;
1211748   +else
1211749   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1211750   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1211751   +end;
MPRINT(EM_DIAGRAM):   end;
1211752   +end;
MPRINT(EM_DIAGRAM):   end;
1211753   +
1211754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211755   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1211756   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211757   +LABEL GRP_MntMeatProducts =
1211758   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1211759   +
1211760   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1211761   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1211762   +end;
MPRINT(EM_DIAGRAM):   end;
1211763   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1211764   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1211765   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1211766   +end;
MPRINT(EM_DIAGRAM):   end;
1211767   +else
1211768   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1211769   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1211770   +end;
MPRINT(EM_DIAGRAM):   end;
1211771   +else
1211772   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1211773   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1211774   +end;
MPRINT(EM_DIAGRAM):   end;
1211775   +else
1211776   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1211777   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1211778   +end;
MPRINT(EM_DIAGRAM):   end;
1211779   +end;
MPRINT(EM_DIAGRAM):   end;
1211780   +
1211781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211782   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1211783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211784   +LABEL GRP_MntWines =
1211785   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1211786   +
1211787   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1211788   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1211789   +end;
MPRINT(EM_DIAGRAM):   end;
1211790   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1211791   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1211792   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1211793   +end;
MPRINT(EM_DIAGRAM):   end;
1211794   +else
1211795   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1211796   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1211797   +end;
MPRINT(EM_DIAGRAM):   end;
1211798   +else
1211799   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1211800   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1211801   +end;
MPRINT(EM_DIAGRAM):   end;
1211802   +else
1211803   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1211804   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1211805   +end;
MPRINT(EM_DIAGRAM):   end;
1211806   +end;
MPRINT(EM_DIAGRAM):   end;
1211807   +
1211808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211809   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1211810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211811   +LABEL GRP_NumCatalogPurchases =
1211812   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1211813   +
1211814   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1211815   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1211816   +end;
MPRINT(EM_DIAGRAM):   end;
1211817   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1211818   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1211819   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1211820   +end;
MPRINT(EM_DIAGRAM):   end;
1211821   +else
1211822   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1211823   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1211824   +end;
MPRINT(EM_DIAGRAM):   end;
1211825   +else
1211826   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1211827   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1211828   +end;
MPRINT(EM_DIAGRAM):   end;
1211829   +else
1211830   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1211831   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1211832   +end;
MPRINT(EM_DIAGRAM):   end;
1211833   +end;
MPRINT(EM_DIAGRAM):   end;
1211834   +
1211835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211836   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1211837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211838   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1211839   +
1211840   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1211841   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1211842   +end;
MPRINT(EM_DIAGRAM):   end;
1211843   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1211844   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1211845   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1211846   +end;
MPRINT(EM_DIAGRAM):   end;
1211847   +else
1211848   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1211849   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1211850   +end;
MPRINT(EM_DIAGRAM):   end;
1211851   +else
1211852   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1211853   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1211854   +end;
MPRINT(EM_DIAGRAM):   end;
1211855   +else
1211856   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1211857   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1211858   +end;
MPRINT(EM_DIAGRAM):   end;
1211859   +end;
MPRINT(EM_DIAGRAM):   end;
1211860   +
1211861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211862   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1211863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211864   +LABEL GRP_NumWebPurchases =
1211865   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1211866   +
1211867   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1211868   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1211869   +end;
MPRINT(EM_DIAGRAM):   end;
1211870   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1211871   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1211872   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1211873   +end;
MPRINT(EM_DIAGRAM):   end;
1211874   +else
1211875   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1211876   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1211877   +end;
MPRINT(EM_DIAGRAM):   end;
1211878   +else
1211879   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1211880   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1211881   +end;
MPRINT(EM_DIAGRAM):   end;
1211882   +else
1211883   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1211884   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1211885   +end;
MPRINT(EM_DIAGRAM):   end;
1211886   +end;
MPRINT(EM_DIAGRAM):   end;
1211887   +
1211888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211889   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1211890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211891   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1211892   +
1211893   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1211894   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1211895   +end;
MPRINT(EM_DIAGRAM):   end;
1211896   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1211897   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1211898   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1211899   +end;
MPRINT(EM_DIAGRAM):   end;
1211900   +else
1211901   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1211902   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1211903   +end;
MPRINT(EM_DIAGRAM):   end;
1211904   +else
1211905   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1211906   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1211907   +end;
MPRINT(EM_DIAGRAM):   end;
1211908   +else
1211909   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1211910   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1211911   +end;
MPRINT(EM_DIAGRAM):   end;
1211912   +end;
MPRINT(EM_DIAGRAM):   end;
1211913   +
1211914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211915   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1211916   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211917   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1211918   +
1211919   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1211920   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1211921   +end;
MPRINT(EM_DIAGRAM):   end;
1211922   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1211923   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1211924   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1211925   +end;
MPRINT(EM_DIAGRAM):   end;
1211926   +else
1211927   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1211928   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1211929   +end;
MPRINT(EM_DIAGRAM):   end;
1211930   +else
1211931   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1211932   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1211933   +end;
MPRINT(EM_DIAGRAM):   end;
1211934   +else
1211935   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1211936   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1211937   +end;
MPRINT(EM_DIAGRAM):   end;
1211938   +end;
MPRINT(EM_DIAGRAM):   end;
1211939   +
1211940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211941   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1211942   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1211943   +LABEL GRP_Recency =
1211944   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1211945   +
1211946   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1211947   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1211948   +end;
MPRINT(EM_DIAGRAM):   end;
1211949   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1211950   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1211951   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1211952   +end;
MPRINT(EM_DIAGRAM):   end;
1211953   +else
1211954   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1211955   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1211956   +end;
MPRINT(EM_DIAGRAM):   end;
1211957   +else
1211958   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1211959   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1211960   +end;
MPRINT(EM_DIAGRAM):   end;
1211961   +else
1211962   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1211963   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1211964   +end;
MPRINT(EM_DIAGRAM):   end;
1211965   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1211966    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1211967    quit;
1211968    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1211969    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1211970    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1211971    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1211972    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1211973    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211974    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1211975    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211976    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211977    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1211978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211979    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1211980    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1211981    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1211982    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1211983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211984    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1211985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1211986    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1211987    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211988    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211989    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1211990    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1211991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1211992    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1211993    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1211994    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1211994  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1211995    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211996    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1211997    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 880 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1211998    filename _pref
1211998  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1211999    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1212000    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1212001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212002   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1212003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1212004   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1212005   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1212006   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1212007    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1212008    quit;
1212009    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1212010    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1212011    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1212012    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1212013    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1212014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1212015    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1212016    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212017    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212018    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1212019    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212021    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1212022    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1212023    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1212024    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212025    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1212026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1212027    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1212028    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212029    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212030    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1212031    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1212032    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212033    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212034    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1212035    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1212035  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1212036    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1212037    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1212038    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 884 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212039    filename _pref
1212039  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1212040    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1212041    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1212042   +
1212043   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1212044   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1212044  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1212045   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1212046   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1212047   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1212048   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1212049   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1212050    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1212051    quit;
1212052    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1212053    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1212054    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1212055    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1212056    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1212057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212058    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1212059    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212060    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1212061    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1212062    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212063    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212064    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1212065    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1212066    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1212067    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212068    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1212069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212070    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1212071    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212072    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212073    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1212074    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1212075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212076    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1212077    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1212078    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1212078  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1212079    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212080    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1212081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 923 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212082    filename _pref
1212082  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1212083    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1212084    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1212085   +
1212086   +
1212087   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1212088   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1212089   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1212090   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1212091   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1212092   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212093   +
1212094   +
1212095   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1212096   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1212097   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1212098   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1212099   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1212100   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212101   +
1212102   +
1212103   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1212104   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1212105   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1212106   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1212107   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1212108   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212109   +
1212110   +
1212111   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1212112   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1212113   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1212114   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1212115   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1212116   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212117   +
1212118   +
1212119   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1212120   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1212121   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1212122   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1212123   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1212124   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212125   +
1212126   +
1212127   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1212128   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1212129   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1212130   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1212131   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1212132   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212133   +
1212134   +
1212135   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1212136   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1212137   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1212138   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1212139   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1212140   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212141   +
1212142   +
1212143   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1212144   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1212145   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1212146   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1212147   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1212148   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1212149   +if
1212150   +_FILTERNORM1 not in ( '.')
1212151   + and
1212152   +_FILTERNORM2 not in ( '.')
1212153   + and
1212154   +_FILTERNORM3 not in ( '.')
1212155   + and
1212156   +_FILTERNORM4 not in ( '.')
1212157   + and
1212158   +_FILTERNORM5 not in ( '.')
1212159   + and
1212160   +_FILTERNORM6 not in ( '.')
1212161   + and
1212162   +_FILTERNORM7 not in ( ' ')
1212163   + and
1212164   +_FILTERNORM8 not in ( ' ')
1212165   +and
1212166   +( Dt_Customer ne .)
1212167   +and ( Income ne . and (Income<=107000))
1212168   +and ( Kidhome ne .)
1212169   +and ( MntFishProducts ne .)
1212170   +and ( MntFruits ne .)
1212171   +and ( MntGoldProds ne .)
1212172   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1212173   +and ( MntSweetProducts ne .)
1212174   +and ( MntWines ne .)
1212175   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1212176   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1212177   +and ( NumStorePurchases ne .)
1212178   +and ( NumWebPurchases ne .)
1212179   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1212180   +and ( Recency ne .)
1212181   +and ( Teenhome ne .)
1212182   +and ( Year_Birth ne .)
1212183   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1212184   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1212185   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1212186   +end;
MPRINT(EM_DIAGRAM):   end;
1212187   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1212188   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1212189    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1212190    quit;
1212191    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1212192    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1212193    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1212194    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1212195    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1212196    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212197    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1212198    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212199    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212200    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1212201    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212202    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1212203    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1212204    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1212205    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1212206    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212207    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1212208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1212209    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1212210    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212211    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212212    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1212213    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1212214    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1212215    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1212216    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1212217    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1212217  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1212218    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212219    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1212220    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 989 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212221    %macro varDept(fcmpdata=,id=);
1212222    %global nobs&id scoreFlag&id;
1212223    %let scoreFlag&id = 0;
1212224    %if &id=1 or ^&fcmpStart %then %do;
1212225    proc sort data=&fcmpdata out=_temp&id nodupkey;
1212226    by NAME;
1212227    where id=&id and LHS in( %let j=1;
1212228    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1212229    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1212230    "&var" %let j = %eval(&j+1);
1212231    %end;
1212232    );
1212233    run;
1212234    %let dsid = %sysfunc(open(_temp&id));
1212235    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1212236    %let dsid = %sysfunc(close(&dsid));
1212237    %if &&nobs&id %then %do;
1212238    %let scoreFlag&id = 1;
1212239    %let fcmpStart = 1;
1212240    %end;
1212241    %else %let fcmpStart = 0;
1212242    %end;
1212243    %else %do;
1212244    proc sort data=&fcmpdata out=_tempid;
1212245    where id=&id;
1212246    by LHS;
1212247    run;
1212248    %let dsid = %sysfunc(open(_tempid));
1212249    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1212250    %let dsid = %sysfunc(close(&dsid));
1212251    %if ^&&nobs&id %then %do;
1212252    proc datasets lib=work nolist;
1212253    delete _tempid;
1212254    run;
1212255    quit;
1212256    %end;
1212257    %else %do;
1212258    data _tempAll;
1212259    set %let j=%eval(&id-1);
1212260    %do x=1 %to &j;
1212261    %if &&nobs&x %then %do;
1212262    _temp&x %end;
1212263    %end;
1212264    ;
1212265    run;
1212266    proc sql;
1212267    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1212267  ! work._tempid p2 where p.name=p2.lhs;
1212268    quit;
1212269    data _temp&id;
1212270    set _temp&id;
1212271    where LHS ne '' and NAME ne '' and Node ne '';
1212272    run;
1212273    proc datasets lib=work nolist;
1212274    delete _tempAll;
1212275    run;
1212276    %let dsid = %sysfunc(open(_temp&id));
1212277    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1212278    %let dsid = %sysfunc(close(&dsid));
1212279    %if ^&&nobs&id %then %do;
1212280    proc datasets lib=work nolist;
1212281    delete _temp&id;
1212282    run;
1212283    quit;
1212284    %end;
1212285    %else %do;
1212286    %let scoreFlag&id = 1;
1212287    data _temp&id;
1212288    set _temp&id;
1212289    where LHS ne NAME and node ne '';
1212290    run;
1212291    %let dsid = %sysfunc(open(_temp&id));
1212292    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1212293    %let dsid = %sysfunc(close(&dsid));
1212294    %if ^&&nobs&id %then %do;
1212295    proc datasets lib=work nolist;
1212296    delete _temp&id;
1212297    run;
1212298    quit;
1212299    %end;
1212300    %else %do;
1212301    proc sort data=_temp&id nodupkey;
1212302    by LHS NAME;
1212303    run;
1212304    %end;
1212305    %end;
1212306    %end;
1212307    %end;
1212308    %mend varDept;
1212309    %macro optCode(outdata=fcmpdata);
1212310    %global fcmpStart;
1212311    %let fcmpStart = 0;
1212312    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1212313    %let NumNodes=9;
1212314    %do k=1 %to &NumNodes;
1212315    %vardept(fcmpdata=&outdata, id=&k);
1212316    %end;
1212317    %mend optCode;
1212318    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1212319    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1212320    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1212321    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1212322    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212323    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1212324    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1212325    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1212326    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212327    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1212328    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1212328  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1212329    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1212330    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1212331    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1212332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212333    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1212334    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1212335    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1212336    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212337    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1212338    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1212339    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1212340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212341    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1212342    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1212342  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1212343    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1212344    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1212345    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1212346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1212347    filename _pref
1212347  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural19\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural19\EMPUBLISHSCORE.sas";
1212348    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1212349    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural19\EMPUBLISHSCORE.sas.
1212350   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1212351   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1212352   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1212353   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1212354   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1212355   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1212356   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1212357   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1212358   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1212359   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1212360   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1212361   +LENGTH _WARN_ $4
1212362   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1212363   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1212364   +
1212365   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1212366   +
1212367   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1212368   +
1212369   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1212370   +
1212371   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1212372   +
1212373   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1212374   +
1212375   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1212376   +
1212377   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1212378   +
1212379   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1212380   +
1212381   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1212382   +
1212383   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1212384   +
1212385   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1212386   +
1212387   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1212388   +
1212389   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1212390   +
1212391   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1212392   +
1212393   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1212394   +
1212395   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1212396   +
1212397   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1212398   +
1212399   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1212400   +
1212401   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1212402   +
1212403   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1212404   +
1212405   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1212406   +
1212407   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1212408   +
1212409   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1212410   +
1212411   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1212412   +
1212413   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1212414   +
1212415   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1212416   +
1212417   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1212418   +
1212419   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1212420   +
1212421   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1212422   +
1212423   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1212424   +
1212425   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1212426   +
1212427   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1212428   +
1212429   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1212430   +
1212431   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1212432   +
1212433   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1212434   +
1212435   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1212436   +
1212437   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1212438   +
1212439   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1212440   +
1212441   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1212442   +
1212443   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1212444   +
1212445   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1212446   +
1212447   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1212448   +
1212449   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1212450   +
1212451   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1212452   +
1212453   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1212454   +
1212455   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1212456   +
1212457   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1212458   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1212459   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1212460   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1212461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212463   +end;
MPRINT(EM_DIAGRAM):   end;
1212464   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212466   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1212467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212468   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1212469   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1212470   +   end;
MPRINT(EM_DIAGRAM):   end;
1212471   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1212472   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1212473   +   end;
MPRINT(EM_DIAGRAM):   end;
1212474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212475   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1212476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212478   +   end;
MPRINT(EM_DIAGRAM):   end;
1212479   +end;
MPRINT(EM_DIAGRAM):   end;
1212480   +
1212481   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1212482   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1212483   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1212484   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1212485   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1212486   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1212487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212489   +end;
MPRINT(EM_DIAGRAM):   end;
1212490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212491   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212492   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1212493   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212494   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1212495   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1212496   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1212497   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1212498   +   end;
MPRINT(EM_DIAGRAM):   end;
1212499   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1212500   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1212501   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1212502   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1212503   +   end;
MPRINT(EM_DIAGRAM):   end;
1212504   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212505   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1212506   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1212507   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1212508   +   end;
MPRINT(EM_DIAGRAM):   end;
1212509   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212510   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1212511   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1212512   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1212513   +   end;
MPRINT(EM_DIAGRAM):   end;
1212514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212515   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1212516   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1212517   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1212518   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212519   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212520   +   end;
MPRINT(EM_DIAGRAM):   end;
1212521   +end;
MPRINT(EM_DIAGRAM):   end;
1212522   +
1212523   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1212524   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1212525   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1212526   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1212527   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1212528   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1212529   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212530   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212531   +end;
MPRINT(EM_DIAGRAM):   end;
1212532   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212533   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212534   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1212535   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212536   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1212537   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1212538   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1212539   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1212540   +   end;
MPRINT(EM_DIAGRAM):   end;
1212541   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212542   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1212543   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1212544   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1212545   +   end;
MPRINT(EM_DIAGRAM):   end;
1212546   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1212547   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1212548   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1212549   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1212550   +   end;
MPRINT(EM_DIAGRAM):   end;
1212551   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212552   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1212553   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1212554   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1212555   +   end;
MPRINT(EM_DIAGRAM):   end;
1212556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212557   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1212558   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1212559   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1212560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212562   +   end;
MPRINT(EM_DIAGRAM):   end;
1212563   +end;
MPRINT(EM_DIAGRAM):   end;
1212564   +
1212565   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1212566   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1212567   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1212568   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1212569   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1212570   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1212571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212573   +end;
MPRINT(EM_DIAGRAM):   end;
1212574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212575   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212576   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1212577   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212578   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212579   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1212580   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1212581   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1212582   +   end;
MPRINT(EM_DIAGRAM):   end;
1212583   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212584   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1212585   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1212586   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1212587   +   end;
MPRINT(EM_DIAGRAM):   end;
1212588   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212589   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1212590   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1212591   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1212592   +   end;
MPRINT(EM_DIAGRAM):   end;
1212593   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212594   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1212595   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1212596   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1212597   +   end;
MPRINT(EM_DIAGRAM):   end;
1212598   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212599   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1212600   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1212601   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1212602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212604   +   end;
MPRINT(EM_DIAGRAM):   end;
1212605   +end;
MPRINT(EM_DIAGRAM):   end;
1212606   +
1212607   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1212608   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1212609   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1212610   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1212611   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1212612   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1212613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212615   +end;
MPRINT(EM_DIAGRAM):   end;
1212616   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212617   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212618   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1212619   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212620   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212621   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1212622   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1212623   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1212624   +   end;
MPRINT(EM_DIAGRAM):   end;
1212625   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212626   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1212627   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1212628   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1212629   +   end;
MPRINT(EM_DIAGRAM):   end;
1212630   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212631   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1212632   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1212633   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1212634   +   end;
MPRINT(EM_DIAGRAM):   end;
1212635   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212636   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1212637   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1212638   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1212639   +   end;
MPRINT(EM_DIAGRAM):   end;
1212640   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212641   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1212642   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1212643   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1212644   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212645   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212646   +   end;
MPRINT(EM_DIAGRAM):   end;
1212647   +end;
MPRINT(EM_DIAGRAM):   end;
1212648   +
1212649   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1212650   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1212651   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1212652   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1212653   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1212654   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1212655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212657   +end;
MPRINT(EM_DIAGRAM):   end;
1212658   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212659   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212660   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1212661   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212662   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212663   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1212664   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1212665   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1212666   +   end;
MPRINT(EM_DIAGRAM):   end;
1212667   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212668   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1212669   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1212670   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1212671   +   end;
MPRINT(EM_DIAGRAM):   end;
1212672   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212673   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1212674   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1212675   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1212676   +   end;
MPRINT(EM_DIAGRAM):   end;
1212677   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212678   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1212679   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1212680   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1212681   +   end;
MPRINT(EM_DIAGRAM):   end;
1212682   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212683   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1212684   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1212685   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1212686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212688   +   end;
MPRINT(EM_DIAGRAM):   end;
1212689   +end;
MPRINT(EM_DIAGRAM):   end;
1212690   +
1212691   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1212692   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1212693   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1212694   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1212695   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1212696   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1212697   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212699   +end;
MPRINT(EM_DIAGRAM):   end;
1212700   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212701   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212702   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1212703   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212704   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212705   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1212706   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1212707   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1212708   +   end;
MPRINT(EM_DIAGRAM):   end;
1212709   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212710   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1212711   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1212712   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1212713   +   end;
MPRINT(EM_DIAGRAM):   end;
1212714   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212715   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1212716   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1212717   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1212718   +   end;
MPRINT(EM_DIAGRAM):   end;
1212719   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212720   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1212721   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1212722   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1212723   +   end;
MPRINT(EM_DIAGRAM):   end;
1212724   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212725   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1212726   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1212727   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1212728   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212729   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212730   +   end;
MPRINT(EM_DIAGRAM):   end;
1212731   +end;
MPRINT(EM_DIAGRAM):   end;
1212732   +
1212733   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1212734   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1212735   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1212736   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1212737   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1212738   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1212739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212741   +end;
MPRINT(EM_DIAGRAM):   end;
1212742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212744   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1212745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212746   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212747   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1212748   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1212749   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1212750   +   end;
MPRINT(EM_DIAGRAM):   end;
1212751   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212752   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1212753   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1212754   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1212755   +   end;
MPRINT(EM_DIAGRAM):   end;
1212756   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212757   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1212758   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1212759   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1212760   +   end;
MPRINT(EM_DIAGRAM):   end;
1212761   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212762   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1212763   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1212764   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1212765   +   end;
MPRINT(EM_DIAGRAM):   end;
1212766   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212767   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1212768   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1212769   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1212770   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212771   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212772   +   end;
MPRINT(EM_DIAGRAM):   end;
1212773   +end;
MPRINT(EM_DIAGRAM):   end;
1212774   +
1212775   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1212776   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1212777   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1212778   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1212779   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1212780   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212781   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212782   +end;
MPRINT(EM_DIAGRAM):   end;
1212783   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212784   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212785   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1212786   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212787   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212788   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1212789   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1212790   +   end;
MPRINT(EM_DIAGRAM):   end;
1212791   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212792   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1212793   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1212794   +   end;
MPRINT(EM_DIAGRAM):   end;
1212795   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212796   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1212797   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1212798   +   end;
MPRINT(EM_DIAGRAM):   end;
1212799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212800   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1212801   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1212802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212804   +   end;
MPRINT(EM_DIAGRAM):   end;
1212805   +end;
MPRINT(EM_DIAGRAM):   end;
1212806   +
1212807   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1212808   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1212809   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1212810   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1212811   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1212812   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1212813   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212814   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212815   +end;
MPRINT(EM_DIAGRAM):   end;
1212816   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212817   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212818   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1212819   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212820   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1212821   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1212822   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1212823   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1212824   +   end;
MPRINT(EM_DIAGRAM):   end;
1212825   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212826   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1212827   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1212828   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1212829   +   end;
MPRINT(EM_DIAGRAM):   end;
1212830   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212831   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1212832   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1212833   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1212834   +   end;
MPRINT(EM_DIAGRAM):   end;
1212835   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1212836   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1212837   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1212838   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1212839   +   end;
MPRINT(EM_DIAGRAM):   end;
1212840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212841   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1212842   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1212843   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1212844   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212845   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212846   +   end;
MPRINT(EM_DIAGRAM):   end;
1212847   +end;
MPRINT(EM_DIAGRAM):   end;
1212848   +
1212849   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1212850   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1212851   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1212852   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1212853   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1212854   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1212855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212857   +end;
MPRINT(EM_DIAGRAM):   end;
1212858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212860   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1212861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212862   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212863   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1212864   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1212865   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1212866   +   end;
MPRINT(EM_DIAGRAM):   end;
1212867   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212868   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1212869   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1212870   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1212871   +   end;
MPRINT(EM_DIAGRAM):   end;
1212872   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212873   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1212874   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1212875   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1212876   +   end;
MPRINT(EM_DIAGRAM):   end;
1212877   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212878   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1212879   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1212880   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1212881   +   end;
MPRINT(EM_DIAGRAM):   end;
1212882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212883   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1212884   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1212885   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1212886   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212887   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212888   +   end;
MPRINT(EM_DIAGRAM):   end;
1212889   +end;
MPRINT(EM_DIAGRAM):   end;
1212890   +
1212891   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1212892   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1212893   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1212894   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1212895   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1212896   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1212897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212899   +end;
MPRINT(EM_DIAGRAM):   end;
1212900   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212902   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1212903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212904   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1212905   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1212906   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1212907   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1212908   +   end;
MPRINT(EM_DIAGRAM):   end;
1212909   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1212910   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1212911   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1212912   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1212913   +   end;
MPRINT(EM_DIAGRAM):   end;
1212914   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212915   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1212916   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1212917   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1212918   +   end;
MPRINT(EM_DIAGRAM):   end;
1212919   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212920   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1212921   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1212922   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1212923   +   end;
MPRINT(EM_DIAGRAM):   end;
1212924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212925   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1212926   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1212927   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1212928   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212929   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212930   +   end;
MPRINT(EM_DIAGRAM):   end;
1212931   +end;
MPRINT(EM_DIAGRAM):   end;
1212932   +
1212933   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1212934   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1212935   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1212936   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1212937   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1212938   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1212939   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212940   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212941   +end;
MPRINT(EM_DIAGRAM):   end;
1212942   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212943   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212944   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1212945   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212946   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1212947   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1212948   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1212949   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1212950   +   end;
MPRINT(EM_DIAGRAM):   end;
1212951   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1212952   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1212953   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1212954   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1212955   +   end;
MPRINT(EM_DIAGRAM):   end;
1212956   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212957   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1212958   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1212959   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1212960   +   end;
MPRINT(EM_DIAGRAM):   end;
1212961   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1212962   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1212963   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1212964   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1212965   +   end;
MPRINT(EM_DIAGRAM):   end;
1212966   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1212967   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1212968   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1212969   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1212970   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1212971   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212972   +   end;
MPRINT(EM_DIAGRAM):   end;
1212973   +end;
MPRINT(EM_DIAGRAM):   end;
1212974   +
1212975   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1212976   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1212977   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1212978   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1212979   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1212980   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1212981   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1212982   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1212983   +end;
MPRINT(EM_DIAGRAM):   end;
1212984   +else do;
MPRINT(EM_DIAGRAM):   else do;
1212985   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1212986   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1212987   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1212988   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1212989   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1212990   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1212991   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1212992   +   end;
MPRINT(EM_DIAGRAM):   end;
1212993   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1212994   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1212995   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1212996   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1212997   +   end;
MPRINT(EM_DIAGRAM):   end;
1212998   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1212999   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1213000   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1213001   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1213002   +   end;
MPRINT(EM_DIAGRAM):   end;
1213003   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1213004   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1213005   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1213006   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1213007   +   end;
MPRINT(EM_DIAGRAM):   end;
1213008   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1213009   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1213010   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1213011   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1213012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1213013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213014   +   end;
MPRINT(EM_DIAGRAM):   end;
1213015   +end;
MPRINT(EM_DIAGRAM):   end;
1213016   +
1213017   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213018   +*** Checking missing input Interval
1213019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1213020   +
1213021   +IF NMISS(
1213022   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1213023   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1213024   +
1213025   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1213026   +END;
MPRINT(EM_DIAGRAM):   END;
1213027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213028   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1213029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213030   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213031   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1213032   +END;
MPRINT(EM_DIAGRAM):   END;
1213033   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213034   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1213035   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1213036   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1213037   +END;
MPRINT(EM_DIAGRAM):   END;
1213038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213039   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1213040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213042   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1213043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213044   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213045   +   H11  =    -0.00764494959641 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.00764494959641 * S_Year_Birth ;
1213046   +   H12  =     0.07985236007447 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.07985236007447 * S_Year_Birth ;
1213047   +   H11  = H11  +     0.30243585989963 * GRP_AcceptedCmp52
1213048   +          +    -1.01247574867977 * GRP_Frq2  +    -0.20269284301089 * GRP_Frq3
1213049   +          +     0.13795348170285 * GRP_Frq4  +     0.01460946974261 *
1213050   +        GRP_Income2  +     0.07493432056114 * GRP_Income3
1213051   +          +     0.02989162785893 * GRP_Income4  +    -0.02386105013807 *
1213052   +        GRP_Mnt2  +    -0.41942836136152 * GRP_Mnt3  +     0.22813965454599 *
1213053   +        GRP_Mnt4  +    -0.02248365969183 * GRP_MntFishProducts2
1213054   +          +    -0.17213374102896 * GRP_MntFishProducts3
1213055   +          +    -0.03630204919594 * GRP_MntFishProducts4
1213056   +          +    -0.05460186275698 * GRP_MntGoldProds2
1213057   +          +     0.17440895359267 * GRP_MntGoldProds3
1213058   +          +     0.06276226158536 * GRP_MntGoldProds4
1213059   +          +     0.24913658683735 * GRP_MntMeatProducts2
1213060   +          +     0.34153298373719 * GRP_MntMeatProducts3
1213061   +          +    -0.01479035508855 * GRP_MntMeatProducts4
1213062   +          +    -0.30090319249134 * GRP_MntWines2  +    -0.22956799988205 *
1213063   +        GRP_MntWines3  +      0.2174634765863 * GRP_MntWines4
1213064   +          +     0.59798838520377 * GRP_NumCatalogPurchases3
1213065   +          +     0.18459646376075 * GRP_NumCatalogPurchases4
1213066   +          +     0.68686707296889 * GRP_NumDistPurchases2
1213067   +          +     0.01763602172593 * GRP_NumDistPurchases3
1213068   +          +    -0.18269797362148 * GRP_NumDistPurchases4
1213069   +          +     0.60927764745536 * GRP_NumWebPurchases2
1213070   +          +     0.13479979954708 * GRP_NumWebPurchases3
1213071   +          +    -0.08022145941408 * GRP_NumWebPurchases4
1213072   +          +     0.31971573913723 * GRP_RFMstat2  +     0.14998276665028 *
1213073   +        GRP_RFMstat3  +    -0.35264122886189 * GRP_RFMstat4
1213074   +          +     0.73614679989894 * GRP_RMntFrq2  +     0.68193669255848 *
1213075   +        GRP_RMntFrq3  +     1.12908709575784 * GRP_RMntFrq4
1213076   +          +    -0.34988546752368 * GRP_Recency2  +    -0.09861529398333 *
1213077   +        GRP_Recency3  +     0.03043927813491 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.30243585989963 * GRP_AcceptedCmp52 + -1.01247574867977 * 
GRP_Frq2 + -0.20269284301089 * GRP_Frq3 + 0.13795348170285 * GRP_Frq4 + 0.01460946974261 * 
GRP_Income2 + 0.07493432056114 * GRP_Income3 + 0.02989162785893 * GRP_Income4 + 
-0.02386105013807 * GRP_Mnt2 + -0.41942836136152 * GRP_Mnt3 + 0.22813965454599 * GRP_Mnt4 + 
-0.02248365969183 * GRP_MntFishProducts2 + -0.17213374102896 * GRP_MntFishProducts3 + 
-0.03630204919594 * GRP_MntFishProducts4 + -0.05460186275698 * GRP_MntGoldProds2 + 
0.17440895359267 * GRP_MntGoldProds3 + 0.06276226158536 * GRP_MntGoldProds4 + 0.24913658683735 
* GRP_MntMeatProducts2 + 0.34153298373719 * GRP_MntMeatProducts3 + -0.01479035508855 * 
GRP_MntMeatProducts4 + -0.30090319249134 * GRP_MntWines2 + -0.22956799988205 * GRP_MntWines3 + 
0.2174634765863 * GRP_MntWines4 + 0.59798838520377 * GRP_NumCatalogPurchases3 + 
0.18459646376075 * GRP_NumCatalogPurchases4 + 0.68686707296889 * GRP_NumDistPurchases2 + 
0.01763602172593 * GRP_NumDistPurchases3 + -0.18269797362148 * GRP_NumDistPurchases4 + 
0.60927764745536 * GRP_NumWebPurchases2 + 0.13479979954708 * GRP_NumWebPurchases3 + 
-0.08022145941408 * GRP_NumWebPurchases4 + 0.31971573913723 * GRP_RFMstat2 + 0.14998276665028 
* GRP_RFMstat3 + -0.35264122886189 * GRP_RFMstat4 + 0.73614679989894 * GRP_RMntFrq2 + 
0.68193669255848 * GRP_RMntFrq3 + 1.12908709575784 * GRP_RMntFrq4 + -0.34988546752368 * 
GRP_Recency2 + -0.09861529398333 * GRP_Recency3 + 0.03043927813491 * GRP_Recency4 ;
1213078   +   H12  = H12  +    -0.28470958349897 * GRP_AcceptedCmp52
1213079   +          +     0.38963626888759 * GRP_Frq2  +    -0.08631643702353 * GRP_Frq3
1213080   +          +    -0.10781175757073 * GRP_Frq4  +     0.52838454887758 *
1213081   +        GRP_Income2  +     0.49811285398937 * GRP_Income3
1213082   +          +    -0.52344032334308 * GRP_Income4  +    -0.16102798071085 *
1213083   +        GRP_Mnt2  +    -0.59987497547696 * GRP_Mnt3  +     0.30977299182247 *
1213084   +        GRP_Mnt4  +     0.31161547120638 * GRP_MntFishProducts2
1213085   +          +    -0.13904940340926 * GRP_MntFishProducts3
1213086   +          +     -0.0238384717361 * GRP_MntFishProducts4
1213087   +          +    -0.07342882109089 * GRP_MntGoldProds2
1213088   +          +     0.06209137082418 * GRP_MntGoldProds3
1213089   +          +    -0.01682894618174 * GRP_MntGoldProds4
1213090   +          +    -0.70514696594831 * GRP_MntMeatProducts2
1213091   +          +     0.30494479189325 * GRP_MntMeatProducts3
1213092   +          +     0.16724961510362 * GRP_MntMeatProducts4
1213093   +          +     0.47753590354486 * GRP_MntWines2  +     -0.0475037304462 *
1213094   +        GRP_MntWines3  +    -0.15194191043511 * GRP_MntWines4
1213095   +          +    -0.02600524471339 * GRP_NumCatalogPurchases3
1213096   +          +     0.04676493824202 * GRP_NumCatalogPurchases4
1213097   +          +    -0.87566302467834 * GRP_NumDistPurchases2
1213098   +          +     0.14216206915436 * GRP_NumDistPurchases3
1213099   +          +      0.0473423363943 * GRP_NumDistPurchases4
1213100   +          +     0.48704677587339 * GRP_NumWebPurchases2
1213101   +          +     0.05866537558911 * GRP_NumWebPurchases3
1213102   +          +    -0.12537289794862 * GRP_NumWebPurchases4
1213103   +          +    -0.44186169476572 * GRP_RFMstat2  +     0.40940999072989 *
1213104   +        GRP_RFMstat3  +    -0.12217840922636 * GRP_RFMstat4
1213105   +          +     0.67040692062491 * GRP_RMntFrq2  +     0.18389631151947 *
1213106   +        GRP_RMntFrq3  +    -0.08386771645702 * GRP_RMntFrq4
1213107   +          +     0.55720904594774 * GRP_Recency2  +     0.12496105124544 *
1213108   +        GRP_Recency3  +    -0.23658499274155 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.28470958349897 * GRP_AcceptedCmp52 + 0.38963626888759 * 
GRP_Frq2 + -0.08631643702353 * GRP_Frq3 + -0.10781175757073 * GRP_Frq4 + 0.52838454887758 * 
GRP_Income2 + 0.49811285398937 * GRP_Income3 + -0.52344032334308 * GRP_Income4 + 
-0.16102798071085 * GRP_Mnt2 + -0.59987497547696 * GRP_Mnt3 + 0.30977299182247 * GRP_Mnt4 + 
0.31161547120638 * GRP_MntFishProducts2 + -0.13904940340926 * GRP_MntFishProducts3 + 
-0.0238384717361 * GRP_MntFishProducts4 + -0.07342882109089 * GRP_MntGoldProds2 + 
0.06209137082418 * GRP_MntGoldProds3 + -0.01682894618174 * GRP_MntGoldProds4 + 
-0.70514696594831 * GRP_MntMeatProducts2 + 0.30494479189325 * GRP_MntMeatProducts3 + 
0.16724961510362 * GRP_MntMeatProducts4 + 0.47753590354486 * GRP_MntWines2 + -0.0475037304462 
* GRP_MntWines3 + -0.15194191043511 * GRP_MntWines4 + -0.02600524471339 * 
GRP_NumCatalogPurchases3 + 0.04676493824202 * GRP_NumCatalogPurchases4 + -0.87566302467834 * 
GRP_NumDistPurchases2 + 0.14216206915436 * GRP_NumDistPurchases3 + 0.0473423363943 * 
GRP_NumDistPurchases4 + 0.48704677587339 * GRP_NumWebPurchases2 + 0.05866537558911 * 
GRP_NumWebPurchases3 + -0.12537289794862 * GRP_NumWebPurchases4 + -0.44186169476572 * 
GRP_RFMstat2 + 0.40940999072989 * GRP_RFMstat3 + -0.12217840922636 * GRP_RFMstat4 + 
0.67040692062491 * GRP_RMntFrq2 + 0.18389631151947 * GRP_RMntFrq3 + -0.08386771645702 * 
GRP_RMntFrq4 + 0.55720904594774 * GRP_Recency2 + 0.12496105124544 * GRP_Recency3 + 
-0.23658499274155 * GRP_Recency4 ;
1213109   +   H11  =    -0.50260831929377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.50260831929377 + H11 ;
1213110   +   H12  =     0.67324662853602 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.67324662853602 + H12 ;
1213111   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1213112   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1213113   +END;
MPRINT(EM_DIAGRAM):   END;
1213114   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213115   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1213116   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1213117   +END;
MPRINT(EM_DIAGRAM):   END;
1213118   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213119   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1213120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213121   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1213122   +   P_DepVar1  =    -2.91374311447337 * H11  +      3.9462028641342 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.91374311447337 * H11 + 3.9462028641342 * H12 ;
1213123   +   P_DepVar1  =    -3.48795847558643 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.48795847558643 + P_DepVar1 ;
1213124   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1213125   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1213126   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1213127   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1213128   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1213129   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1213130   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1213131   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1213132   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1213133   +END;
MPRINT(EM_DIAGRAM):   END;
1213134   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1213135   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1213136   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1213137   +END;
MPRINT(EM_DIAGRAM):   END;
1213138   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1213139   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1213140   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1213141   +END;
MPRINT(EM_DIAGRAM):   END;
1213142   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213143   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1213144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1213145   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1213146   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1213147   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1213148   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1213149   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1213150   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1213151   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1213152   +END;
MPRINT(EM_DIAGRAM):   END;
1213153   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213154   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1213155   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1213156   +drop
1213157   +H11
1213158   +H12
1213159   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1213160   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1213161    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1213162    quit;
1213163    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1213164    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1213165    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1213166    retain ID 2 Node "Neural19";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural19";
1213167    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1213168    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1566 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1566 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213169    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1213170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1566 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1566 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213172    proc sort data=EMWS8.Neural19_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural19_variableset out=_temp2(keep=NAME CREATOR);
1213173    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213174    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL19_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213175    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213176    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1213177    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1213178    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213179    proc contents data=EMWS8.Neural19_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural19_train out=_meta(keep=NAME) noprint;
1213180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.16 seconds
      cpu time            0.01 seconds
      

1213181    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1213182    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213183    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213184    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213185    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1213186    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213187    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213188    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1213189    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1213189  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 835 rows and 5 columns.

1213190    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213191    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1213192    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 835 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 835 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213193    filename _pref
1213193  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1213194    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1213195    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1213196   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1213197   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1213198   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1213199   +
1213200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213201   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1213202   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213203   +LABEL GRP_AcceptedCmp5 =
1213204   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1213205   +
1213206   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1213207   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1213208   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1213209   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1213210   +end;
MPRINT(EM_DIAGRAM):   end;
1213211   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1213212   +if (_UFORMAT eq '0'
1213213   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1213214   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1213215   +end;
MPRINT(EM_DIAGRAM):   end;
1213216   +else
1213217   +if (_UFORMAT eq '1'
1213218   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1213219   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1213220   +end;
MPRINT(EM_DIAGRAM):   end;
1213221   +else do;
MPRINT(EM_DIAGRAM):   else do;
1213222   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1213223   +end;
MPRINT(EM_DIAGRAM):   end;
1213224   +end;
MPRINT(EM_DIAGRAM):   end;
1213225   +
1213226   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213227   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1213228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213229   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1213230   +
1213231   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1213232   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1213233   +end;
MPRINT(EM_DIAGRAM):   end;
1213234   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1213235   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1213236   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1213237   +end;
MPRINT(EM_DIAGRAM):   end;
1213238   +else
1213239   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1213240   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1213241   +end;
MPRINT(EM_DIAGRAM):   end;
1213242   +else
1213243   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1213244   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1213245   +end;
MPRINT(EM_DIAGRAM):   end;
1213246   +else
1213247   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1213248   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1213249   +end;
MPRINT(EM_DIAGRAM):   end;
1213250   +end;
MPRINT(EM_DIAGRAM):   end;
1213251   +
1213252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213253   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1213254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213255   +LABEL GRP_Income =
1213256   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1213257   +
1213258   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1213259   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1213260   +end;
MPRINT(EM_DIAGRAM):   end;
1213261   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1213262   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1213263   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1213264   +end;
MPRINT(EM_DIAGRAM):   end;
1213265   +else
1213266   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1213267   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1213268   +end;
MPRINT(EM_DIAGRAM):   end;
1213269   +else
1213270   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1213271   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1213272   +end;
MPRINT(EM_DIAGRAM):   end;
1213273   +else
1213274   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1213275   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1213276   +end;
MPRINT(EM_DIAGRAM):   end;
1213277   +end;
MPRINT(EM_DIAGRAM):   end;
1213278   +
1213279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213280   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1213281   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213282   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1213283   +
1213284   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1213285   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1213286   +end;
MPRINT(EM_DIAGRAM):   end;
1213287   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1213288   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1213289   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1213290   +end;
MPRINT(EM_DIAGRAM):   end;
1213291   +else
1213292   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1213293   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1213294   +end;
MPRINT(EM_DIAGRAM):   end;
1213295   +else
1213296   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1213297   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1213298   +end;
MPRINT(EM_DIAGRAM):   end;
1213299   +else
1213300   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1213301   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1213302   +end;
MPRINT(EM_DIAGRAM):   end;
1213303   +end;
MPRINT(EM_DIAGRAM):   end;
1213304   +
1213305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213306   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1213307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213308   +LABEL GRP_MntFishProducts =
1213309   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1213310   +
1213311   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1213312   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1213313   +end;
MPRINT(EM_DIAGRAM):   end;
1213314   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1213315   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1213316   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1213317   +end;
MPRINT(EM_DIAGRAM):   end;
1213318   +else
1213319   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1213320   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1213321   +end;
MPRINT(EM_DIAGRAM):   end;
1213322   +else
1213323   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1213324   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1213325   +end;
MPRINT(EM_DIAGRAM):   end;
1213326   +else
1213327   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1213328   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1213329   +end;
MPRINT(EM_DIAGRAM):   end;
1213330   +end;
MPRINT(EM_DIAGRAM):   end;
1213331   +
1213332   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213333   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1213334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213335   +LABEL GRP_MntGoldProds =
1213336   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1213337   +
1213338   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1213339   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1213340   +end;
MPRINT(EM_DIAGRAM):   end;
1213341   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1213342   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1213343   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1213344   +end;
MPRINT(EM_DIAGRAM):   end;
1213345   +else
1213346   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1213347   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1213348   +end;
MPRINT(EM_DIAGRAM):   end;
1213349   +else
1213350   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1213351   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1213352   +end;
MPRINT(EM_DIAGRAM):   end;
1213353   +else
1213354   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1213355   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1213356   +end;
MPRINT(EM_DIAGRAM):   end;
1213357   +end;
MPRINT(EM_DIAGRAM):   end;
1213358   +
1213359   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213360   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1213361   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213362   +LABEL GRP_MntMeatProducts =
1213363   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1213364   +
1213365   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1213366   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1213367   +end;
MPRINT(EM_DIAGRAM):   end;
1213368   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1213369   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1213370   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1213371   +end;
MPRINT(EM_DIAGRAM):   end;
1213372   +else
1213373   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1213374   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1213375   +end;
MPRINT(EM_DIAGRAM):   end;
1213376   +else
1213377   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1213378   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1213379   +end;
MPRINT(EM_DIAGRAM):   end;
1213380   +else
1213381   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1213382   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1213383   +end;
MPRINT(EM_DIAGRAM):   end;
1213384   +end;
MPRINT(EM_DIAGRAM):   end;
1213385   +
1213386   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213387   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1213388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213389   +LABEL GRP_MntWines =
1213390   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1213391   +
1213392   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1213393   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1213394   +end;
MPRINT(EM_DIAGRAM):   end;
1213395   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1213396   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1213397   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1213398   +end;
MPRINT(EM_DIAGRAM):   end;
1213399   +else
1213400   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1213401   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1213402   +end;
MPRINT(EM_DIAGRAM):   end;
1213403   +else
1213404   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1213405   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1213406   +end;
MPRINT(EM_DIAGRAM):   end;
1213407   +else
1213408   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1213409   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1213410   +end;
MPRINT(EM_DIAGRAM):   end;
1213411   +end;
MPRINT(EM_DIAGRAM):   end;
1213412   +
1213413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213414   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1213415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213416   +LABEL GRP_NumCatalogPurchases =
1213417   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1213418   +
1213419   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1213420   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1213421   +end;
MPRINT(EM_DIAGRAM):   end;
1213422   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1213423   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1213424   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1213425   +end;
MPRINT(EM_DIAGRAM):   end;
1213426   +else
1213427   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1213428   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1213429   +end;
MPRINT(EM_DIAGRAM):   end;
1213430   +else
1213431   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1213432   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1213433   +end;
MPRINT(EM_DIAGRAM):   end;
1213434   +else
1213435   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1213436   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1213437   +end;
MPRINT(EM_DIAGRAM):   end;
1213438   +end;
MPRINT(EM_DIAGRAM):   end;
1213439   +
1213440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213441   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1213442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213443   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1213444   +
1213445   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1213446   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1213447   +end;
MPRINT(EM_DIAGRAM):   end;
1213448   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1213449   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1213450   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1213451   +end;
MPRINT(EM_DIAGRAM):   end;
1213452   +else
1213453   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1213454   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1213455   +end;
MPRINT(EM_DIAGRAM):   end;
1213456   +else
1213457   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1213458   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1213459   +end;
MPRINT(EM_DIAGRAM):   end;
1213460   +else
1213461   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1213462   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1213463   +end;
MPRINT(EM_DIAGRAM):   end;
1213464   +end;
MPRINT(EM_DIAGRAM):   end;
1213465   +
1213466   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213467   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1213468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213469   +LABEL GRP_NumWebPurchases =
1213470   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1213471   +
1213472   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1213473   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1213474   +end;
MPRINT(EM_DIAGRAM):   end;
1213475   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1213476   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1213477   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1213478   +end;
MPRINT(EM_DIAGRAM):   end;
1213479   +else
1213480   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1213481   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1213482   +end;
MPRINT(EM_DIAGRAM):   end;
1213483   +else
1213484   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1213485   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1213486   +end;
MPRINT(EM_DIAGRAM):   end;
1213487   +else
1213488   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1213489   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1213490   +end;
MPRINT(EM_DIAGRAM):   end;
1213491   +end;
MPRINT(EM_DIAGRAM):   end;
1213492   +
1213493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213494   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1213495   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213496   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1213497   +
1213498   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1213499   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1213500   +end;
MPRINT(EM_DIAGRAM):   end;
1213501   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1213502   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1213503   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1213504   +end;
MPRINT(EM_DIAGRAM):   end;
1213505   +else
1213506   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1213507   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1213508   +end;
MPRINT(EM_DIAGRAM):   end;
1213509   +else
1213510   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1213511   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1213512   +end;
MPRINT(EM_DIAGRAM):   end;
1213513   +else
1213514   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1213515   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1213516   +end;
MPRINT(EM_DIAGRAM):   end;
1213517   +end;
MPRINT(EM_DIAGRAM):   end;
1213518   +
1213519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213520   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1213521   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213522   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1213523   +
1213524   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1213525   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1213526   +end;
MPRINT(EM_DIAGRAM):   end;
1213527   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1213528   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1213529   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1213530   +end;
MPRINT(EM_DIAGRAM):   end;
1213531   +else
1213532   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1213533   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1213534   +end;
MPRINT(EM_DIAGRAM):   end;
1213535   +else
1213536   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1213537   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1213538   +end;
MPRINT(EM_DIAGRAM):   end;
1213539   +else
1213540   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1213541   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1213542   +end;
MPRINT(EM_DIAGRAM):   end;
1213543   +end;
MPRINT(EM_DIAGRAM):   end;
1213544   +
1213545   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213546   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1213547   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213548   +LABEL GRP_Recency =
1213549   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1213550   +
1213551   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1213552   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1213553   +end;
MPRINT(EM_DIAGRAM):   end;
1213554   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1213555   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1213556   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1213557   +end;
MPRINT(EM_DIAGRAM):   end;
1213558   +else
1213559   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1213560   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1213561   +end;
MPRINT(EM_DIAGRAM):   end;
1213562   +else
1213563   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1213564   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1213565   +end;
MPRINT(EM_DIAGRAM):   end;
1213566   +else
1213567   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1213568   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1213569   +end;
MPRINT(EM_DIAGRAM):   end;
1213570   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1213571    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1213572    quit;
1213573    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1213574    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1213575    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1213576    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1213577    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1213578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213579    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1213580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213582    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1213583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213586    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1213587    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1213588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213589    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1213590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1213591    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1213592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213594    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213595    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1213596    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213597    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213598    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1213599    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1213599  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1213600    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213601    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1213602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 850 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213603    filename _pref
1213603  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1213604    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1213605    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1213606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213607   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1213608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1213609   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1213610   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1213611   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1213612    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1213613    quit;
1213614    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1213615    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1213616    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1213617    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1213618    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1213619    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213620    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1213621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213623    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1213624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213625    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213627    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1213628    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1213629    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213630    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1213631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1213632    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1213633    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213635    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213636    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1213637    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213638    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213639    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1213640    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1213640  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1213641    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213642    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1213643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 854 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213644    filename _pref
1213644  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1213645    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1213646    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1213647   +
1213648   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1213649   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1213649  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1213650   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1213651   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1213652   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1213653   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1213654   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1213655    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1213656    quit;
1213657    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1213658    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1213659    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1213660    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1213661    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1213662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213663    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1213664    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213665    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213666    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1213667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213668    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213669    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213670    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1213671    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1213672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213673    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1213674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213675    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1213676    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213677    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213678    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213679    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1213680    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213681    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213682    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1213683    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1213683  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1213684    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213685    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1213686    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 893 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213687    filename _pref
1213687  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1213688    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1213689    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1213690   +
1213691   +
1213692   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1213693   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1213694   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1213695   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1213696   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1213697   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213698   +
1213699   +
1213700   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1213701   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1213702   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1213703   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1213704   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1213705   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213706   +
1213707   +
1213708   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1213709   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1213710   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1213711   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1213712   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1213713   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213714   +
1213715   +
1213716   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1213717   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1213718   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1213719   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1213720   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1213721   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213722   +
1213723   +
1213724   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1213725   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1213726   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1213727   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1213728   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1213729   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213730   +
1213731   +
1213732   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1213733   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1213734   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1213735   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1213736   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1213737   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213738   +
1213739   +
1213740   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1213741   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1213742   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1213743   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1213744   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1213745   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213746   +
1213747   +
1213748   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1213749   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1213750   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1213751   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1213752   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1213753   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1213754   +if
1213755   +_FILTERNORM1 not in ( '.')
1213756   + and
1213757   +_FILTERNORM2 not in ( '.')
1213758   + and
1213759   +_FILTERNORM3 not in ( '.')
1213760   + and
1213761   +_FILTERNORM4 not in ( '.')
1213762   + and
1213763   +_FILTERNORM5 not in ( '.')
1213764   + and
1213765   +_FILTERNORM6 not in ( '.')
1213766   + and
1213767   +_FILTERNORM7 not in ( ' ')
1213768   + and
1213769   +_FILTERNORM8 not in ( ' ')
1213770   +and
1213771   +( Dt_Customer ne .)
1213772   +and ( Income ne . and (Income<=107000))
1213773   +and ( Kidhome ne .)
1213774   +and ( MntFishProducts ne .)
1213775   +and ( MntFruits ne .)
1213776   +and ( MntGoldProds ne .)
1213777   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1213778   +and ( MntSweetProducts ne .)
1213779   +and ( MntWines ne .)
1213780   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1213781   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1213782   +and ( NumStorePurchases ne .)
1213783   +and ( NumWebPurchases ne .)
1213784   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1213785   +and ( Recency ne .)
1213786   +and ( Teenhome ne .)
1213787   +and ( Year_Birth ne .)
1213788   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1213789   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1213790   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1213791   +end;
MPRINT(EM_DIAGRAM):   end;
1213792   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1213793   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1213794    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1213795    quit;
1213796    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1213797    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1213798    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1213799    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1213800    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1213801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213802    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1213803    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213804    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213805    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1213806    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213808    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213809    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1213810    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1213811    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213812    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1213813    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1213814    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1213815    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213816    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213817    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1213818    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1213819    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1213820    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213821    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1213822    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1213822  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1213823    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213824    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1213825    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 959 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1213826    %macro varDept(fcmpdata=,id=);
1213827    %global nobs&id scoreFlag&id;
1213828    %let scoreFlag&id = 0;
1213829    %if &id=1 or ^&fcmpStart %then %do;
1213830    proc sort data=&fcmpdata out=_temp&id nodupkey;
1213831    by NAME;
1213832    where id=&id and LHS in( %let j=1;
1213833    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1213834    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1213835    "&var" %let j = %eval(&j+1);
1213836    %end;
1213837    );
1213838    run;
1213839    %let dsid = %sysfunc(open(_temp&id));
1213840    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1213841    %let dsid = %sysfunc(close(&dsid));
1213842    %if &&nobs&id %then %do;
1213843    %let scoreFlag&id = 1;
1213844    %let fcmpStart = 1;
1213845    %end;
1213846    %else %let fcmpStart = 0;
1213847    %end;
1213848    %else %do;
1213849    proc sort data=&fcmpdata out=_tempid;
1213850    where id=&id;
1213851    by LHS;
1213852    run;
1213853    %let dsid = %sysfunc(open(_tempid));
1213854    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1213855    %let dsid = %sysfunc(close(&dsid));
1213856    %if ^&&nobs&id %then %do;
1213857    proc datasets lib=work nolist;
1213858    delete _tempid;
1213859    run;
1213860    quit;
1213861    %end;
1213862    %else %do;
1213863    data _tempAll;
1213864    set %let j=%eval(&id-1);
1213865    %do x=1 %to &j;
1213866    %if &&nobs&x %then %do;
1213867    _temp&x %end;
1213868    %end;
1213869    ;
1213870    run;
1213871    proc sql;
1213872    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1213872  ! work._tempid p2 where p.name=p2.lhs;
1213873    quit;
1213874    data _temp&id;
1213875    set _temp&id;
1213876    where LHS ne '' and NAME ne '' and Node ne '';
1213877    run;
1213878    proc datasets lib=work nolist;
1213879    delete _tempAll;
1213880    run;
1213881    %let dsid = %sysfunc(open(_temp&id));
1213882    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1213883    %let dsid = %sysfunc(close(&dsid));
1213884    %if ^&&nobs&id %then %do;
1213885    proc datasets lib=work nolist;
1213886    delete _temp&id;
1213887    run;
1213888    quit;
1213889    %end;
1213890    %else %do;
1213891    %let scoreFlag&id = 1;
1213892    data _temp&id;
1213893    set _temp&id;
1213894    where LHS ne NAME and node ne '';
1213895    run;
1213896    %let dsid = %sysfunc(open(_temp&id));
1213897    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1213898    %let dsid = %sysfunc(close(&dsid));
1213899    %if ^&&nobs&id %then %do;
1213900    proc datasets lib=work nolist;
1213901    delete _temp&id;
1213902    run;
1213903    quit;
1213904    %end;
1213905    %else %do;
1213906    proc sort data=_temp&id nodupkey;
1213907    by LHS NAME;
1213908    run;
1213909    %end;
1213910    %end;
1213911    %end;
1213912    %end;
1213913    %mend varDept;
1213914    %macro optCode(outdata=fcmpdata);
1213915    %global fcmpStart;
1213916    %let fcmpStart = 0;
1213917    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1213918    %let NumNodes=9;
1213919    %do k=1 %to &NumNodes;
1213920    %vardept(fcmpdata=&outdata, id=&k);
1213921    %end;
1213922    %mend optCode;
1213923    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1213924    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1213925    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1213926    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1213927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213928    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1213929    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1213930    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1213931    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213932    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1213933    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1213933  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1213934    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1213935    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1213936    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1213937    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213938    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1213939    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1213940    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1213941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213942    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1213943    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1213944    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1213945    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213946    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1213947    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1213947  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1213948    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1213949    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1213950    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1213951    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1213952    filename _pref
1213952  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas";
1213953    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1213954    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas.
1213955   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213956   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1213957   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1213958   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1213959   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1213960   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1213961   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1213962   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1213963   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1213964   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1213965   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1213966   +LENGTH _WARN_ $4
1213967   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1213968   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1213969   +
1213970   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1213971   +
1213972   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1213973   +
1213974   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1213975   +
1213976   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1213977   +
1213978   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1213979   +
1213980   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1213981   +
1213982   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1213983   +
1213984   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1213985   +
1213986   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1213987   +
1213988   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1213989   +
1213990   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1213991   +
1213992   +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
1213993   +
1213994   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1213995   +
1213996   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1213997   +
1213998   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1213999   +
1214000   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1214001   +
1214002   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1214003   +
1214004   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1214005   +
1214006   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1214007   +
1214008   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1214009   +
1214010   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1214011   +
1214012   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1214013   +
1214014   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1214015   +
1214016   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1214017   +
1214018   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1214019   +
1214020   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1214021   +
1214022   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1214023   +
1214024   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1214025   +
1214026   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1214027   +
1214028   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1214029   +
1214030   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1214031   +
1214032   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1214033   +
1214034   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1214035   +
1214036   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1214037   +
1214038   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1214039   +
1214040   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1214041   +
1214042   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1214043   +
1214044   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1214045   +
1214046   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1214047   +
1214048   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1214049   +
1214050   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1214051   +
1214052   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1214053   +
1214054   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1214055   +
1214056   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1214057   +
1214058   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1214059   +
1214060   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1214061   +
1214062   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1214063   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1214064   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1214065   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1214066   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214067   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214068   +end;
MPRINT(EM_DIAGRAM):   end;
1214069   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214070   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214071   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1214072   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214073   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1214074   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1214075   +   end;
MPRINT(EM_DIAGRAM):   end;
1214076   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1214077   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1214078   +   end;
MPRINT(EM_DIAGRAM):   end;
1214079   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214080   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1214081   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214082   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214083   +   end;
MPRINT(EM_DIAGRAM):   end;
1214084   +end;
MPRINT(EM_DIAGRAM):   end;
1214085   +
1214086   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1214087   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
1214088   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1214089   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1214090   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1214091   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1214092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214094   +end;
MPRINT(EM_DIAGRAM):   end;
1214095   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214096   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214097   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1214098   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214099   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1214100   +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1214101   +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1214102   +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1214103   +   end;
MPRINT(EM_DIAGRAM):   end;
1214104   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1214105   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1214106   +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1214107   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1214108   +   end;
MPRINT(EM_DIAGRAM):   end;
1214109   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214110   +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1214111   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1214112   +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1214113   +   end;
MPRINT(EM_DIAGRAM):   end;
1214114   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214115   +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1214116   +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1214117   +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1214118   +   end;
MPRINT(EM_DIAGRAM):   end;
1214119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214120   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1214121   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1214122   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1214123   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214124   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214125   +   end;
MPRINT(EM_DIAGRAM):   end;
1214126   +end;
MPRINT(EM_DIAGRAM):   end;
1214127   +
1214128   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1214129   +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
1214130   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1214131   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1214132   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1214133   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1214134   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214135   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214136   +end;
MPRINT(EM_DIAGRAM):   end;
1214137   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214138   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214139   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1214140   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214141   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1214142   +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1214143   +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1214144   +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1214145   +   end;
MPRINT(EM_DIAGRAM):   end;
1214146   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214147   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1214148   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1214149   +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1214150   +   end;
MPRINT(EM_DIAGRAM):   end;
1214151   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1214152   +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1214153   +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1214154   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1214155   +   end;
MPRINT(EM_DIAGRAM):   end;
1214156   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214157   +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1214158   +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1214159   +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1214160   +   end;
MPRINT(EM_DIAGRAM):   end;
1214161   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214162   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1214163   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1214164   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1214165   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214166   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214167   +   end;
MPRINT(EM_DIAGRAM):   end;
1214168   +end;
MPRINT(EM_DIAGRAM):   end;
1214169   +
1214170   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1214171   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
1214172   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1214173   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1214174   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1214175   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1214176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214178   +end;
MPRINT(EM_DIAGRAM):   end;
1214179   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214181   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1214182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214183   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214184   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1214185   +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1214186   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1214187   +   end;
MPRINT(EM_DIAGRAM):   end;
1214188   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214189   +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1214190   +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1214191   +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1214192   +   end;
MPRINT(EM_DIAGRAM):   end;
1214193   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214194   +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1214195   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1214196   +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1214197   +   end;
MPRINT(EM_DIAGRAM):   end;
1214198   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214199   +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1214200   +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1214201   +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1214202   +   end;
MPRINT(EM_DIAGRAM):   end;
1214203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214204   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1214205   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1214206   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1214207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214209   +   end;
MPRINT(EM_DIAGRAM):   end;
1214210   +end;
MPRINT(EM_DIAGRAM):   end;
1214211   +
1214212   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1214213   +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
1214214   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1214215   +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1214216   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1214217   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1214218   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214219   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214220   +end;
MPRINT(EM_DIAGRAM):   end;
1214221   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214222   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214223   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1214224   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214225   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214226   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1214227   +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1214228   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1214229   +   end;
MPRINT(EM_DIAGRAM):   end;
1214230   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214231   +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
1214232   +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1214233   +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1214234   +   end;
MPRINT(EM_DIAGRAM):   end;
1214235   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214236   +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
1214237   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1214238   +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1214239   +   end;
MPRINT(EM_DIAGRAM):   end;
1214240   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214241   +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
1214242   +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1214243   +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1214244   +   end;
MPRINT(EM_DIAGRAM):   end;
1214245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214246   +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
1214247   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1214248   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1214249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214251   +   end;
MPRINT(EM_DIAGRAM):   end;
1214252   +end;
MPRINT(EM_DIAGRAM):   end;
1214253   +
1214254   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1214255   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
1214256   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1214257   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1214258   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1214259   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1214260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214262   +end;
MPRINT(EM_DIAGRAM):   end;
1214263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214265   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1214266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214267   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214268   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1214269   +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1214270   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1214271   +   end;
MPRINT(EM_DIAGRAM):   end;
1214272   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214273   +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1214274   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1214275   +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1214276   +   end;
MPRINT(EM_DIAGRAM):   end;
1214277   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214278   +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1214279   +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1214280   +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1214281   +   end;
MPRINT(EM_DIAGRAM):   end;
1214282   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214283   +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1214284   +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1214285   +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1214286   +   end;
MPRINT(EM_DIAGRAM):   end;
1214287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214288   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1214289   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1214290   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1214291   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214292   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214293   +   end;
MPRINT(EM_DIAGRAM):   end;
1214294   +end;
MPRINT(EM_DIAGRAM):   end;
1214295   +
1214296   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1214297   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
1214298   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1214299   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1214300   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1214301   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1214302   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214303   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214304   +end;
MPRINT(EM_DIAGRAM):   end;
1214305   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214306   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214307   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1214308   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214309   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214310   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1214311   +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1214312   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1214313   +   end;
MPRINT(EM_DIAGRAM):   end;
1214314   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214315   +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1214316   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1214317   +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1214318   +   end;
MPRINT(EM_DIAGRAM):   end;
1214319   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214320   +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1214321   +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1214322   +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1214323   +   end;
MPRINT(EM_DIAGRAM):   end;
1214324   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214325   +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1214326   +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1214327   +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1214328   +   end;
MPRINT(EM_DIAGRAM):   end;
1214329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214330   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1214331   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1214332   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1214333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214335   +   end;
MPRINT(EM_DIAGRAM):   end;
1214336   +end;
MPRINT(EM_DIAGRAM):   end;
1214337   +
1214338   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1214339   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
1214340   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1214341   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1214342   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1214343   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1214344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214346   +end;
MPRINT(EM_DIAGRAM):   end;
1214347   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214349   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1214350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214351   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214352   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1214353   +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1214354   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1214355   +   end;
MPRINT(EM_DIAGRAM):   end;
1214356   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214357   +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1214358   +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1214359   +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1214360   +   end;
MPRINT(EM_DIAGRAM):   end;
1214361   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214362   +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1214363   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1214364   +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1214365   +   end;
MPRINT(EM_DIAGRAM):   end;
1214366   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214367   +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1214368   +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1214369   +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1214370   +   end;
MPRINT(EM_DIAGRAM):   end;
1214371   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214372   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1214373   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1214374   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1214375   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214376   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214377   +   end;
MPRINT(EM_DIAGRAM):   end;
1214378   +end;
MPRINT(EM_DIAGRAM):   end;
1214379   +
1214380   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1214381   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
1214382   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1214383   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1214384   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1214385   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214386   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214387   +end;
MPRINT(EM_DIAGRAM):   end;
1214388   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214389   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214390   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1214391   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214392   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214393   +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1214394   +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1214395   +   end;
MPRINT(EM_DIAGRAM):   end;
1214396   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214397   +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1214398   +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1214399   +   end;
MPRINT(EM_DIAGRAM):   end;
1214400   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214401   +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1214402   +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1214403   +   end;
MPRINT(EM_DIAGRAM):   end;
1214404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214405   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1214406   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1214407   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214408   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214409   +   end;
MPRINT(EM_DIAGRAM):   end;
1214410   +end;
MPRINT(EM_DIAGRAM):   end;
1214411   +
1214412   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1214413   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
1214414   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1214415   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1214416   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1214417   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1214418   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214419   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214420   +end;
MPRINT(EM_DIAGRAM):   end;
1214421   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214422   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214423   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1214424   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214425   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1214426   +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1214427   +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1214428   +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1214429   +   end;
MPRINT(EM_DIAGRAM):   end;
1214430   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214431   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1214432   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1214433   +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1214434   +   end;
MPRINT(EM_DIAGRAM):   end;
1214435   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214436   +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1214437   +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1214438   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1214439   +   end;
MPRINT(EM_DIAGRAM):   end;
1214440   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1214441   +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1214442   +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1214443   +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1214444   +   end;
MPRINT(EM_DIAGRAM):   end;
1214445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214446   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1214447   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1214448   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1214449   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214450   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214451   +   end;
MPRINT(EM_DIAGRAM):   end;
1214452   +end;
MPRINT(EM_DIAGRAM):   end;
1214453   +
1214454   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1214455   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
1214456   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1214457   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1214458   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1214459   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1214460   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214461   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214462   +end;
MPRINT(EM_DIAGRAM):   end;
1214463   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214464   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214465   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1214466   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214467   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214468   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1214469   +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1214470   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1214471   +   end;
MPRINT(EM_DIAGRAM):   end;
1214472   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214473   +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1214474   +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1214475   +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1214476   +   end;
MPRINT(EM_DIAGRAM):   end;
1214477   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214478   +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1214479   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1214480   +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1214481   +   end;
MPRINT(EM_DIAGRAM):   end;
1214482   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214483   +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1214484   +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1214485   +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1214486   +   end;
MPRINT(EM_DIAGRAM):   end;
1214487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214488   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1214489   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1214490   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1214491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214493   +   end;
MPRINT(EM_DIAGRAM):   end;
1214494   +end;
MPRINT(EM_DIAGRAM):   end;
1214495   +
1214496   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1214497   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
1214498   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1214499   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1214500   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1214501   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1214502   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214503   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214504   +end;
MPRINT(EM_DIAGRAM):   end;
1214505   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214506   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214507   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1214508   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214509   +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1214510   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1214511   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1214512   +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1214513   +   end;
MPRINT(EM_DIAGRAM):   end;
1214514   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1214515   +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1214516   +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1214517   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1214518   +   end;
MPRINT(EM_DIAGRAM):   end;
1214519   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214520   +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1214521   +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1214522   +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1214523   +   end;
MPRINT(EM_DIAGRAM):   end;
1214524   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214525   +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1214526   +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1214527   +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1214528   +   end;
MPRINT(EM_DIAGRAM):   end;
1214529   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214530   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1214531   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1214532   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1214533   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214534   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214535   +   end;
MPRINT(EM_DIAGRAM):   end;
1214536   +end;
MPRINT(EM_DIAGRAM):   end;
1214537   +
1214538   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1214539   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
1214540   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1214541   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1214542   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1214543   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1214544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214546   +end;
MPRINT(EM_DIAGRAM):   end;
1214547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214549   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1214550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214551   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1214552   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1214553   +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1214554   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1214555   +   end;
MPRINT(EM_DIAGRAM):   end;
1214556   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1214557   +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1214558   +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1214559   +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1214560   +   end;
MPRINT(EM_DIAGRAM):   end;
1214561   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214562   +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1214563   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1214564   +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1214565   +   end;
MPRINT(EM_DIAGRAM):   end;
1214566   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214567   +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1214568   +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1214569   +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1214570   +   end;
MPRINT(EM_DIAGRAM):   end;
1214571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214572   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1214573   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1214574   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1214575   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214576   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214577   +   end;
MPRINT(EM_DIAGRAM):   end;
1214578   +end;
MPRINT(EM_DIAGRAM):   end;
1214579   +
1214580   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1214581   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
1214582   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1214583   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1214584   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1214585   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1214586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1214587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214588   +end;
MPRINT(EM_DIAGRAM):   end;
1214589   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214590   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1214591   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1214592   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1214593   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1214594   +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1214595   +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1214596   +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1214597   +   end;
MPRINT(EM_DIAGRAM):   end;
1214598   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1214599   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1214600   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1214601   +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1214602   +   end;
MPRINT(EM_DIAGRAM):   end;
1214603   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1214604   +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1214605   +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1214606   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1214607   +   end;
MPRINT(EM_DIAGRAM):   end;
1214608   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1214609   +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1214610   +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1214611   +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1214612   +   end;
MPRINT(EM_DIAGRAM):   end;
1214613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1214614   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1214615   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1214616   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1214617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1214618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214619   +   end;
MPRINT(EM_DIAGRAM):   end;
1214620   +end;
MPRINT(EM_DIAGRAM):   end;
1214621   +
1214622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214623   +*** Checking missing input Interval
1214624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1214625   +
1214626   +IF NMISS(
1214627   +   Mnt ,
1214628   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Mnt , Year_Birth ) THEN DO;
1214629   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1214630   +
1214631   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1214632   +END;
MPRINT(EM_DIAGRAM):   END;
1214633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214634   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1214635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214636   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214637   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1214638   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1214639   +END;
MPRINT(EM_DIAGRAM):   END;
1214640   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214641   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1214642   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1214643   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1214644   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1214645   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1214646   +END;
MPRINT(EM_DIAGRAM):   END;
1214647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214648   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1214649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214651   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1214652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214653   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214654   +   H11  =     0.07033495600492 * S_Mnt  +     0.02164786854075 * S_Year_Birth
1214655   +         ;
MPRINT(EM_DIAGRAM):   H11 = 0.07033495600492 * S_Mnt + 0.02164786854075 * S_Year_Birth ;
1214656   +   H11  = H11  +    -0.10246097495354 * GRP_AcceptedCmp52
1214657   +          +     0.24244790942008 * GRP_Frq2  +     0.02736490750924 * GRP_Frq3
1214658   +          +    -0.08972331943492 * GRP_Frq4  +      0.1088530259243 *
1214659   +        GRP_Income2  +     0.09756933974602 * GRP_Income3
1214660   +          +    -0.09969018293336 * GRP_Income4  +    -0.06022480886765 *
1214661   +        GRP_Mnt2  +    -0.03168516551801 * GRP_Mnt3  +     0.04222393413812 *
1214662   +        GRP_Mnt4  +     0.07987508803614 * GRP_MntFishProducts2
1214663   +          +     0.01034663934303 * GRP_MntFishProducts3
1214664   +          +    -0.00714052297881 * GRP_MntFishProducts4
1214665   +          +    -0.02224640901679 * GRP_MntGoldProds2
1214666   +          +    -0.00265157957353 * GRP_MntGoldProds3
1214667   +          +    -0.00077327174112 * GRP_MntGoldProds4
1214668   +          +    -0.14203645561503 * GRP_MntMeatProducts2
1214669   +          +    -0.01847520501128 * GRP_MntMeatProducts3
1214670   +          +     0.06241020545872 * GRP_MntMeatProducts4
1214671   +          +     0.12910081222261 * GRP_MntWines2  +     0.06374366211645 *
1214672   +        GRP_MntWines3  +    -0.06493693135008 * GRP_MntWines4
1214673   +          +    -0.10868042409647 * GRP_NumCatalogPurchases3
1214674   +          +     0.00306280182711 * GRP_NumCatalogPurchases4
1214675   +          +    -0.28364554981817 * GRP_NumDistPurchases2
1214676   +          +     0.00271105491408 * GRP_NumDistPurchases3
1214677   +          +      0.0545061287852 * GRP_NumDistPurchases4
1214678   +          +     0.01855092975131 * GRP_NumWebPurchases2
1214679   +          +     0.01079548631549 * GRP_NumWebPurchases3
1214680   +          +     -0.0040833175266 * GRP_NumWebPurchases4
1214681   +          +    -0.06430035739854 * GRP_RFMstat2  +      -0.006946906998 *
1214682   +        GRP_RFMstat3  +     0.02582227224216 * GRP_RFMstat4
1214683   +          +     0.06075412415465 * GRP_RMntFrq2  +     0.04002497865657 *
1214684   +        GRP_RMntFrq3  +    -0.08061728248352 * GRP_RMntFrq4
1214685   +          +     0.19668753813344 * GRP_Recency2  +     0.05087802922807 *
1214686   +        GRP_Recency3  +    -0.06072698122489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10246097495354 * GRP_AcceptedCmp52 + 0.24244790942008 * 
GRP_Frq2 + 0.02736490750924 * GRP_Frq3 + -0.08972331943492 * GRP_Frq4 + 0.1088530259243 * 
GRP_Income2 + 0.09756933974602 * GRP_Income3 + -0.09969018293336 * GRP_Income4 + 
-0.06022480886765 * GRP_Mnt2 + -0.03168516551801 * GRP_Mnt3 + 0.04222393413812 * GRP_Mnt4 + 
0.07987508803614 * GRP_MntFishProducts2 + 0.01034663934303 * GRP_MntFishProducts3 + 
-0.00714052297881 * GRP_MntFishProducts4 + -0.02224640901679 * GRP_MntGoldProds2 + 
-0.00265157957353 * GRP_MntGoldProds3 + -0.00077327174112 * GRP_MntGoldProds4 + 
-0.14203645561503 * GRP_MntMeatProducts2 + -0.01847520501128 * GRP_MntMeatProducts3 + 
0.06241020545872 * GRP_MntMeatProducts4 + 0.12910081222261 * GRP_MntWines2 + 0.06374366211645 
* GRP_MntWines3 + -0.06493693135008 * GRP_MntWines4 + -0.10868042409647 * 
GRP_NumCatalogPurchases3 + 0.00306280182711 * GRP_NumCatalogPurchases4 + -0.28364554981817 * 
GRP_NumDistPurchases2 + 0.00271105491408 * GRP_NumDistPurchases3 + 0.0545061287852 * 
GRP_NumDistPurchases4 + 0.01855092975131 * GRP_NumWebPurchases2 + 0.01079548631549 * 
GRP_NumWebPurchases3 + -0.0040833175266 * GRP_NumWebPurchases4 + -0.06430035739854 * 
GRP_RFMstat2 + -0.006946906998 * GRP_RFMstat3 + 0.02582227224216 * GRP_RFMstat4 + 
0.06075412415465 * GRP_RMntFrq2 + 0.04002497865657 * GRP_RMntFrq3 + -0.08061728248352 * 
GRP_RMntFrq4 + 0.19668753813344 * GRP_Recency2 + 0.05087802922807 * GRP_Recency3 + 
-0.06072698122489 * GRP_Recency4 ;
1214687   +   H11  =     0.08129760919972 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.08129760919972 + H11 ;
1214688   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1214689   +END;
MPRINT(EM_DIAGRAM):   END;
1214690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214691   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1214692   +END;
MPRINT(EM_DIAGRAM):   END;
1214693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214694   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1214695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1214697   +   P_DepVar1  =     9.69301848740588 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 9.69301848740588 * H11 ;
1214698   +   P_DepVar1  =    -2.63860368150698 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.63860368150698 + P_DepVar1 ;
1214699   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1214700   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1214701   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1214702   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1214703   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1214704   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1214705   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1214706   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1214707   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1214708   +END;
MPRINT(EM_DIAGRAM):   END;
1214709   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1214710   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1214711   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1214712   +END;
MPRINT(EM_DIAGRAM):   END;
1214713   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1214714   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1214715   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1214716   +END;
MPRINT(EM_DIAGRAM):   END;
1214717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214718   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1214719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1214720   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1214721   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1214722   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1214723   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1214724   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1214725   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1214726   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1214727   +END;
MPRINT(EM_DIAGRAM):   END;
1214728   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214729   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1214730   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1214731   +drop
1214732   +H11
1214733   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1214734   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1214735    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1214736    quit;
1214737    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1214738    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1214739    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1214740    retain ID 2 Node "Neural5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural5";
1214741    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1214742    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1473 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1473 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1214743    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1214744    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1214745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1473 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1473 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1214746    proc sort data=EMWS8.Neural5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural5_variableset out=_temp2(keep=NAME CREATOR);
1214747    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1214748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.NEURAL5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1214749    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1214750    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1214751    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1214752    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1214753    proc contents data=EMWS8.Neural5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural5_train out=_meta(keep=NAME) noprint;
1214754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1214755    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1214756    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1214757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1214758    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1214759    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1214760    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1214761    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1214762    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1214763    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1214763  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 836 rows and 5 columns.

1214764    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1214765    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1214766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 836 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1214767    filename _pref
1214767  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1214768    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1214769    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1214770   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1214771   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1214772   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1214773   +
1214774   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214775   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1214776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214777   +LABEL GRP_AcceptedCmp5 =
1214778   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1214779   +
1214780   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1214781   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1214782   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1214783   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1214784   +end;
MPRINT(EM_DIAGRAM):   end;
1214785   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1214786   +if (_UFORMAT eq '0'
1214787   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1214788   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1214789   +end;
MPRINT(EM_DIAGRAM):   end;
1214790   +else
1214791   +if (_UFORMAT eq '1'
1214792   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1214793   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1214794   +end;
MPRINT(EM_DIAGRAM):   end;
1214795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1214796   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1214797   +end;
MPRINT(EM_DIAGRAM):   end;
1214798   +end;
MPRINT(EM_DIAGRAM):   end;
1214799   +
1214800   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214801   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1214802   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214803   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1214804   +
1214805   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1214806   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1214807   +end;
MPRINT(EM_DIAGRAM):   end;
1214808   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1214809   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1214810   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1214811   +end;
MPRINT(EM_DIAGRAM):   end;
1214812   +else
1214813   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1214814   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1214815   +end;
MPRINT(EM_DIAGRAM):   end;
1214816   +else
1214817   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1214818   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1214819   +end;
MPRINT(EM_DIAGRAM):   end;
1214820   +else
1214821   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1214822   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1214823   +end;
MPRINT(EM_DIAGRAM):   end;
1214824   +end;
MPRINT(EM_DIAGRAM):   end;
1214825   +
1214826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214827   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1214828   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214829   +LABEL GRP_Income =
1214830   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1214831   +
1214832   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1214833   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1214834   +end;
MPRINT(EM_DIAGRAM):   end;
1214835   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1214836   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1214837   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1214838   +end;
MPRINT(EM_DIAGRAM):   end;
1214839   +else
1214840   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1214841   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1214842   +end;
MPRINT(EM_DIAGRAM):   end;
1214843   +else
1214844   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1214845   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1214846   +end;
MPRINT(EM_DIAGRAM):   end;
1214847   +else
1214848   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1214849   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1214850   +end;
MPRINT(EM_DIAGRAM):   end;
1214851   +end;
MPRINT(EM_DIAGRAM):   end;
1214852   +
1214853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214854   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1214855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214856   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1214857   +
1214858   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1214859   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1214860   +end;
MPRINT(EM_DIAGRAM):   end;
1214861   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1214862   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1214863   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1214864   +end;
MPRINT(EM_DIAGRAM):   end;
1214865   +else
1214866   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1214867   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1214868   +end;
MPRINT(EM_DIAGRAM):   end;
1214869   +else
1214870   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1214871   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1214872   +end;
MPRINT(EM_DIAGRAM):   end;
1214873   +else
1214874   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1214875   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1214876   +end;
MPRINT(EM_DIAGRAM):   end;
1214877   +end;
MPRINT(EM_DIAGRAM):   end;
1214878   +
1214879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214880   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1214881   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214882   +LABEL GRP_MntFishProducts =
1214883   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1214884   +
1214885   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1214886   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1214887   +end;
MPRINT(EM_DIAGRAM):   end;
1214888   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1214889   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1214890   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1214891   +end;
MPRINT(EM_DIAGRAM):   end;
1214892   +else
1214893   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1214894   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1214895   +end;
MPRINT(EM_DIAGRAM):   end;
1214896   +else
1214897   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1214898   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1214899   +end;
MPRINT(EM_DIAGRAM):   end;
1214900   +else
1214901   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1214902   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1214903   +end;
MPRINT(EM_DIAGRAM):   end;
1214904   +end;
MPRINT(EM_DIAGRAM):   end;
1214905   +
1214906   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214907   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1214908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214909   +LABEL GRP_MntGoldProds =
1214910   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1214911   +
1214912   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1214913   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1214914   +end;
MPRINT(EM_DIAGRAM):   end;
1214915   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1214916   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1214917   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1214918   +end;
MPRINT(EM_DIAGRAM):   end;
1214919   +else
1214920   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1214921   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1214922   +end;
MPRINT(EM_DIAGRAM):   end;
1214923   +else
1214924   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1214925   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1214926   +end;
MPRINT(EM_DIAGRAM):   end;
1214927   +else
1214928   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1214929   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1214930   +end;
MPRINT(EM_DIAGRAM):   end;
1214931   +end;
MPRINT(EM_DIAGRAM):   end;
1214932   +
1214933   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214934   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1214935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214936   +LABEL GRP_MntMeatProducts =
1214937   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1214938   +
1214939   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1214940   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1214941   +end;
MPRINT(EM_DIAGRAM):   end;
1214942   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1214943   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1214944   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1214945   +end;
MPRINT(EM_DIAGRAM):   end;
1214946   +else
1214947   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1214948   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1214949   +end;
MPRINT(EM_DIAGRAM):   end;
1214950   +else
1214951   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1214952   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1214953   +end;
MPRINT(EM_DIAGRAM):   end;
1214954   +else
1214955   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1214956   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1214957   +end;
MPRINT(EM_DIAGRAM):   end;
1214958   +end;
MPRINT(EM_DIAGRAM):   end;
1214959   +
1214960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214961   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1214962   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214963   +LABEL GRP_MntWines =
1214964   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1214965   +
1214966   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1214967   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1214968   +end;
MPRINT(EM_DIAGRAM):   end;
1214969   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1214970   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1214971   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1214972   +end;
MPRINT(EM_DIAGRAM):   end;
1214973   +else
1214974   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1214975   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1214976   +end;
MPRINT(EM_DIAGRAM):   end;
1214977   +else
1214978   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1214979   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1214980   +end;
MPRINT(EM_DIAGRAM):   end;
1214981   +else
1214982   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1214983   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1214984   +end;
MPRINT(EM_DIAGRAM):   end;
1214985   +end;
MPRINT(EM_DIAGRAM):   end;
1214986   +
1214987   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214988   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1214989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1214990   +LABEL GRP_NumCatalogPurchases =
1214991   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1214992   +
1214993   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1214994   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1214995   +end;
MPRINT(EM_DIAGRAM):   end;
1214996   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1214997   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1214998   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1214999   +end;
MPRINT(EM_DIAGRAM):   end;
1215000   +else
1215001   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1215002   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1215003   +end;
MPRINT(EM_DIAGRAM):   end;
1215004   +else
1215005   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1215006   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1215007   +end;
MPRINT(EM_DIAGRAM):   end;
1215008   +else
1215009   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1215010   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1215011   +end;
MPRINT(EM_DIAGRAM):   end;
1215012   +end;
MPRINT(EM_DIAGRAM):   end;
1215013   +
1215014   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215015   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1215016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215017   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1215018   +
1215019   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1215020   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1215021   +end;
MPRINT(EM_DIAGRAM):   end;
1215022   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1215023   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1215024   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1215025   +end;
MPRINT(EM_DIAGRAM):   end;
1215026   +else
1215027   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1215028   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1215029   +end;
MPRINT(EM_DIAGRAM):   end;
1215030   +else
1215031   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1215032   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1215033   +end;
MPRINT(EM_DIAGRAM):   end;
1215034   +else
1215035   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1215036   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1215037   +end;
MPRINT(EM_DIAGRAM):   end;
1215038   +end;
MPRINT(EM_DIAGRAM):   end;
1215039   +
1215040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215041   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1215042   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215043   +LABEL GRP_NumWebPurchases =
1215044   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1215045   +
1215046   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1215047   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1215048   +end;
MPRINT(EM_DIAGRAM):   end;
1215049   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1215050   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1215051   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1215052   +end;
MPRINT(EM_DIAGRAM):   end;
1215053   +else
1215054   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1215055   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1215056   +end;
MPRINT(EM_DIAGRAM):   end;
1215057   +else
1215058   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1215059   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1215060   +end;
MPRINT(EM_DIAGRAM):   end;
1215061   +else
1215062   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1215063   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1215064   +end;
MPRINT(EM_DIAGRAM):   end;
1215065   +end;
MPRINT(EM_DIAGRAM):   end;
1215066   +
1215067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215068   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1215069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215070   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1215071   +
1215072   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1215073   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1215074   +end;
MPRINT(EM_DIAGRAM):   end;
1215075   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1215076   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1215077   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1215078   +end;
MPRINT(EM_DIAGRAM):   end;
1215079   +else
1215080   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1215081   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1215082   +end;
MPRINT(EM_DIAGRAM):   end;
1215083   +else
1215084   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1215085   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1215086   +end;
MPRINT(EM_DIAGRAM):   end;
1215087   +else
1215088   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1215089   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1215090   +end;
MPRINT(EM_DIAGRAM):   end;
1215091   +end;
MPRINT(EM_DIAGRAM):   end;
1215092   +
1215093   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215094   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1215095   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215096   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1215097   +
1215098   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1215099   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1215100   +end;
MPRINT(EM_DIAGRAM):   end;
1215101   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1215102   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1215103   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1215104   +end;
MPRINT(EM_DIAGRAM):   end;
1215105   +else
1215106   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1215107   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1215108   +end;
MPRINT(EM_DIAGRAM):   end;
1215109   +else
1215110   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1215111   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1215112   +end;
MPRINT(EM_DIAGRAM):   end;
1215113   +else
1215114   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1215115   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1215116   +end;
MPRINT(EM_DIAGRAM):   end;
1215117   +end;
MPRINT(EM_DIAGRAM):   end;
1215118   +
1215119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215120   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1215121   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215122   +LABEL GRP_Recency =
1215123   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1215124   +
1215125   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1215126   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1215127   +end;
MPRINT(EM_DIAGRAM):   end;
1215128   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1215129   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1215130   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1215131   +end;
MPRINT(EM_DIAGRAM):   end;
1215132   +else
1215133   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1215134   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1215135   +end;
MPRINT(EM_DIAGRAM):   end;
1215136   +else
1215137   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1215138   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1215139   +end;
MPRINT(EM_DIAGRAM):   end;
1215140   +else
1215141   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1215142   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1215143   +end;
MPRINT(EM_DIAGRAM):   end;
1215144   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1215145    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1215146    quit;
1215147    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1215148    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1215149    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1215150    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1215151    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1215152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1215153    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1215154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215156    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1215157    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215159    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215160    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1215161    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1215162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215163    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1215164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215165    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1215166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215167    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215168    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215169    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1215170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215171    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215172    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1215173    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1215173  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1215174    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215175    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1215176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 851 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215177    filename _pref
1215177  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1215178    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1215179    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1215180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215181   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1215182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1215183   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1215184   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1215185   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1215186    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1215187    quit;
1215188    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1215189    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1215190    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1215191    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1215192    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1215193    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215194    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1215195    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215196    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215197    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1215198    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215199    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215200    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215201    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1215202    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1215203    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215204    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1215205    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1215206    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1215207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215209    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215210    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1215211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215212    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215213    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1215214    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1215214  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1215215    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215216    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1215217    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 855 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215218    filename _pref
1215218  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1215219    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1215220    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1215221   +
1215222   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1215223   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1215223  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1215224   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1215225   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1215226   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1215227   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1215228   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1215229    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1215230    quit;
1215231    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1215232    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1215233    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1215234    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1215235    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1215236    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215237    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1215238    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215239    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215240    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1215241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215242    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215243    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215244    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1215245    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1215246    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215247    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1215248    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215249    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1215250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215251    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215252    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215253    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1215254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215255    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215256    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1215257    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1215257  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1215258    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215259    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1215260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 894 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215261    filename _pref
1215261  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1215262    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1215263    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1215264   +
1215265   +
1215266   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1215267   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1215268   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1215269   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1215270   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1215271   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215272   +
1215273   +
1215274   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1215275   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1215276   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1215277   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1215278   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1215279   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215280   +
1215281   +
1215282   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1215283   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1215284   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1215285   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1215286   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1215287   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215288   +
1215289   +
1215290   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1215291   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1215292   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1215293   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1215294   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1215295   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215296   +
1215297   +
1215298   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1215299   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1215300   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1215301   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1215302   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1215303   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215304   +
1215305   +
1215306   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1215307   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1215308   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1215309   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1215310   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1215311   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215312   +
1215313   +
1215314   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1215315   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1215316   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1215317   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1215318   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1215319   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215320   +
1215321   +
1215322   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1215323   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1215324   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1215325   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1215326   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1215327   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1215328   +if
1215329   +_FILTERNORM1 not in ( '.')
1215330   + and
1215331   +_FILTERNORM2 not in ( '.')
1215332   + and
1215333   +_FILTERNORM3 not in ( '.')
1215334   + and
1215335   +_FILTERNORM4 not in ( '.')
1215336   + and
1215337   +_FILTERNORM5 not in ( '.')
1215338   + and
1215339   +_FILTERNORM6 not in ( '.')
1215340   + and
1215341   +_FILTERNORM7 not in ( ' ')
1215342   + and
1215343   +_FILTERNORM8 not in ( ' ')
1215344   +and
1215345   +( Dt_Customer ne .)
1215346   +and ( Income ne . and (Income<=107000))
1215347   +and ( Kidhome ne .)
1215348   +and ( MntFishProducts ne .)
1215349   +and ( MntFruits ne .)
1215350   +and ( MntGoldProds ne .)
1215351   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1215352   +and ( MntSweetProducts ne .)
1215353   +and ( MntWines ne .)
1215354   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1215355   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1215356   +and ( NumStorePurchases ne .)
1215357   +and ( NumWebPurchases ne .)
1215358   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1215359   +and ( Recency ne .)
1215360   +and ( Teenhome ne .)
1215361   +and ( Year_Birth ne .)
1215362   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1215363   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1215364   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1215365   +end;
MPRINT(EM_DIAGRAM):   end;
1215366   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1215367   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1215368    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1215369    quit;
1215370    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1215371    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1215372    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1215373    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1215374    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1215375    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1215376    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1215377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215378    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215379    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1215380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215381    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215382    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215383    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1215384    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1215385    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215386    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1215387    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

1215388    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1215389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215390    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215391    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1215392    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1215393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1215394    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215395    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1215396    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
The SAS System

1215396  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1215397    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1215398    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1215399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 960 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215400    %macro varDept(fcmpdata=,id=);
1215401    %global nobs&id scoreFlag&id;
1215402    %let scoreFlag&id = 0;
1215403    %if &id=1 or ^&fcmpStart %then %do;
1215404    proc sort data=&fcmpdata out=_temp&id nodupkey;
1215405    by NAME;
1215406    where id=&id and LHS in( %let j=1;
1215407    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1215408    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1215409    "&var" %let j = %eval(&j+1);
1215410    %end;
1215411    );
1215412    run;
1215413    %let dsid = %sysfunc(open(_temp&id));
1215414    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1215415    %let dsid = %sysfunc(close(&dsid));
1215416    %if &&nobs&id %then %do;
1215417    %let scoreFlag&id = 1;
1215418    %let fcmpStart = 1;
1215419    %end;
1215420    %else %let fcmpStart = 0;
1215421    %end;
1215422    %else %do;
1215423    proc sort data=&fcmpdata out=_tempid;
1215424    where id=&id;
1215425    by LHS;
1215426    run;
1215427    %let dsid = %sysfunc(open(_tempid));
1215428    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1215429    %let dsid = %sysfunc(close(&dsid));
1215430    %if ^&&nobs&id %then %do;
1215431    proc datasets lib=work nolist;
1215432    delete _tempid;
1215433    run;
1215434    quit;
1215435    %end;
1215436    %else %do;
1215437    data _tempAll;
1215438    set %let j=%eval(&id-1);
1215439    %do x=1 %to &j;
1215440    %if &&nobs&x %then %do;
1215441    _temp&x %end;
1215442    %end;
1215443    ;
1215444    run;
1215445    proc sql;
1215446    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1215446  ! work._tempid p2 where p.name=p2.lhs;
1215447    quit;
1215448    data _temp&id;
1215449    set _temp&id;
1215450    where LHS ne '' and NAME ne '' and Node ne '';
1215451    run;
1215452    proc datasets lib=work nolist;
1215453    delete _tempAll;
1215454    run;
1215455    %let dsid = %sysfunc(open(_temp&id));
1215456    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1215457    %let dsid = %sysfunc(close(&dsid));
1215458    %if ^&&nobs&id %then %do;
1215459    proc datasets lib=work nolist;
1215460    delete _temp&id;
1215461    run;
1215462    quit;
1215463    %end;
1215464    %else %do;
1215465    %let scoreFlag&id = 1;
1215466    data _temp&id;
1215467    set _temp&id;
1215468    where LHS ne NAME and node ne '';
1215469    run;
1215470    %let dsid = %sysfunc(open(_temp&id));
1215471    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1215472    %let dsid = %sysfunc(close(&dsid));
1215473    %if ^&&nobs&id %then %do;
1215474    proc datasets lib=work nolist;
1215475    delete _temp&id;
1215476    run;
1215477    quit;
1215478    %end;
1215479    %else %do;
1215480    proc sort data=_temp&id nodupkey;
1215481    by LHS NAME;
1215482    run;
1215483    %end;
1215484    %end;
1215485    %end;
1215486    %end;
1215487    %mend varDept;
1215488    %macro optCode(outdata=fcmpdata);
1215489    %global fcmpStart;
1215490    %let fcmpStart = 0;
1215491    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1215492    %let NumNodes=9;
1215493    %do k=1 %to &NumNodes;
1215494    %vardept(fcmpdata=&outdata, id=&k);
1215495    %end;
1215496    %mend optCode;
1215497    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 70 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 52 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 18 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 18 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 38 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 38 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 38 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP6.
NOTE: 6 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 18 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 66 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1215498    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1215499    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1215500    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1215501    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215502    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1215503    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1215504    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1215505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215506    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1215507    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1215507  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1215508    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215509    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1215510    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1215511    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215512    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1215513    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1215514    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1215515    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215516    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1215517    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1215518    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1215519    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215520    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1215521    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1215521  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.

1215522    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1215523    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1215524    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1215525    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1215526    filename _pref
1215526  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
1215527    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1215528    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas.
1215529   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215530   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1215531   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1215532   +
1215533   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1215534   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1215535   +
1215536   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1215537   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1215538   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1215539   +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
1215540   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1215541   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1215542   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1215543   +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
1215544   +
1215545   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1215546   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1215547   +
1215548   +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
1215549   +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
1215550   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215551   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215552   +end;
MPRINT(EM_DIAGRAM):   end;
1215553   +
1215554   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1215555   +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
1215556   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1215557   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1215558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215560   +end;
MPRINT(EM_DIAGRAM):   end;
1215561   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215562   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215563   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1215564   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215565   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1215566   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1215567   +   end;
MPRINT(EM_DIAGRAM):   end;
1215568   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1215569   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1215570   +   end;
MPRINT(EM_DIAGRAM):   end;
1215571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215572   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1215573   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215574   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215575   +   end;
MPRINT(EM_DIAGRAM):   end;
1215576   +end;
MPRINT(EM_DIAGRAM):   end;
1215577   +
1215578   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1215579   +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
1215580   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1215581   +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1215582   +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1215583   +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1215584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215586   +end;
MPRINT(EM_DIAGRAM):   end;
1215587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215589   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1215590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215591   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1215592   +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
1215593   +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
1215594   +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
1215595   +   end;
MPRINT(EM_DIAGRAM):   end;
1215596   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1215597   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1215598   +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
1215599   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1215600   +   end;
MPRINT(EM_DIAGRAM):   end;
1215601   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215602   +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
1215603   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1215604   +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
1215605   +   end;
MPRINT(EM_DIAGRAM):   end;
1215606   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215607   +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
1215608   +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
1215609   +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
1215610   +   end;
MPRINT(EM_DIAGRAM):   end;
1215611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215612   +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
1215613   +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
1215614   +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
1215615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215617   +   end;
MPRINT(EM_DIAGRAM):   end;
1215618   +end;
MPRINT(EM_DIAGRAM):   end;
1215619   +
1215620   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1215621   +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
1215622   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1215623   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1215624   +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1215625   +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1215626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215628   +end;
MPRINT(EM_DIAGRAM):   end;
1215629   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215631   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1215632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215633   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1215634   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1215635   +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
1215636   +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
1215637   +   end;
MPRINT(EM_DIAGRAM):   end;
1215638   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215639   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1215640   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1215641   +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
1215642   +   end;
MPRINT(EM_DIAGRAM):   end;
1215643   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1215644   +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
1215645   +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
1215646   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1215647   +   end;
MPRINT(EM_DIAGRAM):   end;
1215648   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215649   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1215650   +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
1215651   +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
1215652   +   end;
MPRINT(EM_DIAGRAM):   end;
1215653   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215654   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1215655   +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
1215656   +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
1215657   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215658   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215659   +   end;
MPRINT(EM_DIAGRAM):   end;
1215660   +end;
MPRINT(EM_DIAGRAM):   end;
1215661   +
1215662   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1215663   +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
1215664   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1215665   +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1215666   +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1215667   +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1215668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215670   +end;
MPRINT(EM_DIAGRAM):   end;
1215671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215673   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1215674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215675   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1215676   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1215677   +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
1215678   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1215679   +   end;
MPRINT(EM_DIAGRAM):   end;
1215680   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1215681   +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
1215682   +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
1215683   +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
1215684   +   end;
MPRINT(EM_DIAGRAM):   end;
1215685   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215686   +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
1215687   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1215688   +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
1215689   +   end;
MPRINT(EM_DIAGRAM):   end;
1215690   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215691   +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
1215692   +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
1215693   +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
1215694   +   end;
MPRINT(EM_DIAGRAM):   end;
1215695   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215696   +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
1215697   +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
1215698   +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
1215699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215701   +   end;
MPRINT(EM_DIAGRAM):   end;
1215702   +end;
MPRINT(EM_DIAGRAM):   end;
1215703   +
1215704   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1215705   +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
1215706   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1215707   +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1215708   +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1215709   +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1215710   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215711   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215712   +end;
MPRINT(EM_DIAGRAM):   end;
1215713   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215714   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215715   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1215716   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215717   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1215718   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1215719   +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
1215720   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1215721   +   end;
MPRINT(EM_DIAGRAM):   end;
1215722   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215723   +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
1215724   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1215725   +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
1215726   +   end;
MPRINT(EM_DIAGRAM):   end;
1215727   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1215728   +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
1215729   +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
1215730   +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
1215731   +   end;
MPRINT(EM_DIAGRAM):   end;
1215732   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215733   +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
1215734   +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
1215735   +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
1215736   +   end;
MPRINT(EM_DIAGRAM):   end;
1215737   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215738   +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
1215739   +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
1215740   +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
1215741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215743   +   end;
MPRINT(EM_DIAGRAM):   end;
1215744   +end;
MPRINT(EM_DIAGRAM):   end;
1215745   +
1215746   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1215747   +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
1215748   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1215749   +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1215750   +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1215751   +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1215752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215754   +end;
MPRINT(EM_DIAGRAM):   end;
1215755   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215756   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215757   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1215758   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215759   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1215760   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1215761   +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
1215762   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1215763   +   end;
MPRINT(EM_DIAGRAM):   end;
1215764   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1215765   +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
1215766   +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
1215767   +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
1215768   +   end;
MPRINT(EM_DIAGRAM):   end;
1215769   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215770   +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
1215771   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1215772   +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
1215773   +   end;
MPRINT(EM_DIAGRAM):   end;
1215774   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215775   +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
1215776   +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
1215777   +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
1215778   +   end;
MPRINT(EM_DIAGRAM):   end;
1215779   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215780   +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
1215781   +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
1215782   +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
1215783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215785   +   end;
MPRINT(EM_DIAGRAM):   end;
1215786   +end;
MPRINT(EM_DIAGRAM):   end;
1215787   +
1215788   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1215789   +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
1215790   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1215791   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1215792   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1215793   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215794   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215795   +end;
MPRINT(EM_DIAGRAM):   end;
1215796   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215797   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215798   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1215799   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215800   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1215801   +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1215802   +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1215803   +   end;
MPRINT(EM_DIAGRAM):   end;
1215804   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1215805   +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1215806   +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1215807   +   end;
MPRINT(EM_DIAGRAM):   end;
1215808   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215809   +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1215810   +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1215811   +   end;
MPRINT(EM_DIAGRAM):   end;
1215812   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215813   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1215814   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1215815   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215816   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215817   +   end;
MPRINT(EM_DIAGRAM):   end;
1215818   +end;
MPRINT(EM_DIAGRAM):   end;
1215819   +
1215820   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1215821   +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
1215822   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1215823   +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1215824   +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1215825   +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1215826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215828   +end;
MPRINT(EM_DIAGRAM):   end;
1215829   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215831   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1215832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215833   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1215834   +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
1215835   +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
1215836   +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
1215837   +   end;
MPRINT(EM_DIAGRAM):   end;
1215838   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215839   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1215840   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1215841   +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
1215842   +   end;
MPRINT(EM_DIAGRAM):   end;
1215843   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215844   +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
1215845   +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
1215846   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1215847   +   end;
MPRINT(EM_DIAGRAM):   end;
1215848   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1215849   +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
1215850   +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
1215851   +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
1215852   +   end;
MPRINT(EM_DIAGRAM):   end;
1215853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215854   +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
1215855   +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
1215856   +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
1215857   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215858   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215859   +   end;
MPRINT(EM_DIAGRAM):   end;
1215860   +end;
MPRINT(EM_DIAGRAM):   end;
1215861   +
1215862   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1215863   +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
1215864   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1215865   +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1215866   +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1215867   +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1215868   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215869   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215870   +end;
MPRINT(EM_DIAGRAM):   end;
1215871   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215872   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215873   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1215874   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215875   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1215876   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1215877   +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
1215878   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1215879   +   end;
MPRINT(EM_DIAGRAM):   end;
1215880   +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
1215881   +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
1215882   +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
1215883   +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
1215884   +   end;
MPRINT(EM_DIAGRAM):   end;
1215885   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215886   +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
1215887   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1215888   +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
1215889   +   end;
MPRINT(EM_DIAGRAM):   end;
1215890   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215891   +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
1215892   +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
1215893   +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
1215894   +   end;
MPRINT(EM_DIAGRAM):   end;
1215895   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215896   +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
1215897   +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
1215898   +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
1215899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215901   +   end;
MPRINT(EM_DIAGRAM):   end;
1215902   +end;
MPRINT(EM_DIAGRAM):   end;
1215903   +
1215904   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1215905   +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
1215906   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1215907   +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1215908   +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1215909   +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1215910   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1215911   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215912   +end;
MPRINT(EM_DIAGRAM):   end;
1215913   +else do;
MPRINT(EM_DIAGRAM):   else do;
1215914   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1215915   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1215916   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1215917   +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1215918   +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
1215919   +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
1215920   +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
1215921   +   end;
MPRINT(EM_DIAGRAM):   end;
1215922   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1215923   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1215924   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1215925   +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
1215926   +   end;
MPRINT(EM_DIAGRAM):   end;
1215927   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1215928   +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
1215929   +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
1215930   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1215931   +   end;
MPRINT(EM_DIAGRAM):   end;
1215932   +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
1215933   +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
1215934   +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
1215935   +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
1215936   +   end;
MPRINT(EM_DIAGRAM):   end;
1215937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1215938   +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
1215939   +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
1215940   +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
1215941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1215942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1215943   +   end;
MPRINT(EM_DIAGRAM):   end;
1215944   +end;
MPRINT(EM_DIAGRAM):   end;
1215945   +
1215946   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1215947   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1215948   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1215949   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1215950   +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
1215951   +end;
MPRINT(EM_DIAGRAM):   end;
1215952   +
1215953   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1215954   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1215955   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1215956   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1215957   +
1215958   +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
1215959   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215960   +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
1215961   +
1215962   +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
1215963   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215964   +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
1215965   +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
1215966   +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
1215967   +
1215968   +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
1215969   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215970   +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
1215971   +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
1215972   +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
1215973   +
1215974   +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
1215975   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215976   +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
1215977   +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
1215978   +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
1215979   +
1215980   +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
1215981   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215982   +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
1215983   +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
1215984   +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
1215985   +
1215986   +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
1215987   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215988   +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
1215989   +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
1215990   +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
1215991   +
1215992   +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
1215993   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215994   +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
1215995   +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
1215996   +
1215997   +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
1215998   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1215999   +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
1216000   +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
1216001   +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
1216002   +
1216003   +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
1216004   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1216005   +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
1216006   +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
1216007   +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
1216008   +
1216009   +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
1216010   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1216011   +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
1216012   +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
1216013   +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
1216014   +
1216015   +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
1216016   +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
1216017   +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
1216018   +
1216019   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1216020   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1216021   +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
1216022   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1216023   +
1216024   +REG7DR1:
1216025   +
1216026   +
1216027   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Posterior Probabilities and Predicted Level;
1216028   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1216029   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1216030   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1216031   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1216032   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1216033   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1216034   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1216035   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1216036   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1216037   +end;
MPRINT(EM_DIAGRAM):   end;
1216038   +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
1216039   +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
1216040   +
1216041   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1216042   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1216043   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216044    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216045    quit;
1216046    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216047    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216048    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216049    retain ID 2 Node "Reg7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg7";
1216050    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216051    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216052    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216054    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216055    proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
1216056    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216057    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set EMWS8.REG7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216058    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216059    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216060    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216062    proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
1216063    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1216064    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216066    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1216067    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216068    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216069    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216070    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216071    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216072    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216072  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 413 rows and 5 columns.

1216073    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216074    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1216075    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 413 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 413 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216076    filename _pref
1216076  ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
1216077    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216078    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
1216079   +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
1216080   +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
1216081   +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
1216082   +
1216083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216084   +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
1216085   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216086   +LABEL GRP_AcceptedCmp5 =
1216087   +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
1216088   +
1216089   +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
1216090   +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1216091   +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
1216092   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1216093   +end;
MPRINT(EM_DIAGRAM):   end;
1216094   +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
1216095   +if (_UFORMAT eq '0'
1216096   +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
1216097   +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
1216098   +end;
MPRINT(EM_DIAGRAM):   end;
1216099   +else
1216100   +if (_UFORMAT eq '1'
1216101   +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
1216102   +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
1216103   +end;
MPRINT(EM_DIAGRAM):   end;
1216104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1216105   +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
1216106   +end;
MPRINT(EM_DIAGRAM):   end;
1216107   +end;
MPRINT(EM_DIAGRAM):   end;
1216108   +
1216109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216110   +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
1216111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216112   +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
1216113   +
1216114   +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
1216115   +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
1216116   +end;
MPRINT(EM_DIAGRAM):   end;
1216117   +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
1216118   +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
1216119   +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
1216120   +end;
MPRINT(EM_DIAGRAM):   end;
1216121   +else
1216122   +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
1216123   +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
1216124   +end;
MPRINT(EM_DIAGRAM):   end;
1216125   +else
1216126   +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
1216127   +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
1216128   +end;
MPRINT(EM_DIAGRAM):   end;
1216129   +else
1216130   +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
1216131   +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
1216132   +end;
MPRINT(EM_DIAGRAM):   end;
1216133   +end;
MPRINT(EM_DIAGRAM):   end;
1216134   +
1216135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216136   +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
1216137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216138   +LABEL GRP_Income =
1216139   +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
1216140   +
1216141   +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
1216142   +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
1216143   +end;
MPRINT(EM_DIAGRAM):   end;
1216144   +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
1216145   +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
1216146   +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
1216147   +end;
MPRINT(EM_DIAGRAM):   end;
1216148   +else
1216149   +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
1216150   +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
1216151   +end;
MPRINT(EM_DIAGRAM):   end;
1216152   +else
1216153   +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
1216154   +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
1216155   +end;
MPRINT(EM_DIAGRAM):   end;
1216156   +else
1216157   +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
1216158   +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
1216159   +end;
MPRINT(EM_DIAGRAM):   end;
1216160   +end;
MPRINT(EM_DIAGRAM):   end;
1216161   +
1216162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216163   +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
1216164   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216165   +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
1216166   +
1216167   +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
1216168   +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
1216169   +end;
MPRINT(EM_DIAGRAM):   end;
1216170   +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
1216171   +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
1216172   +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
1216173   +end;
MPRINT(EM_DIAGRAM):   end;
1216174   +else
1216175   +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
1216176   +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
1216177   +end;
MPRINT(EM_DIAGRAM):   end;
1216178   +else
1216179   +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
1216180   +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
1216181   +end;
MPRINT(EM_DIAGRAM):   end;
1216182   +else
1216183   +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
1216184   +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
1216185   +end;
MPRINT(EM_DIAGRAM):   end;
1216186   +end;
MPRINT(EM_DIAGRAM):   end;
1216187   +
1216188   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216189   +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
1216190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216191   +LABEL GRP_MntFishProducts =
1216192   +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
1216193   +
1216194   +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
1216195   +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
1216196   +end;
MPRINT(EM_DIAGRAM):   end;
1216197   +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
1216198   +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
1216199   +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
1216200   +end;
MPRINT(EM_DIAGRAM):   end;
1216201   +else
1216202   +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
1216203   +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
1216204   +end;
MPRINT(EM_DIAGRAM):   end;
1216205   +else
1216206   +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
1216207   +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
1216208   +end;
MPRINT(EM_DIAGRAM):   end;
1216209   +else
1216210   +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
1216211   +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
1216212   +end;
MPRINT(EM_DIAGRAM):   end;
1216213   +end;
MPRINT(EM_DIAGRAM):   end;
1216214   +
1216215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216216   +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
1216217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216218   +LABEL GRP_MntGoldProds =
1216219   +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
1216220   +
1216221   +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
1216222   +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
1216223   +end;
MPRINT(EM_DIAGRAM):   end;
1216224   +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
1216225   +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
1216226   +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
1216227   +end;
MPRINT(EM_DIAGRAM):   end;
1216228   +else
1216229   +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
1216230   +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
1216231   +end;
MPRINT(EM_DIAGRAM):   end;
1216232   +else
1216233   +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
1216234   +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
1216235   +end;
MPRINT(EM_DIAGRAM):   end;
1216236   +else
1216237   +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
1216238   +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
1216239   +end;
MPRINT(EM_DIAGRAM):   end;
1216240   +end;
MPRINT(EM_DIAGRAM):   end;
1216241   +
1216242   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216243   +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
1216244   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216245   +LABEL GRP_MntMeatProducts =
1216246   +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
1216247   +
1216248   +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
1216249   +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
1216250   +end;
MPRINT(EM_DIAGRAM):   end;
1216251   +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
1216252   +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
1216253   +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
1216254   +end;
MPRINT(EM_DIAGRAM):   end;
1216255   +else
1216256   +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
1216257   +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
1216258   +end;
MPRINT(EM_DIAGRAM):   end;
1216259   +else
1216260   +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
1216261   +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
1216262   +end;
MPRINT(EM_DIAGRAM):   end;
1216263   +else
1216264   +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
1216265   +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
1216266   +end;
MPRINT(EM_DIAGRAM):   end;
1216267   +end;
MPRINT(EM_DIAGRAM):   end;
1216268   +
1216269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216270   +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
1216271   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216272   +LABEL GRP_MntWines =
1216273   +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
1216274   +
1216275   +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
1216276   +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
1216277   +end;
MPRINT(EM_DIAGRAM):   end;
1216278   +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
1216279   +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
1216280   +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
1216281   +end;
MPRINT(EM_DIAGRAM):   end;
1216282   +else
1216283   +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
1216284   +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
1216285   +end;
MPRINT(EM_DIAGRAM):   end;
1216286   +else
1216287   +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
1216288   +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
1216289   +end;
MPRINT(EM_DIAGRAM):   end;
1216290   +else
1216291   +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
1216292   +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
1216293   +end;
MPRINT(EM_DIAGRAM):   end;
1216294   +end;
MPRINT(EM_DIAGRAM):   end;
1216295   +
1216296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216297   +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
1216298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216299   +LABEL GRP_NumCatalogPurchases =
1216300   +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
1216301   +
1216302   +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
1216303   +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
1216304   +end;
MPRINT(EM_DIAGRAM):   end;
1216305   +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
1216306   +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
1216307   +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
1216308   +end;
MPRINT(EM_DIAGRAM):   end;
1216309   +else
1216310   +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
1216311   +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
1216312   +end;
MPRINT(EM_DIAGRAM):   end;
1216313   +else
1216314   +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
1216315   +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
1216316   +end;
MPRINT(EM_DIAGRAM):   end;
1216317   +else
1216318   +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
1216319   +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
1216320   +end;
MPRINT(EM_DIAGRAM):   end;
1216321   +end;
MPRINT(EM_DIAGRAM):   end;
1216322   +
1216323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216324   +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
1216325   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216326   +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
1216327   +
1216328   +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
1216329   +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
1216330   +end;
MPRINT(EM_DIAGRAM):   end;
1216331   +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
1216332   +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
1216333   +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
1216334   +end;
MPRINT(EM_DIAGRAM):   end;
1216335   +else
1216336   +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
1216337   +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
1216338   +end;
MPRINT(EM_DIAGRAM):   end;
1216339   +else
1216340   +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
1216341   +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
1216342   +end;
MPRINT(EM_DIAGRAM):   end;
1216343   +else
1216344   +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
1216345   +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
1216346   +end;
MPRINT(EM_DIAGRAM):   end;
1216347   +end;
MPRINT(EM_DIAGRAM):   end;
1216348   +
1216349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216350   +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
1216351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216352   +LABEL GRP_NumWebPurchases =
1216353   +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
1216354   +
1216355   +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
1216356   +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
1216357   +end;
MPRINT(EM_DIAGRAM):   end;
1216358   +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
1216359   +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
1216360   +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
1216361   +end;
MPRINT(EM_DIAGRAM):   end;
1216362   +else
1216363   +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
1216364   +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
1216365   +end;
MPRINT(EM_DIAGRAM):   end;
1216366   +else
1216367   +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
1216368   +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
1216369   +end;
MPRINT(EM_DIAGRAM):   end;
1216370   +else
1216371   +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
1216372   +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
1216373   +end;
MPRINT(EM_DIAGRAM):   end;
1216374   +end;
MPRINT(EM_DIAGRAM):   end;
1216375   +
1216376   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216377   +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
1216378   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216379   +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
1216380   +
1216381   +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
1216382   +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
1216383   +end;
MPRINT(EM_DIAGRAM):   end;
1216384   +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
1216385   +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
1216386   +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
1216387   +end;
MPRINT(EM_DIAGRAM):   end;
1216388   +else
1216389   +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
1216390   +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
1216391   +end;
MPRINT(EM_DIAGRAM):   end;
1216392   +else
1216393   +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
1216394   +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
1216395   +end;
MPRINT(EM_DIAGRAM):   end;
1216396   +else
1216397   +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
1216398   +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
1216399   +end;
MPRINT(EM_DIAGRAM):   end;
1216400   +end;
MPRINT(EM_DIAGRAM):   end;
1216401   +
1216402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216403   +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
1216404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216405   +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
1216406   +
1216407   +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
1216408   +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
1216409   +end;
MPRINT(EM_DIAGRAM):   end;
1216410   +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
1216411   +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
1216412   +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
1216413   +end;
MPRINT(EM_DIAGRAM):   end;
1216414   +else
1216415   +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
1216416   +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
1216417   +end;
MPRINT(EM_DIAGRAM):   end;
1216418   +else
1216419   +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
1216420   +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
1216421   +end;
MPRINT(EM_DIAGRAM):   end;
1216422   +else
1216423   +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
1216424   +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
1216425   +end;
MPRINT(EM_DIAGRAM):   end;
1216426   +end;
MPRINT(EM_DIAGRAM):   end;
1216427   +
1216428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216429   +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
1216430   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216431   +LABEL GRP_Recency =
1216432   +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
1216433   +
1216434   +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
1216435   +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
1216436   +end;
MPRINT(EM_DIAGRAM):   end;
1216437   +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
1216438   +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
1216439   +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
1216440   +end;
MPRINT(EM_DIAGRAM):   end;
1216441   +else
1216442   +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
1216443   +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
1216444   +end;
MPRINT(EM_DIAGRAM):   end;
1216445   +else
1216446   +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
1216447   +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
1216448   +end;
MPRINT(EM_DIAGRAM):   end;
1216449   +else
1216450   +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
1216451   +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
1216452   +end;
MPRINT(EM_DIAGRAM):   end;
1216453   +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216454    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216455    quit;
1216456    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216457    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216458    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216459    retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
1216460    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216461    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216462    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216465    proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
1216466    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216467    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216468    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216469    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216470    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216471    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216472    proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
1216473    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1216474    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216476    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216477    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216478    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216479    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216480    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216481    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216482    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216482  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.

1216483    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216484    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1216485    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 428 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216486    filename _pref
1216486  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1216487    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216488    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1216489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216490   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1216491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1216492   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1216493   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1216494   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216495    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216496    quit;
1216497    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216498    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216499    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216500    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1216501    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216502    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216503    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216504    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216505    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216506    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1216507    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216508    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216509    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216510    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216511    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216512    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216513    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1216514    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1216515    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216516    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216517    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216518    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216519    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216520    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216521    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216522    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216523    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216523  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1216524    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216525    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1216526    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 432 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216527    filename _pref
1216527  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1216528    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216529    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1216530   +
1216531   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1216532   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1216532  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1216533   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1216534   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1216535   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1216536   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1216537   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216538    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216539    quit;
1216540    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216541    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216542    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216543    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1216544    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216545    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216546    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216547    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216548    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216549    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1216550    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216551    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216552    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216553    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216554    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216555    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216556    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1216557    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216558    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216559    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216560    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216561    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216562    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216563    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216564    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216565    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216566    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216566  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1216567    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216568    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1216569    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 471 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216570    filename _pref
1216570  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1216571    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1216572    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1216573   +
1216574   +
1216575   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1216576   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1216577   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1216578   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1216579   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1216580   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216581   +
1216582   +
1216583   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1216584   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1216585   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1216586   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1216587   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1216588   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216589   +
1216590   +
1216591   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1216592   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1216593   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1216594   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1216595   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1216596   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216597   +
1216598   +
1216599   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1216600   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1216601   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1216602   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1216603   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1216604   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216605   +
1216606   +
1216607   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1216608   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1216609   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1216610   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1216611   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1216612   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216613   +
1216614   +
1216615   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1216616   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1216617   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1216618   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1216619   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1216620   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216621   +
1216622   +
1216623   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1216624   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1216625   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1216626   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1216627   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1216628   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216629   +
1216630   +
1216631   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1216632   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1216633   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1216634   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1216635   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1216636   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1216637   +if
1216638   +_FILTERNORM1 not in ( '.')
1216639   + and
1216640   +_FILTERNORM2 not in ( '.')
1216641   + and
1216642   +_FILTERNORM3 not in ( '.')
1216643   + and
1216644   +_FILTERNORM4 not in ( '.')
1216645   + and
1216646   +_FILTERNORM5 not in ( '.')
1216647   + and
1216648   +_FILTERNORM6 not in ( '.')
1216649   + and
1216650   +_FILTERNORM7 not in ( ' ')
1216651   + and
1216652   +_FILTERNORM8 not in ( ' ')
1216653   +and
1216654   +( Dt_Customer ne .)
1216655   +and ( Income ne . and (Income<=107000))
1216656   +and ( Kidhome ne .)
1216657   +and ( MntFishProducts ne .)
1216658   +and ( MntFruits ne .)
1216659   +and ( MntGoldProds ne .)
1216660   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1216661   +and ( MntSweetProducts ne .)
1216662   +and ( MntWines ne .)
1216663   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1216664   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1216665   +and ( NumStorePurchases ne .)
1216666   +and ( NumWebPurchases ne .)
1216667   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1216668   +and ( Recency ne .)
1216669   +and ( Teenhome ne .)
1216670   +and ( Year_Birth ne .)
1216671   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1216672   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1216673   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1216674   +end;
MPRINT(EM_DIAGRAM):   end;
1216675   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1216676   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1216677    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1216678    quit;
1216679    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1216680    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1216681    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1216682    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1216683    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1216684    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216685    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1216686    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216687    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216688    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1216689    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216690    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216691    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216692    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1216693    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1216694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216695    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1216696    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

1216697    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1216698    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216700    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1216701    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1216702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1216703    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216704    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216705    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1216705  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1216706    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216707    proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl3_FCMP data=_tempx;
1216708    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL3_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL3_FCMP has 537 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216709    %macro varDept(fcmpdata=,id=);
1216710    %global nobs&id scoreFlag&id;
1216711    %let scoreFlag&id = 0;
1216712    %if &id=1 or ^&fcmpStart %then %do;
1216713    proc sort data=&fcmpdata out=_temp&id nodupkey;
1216714    by NAME;
1216715    where id=&id and LHS in( %let j=1;
1216716    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1216717    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1216718    "&var" %let j = %eval(&j+1);
1216719    %end;
1216720    );
1216721    run;
1216722    %let dsid = %sysfunc(open(_temp&id));
1216723    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216724    %let dsid = %sysfunc(close(&dsid));
1216725    %if &&nobs&id %then %do;
1216726    %let scoreFlag&id = 1;
1216727    %let fcmpStart = 1;
1216728    %end;
1216729    %else %let fcmpStart = 0;
1216730    %end;
1216731    %else %do;
1216732    proc sort data=&fcmpdata out=_tempid;
1216733    where id=&id;
1216734    by LHS;
1216735    run;
1216736    %let dsid = %sysfunc(open(_tempid));
1216737    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216738    %let dsid = %sysfunc(close(&dsid));
1216739    %if ^&&nobs&id %then %do;
1216740    proc datasets lib=work nolist;
1216741    delete _tempid;
1216742    run;
1216743    quit;
1216744    %end;
1216745    %else %do;
1216746    data _tempAll;
1216747    set %let j=%eval(&id-1);
1216748    %do x=1 %to &j;
1216749    %if &&nobs&x %then %do;
1216750    _temp&x %end;
1216751    %end;
1216752    ;
1216753    run;
1216754    proc sql;
1216755    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1216755  ! work._tempid p2 where p.name=p2.lhs;
1216756    quit;
1216757    data _temp&id;
1216758    set _temp&id;
1216759    where LHS ne '' and NAME ne '' and Node ne '';
1216760    run;
1216761    proc datasets lib=work nolist;
1216762    delete _tempAll;
1216763    run;
1216764    %let dsid = %sysfunc(open(_temp&id));
1216765    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216766    %let dsid = %sysfunc(close(&dsid));
1216767    %if ^&&nobs&id %then %do;
1216768    proc datasets lib=work nolist;
1216769    delete _temp&id;
1216770    run;
1216771    quit;
1216772    %end;
1216773    %else %do;
1216774    %let scoreFlag&id = 1;
1216775    data _temp&id;
1216776    set _temp&id;
1216777    where LHS ne NAME and node ne '';
1216778    run;
1216779    %let dsid = %sysfunc(open(_temp&id));
1216780    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1216781    %let dsid = %sysfunc(close(&dsid));
1216782    %if ^&&nobs&id %then %do;
1216783    proc datasets lib=work nolist;
1216784    delete _temp&id;
1216785    run;
1216786    quit;
1216787    %end;
1216788    %else %do;
1216789    proc sort data=_temp&id nodupkey;
1216790    by LHS NAME;
1216791    run;
1216792    %end;
1216793    %end;
1216794    %end;
1216795    %end;
1216796    %mend varDept;
1216797    %macro optCode(outdata=fcmpdata);
1216798    %global fcmpStart;
1216799    %let fcmpStart = 0;
1216800    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1216801    %let NumNodes=9;
1216802    %do k=1 %to &NumNodes;
1216803    %vardept(fcmpdata=&outdata, id=&k);
1216804    %end;
1216805    %mend optCode;
1216806    %optcode(outData=EMWS8.Ensmbl3_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 44 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl3_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1216807    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1216808    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1216809    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1216810    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216811    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1216812    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1216813    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1216814    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216815    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216816    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1216816  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1216817    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1216818    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1216819    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1216820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216821    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1216822    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1216823    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1216824    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216825    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1216826    set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
1216827    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1216828    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1216829    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1216830    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1216830  ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.

1216831    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1216832    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1216833    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1216834    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1216835    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1216836    * Ensmbl3: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Computing metadata for TRAIN data;
1216837    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL3_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl3\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl3_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl3_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl3_TRAIN out=WORK.M078UR21 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M078UR21;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M078UR21(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M078UR21;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M078UR21;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2_H44B6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_H44B6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_H44B6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3TLAC5A(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_H44B6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_H44B6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_H44B6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_H44B6;
MPRINT(EMADVISECOLUMNS):   set WORK.M2_H44B6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl3";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl3";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl3: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl3";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1217157    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1217158    set EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl3_EMINFO;
1217159    where DATA='Ensmbl3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl3' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1217160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL3_EMINFO.
      WHERE (DATA='Ensmbl3') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217161    data EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl3_EMINFO;
1217162    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1217163    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1217164    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1217168    run;
1217169    data EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMINFO;
1217170    set EMWS8.Ensmbl3_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl3_EMINFO WORK.MODELTEMP_INFO;
1217171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL3_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL3_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217172    proc sort data = EMWS8.Ensmbl3_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl3_EMINFO NOTHREADS;
1217173    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1217174    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL3_EMINFO.
NOTE: The data set EMWS8.ENSMBL3_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217175    proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg3_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1217176    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1217177    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.REG3_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1217178    proc sort data = EMWS8.Ensmbl3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl3_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1217179    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1217180    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL3_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217181    data EMWS8.Ensmbl3_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl3_EMINFO;
1217182    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1217183    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1217184    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL3_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1217185    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1217186    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1217187    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1217188    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

NOTE: View EMWS8.ENSMBL3_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL3_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
