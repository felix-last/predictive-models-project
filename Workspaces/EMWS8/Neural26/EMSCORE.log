MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.14 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.14 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O25YISQL 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O25YISQL new;
MPRINT(EM_DIAGRAM):   run;
784707     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
784708     set EMWS8.Neural26_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural26_OUTKEY;
784709     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
784710     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 31 observations read from the data set EMWS8.NEURAL26_OUTKEY.
NOTE: The data set WORK.OUTKEY has 4 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

784711     filename emflow
784711   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural26: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
784712     *------------------------------------------------------------*;
784713     * Neural26: Scoring DATA data;
784714     *------------------------------------------------------------*;
784715     data EMWS8.Neural26_TRAIN
784716     / view=EMWS8.Neural26_TRAIN
784717     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural26_TRAIN / view=EMWS8.Neural26_TRAIN ;
784718     set EMWS8.Varsel_TRAIN
784719     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_TRAIN ;
784720     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMFLOWSCORE.sas.
784721    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
784722    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
784723    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
784724    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
784725    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
784726    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
784727    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
784728    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
784729    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
784730    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
784731    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
784732    +LENGTH _WARN_ $4
784733    +      F_DepVar  $ 12
784734    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
784735    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
784736    +
784737    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
784738    +
784739    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
784740    +
784741    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
784742    +
784743    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
784744    +
784745    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
784746    +
784747    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
784748    +
784749    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
784750    +
784751    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
784752    +
784753    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
784754    +
784755    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
784756    +
784757    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
784758    +
784759    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
784760    +
784761    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
784762    +
784763    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
784764    +
784765    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
784766    +
784767    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
784768    +
784769    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
784770    +
784771    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
784772    +
784773    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
784774    +
784775    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
784776    +
784777    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
784778    +
784779    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
784780    +
784781    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
784782    +
784783    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
784784    +
784785    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
784786    +
784787    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
784788    +
784789    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
784790    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
784791    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
784792    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
784793    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
784794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
784795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784796    +end;
MPRINT(EM_DIAGRAM):   end;
784797    +else do;
MPRINT(EM_DIAGRAM):   else do;
784798    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
784799    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
784800    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784801    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
784802    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
784803    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
784804    +   end;
MPRINT(EM_DIAGRAM):   end;
784805    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
784806    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
784807    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
784808    +   end;
MPRINT(EM_DIAGRAM):   end;
784809    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
784810    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
784811    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
784812    +   end;
MPRINT(EM_DIAGRAM):   end;
784813    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784814    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
784815    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
784816    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
784817    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784818    +   end;
MPRINT(EM_DIAGRAM):   end;
784819    +end;
MPRINT(EM_DIAGRAM):   end;
784820    +
784821    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784822    +*** Checking missing input Interval
784823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
784824    +
784825    +IF NMISS(
784826    +   AcceptedCmpTotal ,
784827    +   Frq ,
784828    +   Income ,
784829    +   Mnt ,
784830    +   MntFruits ,
784831    +   MntGoldProds ,
784832    +   MntMeatProducts ,
784833    +   MntSweetProducts ,
784834    +   NumCatalogPurchases ,
784835    +   NumWebPurchases ,
784836    +   RFMstat ,
784837    +   RMntFrq ,
784838    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
784839    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
784840    +
784841    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
784842    +END;
MPRINT(EM_DIAGRAM):   END;
784843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784844    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
784845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784846    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
784847    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
784848    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
784849    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
784850    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
784851    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
784852    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
784853    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
784854    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
784855    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
784856    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
784857    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
784858    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
784859    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
784860    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
784861    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
784862    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
784863    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
784864    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
784865    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
784866    +END;
MPRINT(EM_DIAGRAM):   END;
784867    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
784868    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
784869    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
784870    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
784871    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
784872    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
784873    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
784874    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
784875    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
784876    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
784877    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
784878    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
784879    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
784880    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
784881    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
784882    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
784883    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
784884    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
784885    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
784886    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
784887    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
784888    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
784889    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
784890    +   ELSE S_NumCatalogPurchases
784891    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
784892    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
784893    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
784894    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
784895    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
784896    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
784897    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
784898    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
784899    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
784900    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
784901    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
784902    +END;
MPRINT(EM_DIAGRAM):   END;
784903    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784904    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
784905    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784906    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784907    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
784908    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784909    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
784910    +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
784911    +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
784912    +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
784913    +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
784914    +          +     0.30688676656325 * S_MntSweetProducts
784915    +          +    -0.31936466951531 * S_NumCatalogPurchases
784916    +          +    -0.40503981142414 * S_NumWebPurchases
784917    +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
784918    +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq 
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits + 
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325 
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 * 
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq + 
0.94794577395963 * S_Recency ;
784919    +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
784920    +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
784921    +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
784922    +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
784923    +          +    -0.57511617685848 * S_MntSweetProducts
784924    +          +    -0.80584166120088 * S_NumCatalogPurchases
784925    +          +    -0.46226595005401 * S_NumWebPurchases
784926    +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
784927    +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq 
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits + 
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848 
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 * 
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq + 
0.20830913301712 * S_Recency ;
784928    +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
784929    +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
784930    +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
784931    +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
784932    +          +     0.13151485846279 * S_MntSweetProducts
784933    +          +    -0.12544664418198 * S_NumCatalogPurchases
784934    +          +     0.31794108898576 * S_NumWebPurchases
784935    +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
784936    +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq 
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits + 
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 * 
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 * 
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq + 
0.6850072112056 * S_Recency ;
784937    +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
784938    +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
784939    +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
784940    +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
784941    +          +     0.55003060492603 * S_MntSweetProducts
784942    +          +    -0.81895769875154 * S_NumCatalogPurchases
784943    +          +    -0.73905791041531 * S_NumWebPurchases
784944    +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
784945    +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq 
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits + 
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 * 
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 * 
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq + 
0.31097790354738 * S_Recency ;
784946    +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
784947    +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 * 
G_Marital_Status1 ;
784948    +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
784949    +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 * 
G_Marital_Status1 ;
784950    +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
784951    +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 * 
G_Marital_Status1 ;
784952    +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
784953    +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 * 
G_Marital_Status1 ;
784954    +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
784955    +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
784956    +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
784957    +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
784958    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
784959    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
784960    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
784961    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
784962    +END;
MPRINT(EM_DIAGRAM):   END;
784963    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
784964    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
784965    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
784966    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
784967    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
784968    +END;
MPRINT(EM_DIAGRAM):   END;
784969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784970    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
784971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
784972    +
784973    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
784974    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
784975    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
784976    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
784977    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
784978    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
784979    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
784980    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
784981    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
784982    +end;
MPRINT(EM_DIAGRAM):   end;
784983    +else do;
MPRINT(EM_DIAGRAM):   else do;
784984    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
784985    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
784986    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
784987    +   end;
MPRINT(EM_DIAGRAM):   end;
784988    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
784989    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
784990    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
784991    +   end;
MPRINT(EM_DIAGRAM):   end;
784992    +   else do;
MPRINT(EM_DIAGRAM):   else do;
784993    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
784994    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
784995    +   end;
MPRINT(EM_DIAGRAM):   end;
784996    +end;
MPRINT(EM_DIAGRAM):   end;
784997    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
784998    +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
784999    +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 + 
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
785000    +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
785001    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
785002    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
785003    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
785004    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
785005    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
785006    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
785007    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
785008    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
785009    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
785010    +END;
MPRINT(EM_DIAGRAM):   END;
785011    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
785012    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
785013    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
785014    +END;
MPRINT(EM_DIAGRAM):   END;
785015    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
785016    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
785017    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
785018    +END;
MPRINT(EM_DIAGRAM):   END;
785019    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
785020    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
785021    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
785022    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
785023    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
785024    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
785025    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
785026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785027    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
785028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785029    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
785030    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
785031    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
785032    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
785033    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
785034    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
785035    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
785036    +END;
MPRINT(EM_DIAGRAM):   END;
785037    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
785038    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
785039    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
785040    +drop
785041    +H11
785042    +H12
785043    +H13
785044    +H14
785045    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
785046    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
785047     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL26_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_DIAGRAM):   quit;
785048     quit;
785049     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
785050     filename emflow
785050   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural26: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
785051     *------------------------------------------------------------*;
785052     * Neural26: Scoring VALIDATE data;
785053     *------------------------------------------------------------*;
785054     data EMWS8.Neural26_VALIDATE
785055     / view=EMWS8.Neural26_VALIDATE
785056     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural26_VALIDATE / view=EMWS8.Neural26_VALIDATE ;
785057     set EMWS8.Varsel_VALIDATE
785058     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_VALIDATE ;
785059     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMFLOWSCORE.sas.
785060    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
785061    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
785062    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
785063    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
785064    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
785065    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
785066    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
785067    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
785068    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
785069    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
785070    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
785071    +LENGTH _WARN_ $4
785072    +      F_DepVar  $ 12
785073    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
785074    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
785075    +
785076    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
785077    +
785078    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
785079    +
785080    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
785081    +
785082    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
785083    +
785084    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
785085    +
785086    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
785087    +
785088    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
785089    +
785090    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
785091    +
785092    +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
785093    +
785094    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
785095    +
785096    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
785097    +
785098    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
785099    +
785100    +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
785101    +
785102    +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
785103    +
785104    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
785105    +
785106    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
785107    +
785108    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
785109    +
785110    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
785111    +
785112    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
785113    +
785114    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
785115    +
785116    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
785117    +
785118    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
785119    +
785120    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
785121    +
785122    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
785123    +
785124    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
785125    +
785126    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
785127    +
785128    +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
785129    +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
785130    +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
785131    +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
785132    +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
785133    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
785134    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785135    +end;
MPRINT(EM_DIAGRAM):   end;
785136    +else do;
MPRINT(EM_DIAGRAM):   else do;
785137    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
785138    +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
785139    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
785140    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
785141    +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
785142    +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
785143    +   end;
MPRINT(EM_DIAGRAM):   end;
785144    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
785145    +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
785146    +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
785147    +   end;
MPRINT(EM_DIAGRAM):   end;
785148    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
785149    +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
785150    +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
785151    +   end;
MPRINT(EM_DIAGRAM):   end;
785152    +   else do;
MPRINT(EM_DIAGRAM):   else do;
785153    +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
785154    +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
785155    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
785156    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785157    +   end;
MPRINT(EM_DIAGRAM):   end;
785158    +end;
MPRINT(EM_DIAGRAM):   end;
785159    +
785160    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785161    +*** Checking missing input Interval
785162    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
785163    +
785164    +IF NMISS(
785165    +   AcceptedCmpTotal ,
785166    +   Frq ,
785167    +   Income ,
785168    +   Mnt ,
785169    +   MntFruits ,
785170    +   MntGoldProds ,
785171    +   MntMeatProducts ,
785172    +   MntSweetProducts ,
785173    +   NumCatalogPurchases ,
785174    +   NumWebPurchases ,
785175    +   RFMstat ,
785176    +   RMntFrq ,
785177    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits , 
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases , 
RFMstat , RMntFrq , Recency ) THEN DO;
785178    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
785179    +
785180    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
785181    +END;
MPRINT(EM_DIAGRAM):   END;
785182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785183    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
785184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785185    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
785186    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
785187    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
785188    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
785189    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
785190    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
785191    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
785192    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
785193    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
785194    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
785195    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
785196    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
785197    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
785198    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
785199    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
785200    +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
785201    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
785202    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
785203    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
785204    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
785205    +END;
MPRINT(EM_DIAGRAM):   END;
785206    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
785207    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
785208    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
785209    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
785210    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
785211    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
785212    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
785213    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
785214    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
785215    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
785216    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
785217    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
785218    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
785219    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
785220    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
785221    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
785222    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
785223    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
785224    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
785225    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
785226    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
785227    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
785228    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
785229    +   ELSE S_NumCatalogPurchases
785230    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
785231    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
785232    +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
785233    +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
785234    +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
785235    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
785236    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
785237    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
785238    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
785239    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
785240    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
785241    +END;
MPRINT(EM_DIAGRAM):   END;
785242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785243    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
785244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785245    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785246    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
785247    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785248    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
785249    +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
785250    +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
785251    +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
785252    +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
785253    +          +     0.30688676656325 * S_MntSweetProducts
785254    +          +    -0.31936466951531 * S_NumCatalogPurchases
785255    +          +    -0.40503981142414 * S_NumWebPurchases
785256    +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
785257    +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq 
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits + 
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325 
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 * 
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq + 
0.94794577395963 * S_Recency ;
785258    +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
785259    +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
785260    +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
785261    +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
785262    +          +    -0.57511617685848 * S_MntSweetProducts
785263    +          +    -0.80584166120088 * S_NumCatalogPurchases
785264    +          +    -0.46226595005401 * S_NumWebPurchases
785265    +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
785266    +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq 
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits + 
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848 
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 * 
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq + 
0.20830913301712 * S_Recency ;
785267    +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
785268    +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
785269    +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
785270    +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
785271    +          +     0.13151485846279 * S_MntSweetProducts
785272    +          +    -0.12544664418198 * S_NumCatalogPurchases
785273    +          +     0.31794108898576 * S_NumWebPurchases
785274    +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
785275    +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq 
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits + 
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 * 
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 * 
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq + 
0.6850072112056 * S_Recency ;
785276    +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
785277    +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
785278    +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
785279    +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
785280    +          +     0.55003060492603 * S_MntSweetProducts
785281    +          +    -0.81895769875154 * S_NumCatalogPurchases
785282    +          +    -0.73905791041531 * S_NumWebPurchases
785283    +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
785284    +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq 
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits + 
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 * 
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 * 
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq + 
0.31097790354738 * S_Recency ;
785285    +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
785286    +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 * 
G_Marital_Status1 ;
785287    +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
785288    +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 * 
G_Marital_Status1 ;
785289    +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
785290    +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 * 
G_Marital_Status1 ;
785291    +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
785292    +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 * 
G_Marital_Status1 ;
785293    +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
785294    +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
785295    +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
785296    +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
785297    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
785298    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
785299    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
785300    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
785301    +END;
MPRINT(EM_DIAGRAM):   END;
785302    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
785303    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
785304    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
785305    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
785306    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
785307    +END;
MPRINT(EM_DIAGRAM):   END;
785308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785309    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
785310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785311    +
785312    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
785313    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
785314    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
785315    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
785316    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
785317    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
785318    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
785319    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
785320    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
785321    +end;
MPRINT(EM_DIAGRAM):   end;
785322    +else do;
MPRINT(EM_DIAGRAM):   else do;
785323    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
785324    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
785325    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
785326    +   end;
MPRINT(EM_DIAGRAM):   end;
785327    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
785328    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
785329    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
785330    +   end;
MPRINT(EM_DIAGRAM):   end;
785331    +   else do;
MPRINT(EM_DIAGRAM):   else do;
785332    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
785333    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
785334    +   end;
MPRINT(EM_DIAGRAM):   end;
785335    +end;
MPRINT(EM_DIAGRAM):   end;
785336    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
785337    +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
785338    +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 + 
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
785339    +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
785340    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
785341    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
785342    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
785343    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
785344    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
785345    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
785346    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
785347    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
785348    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
785349    +END;
MPRINT(EM_DIAGRAM):   END;
785350    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
785351    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
785352    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
785353    +END;
MPRINT(EM_DIAGRAM):   END;
785354    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
785355    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
785356    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
785357    +END;
MPRINT(EM_DIAGRAM):   END;
785358    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
785359    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
785360    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
785361    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
785362    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
785363    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
785364    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
785365    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785366    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
785367    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
785368    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
785369    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
785370    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
785371    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
785372    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
785373    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
785374    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
785375    +END;
MPRINT(EM_DIAGRAM):   END;
785376    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
785377    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
785378    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
785379    +drop
785380    +H11
785381    +H12
785382    +H13
785383    +H14
785384    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
785385    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
785386     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL26_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_DIAGRAM):   quit;
785387     quit;
785388     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
785389     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
785390     * Neural26: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural26: Computing metadata for TRAIN data;
785391     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL26_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural26\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural26_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural26_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural26_TRAIN out=WORK.M16CY21W noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16CY21W;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M16CY21W(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M16CY21W;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M16CY21W;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1TSXSBI NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TSXSBI;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TSXSBI;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3QBE3G6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TSXSBI;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TSXSBI;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TSXSBI;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1TSXSBI;
MPRINT(EMADVISECOLUMNS):   set WORK.M1TSXSBI;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural26_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural26";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural26";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural26";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural26: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
785703     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
785704     set EMWS8.Neural26_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural26_EMINFO;
785705     where DATA='Neural26' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural26' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
785706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL26_EMINFO.
      WHERE (DATA='Neural26') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

785707     data EMWS8.Neural26_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural26_EMINFO;
785708     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
785709     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
785710     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
785714     run;
785715     data EMWS8.Neural26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural26_EMINFO;
785716     set EMWS8.Neural26_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural26_EMINFO WORK.MODELTEMP_INFO;
785717     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL26_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL26_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785718     proc sort data = EMWS8.Neural26_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural26_EMINFO NOTHREADS;
785719     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
785720     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL26_EMINFO.
NOTE: The data set EMWS8.NEURAL26_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785721     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
785722     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
785723     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

785724     proc sort data = EMWS8.Neural26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural26_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
785725     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
785726     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL26_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785727     data EMWS8.Neural26_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural26_EMINFO;
785728     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
785729     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
785730     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL26_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

785731     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
785732     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
785733     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
785734     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
      

NOTE: View EMWS8.NEURAL26_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
      
NOTE: View EMWS8.NEURAL26_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
